# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 3E 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD EB 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 4F 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 3
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $ff	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 19 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 4B 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 4B 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 80 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 80 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 80 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 80 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906 00           Ctrl_3 db 0												; Byte de control de propósito general.
 304  8907
 305  8907              ;														DESCRIPCIÓN:
 306  8907              ;
 307  8907              ;														BIT 0,
 308  8907
 309  8907              ; Gestión de ENTIDADES y CAJAS.
 310  8907
 311  8907 00 00        Puntero_store_caja defw 0
 312  8909 00 00        Puntero_restore_caja defw 0
 313  890B 00 00        Indice_restore_caja defw 0
 314  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890E 00           Numero_parcial_de_entidades db 0
 316  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8911              ;														; _ (Numero_de_malotes)="0".
 321  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8915              ;														; _ puntero (Indice_entidades).
 324  8915
 325  8915
 326  8915              ;---------------------------------------------------------------------------------------------------------------
 327  8915              ;
 328  8915              ;	2/9/23
 329  8915              ;
 330  8915              ;	Álbumes.
 331  8915
 332  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8917              ;														; _variable para almacenar lo posición del puntero_
 334  8917              ; 														; _de pila, SP.
 335  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891B 00 00        Stack_snapshot defw 0
 339  891D 00 00        Stack_snapshot_disparos defw 0
 340  891F
 341  891F 00 00        End_Snapshot defw 0
 342  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8923              ;														; _el snapshot de los registros del siguiente disparo.
 345  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8925 00 00        End_Snapshot_1 defw 0
 348  8927 00 00        End_Snapshot_disparos_1 defw 0
 349  8929 00 00        End_Snapshot_2 defw 0
 350  892B 00 00        End_Snapshot_disparos_2 defw 0
 351  892D 00 00        End_Snapshot_3 defw 0
 352  892F 00 00        End_Snapshot_disparos_3 defw 0
 353  8931
 354  8931 00 00        Puntero_indice_album_de_fotos defw 0
 355  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8935
 357  8935 00 00        Puntero_indice_End_Snapshot defw 0
 358  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8939 00 00        Puntero_de_End_Snapshot defw 0
 360  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893D
 362  893D              ;---------------------------------------------------------------------------------------------------------------
 363  893D
 364  893D              ; Gestión de Disparos.
 365  893D
 366  893D 00           Numero_de_disparotes db 0
 367  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 368  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 369  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 370  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 371  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 372  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 373  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 374  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 375  8945              ;														; _produzca colisión.
 376  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 377  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 378  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 379  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 380  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 381  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 382  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 383  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 384  8950
 385  8950              ;---------------------------------------------------------------------------------------------------------------
 386  8950
 387  8950              ; Relojes y temporizaciones.
 388  8950
 389  8950 00           Contador_de_frames db 0
 390  8951 00           Contador_de_frames_2 db 0
 391  8952
 392  8952 04           Clock_explosion db 4
 393  8953 1E           Clock_Entidades_en_curso db 30
 394  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 395  8955              ;														; Repite la oleada de entidades.
 396  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 397  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 398  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 399  8958
 400  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 401  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 402  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 403  895B
 404  895B              ;---------------------------------------------------------------------------------------------------------------
 405  895B
 406  895B              ; Gestión de NIVELES.
 407  895B
 408  895B 00           Nivel db 0												; Nivel actual del juego.
 409  895C 00 00        Puntero_indice_NIVELES defw 0
 410  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 411  8960              ; 														; _ que definen el NIVEL.
 412  8960              ; Y todo comienza aquí .....
 413  8960              ;
 414  8960              ; Rutina principal *************************************************************************************************************************************************************************
 415  8960              ;
 416  8960              ;	14/11/22
 417  8960
 418  8960              START
 419  8960
 420  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 421  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 422  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 423  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 424  8969 F3           	DI
 425  896A
 426  896A 3E 07        	ld a,%00000111
 427  896C CD 78 99     	call Cls
 428  896F
 429  896F CD 59 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 430  8972
 431  8972              ; INICIALIZACIÓN.
 432  8972
 433  8972 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 434  8975
 435  8975 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 436  8978
 437  8978 CD 84 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 438  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 439  897B CD 9A 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 440  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 441  897E              ; ----------
 442  897E
 443  897E CD 09 8D     	call Restore_entidad
 444  8981
 445  8981 21 0E 89     	ld hl,Numero_parcial_de_entidades
 446  8984 46           	ld b,(hl)
 447  8985 04           	inc b
 448  8986 05           	dec b
 449  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 450  8989
 451  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 452  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 453  8989              ;	Pintamos el resto de entidades:
 454  8989
 455  8989              ;	INICIA ENTIDADES !!!!!
 456  8989
 457  8989 C5           1 push bc  												; Guardo el contador de entidades.
 458  898A CD 52 8B     	call Inicia_entidad
 459  898D C1           	pop bc
 460  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 461  8990
 462  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 463  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 464  8990
 465  8990 3A 03 89     	ld a,(Ctrl_1)
 466  8993 CB 5F        	bit 3,a
 467  8995 20 00        	jr nz,5F											; Loop
 468  8997
 469  8997              ; 	INICIA AMADEUS !!!!!
 470  8997
 471  8997              3
 472  8997
 473  8997              ;	call Restore_Amadeus
 474  8997              ;	call Inicia_Puntero_objeto
 475  8997              ;	call Draw
 476  8997              ;	call Guarda_foto_registros
 477  8997              ;	call Guarda_datos_de_borrado_Amadeus
 478  8997
 479  8997              ;	ld de,Amadeus_db
 480  8997              ;	call Store_Amadeus
 481  8997
 482  8997              ; 	INICIA DISPAROS !!!!!
 483  8997
 484  8997              ;	call Inicia_Puntero_Disparo_Entidades
 485  8997              ;	call Inicia_Puntero_Disparo_Amadeus
 486  8997
 487  8997              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 488  8997
 489  8997 CD 84 8B     5 call Inicia_punteros_de_cajas
 490  899A CD 09 8D     	call Restore_entidad
 491  899D
 492  899D 3A 03 89     	ld a,(Ctrl_1)
 493  89A0 CB 5F        	bit 3,a
 494  89A2 28 07        	jr z,6F
 495  89A4
 496  89A4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 497  89A4
 498  89A4 21 03 89     	ld hl,Ctrl_1
 499  89A7 CB 9E        	res 3,(hl)
 500  89A9 18 03        	jr Main
 501  89AB
 502  89AB
 503  89AB              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 504  89AB              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 505  89AB              ; _ para situarnos en el siguiente album.
 506  89AB
 507  89AB CD CB 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 508  89AE
 509  89AE
 510  89AE              ; ------------------------------------
 511  89AE
 512  89AE              Main
 513  89AE              ;
 514  89AE              ;	3/8/23
 515  89AE
 516  89AE FB            	ei
 517  89AF
 518  89AF 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 519  89B2 47           	ld b,a
 520  89B3 3A 50 89     	ld a,(Contador_de_frames)
 521  89B6 B8           	cp b
 522  89B7 20 18        	jr nz,13F
 523  89B9
 524  89B9 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 525  89BC 47           	ld b,a
 526  89BD 3A 0F 89     	ld a,(Entidades_en_curso)
 527  89C0 B8           	cp b
 528  89C1 28 0E        	jr z,13F
 529  89C3 30 0C        	jr nc,13F
 530  89C5
 531  89C5 3C           	inc a
 532  89C6 32 0F 89     	ld (Entidades_en_curso),a
 533  89C9
 534  89C9 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 535  89CC
 536  89CC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 537  89CC              ;! _ IMPREDECIBLE !!!!
 538  89CC
 539  89CC C6 64        	add 100
 540  89CE 32 53 89     	ld (Clock_Entidades_en_curso),a
 541  89D1
 542  89D1              ; Habilita disparos.
 543  89D1
 544  89D1 21 55 89     13 ld hl,Disparo_Amadeus
 545  89D4 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 546  89D7 CD 3C 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 547  89DA
 548  89DA 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 549  89DD 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 550  89E0 CD 3C 9D     	call Habilita_disparos
 551  89E3
 552  89E3              ; COLISIONES.
 553  89E3
 554  89E3 CD 4D 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 555  89E6
 556  89E6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 557  89E6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 558  89E6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 559  89E6
 560  89E6 AF           	xor a
 561  89E7 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 562  89EA
 563  89EA CD 84 8B     	call Inicia_punteros_de_cajas
 564  89ED CD 09 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 565  89F0              ; 														; _ en DRAW.
 566  89F0 3A C6 88     	ld a,(Filas)
 567  89F3 A7           	and a
 568  89F4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 569  89F6 CD 1B 8D     	call Incrementa_punteros_de_cajas
 570  89F9 18 F2        	jr 12B
 571  89FB
 572  89FB              ; ---------------------------------------------------------------------------------------
 573  89FB
 574  89FB 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 575  89FE 47               ld b,a
 576  89FF A7           	and a
 577  8A00 20 14        	jr nz,11F
 578  8A02
 579  8A02 21 03 89     	ld hl,Ctrl_1
 580  8A05 CB 66        	bit 4,(hl)
 581  8A07 C2 97 8A     	jp nz,16F
 582  8A0A
 583  8A0A 21 03 89     	ld hl,Ctrl_1
 584  8A0D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 585  8A0F
 586  8A0F 3A 50 89     	ld a,(Contador_de_frames)
 587  8A12 3C           	inc a
 588  8A13 32 54 89     	ld (Activa_recarga_cajas),a
 589  8A16
 590  8A16              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 591  8A16
 592  8A16 3A 0F 89     11 ld a,(Entidades_en_curso)
 593  8A19 A7           	and a
 594  8A1A CA 97 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 595  8A1D 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 596  8A1E
 597  8A1E              ; Código que ejecutamos con cada entidad:
 598  8A1E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 599  8A1E
 600  8A1E C5           15 push bc 												; Nº de entidades en curso.
 601  8A1F
 602  8A1F              ; Impacto ???
 603  8A1F
 604  8A1F 3A DF 88     	ld a,(Impacto)
 605  8A22 A7           	and a
 606  8A23 28 32        	jr z,8F
 607  8A25
 608  8A25              ; Hay Impacto en esta entidad.
 609  8A25
 610  8A25 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 611  8A28 35           	dec (hl)
 612  8A29 20 66        	jr nz,17F
 613  8A2B
 614  8A2B              ;! Velocidad de la animación de la explosión.
 615  8A2B
 616  8A2B 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 617  8A2D              ;														; _,(velocidad de la explosión).
 618  8A2D
 619  8A2D              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 620  8A2D 18 FE        	jr $
 621  8A2F
 622  8A2F CD DA 8D     	call Repone_datos_de_borrado
 623  8A32 CD 22 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 624  8A35
 625  8A35
 626  8A35              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 627  8A35
 628  8A35 3A 01 89     	ld a,(Ctrl_2)
 629  8A38 CB 4F        	bit 1,a
 630  8A3A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 631  8A3C
 632  8A3C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 633  8A3C
 634  8A3C 3A CE 88     	ld a,(CTRL_DESPLZ)
 635  8A3F A7           	and a
 636  8A40 20 08        	jr nz,18F
 637  8A42
 638  8A42 21 84 84     	ld hl,Indice_Explosion_2x2-2
 639  8A45 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 640  8A48 18 06        	jr 19F
 641  8A4A
 642  8A4A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 643  8A4D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 644  8A50
 645  8A50 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 646  8A53 CB CE        	set 1,(hl)
 647  8A55 18 22        	jr 7F
 648  8A57
 649  8A57              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 650  8A57              ; _con las coordenadas de la entidad almacenada en DRAW.
 651  8A57
 652  8A57 3A 03 89     8 ld a,(Ctrl_1)
 653  8A5A CB 57        	bit 2,a
 654  8A5C 28 1B        	jr z,7F
 655  8A5E
 656  8A5E 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 657  8A61 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 658  8A62              ;														; E contiene la coordenada_X del disparo.
 659  8A62 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 660  8A65              ;														; H FILA, (Coordenada_y de la entidad).
 661  8A65 A7           	and a
 662  8A66 ED 52        	sbc hl,de
 663  8A68
 664  8A68 CD 84 92     	call Determina_resultado_comparativa
 665  8A6B
 666  8A6B 78           	ld a,b
 667  8A6C A7           	and a
 668  8A6D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 669  8A6F
 670  8A6F              ; ----- ----- -----
 671  8A6F
 672  8A6F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 673  8A71 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 674  8A74
 675  8A74 21 03 89     	ld hl,Ctrl_1
 676  8A77 CB 96        	res 2,(hl)
 677  8A79
 678  8A79 CD EE 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 679  8A7C
 680  8A7C 3A F0 88     	ld a,(Ctrl_0)
 681  8A7F CB 67        	bit 4,a
 682  8A81 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 683  8A83
 684  8A83              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 685  8A83              ; [[[
 686  8A83 CD A4 8D     	call Detecta_disparo_entidad
 687  8A86              ; ]]]
 688  8A86
 689  8A86 CD 65 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 690  8A89 CD AA 8D     	call Guarda_datos_de_borrado
 691  8A8C
 692  8A8C 21 F0 88     	ld hl,Ctrl_0
 693  8A8F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 694  8A91
 695  8A91 CD CE 8C     17 call Store_Restore_cajas
 696  8A94
 697  8A94 C1           	pop bc
 698  8A95 10 87        	djnz 15B
 699  8A97
 700  8A97              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 701  8A97              ; Hemos gestionado todas las unidades.
 702  8A97              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 703  8A97
 704  8A97              ;	ld hl,Ctrl_1
 705  8A97              ;	res 2,(hl)
 706  8A97
 707  8A97 CD CB 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 708  8A9A              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 709  8A9A              ;														; _ interrupción.
 710  8A9A              ; ----------------------------------------
 711  8A9A
 712  8A9A 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 713  8A9D CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 714  8A9F CA AE 89     	jp z,Main
 715  8AA2
 716  8AA2 3A 50 89     	ld a,(Contador_de_frames)
 717  8AA5 47           	ld b,a
 718  8AA6 3A 54 89     	ld a,(Activa_recarga_cajas)
 719  8AA9 B8           	cp b
 720  8AAA 28 08        	jr z,20F
 721  8AAC
 722  8AAC 21 03 89     	ld hl,Ctrl_1
 723  8AAF CB E6        	set 4,(hl)
 724  8AB1 C3 AE 89     	jp Main
 725  8AB4
 726  8AB4 21 03 89     20 ld hl,Ctrl_1
 727  8AB7 CB A6        	res 4,(hl)
 728  8AB9
 729  8AB9 3A 50 89     	ld a,(Contador_de_frames)
 730  8ABC
 731  8ABC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 732  8ABC              ;! _ IMPREDECIBLE !!!!
 733  8ABC
 734  8ABC C6 0A        	add 10
 735  8ABE 32 53 89     	ld (Clock_Entidades_en_curso),a
 736  8AC1
 737  8AC1 C3 75 89     	jp 4B
 738  8AC4
 739  8AC4 C9           	ret
 740  8AC5
 741  8AC5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 742  8AC5
 743  8AC5              Gestiona_Amadeus
 744  8AC5
 745  8AC5 3E 04            ld a,4
 746  8AC7 D3 FE        	out ($fe),a											; Azul.
 747  8AC9
 748  8AC9 CD 30 8D     	call Restore_Amadeus
 749  8ACC
 750  8ACC              ;! Activa/desactiva impacto con Amadeus.
 751  8ACC
 752  8ACC 3A DF 88     	ld a,(Impacto)
 753  8ACF A7           	and a
 754  8AD0 20 FE        	jr nz,$
 755  8AD2
 756  8AD2 CD 3F 8B     	call Mov_Amadeus
 757  8AD5
 758  8AD5 3A F0 88     	ld a,(Ctrl_0)
 759  8AD8 CB 67        	bit 4,a
 760  8ADA 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 761  8ADC
 762  8ADC CD 65 8B     	call Guarda_foto_entidad_a_pintar
 763  8ADF CD BA 8D     	call Guarda_datos_de_borrado_Amadeus
 764  8AE2
 765  8AE2 21 F0 88     14 ld hl,Ctrl_0
 766  8AE5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 767  8AE7
 768  8AE7 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 769  8AEA CD 42 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 770  8AED
 771  8AED              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 772  8AED
 773  8AED              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 774  8AED
 775  8AED              ;	call Calcula_numero_de_disparotes
 776  8AED
 777  8AED C9           	ret
 778  8AEE
 779  8AEE              ; --------------------------------------------------------------------------------------------------------------
 780  8AEE              ;
 781  8AEE              ;	27/05/23
 782  8AEE
 783  8AEE              Mov_obj
 784  8AEE
 785  8AEE 3A 01 89     	ld a,(Ctrl_2)
 786  8AF1 CB 4F        	bit 1,a
 787  8AF3 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 788  8AF5
 789  8AF5              ; Explosión:
 790  8AF5
 791  8AF5 3A 02 89     	ld a,(Frames_explosion)
 792  8AF8 A7           	and a
 793  8AF9 20 11        	jr nz,4F
 794  8AFB
 795  8AFB              ; Una alimaña menos!!!!!!!!!1
 796  8AFB
 797  8AFB CD 4B 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 798  8AFE 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 799  8B01 35           	dec (hl)
 800  8B02 21 0F 89     	ld hl,Entidades_en_curso
 801  8B05 35           	dec (hl)
 802  8B06 21 0D 89     	ld hl,Numero_de_entidades
 803  8B09 35           	dec (hl)
 804  8B0A 18 32        	jr 3F
 805  8B0C
 806  8B0C              ; -----
 807  8B0C
 808  8B0C              ;	`Movemos´ la explosión.
 809  8B0C
 810  8B0C 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 811  8B0F 23           	inc hl
 812  8B10 23           	inc hl
 813  8B11 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 814  8B14 CD 80 8C     	call Extrae_address
 815  8B17 22 CA 88     	ld (Puntero_objeto),hl
 816  8B1A
 817  8B1A 21 02 89     	ld hl,Frames_explosion
 818  8B1D 35           	dec (hl)
 819  8B1E
 820  8B1E              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 821  8B1E 18 1E        	jr 3F
 822  8B20
 823  8B20 AF           2 xor a
 824  8B21 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 825  8B24
 826  8B24              ; Movemos Entidades malignas.
 827  8B24
 828  8B24 CD E7 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 829  8B27
 830  8B27 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 831  8B2A CB 67        	bit 4,a
 832  8B2C C8           	ret z
 833  8B2D
 834  8B2D              ; Ha habido desplazamiento de la entidad maligna.
 835  8B2D              ; Ha llegado a zona de AMADEUS ???
 836  8B2D
 837  8B2D 3A CD 88     	ld a,(Coordenada_y)
 838  8B30 FE 14        	cp $14
 839  8B32 D4 12 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 840  8B35              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 841  8B35              ; ---------
 842  8B35
 843  8B35 CD 6C 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 844  8B38 CD DA 8D     	call Repone_datos_de_borrado
 845  8B3B CD 22 8C     	call Limpia_Variables_de_borrado
 846  8B3E
 847  8B3E C9           3 ret													; _de la misma.
 848  8B3F
 849  8B3F              ; --------------------------------------------------------------------------------------------------------------
 850  8B3F              ;
 851  8B3F              ;	29/1/23
 852  8B3F
 853  8B3F              Mov_Amadeus
 854  8B3F
 855  8B3F CD 6D 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 856  8B42
 857  8B42 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 858  8B45 CB 67        	bit 4,a
 859  8B47 C8           	ret z
 860  8B48
 861  8B48              ; ---------
 862  8B48
 863  8B48 CD 6C 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 864  8B4B CD CA 8D     	call Repone_datos_de_borrado_Amadeus
 865  8B4E CD 22 8C     	call Limpia_Variables_de_borrado
 866  8B51
 867  8B51 C9           	ret
 868  8B52
 869  8B52              ; -----------------------------------------------------------------------------------
 870  8B52
 871  8B52 CD 86 8C     Inicia_entidad	call Inicia_Puntero_objeto
 872  8B55 CD 8C 99     	call Recompone_posicion_inicio
 873  8B58 CD 6B 93     	call Draw
 874  8B5B CD A0 7F     	call Guarda_foto_registros
 875  8B5E CD AA 8D     	call Guarda_datos_de_borrado
 876  8B61 CD CE 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 877  8B64 C9           	ret
 878  8B65
 879  8B65              ; --------------------------------------------------------------------------------------------------------------
 880  8B65              ;
 881  8B65              ;	31/08/23
 882  8B65              ;
 883  8B65              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 884  8B65              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 885  8B65
 886  8B65              Guarda_foto_entidad_a_pintar
 887  8B65
 888  8B65              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 889  8B65
 890  8B65 CD 6B 93     	call Draw
 891  8B68 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 892  8B6B C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 893  8B6C
 894  8B6C              ; --------------------------------------------------------------------------------------------------------------
 895  8B6C              ;
 896  8B6C              ;	19/9/23
 897  8B6C
 898  8B6C 21 C6 88     Prepara_var_pintado ld hl,Filas
 899  8B6F 11 E6 88     	ld de,Variables_de_pintado
 900  8B72 01 08 00     	ld bc,8
 901  8B75 ED B0        	ldir
 902  8B77 C9           	ret
 903  8B78
 904  8B78              ; --------------------------------------------------------------------------------------------------------------
 905  8B78
 906  8B78 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 907  8B7B 11 C6 88     	ld de,Filas
 908  8B7E 01 08 00     	ld bc,8
 909  8B81 ED B0        	ldir
 910  8B83 C9           	ret
 911  8B84
 912  8B84              ; *************************************************************************************************************************************************************
 913  8B84              ;
 914  8B84              ; 8/1/23
 915  8B84              ;
 916  8B84              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 917  8B84              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 918  8B84              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 919  8B84
 920  8B84              ; Destruye HL y DE !!!!!
 921  8B84
 922  8B84              Inicia_punteros_de_cajas
 923  8B84
 924  8B84 21 8C 85     	ld hl,Indice_de_cajas
 925  8B87 CD 80 8C         call Extrae_address
 926  8B8A 22 07 89         ld (Puntero_store_caja),hl
 927  8B8D 21 8E 85     	ld hl,Indice_de_cajas+2
 928  8B90 22 0B 89     	ld (Indice_restore_caja),hl
 929  8B93 CD 80 8C     	call Extrae_address
 930  8B96 22 09 89     	ld (Puntero_restore_caja),hl
 931  8B99 C9               ret
 932  8B9A
 933  8B9A              ; ---------------------------------------------------------------
 934  8B9A              ;
 935  8B9A              ;	9/8/23
 936  8B9A              ;
 937  8B9A              ;	Inicialización y gestión de álbumes de fotos y cajas.
 938  8B9A
 939  8B9A              Inicia_punteros_de_albumes_y_malotes
 940  8B9A
 941  8B9A 21 EC 84     	ld hl,Indice_album_de_fotos
 942  8B9D 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 943  8BA0 CD 80 8C     	call Extrae_address
 944  8BA3 22 1B 89     	ld (Stack_snapshot),hl
 945  8BA6
 946  8BA6 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 947  8BA9 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 948  8BAC CD 80 8C     	call Extrae_address
 949  8BAF 22 1D 89     	ld (Stack_snapshot_disparos),hl
 950  8BB2
 951  8BB2 21 FC 84     	ld hl,Indice_End_Snapshot
 952  8BB5 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 953  8BB8 CD 80 8C     	call Extrae_address
 954  8BBB 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 955  8BBE
 956  8BBE 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 957  8BC1 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 958  8BC4 CD 80 8C     	call Extrae_address
 959  8BC7 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 960  8BCA
 961  8BCA C9           	ret
 962  8BCB
 963  8BCB              ;	23/9/23
 964  8BCB
 965  8BCB              Avanza_puntero_de_album_de_fotos_y_malotes
 966  8BCB
 967  8BCB              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 968  8BCB
 969  8BCB              ; Estamos en el último álbum del índice???.
 970  8BCB
 971  8BCB 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 972  8BCE 01 F2 84     	ld bc,Indice_album_de_fotos+6
 973  8BD1 A7           	and a
 974  8BD2 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 975  8BD4 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 976  8BD6
 977  8BD6 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 978  8BD9 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 979  8BDB 76           	halt
 980  8BDC C9           	ret
 981  8BDD
 982  8BDD 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
 983  8BE0 23           	inc hl
 984  8BE1 23           	inc hl
 985  8BE2 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 986  8BE5 CD 80 8C     	call Extrae_address
 987  8BE8 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 988  8BEB
 989  8BEB 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
 990  8BEE 23           	inc hl
 991  8BEF 23           	inc hl
 992  8BF0 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 993  8BF3 CD 80 8C     	call Extrae_address
 994  8BF6 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 995  8BF9
 996  8BF9 C9           	ret
 997  8BFA
 998  8BFA              ; *************************************************************************************************************************************************************
 999  8BFA              ;
1000  8BFA              ; 8/1/23
1001  8BFA              ;
1002  8BFA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1003  8BFA
1004  8BFA 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1005  8BFD 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1006  8C00 C9           	ret
1007  8C01 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1008  8C04 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1009  8C07 C9           	ret
1010  8C08
1011  8C08              ; -------------------------------------------------------------------------------------------------------------
1012  8C08              ;
1013  8C08              ; 21/9/23
1014  8C08              ;
1015  8C08
1016  8C08              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1017  8C08
1018  8C08              Limpia_album_Amadeus
1019  8C08
1020  8C08 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1021  8C0B 7E           	ld a,(hl)
1022  8C0C A7           	and a
1023  8C0D C8           	ret z
1024  8C0E
1025  8C0E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1026  8C11 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1027  8C14 01 0B 00     	ld bc,11
1028  8C17 AF           	xor a
1029  8C18 77           	ld (hl),a
1030  8C19 ED B0        	ldir
1031  8C1B
1032  8C1B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1033  8C1E 22 23 89     	ld (End_Snapshot_Amadeus),hl
1034  8C21
1035  8C21 C9           	ret
1036  8C22
1037  8C22 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1038  8C25 11 E1 88     	ld de,Variables_de_borrado+1
1039  8C28 01 05 00     	ld bc,5
1040  8C2B AF           	xor a
1041  8C2C 77           	ld (hl),a
1042  8C2D ED B0        	ldir
1043  8C2F C9           	ret
1044  8C30
1045  8C30              ; -------------------------------------------------------------------------------------------------------------
1046  8C30              ;
1047  8C30              ; 8/9/23
1048  8C30              ;
1049  8C30
1050  8C30              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1051  8C30              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1052  8C30
1053  8C30              Calcula_numero_de_malotes
1054  8C30
1055  8C30 21 00 70     	ld hl,Album_de_fotos
1056  8C33 EB           	ex de,hl
1057  8C34 2A 1F 89     	ld hl,(End_Snapshot)
1058  8C37
1059  8C37 7C           	ld a,h
1060  8C38 A7           	and a
1061  8C39 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1062  8C3B
1063  8C3B 06 00        4 ld b,0
1064  8C3D 7D           	ld a,l
1065  8C3E 93           	sub e
1066  8C3F 28 07        	jr z,1F
1067  8C41
1068  8C41              ; Nº de malotes no es "0".
1069  8C41
1070  8C41 D6 06        2 sub 6
1071  8C43 04           	inc b
1072  8C44 A7           	and a
1073  8C45 20 FA        	jr nz,2B
1074  8C47 78           	ld a,b
1075  8C48
1076  8C48 32 10 89     1 ld (Numero_de_malotes),a
1077  8C4B C9           	ret
1078  8C4C
1079  8C4C              ; -------------------------------------------------------------------------------------------------------------
1080  8C4C              ;
1081  8C4C              ; 8/9/23
1082  8C4C              ;
1083  8C4C
1084  8C4C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1085  8C4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1086  8C4C
1087  8C4C              Calcula_malotes_Amadeus
1088  8C4C
1089  8C4C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1090  8C4F EB           	ex de,hl
1091  8C50 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1092  8C53
1093  8C53 7C           	ld a,h
1094  8C54 A7           	and a
1095  8C55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1096  8C57
1097  8C57 06 00        	ld b,0
1098  8C59 7D           	ld a,l
1099  8C5A 93           	sub e
1100  8C5B 28 07        	jr z,1F
1101  8C5D
1102  8C5D              ; Nº de malotes no es "0".
1103  8C5D
1104  8C5D D6 06        2 sub 6
1105  8C5F 04           	inc b
1106  8C60 A7           	and a
1107  8C61 20 FA        	jr nz,2B
1108  8C63 78           	ld a,b
1109  8C64
1110  8C64 32 10 89     1 ld (Numero_de_malotes),a
1111  8C67 C9           	ret
1112  8C68
1113  8C68              ; -------------------------------------------------------------------------------------------------------------
1114  8C68              ;
1115  8C68              ; 28/2/23
1116  8C68              ;
1117  8C68
1118  8C68              Calcula_numero_de_disparotes
1119  8C68
1120  8C68 21 50 71     	ld hl,Album_de_fotos_disparos
1121  8C6B EB           	ex de,hl
1122  8C6C 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1123  8C6F
1124  8C6F 06 00        	ld b,0
1125  8C71 7D           	ld a,l
1126  8C72 93           	sub e
1127  8C73 28 07        	jr z,1F
1128  8C75
1129  8C75              ; Nº de malotes no es "0".
1130  8C75
1131  8C75 D6 06        2 sub 6
1132  8C77 04           	inc b
1133  8C78 A7           	and a
1134  8C79 20 FA        	jr nz,2B
1135  8C7B 78           	ld a,b
1136  8C7C
1137  8C7C 32 3D 89     1 ld (Numero_de_disparotes),a
1138  8C7F C9           	ret
1139  8C80
1140  8C80              ; *************************************************************************************************************************************************************
1141  8C80              ;
1142  8C80              ; 20/10/22
1143  8C80              ;
1144  8C80              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1145  8C80              ;
1146  8C80              ; Destruye el puntero y DE !!!!!
1147  8C80
1148  8C80 5E           Extrae_address ld e,(hl)
1149  8C81 23           	inc hl
1150  8C82 56           	ld d,(hl)
1151  8C83 2B           	dec hl
1152  8C84 EB           	ex de,hl
1153  8C85 C9           	ret
1154  8C86
1155  8C86              ; *************************************************************************************************************************************************************
1156  8C86              ;
1157  8C86              ;	7/2/23
1158  8C86              ;
1159  8C86              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1160  8C86              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1161  8C86              ;
1162  8C86              ;   Destruye HL y BC !!!!!,
1163  8C86              ;
1164  8C86              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1165  8C86              ;					"0" ..... Izquierda.
1166  8C86
1167  8C86              Inicia_Puntero_objeto
1168  8C86
1169  8C86 3A DA 88     	ld a,(Cuad_objeto)
1170  8C89 E6 01        	and 1
1171  8C8B F5           	push af
1172  8C8C CC AA 8C     	call z,Inicia_puntero_objeto_izq
1173  8C8F F1           	pop af
1174  8C90 28 2B        	jr z,1F
1175  8C92 CD 97 8C     	call Inicia_puntero_objeto_der
1176  8C95 18 26        	jr 1F
1177  8C97
1178  8C97              ; Arrancamos desde la parte izquierda de la pantalla.
1179  8C97              ; Iniciamos (Indice_Sprite_der).
1180  8C97
1181  8C97 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1182  8C9A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1183  8C9D CD 80 8C     	call Extrae_address
1184  8CA0 22 CA 88     	ld (Puntero_objeto),hl
1185  8CA3
1186  8CA3 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1187  8CA6 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1188  8CA9 C9           	ret
1189  8CAA
1190  8CAA              ; Arrancamos desde la parte derecha de la pantalla.
1191  8CAA              ; Iniciamos (Indice_Sprite_izq).
1192  8CAA
1193  8CAA 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1194  8CAD 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1195  8CB0 CD 80 8C     	call Extrae_address
1196  8CB3 22 CA 88     	ld (Puntero_objeto),hl
1197  8CB6
1198  8CB6 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1199  8CB9 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1200  8CBC C9           	ret
1201  8CBD
1202  8CBD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1203  8CBD
1204  8CBD 21 40 83     1 ld hl,Amadeus
1205  8CC0 ED 4B CA 88  	ld bc,(Puntero_objeto)
1206  8CC4 B7 ED 42     	sub hl,bc
1207  8CC7 C0           	ret nz
1208  8CC8 21 F0 88     	ld hl,Ctrl_0
1209  8CCB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1210  8CCD C9           	ret 												; _de nuestra nave en los extremos.
1211  8CCE
1212  8CCE              ; *************************************************************************************************************************************************************
1213  8CCE              ;
1214  8CCE              ;	14/5/23
1215  8CCE              ;
1216  8CCE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1217  8CCE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1218  8CCE
1219  8CCE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1220  8CCE              ;	_de la 2ª y 3ª entidad respectivamente.
1221  8CCE
1222  8CCE              Store_Restore_cajas
1223  8CCE
1224  8CCE E5           	push hl
1225  8CCF D5           	push de
1226  8CD0 C5            	push bc
1227  8CD1
1228  8CD1              ;	STORE !!!!!
1229  8CD1              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1230  8CD1
1231  8CD1 21 C6 88     	ld hl,Filas
1232  8CD4 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1233  8CD8 01 3D 00     	ld bc,61
1234  8CDB ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1235  8CDD
1236  8CDD              ; 	Entidad_sospechosa. 20/4/23
1237  8CDD
1238  8CDD 3A DF 88     	ld a,(Impacto)
1239  8CE0 A7           	and a
1240  8CE1 28 0C        	jr z,1F
1241  8CE3
1242  8CE3 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1243  8CE6 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1244  8CE9 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1245  8CEA ED 4A        	adc hl,bc 											; _ "0" más adelante.
1246  8CEC 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1247  8CEF
1248  8CEF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1249  8CEF
1250  8CEF 2A 09 89     1 ld hl,(Puntero_restore_caja)
1251  8CF2 7E           	ld a,(hl)
1252  8CF3 A7           	and a
1253  8CF4 F5           	push af
1254  8CF5 28 08        	jr z,2F
1255  8CF7
1256  8CF7 11 C6 88     	ld de,Filas
1257  8CFA 01 3D 00     	ld bc,61
1258  8CFD ED B0        	ldir
1259  8CFF
1260  8CFF CD 1B 8D     2 call Incrementa_punteros_de_cajas
1261  8D02
1262  8D02 F1           	pop af
1263  8D03 28 EA        	jr z,1B
1264  8D05
1265  8D05 C1           	pop bc
1266  8D06 D1           	pop de
1267  8D07 E1           	pop hl
1268  8D08
1269  8D08 C9           	ret
1270  8D09
1271  8D09              ; **************************************************************************************************
1272  8D09              ;
1273  8D09              ;	12/05/23
1274  8D09              ;
1275  8D09              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1276  8D09
1277  8D09 E5           Restore_entidad push hl
1278  8D0A D5           	push de
1279  8D0B C5            	push bc
1280  8D0C
1281  8D0C 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1282  8D0F 11 C6 88     	ld de,Filas
1283  8D12 01 3D 00     	ld bc,61
1284  8D15 ED B0        	ldir
1285  8D17
1286  8D17 C1           	pop bc
1287  8D18 D1           	pop de
1288  8D19 E1           	pop hl
1289  8D1A C9           	ret
1290  8D1B
1291  8D1B              ; **************************************************************************************************
1292  8D1B              ;
1293  8D1B              ;	08/05/23
1294  8D1B              ;
1295  8D1B              ;	Incrementamos los dos punteros de entidades. (+1).
1296  8D1B
1297  8D1B              Incrementa_punteros_de_cajas
1298  8D1B
1299  8D1B 2A 09 89     	ld hl,(Puntero_restore_caja)
1300  8D1E 22 07 89     	ld (Puntero_store_caja),hl
1301  8D21 2A 0B 89     	ld hl,(Indice_restore_caja)
1302  8D24 23           	inc hl
1303  8D25 23           	inc hl
1304  8D26 22 0B 89     	ld (Indice_restore_caja),hl
1305  8D29 CD 80 8C         call Extrae_address
1306  8D2C 22 09 89         ld (Puntero_restore_caja),hl
1307  8D2F C9               ret
1308  8D30
1309  8D30              ; **************************************************************************************************
1310  8D30              ;
1311  8D30              ;	25/01/23
1312  8D30              ;
1313  8D30              ;	Restore_Amadeus
1314  8D30              ;
1315  8D30              ;	Cargamos en DRAW los parámetros de Amadeus.
1316  8D30              ;
1317  8D30
1318  8D30 E5           Restore_Amadeus	push hl
1319  8D31 D5           	push de
1320  8D32 C5            	push bc
1321  8D33 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1322  8D36 11 C6 88     	ld de,Filas
1323  8D39 01 3D 00     	ld bc,61
1324  8D3C ED B0        	ldir
1325  8D3E C1           	pop bc
1326  8D3F D1           	pop de
1327  8D40 E1           	pop hl
1328  8D41 C9           	ret
1329  8D42
1330  8D42              ; *************************************************************************************************************************************************************
1331  8D42              ;
1332  8D42              ;	29/04/23
1333  8D42              ;
1334  8D42              ;	Store_Amadeus
1335  8D42              ;
1336  8D42              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1337  8D42              ;
1338  8D42              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1339  8D42              ;
1340  8D42              ;	DESTRUYE: HL y BC y DE.
1341  8D42
1342  8D42 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1343  8D45 01 3D 00     	ld bc,61
1344  8D48 ED B0        	ldir
1345  8D4A C9           	ret
1346  8D4B
1347  8D4B              ; -----------------------------------------------------------
1348  8D4B              ;
1349  8D4B              ;	27/04/23
1350  8D4B              ;
1351  8D4B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1352  8D4B              ;
1353  8D4B              ;	Destruye: HL,BC,DE,A
1354  8D4B
1355  8D4B 21 C6 88     Borra_datos_entidad ld hl,Filas
1356  8D4E 01 3C 00     	ld bc,60
1357  8D51 AF           	xor a
1358  8D52 77           	ld (hl),a
1359  8D53 11 C7 88     	ld de,Filas+1
1360  8D56 ED B0        	ldir
1361  8D58 C9           	ret
1362  8D59
1363  8D59              ; -----------------------------------------------------------
1364  8D59
1365  8D59              ; Teclado.
1366  8D59
1367  8D59 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1368  8D5B DB FE        	in a,($fe)
1369  8D5D E6 01        	and $01
1370  8D5F 28 02        	jr z,1f
1371  8D61 18 F6        	jr Pulsa_ENTER
1372  8D63 C9           1 ret
1373  8D64
1374  8D64              ; **************************************************************************************************
1375  8D64              ;
1376  8D64              ; Temporización.
1377  8D64
1378  8D64              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1379  8D64              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1380  8D64              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1381  8D64              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1382  8D64
1383  8D64              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1384  8D64              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1385  8D64              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1386  8D64
1387  8D64              ; A partir de $4f61 no hace falta DELAY.
1388  8D64
1389  8D64              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1390  8D64
1391  8D64 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1392  8D67 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1393  8D68 78           	LD A,B
1394  8D69 A7           	AND A
1395  8D6A 20 FB        	JR NZ,wait
1396  8D6C C9           	RET
1397  8D6D
1398  8D6D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1399  8D6D              ;
1400  8D6D              ;	5/3/23
1401  8D6D              ;
1402  8D6D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1403  8D6D
1404  8D6D              Movimiento_Amadeus
1405  8D6D
1406  8D6D              ; Disparo.
1407  8D6D
1408  8D6D 3A 55 89     	ld a,(Disparo_Amadeus)
1409  8D70 A7           	and a
1410  8D71 20 02        	jr nz,1F
1411  8D73 18 15        	jr 2F
1412  8D75
1413  8D75 3E F7        1 ld a,$f7													; "5" para disparar.
1414  8D77 DB FE        	in a,($fe)
1415  8D79 E6 10        	and $10
1416  8D7B
1417  8D7B F5           	push af
1418  8D7C CC 75 8E     	call z,Genera_disparo
1419  8D7F F1           	pop af
1420  8D80 20 08        	jr nz,2F
1421  8D82
1422  8D82 3A 55 89     	ld a,(Disparo_Amadeus)
1423  8D85 EE 01        	xor 1
1424  8D87 32 55 89     	ld (Disparo_Amadeus),a
1425  8D8A
1426  8D8A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1427  8D8C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1428  8D8E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1429  8D90 CC 46 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1430  8D93
1431  8D93 3E F7        	ld a,$f7
1432  8D95 DB FE        	in a,($fe)
1433  8D97 E6 01        	and $01
1434  8D99 C8           	ret z
1435  8D9A
1436  8D9A 3E F7        	ld a,$f7
1437  8D9C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1438  8D9E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1439  8DA0 CC 28 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1440  8DA3 C9           	ret
1441  8DA4
1442  8DA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1443  8DA4              ;
1444  8DA4              ;	Rutina provisional para que los malotes cagen balas.
1445  8DA4
1446  8DA4              Detecta_disparo_entidad
1447  8DA4
1448  8DA4 3A 58 89     	ld a,(Disparo_entidad)
1449  8DA7 A7           	and a
1450  8DA8 C8           	ret z
1451  8DA9
1452  8DA9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1453  8DA9
1454  8DA9              ;	ld a,$7f				; Detecta SPACE.
1455  8DA9              ;	in a,($fe)
1456  8DA9              ;	and 1
1457  8DA9              ;	ret nz
1458  8DA9
1459  8DA9              ;	call Genera_disparo
1460  8DA9 C9           	ret
1461  8DAA
1462  8DAA              ; ----------------------------------------------------------------------
1463  8DAA              ;
1464  8DAA              ;	8/9/23
1465  8DAA
1466  8DAA              Guarda_datos_de_borrado
1467  8DAA
1468  8DAA 2A 1B 89     	ld hl,(Stack_snapshot)
1469  8DAD
1470  8DAD 2B           	dec hl
1471  8DAE 7E           	ld a,(hl)
1472  8DAF A7           	and a
1473  8DB0 C8           	ret z										; Salimos si es álbum está vacío.
1474  8DB1
1475  8DB1 11 E5 88     	ld de,Variables_de_borrado+5
1476  8DB4 01 06 00     	ld bc,6
1477  8DB7 ED B8        	lddr
1478  8DB9
1479  8DB9 C9           	ret
1480  8DBA
1481  8DBA              ; ----------------------------------------------------------------------
1482  8DBA              ;
1483  8DBA              ;	8/9/23
1484  8DBA
1485  8DBA 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1486  8DBD 2B            	dec hl
1487  8DBE 7E           	ld a,(hl)
1488  8DBF A7           	and a
1489  8DC0 C8           	ret z										; Salimos si es álbum está vacío.
1490  8DC1
1491  8DC1 11 E5 88     	ld de,Variables_de_borrado+5
1492  8DC4 01 06 00     	ld bc,6
1493  8DC7 ED B8        	lddr
1494  8DC9 C9           	ret
1495  8DCA
1496  8DCA              ; ----------------------------------------------------------------------
1497  8DCA              ;
1498  8DCA              ;	9/9/23
1499  8DCA
1500  8DCA              Repone_datos_de_borrado_Amadeus
1501  8DCA
1502  8DCA 21 E0 88     	ld hl,Variables_de_borrado
1503  8DCD 11 A0 72     	ld de,Album_de_fotos_Amadeus
1504  8DD0 01 06 00     	ld bc,6
1505  8DD3 ED B0        	ldir
1506  8DD5
1507  8DD5 EB           	ex de,hl
1508  8DD6 22 23 89     	ld (End_Snapshot_Amadeus),hl
1509  8DD9
1510  8DD9 C9           	ret
1511  8DDA
1512  8DDA              ; ----------------------------------------------------------------------
1513  8DDA              ;
1514  8DDA              ;	18/9/23
1515  8DDA              ;
1516  8DDA
1517  8DDA              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1518  8DDA              ;	_ Album_de_fotos correspondiente.
1519  8DDA
1520  8DDA              ;	DI.
1521  8DDA
1522  8DDA              Repone_datos_de_borrado
1523  8DDA
1524  8DDA ED 5B 1B 89  	ld de,(Stack_snapshot)
1525  8DDE 21 E0 88     	ld hl,Variables_de_borrado
1526  8DE1 01 06 00     	ld bc,6
1527  8DE4 ED B0        	ldir
1528  8DE6
1529  8DE6 EB           	ex de,hl
1530  8DE7 22 1B 89     	ld (Stack_snapshot),hl
1531  8DEA
1532  8DEA C9           	ret
1533  8DEB
1534  8DEB              ; ----------------------------------------------------------------------
1535  8DEB              ;
1536  8DEB              ;	11/8/23
1537  8DEB
1538  8DEB              Gestiona_entidades
1539  8DEB
1540  8DEB              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1541  8DEB              ; _ , no gestionamos los álbumes de fotos.
1542  8DEB
1543  8DEB 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1544  8DEE 01 EC 84     	ld bc,Indice_album_de_fotos
1545  8DF1 A7           	and a
1546  8DF2 ED 42        	sbc hl,bc
1547  8DF4
1548  8DF4              ;	jr z,$
1549  8DF4 C8           	ret z
1550  8DF5
1551  8DF5              ;	call Extrae_foto_disparos
1552  8DF5              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1553  8DF5
1554  8DF5 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1555  8DF8
1556  8DF8              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1557  8DF8
1558  8DF8 3A 03 89     	ld a,(Ctrl_1)
1559  8DFB CB 6F        	bit 5,a
1560  8DFD 20 22        	jr nz,1F
1561  8DFF
1562  8DFF              ; No hemos terminado de guardar el último FRAME.
1563  8DFF
1564  8DFF 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1565  8E02 2B           	dec hl
1566  8E03 2B           	dec hl
1567  8E04 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1568  8E07
1569  8E07 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1570  8E0A 2B           	dec hl
1571  8E0B 2B           	dec hl
1572  8E0C 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1573  8E0F CD 80 8C     	call Extrae_address
1574  8E12 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1575  8E15
1576  8E15 CD 80 8C     	call Extrae_address
1577  8E18
1578  8E18              ; Esta vacío este album???
1579  8E18
1580  8E18 24           	inc h
1581  8E19 25           	dec h
1582  8E1A 28 05        	jr z,1F
1583  8E1C
1584  8E1C              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1585  8E1C
1586  8E1C 22 1B 89     	ld (Stack_snapshot),hl
1587  8E1F 18 09        	jr 2F
1588  8E21
1589  8E21              ; FRAME completo.
1590  8E21
1591  8E21 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1592  8E24 CD 80 8C     	call Extrae_address
1593  8E27 22 1B 89     	ld (Stack_snapshot),hl
1594  8E2A
1595  8E2A              ;	En este punto:
1596  8E2A
1597  8E2A              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1598  8E2A              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1599  8E2A
1600  8E2A 21 03 89     2 ld hl,Ctrl_1
1601  8E2D CB AE        	res 5,(hl)
1602  8E2F
1603  8E2F C9           	ret
1604  8E30
1605  8E30              ; -----------------------------------------------------------------------------------
1606  8E30
1607  8E30              Pinta_Amadeus
1608  8E30
1609  8E30 3E 06        	ld a,6
1610  8E32 D3 FE            out ($fe),a										; Amarillo
1611  8E34
1612  8E34 CD 4C 8C        	call Calcula_malotes_Amadeus
1613  8E37 CD FB 96     	call Extrae_foto_Amadeus
1614  8E3A CD 08 8C     	call Limpia_album_Amadeus
1615  8E3D
1616  8E3D C9           	ret
1617  8E3E
1618  8E3E              Pinta_entidades
1619  8E3E
1620  8E3E 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1621  8E41 01 EC 84     	ld bc,Indice_album_de_fotos
1622  8E44 A7           	and a
1623  8E45 ED 42        	sbc hl,bc
1624  8E47
1625  8E47              ;	jr z,$
1626  8E47 C8           	ret z
1627  8E48
1628  8E48              ; Pintamos siempre que esté completo Album_de_fotos.
1629  8E48
1630  8E48 CD 30 8C     	call Calcula_numero_de_malotes
1631  8E4B CD 79 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1632  8E4E
1633  8E4E C9           	ret
1634  8E4F
1635  8E4F              ; -----------------------------------------------------------------------------------
1636  8E4F
1637  8E4F              Actualiza_relojes
1638  8E4F
1639  8E4F 21 50 89     	ld hl,Contador_de_frames
1640  8E52 7E           	ld a,(hl)
1641  8E53 FE FF        	cp $ff
1642  8E55 20 04        	jr nz,1F
1643  8E57 34           	inc (hl)
1644  8E58 21 51 89     	ld hl,Contador_de_frames_2
1645  8E5B 34           1 inc (hl)											; 0 - 255
1646  8E5C C9           	ret
1647  8E5D
1648  8E5D              ; ---------------------------------------------------------------
1649  8E5D              ;
1650  8E5D              ;	27/9/23
1651  8E5D
1652  8E5D              Guarda_parametros_DRAW
1653  8E5D
1654  8E5D 21 C6 88     	ld hl,Filas
1655  8E60 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1656  8E63 01 3D 00     	ld bc,61
1657  8E66 ED B0        	ldir
1658  8E68 C9           	ret
1659  8E69
1660  8E69              Recupera_parametros_DRAW
1661  8E69
1662  8E69 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1663  8E6C 11 C6 88     	ld de,Filas
1664  8E6F 01 3D 00     	ld bc,61
1665  8E72 ED B0        	ldir
1666  8E74 C9           	ret
1667  8E75
1668  8E75              ; ---------------------------------------------------------------
1669  8E75
1670  8E75
1671  8E75              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E75              ; ******************************************************************************************************************************************************************************************
   2+ 8E75              ;
   3+ 8E75              ;   21/07/23
   4+ 8E75              ;
   5+ 8E75              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E75              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E75              ;
   8+ 8E75              ;
   9+ 8E75              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E75              ;
  11+ 8E75              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E75              ;               _ hacen las entidades hacia abajo.
  13+ 8E75              ;
  14+ 8E75              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E75              ;
  16+ 8E75              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E75              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E75              ;
  19+ 8E75              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E75              ;           _ la bala.
  21+ 8E75              ;
  22+ 8E75              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E75              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E75              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E75              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E75              ;           _ en el momento de generarse la bala)).
  27+ 8E75
  28+ 8E75              Genera_disparo
  29+ 8E75
  30+ 8E75              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E75              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E75              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E75              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E75              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E75              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E75              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E75
  38+ 8E75              ; Exclusiones:
  39+ 8E75
  40+ 8E75 3A DE 88         ld a,(Vel_down)
  41+ 8E78 47               ld b,a
  42+ 8E79 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E7C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E7D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E7E 3A FD 88         ld a,(Columnas)
  46+ 8E81 47               ld b,a
  47+ 8E82 3A C7 88         ld a,(Columns)
  48+ 8E85 B8               cp b
  49+ 8E86 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E87
  51+ 8E87              ; ----- ----- -----
  52+ 8E87
  53+ 8E87 3A F0 88         ld a,(Ctrl_0)
  54+ 8E8A CB 77            bit 6,a
  55+ 8E8C 20 06            jr nz,14F
  56+ 8E8E
  57+ 8E8E 3A CD 88         ld a,(Coordenada_y)
  58+ 8E91 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E93 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E94
  61+ 8E94 21 00 80     14 ld hl,Indice_disparo
  62+ 8E97 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E9A 4F               ld c,a
  64+ 8E9B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E9D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E9D              ;                                            ""        ""       "f9", B="1"
  67+ 8E9D              ;                                            ""        ""       "fb", B="2"
  68+ 8E9D              ;                                            ""        ""       "fb", B="3"
  69+ 8E9D A7               and a
  70+ 8E9E 28 10            jr z,1F
  71+ 8EA0 E6 01            and 1
  72+ 8EA2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA3
  74+ 8EA3 79               ld a,c
  75+ 8EA4 16 F9            ld d,$f9
  76+ 8EA6 23           2 inc hl
  77+ 8EA7 23               inc hl
  78+ 8EA8 04               inc b
  79+ 8EA9 BA               cp d
  80+ 8EAA 28 04            jr z,1F
  81+ 8EAC 14               inc d
  82+ 8EAD 14               inc d
  83+ 8EAE 18 F6            jr 2B
  84+ 8EB0
  85+ 8EB0 CD 80 8C     1 call Extrae_address
  86+ 8EB3 E5               push hl
  87+ 8EB4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB6 DD 21 41 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EBA
  90+ 8EBA              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EBA              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EBA
  93+ 8EBA 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EBD CB 77            bit 6,a
  95+ 8EBF 20 04            jr nz,19F
  96+ 8EC1
  97+ 8EC1 AF               xor a
  98+ 8EC2 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC5
 100+ 8EC5 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EC8 FE 02            cp 2
 102+ 8ECA 38 66            jr c,3F
 103+ 8ECC 28 64            jr z,3F
 104+ 8ECE
 105+ 8ECE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ECE
 107+ 8ECE E6 01            and 1
 108+ 8ED0 28 30            jr z,4F
 109+ 8ED2
 110+ 8ED2              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ED2              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ED2              ;
 113+ 8ED2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ED2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ED2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ED2
 117+ 8ED2 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8ED5
 119+ 8ED5              ;   Amadeus o entidad ???.
 120+ 8ED5
 121+ 8ED5 3A F0 88         ld a,(Ctrl_0)
 122+ 8ED8 CB 77            bit 6,a
 123+ 8EDA 28 0A            jr z,8F
 124+ 8EDC
 125+ 8EDC              ; 	Dispara Amadeus.
 126+ 8EDC
 127+ 8EDC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EDE CD 6A 96         call PreviousScan
 129+ 8EE1 CD 6A 96         call PreviousScan
 130+ 8EE4
 131+ 8EE4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE4
 136+ 8EE4 18 11            jr 10F
 137+ 8EE6
 138+ 8EE6              ; 	Dispara Entidad.
 139+ 8EE6
 140+ 8EE6 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EE9              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EE9
 143+ 8EE9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EE9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EE9
 146+ 8EE9 C5               push bc
 147+ 8EEA 06 10            ld b,16
 148+ 8EEC CD 5B 96     9 call NextScan
 149+ 8EEF 10 FB            djnz 9B
 150+ 8EF1 C1               pop bc
 151+ 8EF2 CD 5C 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF5 18 06            jr 17F
 153+ 8EF7
 154+ 8EF7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EF7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EF7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EF7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EF7
 159+ 8EF7 CD 5C 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EFA CD D1 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EFD              ;                                                      ; _al generar el disparo.
 162+ 8EFD
 163+ 8EFD              ; 	LLegados a este punto tendremos:
 164+ 8EFD              ;
 165+ 8EFD              ;       Puntero_objeto_disparo en IY.
 166+ 8EFD              ;       Rutinas_de_impresion en IX.
 167+ 8EFD              ;       Puntero_de_impresion en HL.
 168+ 8EFD              ;       Impacto/Dirección en BC.
 169+ 8EFD
 170+ 8EFD CD 64 8F     17 call Almacena_disparo
 171+ 8F00 18 52            jr 6F                                             ; RET.
 172+ 8F02
 173+ 8F02              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F02              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F02              ;
 176+ 8F02              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F02              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F02              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F02
 180+ 8F02 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8F05
 182+ 8F05              ;   Amadeus o entidad ???.
 183+ 8F05
 184+ 8F05 3A F0 88         ld a,(Ctrl_0)
 185+ 8F08 CB 77            bit 6,a
 186+ 8F0A 28 0A            jr z,11F
 187+ 8F0C
 188+ 8F0C              ; 	Dispara Amadeus.
 189+ 8F0C
 190+ 8F0C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F0E CD 6A 96         call PreviousScan
 192+ 8F11 CD 6A 96         call PreviousScan
 193+ 8F14
 194+ 8F14              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F14              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F14              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F14
 199+ 8F14 18 11            jr 13F
 200+ 8F16
 201+ 8F16              ; 	Dispara Entidad.
 202+ 8F16
 203+ 8F16 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F19              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F19
 206+ 8F19              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F19              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F19
 209+ 8F19 C5               push bc
 210+ 8F1A 06 10            ld b,16
 211+ 8F1C CD 5B 96     12 call NextScan
 212+ 8F1F 10 FB            djnz 12B
 213+ 8F21 C1               pop bc
 214+ 8F22
 215+ 8F22 CD 55 8F         call Ajusta_disparo_parte_derecha
 216+ 8F25 18 06            jr 18F
 217+ 8F27
 218+ 8F27              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F27              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F27              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F27
 223+ 8F27 CD 55 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F2A CD D1 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F2D              ;                                                       ; _al generar el disparo.
 226+ 8F2D
 227+ 8F2D              ; LLegados a este punto tendremos:
 228+ 8F2D              ;
 229+ 8F2D              ;       Puntero_objeto_disparo en IY.
 230+ 8F2D              ;       Rutinas_de_impresion en IX.
 231+ 8F2D              ;       Puntero_de_impresion en HL.
 232+ 8F2D              ;       Impacto/Dirección en BC.
 233+ 8F2D
 234+ 8F2D CD 64 8F     18 call Almacena_disparo
 235+ 8F30 18 22            jr 6F                                               ; RET.
 236+ 8F32
 237+ 8F32              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F32
 239+ 8F32 28 11        3 jr z,5F
 240+ 8F34
 241+ 8F34              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F34              ;
 243+ 8F34              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F34              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F34              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F34              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F34
 248+ 8F34              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F34              ;	   ""        ""       "f9", B="1"
 250+ 8F34              ;	   ""        ""       "fb", B="2"
 251+ 8F34              ; 	   ""        ""       "fb", B="3"
 252+ 8F34
 253+ 8F34 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F37 CD 5B 96     	call NextScan
 255+ 8F3A
 256+ 8F3A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F3A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F3A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F3A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F3A
 261+ 8F3A CD 5C 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F3D
 263+ 8F3D              ; 	No se produce impacto. B="$80"
 264+ 8F3D              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F3D
 266+ 8F3D 01 80 80         ld bc,$8080
 267+ 8F40
 268+ 8F40              ; 	LLegados a este punto tendremos:
 269+ 8F40              ;
 270+ 8F40              ;       Puntero_objeto_disparo en IY.
 271+ 8F40              ;       Rutinas_de_impresion en IX.
 272+ 8F40              ;       Puntero_de_impresion en HL.
 273+ 8F40              ;       Impacto/Dirección en BC.
 274+ 8F40
 275+ 8F40 CD 64 8F         call Almacena_disparo
 276+ 8F43 18 0F            jr 6F                                           ; RET.
 277+ 8F45
 278+ 8F45              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F45              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F45              ;
 281+ 8F45              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F45              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F45              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F45              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F45
 286+ 8F45 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F48 CD 5B 96     	call NextScan
 288+ 8F4B
 289+ 8F4B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F4B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F4B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F4B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F4B
 294+ 8F4B CD 55 8F         call Ajusta_disparo_parte_derecha
 295+ 8F4E
 296+ 8F4E              ; 	No se produce impacto. B="$80"
 297+ 8F4E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F4E
 299+ 8F4E 01 80 80     15 ld bc,$8080
 300+ 8F51
 301+ 8F51              ; 	LLegados a este punto tendremos:
 302+ 8F51              ;
 303+ 8F51              ;       Puntero_objeto_disparo en IY.
 304+ 8F51              ;       Rutinas_de_impresion en IX.
 305+ 8F51              ;       Puntero_de_impresion en HL.
 306+ 8F51              ;       Impacto/Dirección en BC.
 307+ 8F51
 308+ 8F51 CD 64 8F         call Almacena_disparo
 309+ 8F54
 310+ 8F54 C9           6 ret
 311+ 8F55
 312+ 8F55              ; ----------------------------------------------------------------
 313+ 8F55              ;
 314+ 8F55              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F55              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F55              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F55
 318+ 8F55 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F56 FE 02            cp 2
 320+ 8F58 38 01            jr c,1F
 321+ 8F5A 23               inc hl
 322+ 8F5B C9           1 ret
 323+ 8F5C
 324+ 8F5C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F5D FE 01        	cp 1
 326+ 8F5F 20 01        	jr nz,1F
 327+ 8F61 2B           	dec hl
 328+ 8F62 2B           1 dec hl
 329+ 8F63 C9               ret
 330+ 8F64
 331+ 8F64              ; ----------------------------------------------------------------
 332+ 8F64              ;
 333+ 8F64              ;   25/02/23
 334+ 8F64              ;
 335+ 8F64              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F64              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F64              ;
 338+ 8F64              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F64              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F64
 341+ 8F64              Almacena_disparo
 342+ 8F64
 343+ 8F64 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F65 F1               pop af
 345+ 8F66 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F67
 347+ 8F67 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F68 E6 01            and 1
 349+ 8F6A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F6C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F6C              ; 	Dispara AMADEUS.
 352+ 8F6C
 353+ 8F6C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F6C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F6C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F6C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F6C
 358+ 8F6C C5               push bc
 359+ 8F6D 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F70 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F73 A7               and a
 362+ 8F74 ED 42            sbc hl,bc
 363+ 8F76 CC 01 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F79 C1               pop bc
 365+ 8F7A 28 54            jr z,4F
 366+ 8F7C
 367+ 8F7C 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F7F 23               inc hl
 369+ 8F80 23               inc hl
 370+ 8F81 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F84              ;                                                   ; _ Disparo_(+1).
 372+ 8F84 18 18            jr 2F
 373+ 8F86
 374+ 8F86              ; Dispara una entidad.
 375+ 8F86
 376+ 8F86 C5           1 push bc
 377+ 8F87 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F8A 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F8D A7               and a
 380+ 8F8E ED 42            sbc hl,bc
 381+ 8F90 CC FA 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F93 C1               pop bc
 383+ 8F94 28 3A            jr z,4F
 384+ 8F96
 385+ 8F96 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F99 23               inc hl
 387+ 8F9A 23               inc hl
 388+ 8F9B 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F9E              ;                                                   ; _ Disparo_(+1).
 390+ 8F9E CD 80 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FA1              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FA1              ;
 393+ 8FA1              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FA1              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FA1              ;                                                     Puntero_de_impresion en HL.
 396+ 8FA1              ;                                                     Impacto/Dirección en BC.
 397+ 8FA1
 398+ 8FA1 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FA2 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA3 23               inc hl                                          ; _ al siguiente.
 401+ 8FA4 A7               and a
 402+ 8FA5 20 C0            jr nz,3B
 403+ 8FA7
 404+ 8FA7 08               ex af,af
 405+ 8FA8 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FAC F9               ld sp,hl
 407+ 8FAD
 408+ 8FAD DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FAF F5               push af                                         ; Puntero de impresión.
 410+ 8FB0 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FB2 C5               push bc                                         ; Control.
 412+ 8FB3
 413+ 8FB3 ED 7B 15 89      ld sp,(Stack)
 414+ 8FB7
 415+ 8FB7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FB7
 417+ 8FB7 21 03 89     	ld hl,Ctrl_1
 418+ 8FBA CB C6        	set 0,(hl)
 419+ 8FBC
 420+ 8FBC DD E5        	push ix
 421+ 8FBE E1               pop hl
 422+ 8FBF F5               push af
 423+ 8FC0 DD E1            pop ix
 424+ 8FC2
 425+ 8FC2 CD A0 7F     	call Guarda_foto_registros
 426+ 8FC5
 427+ 8FC5 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FC8 CB 86        	res 0,(hl)
 429+ 8FCA
 430+ 8FCA              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FCA              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FCA
 433+ 8FCA CD 01 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FCD CD FA 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FD0
 436+ 8FD0 C9           4 ret
 437+ 8FD1
 438+ 8FD1              ; ----------------------------------------------------------------
 439+ 8FD1              ;
 440+ 8FD1              ;   4/3/23
 441+ 8FD1              ;
 442+ 8FD1              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FD1              ;   _ al generarse el disparo.
 444+ 8FD1              ;
 445+ 8FD1              ;       "$80" ..... No se produce colisión.
 446+ 8FD1              ;       "$81" ..... Se produce colisión.
 447+ 8FD1              ;
 448+ 8FD1              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FD1              ;         _ que forman el disparo.
 450+ 8FD1
 451+ 8FD1
 452+ 8FD1              Comprueba_Colision
 453+ 8FD1
 454+ 8FD1              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FD1
 456+ 8FD1 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD3 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD4
 459+ 8FD4 CD 0A 90         call Modifica_H_Velocidad_disparo
 460+ 8FD7
 461+ 8FD7 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FD8 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FDA 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FDC
 465+ 8FDC 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FDE CD FA 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FE1
 468+ 8FE1 7B               ld a,e
 469+ 8FE2 E6 01            and 1
 470+ 8FE4 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE6              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE6 E1               pop hl
 473+ 8FE7 E5               push hl
 474+ 8FE8 CD 5B 96         call NextScan
 475+ 8FEB
 476+ 8FEB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FEC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FEE 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FF0              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FF0 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FF2 CD FA 8F         call Bucle_2
 482+ 8FF5
 483+ 8FF5 43           1 ld b,e
 484+ 8FF6 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FF7 FD E1            pop iy
 486+ 8FF9 C9               ret
 487+ 8FFA
 488+ 8FFA              ; ---------- ----------
 489+ 8FFA
 490+ 8FFA 06 02        Bucle_2 ld b,2
 491+ 8FFC FD 7E 00     2 ld a,(iy)
 492+ 8FFF A6               and (hl)
 493+ 9000 28 02            jr z,1F
 494+ 9002 1E 81            ld e,$81
 495+ 9004 23           1 inc hl
 496+ 9005 FD 23            inc iy
 497+ 9007 10 F3            djnz 2B
 498+ 9009 C9               ret
 499+ 900A
 500+ 900A              ; ---------- ----------
 501+ 900A              ;
 502+ 900A              ;   21/7/23
 503+ 900A
 504+ 900A              Modifica_H_Velocidad_disparo
 505+ 900A
 506+ 900A 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 900D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 900F D0               ret nc                                         ; _ incrementamos H.
 509+ 9010 24               inc h
 510+ 9011
 511+ 9011 C9               ret
 512+ 9012
 513+ 9012              ; -------------------------------------------------------------------------------------------------------------
 514+ 9012              ;
 515+ 9012              ;   11/04/23
 516+ 9012              ;
 517+ 9012              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9012              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9012              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9012              ;
 521+ 9012              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9012
 523+ 9012              Compara_coordenadas_X
 524+ 9012
 525+ 9012              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9012              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9012
 528+ 9012              ; Preparamos registros:
 529+ 9012
 530+ 9012 21 CC 88         ld hl,Filas+6
 531+ 9015 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9016 23               inc hl
 533+ 9017 23               inc hl
 534+ 9018 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9019 43               ld b,e
 536+ 901A
 537+ 901A 21 DA 88         ld hl,Filas+20
 538+ 901D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 901E 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 9021 CD 3D 92         call Guarda_coordenadas_X
 541+ 9024
 542+ 9024              ; Preparamos registros:
 543+ 9024
 544+ 9024 21 A4 85         ld hl,Amadeus_db+6
 545+ 9027 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9028 23               inc hl
 547+ 9029 23               inc hl
 548+ 902A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 902B 7B               ld a,e
 550+ 902C 08               ex af,af'
 551+ 902D 21 B2 85         ld hl,Amadeus_db+20
 552+ 9030 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9031 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 9034 CD 3D 92         call Guarda_coordenadas_X
 555+ 9037
 556+ 9037              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9037              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9037
 559+ 9037 04               inc b
 560+ 9038 05               dec b
 561+ 9039 28 04            jr z,1F
 562+ 903B 06 03            ld b,3
 563+ 903D 18 02            jr 2F
 564+ 903F 06 02        1 ld b,2
 565+ 9041 08           2 ex af,af'
 566+ 9042 3C               inc a
 567+ 9043 3D               dec a
 568+ 9044 28 04            jr z,5F
 569+ 9046 0E 03            ld c,3
 570+ 9048 18 02            jr 6F
 571+ 904A 0E 02        5 ld c,2
 572+ 904C 79           6 ld a,c
 573+ 904D 08               ex af,af'
 574+ 904E 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 9051 1A           4 ld a,(de)
 576+ 9052 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9055 BE           3 cp (hl)
 578+ 9056 28 0E            jr z,7F
 579+ 9058 23               inc hl
 580+ 9059 0D               dec c
 581+ 905A 20 F9            jr nz,3B
 582+ 905C 13               inc de
 583+ 905D 08               ex af,af'
 584+ 905E 4F               ld c,a
 585+ 905F 08               ex af,af'
 586+ 9060 10 EF            djnz 4B
 587+ 9062
 588+ 9062              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9062
 590+ 9062 CD 79 92     8 call Limpia_Coordenadas_X
 591+ 9065 C9               ret
 592+ 9066
 593+ 9066 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9068 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 906B 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 906E CB D6            set 2,(hl)
 597+ 9070 18 F0            jr 8B
 598+ 9072
 599+ 9072              ; -----------------------------------------------------------------------
 600+ 9072              ;
 601+ 9072              ;   17/04/23
 602+ 9072              ;
 603+ 9072
 604+ 9072              Detecta_colision_nave_entidad
 605+ 9072
 606+ 9072              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9072
 608+ 9072 2A C8 88         ld hl,(Posicion_actual)
 609+ 9075 CD B6 95         call Calcula_puntero_de_impresion
 610+ 9078
 611+ 9078              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9078              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9078
 614+ 9078 DD E5            push ix
 615+ 907A E1               pop hl
 616+ 907B E5               push hl
 617+ 907C
 618+ 907C              ; ----- ----- -----
 619+ 907C 1E 00            ld e,0                                         ; Indica impacto.
 620+ 907E 06 0A            ld b,10
 621+ 9080 CD B0 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9083 7B               ld a,e
 623+ 9084 FE 05            cp 5
 624+ 9086 38 0E            jr c,3F
 625+ 9088
 626+ 9088              ; LLegados a este punto:
 627+ 9088              ;
 628+ 9088              ;   HAY COLISIÓN !!!!!.
 629+ 9088              ;
 630+ 9088              ;   .db (Impacto) de Amadeus a "1".
 631+ 9088              ;   SET el bit3 de (Impacto2).
 632+ 9088              ;
 633+ 9088              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9088
 635+ 9088 21 B7 85         ld hl,Amadeus_db+25
 636+ 908B 36 01            ld (hl),1
 637+ 908D 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9090 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9092 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9094 18 18            jr 1F
 641+ 9096
 642+ 9096              ; -----
 643+ 9096
 644+ 9096 E1           3 pop hl
 645+ 9097 CD 5B 96         call NextScan
 646+ 909A E5               push hl
 647+ 909B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 909C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 909E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90A0 30 0C            jr nc,1F
 651+ 90A2              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90A2 10 DC            djnz 2B
 653+ 90A4
 654+ 90A4              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90A4
 656+ 90A4              ; LLegados a este punto:
 657+ 90A4              ;
 658+ 90A4              ;   NO HAY COLISIÓN !!!!!.
 659+ 90A4              ;
 660+ 90A4              ;   .db (Impacto) de Amadeus a "0".
 661+ 90A4              ;   RES el bit2 de (Impacto2).
 662+ 90A4              ;
 663+ 90A4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A4              ;   Lo colocamos a "0".
 665+ 90A4
 666+ 90A4 21 42 89         ld hl,Impacto2
 667+ 90A7 CB 96            res 2,(hl)
 668+ 90A9 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90AC 36 00            ld (hl),0
 670+ 90AE
 671+ 90AE E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90AF C9               ret
 673+ 90B0
 674+ 90B0               ; ---------- ----------
 675+ 90B0
 676+ 90B0 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90B1 3A C7 88         ld a,(Columns)
 678+ 90B4 47               ld b,a
 679+ 90B5 FD 7E 00     2 ld a,(iy)
 680+ 90B8 BE               cp (hl)
 681+ 90B9 28 01            jr z,1F
 682+ 90BB
 683+ 90BB 1C               inc e
 684+ 90BC
 685+ 90BC 23           1 inc hl
 686+ 90BD FD 23            inc iy
 687+ 90BF 10 F4            djnz 2B
 688+ 90C1 C1               pop bc
 689+ 90C2 C9               ret
 690+ 90C3
 691+ 90C3              ; -------------------------------------------------------------------------------------------------------------
 692+ 90C3              ;
 693+ 90C3              ;   13/03/23
 694+ 90C3              ;
 695+ 90C3              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90C3              ;
 697+ 90C3              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90C3
 699+ 90C3 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90C6 7E               ld a,(hl)
 701+ 90C7 A7               and a
 702+ 90C8 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90C9
 704+ 90C9 44               ld b,h
 705+ 90CA 4D               ld c,l
 706+ 90CB 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 90CE E5               push hl
 708+ 90CF A7               and a
 709+ 90D0 ED 42            sbc hl,bc
 710+ 90D2 E5               push hl
 711+ 90D3 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90D4
 713+ 90D4 E1               pop hl
 714+ 90D5 54               ld d,h
 715+ 90D6 5D               ld e,l
 716+ 90D7 1B               dec de
 717+ 90D8 ED B8            lddr                                                ; Limpiamos.
 718+ 90DA
 719+ 90DA 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90DD 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 90E0
 722+ 90E0 C9               ret
 723+ 90E1
 724+ 90E1              ; -------------------------------------------------------------------------------------------------------------
 725+ 90E1              ;
 726+ 90E1              ;   18/07/23
 727+ 90E1              ;
 728+ 90E1
 729+ 90E1              Motor_de_disparos
 730+ 90E1
 731+ 90E1              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90E1
 733+ 90E1 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90E4 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90E7
 736+ 90E7 CD 80 8C     2 call Extrae_address
 737+ 90EA 7E               ld a,(hl)
 738+ 90EB A7               and a
 739+ 90EC 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90EE
 741+ 90EE              ; ----- ----- ----- ----- ----- -----
 742+ 90EE
 743+ 90EE C5               push bc
 744+ 90EF CD B3 91         call foto_disparo_a_borrar
 745+ 90F2
 746+ 90F2              ; Existe colisión con este disparo???
 747+ 90F2
 748+ 90F2 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90F3 7E               ld a,(hl)
 750+ 90F4 2B               dec hl
 751+ 90F5 E6 01            and 1
 752+ 90F7 28 1D            jr z,9F
 753+ 90F9
 754+ 90F9              ;   En este punto:
 755+ 90F9              ;
 756+ 90F9              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90F9              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90F9              ;   _con la entidad).
 759+ 90F9              ;
 760+ 90F9              ;   Disparo_2A defw 0                                ; Control.
 761+ 90F9              ;    defw 0                                          ; Puntero objeto.
 762+ 90F9              ;    defw 0                                          ; Puntero de impresión.
 763+ 90F9              ;    defw 0                                          ; Rutina de impresión.
 764+ 90F9
 765+ 90F9 E5               push hl
 766+ 90FA
 767+ 90FA 06 04            ld b,4
 768+ 90FC 23           19 inc hl
 769+ 90FD 10 FD            djnz 19B
 770+ 90FF
 771+ 90FF CD 80 8C         call Extrae_address
 772+ 9102 CD 24 9D         call Genera_coordenadas_disparo
 773+ 9105
 774+ 9105              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9105
 776+ 9105 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 9108 72               ld (hl),d
 778+ 9109 23               inc hl
 779+ 910A 73               ld (hl),e
 780+ 910B
 781+ 910B              ; Elimino el disparo de la base de datos.
 782+ 910B
 783+ 910B E1               pop hl
 784+ 910C CD 32 92         call Elimina_disparo_de_base_de_datos
 785+ 910F 21 42 89         ld hl,Impacto2
 786+ 9112 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9114
 788+ 9114 18 06            jr 11F
 789+ 9116
 790+ 9116 CD DC 91     9 call Mueve_disparo
 791+ 9119 CD B3 91         call foto_disparo_a_borrar
 792+ 911C
 793+ 911C C1           11 pop bc
 794+ 911D 18 04            jr 7F
 795+ 911F
 796+ 911F              ; ----- ----- ----- ----- ----- -----
 797+ 911F
 798+ 911F ED 42        1 sbc hl,bc
 799+ 9121 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9123
 801+ 9123 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9126 23               inc hl
 803+ 9127 23               inc hl
 804+ 9128 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 912B 18 BA            jr 2B
 806+ 912D
 807+ 912D CD 01 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9130              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9130
 810+ 9130              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9130
 812+ 9130 01 8A 85         ld bc,Disparo_11
 813+ 9133 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9136
 815+ 9136 CD 80 8C     5 call Extrae_address
 816+ 9139 7E               ld a,(hl)
 817+ 913A A7               and a
 818+ 913B 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 913D
 820+ 913D              ; ----- ----- ----- ----- ----- -----
 821+ 913D
 822+ 913D C5               push bc
 823+ 913E CD B3 91         call foto_disparo_a_borrar
 824+ 9141
 825+ 9141              ; Existe colisión con este disparo???
 826+ 9141
 827+ 9141 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9142 7E               ld a,(hl)
 829+ 9143 2B               dec hl
 830+ 9144 E6 01            and 1
 831+ 9146 28 4D            jr z,10F
 832+ 9148
 833+ 9148              ;! La colisión se produce con Amadeus???
 834+ 9148              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9148
 836+ 9148 E5               push hl
 837+ 9149
 838+ 9149 06 04            ld b,4
 839+ 914B 23           16 inc hl
 840+ 914C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 914E
 842+ 914E CD 80 8C         call Extrae_address
 843+ 9151 CD 24 9D         call Genera_coordenadas_disparo
 844+ 9154
 845+ 9154 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9155 FE 16            cp $16
 847+ 9157 38 2A            jr c,15F
 848+ 9159
 849+ 9159
 850+ 9159              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9159
 852+ 9159 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 915A
 854+ 915A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 915A
 856+ 915A
 857+ 915A 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 915D
 859+ 915D              ; Coordenada X de Amadeus en D.
 860+ 915D
 861+ 915D 7D               ld a,l
 862+ 915E E6 1F            and $1F
 863+ 9160 57               ld d,a
 864+ 9161
 865+ 9161 21 A6 85         ld hl,Amadeus_db+8
 866+ 9164 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9165
 868+ 9165 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 9168 CD 3D 92         call Guarda_coordenadas_X
 870+ 916B
 871+ 916B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 916C
 873+ 916C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 916C
 875+ 916C 06 02            ld b,2
 876+ 916E C5           20 push bc
 877+ 916F
 878+ 916F 06 03            ld b,3
 879+ 9171 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 9174 7E           18 ld a,(hl)
 881+ 9175 BA               cp d
 882+ 9176 20 04            jr nz,17F
 883+ 9178
 884+ 9178              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9178
 886+ 9178 C1               pop bc
 887+ 9179 E1               pop hl
 888+ 917A 18 0D            jr 14F
 889+ 917C
 890+ 917C 23           17 inc hl
 891+ 917D 10 F5            djnz 18B
 892+ 917F
 893+ 917F 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9180
 895+ 9180 C1               pop bc
 896+ 9181 10 EB            djnz 20B
 897+ 9183
 898+ 9183
 899+ 9183              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9183              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9183
 902+ 9183 E1           15 pop hl
 903+ 9184 23               inc hl
 904+ 9185 35               dec (hl)
 905+ 9186 2B               dec hl
 906+ 9187 18 0C            jr 10F
 907+ 9189
 908+ 9189              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9189              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9189
 911+ 9189 E5           14 push hl
 912+ 918A CD 32 92         call Elimina_disparo_de_base_de_datos
 913+ 918D 21 42 89         ld hl,Impacto2
 914+ 9190 CB CE            set 1,(hl)
 915+ 9192 E1               pop hl
 916+ 9193 18 06            jr 12F
 917+ 9195
 918+ 9195              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9195
 920+ 9195 CD DC 91     10 call Mueve_disparo
 921+ 9198 CD B3 91         call foto_disparo_a_borrar
 922+ 919B C1           12 pop bc
 923+ 919C
 924+ 919C 18 04            jr 8F
 925+ 919E
 926+ 919E              ; ----- ----- ----- ----- ----- -----
 927+ 919E
 928+ 919E ED 42        4 sbc hl,bc
 929+ 91A0 28 0A            jr z,6F
 930+ 91A2
 931+ 91A2 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91A5 23               inc hl
 933+ 91A6 23               inc hl
 934+ 91A7 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91AA 18 8A            jr 5B
 936+ 91AC
 937+ 91AC CD FA 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91AF CD 79 92         call Limpia_Coordenadas_X
 939+ 91B2 C9               ret
 940+ 91B3
 941+ 91B3              ; ------------------------------------------------------------------
 942+ 91B3
 943+ 91B3              foto_disparo_a_borrar
 944+ 91B3
 945+ 91B3 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91B4 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91B5 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91B6
 949+ 91B6 E5               push hl
 950+ 91B7 23               inc hl
 951+ 91B8 23               inc hl
 952+ 91B9 ED 73 15 89      ld (Stack),sp
 953+ 91BD F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91BE FD E1            pop iy
 955+ 91C0 DD E1            pop ix
 956+ 91C2 E1               pop hl
 957+ 91C3 ED 7B 15 89      ld sp,(Stack)
 958+ 91C7 3A 03 89         ld a,(Ctrl_1)
 959+ 91CA CB C7            set 0,a
 960+ 91CC 32 03 89         ld (Ctrl_1),a
 961+ 91CF CD A0 7F         call Guarda_foto_registros
 962+ 91D2 3A 03 89         ld a,(Ctrl_1)
 963+ 91D5 CB 87            res 0,a
 964+ 91D7 32 03 89         ld (Ctrl_1),a
 965+ 91DA E1               pop hl
 966+ 91DB C9               ret
 967+ 91DC
 968+ 91DC              ;---------------------------------------------------
 969+ 91DC              ;
 970+ 91DC              ;   18/07/23
 971+ 91DC              ;
 972+ 91DC
 973+ 91DC              Mueve_disparo
 974+ 91DC
 975+ 91DC              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91DC              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91DC              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91DC
 979+ 91DC E5               push hl
 980+ 91DD
 981+ 91DD 7E               ld a,(hl)
 982+ 91DE
 983+ 91DE 06 04            ld b,4
 984+ 91E0 23           1 inc hl
 985+ 91E1 10 FD            djnz 1B
 986+ 91E3
 987+ 91E3              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91E3
 989+ 91E3 CD 80 8C         call Extrae_address
 990+ 91E6
 991+ 91E6 E6 01            and 1
 992+ 91E8 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91EA
 994+ 91EA              ; Disparo hacia arriba, (Amadeus).
 995+ 91EA
 996+ 91EA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91EA              ; _ de la dificultad.
 998+ 91EA
 999+ 91EA CD 6A 96         call PreviousScan
1000+ 91ED CD 6A 96         call PreviousScan
1001+ 91F0 CD 6A 96         call PreviousScan
1002+ 91F3 CD 6A 96         call PreviousScan
1003+ 91F6
1004+ 91F6              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91F6
1006+ 91F6 7C               ld a,h
1007+ 91F7 FE 40            cp $40
1008+ 91F9 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91FB
1010+ 91FB              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91FB
1012+ 91FB EB               ex de,hl
1013+ 91FC 06 04            ld b,4
1014+ 91FE 2B           6 dec hl
1015+ 91FF 10 FD            djnz 6B
1016+ 9201
1017+ 9201 CD 32 92         call Elimina_disparo_de_base_de_datos
1018+ 9204 E1               pop hl
1019+ 9205 18 10            jr 7F
1020+ 9207
1021+ 9207              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9207              ; HL contiene el puntero de impresión del disparo.
1023+ 9207              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9207
1025+ 9207 D5           3 push de
1026+ 9208 C5               push bc
1027+ 9209
1028+ 9209 CD D1 8F         call Comprueba_Colision
1029+ 920C
1030+ 920C              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 920C
1032+ 920C 78               ld a,b
1033+ 920D
1034+ 920D C1               pop bc
1035+ 920E D1               pop de
1036+ 920F
1037+ 920F EB               ex de,hl
1038+ 9210
1039+ 9210 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9211 23               inc hl                                      ; _ movimiento.
1041+ 9212 72               ld (hl),d
1042+ 9213
1043+ 9213 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9214
1045+ 9214 23               inc hl                                      ; _ en curso.
1046+ 9215 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9216 2B               dec hl
1048+ 9217
1049+ 9217 C9           7 ret
1050+ 9218
1051+ 9218              ; Disparo hacia abajo, (Entidad).
1052+ 9218
1053+ 9218 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 921B 47               ld b,a
1055+ 921C
1056+ 921C CD 5B 96     4 call NextScan
1057+ 921F 10 FB            djnz 4B
1058+ 9221
1059+ 9221              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9221
1061+ 9221 7C               ld a,h
1062+ 9222 FE 58            cp $58
1063+ 9224 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9226
1065+ 9226 EB               ex de,hl
1066+ 9227 06 04            ld b,4
1067+ 9229 2B           5 dec hl
1068+ 922A 10 FD            djnz 5B
1069+ 922C
1070+ 922C CD 32 92         call Elimina_disparo_de_base_de_datos
1071+ 922F E1               pop hl
1072+ 9230 18 E5            jr 7B
1073+ 9232
1074+ 9232              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9232
1076+ 9232 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9235 AF               xor a
1078+ 9236 77               ld (hl),a
1079+ 9237 54               ld d,h
1080+ 9238 5D               ld e,l
1081+ 9239 13               inc de
1082+ 923A ED B0            ldir
1083+ 923C C9               ret
1084+ 923D
1085+ 923D              ; -----------------------------------------------------------------
1086+ 923D              ;
1087+ 923D              ;   19/7/23
1088+ 923D              ;
1089+ 923D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 923D              ;
1091+ 923D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 923D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 923D              ;
1094+ 923D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 923D              ;
1096+ 923D              ;   INPUTS:
1097+ 923D              ;
1098+ 923D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 923D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 923D
1101+ 923D              ;   MODIFICA: A, HL, BC y DE.
1102+ 923D
1103+ 923D              Guarda_coordenadas_X
1104+ 923D
1105+ 923D 7B               ld a,e
1106+ 923E A7               and a
1107+ 923F 20 04            jr nz,1F
1108+ 9241
1109+ 9241 06 02            ld b,2
1110+ 9243 18 02            jr 2F
1111+ 9245
1112+ 9245 06 03        1 ld b,3
1113+ 9247 72           2 ld (hl),d
1114+ 9248 23               inc hl
1115+ 9249 14               inc d
1116+ 924A 10 FB            djnz 2B
1117+ 924C
1118+ 924C C9               ret
1119+ 924D
1120+ 924D              ; -----------------------------------------------------------------
1121+ 924D              ;
1122+ 924D              ;   12/04/23
1123+ 924D              ;
1124+ 924D
1125+ 924D 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9250 A7               and a
1127+ 9251 C8               ret z
1128+ 9252
1129+ 9252 FE 04            cp 4
1130+ 9254 20 09            jr nz,1F
1131+ 9256
1132+ 9256
1133+ 9256              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9256
1135+ 9256 CD 72 90         call Detecta_colision_nave_entidad
1136+ 9259
1137+ 9259 21 42 89         ld hl,Impacto2
1138+ 925C CB 5E            bit 3,(hl)
1139+ 925E C0               ret nz                                               ; Existe colisión, RET.
1140+ 925F
1141+ 925F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 925F              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 925F
1144+ 925F 21 42 89     1 ld hl,Impacto2
1145+ 9262 CB 4E            bit 1,(hl)
1146+ 9264 28 07            jr z,2F
1147+ 9266
1148+ 9266 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9269 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 926B 18 0B            jr 3F
1151+ 926D
1152+ 926D 21 42 89     2 ld hl,Impacto2
1153+ 9270 CB 46            bit 0,(hl)
1154+ 9272 C8               ret z
1155+ 9273
1156+ 9273              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9273
1158+ 9273 21 03 89         ld hl,Ctrl_1
1159+ 9276 CB D6            set 2,(hl)
1160+ 9278
1161+ 9278 C9           3 ret
1162+ 9279
1163+ 9279              ; -----------------------------------------------------------------
1164+ 9279              ;
1165+ 9279              ;   19/7/23
1166+ 9279              ;
1167+ 9279              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9279
1169+ 9279 AF           Limpia_Coordenadas_X xor a
1170+ 927A 06 06            ld b,6
1171+ 927C 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 927F 77           1 ld (hl),a
1173+ 9280 23               inc hl
1174+ 9281 10 FC            djnz 1B
1175+ 9283 C9               ret
1176+ 9284
1177+ 9284              ; -----------------------------------------------------------------
1178+ 9284              ;
1179+ 9284              ;   25/04/23
1180+ 9284              ;
1181+ 9284
1182+ 9284              Determina_resultado_comparativa
1183+ 9284
1184+ 9284              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9284              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9284              ;
1187+ 9284              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9284              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9284              ;
1190+ 9284              ;   SBC HL,DE
1191+ 9284
1192+ 9284              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9284              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9284
1195+ 9284              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9284              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9284
1198+ 9284
1199+ 9284 3A DA 88         ld a,(Cuad_objeto)
1200+ 9287 FE 02            cp 2
1201+ 9289 28 26            jr z,2F
1202+ 928B 38 24            jr c,2F
1203+ 928D
1204+ 928D              ; Cuadrantes 3º y 4º
1205+ 928D
1206+ 928D E6 01            and 1
1207+ 928F 28 10            jr z,4F
1208+ 9291
1209+ 9291              ; Cuadrante 3º
1210+ 9291
1211+ 9291 7C               ld a,h
1212+ 9292 06 00            ld b,0
1213+ 9294
1214+ 9294 CD 1F 93         call Compara_cositas_H3
1215+ 9297
1216+ 9297 04               inc b
1217+ 9298 05               dec b
1218+ 9299 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 929A
1220+ 929A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 929B 06 00            ld b,0
1222+ 929D
1223+ 929D CD 31 93         call Compara_cositas_L3
1224+ 92A0 C9               ret
1225+ 92A1
1226+ 92A1              ; Cuadrante 4º
1227+ 92A1
1228+ 92A1 7C           4 ld a,h
1229+ 92A2 06 00            ld b,0
1230+ 92A4
1231+ 92A4 CD 43 93         call Compara_cositas_H4
1232+ 92A7
1233+ 92A7 04               inc b
1234+ 92A8 05               dec b
1235+ 92A9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92AA
1237+ 92AA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92AB 06 00            ld b,0
1239+ 92AD
1240+ 92AD CD 59 93         call Compara_cositas_L4
1241+ 92B0 C9               ret
1242+ 92B1
1243+ 92B1              ; Cuadrantes 1º y 2º.
1244+ 92B1
1245+ 92B1 28 10        2 jr z,3F
1246+ 92B3
1247+ 92B3              ; 1er Cuadrante
1248+ 92B3
1249+ 92B3 7C               ld a,h
1250+ 92B4 06 00            ld b,0
1251+ 92B6
1252+ 92B6 CD F7 92         call Compara_cositas_H1
1253+ 92B9
1254+ 92B9 04               inc b
1255+ 92BA 05               dec b
1256+ 92BB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92BC
1258+ 92BC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92BD 06 00            ld b,0
1260+ 92BF
1261+ 92BF CD 0D 93         call Compara_cositas_L1
1262+ 92C2 C9               ret
1263+ 92C3
1264+ 92C3
1265+ 92C3              ; 2º Cuadrante
1266+ 92C3
1267+ 92C3 7C           3 ld a,h
1268+ 92C4 06 00            ld b,0
1269+ 92C6
1270+ 92C6 CD D3 92         call Compara_cositas_H2
1271+ 92C9
1272+ 92C9 04               inc b
1273+ 92CA 05               dec b
1274+ 92CB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92CC
1276+ 92CC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92CD 06 00            ld b,0
1278+ 92CF
1279+ 92CF CD E5 92         call Compara_cositas_L2
1280+ 92D2 C9               ret
1281+ 92D3
1282+ 92D3 A7           Compara_cositas_H2 and a
1283+ 92D4 28 0D            jr z,1F
1284+ 92D6              ;    cp $fd
1285+ 92D6              ;    jr z,1F
1286+ 92D6              ;    cp $fe
1287+ 92D6              ;    jr z,1F
1288+ 92D6 FE FF            cp $ff
1289+ 92D8 28 09            jr z,1F
1290+ 92DA FE 01            cp $01
1291+ 92DC 28 05            jr z,1F
1292+ 92DE FE 02            cp $02
1293+ 92E0 28 01            jr z,1F
1294+ 92E2 C0               ret nz
1295+ 92E3 04           1 inc b
1296+ 92E4 C9               ret
1297+ 92E5
1298+ 92E5 A7           Compara_cositas_L2 and a
1299+ 92E6 28 0D            jr z,1F
1300+ 92E8              ;    cp $fd
1301+ 92E8              ;    jr z,1F
1302+ 92E8 FE FE            cp $fe
1303+ 92EA 28 09            jr z,1F
1304+ 92EC FE FF            cp $ff
1305+ 92EE 28 05            jr z,1F
1306+ 92F0 FE 01            cp $01
1307+ 92F2 28 01            jr z,1F
1308+ 92F4              ;    cp $02
1309+ 92F4              ;    jr z,1F
1310+ 92F4 C0               ret nz
1311+ 92F5 04           1 inc b
1312+ 92F6 C9               ret
1313+ 92F7
1314+ 92F7 A7           Compara_cositas_H1 and a
1315+ 92F8 28 11            jr z,1F
1316+ 92FA              ;    cp $fd
1317+ 92FA              ;    jr z,1F
1318+ 92FA              ;    cp $fe
1319+ 92FA              ;    jr z,1F
1320+ 92FA FE FF            cp $ff
1321+ 92FC 28 0D            jr z,1F
1322+ 92FE FE 01            cp $01
1323+ 9300 28 09            jr z,1F
1324+ 9302 FE 02            cp $02
1325+ 9304 28 05            jr z,1F
1326+ 9306 FE 03            cp $03
1327+ 9308 28 01            jr z,1F
1328+ 930A C0               ret nz
1329+ 930B 04           1 inc b
1330+ 930C C9               ret
1331+ 930D
1332+ 930D A7           Compara_cositas_L1 and a
1333+ 930E 28 0D            jr z,1F
1334+ 9310              ;    cp $fd
1335+ 9310              ;    jr z,1F
1336+ 9310              ;    cp $fe
1337+ 9310              ;    jr z,1F
1338+ 9310              ;    cp $ff
1339+ 9310              ;    jr z,1F
1340+ 9310 FE 01            cp $01
1341+ 9312 28 09            jr z,1F
1342+ 9314 FE 02            cp $02
1343+ 9316 28 05            jr z,1F
1344+ 9318 FE 03            cp $03
1345+ 931A 28 01            jr z,1F
1346+ 931C C0               ret nz
1347+ 931D 04           1 inc b
1348+ 931E C9               ret
1349+ 931F
1350+ 931F A7           Compara_cositas_H3 and a
1351+ 9320 28 0D            jr z,1F
1352+ 9322              ;    cp $fd
1353+ 9322              ;    jr z,1F
1354+ 9322 FE FE            cp $fe
1355+ 9324 28 09            jr z,1F
1356+ 9326 FE FF            cp $ff
1357+ 9328 28 05            jr z,1F
1358+ 932A FE 01            cp $01
1359+ 932C 28 01            jr z,1F
1360+ 932E              ;    cp $02
1361+ 932E              ;    jr z,1F
1362+ 932E              ;    cp $03
1363+ 932E              ;    jr z,1F
1364+ 932E C0               ret nz
1365+ 932F 04           1 inc b
1366+ 9330 C9               ret
1367+ 9331
1368+ 9331 A7           Compara_cositas_L3 and a
1369+ 9332 28 0D            jr z,1F
1370+ 9334              ;    cp $fd
1371+ 9334              ;    jr z,1F
1372+ 9334              ;    cp $fe
1373+ 9334              ;    jr z,1F
1374+ 9334              ;    cp $ff
1375+ 9334              ;    jr z,1F
1376+ 9334 FE 01            cp $01
1377+ 9336 28 09            jr z,1F
1378+ 9338 FE 02            cp $02
1379+ 933A 28 05            jr z,1F
1380+ 933C FE 03            cp $03
1381+ 933E 28 01            jr z,1F
1382+ 9340 C0               ret nz
1383+ 9341 04           1 inc b
1384+ 9342 C9               ret
1385+ 9343
1386+ 9343 A7           Compara_cositas_H4 and a
1387+ 9344 28 11            jr z,1F
1388+ 9346 FE FD            cp $fd
1389+ 9348 28 0D            jr z,1F
1390+ 934A FE FE            cp $fe
1391+ 934C 28 09            jr z,1F
1392+ 934E FE FF            cp $ff
1393+ 9350 28 05            jr z,1F
1394+ 9352 FE 01            cp $01
1395+ 9354 28 01            jr z,1F
1396+ 9356              ;    cp $02
1397+ 9356              ;    jr z,1F
1398+ 9356              ;    cp $03
1399+ 9356              ;    jr z,1F
1400+ 9356 C0               ret nz
1401+ 9357 04           1 inc b
1402+ 9358 C9               ret
1403+ 9359
1404+ 9359 A7           Compara_cositas_L4 and a
1405+ 935A 28 0D            jr z,1F
1406+ 935C              ;    cp $fd
1407+ 935C              ;    jr z,1F
1408+ 935C FE FE            cp $fe
1409+ 935E 28 09            jr z,1F
1410+ 9360 FE FF            cp $ff
1411+ 9362 28 05            jr z,1F
1412+ 9364 FE 01            cp $01
1413+ 9366 28 01            jr z,1F
1414+ 9368              ;    cp $02
1415+ 9368              ;    jr z,1F
1416+ 9368              ;    cp $03
1417+ 9368              ;    jr z,1F
1418+ 9368 C0               ret nz
1419+ 9369 04           1 inc b
1420+ 936A C9               ret
# file closed: Disparo.asm
1672  936B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 936B              ; ******************************************************************************************************************************************************************************************
   2+ 936B              ;
   3+ 936B              ; 26/06/23
   4+ 936B              ;
   5+ 936B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 936B
   7+ 936B CD 4F 96     Draw call Prepara_draw
   8+ 936E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 936F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9370 28 05        	jr z,2F
  11+ 9372
  12+ 9372 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9375 18 0C        	jr 1F
  14+ 9377
  15+ 9377 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 937A 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 937D CD 0C 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9380              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9380 CD AF 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9383
  21+ 9383 3A F0 88     1 ld a,(Ctrl_0)
  22+ 9386 CB 6F        	bit 5,a
  23+ 9388 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 938A
  25+ 938A CD A2 93     	call Comprueba_limite_horizontal
  26+ 938D CD 32 94     	call Comprueba_limite_vertical
  27+ 9390
  28+ 9390              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9390              ; -----------------------
  30+ 9390              ; -----------------------
  31+ 9390              ; -----------------------
  32+ 9390
  33+ 9390 CD 7F 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9393 CD B6 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9396 CD 15 96     	call Define_rutina_de_impresion
  36+ 9399
  37+ 9399 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 939C CB AF        	res 5,a											; _a ser de utilidad.
  39+ 939E 32 F0 88     	ld (Ctrl_0),a
  40+ 93A1
  41+ 93A1 C9           	ret
  42+ 93A2
  43+ 93A2              ; *******************************************************************************************************************************************************************************************
  44+ 93A2              ;	21/01/23
  45+ 93A2              ;
  46+ 93A2              ; 	Comprueba_limite_horizontal.
  47+ 93A2              ;
  48+ 93A2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93A2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93A2              ;
  51+ 93A2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93A2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93A2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93A2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93A2
  56+ 93A2
  57+ 93A2
  58+ 93A2 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93A7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93A9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93AB 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93AE 18 09            jr 6F
  64+ 93B0 CB 5F        1 bit 3,a
  65+ 93B2 28 0A            jr z,2F
  66+ 93B4 E6 F7            and $f7
  67+ 93B6 32 F0 88         ld (Ctrl_0),a
  68+ 93B9 CD 0C 95     6 call Inicializacion
  69+ 93BC 18 5B            jr 5F
  70+ 93BE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93BF
  72+ 93BF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93BF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93BF
  75+ 93BF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93C0 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C3 CD 6E 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C6 67           	ld h,a
  79+ 93C7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93C8 CD 6E 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93CB 67           	ld h,a
  82+ 93CC A7           	and a
  83+ 93CD ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93CF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93D0 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93D3 FE 02        	cp 2
  87+ 93D5 38 1E        	jr c,3F
  88+ 93D7 28 1C        	jr z,3F
  89+ 93D9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93DA 28 23            jr z,7F
  91+ 93DC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93DE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93E0 E1           	pop hl
  94+ 93E1
  95+ 93E1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93E1              ; _para indicar con E="2" en caso necesario.
  97+ 93E1
  98+ 93E1 E5               push hl
  99+ 93E2 C5               push bc
 100+ 93E3 CD 6E 99     	call calcula_tercio
 101+ 93E6 FE 01        	cp 1
 102+ 93E8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93EA CD 1A 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93ED 28 26            jr z,9F
 105+ 93EF 38 24            jr c,9F
 106+ 93F1 1E 00        11 ld e,0
 107+ 93F3 18 22            jr 8F
 108+ 93F5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F6 28 07        	jr z, 7F
 110+ 93F8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93FA 1E 00         	ld e,0
 112+ 93FC E1           	pop hl
 113+ 93FD 18 04        	jr 4F
 114+ 93FF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9401 18 15            jr 10F
 116+ 9403
 117+ 9403              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9403              ; _para indicar con E="2" en caso necesario.
 119+ 9403
 120+ 9403 E5           4 push hl
 121+ 9404 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9405 CD 6E 99     	call calcula_tercio
 123+ 9408 FE 01        	cp 1
 124+ 940A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 940C CD 1A 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 940F 28 04            jr z,9F
 127+ 9411 30 02            jr nc,9F
 128+ 9413 18 02        	jr 8F
 129+ 9415 1E 02        9 ld e,2
 130+ 9417 C1           8 pop bc
 131+ 9418 E1           10 pop hl
 132+ 9419 C9           5 ret
 133+ 941A
 134+ 941A              ; --------------------
 135+ 941A              ;
 136+ 941A              ; 25/08/22
 137+ 941A
 138+ 941A CD 6E 99     Comprueba_centro call calcula_tercio
 139+ 941D 67               ld h,a
 140+ 941E 08           	ex af,af
 141+ 941F FE 02        	cp 2
 142+ 9421 38 07        	jr c,1F
 143+ 9423 28 05        	jr z,1F
 144+ 9425 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9428 18 03        	jr 2F
 146+ 942A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 942D 08           2 ex af,af
 148+ 942E A7               and a
 149+ 942F ED 42            sbc hl,bc
 150+ 9431 C9               ret
 151+ 9432
 152+ 9432              ; *********************************************************************************************************************************************************************************************
 153+ 9432              ;
 154+ 9432              ;   16/8/22
 155+ 9432              ;
 156+ 9432              ;	Comprueba_limite_vertical
 157+ 9432              ;
 158+ 9432              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9432              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9432              ;
 161+ 9432
 162+ 9432 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9435 7D           	ld a,l
 164+ 9436 E6 1F        	and $1F
 165+ 9438 57           	ld d,a
 166+ 9439 3A 00 89     	ld a,(Limite_vertical)
 167+ 943C BA           	cp d 											; Límite - Posición.
 168+ 943D 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 943E 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9441 CB 47        	bit 0,a
 171+ 9443 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9445
 173+ 9445              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9445
 175+ 9445 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9446 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9448
 178+ 9448              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9448              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9448
 181+ 9448 3A CC 88         ld a,(Coordenada_X)
 182+ 944B 16 0F            ld d,Centro_izquierda
 183+ 944D A7               and a
 184+ 944E 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 944F 28 1E            jr z,3F
 186+ 9451 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9453              ;                                                    ; _salimos sin modificar nada.
 188+ 9453 18 0E            jr 2F
 189+ 9455 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9456 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9458
 192+ 9458              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9458              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9458
 195+ 9458 3A CC 88         ld a,(Coordenada_X)
 196+ 945B 16 10            ld d,Centro_derecha
 197+ 945D A7               and a
 198+ 945E 92               sub d
 199+ 945F 28 0E            jr z,3F
 200+ 9461 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9463              ;                                                    ; _salimos sin modificar nada.
 202+ 9463 CB 43        2 bit 0,e
 203+ 9465 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9467 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9468 CD FC 94         call Modificaccionne
 206+ 946B C1           	pop bc
 207+ 946C CD 0C 95         call Inicializacion
 208+ 946F C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9470
 210+ 9470              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9470
 212+ 9470 C5           4 push bc
 213+ 9471 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9474 0A           	ld a,(bc)
 215+ 9475 3D           	dec a
 216+ 9476 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9477 7D           	ld a,l
 218+ 9478 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9479 CB 47        	bit 0,a
 220+ 947B 28 03        	jr z,5F
 221+ 947D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 947E 18 2E        	jr 7F
 223+ 9480
 224+ 9480              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9480
 226+ 9480 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9481 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9482 3A F0 88     	ld a,(Ctrl_0)
 229+ 9485 CB 4F        	bit 1,a
 230+ 9487 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9489 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 948A
 233+ 948A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 948A
 235+ 948A 1C               inc e
 236+ 948B 1D               dec e
 237+ 948C 20 07            jr nz,12F
 238+ 948E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 948F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9490 22 C8 88     	ld (Posicion_actual),hl
 241+ 9493 18 44        13 jr 9F
 242+ 9495 CB 43        12 bit 0,e
 243+ 9497 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9499              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9499 C1           	pop bc
 246+ 949A 18 D3        	jr 3B
 247+ 949C 80           14 add b
 248+ 949D 6F               ld l,a
 249+ 949E 22 C8 88     	ld (Posicion_actual),hl
 250+ 94A1 CD FC 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A4 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94A8 32 F0 88         ld (Ctrl_0),a
 254+ 94AB F1           	pop af
 255+ 94AC 18 2B        	jr 9F
 256+ 94AE
 257+ 94AE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94AE
 259+ 94AE F5           7 push af
 260+ 94AF 3A F0 88     	ld a,(Ctrl_0)
 261+ 94B2 CB 47        	bit 0,a
 262+ 94B4 20 1D        	jr nz,8F
 263+ 94B6 F1           	pop af
 264+ 94B7
 265+ 94B7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94B7
 267+ 94B7 1C           	inc e
 268+ 94B8 1D               dec e
 269+ 94B9 20 07            jr nz,10F
 270+ 94BB 90           	sub b
 271+ 94BC 6F               ld l,a
 272+ 94BD 22 C8 88     	ld (Posicion_actual),hl
 273+ 94C0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94C2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94C2 CB 43        10 bit 0,e
 276+ 94C4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C6 C1           	pop bc
 279+ 94C7 18 A6        	jr 3B
 280+ 94C9 90           16 sub b
 281+ 94CA 6F               ld l,a
 282+ 94CB 22 C8 88     	ld (Posicion_actual),hl
 283+ 94CE CD FC 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94D1 18 06            jr 9F
 285+ 94D3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D5 32 F0 88         ld (Ctrl_0),a
 287+ 94D8 F1           	pop af
 288+ 94D9 C1           9 pop bc
 289+ 94DA 1E 00        	ld e,0
 290+ 94DC CD 0C 95         call Inicializacion
 291+ 94DF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94E0 08           	ex af,af
 293+ 94E1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94E2 18 8B            jr 3B
 295+ 94E4
 296+ 94E4              ; --------------------
 297+ 94E4
 298+ 94E4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E6 CD 6A 96     1 call PreviousScan
 300+ 94E9 10 FB            djnz 1B
 301+ 94EB 22 C8 88     	ld (Posicion_actual),hl
 302+ 94EE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94EF C9           	ret
 304+ 94F0
 305+ 94F0              ; --------------------
 306+ 94F0
 307+ 94F0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94F2 CD 5B 96     1 call NextScan
 309+ 94F5 10 FB            djnz 1B
 310+ 94F7 22 C8 88     	ld (Posicion_actual),hl
 311+ 94FA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94FB C9           	ret
 313+ 94FC
 314+ 94FC              ; --------------------
 315+ 94FC              ;
 316+ 94FC              ;	22/01/23
 317+ 94FC              ;
 318+ 94FC              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94FC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94FC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94FC
 322+ 94FC
 323+ 94FC              Modificaccionne
 324+ 94FC
 325+ 94FC 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94FF FE 02        	cp 2
 327+ 9501 CC E4 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9504 DC E4 94         call c,Modifica_Pos_actual
 329+ 9507 C8           	ret z
 330+ 9508 CD F0 94         call Modifica_Pos_actual2
 331+ 950B C9               ret
 332+ 950C
 333+ 950C              ; *************************************************************************************************************************************************************************************************
 334+ 950C              ;
 335+ 950C              ;	13/8/22
 336+ 950C              ;
 337+ 950C              ;	Inicializacion
 338+ 950C              ;
 339+ 950C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 950C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 950C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 950C              ;
 343+ 950C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 950C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 950C              ;	_ desaparece/aparece.
 346+ 950C
 347+ 950C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 950C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 950C              ;
 350+ 950C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 950C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 950C              ; 		   [E] ="0"
 353+ 950C
 354+ 950C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 950C
 356+ 950C CD 6E 99     Inicializacion call calcula_tercio
 357+ 950F 28 36        	jr z,primit
 358+ 9511 E6 02        	and 2
 359+ 9513 20 07        	jr nz,segmit
 360+ 9515 7D           	ld a,l
 361+ 9516 FE 7F        	cp $7f
 362+ 9518 38 2D        	jr c,primit
 363+ 951A 28 2B        	jr z,primit
 364+ 951C CD 79 95     segmit call column
 365+ 951F 38 13        	jr c,tercuad
 366+ 9521 3E 04        cuarcuad ld a,4
 367+ 9523 32 DA 88     	ld (Cuad_objeto),a
 368+ 9526 21 20 48     	ld hl,$4820
 369+ 9529 22 FE 88     	ld (Limite_horizontal),hl
 370+ 952C 21 00 89     	ld hl,Limite_vertical
 371+ 952F 36 0D        	ld (hl),$0d
 372+ 9531 08           	ex af,af
 373+ 9532 18 3C        	jr 1F
 374+ 9534              tercuad
 375+ 9534 3E 03        	ld a,3
 376+ 9536 32 DA 88     	ld (Cuad_objeto),a
 377+ 9539 21 20 48     	ld hl,$4820
 378+ 953C 22 FE 88     	ld (Limite_horizontal),hl
 379+ 953F 21 00 89     	ld hl,Limite_vertical
 380+ 9542 36 12        	ld (hl),$12
 381+ 9544 08           	ex af,af
 382+ 9545 18 29        	jr 1F
 383+ 9547 CD 79 95     primit call column
 384+ 954A 38 13        	jr c, primcuad
 385+ 954C              segcuad
 386+ 954C 3E 02        	ld a,2
 387+ 954E 32 DA 88     	ld (Cuad_objeto),a
 388+ 9551 21 C0 4F     	ld hl,$4fc0
 389+ 9554 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9557 21 00 89     	ld hl,Limite_vertical
 391+ 955A 36 0D        	ld (hl),$0d
 392+ 955C 08           	ex af,af
 393+ 955D 18 11        	jr 1F
 394+ 955F              primcuad
 395+ 955F 3E 01        	ld a,1
 396+ 9561 32 DA 88     	ld (Cuad_objeto),a
 397+ 9564 21 C0 4F     	ld hl,$4fc0
 398+ 9567 22 FE 88     	ld (Limite_horizontal),hl
 399+ 956A 21 00 89     	ld hl,Limite_vertical
 400+ 956D 36 12        	ld (hl),$12
 401+ 956F 08           	ex af,af
 402+ 9570 CD F9 9C     1 call Genera_coordenadas
 403+ 9573 21 F0 88     	ld hl,Ctrl_0
 404+ 9576 CB EE        	set 5,(hl)
 405+ 9578 C9           	ret
 406+ 9579
 407+ 9579              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9579
 409+ 9579              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9579              ;
 411+ 9579              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9579
 413+ 9579 7D           column ld a,l
 414+ 957A E6 1F        	and $1f
 415+ 957C FE 10         	cp $10
 416+ 957E C9            	ret
 417+ 957F
 418+ 957F              ; --------------------------------------------------------------------------------------------------------------------
 419+ 957F              ;
 420+ 957F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 957F              ;
 422+ 957F              ; 14/12/22
 423+ 957F              ;
 424+ 957F              ;	Modifica: A y BC.
 425+ 957F
 426+ 957F 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9582 E6 01        	and 1
 428+ 9584 28 17        	jr z,1F
 429+ 9586
 430+ 9586              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9586
 432+ 9586 3A CC 88     	ld a,(Coordenada_X)
 433+ 9589 47           	ld b,a
 434+ 958A 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 958B 79           	ld a,c
 436+ 958C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 958D 38 08        	jr c,2F
 438+ 958F 47           	ld b,a
 439+ 9590 79           	ld a,c
 440+ 9591 90           	sub b
 441+ 9592 32 FD 88     	ld (Columnas),a
 442+ 9595 18 1B        	jr 4F
 443+ 9597 79           2 ld a,c
 444+ 9598 32 FD 88     	ld (Columnas),a
 445+ 959B 18 15        	jr 4F
 446+ 959D
 447+ 959D              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 959D
 449+ 959D 3A CC 88     1 ld a,(Coordenada_X)
 450+ 95A0 81           	add c
 451+ 95A1 3D           	dec a
 452+ 95A2 D6 1F        	sub $1f
 453+ 95A4 38 08        	jr c,3F
 454+ 95A6 47           	ld b,a
 455+ 95A7 79           	ld a,c
 456+ 95A8 90           	sub b
 457+ 95A9 32 FD 88     	ld (Columnas),a
 458+ 95AC 18 04        	jr 4F
 459+ 95AE 79           3 ld a,c
 460+ 95AF 32 FD 88     	ld (Columnas),a
 461+ 95B2 D9           4 exx
 462+ 95B3 4F           	ld c,a
 463+ 95B4 D9           	exx
 464+ 95B5 C9            ret
 465+ 95B6
 466+ 95B6              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B6              ;
 468+ 95B6              ;   19/7/23
 469+ 95B6              ;
 470+ 95B6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B6              ;
 473+ 95B6              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B6              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B6              ;
 476+ 95B6              ;	DESTRUYE: HL,B Y A.
 477+ 95B6
 478+ 95B6 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95B9 FE 02        	cp 2
 480+ 95BB 38 18        	jr c,1F
 481+ 95BD 28 16        	jr z,1F
 482+ 95BF E6 01        	and 1
 483+ 95C1 28 0D        	jr z,3F
 484+ 95C3
 485+ 95C3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C3
 487+ 95C3 CD 09 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C6
 489+ 95C6 7D           9 ld a,l
 490+ 95C7 E6 1F        	and $1f
 491+ 95C9 28 2A        	jr z,7F
 492+ 95CB 2B           	dec hl
 493+ 95CC 10 F8        	djnz 9B
 494+ 95CE 18 25        	jr 7F
 495+ 95D0
 496+ 95D0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95D0
 498+ 95D0 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95D3 18 20        	jr 7F
 500+ 95D5
 501+ 95D5 28 14        1 jr z,2F
 502+ 95D7
 503+ 95D7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95D7
 505+ 95D7 CD 09 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95DA
 507+ 95DA 7D           4 ld a,l
 508+ 95DB E6 1F        	and $1f
 509+ 95DD 28 03        	jr z,6F
 510+ 95DF 2B           	dec hl
 511+ 95E0 10 F8        	djnz 4B
 512+ 95E2 06 0F        6 ld b,15
 513+ 95E4 CD 6A 96     5 call PreviousScan
 514+ 95E7 10 FB        	djnz 5B
 515+ 95E9 18 0A        	jr 7F
 516+ 95EB
 517+ 95EB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95EB
 519+ 95EB CD 09 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95EE 06 0F        	ld b,15
 521+ 95F0 CD 6A 96     8 call PreviousScan
 522+ 95F3 10 FB        	djnz 8B
 523+ 95F5
 524+ 95F5 E5           7 push hl
 525+ 95F6 DD E1        	pop ix
 526+ 95F8
 527+ 95F8 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95FB E5           	push hl
 529+ 95FC FD E1        	pop iy
 530+ 95FE
 531+ 95FE              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95FE
 533+ 95FE 3A F0 88     	ld a,(Ctrl_0)
 534+ 9601 CB 77        	bit 6,a
 535+ 9603 C8           	ret z
 536+ 9604
 537+ 9604              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9604              ; _ entidad / Amadeus´.
 539+ 9604
 540+ 9604 DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9608
 542+ 9608 C9           	ret
 543+ 9609
 544+ 9609              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9609              ;
 546+ 9609              ;	2/1/23
 547+ 9609              ;
 548+ 9609              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9609              ;
 550+ 9609              ;	Tras esta rutina tenemos:
 551+ 9609              ;
 552+ 9609              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9609              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9609              ;
 555+ 9609              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9609
 557+ 9609 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 960C 3A FD 88     	ld a,(Columnas)
 559+ 960F 3D           	dec a
 560+ 9610 20 01        	jr nz,1F
 561+ 9612 3C           	inc a
 562+ 9613 47           1 ld b,a
 563+ 9614 C9           	ret
 564+ 9615
 565+ 9615              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9615              ;
 567+ 9615              ;	3/1/23
 568+ 9615              ;
 569+ 9615              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9615              ;
 571+ 9615              ;	Destruye: A,B,HL y DE.
 572+ 9615
 573+ 9615              Define_rutina_de_impresion
 574+ 9615
 575+ 9615 3A C7 88     	ld a,(Columns)
 576+ 9618 47           	ld b,a
 577+ 9619 3A FD 88     	ld a,(Columnas)
 578+ 961C B8           	cp b
 579+ 961D 20 0D        	jr nz,2f
 580+ 961F
 581+ 961F              ;	La entidad se imprime entera.
 582+ 961F
 583+ 961F 21 3E 97     	ld hl, Indice_entidades_completas
 584+ 9622 E6 01        	and 1
 585+ 9624 28 02        	jr z,1F
 586+ 9626
 587+ 9626 23           	inc hl
 588+ 9627 23           	inc hl
 589+ 9628
 590+ 9628 CD 80 8C     1 call Extrae_address
 591+ 962B C9           	ret		;	ret
 592+ 962C
 593+ 962C              ;	La entidad no se imprime entera en pantalla.
 594+ 962C
 595+ 962C 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 962F E6 01        	and 1
 597+ 9631 28 17        	jr z,3F
 598+ 9633
 599+ 9633              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9633
 601+ 9633 21 42 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9636 3A C7 88     4 ld a,(Columns)
 603+ 9639 E6 01        	and 1
 604+ 963B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 963D
 606+ 963D 23           	inc hl
 607+ 963E 23           	inc hl
 608+ 963F
 609+ 963F 3A FD 88     	ld a,(Columnas)
 610+ 9642 E6 01        	and 1
 611+ 9644 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9646
 613+ 9646 23           	inc hl
 614+ 9647 23           	inc hl
 615+ 9648
 616+ 9648 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 964A
 618+ 964A 21 48 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 964D 18 E7        	jr 4B
 620+ 964F
 621+ 964F              ; --------------------------------------------------------------------------------------------------------------------
 622+ 964F              ;
 623+ 964F              ;	Prepara_draw
 624+ 964F              ;
 625+ 964F              ;	Es una rutina de carga.
 626+ 964F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 964F              ;
 628+ 964F              ;	FUNCIONAMIENTO:
 629+ 964F              ;
 630+ 964F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 964F              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 964F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 964F              ;
 634+ 964F              ;	DESTRUYE:
 635+ 964F              ;
 636+ 964F              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 964F
 638+ 964F 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9652 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9653 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9654 4E           	ld c,(hl)
 642+ 9655 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9658 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 965A C9           	ret
 645+ 965B
 646+ 965B              ;----------------------------------------------------------------------------------------------------------------
 647+ 965B              ;
 648+ 965B              ;	5/08/22
 649+ 965B              ;
 650+ 965B              ;   NextScan.
 651+ 965B              ;
 652+ 965B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 965B              ;
 654+ 965B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 965B              ;
 656+ 965B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 965B              ;
 658+ 965B              ;       DESTRUIDOS: AF y HL !!!
 659+ 965B              ;
 660+ 965B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 965B              ;
 662+ 965B
 663+ 965B 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 965C 7C               ld a,h
 665+ 965D E6 07            and 7
 666+ 965F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9660
 668+ 9660 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9661 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9663 6F               ld l,a
 671+ 9664 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9665
 673+ 9665 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9666 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9668 67               ld h,a
 676+ 9669 C9               ret
 677+ 966A
 678+ 966A              ;----------------------------------------------------------------------------------------------------------------
 679+ 966A              ;
 680+ 966A              ;	5/08/22
 681+ 966A              ;
 682+ 966A              ;   PreviousScan.
 683+ 966A              ;
 684+ 966A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 966A              ;
 686+ 966A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 966A              ;
 688+ 966A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 966A              ;
 690+ 966A              ;       DESTRUIDOS: AF y HL !!!
 691+ 966A              ;
 692+ 966A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 966A              ;
 694+ 966A
 695+ 966A 7C           PreviousScan ld a,h
 696+ 966B 25               dec h               ; Dec H.
 697+ 966C E6 07            and 7
 698+ 966E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 966F
 700+ 966F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9670 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9672 6F               ld l,a
 703+ 9673 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9674
 705+ 9674 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9675 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9677 67               ld h,a
 708+ 9678 C9               ret
 709+ 9679
 710+ 9679              ; -----------------------------------------------------------------------------------
 711+ 9679              ;
 712+ 9679              ;	31/7/23
 713+ 9679              ;
 714+ 9679              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9679              ;	Extrae fotos de Album_de_fotos.
 716+ 9679
 717+ 9679              Extrae_foto_entidades
 718+ 9679
 719+ 9679 21 01 70     	ld hl,Album_de_fotos+1
 720+ 967C 7E           	ld a,(hl)
 721+ 967D A7           	and a
 722+ 967E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 967F
 724+ 967F 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9682 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9683 C8           	ret z
 727+ 9684
 728+ 9684              ; -----------------------------------
 729+ 9684
 730+ 9684 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9688 31 00 70     	ld sp,Album_de_fotos
 732+ 968B
 733+ 968B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 968D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 968E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 968F
 737+ 968F ED 73 17 89  	ld (Stack_2),sp
 738+ 9693 ED 7B 15 89  	ld sp,(Stack)
 739+ 9697
 740+ 9697              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9697
 742+ 9697 3E CD        	ld a,$cd
 743+ 9699 32 A1 96     	ld (Imprime),a
 744+ 969C EB           	ex de,hl
 745+ 969D 22 A2 96     	ld (Imprime+1),hl
 746+ 96A0 EB           	ex de,hl
 747+ 96A1
 748+ 96A1              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96A1
 750+ 96A1 00 00 00     Imprime db 0,0,0
 751+ 96A4
 752+ 96A4 ED 73 15 89  	ld (Stack),sp
 753+ 96A8
 754+ 96A8 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 96AB 3D           	dec a
 756+ 96AC 28 09        	jr z,1F
 757+ 96AE 32 10 89      	ld (Numero_de_malotes),a
 758+ 96B1
 759+ 96B1 ED 7B 17 89  	ld sp,(Stack_2)
 760+ 96B5 18 D4        	jr 2B
 761+ 96B7
 762+ 96B7 AF           1 xor a
 763+ 96B8 32 17 89     	ld (Stack_2),a
 764+ 96BB
 765+ 96BB C9           	ret
 766+ 96BC
 767+ 96BC              ; -----------------------------------------------------------------------------------
 768+ 96BC              ;
 769+ 96BC              ;	28/2/23
 770+ 96BC              ;
 771+ 96BC              ;	Pinta los disparos generados.
 772+ 96BC
 773+ 96BC              Extrae_foto_disparos
 774+ 96BC
 775+ 96BC 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96BF 7E               ld a,(hl)
 777+ 96C0 A7               and a
 778+ 96C1 C8               ret z
 779+ 96C2
 780+ 96C2 3A 3D 89     	ld a,(Numero_de_disparotes)
 781+ 96C5 A7           	and a
 782+ 96C6 C8           	ret z
 783+ 96C7 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96CB 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96CE
 786+ 96CE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96D0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96D1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96D2
 790+ 96D2 ED 73 17 89  	ld (Stack_2),sp
 791+ 96D6 ED 7B 15 89  	ld sp,(Stack)
 792+ 96DA
 793+ 96DA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96DA
 795+ 96DA 3E CD        	ld a,$cd
 796+ 96DC 32 E4 96     	ld (Imprime2),a
 797+ 96DF EB           	ex de,hl
 798+ 96E0 22 E5 96     	ld (Imprime2+1),hl
 799+ 96E3 EB           	ex de,hl
 800+ 96E4
 801+ 96E4              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96E4
 803+ 96E4 00 00 00     Imprime2 db 0,0,0
 804+ 96E7
 805+ 96E7 3A 3D 89     	ld a,(Numero_de_disparotes)
 806+ 96EA 3D           	dec a
 807+ 96EB 28 09        	jr z,1F
 808+ 96ED 32 3D 89      	ld (Numero_de_disparotes),a
 809+ 96F0
 810+ 96F0 ED 7B 17 89  	ld sp,(Stack_2)
 811+ 96F4 18 D8        	jr 2B
 812+ 96F6
 813+ 96F6 AF           1 xor a
 814+ 96F7 32 17 89     	ld (Stack_2),a
 815+ 96FA C9           	ret
 816+ 96FB
 817+ 96FB              ; -----------------------------------------------------------------------------------
 818+ 96FB              ;
 819+ 96FB              ;	4/9/23
 820+ 96FB              ;
 821+ 96FB              ;	Rutina principal de pintado de Amadeus.
 822+ 96FB              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 96FB
 824+ 96FB 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 96FE 7E           	ld a,(hl)
 826+ 96FF A7           	and a
 827+ 9700 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9701
 829+ 9701 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 9704 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9705 C8           	ret z
 832+ 9706
 833+ 9706              ; -----------------------------------
 834+ 9706
 835+ 9706 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 970A 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 970D
 838+ 970D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 970F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9710 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9711
 842+ 9711 ED 73 17 89  	ld (Stack_2),sp
 843+ 9715 ED 7B 15 89  	ld sp,(Stack)
 844+ 9719
 845+ 9719              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9719
 847+ 9719 3E CD        	ld a,$cd
 848+ 971B 32 23 97     	ld (Imprime_Amadeus),a
 849+ 971E EB           	ex de,hl
 850+ 971F 22 24 97     	ld (Imprime_Amadeus+1),hl
 851+ 9722 EB           	ex de,hl
 852+ 9723
 853+ 9723              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9723
 855+ 9723 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9726
 857+ 9726 ED 73 15 89  	ld (Stack),sp
 858+ 972A
 859+ 972A 3A 10 89     	ld a,(Numero_de_malotes)
 860+ 972D 3D           	dec a
 861+ 972E 28 09        	jr z,1F
 862+ 9730 32 10 89      	ld (Numero_de_malotes),a
 863+ 9733
 864+ 9733 ED 7B 17 89  	ld sp,(Stack_2)
 865+ 9737 18 D4        	jr 2B
 866+ 9739
 867+ 9739 AF           1 xor a
 868+ 973A 32 17 89     	ld (Stack_2),a
 869+ 973D
 870+ 973D C9           	ret
# file closed: Draw_XOR.asm
1673  973E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 973E              ;   índices de Rutinas de impresión.
   2+ 973E
   3+ 973E 4E 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9740 7B 97            defw Pinta_Amadeus_3x2
   5+ 9742
   6+ 9742 D1 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9744 71 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9746 25 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9748
  10+ 9748 FB 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 974A FF 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 974C B3 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 974E
  14+ 974E
  15+ 974E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 974E              ;
  17+ 974E              ;   12/12/22
  18+ 974E              ;
  19+ 974E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 974E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 974E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 974E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 974E              ;
  24+ 974E              ;   Modifica: DE y HL.
  25+ 974E
  26+ 974E ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9752 FD F9        	ld sp,iy
  28+ 9754 06 10            ld b,16
  29+ 9756 D1           1 pop de
  30+ 9757 7B               ld a,e
  31+ 9758 AE               xor (hl)
  32+ 9759 77           	ld (hl),a
  33+ 975A 23           	inc hl
  34+ 975B 7A               ld a,d
  35+ 975C AE               xor (hl)
  36+ 975D 77           	ld (hl),a
  37+ 975E 2B           	dec hl
  38+ 975F 24           	inc h
  39+ 9760 7C               ld a,h
  40+ 9761 E6 07            and 7
  41+ 9763 20 0A            jr nz,2F
  42+ 9765 7D               ld a,l
  43+ 9766 C6 20            add a,$20
  44+ 9768 6F               ld l,a
  45+ 9769 38 04            jr c,2F
  46+ 976B 7C               ld a,h
  47+ 976C D6 08            sub 8
  48+ 976E 67               ld h,a
  49+ 976F 7C           2 ld a,h
  50+ 9770 FE 58            cp $58
  51+ 9772 28 02            jr z,3F
  52+ 9774 10 E0            djnz 1B
  53+ 9776 ED 7B 15 89  3 ld sp,(Stack)
  54+ 977A C9           	ret
  55+ 977B
  56+ 977B ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 977F FD F9        	ld sp,iy
  58+ 9781 06 08            ld b,8
  59+ 9783 D1           1 pop de
  60+ 9784 7B               ld a,e
  61+ 9785 AE               xor (hl)
  62+ 9786 77           	ld (hl),a
  63+ 9787 23           	inc hl
  64+ 9788 7A               ld a,d
  65+ 9789 AE               xor (hl)
  66+ 978A 77           	ld (hl),a
  67+ 978B 23           	inc hl
  68+ 978C D1           	pop de
  69+ 978D 7B               ld a,e
  70+ 978E AE               xor (hl)
  71+ 978F 77           	ld (hl),a
  72+ 9790 2B           	dec hl
  73+ 9791 2B           	dec hl
  74+ 9792 24           	inc h
  75+ 9793 7C               ld a,h
  76+ 9794 E6 07            and 7
  77+ 9796 20 0A            jr nz,2F
  78+ 9798 7D               ld a,l
  79+ 9799 C6 20            add a,$20
  80+ 979B 6F               ld l,a
  81+ 979C 38 04            jr c,2F
  82+ 979E 7C               ld a,h
  83+ 979F D6 08            sub 8
  84+ 97A1 67               ld h,a
  85+ 97A2 7C           2 ld a,h
  86+ 97A3 FE 58            cp $58
  87+ 97A5 28 25            jr z,4F
  88+ 97A7 7A               ld a,d
  89+ 97A8 AE               xor (hl)
  90+ 97A9 77               ld (hl),a
  91+ 97AA D1           	pop de
  92+ 97AB 23           	inc hl
  93+ 97AC 7B               ld a,e
  94+ 97AD AE               xor (hl)
  95+ 97AE 77           	ld (hl),a
  96+ 97AF 23           	inc hl
  97+ 97B0 7A               ld a,d
  98+ 97B1 AE               xor (hl)
  99+ 97B2 77           	ld (hl),a
 100+ 97B3 2B           	dec hl
 101+ 97B4 2B           	dec hl
 102+ 97B5 24           	inc h
 103+ 97B6 7C               ld a,h
 104+ 97B7 E6 07            and 7
 105+ 97B9 20 0A            jr nz,3F
 106+ 97BB 7D               ld a,l
 107+ 97BC C6 20            add a,$20
 108+ 97BE 6F               ld l,a
 109+ 97BF 38 04            jr c,3F
 110+ 97C1 7C               ld a,h
 111+ 97C2 D6 08            sub 8
 112+ 97C4 67               ld h,a
 113+ 97C5 7C           3 ld a,h
 114+ 97C6 FE 58            cp $58
 115+ 97C8 28 02            jr z,4F
 116+ 97CA 10 B7            djnz 1B
 117+ 97CC ED 7B 15 89  4 ld sp,(Stack)
 118+ 97D0 C9           	ret
 119+ 97D1
 120+ 97D1              ; ---------------------------------------------------
 121+ 97D1
 122+ 97D1 ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97D5 FD F9        	ld sp,iy
 124+ 97D7
 125+ 97D7              ; >>>
 126+ 97D7
 127+ 97D7 06 10            ld b,16
 128+ 97D9 D1           1 pop de
 129+ 97DA 7A           	ld a,d
 130+ 97DB AE           	xor (hl)
 131+ 97DC 77           	ld (hl),a
 132+ 97DD 24           	inc h
 133+ 97DE 7C               ld a,h
 134+ 97DF E6 07            and 7
 135+ 97E1 20 0C            jr nz,2F
 136+ 97E3 7D               ld a,l
 137+ 97E4 C6 20            add a,$20
 138+ 97E6 6F               ld l,a
 139+ 97E7 38 06            jr c,2F
 140+ 97E9 7C               ld a,h
 141+ 97EA D6 08            sub 8
 142+ 97EC 67               ld h,a
 143+ 97ED 18 00            jr 2F
 144+ 97EF 7C           2 ld a,h
 145+ 97F0 FE 58            cp $58
 146+ 97F2 28 02            jr z,3F
 147+ 97F4 10 E3            djnz 1B
 148+ 97F6 ED 7B 15 89  3 ld sp,(Stack)
 149+ 97FA C9           	ret
 150+ 97FB
 151+ 97FB ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97FF FD F9        	ld sp,iy
 153+ 9801
 154+ 9801              ; >>>
 155+ 9801
 156+ 9801 06 10            ld b,16
 157+ 9803 D1           1 pop de
 158+ 9804 7B           	ld a,e
 159+ 9805 AE           	xor (hl)
 160+ 9806 77           	ld (hl),a
 161+ 9807 24           	inc h
 162+ 9808 7C               ld a,h
 163+ 9809 E6 07            and 7
 164+ 980B 20 0C            jr nz,2F
 165+ 980D 7D               ld a,l
 166+ 980E C6 20            add a,$20
 167+ 9810 6F               ld l,a
 168+ 9811 38 06            jr c,2F
 169+ 9813 7C               ld a,h
 170+ 9814 D6 08            sub 8
 171+ 9816 67               ld h,a
 172+ 9817 18 00            jr 2F
 173+ 9819 7C           2 ld a,h
 174+ 981A FE 58            cp $58
 175+ 981C 28 02            jr z,3F
 176+ 981E 10 E3            djnz 1B
 177+ 9820 ED 7B 15 89  3 ld sp,(Stack)
 178+ 9824 C9           	ret
 179+ 9825
 180+ 9825              ; ---------------------------------------------------
 181+ 9825
 182+ 9825 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9829 FD F9        	ld sp,iy
 184+ 982B 06 08            ld b,8
 185+ 982D D1           1 pop de
 186+ 982E 7A           	ld a,d
 187+ 982F AE           	xor (hl)
 188+ 9830 77           	ld (hl),a
 189+ 9831 23           	inc hl
 190+ 9832 D1           	pop de
 191+ 9833 7B           	ld a,e
 192+ 9834 AE           	xor (hl)
 193+ 9835 77           	ld (hl),a
 194+ 9836 2B           	dec hl
 195+ 9837 24            	inc h
 196+ 9838 7C               ld a,h
 197+ 9839 E6 07            and 7
 198+ 983B 20 0A            jr nz,2F
 199+ 983D 7D               ld a,l
 200+ 983E C6 20            add a,$20
 201+ 9840 6F               ld l,a
 202+ 9841 38 04            jr c,2F
 203+ 9843 7C               ld a,h
 204+ 9844 D6 08            sub 8
 205+ 9846 67               ld h,a
 206+ 9847 7C           2 ld a,h
 207+ 9848 FE 58            cp $58
 208+ 984A 28 20            jr z,4F
 209+ 984C D1               pop de
 210+ 984D 7B           	ld a,e
 211+ 984E AE           	xor (hl)
 212+ 984F 77           	ld (hl),a
 213+ 9850 23           	inc hl
 214+ 9851 7A           	ld a,d
 215+ 9852 AE           	xor (hl)
 216+ 9853 77           	ld (hl),a
 217+ 9854 2B           	dec hl
 218+ 9855 24           	inc h
 219+ 9856 7C               ld a,h
 220+ 9857 E6 07            and 7
 221+ 9859 20 0A            jr nz,3F
 222+ 985B 7D               ld a,l
 223+ 985C C6 20            add a,$20
 224+ 985E 6F               ld l,a
 225+ 985F 38 04            jr c,3F
 226+ 9861 7C               ld a,h
 227+ 9862 D6 08            sub 8
 228+ 9864 67               ld h,a
 229+ 9865 7C           3 ld a,h
 230+ 9866 FE 58            cp $58
 231+ 9868 28 02            jr z,4F
 232+ 986A 10 C1            djnz 1B
 233+ 986C ED 7B 15 89  4 ld sp,(Stack)
 234+ 9870 C9           	ret
 235+ 9871
 236+ 9871 ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9875 FD F9        	ld sp,iy
 238+ 9877 06 08            ld b,8
 239+ 9879 D1           1 pop de
 240+ 987A D1           	pop de
 241+ 987B 7B           	ld a,e
 242+ 987C AE           	xor (hl)
 243+ 987D 77           	ld (hl),a
 244+ 987E 24            	inc h
 245+ 987F 7C               ld a,h
 246+ 9880 E6 07            and 7
 247+ 9882 20 0A            jr nz,2F
 248+ 9884 7D               ld a,l
 249+ 9885 C6 20            add a,$20
 250+ 9887 6F               ld l,a
 251+ 9888 38 04            jr c,2F
 252+ 988A 7C               ld a,h
 253+ 988B D6 08            sub 8
 254+ 988D 67               ld h,a
 255+ 988E 7C           2 ld a,h
 256+ 988F FE 58            cp $58
 257+ 9891 28 1B            jr z,4F
 258+ 9893 D1               pop de
 259+ 9894 7A           	ld a,d
 260+ 9895 AE           	xor (hl)
 261+ 9896 77           	ld (hl),a
 262+ 9897 24           	inc h
 263+ 9898 7C               ld a,h
 264+ 9899 E6 07            and 7
 265+ 989B 20 0A            jr nz,3F
 266+ 989D 7D               ld a,l
 267+ 989E C6 20            add a,$20
 268+ 98A0 6F               ld l,a
 269+ 98A1 38 04            jr c,3F
 270+ 98A3 7C               ld a,h
 271+ 98A4 D6 08            sub 8
 272+ 98A6 67               ld h,a
 273+ 98A7 7C           3 ld a,h
 274+ 98A8 FE 58            cp $58
 275+ 98AA 28 02            jr z,4F
 276+ 98AC 10 CB            djnz 1B
 277+ 98AE ED 7B 15 89  4 ld sp,(Stack)
 278+ 98B2 C9           	ret
 279+ 98B3
 280+ 98B3 ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98B7 FD F9        	ld sp,iy
 282+ 98B9 06 08            ld b,8
 283+ 98BB D1           1 pop de
 284+ 98BC 7B           	ld a,e
 285+ 98BD AE           	xor (hl)
 286+ 98BE 77           	ld (hl),a
 287+ 98BF 23           	inc hl
 288+ 98C0 7A           	ld a,d
 289+ 98C1 AE           	xor (hl)
 290+ 98C2 77           	ld (hl),a
 291+ 98C3 2B           	dec hl
 292+ 98C4 24             	inc h
 293+ 98C5 7C               ld a,h
 294+ 98C6 E6 07            and 7
 295+ 98C8 20 0A            jr nz,2F
 296+ 98CA 7D               ld a,l
 297+ 98CB C6 20            add a,$20
 298+ 98CD 6F               ld l,a
 299+ 98CE 38 04            jr c,2F
 300+ 98D0 7C               ld a,h
 301+ 98D1 D6 08            sub 8
 302+ 98D3 67               ld h,a
 303+ 98D4 7C           2 ld a,h
 304+ 98D5 FE 58            cp $58
 305+ 98D7 28 21            jr z,4F
 306+ 98D9 D1               pop de
 307+ 98DA 7A           	ld a,d
 308+ 98DB AE           	xor (hl)
 309+ 98DC 77           	ld (hl),a
 310+ 98DD 23           	inc hl
 311+ 98DE D1               pop de
 312+ 98DF 7B           	ld a,e
 313+ 98E0 AE           	xor (hl)
 314+ 98E1 77           	ld (hl),a
 315+ 98E2 2B           	dec hl
 316+ 98E3 24           	inc h
 317+ 98E4 7C               ld a,h
 318+ 98E5 E6 07            and 7
 319+ 98E7 20 0A            jr nz,3F
 320+ 98E9 7D               ld a,l
 321+ 98EA C6 20            add a,$20
 322+ 98EC 6F               ld l,a
 323+ 98ED 38 04            jr c,3F
 324+ 98EF 7C               ld a,h
 325+ 98F0 D6 08            sub 8
 326+ 98F2 67               ld h,a
 327+ 98F3 7C           3 ld a,h
 328+ 98F4 FE 58            cp $58
 329+ 98F6 28 02            jr z,4F
 330+ 98F8 10 C1            djnz 1B
 331+ 98FA ED 7B 15 89  4 ld sp,(Stack)
 332+ 98FE C9           	ret
 333+ 98FF
 334+ 98FF ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9903 FD F9        	ld sp,iy
 336+ 9905 06 08            ld b,8
 337+ 9907 D1           1 pop de
 338+ 9908 7B           	ld a,e
 339+ 9909 AE           	xor (hl)
 340+ 990A 77           	ld (hl),a
 341+ 990B 24            	inc h
 342+ 990C 7C               ld a,h
 343+ 990D E6 07            and 7
 344+ 990F 20 0A            jr nz,2F
 345+ 9911 7D               ld a,l
 346+ 9912 C6 20            add a,$20
 347+ 9914 6F               ld l,a
 348+ 9915 38 04            jr c,2F
 349+ 9917 7C               ld a,h
 350+ 9918 D6 08            sub 8
 351+ 991A 67               ld h,a
 352+ 991B 7C           2 ld a,h
 353+ 991C FE 58            cp $58
 354+ 991E 28 1C            jr z,4F
 355+ 9920 D1               pop de
 356+ 9921 7A           	ld a,d
 357+ 9922 AE           	xor (hl)
 358+ 9923 77           	ld (hl),a
 359+ 9924 24           	inc h
 360+ 9925 7C               ld a,h
 361+ 9926 E6 07            and 7
 362+ 9928 20 0A            jr nz,3F
 363+ 992A 7D               ld a,l
 364+ 992B C6 20            add a,$20
 365+ 992D 6F               ld l,a
 366+ 992E 38 04            jr c,3F
 367+ 9930 7C               ld a,h
 368+ 9931 D6 08            sub 8
 369+ 9933 67               ld h,a
 370+ 9934 7C           3 ld a,h
 371+ 9935 FE 58            cp $58
 372+ 9937 28 03            jr z,4F
 373+ 9939 D1               pop de
 374+ 993A 10 CB            djnz 1B
 375+ 993C ED 7B 15 89  4 ld sp,(Stack)
 376+ 9940 C9           	ret
 377+ 9941
 378+ 9941              ; ---------------------------------------------------
 379+ 9941              ;
 380+ 9941              ;   27/02/23
 381+ 9941              ;
 382+ 9941              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9941              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9941              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9941
 386+ 9941 ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9945 FD F9            ld sp,iy
 388+ 9947 06 03            ld b,3
 389+ 9949 D1           1 pop de
 390+ 994A 7B               ld a,e
 391+ 994B AE               xor (hl)
 392+ 994C 77               ld (hl),a
 393+ 994D 23               inc hl
 394+ 994E 7A               ld a,d
 395+ 994F AE               xor (hl)
 396+ 9950 77               ld (hl),a
 397+ 9951 2B               dec hl
 398+ 9952
 399+ 9952 24               inc h
 400+ 9953 7C               ld a,h
 401+ 9954 E6 07            and 7
 402+ 9956 20 0A            jr nz,2F
 403+ 9958 7D               ld a,l
 404+ 9959 C6 20            add a,$20
 405+ 995B 6F               ld l,a
 406+ 995C 38 04            jr c,2F
 407+ 995E 7C               ld a,h
 408+ 995F D6 08            sub 8
 409+ 9961 67               ld h,a
 410+ 9962 7C           2 ld a,h
 411+ 9963 FE 58            cp $58
 412+ 9965 28 02            jr z,3F
 413+ 9967
 414+ 9967 10 E0            djnz 1B
 415+ 9969 ED 7B 15 89  3 ld sp,(Stack)
 416+ 996D C9               ret
 417+ 996E
# file closed: Rutinas_de_impresion_sprites.asm
1674  996E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 996E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 996E              ;
   3+ 996E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 996E              ;
   5+ 996E              ; *****************************************************************************************************************************************************************************************
   6+ 996E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 996E
   8+ 996E 7C           calcula_tercio ld a,h
   9+ 996F E6 18        	and $18
  10+ 9971 CB 2F        	sra a
  11+ 9973 CB 2F        	sra a
  12+ 9975 CB 2F        	sra a
  13+ 9977 C9           	ret
  14+ 9978
# file closed: calcula_tercio.asm
1675  9978              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9978              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9978              ;
   3+ 9978              ;
   4+ 9978              ;	CLS.
   5+ 9978              ;
   6+ 9978              ;	Limpia la pantalla y define sus atributos.
   7+ 9978              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9978              ;
   9+ 9978              ;	COLORES: 0 ..... NEGRO
  10+ 9978              ;    		 1 ..... AZUL
  11+ 9978              ; 			 2 ..... ROJO
  12+ 9978              ;			 3 ..... MAGENTA
  13+ 9978              ; 			 4 ..... VERDE
  14+ 9978              ; 			 5 ..... CIAN
  15+ 9978              ;			 6 ..... AMARILLO
  16+ 9978              ; 			 7 ..... BLANCO
  17+ 9978              ;
  18+ 9978              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9978              ;
  20+ 9978              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9978
  22+ 9978
  23+ 9978 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 997B 11 01 40     	LD DE,$4001
  25+ 997E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9981 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9983 ED B0        	LDIR
  28+ 9985 01 FF 02     	LD BC,767
  29+ 9988 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9989 ED B0        	LDIR
  31+ 998B C9           	ret
  32+ 998C
# file closed: Cls.asm
1676  998C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998C              ; ******************************************************************************************************************************************************************************************
   2+ 998C              ;
   3+ 998C              ;   20/05/23
   4+ 998C              ;
   5+ 998C              ;	Recompone_posicion_inicio
   6+ 998C              ;
   7+ 998C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 998C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 998C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 998C              ;	_ a una u otra rutina.
  11+ 998C
  12+ 998C              Recompone_posicion_inicio
  13+ 998C
  14+ 998C 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 998F 7D           	ld a,l
  16+ 9990 E6 1F        	and $1f
  17+ 9992 28 16        	jr z,1F
  18+ 9994
  19+ 9994 FE 1F        	cp $1f
  20+ 9996 28 0D        	jr z,3F
  21+ 9998
  22+ 9998 21 01 89     	ld hl,Ctrl_2
  23+ 999B CB C6        	set 0,(hl)
  24+ 999D 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 99A0 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99A3 18 08        	jr 2F
  27+ 99A5
  28+ 99A5 CD 46 9B     3 call Mov_left
  29+ 99A8 18 03        	jr 2F
  30+ 99AA
  31+ 99AA CD 28 9A     1 call Mov_right
  32+ 99AD 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99B0 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99B3 C9           	ret
  35+ 99B4
  36+ 99B4              ; ******************************************************************************************************************************************************************************************
  37+ 99B4              ;
  38+ 99B4              ;   27/05/23
  39+ 99B4              ;
  40+ 99B4              ;	Mov_down
  41+ 99B4              ;
  42+ 99B4              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99B4              ;
  44+ 99B4              ;
  45+ 99B4              Mov_down
  46+ 99B4
  47+ 99B4 CD 16 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99B7              ;																	; _ repone (Puntero_objeto).
  49+ 99B7 21 F0 88     	ld hl,Ctrl_0
  50+ 99BA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99BC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99BC              ; 																	; _ en el caso de que no lo haya.
  53+ 99BC 3A DE 88     	ld a,(Vel_down)
  54+ 99BF 47           	ld b,a
  55+ 99C0 2A C8 88         ld hl,(Posicion_actual)
  56+ 99C3 CD 6E 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99C6 E6 02        	and 2
  58+ 99C8 28 0F        	jr z,1F
  59+ 99CA
  60+ 99CA              ; Nos encontramos en el último tercio de pantalla.
  61+ 99CA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99CA
  63+ 99CA 7C           	ld a,h
  64+ 99CB FE 57        	cp $57
  65+ 99CD 20 0A        	jr nz,1F
  66+ 99CF
  67+ 99CF 7D           	ld a,l
  68+ 99D0 C6 20        	add $20
  69+ 99D2 30 05        	jr nc,1F
  70+ 99D4
  71+ 99D4              ; ------------------------------
  72+ 99D4              ;	call Reaparece_arriba
  73+ 99D4 CD D3 9C     	call Reinicio
  74+ 99D7              ; ------------------------------
  75+ 99D7
  76+ 99D7 18 08        	jr 3F
  77+ 99D9 CD 5B 96     1 call NextScan
  78+ 99DC 22 C8 88     	ld (Posicion_actual),hl
  79+ 99DF 10 E2            djnz 2B
  80+ 99E1 CD F9 9C     3 call Genera_coordenadas
  81+ 99E4 C9           	ret
  82+ 99E5
  83+ 99E5              ; ******************************************************************************************************************************************************************************************
  84+ 99E5              ;
  85+ 99E5              ;   27/05/23
  86+ 99E5              ;
  87+ 99E5              ;	Mov_up
  88+ 99E5              ;
  89+ 99E5              ; 	Mueve el Sprite hacia arriba.
  90+ 99E5              ;
  91+ 99E5              ;
  92+ 99E5              Mov_up
  93+ 99E5
  94+ 99E5 CD 16 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99E8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99E8 21 F0 88     	ld hl,Ctrl_0
  97+ 99EB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99ED              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99ED              ; 																		; _ en el caso de que no lo haya.
 100+ 99ED 3A DD 88     	ld a,(Vel_up)
 101+ 99F0 47           	ld b,a
 102+ 99F1 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99F4 CD 6E 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99F7 A7           	and a
 105+ 99F8 20 10        	jr nz,1F
 106+ 99FA
 107+ 99FA              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99FA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99FA
 110+ 99FA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99FB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99FD 20 0B            jr nz,1F
 113+ 99FF 7D               ld a,l
 114+ 9A00 D6 20            sub $20
 115+ 9A02 30 06            jr nc,1F
 116+ 9A04 25               dec h
 117+ 9A05
 118+ 9A05              ; -----------------------------
 119+ 9A05 CD B4 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A08              ;	call Reinicio
 121+ 9A08              ; -----------------------------
 122+ 9A08
 123+ 9A08 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A0A CD 6A 96     1 call PreviousScan
 125+ 9A0D 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A10 10 E2            djnz 3B
 127+ 9A12 CD F9 9C     2 call Genera_coordenadas
 128+ 9A15 C9           	ret
 129+ 9A16
 130+ 9A16              ; -----------------------------
 131+ 9A16              ;
 132+ 9A16              ;	27/5/23
 133+ 9A16              ;
 134+ 9A16              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A16              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A16              ;
 137+ 9A16              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A16              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A16              ;
 140+ 9A16              ;	Modifica: A y (Puntero_objeto).
 141+ 9A16
 142+ 9A16 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A19 CB 47        	bit 0,a
 144+ 9A1B C8           	ret z
 145+ 9A1C CB 87        	res 0,a
 146+ 9A1E 32 01 89     	ld (Ctrl_2),a
 147+ 9A21 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A24 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A27 C9           	ret
 150+ 9A28
 151+ 9A28              ; ******************************************************************************************************************************************************************************************
 152+ 9A28              ;
 153+ 9A28              ;	19/10/22
 154+ 9A28              ;
 155+ 9A28              ;	Mov_right.
 156+ 9A28              ;
 157+ 9A28              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A28              ;
 159+ 9A28
 160+ 9A28 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A2B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A2D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A2D              ; 																	; _ en el caso de que no lo haya.
 164+ 9A2D 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A30 CB 77        	bit 6,a
 166+ 9A32 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A34
 168+ 9A34 CD 62 9C     	call Stop_Amadeus_right
 169+ 9A37 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A38 18 4D        	jr 8F
 171+ 9A3A
 172+ 9A3A 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A3D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A3F 20 46        	jr nz,8F
 175+ 9A41
 176+ 9A41 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A44 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A45 28 40        	jr z,8F
 179+ 9A47
 180+ 9A47              ; ---------- ---------- ----------
 181+ 9A47              ;
 182+ 9A47              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A47
 184+ 9A47 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A4A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A4C 28 11        	jr z,1F
 187+ 9A4E 38 06        	jr c,6F
 188+ 9A50 FE 04        	cp 4
 189+ 9A52 28 14        	jr z,7F
 190+ 9A54 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A56
 192+ 9A56              ; ---------- ---------- ----------
 193+ 9A56              ;
 194+ 9A56              ; Perfiles de velocidad
 195+ 9A56              ;
 196+ 9A56
 197+ 9A56 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A59 FE FE        	cp $fe
 199+ 9A5B 20 2A        	jr nz,8F
 200+ 9A5D 18 10        	jr 3F
 201+ 9A5F 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A62 FE FD        	cp $fd
 203+ 9A64 20 21        	jr nz,8F
 204+ 9A66 18 07        	jr 3F
 205+ 9A68 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A6B FE FB        	cp $fb
 207+ 9A6D 20 18        	jr nz,8F
 208+ 9A6F
 209+ 9A6F              ; ---------- ---------- ----------
 210+ 9A6F
 211+ 9A6F              3
 212+ 9A6F CD A2 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A72              ;	call Reinicio
 214+ 9A72
 215+ 9A72              ; ---------- ---------- ----------
 216+ 9A72              ;
 217+ 9A72              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A72
 219+ 9A72 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A74 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A75 CD 8E 9A     	call DESPLZ_DER
 222+ 9A78 C1           	pop bc
 223+ 9A79 10 F9        	djnz 5B
 224+ 9A7B 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A7E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A7F 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A82 CD F9 9C     	call Genera_coordenadas
 228+ 9A85 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A87
 230+ 9A87              ; ---------- ---------- ----------
 231+ 9A87
 232+ 9A87 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A8A CD 8E 9A     	call DESPLZ_DER
 234+ 9A8D C9           2 ret
 235+ 9A8E
 236+ 9A8E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A8E              ;
 238+ 9A8E              ;	22/9/22
 239+ 9A8E              ;
 240+ 9A8E
 241+ 9A8E CD 9D 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A91 CD E9 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A94 CD 12 9B         call Ciclo_completo
 244+ 9A97 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A9A CB FE        	set 7,(hl)
 246+ 9A9C C9           	ret
 247+ 9A9D
 248+ 9A9D              ; ******************************************************************************************************************************************************************************************
 249+ 9A9D              ;	15/02/23
 250+ 9A9D              ;
 251+ 9A9D
 252+ 9A9D 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AA0 47           	ld b,a
 254+ 9AA1 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AA4 23           1 inc hl
 256+ 9AA5 23           	inc hl
 257+ 9AA6 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AA8 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AAB CD 80 8C     	call Extrae_address
 260+ 9AAE 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9AB1
 262+ 9AB1              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AB1
 264+ 9AB1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AB1              ; Cuántos movimientos hemos hecho ??
 266+ 9AB1              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AB1
 268+ 9AB1 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AB4 EB           	ex de,hl
 270+ 9AB5 A7           	and a
 271+ 9AB6 ED 52        	sbc hl,de
 272+ 9AB8 CB 3D        	srl l
 273+ 9ABA 3E 08        6 ld a,8
 274+ 9ABC 95           	sub l
 275+ 9ABD 30 1E        	jr nc,3F
 276+ 9ABF
 277+ 9ABF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9ABF              ; B="0".
 279+ 9ABF
 280+ 9ABF 04           4 inc b
 281+ 9AC0 3C           	inc a
 282+ 9AC1 20 FC        	jr nz,4B
 283+ 9AC3 78           	ld a,b
 284+ 9AC4 08           	ex af,af
 285+ 9AC5 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9AC8 23           5 inc hl
 287+ 9AC9 23           	inc hl
 288+ 9ACA 10 FC        	djnz 5B
 289+ 9ACC 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9ACF CD 80 8C     	call Extrae_address
 291+ 9AD2 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9AD5
 293+ 9AD5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AD5              ; _(Posicion_actual).
 295+ 9AD5
 296+ 9AD5 21 C8 88     	ld hl,Posicion_actual
 297+ 9AD8 34           	inc (hl)
 298+ 9AD9 08               ex af,af
 299+ 9ADA 6F           	ld l,a
 300+ 9ADB 18 DD        	jr 6B
 301+ 9ADD
 302+ 9ADD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9ADD
 304+ 9ADD 47           3 ld b,a
 305+ 9ADE 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AE1 23           2 inc hl
 307+ 9AE2 23           	inc hl
 308+ 9AE3 10 FC        	djnz 2B
 309+ 9AE5 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AE8 C9           8 ret
 311+ 9AE9
 312+ 9AE9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AE9              ;
 314+ 9AE9              ;	24/7/22
 315+ 9AE9              ;
 316+ 9AE9              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AE9              ;
 318+ 9AE9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AE9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AE9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AE9
 322+ 9AE9 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AEC A7           	and a
 324+ 9AED 20 1F        	jr nz,1F
 325+ 9AEF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AF1 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9AF4
 328+ 9AF4 21 C7 88     	ld hl,Columns
 329+ 9AF7 34           	inc (hl)
 330+ 9AF8 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AFB E6 01        	and 1
 332+ 9AFD 28 0F        	jr z,1F
 333+ 9AFF 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B02 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B03 22 C8 88     	ld (Posicion_actual),hl
 336+ 9B06 CD F9 9C     	call Genera_coordenadas
 337+ 9B09 CD 6E 9C     	call Inc_CTRL_DESPLZ
 338+ 9B0C 18 03        	jr 2F
 339+ 9B0E CD 6E 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B11 C9           2 ret
 341+ 9B12
 342+ 9B12              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B12              ;
 344+ 9B12              ;	24/7/22
 345+ 9B12              ;
 346+ 9B12              ;	Ciclo_completo.
 347+ 9B12              ;
 348+ 9B12              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B12              ;
 350+ 9B12              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B12              ; 	Decrementamos (Columns).
 352+ 9B12              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B12              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B12
 355+ 9B12
 356+ 9B12 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B15 FE FF        	cp $ff
 358+ 9B17 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B19 E6 F0        	and $f0
 360+ 9B1B 20 28        	jr nz,3F
 361+ 9B1D
 362+ 9B1D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B1D
 364+ 9B1D 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B20 47           	ld b,a
 366+ 9B21 3E F8        	ld a,$f8
 367+ 9B23 80           	add b
 368+ 9B24 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B27 18 1C        	jr 3F
 370+ 9B29 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B2C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B2D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B2E 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B31 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B34 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B36 20 0A        	jr nz,2F
 377+ 9B38 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B3B 23           	inc hl
 379+ 9B3C 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B3F CD F9 9C     	call Genera_coordenadas
 381+ 9B42
 382+ 9B42              ; Inicia el puntero de Sprite.
 383+ 9B42
 384+ 9B42 CD 97 8C     2 call Inicia_puntero_objeto_der
 385+ 9B45 C9           3 ret
 386+ 9B46
 387+ 9B46              ; ******************************************************************************************************************************************************************************************
 388+ 9B46              ;
 389+ 9B46              ;	15/02/23
 390+ 9B46              ;
 391+ 9B46              ;	Mov_left.
 392+ 9B46              ;
 393+ 9B46              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B46              ;
 395+ 9B46              Mov_left
 396+ 9B46
 397+ 9B46 21 F0 88     	ld hl,Ctrl_0
 398+ 9B49 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B4B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B4B              ; 																	; _ en el caso de que no lo haya.
 401+ 9B4B 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B4E CB 77        	bit 6,a
 403+ 9B50 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B52
 405+ 9B52 CD 68 9C     	call Stop_Amadeus_left
 406+ 9B55 C8           	ret z
 407+ 9B56 20 4A        	jr nz,8F
 408+ 9B58
 409+ 9B58 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B5B A7           	and a
 411+ 9B5C 20 44        	jr nz,8F
 412+ 9B5E
 413+ 9B5E 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B61 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B62 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B64
 417+ 9B64              ; ---------- ---------- ----------
 418+ 9B64
 419+ 9B64 3A DB 88     	ld a,(Vel_left)
 420+ 9B67 FE 02        	cp 2
 421+ 9B69 28 0F        	jr z,1F
 422+ 9B6B 38 04        	jr c,6F
 423+ 9B6D FE 04        	cp 4
 424+ 9B6F 28 12        	jr z,7F
 425+ 9B71
 426+ 9B71              ; ---------- ---------- ----------
 427+ 9B71
 428+ 9B71 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B74 FE F8        	cp $f8
 430+ 9B76 20 2A        	jr nz,8F
 431+ 9B78 18 10        	jr 4F
 432+ 9B7A 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B7D FE F9        	cp $f9
 434+ 9B7F 20 21        	jr nz,8F
 435+ 9B81 18 07        	jr 4F
 436+ 9B83 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B86 FE FB        	cp $fb
 438+ 9B88 20 18        	jr nz,8F
 439+ 9B8A
 440+ 9B8A              ; ---------- ---------- ----------
 441+ 9B8A
 442+ 9B8A              4
 443+ 9B8A CD 90 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B8D              ;	call Reinicio
 445+ 9B8D
 446+ 9B8D              ; ---------- ---------- ----------
 447+ 9B8D
 448+ 9B8D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B8F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B90
 451+ 9B90              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B90              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B90
 454+ 9B90 CD A9 9B     	call DESPLZ_IZQ
 455+ 9B93 C1           	pop bc
 456+ 9B94 10 F9        	djnz 5B
 457+ 9B96 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B99 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B9A 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B9D CD F9 9C     	call Genera_coordenadas
 461+ 9BA0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BA2
 463+ 9BA2              ; ---------- ---------- ----------
 464+ 9BA2
 465+ 9BA2              ; Movemos, no hay recolocación.
 466+ 9BA2
 467+ 9BA2 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9BA5 CD A9 9B     	call DESPLZ_IZQ
 469+ 9BA8 C9           2 ret
 470+ 9BA9
 471+ 9BA9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BA9              ;
 473+ 9BA9              ;	22/9/22
 474+ 9BA9
 475+ 9BA9              DESPLZ_IZQ
 476+ 9BA9
 477+ 9BA9 CD B8 9B     	call Desplaza_izquierda
 478+ 9BAC CD 04 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BAF CD 2C 9C     	call Ciclo_completo_2
 480+ 9BB2 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BB5 CB BE        	res 7,(hl)
 482+ 9BB7 C9           	ret
 483+ 9BB8
 484+ 9BB8              Desplaza_izquierda
 485+ 9BB8
 486+ 9BB8 3A DB 88     	ld a,(Vel_left)
 487+ 9BBB 47           	ld b,a
 488+ 9BBC 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BBF 23           1 inc hl
 490+ 9BC0 23           	inc hl
 491+ 9BC1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BC3 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BC6 CD 80 8C     	call Extrae_address
 494+ 9BC9 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BCC
 496+ 9BCC              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BCC
 498+ 9BCC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BCC              ; Cuántos movimientos hemos hecho ??
 500+ 9BCC              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BCC
 502+ 9BCC 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BCF EB           	ex de,hl
 504+ 9BD0 A7           	and a
 505+ 9BD1 ED 52        	sbc hl,de
 506+ 9BD3 CB 3D        	srl l
 507+ 9BD5 3E 08        6 ld a,8
 508+ 9BD7 95           	sub l
 509+ 9BD8 30 1E        	jr nc,3F
 510+ 9BDA
 511+ 9BDA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BDA              ; B="0".
 513+ 9BDA
 514+ 9BDA 04           4 inc b
 515+ 9BDB 3C           	inc a
 516+ 9BDC 20 FC        	jr nz,4B
 517+ 9BDE 78           	ld a,b
 518+ 9BDF 08           	ex af,af
 519+ 9BE0 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BE3 23           5 inc hl
 521+ 9BE4 23           	inc hl
 522+ 9BE5 10 FC        	djnz 5B
 523+ 9BE7 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BEA CD 80 8C     	call Extrae_address
 525+ 9BED 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BF0
 527+ 9BF0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BF0              ; _(Posicion_actual).
 529+ 9BF0
 530+ 9BF0 21 C8 88     	ld hl,Posicion_actual
 531+ 9BF3 35           	dec (hl)
 532+ 9BF4 08           	ex af,af
 533+ 9BF5 6F           	ld l,a
 534+ 9BF6 18 DD        	jr 6B
 535+ 9BF8
 536+ 9BF8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BF8
 538+ 9BF8 47           3 ld b,a
 539+ 9BF9 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BFC 23           2 inc hl
 541+ 9BFD 23           	inc hl
 542+ 9BFE 10 FC        	djnz 2B
 543+ 9C00 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C03 C9           8 ret
 545+ 9C04
 546+ 9C04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C04              ;
 548+ 9C04              ;	modifica_parametros_1er_DESPLZ
 549+ 9C04              ;
 550+ 9C04              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C04              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C04              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C04
 554+ 9C04 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C07 A7           	and a
 556+ 9C08 20 1E        	jr nz,1F
 557+ 9C0A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C0B 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9C0E 21 C7 88     	ld hl,Columns
 560+ 9C11 34           	inc (hl)
 561+ 9C12 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C15 E6 01        	and 1
 563+ 9C17 20 0F        	jr nz,1F
 564+ 9C19 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C1C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C1D 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C20 CD F9 9C     	call Genera_coordenadas
 568+ 9C23 CD 7F 9C     	call Dec_CTRL_DESPLZ
 569+ 9C26 18 03        	jr 2F
 570+ 9C28 CD 7F 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C2B C9           2 ret
 572+ 9C2C
 573+ 9C2C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C2C
 575+ 9C2C 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C2F FE F7        	cp $f7
 577+ 9C31 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C33 30 2C        	jr nc,3F
 579+ 9C35
 580+ 9C35              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C35
 582+ 9C35 06 00        	ld b,0
 583+ 9C37 04           4 inc b
 584+ 9C38 3C           	inc a
 585+ 9C39 FE F7        	cp $f7
 586+ 9C3B 20 FA        	jr nz,4B
 587+ 9C3D 3E FF        	ld a,$ff
 588+ 9C3F 90           	sub b
 589+ 9C40 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C43 18 1C        	jr 3F
 591+ 9C45
 592+ 9C45              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C45
 594+ 9C45 21 C7 88     1 ld hl,Columns
 595+ 9C48 35           	dec (hl)
 596+ 9C49 AF           	xor a
 597+ 9C4A 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C4D 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C50 E6 01        	and 1
 600+ 9C52 28 0A        	jr z,2F
 601+ 9C54 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C57 2B           	dec hl
 603+ 9C58 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C5B CD F9 9C     	call Genera_coordenadas
 605+ 9C5E
 606+ 9C5E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C5E
 608+ 9C5E CD AA 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C61 C9           3 ret
 610+ 9C62
 611+ 9C62              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C62              ;
 613+ 9C62              ;	19/10/22
 614+ 9C62              ;
 615+ 9C62              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C62              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C62
 618+ 9C62 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C65 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C67 C9           	ret
 621+ 9C68
 622+ 9C68              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C68              ;
 624+ 9C68              ;	19/10/22
 625+ 9C68              ;
 626+ 9C68              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C68              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C68
 629+ 9C68 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C6B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C6D C9           	ret
 632+ 9C6E
 633+ 9C6E              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C6E              ;
 635+ 9C6E              ;	24/7/22
 636+ 9C6E              ;
 637+ 9C6E              ;	Inc_CTRL_DESPLZ
 638+ 9C6E              ;
 639+ 9C6E              ;
 640+ 9C6E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C6E
 642+ 9C6E 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C71 3A DC 88     	ld a,(Vel_right)
 644+ 9C74 A7           	and a
 645+ 9C75 28 06        	jr z,1F
 646+ 9C77 47           	ld b,a
 647+ 9C78 34           3 inc (hl)
 648+ 9C79 10 FD        	djnz 3B
 649+ 9C7B 18 01        	jr 2F
 650+ 9C7D 34           1 inc (hl)
 651+ 9C7E C9           2 ret
 652+ 9C7F
 653+ 9C7F              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C7F              ;
 655+ 9C7F              ;	5/2/23
 656+ 9C7F              ;
 657+ 9C7F              ;	Dec_CTRL_DESPLZ
 658+ 9C7F              ;
 659+ 9C7F              ;
 660+ 9C7F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C7F
 662+ 9C7F 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C82 3A DB 88     	ld a,(Vel_left)
 664+ 9C85 A7           	and a
 665+ 9C86 28 06        	jr z,1F
 666+ 9C88 47           	ld b,a
 667+ 9C89 35           3 dec (hl)
 668+ 9C8A 10 FD        	djnz 3B
 669+ 9C8C 18 01        	jr 2F
 670+ 9C8E 35           1 dec (hl)
 671+ 9C8F C9           2 ret
 672+ 9C90
 673+ 9C90              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C90
 675+ 9C90 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C93 01 1F 00     	ld bc,31
 677+ 9C96 A7           	and a
 678+ 9C97 ED 4A        	adc hl,bc
 679+ 9C99 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C9C 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C9F CB C6        	set 0,(hl)
 682+ 9CA1 C9           	ret
 683+ 9CA2
 684+ 9CA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CA2
 686+ 9CA2 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CA5 01 1F 00     	ld bc,31
 688+ 9CA8 A7           	and a
 689+ 9CA9 ED 42        	sbc hl,bc
 690+ 9CAB 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CAE 21 F0 88     	ld hl,Ctrl_0
 692+ 9CB1 CB CE        	set 1,(hl)
 693+ 9CB3 C9           	ret
 694+ 9CB4
 695+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CB4
 697+ 9CB4 24           Reaparece_abajo inc h
 698+ 9CB5 01 E0 17     	ld bc,$17e0
 699+ 9CB8 A7           	and a
 700+ 9CB9 ED 4A        	adc hl,bc
 701+ 9CBB 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CBE 21 F0 88     	ld hl,Ctrl_0
 703+ 9CC1 CB D6        	set 2,(hl)
 704+ 9CC3 C9           	ret
 705+ 9CC4
 706+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CC4
 708+ 9CC4 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CC7 A7           	and a
 710+ 9CC8 ED 42        	sbc hl,bc
 711+ 9CCA 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CCD 21 F0 88     	ld hl,Ctrl_0
 713+ 9CD0 CB DE        	set 3,(hl)
 714+ 9CD2 C9           	ret
 715+ 9CD3
 716+ 9CD3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CD3              ;
 718+ 9CD3              ;	15/07/23
 719+ 9CD3
 720+ 9CD3              Reinicio
 721+ 9CD3
 722+ 9CD3              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CD3
 724+ 9CD3 AF           	xor a
 725+ 9CD4 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CD7 CD F5 9C     	call Limpia_contenido_hl
 727+ 9CDA
 728+ 9CDA 21 C8 88     	ld hl,Posicion_actual
 729+ 9CDD CD F5 9C     	call Limpia_contenido_hl
 730+ 9CE0
 731+ 9CE0 CD 25 A0     	call Inicializa_Puntero_indice_mov
 732+ 9CE3 CD AF 9F     	call Inicia_Puntero_mov
 733+ 9CE6
 734+ 9CE6 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CE9 06 05        	ld b,5
 736+ 9CEB 77           1 ld (hl),a
 737+ 9CEC 23           	inc hl
 738+ 9CED 10 FC        	djnz 1B
 739+ 9CEF
 740+ 9CEF 21 01 89     	ld hl,Ctrl_2
 741+ 9CF2 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CF4
 743+ 9CF4 C9           	ret
 744+ 9CF5
 745+ 9CF5 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CF6 23           	inc hl
 747+ 9CF7 77           	ld (hl),a
 748+ 9CF8 C9           	ret
 749+ 9CF9
 750+ 9CF9
# file closed: Direcciones.asm
1677  9CF9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CF9              ; ------------------------------------------------------------------------
   2+ 9CF9              ;
   3+ 9CF9              ;	02/04/23
   4+ 9CF9              ;
   5+ 9CF9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CF9              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CF9              ;
   8+ 9CF9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CF9              ;
  10+ 9CF9              ;	Modifica: A,BC y DE.
  11+ 9CF9
  12+ 9CF9 C5           Genera_coordenadas push bc
  13+ 9CFA E5           	push hl
  14+ 9CFB D5           	push de
  15+ 9CFC
  16+ 9CFC 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CFF
  18+ 9CFF 7D           	ld a,l
  19+ 9D00 E6 1F        	and $1f
  20+ 9D02 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D05
  22+ 9D05 CD 6E 99     	call calcula_tercio
  23+ 9D08 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D09
  25+ 9D09 1E 00        	ld e,0
  26+ 9D0B 7D           	ld a,l
  27+ 9D0C E6 E0        	and $e0
  28+ 9D0E 28 01        	jr z,1F
  29+ 9D10 04           	inc b
  30+ 9D11
  31+ 9D11 04           1 inc b
  32+ 9D12 05           	dec b
  33+ 9D13 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D15              ;														; _ , salimos.
  35+ 9D15 1C           3 inc e
  36+ 9D16 D6 20        	sub 32
  37+ 9D18 20 FB        	jr nz,3B
  38+ 9D1A 10 F5        	djnz 1B
  39+ 9D1C
  40+ 9D1C 7B           2 ld a,e
  41+ 9D1D 32 CD 88     	ld (Coordenada_y),a
  42+ 9D20
  43+ 9D20 D1           	pop de
  44+ 9D21 E1           	pop hl
  45+ 9D22 C1           	pop bc
  46+ 9D23
  47+ 9D23 C9           	ret
  48+ 9D24
  49+ 9D24              ; ------------------------------------------------------------------------
  50+ 9D24              ;	28/05/23
  51+ 9D24              ;
  52+ 9D24              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D24              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D24              ;
  55+ 9D24              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D24              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D24              ;
  58+ 9D24              ;		DE="$120d"
  59+ 9D24              ;
  60+ 9D24              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D24              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D24              ;
  63+ 9D24              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D24
  65+ 9D24              ;	Modifica: A,BC y DE.
  66+ 9D24
  67+ 9D24
  68+ 9D24              Genera_coordenadas_disparo
  69+ 9D24
  70+ 9D24              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D24
  72+ 9D24 7D           	ld a,l
  73+ 9D25 E6 1F        	and $1f
  74+ 9D27 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D28 CD 6E 99     	call calcula_tercio
  76+ 9D2B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D2C 1E 00        	ld e,0
  78+ 9D2E 7D           	ld a,l
  79+ 9D2F E6 E0        	and $e0
  80+ 9D31 28 01        	jr z,1F
  81+ 9D33 04           	inc b
  82+ 9D34 1C           1 inc e
  83+ 9D35 D6 20        	sub 32
  84+ 9D37 20 FB        	jr nz,1B
  85+ 9D39 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D3B C9           	ret
  87+ 9D3C
# file closed: Genera_coordenadas.asm
1678  9D3C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D3C              ; Relojes y temporizaciones.
   2+ 9D3C
   3+ 9D3C              ; ------------------------------------------------------
   4+ 9D3C              ;
   5+ 9D3C              ;	16/7/23
   6+ 9D3C              ;
   7+ 9D3C              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D3C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D3C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D3C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D3C              ;
  12+ 9D3C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D3C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D3C
  15+ 9D3C              ; Disparo_entidad db 1
  16+ 9D3C              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D3C              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D3C
  19+ 9D3C              Habilita_disparos
  20+ 9D3C
  21+ 9D3C 7E           	ld a,(hl)
  22+ 9D3D A7           	and a
  23+ 9D3E C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D3F
  25+ 9D3F EB           	ex de,hl
  26+ 9D40
  27+ 9D40 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D41 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D42
  30+ 9D42              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D42
  32+ 9D42 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D43 7E           	ld a,(hl)
  34+ 9D44 23           	inc hl
  35+ 9D45 77           	ld (hl),a
  36+ 9D46
  37+ 9D46 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D47 3E 01        	ld a,1
  39+ 9D49 77           	ld (hl),a
  40+ 9D4A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1679  9D4B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D4B
   2+ 9D4B
   3+ 9D4B              ;   07/07/23
   4+ 9D4B              ;
   5+ 9D4B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D4B              ;
   7+ 9D4B              ;   Codificación:
   8+ 9D4B              ;
   9+ 9D4B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D4B              ;
  11+ 9D4B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D4B              ;
  13+ 9D4B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D4B              ;
  15+ 9D4B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D4B              ;
  17+ 9D4B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D4B              ;                               ..... %01000010 Vel_up 4
  19+ 9D4B              ;                                               Vel_down 2
  20+ 9D4B              ;                               ..... $42
  21+ 9D4B              ;
  22+ 9D4B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D4B              ;
  24+ 9D4B              ;                               ..... %01000010 Vel_left 4
  25+ 9D4B              ;                                               Vel_right 2
  26+ 9D4B              ;                               ..... $42
  27+ 9D4B              ;
  28+ 9D4B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D4B              ;
  30+ 9D4B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D4B              ;
  32+ 9D4B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D4B              ;
  34+ 9D4B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D4B              ;                                     $53
  36+ 9D4B              ;
  37+ 9D4B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D4B              ;
  39+ 9D4B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D4B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D4B              ;
  42+ 9D4B              ;                       Arriba ..... $81
  43+ 9D4B              ;                       Arriba - izquierda ..... $a1
  44+ 9D4B              ;                       Arriba - derecha ..... $91
  45+ 9D4B              ;
  46+ 9D4B              ;                       Abajo ..... $41
  47+ 9D4B              ;                       Abajo - izquierda ..... $61
  48+ 9D4B              ;                       Abajo - derecha ..... $51
  49+ 9D4B              ;
  50+ 9D4B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D4B              ;
  52+ 9D4B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D4B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D4B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D4B              ;
  56+ 9D4B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D4B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D4B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D4B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D4B              ;
  61+ 9D4B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D4B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D4B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D4B              ;
  65+ 9D4B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D4B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D4B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D4B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D4B
  70+ 9D4B              ; ----- ----- ----- ----- -----
  71+ 9D4B
  72+ 9D4B 77 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D4D 7F 9D            defw F_1
  74+ 9D4F 89 9D            defw F_2
  75+ 9D51 93 9D            defw Codo_abajo_derecha
  76+ 9D53 C7 9D            defw Derecha_y_subiendo
  77+ 9D55 D1 9D            defw Derecha_y_subiendo_1
  78+ 9D57 DB 9D            defw F_3
  79+ 9D59 E5 9D            defw F_4
  80+ 9D5B EF 9D            defw Derecha_y_bajando
  81+ 9D5D F9 9D            defw Derecha_y_bajando_1
  82+ 9D5F 03 9E            defw Derecha_y_bajando_2
  83+ 9D61 0D 9E            defw Codo_derecha_abajo
  84+ 9D63 3D 9E            defw Codo_abajo_izq.
  85+ 9D65 71 9E            defw Izquierda_y_subiendo
  86+ 9D67 7B 9E            defw Izquierda_y_subiendo_1
  87+ 9D69 85 9E            defw F_5
  88+ 9D6B 8F 9E            defw F_6
  89+ 9D6D 99 9E            defw Izquierda_y_bajando
  90+ 9D6F A3 9E            defw Izquierda_y_bajando_1
  91+ 9D71 AD 9E            defw Izquierda_y_bajando_2
  92+ 9D73 B7 9E            defw Codo_izquierda_abajo
  93+ 9D75 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D77
  95+ 9D77 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D7B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D7F
  98+ 9D7F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D83 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D87 08 00
 100+ 9D89 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D8D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D91 0F FE
 102+ 9D93
 103+ 9D93 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D97 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D9B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D9F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DA3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DA7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DAF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DB3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DB7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DBB 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DBF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DC3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DC7
 117+ 9DC7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DCB 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DCF 06 00
 119+ 9DD1
 120+ 9DD1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DD5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DD9 02 00
 122+ 9DDB
 123+ 9DDB 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DDF 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DE3 04 00
 125+ 9DE5 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DE9 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DED 08 00
 127+ 9DEF
 128+ 9DEF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DF3 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DF7 02 00
 130+ 9DF9
 131+ 9DF9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DFD 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E01 06 00
 133+ 9E03
 134+ 9E03 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E07 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E0B 06 00
 136+ 9E0D
 137+ 9E0D              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E0D
 139+ 9E0D 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E11 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E15 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E19 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E1D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E21 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E25 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E29 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E2D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E31 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E35 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E39 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E3D
 152+ 9E3D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E41 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E45 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E49 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E4D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E51 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E55 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E59 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E5D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E61 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E65 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E69 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E6D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E71
 166+ 9E71 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E75 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E79 06 00
 168+ 9E7B
 169+ 9E7B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E7F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E83 02 00
 171+ 9E85
 172+ 9E85 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E89 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E8D 04 00
 174+ 9E8F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E93 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E97 08 00
 176+ 9E99
 177+ 9E99 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E9D 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EA1 02 00
 179+ 9EA3
 180+ 9EA3 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EA7 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EAB 06 00
 182+ 9EAD
 183+ 9EAD 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EB1 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EB5 06 00
 185+ 9EB7
 186+ 9EB7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EBB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EBF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EC3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EC7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9ECB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9ECF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9ED3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9ED7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EDB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EDF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EE3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EE7
 199+ 9EE7              ; ----- ----- ----- ----- -----
 200+ 9EE7              ;
 201+ 9EE7              ;   27/06/23
 202+ 9EE7
 203+ 9EE7              Movimiento
 204+ 9EE7
 205+ 9EE7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EE7
 207+ 9EE7              ;    ld hl,(Posicion_actual)
 208+ 9EE7
 209+ 9EE7 3A 01 89         ld a,(Ctrl_2)
 210+ 9EEA CB 57            bit 2,a
 211+ 9EEC 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EEE
 213+ 9EEE 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EF1 7E               ld a,(hl)
 215+ 9EF2
 216+ 9EF2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EF2
 218+ 9EF2              Inicia_desplazamiento.
 219+ 9EF2
 220+ 9EF2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EF2
 222+ 9EF2 CD E6 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EF5
 224+ 9EF5              ; Iniciamos (Repetimos_mov).
 225+ 9EF5
 226+ 9EF5 7E               ld a,(hl)
 227+ 9EF6 E6 0F            and $0f
 228+ 9EF8 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EFB 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EFE
 231+ 9EFE              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EFE
 233+ 9EFE 23               inc hl
 234+ 9EFF 7E               ld a,(hl)
 235+ 9F00 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9F03 2B               dec hl
 237+ 9F04
 238+ 9F04 21 01 89         ld hl,Ctrl_2
 239+ 9F07 CB D6            set 2,(hl)
 240+ 9F09
 241+ 9F09              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F09              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F09
 244+ 9F09              Desplazamiento_iniciado
 245+ 9F09
 246+ 9F09 CD BA 9F         call Aplica_desplazamiento
 247+ 9F0C
 248+ 9F0C 3A 01 89         ld a,(Ctrl_2)
 249+ 9F0F CB 67            bit 4,a
 250+ 9F11 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F12
 252+ 9F12 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F15 35               dec (hl)
 254+ 9F16 C0               ret nz
 255+ 9F17
 256+ 9F17              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F17              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F17              ; Analiza (Cola_de_desplazamiento).
 259+ 9F17
 260+ 9F17 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F1A A7               and a
 262+ 9F1B CC 0F A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F1E 28 30            jr z,Reinicia_el_movimiento
 264+ 9F20
 265+ 9F20 FE FF            cp $ff
 266+ 9F22 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F24
 268+ 9F24 FE FE            cp $fe
 269+ 9F26 CC 93 9F         call z,Fijamos_bucle
 270+ 9F29 28 25            jr z,Reinicia_el_movimiento
 271+ 9F2B
 272+ 9F2B FE FD            cp $fd
 273+ 9F2D 20 11            jr nz,1F
 274+ 9F2F
 275+ 9F2F              ; ---
 276+ 9F2F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F2F
 278+ 9F2F 3A 01 89         ld a,(Ctrl_2)
 279+ 9F32 CB 5F            bit 3,a
 280+ 9F34 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F36
 282+ 9F36              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F36
 284+ 9F36 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F39 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F3B
 287+ 9F3B CD A4 9F         call Inicia_Repetimos_movimiento
 288+ 9F3E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F40              ; ---
 290+ 9F40
 291+ 9F40 FE 01        1 cp 1
 292+ 9F42 CA 7D 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F45
 294+ 9F45 3D               dec a
 295+ 9F46 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F49
 297+ 9F49 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F4C 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F4F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F4F C9               ret
 301+ 9F50
 302+ 9F50              Reinicia_el_movimiento
 303+ 9F50
 304+ 9F50 3A 01 89         ld a,(Ctrl_2)
 305+ 9F53 CB 5F            bit 3,a
 306+ 9F55 28 1B            jr z,2F
 307+ 9F57
 308+ 9F57              ; (Cola_de_desplazamiento)="254".
 309+ 9F57
 310+ 9F57 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F5A 35               dec (hl)
 312+ 9F5B 20 15            jr nz,2F
 313+ 9F5D
 314+ 9F5D              ; Fin de las repeticiones del último movimiento.
 315+ 9F5D
 316+ 9F5D 21 01 89         ld hl,Ctrl_2
 317+ 9F60 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F62
 319+ 9F62 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F65 23               inc hl
 321+ 9F66 23               inc hl
 322+ 9F67 23               inc hl
 323+ 9F68 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F6B              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F6B 7E               ld a,(hl)
 326+ 9F6C 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F6F
 328+ 9F6F C3 17 9F         jp Cola
 329+ 9F72
 330+ 9F72 CD AF 9F     2 call Inicia_Puntero_mov
 331+ 9F75
 332+ 9F75 21 01 89         ld hl,Ctrl_2
 333+ 9F78 CB 96            res 2,(hl)
 334+ 9F7A
 335+ 9F7A C3 E7 9E         jp Movimiento
 336+ 9F7D
 337+ 9F7D              Siguiente_desplazamiento
 338+ 9F7D
 339+ 9F7D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F7D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F7D
 342+ 9F7D 21 01 89         ld hl,Ctrl_2
 343+ 9F80 CB 96            res 2,(hl)
 344+ 9F82
 345+ 9F82 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F85 23               inc hl
 347+ 9F86 23               inc hl
 348+ 9F87 22 F3 88         ld (Puntero_mov),hl
 349+ 9F8A
 350+ 9F8A 7E               ld a,(hl)
 351+ 9F8B A7               and a
 352+ 9F8C CC 0F A0         call z,Incrementa_Puntero_indice_mov
 353+ 9F8F CA 50 9F         jp z,Reinicia_el_movimiento
 354+ 9F92
 355+ 9F92 C9               ret
 356+ 9F93              ; Subrutinas -----------------------------------------
 357+ 9F93              ; ---------- --------- --------- ---------- ----------
 358+ 9F93              ;
 359+ 9F93              ;   24/07/23
 360+ 9F93              ;
 361+ 9F93              ;   Fijamos_bucle
 362+ 9F93              ;
 363+ 9F93              ;
 364+ 9F93
 365+ 9F93              Fijamos_bucle
 366+ 9F93
 367+ 9F93 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F96 3C               inc a
 369+ 9F97 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F9A
 371+ 9F9A CD 0F A0         call Incrementa_Puntero_indice_mov
 372+ 9F9D 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9FA0 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9FA3 C9               ret
 375+ 9FA4
 376+ 9FA4              ; ---------- --------- --------- ---------- ----------
 377+ 9FA4              ;
 378+ 9FA4              ;   07/7/23
 379+ 9FA4              ;
 380+ 9FA4              ;   Inicia_Repetimos_movimiento
 381+ 9FA4              ;
 382+ 9FA4              ;
 383+ 9FA4
 384+ 9FA4              Inicia_Repetimos_movimiento
 385+ 9FA4
 386+ 9FA4              ; Iniciamos (Repetimos_movimiento).
 387+ 9FA4
 388+ 9FA4 DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9FA8 DD 7E 02         ld a,(ix+2)
 390+ 9FAB 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9FAE
 392+ 9FAE C9               ret
 393+ 9FAF
 394+ 9FAF              ; ---------- --------- --------- ---------- ----------
 395+ 9FAF              ;
 396+ 9FAF              ;   26/6/23
 397+ 9FAF              ;
 398+ 9FAF              ;   Inicia_Puntero_mov
 399+ 9FAF              ;
 400+ 9FAF              ;
 401+ 9FAF
 402+ 9FAF 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9FB2 5E               ld e,(hl)
 404+ 9FB3 23               inc hl
 405+ 9FB4 56               ld d,(hl)
 406+ 9FB5 EB               ex de,hl
 407+ 9FB6 22 F3 88         ld (Puntero_mov),hl
 408+ 9FB9 C9               ret
 409+ 9FBA
 410+ 9FBA              ; ---------- --------- --------- ---------- ----------
 411+ 9FBA              ;
 412+ 9FBA              ;   27/06/23
 413+ 9FBA              ;
 414+ 9FBA              ;   Aplica_movimiento.
 415+ 9FBA
 416+ 9FBA              Aplica_desplazamiento
 417+ 9FBA
 418+ 9FBA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9FBA
 420+ 9FBA 2A F3 88         ld hl, (Puntero_mov)
 421+ 9FBD
 422+ 9FBD 7E               ld a,(hl)
 423+ 9FBE E6 F0            and $f0
 424+ 9FC0 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9FC1
 426+ 9FC1 CB 7E            bit 7,(hl)
 427+ 9FC3 28 03            jr z,1F
 428+ 9FC5 CD E5 99         call Mov_up
 429+ 9FC8 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9FCB CB 76            bit 6,(hl)
 431+ 9FCD 28 03            jr z,2F
 432+ 9FCF CD B4 99         call Mov_down
 433+ 9FD2 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9FD5 CB 6E            bit 5,(hl)
 435+ 9FD7 28 03            jr z,3F
 436+ 9FD9 CD 46 9B         call Mov_left
 437+ 9FDC 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9FDF CB 66            bit 4,(hl)
 439+ 9FE1 C8               ret z
 440+ 9FE2 CD 28 9A         call Mov_right
 441+ 9FE5 C9               ret
 442+ 9FE6
 443+ 9FE6              ; ---------- --------- --------- ---------- ----------
 444+ 9FE6              ;
 445+ 9FE6              ;   26/06/23
 446+ 9FE6              ;
 447+ 9FE6              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FE6
 449+ 9FE6              Ajusta_velocidad_desplazamiento
 450+ 9FE6
 451+ 9FE6              ; 1er byte de la cadena de movimiento.
 452+ 9FE6              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FE6
 454+ 9FE6 CD 04 A0         call Extrae_nibble_alto
 455+ 9FE9
 456+ 9FE9 32 DD 88         ld (Vel_up),a
 457+ 9FEC 79               ld a,c
 458+ 9FED E6 0F            and $0f
 459+ 9FEF 32 DE 88         ld (Vel_down),a
 460+ 9FF2
 461+ 9FF2              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FF2              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FF2
 464+ 9FF2 23               inc hl
 465+ 9FF3 CD 04 A0         call Extrae_nibble_alto
 466+ 9FF6
 467+ 9FF6 32 DB 88         ld (Vel_left),a
 468+ 9FF9 79               ld a,c
 469+ 9FFA E6 0F            and $0f
 470+ 9FFC 32 DC 88         ld (Vel_right),a
 471+ 9FFF
 472+ 9FFF              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FFF
 474+ 9FFF 23               inc hl
 475+ A000 22 F3 88         ld (Puntero_mov),hl
 476+ A003 C9               ret
 477+ A004
 478+ A004 06 04        Extrae_nibble_alto ld b,4
 479+ A006 7E               ld a,(hl)
 480+ A007 4F               ld c,a
 481+ A008 E6 F0            and $f0
 482+ A00A CB 3F        1 srl a
 483+ A00C 10 FC            djnz 1B
 484+ A00E C9               ret
 485+ A00F
 486+ A00F              ; ---------- --------- --------- ---------- ----------
 487+ A00F              ;
 488+ A00F              ;   5/7/23
 489+ A00F              ;
 490+ A00F              ;   Incrementa_Puntero_indice_mov
 491+ A00F
 492+ A00F              Incrementa_Puntero_indice_mov
 493+ A00F
 494+ A00F 21 F7 88         ld hl,Incrementa_puntero
 495+ A012 34               inc (hl)
 496+ A013
 497+ A013 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ A016 01 02 00         ld bc,2
 499+ A019 A7               and a
 500+ A01A 09               add hl,bc
 501+ A01B 22 F1 88         ld (Puntero_indice_mov),hl
 502+ A01E
 503+ A01E 7E               ld a,(hl)
 504+ A01F A7               and a
 505+ A020
 506+ A020              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ A020
 508+ A020              ;    jr z,$
 509+ A020
 510+ A020              ;! Reinicia el Patrón de movimiento.
 511+ A020
 512+ A020 CC 25 A0         call z,Inicializa_Puntero_indice_mov
 513+ A023
 514+ A023 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ A024
 516+ A024 C9               ret
 517+ A025
 518+ A025
 519+ A025              ; ---------- --------- --------- ---------- ----------
 520+ A025              ;
 521+ A025              ;   24/07/23
 522+ A025              ;
 523+ A025              ;   Inicializa_Puntero_indice_mov
 524+ A025
 525+ A025              Inicializa_Puntero_indice_mov
 526+ A025
 527+ A025              ; Existe etiqueta de bucle principal???
 528+ A025
 529+ A025 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ A028 24               inc h
 531+ A029 25               dec h
 532+ A02A 28 05            jr z,2F
 533+ A02C
 534+ A02C 22 F1 88         ld (Puntero_indice_mov),hl
 535+ A02F 18 14            jr 3F
 536+ A031
 537+ A031              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A031
 539+ A031 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ A034 47               ld b,a
 541+ A035
 542+ A035 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ A038 2B           1 dec hl
 544+ A039 2B               dec hl
 545+ A03A 10 FC            djnz 1B
 546+ A03C 22 F1 88         ld (Puntero_indice_mov),hl
 547+ A03F
 548+ A03F AF               xor a
 549+ A040 32 F7 88         ld (Incrementa_puntero),a
 550+ A043 18 06            jr 4F
 551+ A045
 552+ A045 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A048 32 F7 88         ld (Incrementa_puntero),a
 554+ A04B C9           4 ret
 555+ A04C
 556+ A04C
 557+ A04C
# file closed: Patrones_de_mov.asm
1680  A04C              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A04C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A04C              ;
   3+ A04C              ;	4/9/23
   4+ A04C              ;
   5+ A04C              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A04C
   7+ A04C              ;	ADC HL,SP	LD (addr),SP
   8+ A04C              ;	ADD HL,SP	LD SP,(addr)
   9+ A04C              ;	ADD IX,SP	LD SP,nn
  10+ A04C              ; 	ADD IY,SP	LD SP,HL
  11+ A04C              ;				LD SP,IX
  12+ A04C              ;	DEC SP		LD SP,IY
  13+ A04C
  14+ A04C              ;	EX (SP),HL
  15+ A04C              ;	EX (SP),IX
  16+ A04C              ;	EX (SP),IY
  17+ A04C
  18+ A04C              ;	INC SP
  19+ A04C
  20+ A04C                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC              ; Disparo o entidad?
  39+ 7FAC
  40+ 7FAC 3A 03 89         ld a,(Ctrl_1)
  41+ 7FAF CB 47            bit 0,a
  42+ 7FB1 28 05            jr z,2F
  43+ 7FB3
  44+ 7FB3 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB6 18 0F            jr 4F
  46+ 7FB8
  47+ 7FB8              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB8
  49+ 7FB8 3A F0 88     2 ld a,(Ctrl_0)
  50+ 7FBB CB 77            bit 6,a
  51+ 7FBD 28 05            jr z,7F
  52+ 7FBF
  53+ 7FBF              ; Guardamos foto de Amadeus.
  54+ 7FBF
  55+ 7FBF 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  56+ 7FC2 18 03            jr 4F
  57+ 7FC4
  58+ 7FC4 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC7
  60+ 7FC7 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FC9
  62+ 7FC9 D1           1 pop de
  63+ 7FCA 73               ld (hl),e
  64+ 7FCB 23               inc hl
  65+ 7FCC 72               ld (hl),d
  66+ 7FCD 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCE 10 F9            djnz 1B
  68+ 7FD0
  69+ 7FD0              ; Disparo o entidad ?
  70+ 7FD0
  71+ 7FD0 3A 03 89         ld a,(Ctrl_1)
  72+ 7FD3 CB 47            bit 0,a
  73+ 7FD5 28 05            jr z,5F
  74+ 7FD7
  75+ 7FD7 22 1D 89         ld (Stack_snapshot_disparos),hl
  76+ 7FDA 18 12            jr 6F
  77+ 7FDC
  78+ 7FDC              ; Entidad o Amadeus ?
  79+ 7FDC
  80+ 7FDC 3A F0 88     5 ld a,(Ctrl_0)
  81+ 7FDF CB 77            bit 6,a
  82+ 7FE1 28 08            jr z,8F
  83+ 7FE3
  84+ 7FE3 22 23 89         ld (End_Snapshot_Amadeus),hl
  85+ 7FE6 ED 7B 15 89      ld sp,(Stack)
  86+ 7FEA C9               ret
  87+ 7FEB
  88+ 7FEB 22 1B 89     8 ld (Stack_snapshot),hl
  89+ 7FEE ED 7B 15 89  6 ld sp,(Stack)
  90+ 7FF2
  91+ 7FF2              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  92+ 7FF2
  93+ 7FF2 5D               ld e,l
  94+ 7FF3 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  95+ 7FF4
  96+ 7FF4 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  97+ 7FF7 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  98+ 7FF8 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  99+ 7FF9 72               ld (hl),d                                     ; _ álbum a otro.
 100+ 7FFA
 101+ 7FFA C9               ret
 102+ 7FFB
 103+ 7FFB              ; ------------------------------------------------
 104+ 7FFB              ;
 105+ 7FFB              ;   3/08/23
 106+ 7FFB              ;
 107+ 7FFB              ;   La rutina estará situada justo después de:
 108+ 7FFB              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 109+ 7FFB
 110+ 7FFB              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 111+ 7FFB              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 112+ 7FFB
 113+ 7FFB                  org $72ec
 114+ 72EC
 115+ 72EC              Gestiona_albumes_de_fotos
 116+ 72EC
 117+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 118+ 72EC              ;   Vaciamos Album_de_fotos.
 119+ 72EC
 120+ 72EC              ;   Album_de_fotos. Contiene datos ???
 121+ 72EC
 122+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 123+ 72EF 7E               ld a,(hl)
 124+ 72F0 A7               and a
 125+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 126+ 72F3
 127+ 72F3 2A 1F 89         ld hl,(End_Snapshot)
 128+ 72F6 01 00 70         ld bc,Album_de_fotos
 129+ 72F9 11 01 70         ld de,Album_de_fotos+1
 130+ 72FC AF               xor a
 131+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 132+ 72FE
 133+ 72FE CD 8E 73         call Limpia_album
 134+ 7301
 135+ 7301 21 00 00         ld hl,0
 136+ 7304 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 137+ 7307
 138+ 7307              ; ----- ----- ----- -----
 139+ 7307
 140+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 141+ 7307
 142+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 143+ 730A 7E               ld a,(hl)
 144+ 730B A7               and a
 145+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 146+ 730E              ;                               ; _ información del album2 al album1.
 147+ 730E
 148+ 730E              ; ----- ----- ----- -----
 149+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 150+ 730E
 151+ 730E 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 152+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 153+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 154+ 7317
 155+ 7317 CD 8E 73         call Limpia_album
 156+ 731A
 157+ 731A              ;   Calculamos (End_Snapshot)
 158+ 731A
 159+ 731A A7               and a
 160+ 731B ED 4A            adc hl,bc
 161+ 731D 22 1F 89         ld (End_Snapshot),hl
 162+ 7320
 163+ 7320              ;   Limpiamos Album_de_fotos_1.
 164+ 7320
 165+ 7320 2A 25 89         ld hl,(End_Snapshot_1)
 166+ 7323 01 54 70         ld bc,Album_de_fotos_1
 167+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 168+ 7329 AF               xor a
 169+ 732A 02               ld (bc),a
 170+ 732B
 171+ 732B CD 8E 73         call Limpia_album
 172+ 732E
 173+ 732E 21 00 00         ld hl,0
 174+ 7331 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 175+ 7334
 176+ 7334              ; ----- ----- ----- -----
 177+ 7334
 178+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 179+ 7334
 180+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 181+ 7337 7E               ld a,(hl)
 182+ 7338 A7               and a
 183+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 184+ 733B              ;                               ; _ información del album3 al album2.
 185+ 733B              ; ----- ----- ----- -----
 186+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 187+ 733B
 188+ 733B 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 189+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 190+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 191+ 7344
 192+ 7344 CD 8E 73         call Limpia_album
 193+ 7347
 194+ 7347              ;   Calculamos (End_Snapshot_1):
 195+ 7347
 196+ 7347 A7               and a
 197+ 7348 ED 4A            adc hl,bc
 198+ 734A 22 25 89         ld (End_Snapshot_1),hl
 199+ 734D
 200+ 734D              ;   Limpiamos Album_de_fotos_2.
 201+ 734D
 202+ 734D 2A 29 89         ld hl,(End_Snapshot_2)
 203+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 204+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 205+ 7356 AF               xor a
 206+ 7357 02               ld (bc),a
 207+ 7358
 208+ 7358 CD 8E 73         call Limpia_album
 209+ 735B
 210+ 735B 21 00 00         ld hl,0
 211+ 735E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 212+ 7361
 213+ 7361              ; ----- ----- ----- -----
 214+ 7361
 215+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 216+ 7361
 217+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 218+ 7364 7E               ld a,(hl)
 219+ 7365 A7               and a
 220+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 221+ 7367
 222+ 7367              ; ----- ----- ----- -----
 223+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 224+ 7367
 225+ 7367 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 226+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 227+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 228+ 7370
 229+ 7370 CD 8E 73         call Limpia_album
 230+ 7373
 231+ 7373              ;   Calculamos (End_Snapshot_2):
 232+ 7373
 233+ 7373 A7               and a
 234+ 7374 ED 4A            adc hl,bc
 235+ 7376 22 29 89         ld (End_Snapshot_2),hl
 236+ 7379
 237+ 7379              ;   Limpiamos Album_de_fotos_3.
 238+ 7379
 239+ 7379 2A 2D 89         ld hl,(End_Snapshot_3)
 240+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 241+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 242+ 7382 AF               xor a
 243+ 7383 02               ld (bc),a
 244+ 7384
 245+ 7384 CD 8E 73         call Limpia_album
 246+ 7387
 247+ 7387 21 00 00         ld hl,0
 248+ 738A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 249+ 738D C9               ret
 250+ 738E
 251+ 738E              ; ----------------------------------------------------
 252+ 738E              ;
 253+ 738E              ;   10/8/23
 254+ 738E              ;
 255+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 256+ 738E              ;
 257+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 258+ 738E              ;           BC ..... Dirección de inicio del álbum.
 259+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 260+ 738E
 261+ 738E              ;    ld hl,(End_Snapshot)
 262+ 738E              ;    ld bc,Album_de_fotos
 263+ 738E              ;    ld de,Album_de_fotos+1
 264+ 738E
 265+ 738E              ;   MODIFICA: A,HL,BC y DE.
 266+ 738E
 267+ 738E              Limpia_album
 268+ 738E D5               push de                     ; Guardo DESTINO.
 269+ 738F C5               push bc                     ; Guardo ORIGEN.
 270+ 7390 ED 42            sbc hl,bc
 271+ 7392 4D               ld c,l
 272+ 7393 44               ld b,h
 273+ 7394 E1               pop hl
 274+ 7395 C5               push bc
 275+ 7396 ED B0            ldir
 276+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 277+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 278+ 739A C9               ret                         ; _ a otro).
 279+ 739B              ;
 280+ 739B
 281+ 739B              ; -----------------------------------------------
 282+ 739B
 283+ 739B
 284+ 739B
 285+ 739B
 286+ 739B
# file closed: Guarda_foto_registros.asm
1681  739B
1682  739B              	SAVESNA "Pruebas.sna", START
1683  739B
1684  739B
1685  739B
1686  739B
# file closed: Banco_de_pruebas.asm
