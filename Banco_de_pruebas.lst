# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 34 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD A3 A1     	call Pinta_disparos_Amadeus
  73  82F6 CD 25 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 5E 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 35 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 5C 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 5C 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 5F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 45 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 148  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 149  8BBF
 150  8BBF              ; --------------------------------------------------------------------------------
 151  8BBF              ;
 152  8BBF              ; 12/05/24
 153  8BBF              ;
 154  8BBF              ; Parámetros DRAW.
 155  8BBF              ;
 156  8BBF
 157  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BBF
 159  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BC0              ;															- Patrón de movimiento.
 161  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BC2
 164  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BC3
 167  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BC3              ; Ejemplos.
 170  8BC3
 171  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BC3
 177  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BC4
 181  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BC6
 184  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC8
 186  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC8
 188  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 190  8BCA
 191  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BCA
 193  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BCB
 199  8BCB 00           Ctrl_2 db 0
 200  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BCC              ;
 208  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BCC              ;														BIT 4, ???
 214  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BCC
 216  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BCD              ;
 222  8BCD              ; 														DESCRIPCIÖN:
 223  8BCD              ;
 224  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BCD              ;
 238  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BCD
 242  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BCD
 244  8BCD 00           Filas db 0												; Filas. [DRAW]
 245  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BD3
 249  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BD3
 251  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BD4
 255  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BD4
 257  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BD4              ;
 259  8BD4              ;	COLORES: 0 ..... NEGRO
 260  8BD4              ;    		 1 ..... AZUL
 261  8BD4              ; 			 2 ..... ROJO
 262  8BD4              ;			 3 ..... MAGENTA
 263  8BD4              ; 			 4 ..... VERDE
 264  8BD4              ; 			 5 ..... CIAN
 265  8BD4              ;			 6 ..... AMARILLO
 266  8BD4              ; 			 7 ..... BLANCO
 267  8BD4
 268  8BD4 00 00        Indice_Sprite_der defw 0
 269  8BD6 00 00        Indice_Sprite_izq defw 0
 270  8BD8 00 00        Puntero_DESPLZ_der defw 0
 271  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 272  8BDC
 273  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BDF 00           Columnas db 0
 276  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BE3
 280  8BE3              ; variables de control general.
 281  8BE3
 282  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BE4
 284  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BE4
 286  8BE4              Perfiles_de_velocidad
 287  8BE4
 288  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE8
 293  8BE8              ; Contadores de 16 bits.
 294  8BE8
 295  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BF0
 300  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BF0
 302  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BF6              ;
 306  8BF6              ;
 307  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF7 00           Incrementa_puntero_backup db 0
 311  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BFC              ;
 317  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BFC              ;
 321  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BFC              ;
 326  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BFC
 330  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BFD
 332  8BFD              ;														DESCRIPCIÓN:
 333  8BFD              ;
 334  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BFD
 341  8BFD              ;														BIT 3, Recarga de nueva oleada.
 342  8BFD              ;														BIT 4, Recarga de nueva oleada.
 343  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BFD              ;														BIT 6, **** Frame completo.
 345  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BFD
 347  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BFF
 352  8BFF              ; Gestión de ENTIDADES y CAJAS.
 353  8BFF
 354  8BFF 00 00        Puntero_store_caja defw 0
 355  8C01 00 00        Puntero_restore_caja defw 0
 356  8C03 00 00        Indice_restore_caja defw 0
 357  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C08
 361  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C0C              ;														; _ puntero (Indice_entidades).
 364  8C0C
 365  8C0C              ;---------------------------------------------------------------------------------------------------------------
 366  8C0C              ;
 367  8C0C              ;	13/10/24
 368  8C0C              ;
 369  8C0C              ;	Álbumes.
 370  8C0C
 371  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C0E              ;														; _variable para almacenar lo posición del puntero_
 373  8C0E              ; 														; _de pila, SP.
 374  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C10
 377  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C10
 379  8C10 00 00        Album_de_pintado defw 0
 380  8C12 00 00        Album_de_borrado defw 0
 381  8C14 00 00        Album_de_pintado_Amadeus defw 0
 382  8C16 00 00        Album_de_borrado_Amadeus defw 0
 383  8C18
 384  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C1C
 387  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C20
 390  8C20
 391  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C22
 393  8C22 00           Num_de_bytes_album_de_disparos db 0
 394  8C23 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C24
 396  8C24 07           Numero_de_disparos_de_entidades db 7
 397  8C25
 398  8C25 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C26 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C27
 401  8C27 00 00        Techo_Scanlines_album defw 0
 402  8C29 00 00        Techo_Scanlines_album_2 defw 0
 403  8C2B 00           Switch db 0
 404  8C2C 00 00        Techo defw 0
 405  8C2E 00 00        Scanlines_album_SP defw 0
 406  8C30 00 89        India_SP defw Tabla_de_pintado
 407  8C32 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C34
 409  8C34 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C35              ;
 411  8C35              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C35              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C35              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C35              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C35              ;																Habilita el borrado/pintado de sprites.
 416  8C35              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C35              ;																_ a la baja.
 418  8C35              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C35              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C35              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C35              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C35              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C35              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C35
 425  8C35 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C36              ;
 427  8C36              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C36              ;
 429  8C36              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C36              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C36              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C36              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C36              ;
 434  8C36              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C36              ;															_ masticados ya generados.
 436  8C36              ;
 437  8C36              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C36              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C36              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C36              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C36
 442  8C36 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C37
 444  8C37
 445  8C37              ; Gestión de Disparos.
 446  8C37
 447  8C37 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 448  8C39 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 449  8C3B 00           Impacto2 db 0											; Byte de control de impactos.
 450  8C3C
 451  8C3C              ;
 452  8C3C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 453  8C3C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 454  8C3C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 455  8C3C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 456  8C3C
 457  8C3C
 458  8C3C
 459  8C3C
 460  8C3C
 461  8C3C
 462  8C3C
 463  8C3C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 464  8C3E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 465  8C3E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 466  8C3E
 467  8C3E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 468  8C40              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 469  8C40 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 470  8C43              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 471  8C43 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C46              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 473  8C46
 474  8C46              ;---------------------------------------------------------------------------------------------------------------
 475  8C46
 476  8C46              ; Relojes y temporizaciones.
 477  8C46
 478  8C46 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 479  8C47 05           Clock_explosion_Amadeus db 5
 480  8C48 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 481  8C49
 482  8C49 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 483  8C4B F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 484  8C4D 00           Numero_rnd_disparos db 0
 485  8C4E
 486  8C4E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 487  8C50 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 488  8C51              ;														; Repite la oleada de entidades.
 489  8C51 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 490  8C52 A0           CLOCK_disparos_de_entidades db $a0
 491  8C53
 492  8C53              ;---------------------------------------------------------------------------------------------------------------
 493  8C53
 494  8C53              ; Gestión de NIVELES.
 495  8C53
 496  8C53 00           Nivel db 0												; Nivel actual del juego.
 497  8C54 00 00        Puntero_indice_NIVELES defw 0
 498  8C56 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 499  8C58              ; 														; _ que definen el NIVEL.
 500  8C58
 501  8C58              ; ---------------------------------------------------------------------------------------------------------------
 502  8C58
 503  8C58              ; Temporizaciones Shield.
 504  8C58
 505  8C58 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 506  8C5C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 507  8C5E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 508  8C5F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 509  8C60 00           Shield_3 db 0
 510  8C61
 511  8C61 06           Lives db 6
 512  8C62
 513  8C62              ; 	INICIO  *************************************************************************************************************************************************************************
 514  8C62              ;
 515  8C62              ;	5/1/24
 516  8C62
 517  8C62              START
 518  8C62
 519  8C62 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 520  8C65 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 521  8C67 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 522  8C69 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 523  8C6B F3           	DI
 524  8C6C
 525  8C6C              ; Limpiamos pantalla.
 526  8C6C
 527  8C6C 3E 07        	ld a,%00000111
 528  8C6E CD D2 94     	call Cls
 529  8C71 CD 2A 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 530  8C74
 531  8C74              ; INICIALIZACIÓN.
 532  8C74
 533  8C74 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 534  8C76 CD 77 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 535  8C79
 536  8C79 CD BF 8E     	call Extrae_numero_aleatorio_y_avanza
 537  8C7C
 538  8C7C 6F           	ld l,a
 539  8C7D 26 00        	ld h,0
 540  8C7F 22 4E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 541  8C82
 542  8C82              ;	Inicializa 1er Nivel.
 543  8C82
 544  8C82 21 9B 8B     	ld hl,Indice_de_niveles
 545  8C85 22 54 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 546  8C88 CD A7 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 547  8C8B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 548  8C8B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 549  8C8B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 550  8C8B
 551  8C8B              ;	Inicia los álbumes de líneas.
 552  8C8B
 553  8C8B CD 78 90     	call Inicia_albumes_de_lineas
 554  8C8E              ;
 555  8C8E CD 88 90     	call Inicia_albumes_de_lineas_Amadeus
 556  8C91 CD 95 90     	call Inicia_albumes_de_disparos
 557  8C94
 558  8C94 CD EC 92     4 call Inicia_Entidades
 559  8C97 CD 4F 93     	call Inicia_Amadeus
 560  8C9A
 561  8C9A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 562  8C9A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 563  8C9A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 564  8C9A
 565  8C9A 11 74 89     	ld de,Amadeus_BOX
 566  8C9D CD A2 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 567  8CA0 CD 92 93     	call Limpiamos_bandeja_DRAW
 568  8CA3
 569  8CA3              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 570  8CA3
 571  8CA3 06 3C        	ld b,60
 572  8CA5 CD 78 9D     2 call Amadeus_a_izquierda
 573  8CA8 10 FB        	djnz 2B
 574  8CAA
 575  8CAA CD 56 90     	call Genera_datos_de_impresion_Amadeus
 576  8CAD
 577  8CAD              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 578  8CAD
 579  8CAD CD B1 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 580  8CB0
 581  8CB0 CD 35 91     	call Inicia_Shield
 582  8CB3
 583  8CB3 2A 2E 8C     6 ld hl,(Scanlines_album_SP)
 584  8CB6 22 27 8C     	ld (Techo_Scanlines_album),hl
 585  8CB9
 586  8CB9 2A 12 8C     	ld hl,(Album_de_borrado)
 587  8CBC 22 2E 8C     	ld (Scanlines_album_SP),hl
 588  8CBF
 589  8CBF 21 00 89     	ld hl,Tabla_de_pintado
 590  8CC2 22 30 8C     	ld (India_SP),hl
 591  8CC5
 592  8CC5 21 34 8C     	ld hl,Ctrl_3
 593  8CC8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 594  8CCA CB D6        	set 2,(hl)
 595  8CCC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 596  8CCE
 597  8CCE FB           	ei 													; Ha de apuntar a $5c3a.
 598  8CCF
 599  8CCF 76           	halt
 600  8CD0
 601  8CD0              ; ------------------------------------
 602  8CD0
 603  8CD0              Main
 604  8CD0              ;
 605  8CD0              ; 25/10/24
 606  8CD0
 607  8CD0              ; Gestión de disparos.
 608  8CD0
 609  8CD0 CD 94 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 610  8CD3 CD 6B 9F     	call Motor_de_disparos_entidades
 611  8CD6 CD 4F A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 612  8CD9
 613  8CD9              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 614  8CD9              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 615  8CD9              ; Este hecho lo indica el bit2 de (Impacto2).
 616  8CD9
 617  8CD9 CD EC A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 618  8CDC
 619  8CDC              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 620  8CDC
 621  8CDC 21 52 8C     	ld hl,CLOCK_disparos_de_entidades
 622  8CDF 35           	dec (hl)
 623  8CE0 CC DD 8D     	call z,Autoriza_disparo_de_entidades
 624  8CE3
 625  8CE3 2A 4E 8C     	ld hl,(Clock_next_entity)
 626  8CE6 ED 4B 78 5C  	ld bc,(FRAMES)
 627  8CEA A7           	and a
 628  8CEB ED 42        	sbc hl,bc
 629  8CED 20 16        	jr nz,1F
 630  8CEF
 631  8CEF              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 632  8CEF              ; _ (Clock_next_entity) para la siguiente entidad.
 633  8CEF
 634  8CEF 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 635  8CF2 47           	ld b,a
 636  8CF3 3A 07 8C     	ld a,(Entidades_en_curso)
 637  8CF6 B8           	cp b
 638  8CF7 28 0C        	jr z,1F
 639  8CF9 30 0A        	jr nc,1F
 640  8CFB
 641  8CFB 3C           	inc a
 642  8CFC 32 07 8C     	ld (Entidades_en_curso),a
 643  8CFF
 644  8CFF              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 645  8CFF
 646  8CFF CD BF 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 647  8D02 CD DB 8E     	call Define_Clock_next_entity
 648  8D05
 649  8D05 3A 07 8C     1 ld a,(Entidades_en_curso)
 650  8D08 A7           	and a
 651  8D09 CA 83 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 652  8D0C 47           	ld b,a												; No hay entidades que gestionar.
 653  8D0D
 654  8D0D              ; ( Código que ejecutamos con cada entidad: ).
 655  8D0D
 656  8D0D              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 657  8D0D              ;
 658  8D0D              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 659  8D0D
 660  8D0D 21 00 89     	ld hl,Tabla_de_pintado
 661  8D10 22 30 8C     	ld (India_SP),hl
 662  8D13
 663  8D13 21 34 8C     	ld hl,Ctrl_3
 664  8D16 CB D6        	set 2,(hl)
 665  8D18 CD 69 8E     	call Change
 666  8D1B
 667  8D1B C5           2 push bc 												; Nº de entidades en curso.
 668  8D1C
 669  8D1C CD 02 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 670  8D1F ED 5B 2E 8C  	ld de,(Scanlines_album_SP)
 671  8D23
 672  8D23              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 673  8D23
 674  8D23              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 675  8D23              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 676  8D23
 677  8D23 3A 3B 8C     	ld a,(Impacto2)
 678  8D26 CB 5F        	bit 3,a
 679  8D28 C4 E1 A0     	call nz,Compara_con_coordenadas_de_disparo
 680  8D2B
 681  8D2B 3A C3 8B     	ld a,(Impacto)
 682  8D2E CB 4F        	bit 1,a
 683  8D30 C4 12 92     	call nz,Genera_explosion
 684  8D33 20 31        	jr nz,Gestiona_siguiente_entidad
 685  8D35
 686  8D35 3A C3 8B     	ld a,(Impacto)
 687  8D38 A7           	and a
 688  8D39 28 0C        	jr z,3F
 689  8D3B
 690  8D3B              ; IMPACTO en entidad por colisión con Amadeus.
 691  8D3B
 692  8D3B              ; 5/7/24
 693  8D3B              ; Nota importante:
 694  8D3B              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 695  8D3B              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 696  8D3B              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 697  8D3B
 698  8D3B 3A 78 89     	ld a,(Impacto_Amadeus)
 699  8D3E A7           	and a
 700  8D3F C4 12 92     	call nz,Genera_explosion
 701  8D42 20 22        	jr nz,Gestiona_siguiente_entidad
 702  8D44
 703  8D44              ; Falsa colisión !!!
 704  8D44
 705  8D44 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 706  8D47
 707  8D47              ; -------------------------------------------
 708  8D47
 709  8D47 CD 1F 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 710  8D4A CD 49 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 711  8D4D CD 0F 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 712  8D50 CD 12 95     	call Genera_datos_de_impresion
 713  8D53 CD B5 93     	call Decrementa_Contador_de_mov_masticados
 714  8D56
 715  8D56              ; -------------------------------------------
 716  8D56
 717  8D56              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 718  8D56
 719  8D56 2A C4 8B     	ld hl,(Puntero_de_impresion)
 720  8D59 CD E6 94     	call Genera_coordenadas
 721  8D5C
 722  8D5C              ; TODO: Generamos disparo ???
 723  8D5C
 724  8D5C 3A 26 8C     	ld a,(Permiso_de_disparo_Entidades)
 725  8D5F A7           	and a
 726  8D60 C4 F2 8D     	call nz,Entidad_genera_disparo_si_procede
 727  8D63
 728  8D63 CD 6A A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 729  8D66
 730  8D66              Gestiona_siguiente_entidad
 731  8D66
 732  8D66 CD 87 93      	call Store_Restore_cajas
 733  8D69 C1           	pop bc
 734  8D6A 10 AF        	djnz 2B
 735  8D6C
 736  8D6C              ; Hemos gestionado todas las entidades.
 737  8D6C              ; ----- ----- -----
 738  8D6C
 739  8D6C CD 33 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 740  8D6F CD 4A 8F     	call Ordena_tabla_de_impresion
 741  8D72 CD B1 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 742  8D75
 743  8D75 CD F0 8E     	call Borra_diferencia
 744  8D78
 745  8D78 3A 34 8C     	ld a,(Ctrl_3)
 746  8D7B CB 5F        	bit 3,a
 747  8D7D 20 04        	jr nz,Gestion_de_Amadeus
 748  8D7F
 749  8D7F EB           	ex de,hl
 750  8D80 71           	ld (hl),c
 751  8D81 2C           	inc l
 752  8D82 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 753  8D83
 754  8D83              ;! GESTIONA AMADEUS !!!!!!!!!!
 755  8D83
 756  8D83              Gestion_de_Amadeus
 757  8D83
 758  8D83 21 34 8C     	ld hl,Ctrl_3
 759  8D86 CB 76        	bit 6,(hl)
 760  8D88 28 13        	jr z,Amadeus_vivo
 761  8D8A
 762  8D8A              ; Amadeus ha sido destruido.
 763  8D8A              ; Decrementa (Temp_new_live).
 764  8D8A
 765  8D8A 21 48 8C     	ld hl,Temp_new_live
 766  8D8D 35           	dec (hl)
 767  8D8E 20 26        	jr nz,End_frame
 768  8D90
 769  8D90              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 770  8D90
 771  8D90 21 61 8C     	ld hl,Lives
 772  8D93 35           	dec (hl)
 773  8D94
 774  8D94              ;! Fin del juego
 775  8D94
 776  8D94 F3           	di
 777  8D95 28 FE        	jr z,$
 778  8D97 FB           	ei
 779  8D98
 780  8D98              ; Nueva nave.
 781  8D98
 782  8D98 CD 0F 8E     	call Reinicia_Amadeus
 783  8D9B 18 19        	jr End_frame
 784  8D9D
 785  8D9D              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 786  8D9D
 787  8D9D              Amadeus_vivo
 788  8D9D
 789  8D9D 3A 78 89     	ld a,(Impacto_Amadeus)
 790  8DA0 A7           	and a
 791  8DA1 C4 42 92     	call nz, Genera_explosion_Amadeus
 792  8DA4 20 10        	jr nz, End_frame
 793  8DA6
 794  8DA6 CD EF 91     	call Teclado
 795  8DA9 21 34 8C     	ld hl,Ctrl_3
 796  8DAC
 797  8DAC CB 6E        	bit 5,(hl)
 798  8DAE 28 06        	jr z,End_frame
 799  8DB0
 800  8DB0              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 801  8DB0
 802  8DB0 CD 84 8E     	call Change_Amadeus
 803  8DB3 CD 56 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 804  8DB6
 805  8DB6              End_frame
 806  8DB6
 807  8DB6              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 808  8DB6              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 809  8DB6
 810  8DB6 CD 04 A0     	call Genera_datos_de_impresion_disparos_Entidades
 811  8DB9 CD D5 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 812  8DBC CD 26 A1     	call Calcula_bytes_pintado_disparos
 813  8DBF CD 33 A1     	call Limpia_album_de_pintado_disparos_entidades
 814  8DC2
 815  8DC2              ; ------------ ------------- --------------
 816  8DC2
 817  8DC2 2A 12 8C     	ld hl,(Album_de_borrado)
 818  8DC5 22 2E 8C     	ld (Scanlines_album_SP),hl
 819  8DC8
 820  8DC8 21 34 8C     	ld hl,Ctrl_3
 821  8DCB CB C6        	set 0,(hl) 											; Indica Frame completo.
 822  8DCD CB 9E        	res 3,(hl)
 823  8DCF CB A6        	res 4,(hl)
 824  8DD1
 825  8DD1 21 36 8C     	ld hl,Ctrl_5
 826  8DD4 CB 96        	res 2,(hl)
 827  8DD6
 828  8DD6 AF           	xor a
 829  8DD7 D3 FE        	out ($fe),a
 830  8DD9
 831  8DD9 76           	halt
 832  8DDA
 833  8DDA              ; ----------------------------------------
 834  8DDA
 835  8DDA              ;	ld a,(Ctrl_1) 										; Existe Loop?
 836  8DDA              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 837  8DDA CA D0 8C     	jp z,Main
 838  8DDD
 839  8DDD              ;------------------------------------------
 840  8DDD              ;
 841  8DDD              ;	2/10/24
 842  8DDD
 843  8DDD              Autoriza_disparo_de_entidades
 844  8DDD
 845  8DDD 3E 01        	ld a,1
 846  8DDF 32 26 8C     	ld (Permiso_de_disparo_Entidades),a
 847  8DE2
 848  8DE2 3A 51 8C     	ld a,(Repone_CLOCK_disparos)
 849  8DE5 FE 19        	cp 25
 850  8DE7 38 02        	jr c,1F
 851  8DE9
 852  8DE9 D6 05        	sub 5
 853  8DEB
 854  8DEB 32 51 8C     1 ld (Repone_CLOCK_disparos),a
 855  8DEE 32 52 8C     	ld (CLOCK_disparos_de_entidades),a
 856  8DF1
 857  8DF1 C9           	ret
 858  8DF2
 859  8DF2              ;------------------------------------------
 860  8DF2              ;
 861  8DF2              ;	14/09/24
 862  8DF2              ;
 863  8DF2              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 864  8DF2
 865  8DF2              Entidad_genera_disparo_si_procede
 866  8DF2
 867  8DF2 2A 4B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 868  8DF5 CB 06        	rlc (hl)
 869  8DF7
 870  8DF7 DC 56 A0     	call c,Genera_disparo_de_entidad_maldosa
 871  8DFA
 872  8DFA C9           	ret
 873  8DFB
 874  8DFB              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 875  8DFB              ;
 876  8DFB              ;	30/09/24
 877  8DFB
 878  8DFB              Actuaiza_sp_de_disparos_de_entidades
 879  8DFB
 880  8DFB 2A 4B 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 881  8DFE 23           	inc hl
 882  8DFF 22 4B 8C     	ld (Puntero_num_aleatorios_disparos),hl
 883  8E02
 884  8E02 11 FD 88     	ld de,Numeros_aleatorios+7
 885  8E05 7B           	ld a,e
 886  8E06 95           	sub l
 887  8E07 C0           	ret nz
 888  8E08
 889  8E08 21 F6 88     1 ld hl,Numeros_aleatorios
 890  8E0B 22 4B 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 891  8E0E C9           	ret
 892  8E0F
 893  8E0F              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 894  8E0F              ;
 895  8E0F              ;	24/07/24
 896  8E0F
 897  8E0F              Reinicia_Amadeus
 898  8E0F
 899  8E0F              ;	Reinicia posición y estado.
 900  8E0F
 901  8E0F 21 CF 50     	ld hl,$50cf
 902  8E12 22 79 89     	ld (p.imp.amadeus),hl
 903  8E15 21 F0 E0     	ld hl,$e0f0
 904  8E18 22 7B 89     	ld (Pamm_Amadeus),hl
 905  8E1B 21 3D 00     	ld hl,$003d
 906  8E1E 22 7D 89     	ld (Comm_Amadeus),hl
 907  8E21
 908  8E21              ;	limpiamos el álbum de borrado.
 909  8E21
 910  8E21 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 911  8E24
 912  8E24 AF           	xor a
 913  8E25 77           	ld (hl),a
 914  8E26
 915  8E26 E5           	push hl
 916  8E27 D1           	pop de
 917  8E28 13           	inc de
 918  8E29
 919  8E29 01 23 00     	ld bc,35
 920  8E2C ED B0        	ldir
 921  8E2E
 922  8E2E CD 56 90     	call Genera_datos_de_impresion_Amadeus
 923  8E31
 924  8E31              ;	Reinicia temporizaciones.
 925  8E31
 926  8E31 CD 35 91     	call Inicia_Shield
 927  8E34
 928  8E34 3E 5A        	ld a,90
 929  8E36 32 5E 8C     	ld (Shield),a
 930  8E39
 931  8E39 3E 64        	ld a,100
 932  8E3B 32 48 8C     	ld (Temp_new_live),a
 933  8E3E
 934  8E3E              ; 	Restauramos el FLAG: Amadeus vivo.
 935  8E3E
 936  8E3E 21 34 8C     	ld hl,Ctrl_3
 937  8E41 CB B6        	res 6,(hl)
 938  8E43
 939  8E43              ;	Fuerza la impresión de la nave en el siguiente frame.
 940  8E43
 941  8E43 21 34 8C      	ld hl,Ctrl_3
 942  8E46 CB EE        	set 5,(hl)
 943  8E48
 944  8E48 C9           	ret
 945  8E49
 946  8E49              ; --------------------------------------------------------------------------------------------------------------
 947  8E49              ;
 948  8E49              ;	12/05/24
 949  8E49
 950  8E49 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 951  8E4C CB 27        	sla a
 952  8E4E 32 CA 8B     	ld (Velocidad),a
 953  8E51 E6 10        	and $10
 954  8E53 C8           	ret z
 955  8E54
 956  8E54              ; Restaura (Velocidad) a razón del nº de vueltas.
 957  8E54
 958  8E54 3A C2 8B     	ld a,(Contador_de_vueltas)
 959  8E57 CB 2F        	sra a
 960  8E59 CB 2F        	sra a
 961  8E5B 32 CA 8B     	ld (Velocidad),a
 962  8E5E
 963  8E5E 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 964  8E61 23           	inc hl
 965  8E62 23           	inc hl
 966  8E63 23           	inc hl
 967  8E64 23           	inc hl
 968  8E65 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 969  8E68
 970  8E68 C9           	ret
 971  8E69
 972  8E69              ; --------------------------------------------------------------------------------------------------------------
 973  8E69              ;
 974  8E69              ;	25/08/24
 975  8E69
 976  8E69              Change
 977  8E69
 978  8E69 3A 2B 8C     	ld a,(Switch)
 979  8E6C EE 01        	xor 1
 980  8E6E 32 2B 8C     	ld (Switch),a
 981  8E71 2A 10 8C     	ld hl,(Album_de_pintado)
 982  8E74 ED 5B 12 8C  	ld de,(Album_de_borrado)
 983  8E78 EB           	ex de,hl
 984  8E79 22 10 8C     	ld (Album_de_pintado),hl
 985  8E7C 22 2E 8C     	ld (Scanlines_album_SP),hl
 986  8E7F ED 53 12 8C  	ld (Album_de_borrado),de
 987  8E83 C9           	ret
 988  8E84
 989  8E84              Change_Amadeus
 990  8E84
 991  8E84 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
 992  8E87 ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
 993  8E8B EB           	ex de,hl
 994  8E8C 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
 995  8E8F ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
 996  8E93 C9           	ret
 997  8E94
 998  8E94              Change_Disparos
 999  8E94
1000  8E94              ; Álbumes de Amadeus.
1001  8E94
1002  8E94 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1003  8E97 ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1004  8E9B EB           	ex de,hl
1005  8E9C 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1006  8E9F ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1007  8EA3 CD 1B A1     	call Limpia_album_de_pintado_disparos_Amadeus
1008  8EA6
1009  8EA6              ; Álbumes de entidades.
1010  8EA6
1011  8EA6 2A 1C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1012  8EA9 ED 5B 1E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1013  8EAD EB           	ex de,hl
1014  8EAE 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1015  8EB1 ED 53 1E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1016  8EB5 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1017  8EB8
1018  8EB8 3A 22 8C     	ld a,(Num_de_bytes_album_de_disparos)
1019  8EBB 32 23 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1020  8EBE
1021  8EBE C9           	ret
1022  8EBF
1023  8EBF              ; ------------------------------------
1024  8EBF              ;
1025  8EBF              ; 1/05/24
1026  8EBF
1027  8EBF              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1028  8EBF              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1029  8EBF
1030  8EBF              ;	DESTRUYE: HL,DE,A
1031  8EBF              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1032  8EBF
1033  8EBF              ;	Variables implicadas: (RND_SP).
1034  8EBF
1035  8EBF              Extrae_numero_aleatorio_y_avanza
1036  8EBF
1037  8EBF 21 00 89     	ld hl,Tabla_de_pintado
1038  8EC2 EB           	ex de,hl
1039  8EC3 2A 49 8C     	ld hl,(RND_SP)
1040  8EC6 EB           	ex de,hl
1041  8EC7 A7           	and a
1042  8EC8 ED 52        	sbc hl,de
1043  8ECA
1044  8ECA 2A 49 8C     	ld hl,(RND_SP)
1045  8ECD 20 06        	jr nz,1F
1046  8ECF
1047  8ECF              ; Sitúa HL al principio de la tabla de nº aleatorios.
1048  8ECF
1049  8ECF 21 F6 88     	ld hl,Numeros_aleatorios
1050  8ED2 22 49 8C     	ld (RND_SP),HL
1051  8ED5
1052  8ED5              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1053  8ED5
1054  8ED5 7E           1 ld a,(hl)
1055  8ED6 23           	inc hl
1056  8ED7 22 49 8C     	ld (RND_SP),hl
1057  8EDA C9           	ret
1058  8EDB
1059  8EDB              ; ------------------------------------
1060  8EDB              ;
1061  8EDB              ; 1/05/24
1062  8EDB
1063  8EDB              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1064  8EDB              ; (1 a 4 segundos).
1065  8EDB              ; Actualizamos (Clock_next_entity) con A.
1066  8EDB
1067  8EDB              ;	DESTRUYE: A y B.
1068  8EDB              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1069  8EDB              ;			 Actualiza (Clock_next_entity) con A.
1070  8EDB
1071  8EDB              ;	Variables implicadas: (Clock_next_entity).
1072  8EDB
1073  8EDB              ; Notas:
1074  8EDB
1075  8EDB              ; 	$32 1 seg.
1076  8EDB              ; 	$64 2 seg.
1077  8EDB              ; 	$96 3 seg.
1078  8EDB              ; 	$c8 4 seg.
1079  8EDB              ; 	$fa 5 seg.
1080  8EDB
1081  8EDB              ; $ffff 1310,7 seg, 22 minutos.
1082  8EDB
1083  8EDB              ;	$0100  5 seg. aproximadamente.
1084  8EDB              ;	$0200 10 seg. aproximadamente.
1085  8EDB              ;	$0300 15 seg. aproximadamente.
1086  8EDB              ;	$0400 20 seg. aproximadamente.
1087  8EDB              ;	$0500 25 seg. aproximadamente.
1088  8EDB              ;	$0600 30 seg. aproximadamente.
1089  8EDB
1090  8EDB              Define_Clock_next_entity
1091  8EDB
1092  8EDB FE 34        	cp $34
1093  8EDD 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1094  8EDF
1095  8EDF              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1096  8EDF
1097  8EDF 4F           3 ld c,a
1098  8EE0 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1099  8EE2 2A 78 5C     	ld hl,(FRAMES)
1100  8EE5 A7           	and a
1101  8EE6 ED 4A        	adc hl,bc
1102  8EE8 22 4E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1103  8EEB C9           	ret
1104  8EEC
1105  8EEC 3E 34        1 ld a,$34
1106  8EEE 18 EF        	jr 3B
1107  8EF0
1108  8EF0              ; ------------------------------------
1109  8EF0              ;
1110  8EF0              ; 18/03/24
1111  8EF0
1112  8EF0              Borra_diferencia
1113  8EF0
1114  8EF0 ED 4B 2E 8C  	ld bc,(Scanlines_album_SP)
1115  8EF4
1116  8EF4 3A 2B 8C     	ld a,(Switch)
1117  8EF7 A7           	and a
1118  8EF8 28 08        	jr z,2F
1119  8EFA
1120  8EFA 2A 29 8C     	ld hl,(Techo_Scanlines_album_2)
1121  8EFD 11 29 8C     	ld de,Techo_Scanlines_album_2
1122  8F00 18 06        	jr 3F
1123  8F02
1124  8F02 2A 27 8C     2 ld hl,(Techo_Scanlines_album)
1125  8F05 11 27 8C     	ld de,Techo_Scanlines_album
1126  8F08
1127  8F08              ; Diferencia.
1128  8F08
1129  8F08 ED 42        3 sbc hl,bc
1130  8F0A
1131  8F0A C8           	ret z
1132  8F0B D8           	ret c
1133  8F0C
1134  8F0C              ; Nuevo techo, (más bajo que el anterior).
1135  8F0C              ; Fijamos nuevo techo y borramos bytes sobrantes.
1136  8F0C
1137  8F0C EB           	ex de,hl
1138  8F0D
1139  8F0D 71           	ld (hl),c
1140  8F0E 2C           	inc l
1141  8F0F 70           	ld (hl),b
1142  8F10
1143  8F10 AF           	xor a
1144  8F11 43           	ld b,e
1145  8F12
1146  8F12 2A 2E 8C     	ld hl,(Scanlines_album_SP)
1147  8F15
1148  8F15 77           1 ld (hl),a
1149  8F16 23           	inc hl
1150  8F17 10 FC        	djnz 1B
1151  8F19
1152  8F19              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1153  8F19
1154  8F19 21 34 8C     	ld hl,Ctrl_3
1155  8F1C CB DE        	set 3,(hl)
1156  8F1E
1157  8F1E C9           	ret
1158  8F1F
1159  8F1F              ; --------------------------------------------------------------------------------------------------------------
1160  8F1F              ;
1161  8F1F              ;	26/3/24
1162  8F1F
1163  8F1F              Recauda_informacion_de_entidad_en_curso
1164  8F1F
1165  8F1F              ; Almacena la Coordenada Y de la entidad en curso.
1166  8F1F
1167  8F1F              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1168  8F1F
1169  8F1F 3A C1 8B     	ld a,(Coordenada_y)
1170  8F22 2A 30 8C     	ld hl,(India_SP)
1171  8F25 77           	ld (hl),a
1172  8F26 2C           	inc l
1173  8F27
1174  8F27              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1175  8F27
1176  8F27 ED 5B 2E 8C  	ld de,(Scanlines_album_SP)
1177  8F2B
1178  8F2B 73           	ld (hl),e
1179  8F2C 2C           	inc l
1180  8F2D 72           	ld (hl),d
1181  8F2E 2C           	inc l
1182  8F2F
1183  8F2F 22 30 8C     	ld (India_SP),hl
1184  8F32
1185  8F32 C9           	ret
1186  8F33
1187  8F33              ; --------------------------------------------------------------------------------------------------------------
1188  8F33              ;
1189  8F33              ;	27/03/24
1190  8F33              ;
1191  8F33
1192  8F33              Inicializa_India_y_limpia_Tabla_de_impresion
1193  8F33
1194  8F33 2A 30 8C     	ld hl,(India_SP)
1195  8F36 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1196  8F39
1197  8F39 79           	ld a,c
1198  8F3A 95           	sub l
1199  8F3B 28 06        	jr z,2F
1200  8F3D 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1201  8F3E              ;														; _ y pasamos a inicializar (India_SP).
1202  8F3E AF           	xor a
1203  8F3F
1204  8F3F 77           1 ld (hl),a
1205  8F40 2C           	inc l
1206  8F41 10 FC        	djnz 1B												; Limpia Tabla.
1207  8F43
1208  8F43 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1209  8F46 22 30 8C     	ld (India_SP),hl
1210  8F49
1211  8F49 C9           	ret
1212  8F4A
1213  8F4A              ; --------------------------------------------------------------------------------------------------------------
1214  8F4A              ;
1215  8F4A              ;	31/3/24
1216  8F4A
1217  8F4A              Ordena_tabla_de_impresion
1218  8F4A
1219  8F4A              ; 5794 T/states.
1220  8F4A              ; 6278 T/states.
1221  8F4A              ; 5310 T/states.
1222  8F4A
1223  8F4A              ; Inicializamos punteros (India_SP) e (India_2_SP).
1224  8F4A              ; Inicializamos contador de comparaciones, [C].
1225  8F4A              ; Cargamos los registros A y B para efectuar comparación.
1226  8F4A
1227  8F4A FD 2E 00     	ld iyl,0
1228  8F4D
1229  8F4D 3A 07 8C     	ld a,(Entidades_en_curso)
1230  8F50 FE 04        	cp 4 	;	4
1231  8F52 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1232  8F53
1233  8F53 3D           	dec a
1234  8F54 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1235  8F55 51           	ld d,c 										; Copia de respaldo.
1236  8F56
1237  8F56 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1238  8F57
1239  8F57 21 03 89     	ld hl,Tabla_de_pintado+3
1240  8F5A 46           	ld b,(hl)
1241  8F5B 22 32 8C     	ld (India_2_SP),hl
1242  8F5E
1243  8F5E B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1244  8F5F DC 87 8F     	call c, Avanza_India_2_SP
1245  8F62 CC 87 8F     	call z, Avanza_India_2_SP
1246  8F65
1247  8F65 FD 2D        	dec iyl
1248  8F67 28 18        	jr z,2F
1249  8F69
1250  8F69
1251  8F69              ; --------------------------------------------------------------------------------------------------------------
1252  8F69              ;
1253  8F69              ;	7/4/24
1254  8F69
1255  8F69              Trueque
1256  8F69
1257  8F69              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1258  8F69              ;  			A contiene en nº de fila de (India_SP).
1259  8F69              ;			HL contiene (India_2_SP).
1260  8F69
1261  8F69 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1262  8F6A E5           	push hl										; Preservo (India_2_SP).
1263  8F6B
1264  8F6B ED 5B 30 8C  	ld de,(India_SP)
1265  8F6F EB           	ex de,hl
1266  8F70 70           	ld (hl),b
1267  8F71 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1268  8F72
1269  8F72 CD B3 8F     	call Intercambia_1_byte
1270  8F75 CD B3 8F     	call Intercambia_1_byte
1271  8F78
1272  8F78
1273  8F78              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1274  8F78              ; Recuperamos (India_2_SP) en HL.
1275  8F78
1276  8F78 2A 30 8C     	ld hl,(India_SP)
1277  8F7B 7E           	ld a,(hl)
1278  8F7C
1279  8F7C E1           	pop hl
1280  8F7D D1           	pop de
1281  8F7E
1282  8F7E              ; --------------------------------------------------------------------------------------------------------------
1283  8F7E
1284  8F7E CD 87 8F     	call Avanza_India_2_SP
1285  8F81
1286  8F81 14           2 inc d
1287  8F82 15           	dec d
1288  8F83 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1289  8F84 18 D8        	jr 1B
1290  8F86
1291  8F86 C9           	ret
1292  8F87
1293  8F87              ; ----- ----- ----- ----- -----
1294  8F87
1295  8F87              Avanza_India_2_SP
1296  8F87
1297  8F87 0D           	dec c
1298  8F88 28 0A        	jr z,Avanza_punteros_indios
1299  8F8A
1300  8F8A FD 2C        	inc iyl
1301  8F8C
1302  8F8C 2C           	inc l
1303  8F8D 2C           	inc l
1304  8F8E 2C           	inc l
1305  8F8F
1306  8F8F 46           	ld b,(hl)
1307  8F90 22 32 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1308  8F93
1309  8F93 C9           	ret
1310  8F94
1311  8F94              ; ----- ----- ----- ----- -----
1312  8F94
1313  8F94              Avanza_punteros_indios
1314  8F94
1315  8F94 15           	dec d
1316  8F95 28 15        	jr z,Prepara_salida
1317  8F97
1318  8F97 4A           	ld c,d
1319  8F98
1320  8F98 2A 30 8C     	ld hl,(India_SP)
1321  8F9B 2C           	inc l
1322  8F9C 2C           	inc l
1323  8F9D 2C           	inc l
1324  8F9E 7E           	ld a,(hl)
1325  8F9F 22 30 8C     	ld (India_SP),hl
1326  8FA2
1327  8FA2 2C           	inc l
1328  8FA3 2C           	inc l
1329  8FA4 2C           	inc l
1330  8FA5 46           	ld b,(hl)
1331  8FA6 22 32 8C     	ld (India_2_SP),hl
1332  8FA9
1333  8FA9 FD 2C        	inc iyl
1334  8FAB
1335  8FAB C9           	ret
1336  8FAC
1337  8FAC              Prepara_salida
1338  8FAC
1339  8FAC 21 00 89     	ld hl,Tabla_de_pintado
1340  8FAF 22 30 8C     	ld (India_SP),hl
1341  8FB2 C9           	ret
1342  8FB3
1343  8FB3
1344  8FB3 2C           Intercambia_1_byte inc l
1345  8FB4 1C           	inc e
1346  8FB5 46           	ld b,(hl)
1347  8FB6 1A           	ld a,(de)
1348  8FB7 EB           	ex de,hl
1349  8FB8 70           	ld (hl),b
1350  8FB9 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1351  8FBA C9           	ret
1352  8FBB
1353  8FBB              ; -----------------------------------------------------------------------------------
1354  8FBB              ;
1355  8FBB              ;	20/01/24
1356  8FBB              ;
1357  8FBB              ;
1358  8FBB
1359  8FBB              Construye_movimientos_masticados_entidad
1360  8FBB
1361  8FBB 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1362  8FBE E5           	push hl
1363  8FBF CD 02 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1364  8FC2              ;															; _ el (Contador_de_mov_masticados).
1365  8FC2 CD CD 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1366  8FC5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1367  8FC5 CD FE 99     	call Recompone_posicion_inicio
1368  8FC8
1369  8FC8 CD 2E 97     1 call Draw
1370  8FCB CD E7 8F     	call Guarda_movimiento_masticado
1371  8FCE
1372  8FCE CD AB 9D     	call Movimiento
1373  8FD1
1374  8FD1 3A 34 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1375  8FD4 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1376  8FD6 28 F0        	jr z,1B
1377  8FD8
1378  8FD8              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1379  8FD8              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1380  8FD8
1381  8FD8 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1382  8FD9 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1383  8FDC
1384  8FDC              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1385  8FDC
1386  8FDC CD 0F 9F     	call Situa_en_contador_general_de_mov_masticados
1387  8FDF
1388  8FDF              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1389  8FDF              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1390  8FDF
1391  8FDF ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1392  8FE3
1393  8FE3 71           	ld (hl),c
1394  8FE4 23           	inc hl
1395  8FE5 70           	ld (hl),b
1396  8FE6
1397  8FE6 C9           	ret
1398  8FE7
1399  8FE7              ; -----------------------------------------------------------------------------------
1400  8FE7              ;
1401  8FE7              ;	28/12/23
1402  8FE7              ;
1403  8FE7              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1404  8FE7              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1405  8FE7
1406  8FE7              Guarda_movimiento_masticado
1407  8FE7
1408  8FE7 ED 73 0C 8C  	ld (Stack),sp
1409  8FEB ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1410  8FEF
1411  8FEF DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1412  8FF1 FD E5            push iy 												; Pushea Puntero_objeto.
1413  8FF3
1414  8FF3 ED 7B 0C 8C      ld sp,(Stack)
1415  8FF7
1416  8FF7 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1417  8FFA 23           	inc hl
1418  8FFB 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1419  8FFE
1420  8FFE CD 02 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1421  9001              ;															; _ el (Contador_de_mov_masticados).
1422  9001 C9               ret
1423  9002
1424  9002              ; --------------------------------------------------------------------------------------------------------------
1425  9002              ;
1426  9002              ;	12/1/24
1427  9002              ;
1428  9002              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1429  9002
1430  9002              Actualiza_Puntero_de_almacen_de_mov_masticados
1431  9002
1432  9002 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1433  9005 01 04 00     	ld bc,4
1434  9008 A7           	and a
1435  9009 ED 4A        	adc hl,bc
1436  900B 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1437  900E C9           	ret
1438  900F
1439  900F              ; --------------------------------------------------------------------------------------------------------------
1440  900F              ;
1441  900F              ;	24/03/24
1442  900F              ;
1443  900F              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1444  900F              ;
1445  900F              ;	IX contiene el puntero de impresión.
1446  900F              ;	DE contiene (Puntero_objeto).
1447  900F
1448  900F
1449  900F              Cargamos_registros_con_mov_masticado
1450  900F
1451  900F ED 73 0C 8C  	ld (Stack),sp
1452  9013 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1453  9017
1454  9017 D1           	pop de 															; DE contiene Puntero_objeto
1455  9018 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1456  901A
1457  901A ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1458  901E ED 7B 0C 8C  	ld sp,(Stack)
1459  9022
1460  9022 7B           	ld a,e
1461  9023 82           	add d															; Comprueba si ya no hay datos en el almacén.
1462  9024
1463  9024 CC BD 93     	call z,Reinicia_entidad_maliciosa
1464  9027
1465  9027 C9           	ret
1466  9028
1467  9028              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1468  9028              ;
1469  9028              ;	22/7/24
1470  9028
1471  9028              Cargamos_registros_con_explosion
1472  9028
1473  9028
1474  9028 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1475  902B CD C7 90     	call Extrae_address
1476  902E
1477  902E 5D           	ld e,l
1478  902F 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1479  9030
1480  9030 DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1481  9034
1482  9034 C9           	ret
1483  9035
1484  9035
1485  9035              Cargamos_registros_con_explosion_Amadeus
1486  9035
1487  9035 2A 7B 89     	ld hl,(Pamm_Amadeus)
1488  9038 CD C7 90     	call Extrae_address
1489  903B
1490  903B 5D           	ld e,l
1491  903C 54           	ld d,h
1492  903D
1493  903D DD 2A 79 89  	ld ix,(p.imp.amadeus)
1494  9041
1495  9041 C9           	ret
1496  9042
1497  9042              ; --------------------------------------------------------------------------------------------------------------
1498  9042              ;
1499  9042              ;	17/06/24
1500  9042              ;
1501  9042              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1502  9042              ;
1503  9042              ;	IX contiene el puntero de impresión.
1504  9042              ;	DE contiene (Puntero_objeto).
1505  9042
1506  9042
1507  9042              Cargamos_registros_con_mov_masticado_Amadeus
1508  9042
1509  9042 ED 73 0C 8C  	ld (Stack),sp
1510  9046 ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1511  904A D1           	pop de 															; DE contiene Puntero_objeto
1512  904B DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1513  904D DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1514  9051 ED 7B 0C 8C  	ld sp,(Stack)
1515  9055 C9           	ret
1516  9056
1517  9056              ; ---------------------------------------------------------------------------------------------------------------------
1518  9056              ;
1519  9056              ;	18/6/24
1520  9056              ;
1521  9056              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1522  9056
1523  9056              Genera_datos_de_impresion_Amadeus
1524  9056
1525  9056 3A 78 89     	ld a,(Impacto_Amadeus)
1526  9059 A7           	and a
1527  905A 20 03        	jr nz,1F
1528  905C
1529  905C              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1530  905C              ; _apuntando a la correspondiente explosión.
1531  905C
1532  905C CD 42 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1533  905F
1534  905F DD 7D        1 ld a,ixl
1535  9061 E6 1F        	and $1f
1536  9063 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1537  9066
1538  9066 2A 2E 8C     	ld hl,(Scanlines_album_SP)
1539  9069 E5           	push hl
1540  906A
1541  906A 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1542  906D 22 2E 8C     	ld (Scanlines_album_SP),hl
1543  9070
1544  9070 CD 12 95     	call Genera_datos_de_impresion
1545  9073
1546  9073 E1           	pop hl
1547  9074 22 2E 8C     	ld (Scanlines_album_SP),hl
1548  9077
1549  9077 C9           	ret
1550  9078
1551  9078              ; ---------------------------------------------------------------------------------------------------------------------
1552  9078              ;
1553  9078              ;	13/03/24
1554  9078              ;
1555  9078              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1556  9078
1557  9078              Inicia_albumes_de_lineas
1558  9078
1559  9078 21 00 80     	ld hl,Scanlines_album
1560  907B 22 10 8C     	ld (Album_de_pintado),hl
1561  907E 22 2E 8C     	ld (Scanlines_album_SP),hl
1562  9081
1563  9081 21 1A 81     	ld hl,Scanlines_album_2
1564  9084 22 12 8C     	ld (Album_de_borrado),hl
1565  9087
1566  9087 C9           	ret
1567  9088
1568  9088              Inicia_albumes_de_lineas_Amadeus
1569  9088
1570  9088 21 34 82     	ld hl,Amadeus_scanlines_album
1571  908B 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1572  908E 21 58 82     	ld hl,Amadeus_scanlines_album_2
1573  9091 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1574  9094
1575  9094 C9           	ret
1576  9095
1577  9095              Inicia_albumes_de_disparos
1578  9095
1579  9095 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1580  9098 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1581  909B 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1582  909E 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1583  90A1
1584  90A1 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1585  90A4 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1586  90A7 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1587  90AA
1588  90AA 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1589  90AD 22 1E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1590  90B0
1591  90B0 C9           	ret
1592  90B1
1593  90B1              ; ---------------------------------------------------------------------------------------------------------------------
1594  90B1              ;
1595  90B1              ; 8/1/23
1596  90B1              ;
1597  90B1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1598  90B1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1599  90B1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1600  90B1
1601  90B1              ; Destruye HL y DE !!!!!
1602  90B1
1603  90B1              Inicia_punteros_de_cajas
1604  90B1
1605  90B1 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1606  90B4 CD C7 90         call Extrae_address
1607  90B7 22 FF 8B         ld (Puntero_store_caja),hl
1608  90BA 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1609  90BD 22 03 8C     	ld (Indice_restore_caja),hl
1610  90C0 CD C7 90     	call Extrae_address
1611  90C3 22 01 8C     	ld (Puntero_restore_caja),hl
1612  90C6 C9               ret
1613  90C7
1614  90C7              ; *************************************************************************************************************************************************************
1615  90C7
1616  90C7              ;
1617  90C7              ; 20/10/22
1618  90C7              ;
1619  90C7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1620  90C7              ;
1621  90C7              ; Destruye el puntero y DE !!!!!
1622  90C7
1623  90C7 5E           Extrae_address ld e,(hl)
1624  90C8 23           	inc hl
1625  90C9 56           	ld d,(hl)
1626  90CA 2B           	dec hl
1627  90CB EB           	ex de,hl
1628  90CC C9           	ret
1629  90CD
1630  90CD              ; *************************************************************************************************************************************************************
1631  90CD              ;
1632  90CD              ;	20/1/24
1633  90CD              ;
1634  90CD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1635  90CD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1636  90CD              ;
1637  90CD              ;   Destruye HL y BC !!!!!,
1638  90CD              ;
1639  90CD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1640  90CD              ;					"0" ..... Izquierda.
1641  90CD
1642  90CD              Inicia_Puntero_objeto
1643  90CD
1644  90CD 3A DE 8B     	ld a,(Cuad_objeto)
1645  90D0 E6 01        	and 1
1646  90D2 F5           	push af
1647  90D3 CC EF 90     	call z,Inicia_puntero_objeto_izq
1648  90D6 F1           	pop af
1649  90D7 C8           	ret z
1650  90D8 CD DC 90     	call Inicia_puntero_objeto_der
1651  90DB C9           	ret
1652  90DC
1653  90DC              ; Arrancamos desde la parte izquierda de la pantalla.
1654  90DC              ; Iniciamos (Indice_Sprite_der).
1655  90DC
1656  90DC 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1657  90DF 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1658  90E2 CD C7 90     	call Extrae_address
1659  90E5 22 D1 8B     	ld (Puntero_objeto),hl
1660  90E8
1661  90E8 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1662  90EB 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1663  90EE C9           	ret
1664  90EF
1665  90EF              ; Arrancamos desde la parte derecha de la pantalla.
1666  90EF              ; Iniciamos (Indice_Sprite_izq).
1667  90EF
1668  90EF 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1669  90F2 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1670  90F5 CD C7 90     	call Extrae_address
1671  90F8 22 D1 8B     	ld (Puntero_objeto),hl
1672  90FB
1673  90FB 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1674  90FE 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1675  9101 C9           	ret
1676  9102
1677  9102              ; **************************************************************************************************
1678  9102              ;
1679  9102              ;	06/07/24
1680  9102              ;
1681  9102              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1682  9102
1683  9102              Restore_entidad
1684  9102
1685  9102 2A FF 8B     	ld hl,(Puntero_store_caja)
1686  9105 7E           	ld a,(hl)
1687  9106 A7           	and a
1688  9107 CC 15 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1689  910A 28 F6        	jr z,Restore_entidad
1690  910C
1691  910C 11 BF 8B     	ld de,Bandeja_DRAW
1692  910F 01 0C 00     	ld bc,12
1693  9112 ED B0        	ldir
1694  9114 C9           	ret
1695  9115
1696  9115              ; **************************************************************************************************
1697  9115              ;
1698  9115              ;	08/05/23
1699  9115              ;
1700  9115              ;	Incrementamos los dos punteros de entidades. (+1).
1701  9115
1702  9115              Incrementa_punteros_de_cajas
1703  9115
1704  9115 2A 01 8C     	ld hl,(Puntero_restore_caja)
1705  9118 22 FF 8B     	ld (Puntero_store_caja),hl
1706  911B 2A 03 8C     	ld hl,(Indice_restore_caja)
1707  911E 23           	inc hl
1708  911F 23           	inc hl
1709  9120 22 03 8C     	ld (Indice_restore_caja),hl
1710  9123 CD C7 90         call Extrae_address
1711  9126 22 01 8C         ld (Puntero_restore_caja),hl
1712  9129 C9               ret
1713  912A
1714  912A              ; -----------------------------------------------------------
1715  912A
1716  912A              ; Teclado.
1717  912A
1718  912A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1719  912C DB FE        	in a,($fe)
1720  912E E6 01        	and $01
1721  9130 28 02        	jr z,1f
1722  9132 18 F6        	jr Pulsa_ENTER
1723  9134 C9           1 ret
1724  9135
1725  9135              ; **************************************************************************************************
1726  9135              ;
1727  9135              ; Temporización.
1728  9135
1729  9135              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1730  9135              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1731  9135              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1732  9135              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1733  9135
1734  9135              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1735  9135              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1736  9135              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1737  9135
1738  9135              ; A partir de $4f61 no hace falta DELAY.
1739  9135
1740  9135              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1741  9135
1742  9135              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1743  9135              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1744  9135              ;	LD A,B
1745  9135              ;	AND A
1746  9135              ;	JR NZ,wait
1747  9135              ;	RET
1748  9135
1749  9135              ; ---------------------------------------------------------------------------------------------------------------
1750  9135              ;
1751  9135              ;	13/07/24
1752  9135              ;
1753  9135
1754  9135              Inicia_Shield
1755  9135
1756  9135 21 58 8C     	ld hl,Datos_Shield
1757  9138 22 5C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1758  913B
1759  913B 7E           	ld a,(hl)
1760  913C 32 5F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1761  913F
1762  913F 3E 01        	ld a,1
1763  9141 32 60 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1764  9144
1765  9144 C9           	ret
1766  9145
1767  9145              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1768  9145              ;
1769  9145              ;	4/6/24
1770  9145              ;
1771  9145              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1772  9145              ;
1773  9145              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1774  9145              ;
1775  9145
1776  9145              Actualiza_pantalla
1777  9145
1778  9145 3E 02        	ld a,2
1779  9147 D3 FE        	out ($fe),a
1780  9149
1781  9149 3A 34 8C     	ld a,(Ctrl_3)
1782  914C CB 57        	bit 2,a
1783  914E 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1784  9150
1785  9150              Borrando_entidades
1786  9150
1787  9150 2A 2E 8C     	ld hl,(Scanlines_album_SP)
1788  9153 CD C7 90     	call Extrae_address
1789  9156 24           	inc h
1790  9157 25           	dec h
1791  9158 28 05        	jr z,Pintando_entidades
1792  915A CD 0B 96     	call Pinta_Sprites
1793  915D 18 F1        	jr Borrando_entidades
1794  915F
1795  915F              Pintando_entidades
1796  915F
1797  915F 2A 30 8C     	ld hl,(India_SP)
1798  9162 2C           	inc l
1799  9163 CD C7 90     	call Extrae_address
1800  9166 24           	inc h
1801  9167 25           	dec h
1802  9168 28 0E        	jr z,Ejecuta_escudo
1803  916A 1C           	inc e
1804  916B 1C           	inc e
1805  916C ED 53 30 8C  	ld (India_SP),de
1806  9170 CD C7 90     	call Extrae_address
1807  9173 CD 0B 96     	call Pinta_Sprites
1808  9176 18 E7        	jr Pintando_entidades
1809  9178
1810  9178              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1811  9178
1812  9178              Ejecuta_escudo
1813  9178
1814  9178 3A 5E 8C     	ld a,(Shield)
1815  917B A7           	and a
1816  917C 20 2F        	jr nz,Aplica_Shield
1817  917E
1818  917E              Borrando_Amadeus
1819  917E
1820  917E 21 34 8C     	ld hl,Ctrl_3
1821  9181 CB 6E        	bit 5,(hl)
1822  9183 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1823  9185
1824  9185 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1825  9188 CD C7 90     	call Extrae_address
1826  918B 24           	inc h
1827  918C 25           	dec h
1828  918D 28 03        	jr z,Pintando_Amadeus
1829  918F CD 0B 96     	call Pinta_Sprites
1830  9192
1831  9192              Pintando_Amadeus
1832  9192
1833  9192 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1834  9195 CD C7 90     	call Extrae_address
1835  9198 24           	inc h
1836  9199 25           	dec h
1837  919A 28 03        	jr z,1F
1838  919C CD 0B 96     	call Pinta_Sprites
1839  919F
1840  919F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1841  919F
1842  919F 21 34 8C     1 ld hl,Ctrl_3
1843  91A2 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1844  91A4 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1845  91A6 CB AE        	res 5,(hl)
1846  91A8
1847  91A8 3E 01        	ld a,1												; Borde azul.
1848  91AA D3 FE        	out ($fe),a
1849  91AC
1850  91AC C9           	ret
1851  91AD
1852  91AD              Aplica_Shield
1853  91AD
1854  91AD              ;	Bit 1 "1" (Shield_3) Sólo borra.
1855  91AD              ;		  "0"     ""     Borra/Pinta.
1856  91AD              ;	Bit 2    ""  RET.	 No borra, no pinta.
1857  91AD
1858  91AD 21 60 8C     	ld hl,Shield_3
1859  91B0
1860  91B0 CB 5E        	bit 3,(hl)
1861  91B2 20 DE        	jr nz,Pintando_Amadeus
1862  91B4
1863  91B4 CB 56        	bit 2,(hl)
1864  91B6 20 E7        	jr nz,1B
1865  91B8
1866  91B8 CB 4E        	bit 1,(hl)
1867  91BA C4 C1 91     	call nz,Borra_Amadeus_shield
1868  91BD
1869  91BD 28 BF        	jr z,Borrando_Amadeus
1870  91BF 18 DE        	jr 1B
1871  91C1
1872  91C1              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1873  91C1
1874  91C1              Borra_Amadeus_shield
1875  91C1
1876  91C1 3A 34 8C     	ld a,(Ctrl_3)
1877  91C4 CB 6F        	bit 5,a
1878  91C6 28 08        	jr z,1F
1879  91C8
1880  91C8 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1881  91CB CD C7 90     	call Extrae_address
1882  91CE 18 06        	jr 2F
1883  91D0
1884  91D0 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1885  91D3 CD C7 90     	call Extrae_address
1886  91D6
1887  91D6 CD 0B 96     2 call Pinta_Sprites
1888  91D9
1889  91D9 AF           	xor a
1890  91DA 3C           	inc a											; Asegura NZ en la salida de la rutina.
1891  91DB
1892  91DB C9           	ret
1893  91DC
1894  91DC              Pinta_Amadeus_shield
1895  91DC
1896  91DC 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1897  91DF CD C7 90     	call Extrae_address
1898  91E2 CD 0B 96     	call Pinta_Sprites
1899  91E5
1900  91E5 AF           	xor a
1901  91E6 3C           	inc a											; Asegura NZ en la salida de la rutina.
1902  91E7
1903  91E7 C9           	ret
1904  91E8
1905  91E8              Borra_Pinta_Amadeus_shield
1906  91E8
1907  91E8 CD C1 91     	call Borra_Amadeus_shield
1908  91EB CD DC 91     	call Pinta_Amadeus_shield
1909  91EE C9           	ret
1910  91EF
1911  91EF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1912  91EF              ;
1913  91EF              ;	19/6/24
1914  91EF              ;
1915  91EF
1916  91EF              Teclado
1917  91EF
1918  91EF              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1919  91EF
1920  91EF 3E F7        	ld a,$f7												; "5" para disparar.
1921  91F1 DB FE        	in a,($fe)
1922  91F3 E6 10        	and $10
1923  91F5
1924  91F5 CC F4 A1     	call z,Genera_disparo_Amadeus
1925  91F8
1926  91F8 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1927  91FA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1928  91FC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1929  91FE CC 78 9D         call z,Amadeus_a_izquierda
1930  9201
1931  9201 3E F7        	ld a,$f7
1932  9203 DB FE        	in a,($fe)
1933  9205 E6 01        	and $01
1934  9207 C8           	ret z
1935  9208
1936  9208 3E F7        	ld a,$f7
1937  920A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1938  920C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1939  920E CC 90 9D     	call z,Amadeus_a_derecha
1940  9211
1941  9211 C9           	ret
1942  9212
1943  9212              ; ------------------------------------------------------------------------------------------------------------------------
1944  9212              ;
1945  9212              ;	06/07/24
1946  9212              ;
1947  9212
1948  9212              Genera_explosion
1949  9212
1950  9212 21 46 8C     	ld hl,Clock_explosion
1951  9215 35           	dec (hl)
1952  9216 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1953  9218
1954  9218              Borra_entidad_colisionada
1955  9218
1956  9218 CD 1F 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1957  921B CD 28 90     	call Cargamos_registros_con_explosion
1958  921E CD 12 95     	call Genera_datos_de_impresion
1959  9221
1960  9221 AF           	xor a
1961  9222 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1962  9223
1963  9223 C9           	ret
1964  9224
1965  9224              Siguiente_frame_explosion
1966  9224
1967  9224 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1968  9226
1969  9226              ; Avanza Frame de explosión.
1970  9226
1971  9226 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1972  9229 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1973  922C
1974  922C 79           	ld a,c
1975  922D 95           	sub l
1976  922E 20 0B        	jr nz,1F
1977  9230
1978  9230              ; Fín de la entidad !!!!!!!!!!!!!
1979  9230
1980  9230 21 06 8C     	ld hl,Numero_parcial_de_entidades
1981  9233 35           	dec (hl)
1982  9234 23           	inc hl
1983  9235 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1984  9236
1985  9236 CD 92 93     	call Limpiamos_bandeja_DRAW
1986  9239 18 DD        	jr Borra_entidad_colisionada
1987  923B
1988  923B 23           1 inc hl
1989  923C 23           	inc hl
1990  923D 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1991  9240 18 D6        	jr Borra_entidad_colisionada
1992  9242
1993  9242              ; ----- ----- ----- ----- -----
1994  9242
1995  9242              Genera_explosion_Amadeus
1996  9242
1997  9242 21 47 8C     	ld hl,Clock_explosion_Amadeus
1998  9245 35           	dec (hl)
1999  9246 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2000  9248
2001  9248              Borra_Amadeus_impactado
2002  9248
2003  9248 CD 84 8E     	call Change_Amadeus
2004  924B CD 35 90     	call Cargamos_registros_con_explosion_Amadeus
2005  924E CD 56 90     	call Genera_datos_de_impresion_Amadeus
2006  9251
2007  9251 21 34 8C     	ld hl,Ctrl_3
2008  9254 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2009  9256
2010  9256 AF           	xor a
2011  9257 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2012  9258
2013  9258 C9           	ret
2014  9259
2015  9259              Siguiente_frame_explosion_Amadeus
2016  9259
2017  9259 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2018  925B
2019  925B              ; Avanza Frame de explosión.
2020  925B
2021  925B 2A 7B 89     	ld hl,(Pamm_Amadeus)
2022  925E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2023  9261
2024  9261 79           	ld a,c
2025  9262 95           	sub l
2026  9263 20 0B        	jr nz,1F
2027  9265
2028  9265              ; Fín de Amadeus !!!!!!!!!!!!!
2029  9265              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2030  9265
2031  9265 AF           	xor a
2032  9266 32 78 89     	ld (Impacto_Amadeus),a
2033  9269 21 34 8C     	ld hl,Ctrl_3
2034  926C CB F6        	set 6,(hl)
2035  926E
2036  926E 18 D8        	jr Borra_Amadeus_impactado
2037  9270
2038  9270 23           1 inc hl
2039  9271 23           	inc hl
2040  9272 22 7B 89     	ld (Pamm_Amadeus),hl
2041  9275 18 D1        	jr Borra_Amadeus_impactado
2042  9277
2043  9277              ; ---------------------------------------------------------------
2044  9277
2045  9277              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9277              ; ******************************************************************************************************************************************************************************************
   2+ 9277              ;
   3+ 9277              ;   21/04/24
   4+ 9277              ;
   5+ 9277              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9277              ;   (XOR) bit a bit.
   7+ 9277              ;
   8+ 9277              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9277
  10+ 9277              Derivando_RND
  11+ 9277
  12+ 9277 21 F6 88         ld hl,Numeros_aleatorios
  13+ 927A
  14+ 927A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 927C C5               push bc
  16+ 927D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 927D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9280              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9280
  20+ 9280 A7           6 and a                                 ; Carry a "0".
  21+ 9281 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9283 30 02            jr nc,1F
  23+ 9285
  24+ 9285 CB C1            set 0,c
  25+ 9287
  26+ 9287 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9288 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 928A 5F               ld e,a
  29+ 928B
  30+ 928B 7A               ld a,d
  31+ 928C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 928E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9290
  34+ 9290 CB 3F            srl a
  35+ 9292
  36+ 9292 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9293
  38+ 9293 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9294 28 04            jr z,4F
  40+ 9296
  41+ 9296 CB FF            set 7,a
  42+ 9298 18 02            jr 5F
  43+ 929A
  44+ 929A CB BF        4 res 7,a
  45+ 929C
  46+ 929C CB 21        5 sla c
  47+ 929E 10 E0            djnz 6B
  48+ 92A0
  49+ 92A0 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92A1
  51+ 92A1 77               ld (hl),a
  52+ 92A2 23               inc hl
  53+ 92A3 C1               pop bc
  54+ 92A4 10 D4            djnz 3B
  55+ 92A6
  56+ 92A6 C9               ret
  57+ 92A7
  58+ 92A7
  59+ 92A7
# file closed: RND_Derivando.asm
2046  92A7              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92A7              ;---------------------------------------------------------------------------------------------------------------
   2+ 92A7              ;
   3+ 92A7              ;   8/3/24
   4+ 92A7              ;
   5+ 92A7              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 92A7              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 92A7              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 92A7              ;	_ de la 1ª entidad del Nivel.
   9+ 92A7              ;
  10+ 92A7              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 92A7
  12+ 92A7              ;	MODIFICA: HL,DE y A.
  13+ 92A7              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 92A7
  15+ 92A7              Inicializa_Nivel
  16+ 92A7
  17+ 92A7 2A 54 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92AA CD C7 90     	call Extrae_address
  19+ 92AD 7E           	ld a,(hl)
  20+ 92AE 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92B1 23           	inc hl
  22+ 92B2 CD BF 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92B5 22 56 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92B8 CD C8 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92BB
  26+ 92BB CD D9 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92BE C9           	ret
  28+ 92BF
  29+ 92BF              ; ----------------------
  30+ 92BF
  31+ 92BF 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92C2 01 04 00     	ld bc,4
  33+ 92C5 ED B0        	ldir
  34+ 92C7 C9           	ret
  35+ 92C8
  36+ 92C8 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C9 CD 63 94         call Calcula_salto_en_BC
  38+ 92CC 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92CF A7               and a
  40+ 92D0 ED 4A            adc hl,bc
  41+ 92D2 CD C7 90         call Extrae_address
  42+ 92D5 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 92D8 C9               ret
  44+ 92D9
  45+ 92D9 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92DC CD 63 94     	call Calcula_salto_en_BC
  47+ 92DF 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92E2 A7               and a
  49+ 92E3 ED 4A            adc hl,bc
  50+ 92E5 CD C7 90         call Extrae_address
  51+ 92E8 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92EB C9           	ret
  53+ 92EC
  54+ 92EC              ;---------------------------------------------------------------------------------------------------------------
  55+ 92EC              ;
  56+ 92EC              ;   5/1/24
  57+ 92EC              ;
  58+ 92EC              ;	Destruye A,BC,HL,DE
  59+ 92EC
  60+ 92EC              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92EC              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92EC
  63+ 92EC              Inicia_Entidades
  64+ 92EC
  65+ 92EC              ; Preparamos los punteros de las cajas de entidades:
  66+ 92EC
  67+ 92EC CD B1 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92EF              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92EF CD AB 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92F2
  71+ 92F2 2A 56 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92F5
  73+ 92F5 22 56 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92F8
  75+ 92F8 CD 11 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92FB
  77+ 92FB 2A 56 8C     	ld hl,(Datos_de_nivel)
  78+ 92FE
  79+ 92FE              ; En este punto:
  80+ 92FE              ;
  81+ 92FE              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92FE              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92FE
  84+ 92FE C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92FF
  86+ 92FF 7E           	ld a,(hl)
  87+ 9300 CD 7D 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9303
  89+ 9303 CD 75 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9306
  91+ 9306              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9306
  93+ 9306 CD 33 94     	call Busca_mov_masticados_segun_tipo
  94+ 9309
  95+ 9309 A7           	and a
  96+ 930A 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 930C
  98+ 930C              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 930C
 100+ 930C              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 930C              ;	_ de este tipo de entidad.
 102+ 930C
 103+ 930C CD 0F 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 930F CD 1C 9F     	call Transfiere_datos_de_contadores
 105+ 9312
 106+ 9312 18 06        	jr 4F
 107+ 9314
 108+ 9314 CD BB 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9317
 110+ 9317              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9317              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9317              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9317              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9317              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9317
 116+ 9317 CD F1 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 931A              ;																; _ Mov_masticados ya generados.
 118+ 931A
 119+ 931A CD 0F 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 931D
 121+ 931D DD E5        	push ix
 122+ 931F E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9320
 124+ 9320 D5           	push de
 125+ 9321 CD E6 94     	call Genera_coordenadas
 126+ 9324
 127+ 9324 ED 5B 2E 8C  	ld de,(Scanlines_album_SP)
 128+ 9328 CD 1F 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 932B D1           	pop de
 130+ 932C
 131+ 932C CD 12 95     	call Genera_datos_de_impresion
 132+ 932F              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 932F              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 932F              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 932F              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 932F
 137+ 932F CD B5 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9332
 139+ 9332              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9332
 141+ 9332 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 9336 CD A2 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9339
 144+ 9339 CD 92 93     	call Limpiamos_bandeja_DRAW
 145+ 933C CD 15 91     	call Incrementa_punteros_de_cajas
 146+ 933F
 147+ 933F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 933F              ; _ entidad del Nivel.
 149+ 933F
 150+ 933F 3A 35 8C     	ld a,(Ctrl_4)
 151+ 9342 E6 F0        	and $f0
 152+ 9344 32 35 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9347
 154+ 9347              ; Siguiente entidad del Nivel.
 155+ 9347
 156+ 9347 2A 56 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 934A 23           	inc hl 														; _ entidad del Nivel.
 158+ 934B
 159+ 934B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 934C
 161+ 934C 10 A7        	djnz 2B
 162+ 934E
 163+ 934E C9           	ret
 164+ 934F
 165+ 934F              ; -------------------------------------------------------------------------------------------------------------------
 166+ 934F              ;
 167+ 934F              ;	27/5/24
 168+ 934F              ;
 169+ 934F              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 934F              ;
 171+ 934F
 172+ 934F              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 934F              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 934F
 175+ 934F 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9352 CD 75 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9355
 178+ 9355
 179+ 9355              Construye_movimientos_masticados_Amadeus
 180+ 9355
 181+ 9355 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9358 CD 02 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 935B              ;															; _ el (Contador_de_mov_masticados).
 184+ 935B CD CD 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 935E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 935E
 187+ 935E              ; Generamos movimientos masticados de Amadeus.
 188+ 935E
 189+ 935E 06 79        	ld b,121												; $0079, 121d.
 190+ 9360
 191+ 9360 C5           1 push bc
 192+ 9361 CD 2E 97     	call Draw
 193+ 9364 CD E7 8F     	call Guarda_movimiento_masticado
 194+ 9367
 195+ 9367 CD A2 9A     	call Mov_right
 196+ 936A CD A2 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 936D
 198+ 936D C1           	pop bc
 199+ 936E 10 F0        	djnz 1B
 200+ 9370
 201+ 9370              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9370
 203+ 9370              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9370              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9370
 206+ 9370 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9373 01 08 00     	ld bc,8
 208+ 9376 A7           	and a
 209+ 9377 ED 42        	sbc hl,bc
 210+ 9379 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 937C
 212+ 937C C9           	ret
 213+ 937D
 214+ 937D              ; ---------------------------------------------------------------------
 215+ 937D              ;
 216+ 937D              ;	10/02/24
 217+ 937D              ;
 218+ 937D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 937D              ;
 220+ 937D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 937D
 222+ 937D              Definicion_segun_tipo
 223+ 937D
 224+ 937D CD 63 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9380 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9383 CD 6B 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9386 C9           	ret
 228+ 9387
 229+ 9387              ; ---------------------------------------------------------------------
 230+ 9387              ;
 231+ 9387              ;	6/7/24
 232+ 9387
 233+ 9387
 234+ 9387              Store_Restore_cajas
 235+ 9387
 236+ 9387 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 938B CD A2 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 938E CD 15 91     	call Incrementa_punteros_de_cajas
 239+ 9391 C9           	ret
 240+ 9392
 241+ 9392              ; ---------------------------------------------------------------------
 242+ 9392              ;
 243+ 9392              ;	23/6/24
 244+ 9392              ;
 245+ 9392              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9392              ;
 247+ 9392              ;	MODIFY: HL
 248+ 9392
 249+ 9392              Limpiamos_bandeja_DRAW
 250+ 9392
 251+ 9392 ED 73 0C 8C  	ld (Stack),sp
 252+ 9396 31 E4 8B     	ld sp,Vel_left
 253+ 9399
 254+ 9399 AF           	xor a
 255+ 939A 67           	ld h,a
 256+ 939B 6F           	ld l,a
 257+ 939C
 258+ 939C E5           	push hl
 259+ 939D E5           	push hl
 260+ 939E E5           	push hl
 261+ 939F E5           	push hl
 262+ 93A0 E5           	push hl
 263+ 93A1 E5           	push hl
 264+ 93A2 E5           	push hl
 265+ 93A3 E5           	push hl
 266+ 93A4 E5           	push hl
 267+ 93A5 E5           	push hl
 268+ 93A6 E5           	push hl
 269+ 93A7 E5           	push hl
 270+ 93A8 E5           	push hl
 271+ 93A9 E5           	push hl
 272+ 93AA E5           	push hl
 273+ 93AB E5           	push hl
 274+ 93AC E5           	push hl
 275+ 93AD E5           	push hl
 276+ 93AE
 277+ 93AE 33           	inc sp
 278+ 93AF
 279+ 93AF E5           	push hl
 280+ 93B0 ED 7B 0C 8C  	ld sp,(Stack)
 281+ 93B4
 282+ 93B4 C9           	ret
 283+ 93B5
 284+ 93B5              ; ---------------------------------------------------------------------
 285+ 93B5              ;
 286+ 93B5              ;	24/03/24
 287+ 93B5
 288+ 93B5 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93B8 2B           	dec hl
 290+ 93B9 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93BC C9           	ret
 292+ 93BD
 293+ 93BD              ; ---------------------------------------------------------------------
 294+ 93BD              ;
 295+ 93BD              ;	8/5/24
 296+ 93BD
 297+ 93BD              Reinicia_entidad_maliciosa
 298+ 93BD
 299+ 93BD              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93BD
 301+ 93BD CD 0F 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93C0 CD 1C 9F     	call Transfiere_datos_de_contadores
 303+ 93C3
 304+ 93C3              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93C3
 306+ 93C3 3A BF 8B     	ld a,(Tipo)
 307+ 93C6 CD 7D 93     	call Definicion_segun_tipo
 308+ 93C9
 309+ 93C9 E5           	push hl
 310+ 93CA DD E1        	pop ix
 311+ 93CC
 312+ 93CC DD 6E 0B     	ld l,(ix+11)
 313+ 93CF DD 66 0C     	ld h,(ix+12)
 314+ 93D2
 315+ 93D2 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93D5
 317+ 93D5 CD 0F 90     	call Cargamos_registros_con_mov_masticado
 318+ 93D8
 319+ 93D8              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93D8              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93D8              ; Ejemplos.
 322+ 93D8
 323+ 93D8              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93D8              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93D8              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93D8              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93D8              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93D8
 329+ 93D8 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 93DB CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93DD
 332+ 93DD 7E           	ld a,(hl)
 333+ 93DE CB 2F        	sra a
 334+ 93E0 CB 2F        	sra a
 335+ 93E2
 336+ 93E2 32 CA 8B     	ld (Velocidad),a
 337+ 93E5
 338+ 93E5 3E 40        	ld a,$40
 339+ 93E7 BE           	cp (hl)
 340+ 93E8 C0           	ret nz
 341+ 93E9
 342+ 93E9              ; Límitador.
 343+ 93E9
 344+ 93E9              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93E9
 346+ 93E9 CB 2E        	sra (hl)
 347+ 93EB 21 CA 8B     	ld hl,Velocidad
 348+ 93EE CB 2E        	sra (hl)
 349+ 93F0
 350+ 93F0 C9           	ret
 351+ 93F1
 352+ 93F1              ; ---------------------------------------------------------------------
 353+ 93F1              ;
 354+ 93F1              ;	22/01/24
 355+ 93F1
 356+ 93F1 21 35 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93F4 CB 46        	bit 0,(hl)
 358+ 93F6 20 0D        	jr nz,1F
 359+ 93F8 CB 4E        	bit 1,(hl)
 360+ 93FA 20 0C        	jr nz,2F
 361+ 93FC CB 56        	bit 2,(hl)
 362+ 93FE 20 0B        	jr nz,3F
 363+ 9400 CB 5E        	bit 3,(hl)
 364+ 9402 20 0A        	jr nz,4F
 365+ 9404 C9           	ret
 366+ 9405
 367+ 9405 CB E6        1 set 4,(hl)
 368+ 9407 C9           	ret
 369+ 9408 CB EE        2 set 5,(hl)
 370+ 940A C9           	ret
 371+ 940B CB F6        3 set 6,(hl)
 372+ 940D C9           	ret
 373+ 940E CB FE        4 set 7,(hl)
 374+ 9410 C9           	ret
 375+ 9411
 376+ 9411              ; ---------------------------------------------------------------------
 377+ 9411              ;
 378+ 9411              ;	23/01/24
 379+ 9411              ;
 380+ 9411              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9411              ;
 382+ 9411              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9411              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9411              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9411              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9411
 387+ 9411              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9411
 389+ 9411 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9412 3D           	dec a
 391+ 9413 20 06        	jr nz,1F
 392+ 9415
 393+ 9415              ; --- Tipo_1
 394+ 9415
 395+ 9415 21 35 8C     	ld hl,Ctrl_4
 396+ 9418 CB C6        	set 0,(hl)
 397+ 941A C9           	ret
 398+ 941B
 399+ 941B 3D           1 dec a
 400+ 941C 20 06        	jr nz,2F
 401+ 941E
 402+ 941E              ; --- Tipo_2
 403+ 941E
 404+ 941E 21 35 8C     	ld hl,Ctrl_4
 405+ 9421 CB CE        	set 1,(hl)
 406+ 9423 C9           	ret
 407+ 9424
 408+ 9424 3D           2 dec a
 409+ 9425 20 06        	jr nz,3F
 410+ 9427
 411+ 9427              ; --- Tipo_3
 412+ 9427
 413+ 9427 21 35 8C     	ld hl,Ctrl_4
 414+ 942A CB D6        	set 2,(hl)
 415+ 942C C9           	ret
 416+ 942D
 417+ 942D              ; --- Tipo_3
 418+ 942D
 419+ 942D 21 35 8C     3 ld hl,Ctrl_4
 420+ 9430 CB D6        	set 2,(hl)
 421+ 9432 C9           	ret
 422+ 9433
 423+ 9433              ; ---------------------------------------------------------------------
 424+ 9433              ;
 425+ 9433              ;	22/01/24
 426+ 9433
 427+ 9433 21 35 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9436 CB 46        	bit 0,(hl)
 429+ 9438 20 0E        	jr nz,1F
 430+ 943A
 431+ 943A CB 4E        	bit 1,(hl)
 432+ 943C 20 10        	jr nz,2F
 433+ 943E
 434+ 943E CB 56        	bit 2,(hl)
 435+ 9440 20 12        	jr nz,3F
 436+ 9442
 437+ 9442 CB 5E        	bit 3,(hl)
 438+ 9444 20 14        	jr nz,4F
 439+ 9446 18 19        	jr 6F
 440+ 9448
 441+ 9448              ; Entidad_de_Tipo_1.
 442+ 9448
 443+ 9448 CB 66        1 bit 4,(hl)
 444+ 944A 28 15        	jr z,6F
 445+ 944C 18 10        	jr 5F
 446+ 944E
 447+ 944E              ; Entidad_de_Tipo_2.
 448+ 944E
 449+ 944E CB 6E        2 bit 5,(hl)
 450+ 9450 28 0F        	jr z,6F
 451+ 9452 18 0A        	jr 5F
 452+ 9454
 453+ 9454              ; Entidad_de_Tipo_3.
 454+ 9454
 455+ 9454 CB 76        3 bit 6,(hl)
 456+ 9456 28 09        	jr z,6F
 457+ 9458 18 04        	jr 5F
 458+ 945A
 459+ 945A              ; Entidad_de_Tipo_4.
 460+ 945A
 461+ 945A CB 7E        4 bit 7,(hl)
 462+ 945C 28 03        	jr z,6F
 463+ 945E
 464+ 945E              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 945E
 466+ 945E AF           5 xor a
 467+ 945F 3C           	inc a
 468+ 9460 C9           	ret
 469+ 9461
 470+ 9461              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9461
 472+ 9461 AF           6 xor a
 473+ 9462 C9           	ret
 474+ 9463
 475+ 9463              ;	------------------------------------------------------------------------------------
 476+ 9463              ;
 477+ 9463              ;	12/01/24
 478+ 9463              ;
 479+ 9463              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9463              ;
 481+ 9463              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9463              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9463
 484+ 9463 CB 27        Calcula_salto_en_BC sla a
 485+ 9465 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9467 4F           	ld c,a
 487+ 9468 06 00        	ld b,0
 488+ 946A C9           	ret
 489+ 946B
 490+ 946B              ; ------------------------------------------------------------------
 491+ 946B              ;
 492+ 946B              ;	19/1/24
 493+ 946B              ;
 494+ 946B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 946B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 946B
 497+ 946B A7           Situa_en_datos_de_definicion and a
 498+ 946C ED 4A        	adc hl,bc
 499+ 946E CD C7 90     	call Extrae_address
 500+ 9471 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9474 C9           	ret
 502+ 9475
 503+ 9475              ; ------------------------------------------------------------------
 504+ 9475
 505+ 9475              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9475              ; 	inc de
 507+ 9475              ; 	inc de
 508+ 9475              ; 	ex de,hl
 509+ 9475              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9475              ; 	ret
 511+ 9475
 512+ 9475              ; ----------------------------------------------------------------------------------------------------------
 513+ 9475              ;
 514+ 9475              ;	24/6/24
 515+ 9475              ;
 516+ 9475              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9475              ;	_ de entidad.
 518+ 9475              ;
 519+ 9475              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9475              ;
 521+ 9475              ;
 522+ 9475              ;	MODIFICA: HL,DE y BC
 523+ 9475
 524+ 9475
 525+ 9475              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9475
 527+ 9475 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9478 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9479 12           	ld (de),a
 530+ 947A 23           	inc hl
 531+ 947B              ;
 532+ 947B 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 947E 01 02 00     	ld bc,2
 534+ 9481 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9483              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9483 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 9486 7E           	ld a,(hl)
 538+ 9487 12           	ld (de),a
 539+ 9488 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9489
 541+ 9489 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 948C 01 04 00     	ld bc,4
 543+ 948F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9491
 545+ 9491 11 DC 8B     	ld de,Posicion_inicio
 546+ 9494 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9497 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9499
 549+ 9499 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 949C 01 02 00     	ld bc,2
 551+ 949F ED B0        	ldir
 552+ 94A1
 553+ 94A1 C9           	ret
 554+ 94A2
 555+ 94A2              ; ----------------------------------------------------------------------------------------------------------
 556+ 94A2              ;
 557+ 94A2              ;	1/8/24
 558+ 94A2              ;
 559+ 94A2
 560+ 94A2              Parametros_de_bandeja_DRAW_a_caja
 561+ 94A2
 562+ 94A2 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 94A5 01 0C 00     	ld bc,12
 564+ 94A8 ED B0        	ldir
 565+ 94AA C9           	ret
 566+ 94AB
 567+ 94AB              ;---------------------------------------------------------------------------------------------------------------
 568+ 94AB              ;
 569+ 94AB              ;	5/1/24
 570+ 94AB              ;
 571+ 94AB              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94AB              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94AB              ;
 574+ 94AB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94AB              ;
 576+ 94AB              ;	(Numero_parcial_de_entidades)="7".
 577+ 94AB              ;
 578+ 94AB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94AB              ;
 580+ 94AB              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94AB              ;
 582+ 94AB              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94AB              ;	MODIFICA: A y B.
 584+ 94AB              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94AB
 586+ 94AB              Inicializa_Numero_parcial_de_entidades
 587+ 94AB
 588+ 94AB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94AB
 590+ 94AB 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 94AE A7           	and a
 592+ 94AF
 593+ 94AF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94AF              ;	jr z,$
 595+ 94AF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94AF
 597+ 94AF 20 03        	jr nz,3F
 598+ 94B1
 599+ 94B1              ; ---------- ---------- ----------
 600+ 94B1
 601+ 94B1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94B1              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94B1
 604+ 94B1 CD A7 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94B4
 606+ 94B4              ; ---------- ---------- ----------
 607+ 94B4
 608+ 94B4 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94B7 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94B9 38 08        	jr c,1F
 611+ 94BB
 612+ 94BB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94BB              ; Actualizamos variables.
 614+ 94BB
 615+ 94BB 3E 07        	ld a,7
 616+ 94BD 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94C0 47           	ld b,a
 618+ 94C1 18 04        	jr 2F
 619+ 94C3
 620+ 94C3              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94C3              ; (Numero_de_entidades)="0".
 622+ 94C3
 623+ 94C3 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94C6 47           	ld b,a
 625+ 94C7 C9           2 ret
 626+ 94C8
# file closed: Rutinas_de_inicio_y_niveles.asm
2047  94C8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C8              ;
   3+ 94C8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C8              ;
   5+ 94C8              ; *****************************************************************************************************************************************************************************************
   6+ 94C8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C8
   8+ 94C8 7C           calcula_tercio ld a,h
   9+ 94C9 E6 18        	and $18
  10+ 94CB CB 2F        	sra a
  11+ 94CD CB 2F        	sra a
  12+ 94CF CB 2F        	sra a
  13+ 94D1 C9           	ret
  14+ 94D2
# file closed: calcula_tercio.asm
2048  94D2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D2              ;
   3+ 94D2              ;
   4+ 94D2              ;	CLS.
   5+ 94D2              ;
   6+ 94D2              ;	Limpia la pantalla y define sus atributos.
   7+ 94D2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D2              ;
   9+ 94D2              ;	COLORES: 0 ..... NEGRO
  10+ 94D2              ;    		 1 ..... AZUL
  11+ 94D2              ; 			 2 ..... ROJO
  12+ 94D2              ;			 3 ..... MAGENTA
  13+ 94D2              ; 			 4 ..... VERDE
  14+ 94D2              ; 			 5 ..... CIAN
  15+ 94D2              ;			 6 ..... AMARILLO
  16+ 94D2              ; 			 7 ..... BLANCO
  17+ 94D2              ;
  18+ 94D2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D2              ;
  20+ 94D2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D2
  22+ 94D2
  23+ 94D2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D5 11 01 40     	LD DE,$4001
  25+ 94D8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94DB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94DD ED B0        	LDIR
  28+ 94DF 01 FF 02     	LD BC,767
  29+ 94E2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E3 ED B0        	LDIR
  31+ 94E5 C9           	ret
  32+ 94E6
# file closed: Cls.asm
2049  94E6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E6              ; ------------------------------------------------------------------------
   2+ 94E6              ;
   3+ 94E6              ;	30/1/24
   4+ 94E6              ;
   5+ 94E6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E6              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E6              ;
   8+ 94E6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E6              ;
  10+ 94E6              ;	Modifica: A,BC y DE.
  11+ 94E6
  12+ 94E6 7D           Genera_coordenadas ld a,l
  13+ 94E7 E6 1F        	and $1f
  14+ 94E9 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94EC
  16+ 94EC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94ED FE 40        	cp $40
  18+ 94EF 38 1C        	jr c,4F
  19+ 94F1
  20+ 94F1 CD C8 94     	call calcula_tercio
  21+ 94F4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94F5
  23+ 94F5 1E 00        	ld e,0
  24+ 94F7 7D           	ld a,l
  25+ 94F8 E6 E0        	and $e0
  26+ 94FA 28 01        	jr z,1F
  27+ 94FC 04           	inc b
  28+ 94FD
  29+ 94FD 04           1 inc b
  30+ 94FE 05           	dec b
  31+ 94FF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9501              ;														; _ , salimos.
  33+ 9501 1C           3 inc e
  34+ 9502 D6 20        	sub 32
  35+ 9504 20 FB        	jr nz,3B
  36+ 9506 10 F5        	djnz 1B
  37+ 9508
  38+ 9508 7B           2 ld a,e
  39+ 9509 32 C1 8B     	ld (Coordenada_y),a
  40+ 950C C9           	ret
  41+ 950D
  42+ 950D AF           4 xor a
  43+ 950E 32 C1 8B     	ld (Coordenada_y),a
  44+ 9511 C9           	ret
  45+ 9512
# file closed: Genera_coordenadas.asm
2050  9512              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9512              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9512              ;
   3+ 9512              ;	20/09/24
   4+ 9512              ;
   5+ 9512              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9512              ;   DE contiene Puntero_objeto.
   7+ 9512              ;   IX contiene el Puntero de impresión.
   8+ 9512
   9+ 9512              Genera_datos_de_impresion
  10+ 9512
  11+ 9512 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9516
  13+ 9516 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9519 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 951B
  16+ 951B 2A 2E 8C         ld hl,(Scanlines_album_SP)
  17+ 951E
  18+ 951E 3E 05            ld a,5
  19+ 9520 85               add l
  20+ 9521 6F               ld l,a
  21+ 9522
  22+ 9522 F9               ld sp,hl
  23+ 9523 22 2E 8C         ld (Scanlines_album_SP),hl
  24+ 9526
  25+ 9526 21 00 00         ld hl,0
  26+ 9529
  27+ 9529 DD E5            push ix
  28+ 952B 3B               dec sp
  29+ 952C ED 7A            adc hl,sp
  30+ 952E D5               push de
  31+ 952F
  32+ 952F              ; Recuperamos SP.
  33+ 952F
  34+ 952F ED 7B 0C 8C      ld sp,(Stack)
  35+ 9533
  36+ 9533 E5               push hl
  37+ 9534 F1               pop af
  38+ 9535 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9536
  40+ 9536              ; Tenemos el encabezado listo.
  41+ 9536              ; Preparamos registros para generar los scanlines.
  42+ 9536
  43+ 9536 DD E5            push ix
  44+ 9538 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9539
  46+ 9539 ED 5B 2E 8C      ld de,(Scanlines_album_SP)
  47+ 953D
  48+ 953D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 953D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 953D
  51+ 953D 7C               ld a,h
  52+ 953E FE 50            cp $50
  53+ 9540 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9542
  55+ 9542 20 05            jr nz,2F
  56+ 9544
  57+ 9544 7D               ld a,l
  58+ 9545 FE E0            cp $e0
  59+ 9547 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9549
  61+ 9549 7D           2 ld a,l
  62+ 954A FE C0            cp $c0
  63+ 954C D2 E2 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 954F
  65+ 954F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 954F
  67+ 954F CD E0 99         call NextScan
  68+ 9552 EB               ex de,hl
  69+ 9553
  70+ 9553 73               ld (hl),e
  71+ 9554 23               inc hl
  72+ 9555 72               ld (hl),d
  73+ 9556 23               inc hl
  74+ 9557
  75+ 9557 EB               ex de,hl
  76+ 9558
  77+ 9558 CD E0 99         call NextScan
  78+ 955B EB               ex de,hl
  79+ 955C
  80+ 955C 73               ld (hl),e
  81+ 955D 23               inc hl
  82+ 955E 72               ld (hl),d
  83+ 955F 23               inc hl
  84+ 9560
  85+ 9560 EB               ex de,hl
  86+ 9561
  87+ 9561 CD E0 99         call NextScan
  88+ 9564 EB               ex de,hl
  89+ 9565
  90+ 9565 73               ld (hl),e
  91+ 9566 23               inc hl
  92+ 9567 72               ld (hl),d
  93+ 9568 23               inc hl
  94+ 9569
  95+ 9569 EB               ex de,hl
  96+ 956A
  97+ 956A CD E0 99         call NextScan
  98+ 956D EB               ex de,hl
  99+ 956E
 100+ 956E 73               ld (hl),e
 101+ 956F 23               inc hl
 102+ 9570 72               ld (hl),d
 103+ 9571 23               inc hl
 104+ 9572
 105+ 9572 EB               ex de,hl
 106+ 9573
 107+ 9573 CD E0 99         call NextScan
 108+ 9576 EB               ex de,hl
 109+ 9577
 110+ 9577 73               ld (hl),e
 111+ 9578 23               inc hl
 112+ 9579 72               ld (hl),d
 113+ 957A 23               inc hl
 114+ 957B
 115+ 957B EB               ex de,hl
 116+ 957C
 117+ 957C CD E0 99         call NextScan
 118+ 957F EB               ex de,hl
 119+ 9580
 120+ 9580 73               ld (hl),e
 121+ 9581 23               inc hl
 122+ 9582 72               ld (hl),d
 123+ 9583 23               inc hl
 124+ 9584
 125+ 9584 EB               ex de,hl
 126+ 9585
 127+ 9585 CD E0 99         call NextScan
 128+ 9588 EB               ex de,hl
 129+ 9589
 130+ 9589 73               ld (hl),e
 131+ 958A 23               inc hl
 132+ 958B 72               ld (hl),d
 133+ 958C 23               inc hl
 134+ 958D
 135+ 958D EB               ex de,hl
 136+ 958E
 137+ 958E CD E0 99         call NextScan
 138+ 9591 EB               ex de,hl
 139+ 9592
 140+ 9592 73               ld (hl),e
 141+ 9593 23               inc hl
 142+ 9594 72               ld (hl),d
 143+ 9595 23               inc hl
 144+ 9596
 145+ 9596 EB               ex de,hl
 146+ 9597
 147+ 9597 CD E0 99         call NextScan
 148+ 959A EB               ex de,hl
 149+ 959B
 150+ 959B 73               ld (hl),e
 151+ 959C 23               inc hl
 152+ 959D 72               ld (hl),d
 153+ 959E 23               inc hl
 154+ 959F
 155+ 959F EB               ex de,hl
 156+ 95A0
 157+ 95A0 CD E0 99         call NextScan
 158+ 95A3 EB               ex de,hl
 159+ 95A4
 160+ 95A4 73               ld (hl),e
 161+ 95A5 23               inc hl
 162+ 95A6 72               ld (hl),d
 163+ 95A7 23               inc hl
 164+ 95A8
 165+ 95A8 EB               ex de,hl
 166+ 95A9
 167+ 95A9 CD E0 99         call NextScan
 168+ 95AC EB               ex de,hl
 169+ 95AD
 170+ 95AD 73               ld (hl),e
 171+ 95AE 23               inc hl
 172+ 95AF 72               ld (hl),d
 173+ 95B0 23               inc hl
 174+ 95B1
 175+ 95B1 EB               ex de,hl
 176+ 95B2
 177+ 95B2 CD E0 99         call NextScan
 178+ 95B5 EB               ex de,hl
 179+ 95B6
 180+ 95B6 73               ld (hl),e
 181+ 95B7 23               inc hl
 182+ 95B8 72               ld (hl),d
 183+ 95B9 23               inc hl
 184+ 95BA
 185+ 95BA EB               ex de,hl
 186+ 95BB
 187+ 95BB CD E0 99         call NextScan
 188+ 95BE EB               ex de,hl
 189+ 95BF
 190+ 95BF 73               ld (hl),e
 191+ 95C0 23               inc hl
 192+ 95C1 72               ld (hl),d
 193+ 95C2 23               inc hl
 194+ 95C3
 195+ 95C3 EB               ex de,hl
 196+ 95C4
 197+ 95C4 CD E0 99         call NextScan
 198+ 95C7 EB               ex de,hl
 199+ 95C8
 200+ 95C8 73               ld (hl),e
 201+ 95C9 23               inc hl
 202+ 95CA 72               ld (hl),d
 203+ 95CB 23               inc hl
 204+ 95CC
 205+ 95CC EB               ex de,hl
 206+ 95CD
 207+ 95CD CD E0 99         call NextScan
 208+ 95D0 EB               ex de,hl
 209+ 95D1
 210+ 95D1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95D1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95D1              ;   _ generar sus scanlines.
 213+ 95D1
 214+ 95D1              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95D1
 216+ 95D1 73               ld (hl),e
 217+ 95D2 23               inc hl
 218+ 95D3 72               ld (hl),d
 219+ 95D4 23               inc hl
 220+ 95D5
 221+ 95D5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95D5
 223+ 95D5 22 2E 8C         ld (Scanlines_album_SP),hl
 224+ 95D8
 225+ 95D8 EB               ex de,hl
 226+ 95D9
 227+ 95D9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D9
 229+ 95D9              ;    call NextScan
 230+ 95D9              ;    call NextScan
 231+ 95D9
 232+ 95D9 22 39 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95DC
 234+ 95DC              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95DC
 236+ 95DC 08               ex af,af
 237+ 95DD
 238+ 95DD F5               push af
 239+ 95DE E1               pop hl
 240+ 95DF
 241+ 95DF 36 10            ld (hl),16
 242+ 95E1
 243+ 95E1 C9               ret
 244+ 95E2
 245+ 95E2              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95E2
 247+ 95E2              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95E2
 249+ 95E2 3E 57            ld a,$57
 250+ 95E4 94               sub h
 251+ 95E5 47               ld b,a
 252+ 95E6
 253+ 95E6 3E DF            ld a,$df
 254+ 95E8 BD               cp l
 255+ 95E9 38 04            jr c,1F
 256+ 95EB
 257+ 95EB 3E 08            ld a,8
 258+ 95ED 80               add b
 259+ 95EE 47               ld b,a
 260+ 95EF
 261+ 95EF              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95EF              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95EF
 264+ 95EF 48           1 ld c,b
 265+ 95F0 0C               inc c
 266+ 95F1
 267+ 95F1 04               inc b
 268+ 95F2 05               dec b
 269+ 95F3 20 02            jr nz,3F
 270+ 95F5
 271+ 95F5 18 0B            jr 6F
 272+ 95F7
 273+ 95F7 CD E0 99     3 call NextScan
 274+ 95FA EB               ex de,hl
 275+ 95FB
 276+ 95FB 73               ld (hl),e
 277+ 95FC 23               inc hl
 278+ 95FD 72               ld (hl),d
 279+ 95FE 23               inc hl
 280+ 95FF
 281+ 95FF EB               ex de,hl
 282+ 9600 10 F5            djnz 3B
 283+ 9602
 284+ 9602 ED 53 2E 8C  6 ld (Scanlines_album_SP),de
 285+ 9606
 286+ 9606 08           5 ex af,af
 287+ 9607 F5               push af
 288+ 9608 E1               pop hl
 289+ 9609
 290+ 9609 71               ld (hl),c
 291+ 960A
 292+ 960A C9               ret
 293+ 960B
# file closed: Genera_datos_de_impresion.asm
2051  960B              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 960B              ; -----------------------------------------------------------------------------
   2+ 960B              ;
   3+ 960B              ;   11/03/24
   4+ 960B              ;
   5+ 960B
   6+ 960B              Pinta_Sprites
   7+ 960B
   8+ 960B              ;    ld hl,(Scanlines_album_SP)
   9+ 960B              ;    call Extrae_address
  10+ 960B
  11+ 960B              ;    inc h
  12+ 960B              ;    dec h
  13+ 960B              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 960B
  15+ 960B ED 73 0C 8C      ld (Stack),sp
  16+ 960F
  17+ 960F EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9610              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9610 2C               inc l
  20+ 9611 2C               inc l
  21+ 9612
  22+ 9612 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9613
  24+ 9613 2C               inc l
  25+ 9614 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9615
  27+ 9615              ;   Seleccionamos rutina de impresión:
  28+ 9615
  29+ 9615 3E 10            ld a,16
  30+ 9617 B8               cp b
  31+ 9618 C2 14 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 961B
  33+ 961B              ;   Rutinas:
  34+ 961B
  35+ 961B              Pinta_rapido    ;   1520 t/states.
  36+ 961B
  37+ 961B E1               pop hl
  38+ 961C
  39+ 961C 1A               ld a,(de)
  40+ 961D AE               xor (hl)
  41+ 961E 77               ld (hl),a
  42+ 961F 2C               inc l
  43+ 9620 1C               inc e
  44+ 9621 1A               ld a,(de)
  45+ 9622 AE               xor (hl)
  46+ 9623 77               ld (hl),a
  47+ 9624 2C               inc l
  48+ 9625 1C               inc e
  49+ 9626 1A               ld a,(de)
  50+ 9627 AE               xor (hl)
  51+ 9628 77               ld (hl),a
  52+ 9629 13               inc de
  53+ 962A
  54+ 962A E1               pop hl
  55+ 962B
  56+ 962B 1A               ld a,(de)
  57+ 962C AE               xor (hl)
  58+ 962D 77               ld (hl),a
  59+ 962E 2C               inc l
  60+ 962F 1C               inc e
  61+ 9630 1A               ld a,(de)
  62+ 9631 AE               xor (hl)
  63+ 9632 77               ld (hl),a
  64+ 9633 2C               inc l
  65+ 9634 1C               inc e
  66+ 9635 1A               ld a,(de)
  67+ 9636 AE               xor (hl)
  68+ 9637 77               ld (hl),a
  69+ 9638 13               inc de
  70+ 9639
  71+ 9639 E1               pop hl
  72+ 963A
  73+ 963A 1A               ld a,(de)
  74+ 963B AE               xor (hl)
  75+ 963C 77               ld (hl),a
  76+ 963D 2C               inc l
  77+ 963E 1C               inc e
  78+ 963F 1A               ld a,(de)
  79+ 9640 AE               xor (hl)
  80+ 9641 77               ld (hl),a
  81+ 9642 2C               inc l
  82+ 9643 1C               inc e
  83+ 9644 1A               ld a,(de)
  84+ 9645 AE               xor (hl)
  85+ 9646 77               ld (hl),a
  86+ 9647 13               inc de
  87+ 9648
  88+ 9648 E1               pop hl
  89+ 9649
  90+ 9649 1A               ld a,(de)
  91+ 964A AE               xor (hl)
  92+ 964B 77               ld (hl),a
  93+ 964C 2C               inc l
  94+ 964D 1C               inc e
  95+ 964E 1A               ld a,(de)
  96+ 964F AE               xor (hl)
  97+ 9650 77               ld (hl),a
  98+ 9651 2C               inc l
  99+ 9652 1C               inc e
 100+ 9653 1A               ld a,(de)
 101+ 9654 AE               xor (hl)
 102+ 9655 77               ld (hl),a
 103+ 9656 13               inc de
 104+ 9657
 105+ 9657 E1               pop hl
 106+ 9658
 107+ 9658 1A               ld a,(de)
 108+ 9659 AE               xor (hl)
 109+ 965A 77               ld (hl),a
 110+ 965B 2C               inc l
 111+ 965C 1C               inc e
 112+ 965D 1A               ld a,(de)
 113+ 965E AE               xor (hl)
 114+ 965F 77               ld (hl),a
 115+ 9660 2C               inc l
 116+ 9661 1C               inc e
 117+ 9662 1A               ld a,(de)
 118+ 9663 AE               xor (hl)
 119+ 9664 77               ld (hl),a
 120+ 9665 13               inc de
 121+ 9666
 122+ 9666 E1               pop hl
 123+ 9667
 124+ 9667 1A               ld a,(de)
 125+ 9668 AE               xor (hl)
 126+ 9669 77               ld (hl),a
 127+ 966A 2C               inc l
 128+ 966B 1C               inc e
 129+ 966C 1A               ld a,(de)
 130+ 966D AE               xor (hl)
 131+ 966E 77               ld (hl),a
 132+ 966F 2C               inc l
 133+ 9670 1C               inc e
 134+ 9671 1A               ld a,(de)
 135+ 9672 AE               xor (hl)
 136+ 9673 77               ld (hl),a
 137+ 9674 13               inc de
 138+ 9675
 139+ 9675 E1               pop hl
 140+ 9676
 141+ 9676 1A               ld a,(de)
 142+ 9677 AE               xor (hl)
 143+ 9678 77               ld (hl),a
 144+ 9679 2C               inc l
 145+ 967A 1C               inc e
 146+ 967B 1A               ld a,(de)
 147+ 967C AE               xor (hl)
 148+ 967D 77               ld (hl),a
 149+ 967E 2C               inc l
 150+ 967F 1C               inc e
 151+ 9680 1A               ld a,(de)
 152+ 9681 AE               xor (hl)
 153+ 9682 77               ld (hl),a
 154+ 9683 13               inc de
 155+ 9684
 156+ 9684 E1               pop hl
 157+ 9685
 158+ 9685 1A               ld a,(de)
 159+ 9686 AE               xor (hl)
 160+ 9687 77               ld (hl),a
 161+ 9688 2C               inc l
 162+ 9689 1C               inc e
 163+ 968A 1A               ld a,(de)
 164+ 968B AE               xor (hl)
 165+ 968C 77               ld (hl),a
 166+ 968D 2C               inc l
 167+ 968E 1C               inc e
 168+ 968F 1A               ld a,(de)
 169+ 9690 AE               xor (hl)
 170+ 9691 77               ld (hl),a
 171+ 9692 13               inc de
 172+ 9693
 173+ 9693 E1               pop hl
 174+ 9694
 175+ 9694 1A               ld a,(de)
 176+ 9695 AE               xor (hl)
 177+ 9696 77               ld (hl),a
 178+ 9697 2C               inc l
 179+ 9698 1C               inc e
 180+ 9699 1A               ld a,(de)
 181+ 969A AE               xor (hl)
 182+ 969B 77               ld (hl),a
 183+ 969C 2C               inc l
 184+ 969D 1C               inc e
 185+ 969E 1A               ld a,(de)
 186+ 969F AE               xor (hl)
 187+ 96A0 77               ld (hl),a
 188+ 96A1 13               inc de
 189+ 96A2
 190+ 96A2 E1               pop hl
 191+ 96A3
 192+ 96A3 1A               ld a,(de)
 193+ 96A4 AE               xor (hl)
 194+ 96A5 77               ld (hl),a
 195+ 96A6 2C               inc l
 196+ 96A7 1C               inc e
 197+ 96A8 1A               ld a,(de)
 198+ 96A9 AE               xor (hl)
 199+ 96AA 77               ld (hl),a
 200+ 96AB 2C               inc l
 201+ 96AC 1C               inc e
 202+ 96AD 1A               ld a,(de)
 203+ 96AE AE               xor (hl)
 204+ 96AF 77               ld (hl),a
 205+ 96B0 13               inc de
 206+ 96B1
 207+ 96B1 E1               pop hl
 208+ 96B2
 209+ 96B2 1A               ld a,(de)
 210+ 96B3 AE               xor (hl)
 211+ 96B4 77               ld (hl),a
 212+ 96B5 2C               inc l
 213+ 96B6 1C               inc e
 214+ 96B7 1A               ld a,(de)
 215+ 96B8 AE               xor (hl)
 216+ 96B9 77               ld (hl),a
 217+ 96BA 2C               inc l
 218+ 96BB 1C               inc e
 219+ 96BC 1A               ld a,(de)
 220+ 96BD AE               xor (hl)
 221+ 96BE 77               ld (hl),a
 222+ 96BF 13               inc de
 223+ 96C0
 224+ 96C0 E1               pop hl
 225+ 96C1
 226+ 96C1 1A               ld a,(de)
 227+ 96C2 AE               xor (hl)
 228+ 96C3 77               ld (hl),a
 229+ 96C4 2C               inc l
 230+ 96C5 1C               inc e
 231+ 96C6 1A               ld a,(de)
 232+ 96C7 AE               xor (hl)
 233+ 96C8 77               ld (hl),a
 234+ 96C9 2C               inc l
 235+ 96CA 1C               inc e
 236+ 96CB 1A               ld a,(de)
 237+ 96CC AE               xor (hl)
 238+ 96CD 77               ld (hl),a
 239+ 96CE 13               inc de
 240+ 96CF
 241+ 96CF E1               pop hl
 242+ 96D0
 243+ 96D0 1A               ld a,(de)
 244+ 96D1 AE               xor (hl)
 245+ 96D2 77               ld (hl),a
 246+ 96D3 2C               inc l
 247+ 96D4 1C               inc e
 248+ 96D5 1A               ld a,(de)
 249+ 96D6 AE               xor (hl)
 250+ 96D7 77               ld (hl),a
 251+ 96D8 2C               inc l
 252+ 96D9 1C               inc e
 253+ 96DA 1A               ld a,(de)
 254+ 96DB AE               xor (hl)
 255+ 96DC 77               ld (hl),a
 256+ 96DD 13               inc de
 257+ 96DE
 258+ 96DE E1               pop hl
 259+ 96DF
 260+ 96DF 1A               ld a,(de)
 261+ 96E0 AE               xor (hl)
 262+ 96E1 77               ld (hl),a
 263+ 96E2 2C               inc l
 264+ 96E3 1C               inc e
 265+ 96E4 1A               ld a,(de)
 266+ 96E5 AE               xor (hl)
 267+ 96E6 77               ld (hl),a
 268+ 96E7 2C               inc l
 269+ 96E8 1C               inc e
 270+ 96E9 1A               ld a,(de)
 271+ 96EA AE               xor (hl)
 272+ 96EB 77               ld (hl),a
 273+ 96EC 13               inc de
 274+ 96ED
 275+ 96ED E1               pop hl
 276+ 96EE
 277+ 96EE 1A               ld a,(de)
 278+ 96EF AE               xor (hl)
 279+ 96F0 77               ld (hl),a
 280+ 96F1 2C               inc l
 281+ 96F2 1C               inc e
 282+ 96F3 1A               ld a,(de)
 283+ 96F4 AE               xor (hl)
 284+ 96F5 77               ld (hl),a
 285+ 96F6 2C               inc l
 286+ 96F7 1C               inc e
 287+ 96F8 1A               ld a,(de)
 288+ 96F9 AE               xor (hl)
 289+ 96FA 77               ld (hl),a
 290+ 96FB 13               inc de
 291+ 96FC
 292+ 96FC E1               pop hl
 293+ 96FD
 294+ 96FD 1A               ld a,(de)
 295+ 96FE AE               xor (hl)
 296+ 96FF 77               ld (hl),a
 297+ 9700 2C               inc l
 298+ 9701 1C               inc e
 299+ 9702 1A               ld a,(de)
 300+ 9703 AE               xor (hl)
 301+ 9704 77               ld (hl),a
 302+ 9705 2C               inc l
 303+ 9706 1C               inc e
 304+ 9707 1A               ld a,(de)
 305+ 9708 AE               xor (hl)
 306+ 9709 77               ld (hl),a
 307+ 970A 13               inc de
 308+ 970B
 309+ 970B ED 73 2E 8C      ld (Scanlines_album_SP),sp
 310+ 970F ED 7B 0C 8C      ld sp,(Stack)
 311+ 9713 C9               ret
 312+ 9714
 313+ 9714              Pinta_lento
 314+ 9714
 315+ 9714 E1           1 pop hl
 316+ 9715
 317+ 9715 1A               ld a,(de)
 318+ 9716 AE               xor (hl)
 319+ 9717 77               ld (hl),a
 320+ 9718 2C               inc l
 321+ 9719 1C               inc e
 322+ 971A 1A               ld a,(de)
 323+ 971B AE               xor (hl)
 324+ 971C 77               ld (hl),a
 325+ 971D 2C               inc l
 326+ 971E 1C               inc e
 327+ 971F 1A               ld a,(de)
 328+ 9720 AE               xor (hl)
 329+ 9721 77               ld (hl),a
 330+ 9722 13               inc de
 331+ 9723
 332+ 9723 10 EF            djnz 1B
 333+ 9725
 334+ 9725 ED 73 2E 8C      ld (Scanlines_album_SP),sp
 335+ 9729 ED 7B 0C 8C      ld sp,(Stack)
 336+ 972D C9               ret
# file closed: Pinta_Sprites.asm
2052  972E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 972E              ; ******************************************************************************************************************************************************************************************
   2+ 972E              ;
   3+ 972E              ; 26/06/23
   4+ 972E              ;
   5+ 972E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 972E
   7+ 972E              Draw
   8+ 972E
   9+ 972E CD D4 99     	call Prepara_draw
  10+ 9731 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9732 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9733 28 05        	jr z,2F
  13+ 9735
  14+ 9735 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9738 18 0C        	jr 1F
  16+ 973A
  17+ 973A 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 973D 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9740 CD CC 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9743              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9743
  22+ 9743 CD 73 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9746
  24+ 9746 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 9749 CB 6F        	bit 5,a
  26+ 974B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 974D
  28+ 974D CD 62 97     	call Comprueba_limite_horizontal
  29+ 9750 CD F2 97     	call Comprueba_limite_vertical
  30+ 9753
  31+ 9753              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9753              ; -----------------------
  33+ 9753              ; -----------------------
  34+ 9753              ; -----------------------
  35+ 9753
  36+ 9753 CD 48 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9756 CD 7F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9759
  39+ 9759 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 975C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 975E 32 CC 8B     	ld (Ctrl_0),a
  42+ 9761
  43+ 9761 C9           	ret
  44+ 9762
  45+ 9762              ; *******************************************************************************************************************************************************************************************
  46+ 9762              ;	21/01/23
  47+ 9762              ;
  48+ 9762              ; 	Comprueba_limite_horizontal.
  49+ 9762              ;
  50+ 9762              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9762              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9762              ;
  53+ 9762              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9762              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9762              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9762              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9762
  58+ 9762
  59+ 9762
  60+ 9762 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9765 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9767 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9769 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 976B 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 976E 18 09            jr 6F
  66+ 9770 CB 5F        1 bit 3,a
  67+ 9772 28 0A            jr z,2F
  68+ 9774 E6 F7            and $f7
  69+ 9776 32 CC 8B         ld (Ctrl_0),a
  70+ 9779 CD CC 98     6 call Inicializacion
  71+ 977C 18 5B            jr 5F
  72+ 977E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 977F
  74+ 977F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 977F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 977F
  77+ 977F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9780 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9783 CD C8 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9786 67           	ld h,a
  81+ 9787 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9788 CD C8 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 978B 67           	ld h,a
  84+ 978C A7           	and a
  85+ 978D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 978F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9790 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9793 FE 02        	cp 2
  89+ 9795 38 1E        	jr c,3F
  90+ 9797 28 1C        	jr z,3F
  91+ 9799 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 979A 28 23            jr z,7F
  93+ 979C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 979E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 97A0 E1           	pop hl
  96+ 97A1
  97+ 97A1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 97A1              ; _para indicar con E="2" en caso necesario.
  99+ 97A1
 100+ 97A1 E5               push hl
 101+ 97A2 C5               push bc
 102+ 97A3 CD C8 94     	call calcula_tercio
 103+ 97A6 FE 01        	cp 1
 104+ 97A8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97AA CD DA 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97AD 28 26            jr z,9F
 107+ 97AF 38 24            jr c,9F
 108+ 97B1 1E 00        11 ld e,0
 109+ 97B3 18 22            jr 8F
 110+ 97B5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B6 28 07        	jr z, 7F
 112+ 97B8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97BA 1E 00         	ld e,0
 114+ 97BC E1           	pop hl
 115+ 97BD 18 04        	jr 4F
 116+ 97BF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97C1 18 15            jr 10F
 118+ 97C3
 119+ 97C3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97C3              ; _para indicar con E="2" en caso necesario.
 121+ 97C3
 122+ 97C3 E5           4 push hl
 123+ 97C4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97C5 CD C8 94     	call calcula_tercio
 125+ 97C8 FE 01        	cp 1
 126+ 97CA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97CC CD DA 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97CF 28 04            jr z,9F
 129+ 97D1 30 02            jr nc,9F
 130+ 97D3 18 02        	jr 8F
 131+ 97D5 1E 02        9 ld e,2
 132+ 97D7 C1           8 pop bc
 133+ 97D8 E1           10 pop hl
 134+ 97D9 C9           5 ret
 135+ 97DA
 136+ 97DA              ; --------------------
 137+ 97DA              ;
 138+ 97DA              ; 25/08/22
 139+ 97DA
 140+ 97DA CD C8 94     Comprueba_centro call calcula_tercio
 141+ 97DD 67               ld h,a
 142+ 97DE 08           	ex af,af
 143+ 97DF FE 02        	cp 2
 144+ 97E1 38 07        	jr c,1F
 145+ 97E3 28 05        	jr z,1F
 146+ 97E5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E8 18 03        	jr 2F
 148+ 97EA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97ED 08           2 ex af,af
 150+ 97EE A7               and a
 151+ 97EF ED 42            sbc hl,bc
 152+ 97F1 C9               ret
 153+ 97F2
 154+ 97F2              ; *********************************************************************************************************************************************************************************************
 155+ 97F2              ;
 156+ 97F2              ;   16/8/22
 157+ 97F2              ;
 158+ 97F2              ;	Comprueba_limite_vertical
 159+ 97F2              ;
 160+ 97F2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97F2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97F2              ;
 163+ 97F2
 164+ 97F2 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97F5 7D           	ld a,l
 166+ 97F6 E6 1F        	and $1F
 167+ 97F8 57           	ld d,a
 168+ 97F9 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97FC BA           	cp d 											; Límite - Posición.
 170+ 97FD 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97FE 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9801 CB 47        	bit 0,a
 173+ 9803 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9805
 175+ 9805              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9805
 177+ 9805 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9806 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9808
 180+ 9808              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9808              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9808
 183+ 9808 3A C0 8B         ld a,(Coordenada_X)
 184+ 980B 16 0F            ld d,Centro_izquierda
 185+ 980D A7               and a
 186+ 980E 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 980F 28 1E            jr z,3F
 188+ 9811 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9813              ;                                                    ; _salimos sin modificar nada.
 190+ 9813 18 0E            jr 2F
 191+ 9815 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9816 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9818
 194+ 9818              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9818              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9818
 197+ 9818 3A C0 8B         ld a,(Coordenada_X)
 198+ 981B 16 10            ld d,Centro_derecha
 199+ 981D A7               and a
 200+ 981E 92               sub d
 201+ 981F 28 0E            jr z,3F
 202+ 9821 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9823              ;                                                    ; _salimos sin modificar nada.
 204+ 9823 CB 43        2 bit 0,e
 205+ 9825 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9827 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9828 CD BC 98         call Modificaccionne
 208+ 982B C1           	pop bc
 209+ 982C CD CC 98         call Inicializacion
 210+ 982F C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9830
 212+ 9830              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9830
 214+ 9830 C5           4 push bc
 215+ 9831 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9834 0A           	ld a,(bc)
 217+ 9835 3D           	dec a
 218+ 9836 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9837 7D           	ld a,l
 220+ 9838 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9839 CB 47        	bit 0,a
 222+ 983B 28 03        	jr z,5F
 223+ 983D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 983E 18 2E        	jr 7F
 225+ 9840
 226+ 9840              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9840
 228+ 9840 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9841 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9842 3A CC 8B     	ld a,(Ctrl_0)
 231+ 9845 CB 4F        	bit 1,a
 232+ 9847 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9849 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 984A
 235+ 984A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 984A
 237+ 984A 1C               inc e
 238+ 984B 1D               dec e
 239+ 984C 20 07            jr nz,12F
 240+ 984E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 984F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9850 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9853 18 44        13 jr 9F
 244+ 9855 CB 43        12 bit 0,e
 245+ 9857 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9859              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9859 C1           	pop bc
 248+ 985A 18 D3        	jr 3B
 249+ 985C 80           14 add b
 250+ 985D 6F               ld l,a
 251+ 985E 22 CF 8B     	ld (Posicion_actual),hl
 252+ 9861 CD BC 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9864 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9866 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9868 32 CC 8B         ld (Ctrl_0),a
 256+ 986B F1           	pop af
 257+ 986C 18 2B        	jr 9F
 258+ 986E
 259+ 986E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 986E
 261+ 986E F5           7 push af
 262+ 986F 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9872 CB 47        	bit 0,a
 264+ 9874 20 1D        	jr nz,8F
 265+ 9876 F1           	pop af
 266+ 9877
 267+ 9877              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9877
 269+ 9877 1C           	inc e
 270+ 9878 1D               dec e
 271+ 9879 20 07            jr nz,10F
 272+ 987B 90           	sub b
 273+ 987C 6F               ld l,a
 274+ 987D 22 CF 8B     	ld (Posicion_actual),hl
 275+ 9880 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9882              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9882 CB 43        10 bit 0,e
 278+ 9884 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9886              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9886 C1           	pop bc
 281+ 9887 18 A6        	jr 3B
 282+ 9889 90           16 sub b
 283+ 988A 6F               ld l,a
 284+ 988B 22 CF 8B     	ld (Posicion_actual),hl
 285+ 988E CD BC 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9891 18 06            jr 9F
 287+ 9893 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9895 32 CC 8B         ld (Ctrl_0),a
 289+ 9898 F1           	pop af
 290+ 9899 C1           9 pop bc
 291+ 989A 1E 00        	ld e,0
 292+ 989C CD CC 98         call Inicializacion
 293+ 989F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 98A0 08           	ex af,af
 295+ 98A1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 98A2 18 8B            jr 3B
 297+ 98A4
 298+ 98A4              ; --------------------
 299+ 98A4
 300+ 98A4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A6 CD EF 99     1 call PreviousScan
 302+ 98A9 10 FB            djnz 1B
 303+ 98AB 22 CF 8B     	ld (Posicion_actual),hl
 304+ 98AE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98AF C9           	ret
 306+ 98B0
 307+ 98B0              ; --------------------
 308+ 98B0
 309+ 98B0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98B2 CD E0 99     1 call NextScan
 311+ 98B5 10 FB            djnz 1B
 312+ 98B7 22 CF 8B     	ld (Posicion_actual),hl
 313+ 98BA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98BB C9           	ret
 315+ 98BC
 316+ 98BC              ; --------------------
 317+ 98BC              ;
 318+ 98BC              ;	22/01/23
 319+ 98BC              ;
 320+ 98BC              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98BC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98BC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98BC
 324+ 98BC
 325+ 98BC              Modificaccionne
 326+ 98BC
 327+ 98BC 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 98BF FE 02        	cp 2
 329+ 98C1 CC A4 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98C4 DC A4 98         call c,Modifica_Pos_actual
 331+ 98C7 C8           	ret z
 332+ 98C8 CD B0 98         call Modifica_Pos_actual2
 333+ 98CB C9               ret
 334+ 98CC
 335+ 98CC              ; *************************************************************************************************************************************************************************************************
 336+ 98CC              ;
 337+ 98CC              ;	13/8/22
 338+ 98CC              ;
 339+ 98CC              ;	Inicializacion
 340+ 98CC              ;
 341+ 98CC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98CC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98CC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98CC              ;
 345+ 98CC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98CC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98CC              ;	_ desaparece/aparece.
 348+ 98CC
 349+ 98CC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98CC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98CC              ;
 352+ 98CC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98CC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98CC              ; 		   [E] ="0"
 355+ 98CC
 356+ 98CC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98CC
 358+ 98CC CD C8 94     Inicializacion call calcula_tercio
 359+ 98CF 28 36        	jr z,primit
 360+ 98D1 E6 02        	and 2
 361+ 98D3 20 07        	jr nz,segmit
 362+ 98D5 7D           	ld a,l
 363+ 98D6 FE 7F        	cp $7f
 364+ 98D8 38 2D        	jr c,primit
 365+ 98DA 28 2B        	jr z,primit
 366+ 98DC CD 42 99     segmit call column
 367+ 98DF 38 13        	jr c,tercuad
 368+ 98E1 3E 04        cuarcuad ld a,4
 369+ 98E3 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98E6 21 20 48     	ld hl,$4820
 371+ 98E9 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98EC 21 E2 8B     	ld hl,Limite_vertical
 373+ 98EF 36 0D        	ld (hl),$0d
 374+ 98F1 08           	ex af,af
 375+ 98F2 18 3C        	jr 1F
 376+ 98F4              tercuad
 377+ 98F4 3E 03        	ld a,3
 378+ 98F6 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98F9 21 20 48     	ld hl,$4820
 380+ 98FC 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98FF 21 E2 8B     	ld hl,Limite_vertical
 382+ 9902 36 12        	ld (hl),$12
 383+ 9904 08           	ex af,af
 384+ 9905 18 29        	jr 1F
 385+ 9907 CD 42 99     primit call column
 386+ 990A 38 13        	jr c, primcuad
 387+ 990C              segcuad
 388+ 990C 3E 02        	ld a,2
 389+ 990E 32 DE 8B     	ld (Cuad_objeto),a
 390+ 9911 21 C0 4F     	ld hl,$4fc0
 391+ 9914 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 9917 21 E2 8B     	ld hl,Limite_vertical
 393+ 991A 36 0D        	ld (hl),$0d
 394+ 991C 08           	ex af,af
 395+ 991D 18 11        	jr 1F
 396+ 991F              primcuad
 397+ 991F 3E 01        	ld a,1
 398+ 9921 32 DE 8B     	ld (Cuad_objeto),a
 399+ 9924 21 C0 4F     	ld hl,$4fc0
 400+ 9927 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 992A 21 E2 8B     	ld hl,Limite_vertical
 402+ 992D 36 12        	ld (hl),$12
 403+ 992F 08           	ex af,af
 404+ 9930
 405+ 9930 C5           1 push bc
 406+ 9931 E5           	push hl
 407+ 9932 D5           	push de
 408+ 9933
 409+ 9933 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 9936 CD E6 94     	call Genera_coordenadas
 411+ 9939
 412+ 9939 D1           	pop de
 413+ 993A E1           	pop hl
 414+ 993B C1           	pop bc
 415+ 993C
 416+ 993C 21 CC 8B     	ld hl,Ctrl_0
 417+ 993F CB EE        	set 5,(hl)
 418+ 9941 C9           	ret
 419+ 9942
 420+ 9942              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9942
 422+ 9942              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9942              ;
 424+ 9942              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9942
 426+ 9942 7D           column ld a,l
 427+ 9943 E6 1F        	and $1f
 428+ 9945 FE 10         	cp $10
 429+ 9947 C9            	ret
 430+ 9948
 431+ 9948              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9948              ;
 433+ 9948              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9948              ;
 435+ 9948              ; 14/12/22
 436+ 9948              ;
 437+ 9948              ;	Modifica: A y BC.
 438+ 9948
 439+ 9948 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 994B E6 01        	and 1
 441+ 994D 28 17        	jr z,1F
 442+ 994F
 443+ 994F              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 994F
 445+ 994F 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9952 47           	ld b,a
 447+ 9953 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9954 79           	ld a,c
 449+ 9955 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9956 38 08        	jr c,2F
 451+ 9958 47           	ld b,a
 452+ 9959 79           	ld a,c
 453+ 995A 90           	sub b
 454+ 995B 32 DF 8B     	ld (Columnas),a
 455+ 995E 18 1B        	jr 4F
 456+ 9960 79           2 ld a,c
 457+ 9961 32 DF 8B     	ld (Columnas),a
 458+ 9964 18 15        	jr 4F
 459+ 9966
 460+ 9966              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9966
 462+ 9966 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 9969 81           	add c
 464+ 996A 3D           	dec a
 465+ 996B D6 1F        	sub $1f
 466+ 996D 38 08        	jr c,3F
 467+ 996F 47           	ld b,a
 468+ 9970 79           	ld a,c
 469+ 9971 90           	sub b
 470+ 9972 32 DF 8B     	ld (Columnas),a
 471+ 9975 18 04        	jr 4F
 472+ 9977 79           3 ld a,c
 473+ 9978 32 DF 8B     	ld (Columnas),a
 474+ 997B D9           4 exx
 475+ 997C 4F           	ld c,a
 476+ 997D D9           	exx
 477+ 997E C9            ret
 478+ 997F
 479+ 997F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 997F              ;
 481+ 997F              ;   19/7/23
 482+ 997F              ;
 483+ 997F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 997F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 997F              ;
 486+ 997F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 997F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 997F              ;
 489+ 997F              ;	DESTRUYE: HL,B Y A.
 490+ 997F
 491+ 997F 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9982 FE 02        	cp 2
 493+ 9984 38 18        	jr c,1F
 494+ 9986 28 16        	jr z,1F
 495+ 9988 E6 01        	and 1
 496+ 998A 28 0D        	jr z,3F
 497+ 998C
 498+ 998C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 998C
 500+ 998C CD C8 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 998F
 502+ 998F 7D           9 ld a,l
 503+ 9990 E6 1F        	and $1f
 504+ 9992 28 2A        	jr z,7F
 505+ 9994 2B           	dec hl
 506+ 9995 10 F8        	djnz 9B
 507+ 9997 18 25        	jr 7F
 508+ 9999
 509+ 9999              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9999
 511+ 9999 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 999C 18 20        	jr 7F
 513+ 999E
 514+ 999E 28 14        1 jr z,2F
 515+ 99A0
 516+ 99A0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 99A0
 518+ 99A0 CD C8 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99A3
 520+ 99A3 7D           4 ld a,l
 521+ 99A4 E6 1F        	and $1f
 522+ 99A6 28 03        	jr z,6F
 523+ 99A8 2B           	dec hl
 524+ 99A9 10 F8        	djnz 4B
 525+ 99AB 06 0F        6 ld b,15
 526+ 99AD CD EF 99     5 call PreviousScan
 527+ 99B0 10 FB        	djnz 5B
 528+ 99B2 18 0A        	jr 7F
 529+ 99B4
 530+ 99B4              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99B4
 532+ 99B4 CD C8 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B7 06 0F        	ld b,15
 534+ 99B9 CD EF 99     8 call PreviousScan
 535+ 99BC 10 FB        	djnz 8B
 536+ 99BE
 537+ 99BE E5           7 push hl
 538+ 99BF DD E1        	pop ix
 539+ 99C1
 540+ 99C1 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 99C4 E5           	push hl
 542+ 99C5 FD E1        	pop iy
 543+ 99C7
 544+ 99C7 C9           	ret
 545+ 99C8
 546+ 99C8              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C8              ;
 548+ 99C8              ;	2/1/23
 549+ 99C8              ;
 550+ 99C8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C8              ;
 552+ 99C8              ;	Tras esta rutina tenemos:
 553+ 99C8              ;
 554+ 99C8              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C8              ;
 557+ 99C8              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C8
 559+ 99C8 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99CB 3A DF 8B     	ld a,(Columnas)
 561+ 99CE 3D           	dec a
 562+ 99CF 20 01        	jr nz,1F
 563+ 99D1 3C           	inc a
 564+ 99D2 47           1 ld b,a
 565+ 99D3 C9           	ret
 566+ 99D4
 567+ 99D4              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99D4              ;
 569+ 99D4              ;	Prepara_draw
 570+ 99D4              ;
 571+ 99D4              ;	Es una rutina de carga.
 572+ 99D4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99D4              ;
 574+ 99D4              ;	FUNCIONAMIENTO:
 575+ 99D4              ;
 576+ 99D4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99D4              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99D4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99D4              ;
 580+ 99D4              ;	DESTRUYE:
 581+ 99D4              ;
 582+ 99D4              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99D4
 584+ 99D4 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D9 4E           	ld c,(hl)
 588+ 99DA 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 99DD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99DF C9           	ret
 591+ 99E0
 592+ 99E0              ;----------------------------------------------------------------------------------------------------------------
 593+ 99E0              ;
 594+ 99E0              ;	5/08/22
 595+ 99E0              ;
 596+ 99E0              ;   NextScan.
 597+ 99E0              ;
 598+ 99E0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99E0              ;
 600+ 99E0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99E0              ;
 602+ 99E0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99E0              ;
 604+ 99E0              ;       DESTRUIDOS: AF y HL !!!
 605+ 99E0              ;
 606+ 99E0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99E0              ;
 608+ 99E0
 609+ 99E0 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99E1 7C               ld a,h
 611+ 99E2 E6 07            and 7
 612+ 99E4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99E5
 614+ 99E5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E6 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E8 6F               ld l,a
 617+ 99E9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99EA
 619+ 99EA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99EB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99ED 67               ld h,a
 622+ 99EE C9               ret
 623+ 99EF
 624+ 99EF              ;----------------------------------------------------------------------------------------------------------------
 625+ 99EF              ;
 626+ 99EF              ;	5/08/22
 627+ 99EF              ;
 628+ 99EF              ;   PreviousScan.
 629+ 99EF              ;
 630+ 99EF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99EF              ;
 632+ 99EF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99EF              ;
 634+ 99EF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99EF              ;
 636+ 99EF              ;       DESTRUIDOS: AF y HL !!!
 637+ 99EF              ;
 638+ 99EF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99EF              ;
 640+ 99EF
 641+ 99EF 7C           PreviousScan ld a,h
 642+ 99F0 25               dec h               ; Dec H.
 643+ 99F1 E6 07            and 7
 644+ 99F3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99F4
 646+ 99F4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99F5 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F7 6F               ld l,a
 649+ 99F8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F9
 651+ 99F9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99FA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99FC 67               ld h,a
 654+ 99FD C9               ret
 655+ 99FE
 656+ 99FE
 657+ 99FE
 658+ 99FE
 659+ 99FE
 660+ 99FE
 661+ 99FE
 662+ 99FE
 663+ 99FE
 664+ 99FE
 665+ 99FE
 666+ 99FE
# file closed: Draw_XOR.asm
2053  99FE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99FE
   2+ 99FE              ; ******************************************************************************************************************************************************************************************
   3+ 99FE              ;
   4+ 99FE              ;   20/05/23
   5+ 99FE              ;
   6+ 99FE              ;	Recompone_posicion_inicio
   7+ 99FE              ;
   8+ 99FE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99FE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99FE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99FE              ;	_ a una u otra rutina.
  12+ 99FE
  13+ 99FE              Recompone_posicion_inicio
  14+ 99FE
  15+ 99FE 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 9A01 7D           	ld a,l
  17+ 9A02 E6 1F        	and $1f
  18+ 9A04 28 16        	jr z,1F
  19+ 9A06
  20+ 9A06 FE 1F        	cp $1f
  21+ 9A08 28 0D        	jr z,3F
  22+ 9A0A
  23+ 9A0A 21 CB 8B     	ld hl,Ctrl_2
  24+ 9A0D CB C6        	set 0,(hl)
  25+ 9A0F 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 9A12 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A15 18 08        	jr 2F
  28+ 9A17
  29+ 9A17 CD C5 9B     3 call Mov_left
  30+ 9A1A 18 03        	jr 2F
  31+ 9A1C
  32+ 9A1C CD A2 9A     1 call Mov_right
  33+ 9A1F 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A22 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 9A25 C9           	ret
  36+ 9A26
  37+ 9A26              ; ******************************************************************************************************************************************************************************************
  38+ 9A26              ;
  39+ 9A26              ;   27/05/23
  40+ 9A26              ;
  41+ 9A26              ;	Mov_down
  42+ 9A26              ;
  43+ 9A26              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A26              ;
  45+ 9A26              ;
  46+ 9A26              Mov_down
  47+ 9A26
  48+ 9A26 CD 90 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A29              ;																	; _ repone (Puntero_objeto).
  50+ 9A29 21 CC 8B     	ld hl,Ctrl_0
  51+ 9A2C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A2E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A2E              ; 																	; _ en el caso de que no lo haya.
  54+ 9A2E 3A E7 8B     	ld a,(Vel_down)
  55+ 9A31 47           	ld b,a
  56+ 9A32 2A CF 8B         ld hl,(Posicion_actual)
  57+ 9A35 CD C8 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A38 E6 02        	and 2
  59+ 9A3A 28 17        	jr z,1F
  60+ 9A3C
  61+ 9A3C              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A3C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A3C
  64+ 9A3C 7C           	ld a,h
  65+ 9A3D FE 57        	cp $57
  66+ 9A3F 20 12        	jr nz,1F
  67+ 9A41
  68+ 9A41 7D           	ld a,l
  69+ 9A42 C6 20        	add $20
  70+ 9A44 30 0D        	jr nc,1F
  71+ 9A46
  72+ 9A46              ; ------------------------------
  73+ 9A46              ;
  74+ 9A46              ;	12/01/24
  75+ 9A46
  76+ 9A46              ;	call Reaparece_arriba
  77+ 9A46 CD 52 9D     	call Reinicio
  78+ 9A49
  79+ 9A49              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A49
  81+ 9A49 3A 34 8C     	ld a,(Ctrl_3)
  82+ 9A4C CB CF        	set 1,a
  83+ 9A4E 32 34 8C     	ld (Ctrl_3),a
  84+ 9A51
  85+ 9A51 18 08        	jr 3F
  86+ 9A53              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A53              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A53              ; ------------------------------
  89+ 9A53
  90+ 9A53 CD E0 99     1 call NextScan
  91+ 9A56 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A59 10 DA            djnz 2B
  93+ 9A5B CD E6 94     3 call Genera_coordenadas
  94+ 9A5E C9           	ret
  95+ 9A5F
  96+ 9A5F              ; ******************************************************************************************************************************************************************************************
  97+ 9A5F              ;
  98+ 9A5F              ;   27/05/23
  99+ 9A5F              ;
 100+ 9A5F              ;	Mov_up
 101+ 9A5F              ;
 102+ 9A5F              ; 	Mueve el Sprite hacia arriba.
 103+ 9A5F              ;
 104+ 9A5F              ;
 105+ 9A5F              Mov_up
 106+ 9A5F
 107+ 9A5F CD 90 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A62              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A62 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A65 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A67              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A67              ; 																		; _ en el caso de que no lo haya.
 113+ 9A67 3A E6 8B     	ld a,(Vel_up)
 114+ 9A6A 47           	ld b,a
 115+ 9A6B 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A6E CD C8 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A71 A7           	and a
 118+ 9A72 20 10        	jr nz,1F
 119+ 9A74
 120+ 9A74              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A74              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A74
 123+ 9A74 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A75 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A77 20 0B            jr nz,1F
 126+ 9A79 7D               ld a,l
 127+ 9A7A D6 20            sub $20
 128+ 9A7C 30 06            jr nc,1F
 129+ 9A7E 25               dec h
 130+ 9A7F
 131+ 9A7F              ; -----------------------------
 132+ 9A7F CD 33 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A82              ;	call Reinicio
 134+ 9A82              ; -----------------------------
 135+ 9A82
 136+ 9A82 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A84 CD EF 99     1 call PreviousScan
 138+ 9A87 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A8A 10 E2            djnz 3B
 140+ 9A8C CD E6 94     2 call Genera_coordenadas
 141+ 9A8F C9           	ret
 142+ 9A90
 143+ 9A90              ; -----------------------------
 144+ 9A90              ;
 145+ 9A90              ;	27/5/23
 146+ 9A90              ;
 147+ 9A90              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A90              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A90              ;
 150+ 9A90              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A90              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A90              ;
 153+ 9A90              ;	Modifica: A y (Puntero_objeto).
 154+ 9A90
 155+ 9A90 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A93 CB 47        	bit 0,a
 157+ 9A95 C8           	ret z
 158+ 9A96 CB 87        	res 0,a
 159+ 9A98 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A9B 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A9E 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9AA1 C9           	ret
 163+ 9AA2
 164+ 9AA2              ; ******************************************************************************************************************************************************************************************
 165+ 9AA2              ;
 166+ 9AA2              ;	19/10/22
 167+ 9AA2              ;
 168+ 9AA2              ;	Mov_right.
 169+ 9AA2              ;
 170+ 9AA2              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9AA2              ;
 172+ 9AA2
 173+ 9AA2 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AA5 CB 77        	bit 6,a
 175+ 9AA7 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA9
 177+ 9AA9 CD E1 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AAC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AAD
 180+ 9AAD 21 CC 8B     	ld hl,Ctrl_0
 181+ 9AB0 CB E6        	set 4,(hl)
 182+ 9AB2 18 52        	jr 8F
 183+ 9AB4
 184+ 9AB4 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9AB7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB9              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB9 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9ABC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9ABE 20 46        	jr nz,8F
 191+ 9AC0
 192+ 9AC0 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AC3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AC4 28 40        	jr z,8F
 195+ 9AC6
 196+ 9AC6              ; ---------- ---------- ----------
 197+ 9AC6              ;
 198+ 9AC6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC6
 200+ 9AC6 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ACB 28 11        	jr z,1F
 203+ 9ACD 38 06        	jr c,6F
 204+ 9ACF FE 04        	cp 4
 205+ 9AD1 28 14        	jr z,7F
 206+ 9AD3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AD5
 208+ 9AD5              ; ---------- ---------- ----------
 209+ 9AD5              ;
 210+ 9AD5              ; Perfiles de velocidad
 211+ 9AD5              ;
 212+ 9AD5
 213+ 9AD5 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD8 FE FE        	cp $fe
 215+ 9ADA 20 2A        	jr nz,8F
 216+ 9ADC 18 10        	jr 3F
 217+ 9ADE 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AE1 FE FD        	cp $fd
 219+ 9AE3 20 21        	jr nz,8F
 220+ 9AE5 18 07        	jr 3F
 221+ 9AE7 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AEA FE FB        	cp $fb
 223+ 9AEC 20 18        	jr nz,8F
 224+ 9AEE
 225+ 9AEE              ; ---------- ---------- ----------
 226+ 9AEE
 227+ 9AEE              3
 228+ 9AEE CD 21 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AF1              ;	call Reinicio
 230+ 9AF1
 231+ 9AF1              ; ---------- ---------- ----------
 232+ 9AF1              ;
 233+ 9AF1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AF1
 235+ 9AF1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AF3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AF4 CD 0D 9B     	call DESPLZ_DER
 238+ 9AF7 C1           	pop bc
 239+ 9AF8 10 F9        	djnz 5B
 240+ 9AFA 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AFD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AFE 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9B01 CD E6 94     	call Genera_coordenadas
 244+ 9B04 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B06
 246+ 9B06              ; ---------- ---------- ----------
 247+ 9B06
 248+ 9B06 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9B09 CD 0D 9B     	call DESPLZ_DER
 250+ 9B0C C9           2 ret
 251+ 9B0D
 252+ 9B0D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B0D              ;
 254+ 9B0D              ;	22/9/22
 255+ 9B0D              ;
 256+ 9B0D
 257+ 9B0D CD 1C 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B10 CD 68 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B13 CD 91 9B         call Ciclo_completo
 260+ 9B16 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B19 CB FE        	set 7,(hl)
 262+ 9B1B C9           	ret
 263+ 9B1C
 264+ 9B1C              ; ******************************************************************************************************************************************************************************************
 265+ 9B1C              ;	15/02/23
 266+ 9B1C              ;
 267+ 9B1C
 268+ 9B1C 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B1F 47           	ld b,a
 270+ 9B20 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B23 23           1 inc hl
 272+ 9B24 23           	inc hl
 273+ 9B25 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B27 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B2A CD C7 90     	call Extrae_address
 276+ 9B2D 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9B30
 278+ 9B30              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B30
 280+ 9B30              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B30              ; Cuántos movimientos hemos hecho ??
 282+ 9B30              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B30
 284+ 9B30 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B33 EB           	ex de,hl
 286+ 9B34 A7           	and a
 287+ 9B35 ED 52        	sbc hl,de
 288+ 9B37 CB 3D        	srl l
 289+ 9B39 3E 08        6 ld a,8
 290+ 9B3B 95           	sub l
 291+ 9B3C 30 1E        	jr nc,3F
 292+ 9B3E
 293+ 9B3E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B3E              ; B="0".
 295+ 9B3E
 296+ 9B3E 04           4 inc b
 297+ 9B3F 3C           	inc a
 298+ 9B40 20 FC        	jr nz,4B
 299+ 9B42 78           	ld a,b
 300+ 9B43 08           	ex af,af
 301+ 9B44 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B47 23           5 inc hl
 303+ 9B48 23           	inc hl
 304+ 9B49 10 FC        	djnz 5B
 305+ 9B4B 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B4E CD C7 90     	call Extrae_address
 307+ 9B51 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B54
 309+ 9B54              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B54              ; _(Posicion_actual).
 311+ 9B54
 312+ 9B54 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B57 34           	inc (hl)
 314+ 9B58 08               ex af,af
 315+ 9B59 6F           	ld l,a
 316+ 9B5A 18 DD        	jr 6B
 317+ 9B5C
 318+ 9B5C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B5C
 320+ 9B5C 47           3 ld b,a
 321+ 9B5D 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B60 23           2 inc hl
 323+ 9B61 23           	inc hl
 324+ 9B62 10 FC        	djnz 2B
 325+ 9B64 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B67 C9           8 ret
 327+ 9B68
 328+ 9B68              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B68              ;
 330+ 9B68              ;	24/7/22
 331+ 9B68              ;
 332+ 9B68              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B68              ;
 334+ 9B68              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B68              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B68              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B68
 338+ 9B68 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B6B A7           	and a
 340+ 9B6C 20 1F        	jr nz,1F
 341+ 9B6E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B70 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B73
 344+ 9B73 21 CE 8B     	ld hl,Columns
 345+ 9B76 34           	inc (hl)
 346+ 9B77 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B7A E6 01        	and 1
 348+ 9B7C 28 0F        	jr z,1F
 349+ 9B7E 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B81 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B82 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B85 CD E6 94     	call Genera_coordenadas
 353+ 9B88 CD ED 9C     	call Inc_CTRL_DESPLZ
 354+ 9B8B 18 03        	jr 2F
 355+ 9B8D CD ED 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B90 C9           2 ret
 357+ 9B91
 358+ 9B91              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B91              ;
 360+ 9B91              ;	24/7/22
 361+ 9B91              ;
 362+ 9B91              ;	Ciclo_completo.
 363+ 9B91              ;
 364+ 9B91              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B91              ;
 366+ 9B91              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B91              ; 	Decrementamos (Columns).
 368+ 9B91              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B91              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B91
 371+ 9B91
 372+ 9B91 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B94 FE FF        	cp $ff
 374+ 9B96 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B98 E6 F0        	and $f0
 376+ 9B9A 20 28        	jr nz,3F
 377+ 9B9C
 378+ 9B9C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B9C
 380+ 9B9C 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B9F 47           	ld b,a
 382+ 9BA0 3E F8        	ld a,$f8
 383+ 9BA2 80           	add b
 384+ 9BA3 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9BA6 18 1C        	jr 3F
 386+ 9BA8 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BAB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BAC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BAD 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9BB0 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BB3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BB5 20 0A        	jr nz,2F
 393+ 9BB7 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BBA 23           	inc hl
 395+ 9BBB 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9BBE CD E6 94     	call Genera_coordenadas
 397+ 9BC1
 398+ 9BC1              ; Inicia el puntero de Sprite.
 399+ 9BC1
 400+ 9BC1 CD DC 90     2 call Inicia_puntero_objeto_der
 401+ 9BC4 C9           3 ret
 402+ 9BC5
 403+ 9BC5              ; ******************************************************************************************************************************************************************************************
 404+ 9BC5              ;
 405+ 9BC5              ;	15/02/23
 406+ 9BC5              ;
 407+ 9BC5              ;	Mov_left.
 408+ 9BC5              ;
 409+ 9BC5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BC5              ;
 411+ 9BC5              Mov_left
 412+ 9BC5
 413+ 9BC5 21 CC 8B     	ld hl,Ctrl_0
 414+ 9BC8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BCA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BCA              ; 																	; _ en el caso de que no lo haya.
 417+ 9BCA 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9BCD CB 77        	bit 6,a
 419+ 9BCF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BD1
 421+ 9BD1 CD E7 9C     	call Stop_Amadeus_left
 422+ 9BD4 C8           	ret z
 423+ 9BD5 20 4A        	jr nz,8F
 424+ 9BD7
 425+ 9BD7 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9BDA A7           	and a
 427+ 9BDB 20 44        	jr nz,8F
 428+ 9BDD
 429+ 9BDD 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BE0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BE1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BE3
 433+ 9BE3              ; ---------- ---------- ----------
 434+ 9BE3
 435+ 9BE3 3A E4 8B     	ld a,(Vel_left)
 436+ 9BE6 FE 02        	cp 2
 437+ 9BE8 28 0F        	jr z,1F
 438+ 9BEA 38 04        	jr c,6F
 439+ 9BEC FE 04        	cp 4
 440+ 9BEE 28 12        	jr z,7F
 441+ 9BF0
 442+ 9BF0              ; ---------- ---------- ----------
 443+ 9BF0
 444+ 9BF0 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BF3 FE F8        	cp $f8
 446+ 9BF5 20 2A        	jr nz,8F
 447+ 9BF7 18 10        	jr 4F
 448+ 9BF9 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BFC FE F9        	cp $f9
 450+ 9BFE 20 21        	jr nz,8F
 451+ 9C00 18 07        	jr 4F
 452+ 9C02 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C05 FE FB        	cp $fb
 454+ 9C07 20 18        	jr nz,8F
 455+ 9C09
 456+ 9C09              ; ---------- ---------- ----------
 457+ 9C09
 458+ 9C09              4
 459+ 9C09 CD 0F 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C0C              ;	call Reinicio
 461+ 9C0C
 462+ 9C0C              ; ---------- ---------- ----------
 463+ 9C0C
 464+ 9C0C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C0E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C0F
 467+ 9C0F              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C0F              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C0F
 470+ 9C0F CD 28 9C     	call DESPLZ_IZQ
 471+ 9C12 C1           	pop bc
 472+ 9C13 10 F9        	djnz 5B
 473+ 9C15 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C18 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C19 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9C1C CD E6 94     	call Genera_coordenadas
 477+ 9C1F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C21
 479+ 9C21              ; ---------- ---------- ----------
 480+ 9C21
 481+ 9C21              ; Movemos, no hay recolocación.
 482+ 9C21
 483+ 9C21 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9C24 CD 28 9C     	call DESPLZ_IZQ
 485+ 9C27 C9           2 ret
 486+ 9C28
 487+ 9C28              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C28              ;
 489+ 9C28              ;	22/9/22
 490+ 9C28
 491+ 9C28              DESPLZ_IZQ
 492+ 9C28
 493+ 9C28 CD 37 9C     	call Desplaza_izquierda
 494+ 9C2B CD 83 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C2E CD AB 9C     	call Ciclo_completo_2
 496+ 9C31 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C34 CB BE        	res 7,(hl)
 498+ 9C36 C9           	ret
 499+ 9C37
 500+ 9C37              Desplaza_izquierda
 501+ 9C37
 502+ 9C37 3A E4 8B     	ld a,(Vel_left)
 503+ 9C3A 47           	ld b,a
 504+ 9C3B 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C3E 23           1 inc hl
 506+ 9C3F 23           	inc hl
 507+ 9C40 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C42 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C45 CD C7 90     	call Extrae_address
 510+ 9C48 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C4B
 512+ 9C4B              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C4B
 514+ 9C4B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C4B              ; Cuántos movimientos hemos hecho ??
 516+ 9C4B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C4B
 518+ 9C4B 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C4E EB           	ex de,hl
 520+ 9C4F A7           	and a
 521+ 9C50 ED 52        	sbc hl,de
 522+ 9C52 CB 3D        	srl l
 523+ 9C54 3E 08        6 ld a,8
 524+ 9C56 95           	sub l
 525+ 9C57 30 1E        	jr nc,3F
 526+ 9C59
 527+ 9C59              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C59              ; B="0".
 529+ 9C59
 530+ 9C59 04           4 inc b
 531+ 9C5A 3C           	inc a
 532+ 9C5B 20 FC        	jr nz,4B
 533+ 9C5D 78           	ld a,b
 534+ 9C5E 08           	ex af,af
 535+ 9C5F 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C62 23           5 inc hl
 537+ 9C63 23           	inc hl
 538+ 9C64 10 FC        	djnz 5B
 539+ 9C66 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C69 CD C7 90     	call Extrae_address
 541+ 9C6C 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C6F
 543+ 9C6F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C6F              ; _(Posicion_actual).
 545+ 9C6F
 546+ 9C6F 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C72 35           	dec (hl)
 548+ 9C73 08           	ex af,af
 549+ 9C74 6F           	ld l,a
 550+ 9C75 18 DD        	jr 6B
 551+ 9C77
 552+ 9C77              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C77
 554+ 9C77 47           3 ld b,a
 555+ 9C78 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C7B 23           2 inc hl
 557+ 9C7C 23           	inc hl
 558+ 9C7D 10 FC        	djnz 2B
 559+ 9C7F 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C82 C9           8 ret
 561+ 9C83
 562+ 9C83              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C83              ;
 564+ 9C83              ;	modifica_parametros_1er_DESPLZ
 565+ 9C83              ;
 566+ 9C83              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C83              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C83              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C83
 570+ 9C83 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C86 A7           	and a
 572+ 9C87 20 1E        	jr nz,1F
 573+ 9C89 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C8A 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C8D 21 CE 8B     	ld hl,Columns
 576+ 9C90 34           	inc (hl)
 577+ 9C91 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C94 E6 01        	and 1
 579+ 9C96 20 0F        	jr nz,1F
 580+ 9C98 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C9B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C9C 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C9F CD E6 94     	call Genera_coordenadas
 584+ 9CA2 CD FE 9C     	call Dec_CTRL_DESPLZ
 585+ 9CA5 18 03        	jr 2F
 586+ 9CA7 CD FE 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CAA C9           2 ret
 588+ 9CAB
 589+ 9CAB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CAB
 591+ 9CAB 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CAE FE F7        	cp $f7
 593+ 9CB0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CB2 30 2C        	jr nc,3F
 595+ 9CB4
 596+ 9CB4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CB4
 598+ 9CB4 06 00        	ld b,0
 599+ 9CB6 04           4 inc b
 600+ 9CB7 3C           	inc a
 601+ 9CB8 FE F7        	cp $f7
 602+ 9CBA 20 FA        	jr nz,4B
 603+ 9CBC 3E FF        	ld a,$ff
 604+ 9CBE 90           	sub b
 605+ 9CBF 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9CC2 18 1C        	jr 3F
 607+ 9CC4
 608+ 9CC4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CC4
 610+ 9CC4 21 CE 8B     1 ld hl,Columns
 611+ 9CC7 35           	dec (hl)
 612+ 9CC8 AF           	xor a
 613+ 9CC9 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9CCC 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9CCF E6 01        	and 1
 616+ 9CD1 28 0A        	jr z,2F
 617+ 9CD3 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD6 2B           	dec hl
 619+ 9CD7 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9CDA CD E6 94     	call Genera_coordenadas
 621+ 9CDD
 622+ 9CDD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CDD
 624+ 9CDD CD EF 90     2 call Inicia_puntero_objeto_izq
 625+ 9CE0 C9           3 ret
 626+ 9CE1
 627+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CE1              ;
 629+ 9CE1              ;	19/10/22
 630+ 9CE1              ;
 631+ 9CE1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CE1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CE1
 634+ 9CE1 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CE4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE6 C9           	ret
 637+ 9CE7
 638+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE7              ;
 640+ 9CE7              ;	19/10/22
 641+ 9CE7              ;
 642+ 9CE7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE7
 645+ 9CE7 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CEA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CEC C9           	ret
 648+ 9CED
 649+ 9CED              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CED              ;
 651+ 9CED              ;	24/7/22
 652+ 9CED              ;
 653+ 9CED              ;	Inc_CTRL_DESPLZ
 654+ 9CED              ;
 655+ 9CED              ;
 656+ 9CED              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CED
 658+ 9CED 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CF0 3A E5 8B     	ld a,(Vel_right)
 660+ 9CF3 A7           	and a
 661+ 9CF4 28 06        	jr z,1F
 662+ 9CF6 47           	ld b,a
 663+ 9CF7 34           3 inc (hl)
 664+ 9CF8 10 FD        	djnz 3B
 665+ 9CFA 18 01        	jr 2F
 666+ 9CFC 34           1 inc (hl)
 667+ 9CFD C9           2 ret
 668+ 9CFE
 669+ 9CFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CFE              ;
 671+ 9CFE              ;	5/2/23
 672+ 9CFE              ;
 673+ 9CFE              ;	Dec_CTRL_DESPLZ
 674+ 9CFE              ;
 675+ 9CFE              ;
 676+ 9CFE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CFE
 678+ 9CFE 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D01 3A E4 8B     	ld a,(Vel_left)
 680+ 9D04 A7           	and a
 681+ 9D05 28 06        	jr z,1F
 682+ 9D07 47           	ld b,a
 683+ 9D08 35           3 dec (hl)
 684+ 9D09 10 FD        	djnz 3B
 685+ 9D0B 18 01        	jr 2F
 686+ 9D0D 35           1 dec (hl)
 687+ 9D0E C9           2 ret
 688+ 9D0F
 689+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D0F
 691+ 9D0F 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D12 01 1F 00     	ld bc,31
 693+ 9D15 A7           	and a
 694+ 9D16 ED 4A        	adc hl,bc
 695+ 9D18 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9D1B 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D1E CB C6        	set 0,(hl)
 698+ 9D20 C9           	ret
 699+ 9D21
 700+ 9D21              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D21
 702+ 9D21 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D24 01 1F 00     	ld bc,31
 704+ 9D27 A7           	and a
 705+ 9D28 ED 42        	sbc hl,bc
 706+ 9D2A 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D2D 21 CC 8B     	ld hl,Ctrl_0
 708+ 9D30 CB CE        	set 1,(hl)
 709+ 9D32 C9           	ret
 710+ 9D33
 711+ 9D33              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D33
 713+ 9D33 24           Reaparece_abajo inc h
 714+ 9D34 01 E0 17     	ld bc,$17e0
 715+ 9D37 A7           	and a
 716+ 9D38 ED 4A        	adc hl,bc
 717+ 9D3A 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9D3D 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D40 CB D6        	set 2,(hl)
 720+ 9D42 C9           	ret
 721+ 9D43
 722+ 9D43              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D43
 724+ 9D43 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D46 A7           	and a
 726+ 9D47 ED 42        	sbc hl,bc
 727+ 9D49 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D4C 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D4F CB DE        	set 3,(hl)
 730+ 9D51 C9           	ret
 731+ 9D52
 732+ 9D52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D52              ;
 734+ 9D52              ;	15/07/23
 735+ 9D52
 736+ 9D52              Reinicio
 737+ 9D52
 738+ 9D52              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D52
 740+ 9D52 AF           	xor a
 741+ 9D53 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D56 CD 74 9D     	call Limpia_contenido_hl
 743+ 9D59
 744+ 9D59 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D5C CD 74 9D     	call Limpia_contenido_hl
 746+ 9D5F
 747+ 9D5F CD C8 92     	call Inicializa_Puntero_indice_mov
 748+ 9D62 CD 73 9E     	call Inicia_Puntero_mov
 749+ 9D65
 750+ 9D65 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D68 06 05        	ld b,5
 752+ 9D6A 77           1 ld (hl),a
 753+ 9D6B 23           	inc hl
 754+ 9D6C 10 FC        	djnz 1B
 755+ 9D6E
 756+ 9D6E 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D71 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D73
 759+ 9D73 C9           	ret
 760+ 9D74
 761+ 9D74 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D75 23           	inc hl
 763+ 9D76 77           	ld (hl),a
 764+ 9D77 C9           	ret
 765+ 9D78
 766+ 9D78              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D78              ;
 768+ 9D78              ;	18/6/24
 769+ 9D78              ;
 770+ 9D78
 771+ 9D78              Amadeus_a_izquierda
 772+ 9D78
 773+ 9D78              ;	Actualiza contador de movimientos.
 774+ 9D78
 775+ 9D78 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D7B 35           	dec (hl)
 777+ 9D7C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D7E
 779+ 9D7E 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D81 2B           	dec hl
 781+ 9D82 2B           	dec hl
 782+ 9D83 2B           	dec hl
 783+ 9D84 2B           	dec hl
 784+ 9D85 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D88
 786+ 9D88 21 34 8C     	ld hl,Ctrl_3
 787+ 9D8B CB EE        	set 5,(hl)
 788+ 9D8D
 789+ 9D8D C9           	ret
 790+ 9D8E
 791+ 9D8E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D8F C9           	ret
 793+ 9D90
 794+ 9D90
 795+ 9D90              Amadeus_a_derecha
 796+ 9D90
 797+ 9D90              ;	Actualiza contador de movimientos.
 798+ 9D90
 799+ 9D90 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D93 34           	inc (hl)
 801+ 9D94 3E 7A        	ld a,$7a
 802+ 9D96 BE           	cp (hl)
 803+ 9D97 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D99
 805+ 9D99 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D9C 23           	inc hl
 807+ 9D9D 23           	inc hl
 808+ 9D9E 23           	inc hl
 809+ 9D9F 23           	inc hl
 810+ 9DA0 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DA3
 812+ 9DA3 21 34 8C     	ld hl,Ctrl_3
 813+ 9DA6 CB EE        	set 5,(hl)
 814+ 9DA8 C9           	ret
 815+ 9DA9
 816+ 9DA9 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DAA C9           	ret
# file closed: Direcciones.asm
2054  9DAB              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DAB              ; ----- ----- ----- ----- -----
   2+ 9DAB              ;
   3+ 9DAB              ;   28/12/23
   4+ 9DAB
   5+ 9DAB              Movimiento
   6+ 9DAB
   7+ 9DAB              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DAB
   9+ 9DAB 3A CB 8B         ld a,(Ctrl_2)
  10+ 9DAE CB 57            bit 2,a
  11+ 9DB0 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DB2
  13+ 9DB2 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9DB5 7E               ld a,(hl)
  15+ 9DB6
  16+ 9DB6              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB6
  18+ 9DB6              Inicia_desplazamiento.
  19+ 9DB6
  20+ 9DB6              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB6
  22+ 9DB6 CD A9 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB9
  24+ 9DB9              ; Iniciamos (Repetimos_mov).
  25+ 9DB9
  26+ 9DB9 7E               ld a,(hl)
  27+ 9DBA E6 0F            and $0f
  28+ 9DBC 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9DBF 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DC2
  31+ 9DC2              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DC2
  33+ 9DC2 23               inc hl
  34+ 9DC3 7E               ld a,(hl)
  35+ 9DC4 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9DC7 2B               dec hl
  37+ 9DC8
  38+ 9DC8 21 CB 8B         ld hl,Ctrl_2
  39+ 9DCB CB D6            set 2,(hl)
  40+ 9DCD
  41+ 9DCD              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DCD              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DCD
  44+ 9DCD              Desplazamiento_iniciado
  45+ 9DCD
  46+ 9DCD CD 7D 9E         call Aplica_desplazamiento
  47+ 9DD0
  48+ 9DD0              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DD0
  50+ 9DD0 3A 34 8C         ld a,(Ctrl_3)
  51+ 9DD3 CB 4F            bit 1,a
  52+ 9DD5 C0               ret nz
  53+ 9DD6
  54+ 9DD6 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD9 35               dec (hl)
  56+ 9DDA C0               ret nz
  57+ 9DDB
  58+ 9DDB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DDB              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DDB              ; Analiza (Cola_de_desplazamiento).
  61+ 9DDB
  62+ 9DDB 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DDE A7               and a
  64+ 9DDF CC D2 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DE2 28 30            jr z,Reinicia_el_movimiento
  66+ 9DE4
  67+ 9DE4 FE FF            cp $ff
  68+ 9DE6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE8
  70+ 9DE8 FE FE            cp $fe
  71+ 9DEA CC 57 9E         call z,Fijamos_bucle
  72+ 9DED 28 25            jr z,Reinicia_el_movimiento
  73+ 9DEF
  74+ 9DEF FE FD            cp $fd
  75+ 9DF1 20 11            jr nz,1F
  76+ 9DF3
  77+ 9DF3              ; ---
  78+ 9DF3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DF3
  80+ 9DF3 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DF6 CB 5F            bit 3,a
  82+ 9DF8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DFA
  84+ 9DFA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DFA
  86+ 9DFA 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DFD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DFF
  89+ 9DFF CD 68 9E         call Inicia_Repetimos_movimiento
  90+ 9E02 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E04              ; ---
  92+ 9E04
  93+ 9E04 FE 01        1 cp 1
  94+ 9E06 CA 41 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E09
  96+ 9E09 3D               dec a
  97+ 9E0A 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9E0D
  99+ 9E0D 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E10 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E13              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E13 C9               ret
 103+ 9E14
 104+ 9E14              Reinicia_el_movimiento
 105+ 9E14
 106+ 9E14 3A CB 8B         ld a,(Ctrl_2)
 107+ 9E17 CB 5F            bit 3,a
 108+ 9E19 28 1B            jr z,2F
 109+ 9E1B
 110+ 9E1B              ; (Cola_de_desplazamiento)="254".
 111+ 9E1B
 112+ 9E1B 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E1E 35               dec (hl)
 114+ 9E1F 20 15            jr nz,2F
 115+ 9E21
 116+ 9E21              ; Fin de las repeticiones del último movimiento.
 117+ 9E21
 118+ 9E21 21 CB 8B         ld hl,Ctrl_2
 119+ 9E24 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E26
 121+ 9E26 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9E29 23               inc hl
 123+ 9E2A 23               inc hl
 124+ 9E2B 23               inc hl
 125+ 9E2C 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E2F              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E2F 7E               ld a,(hl)
 128+ 9E30 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9E33
 130+ 9E33 C3 DB 9D         jp Cola
 131+ 9E36
 132+ 9E36 CD 73 9E     2 call Inicia_Puntero_mov
 133+ 9E39
 134+ 9E39 21 CB 8B         ld hl,Ctrl_2
 135+ 9E3C CB 96            res 2,(hl)
 136+ 9E3E
 137+ 9E3E C3 AB 9D         jp Movimiento
 138+ 9E41
 139+ 9E41              Siguiente_desplazamiento
 140+ 9E41
 141+ 9E41              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E41              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E41
 144+ 9E41 21 CB 8B         ld hl,Ctrl_2
 145+ 9E44 CB 96            res 2,(hl)
 146+ 9E46
 147+ 9E46 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E49 23               inc hl
 149+ 9E4A 23               inc hl
 150+ 9E4B 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E4E
 152+ 9E4E 7E               ld a,(hl)
 153+ 9E4F A7               and a
 154+ 9E50 CC D2 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E53 CA 14 9E         jp z,Reinicia_el_movimiento
 156+ 9E56
 157+ 9E56 C9               ret
 158+ 9E57
 159+ 9E57              ; Subrutinas -----------------------------------------
 160+ 9E57              ; ---------- --------- --------- ---------- ----------
 161+ 9E57              ;
 162+ 9E57              ;   24/07/23
 163+ 9E57              ;
 164+ 9E57              ;   Fijamos_bucle
 165+ 9E57              ;
 166+ 9E57              ;
 167+ 9E57
 168+ 9E57              Fijamos_bucle
 169+ 9E57
 170+ 9E57 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E5A 3C               inc a
 172+ 9E5B 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E5E
 174+ 9E5E CD D2 9E         call Incrementa_Puntero_indice_mov
 175+ 9E61 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E64 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E67 C9               ret
 178+ 9E68
 179+ 9E68              ; ---------- --------- --------- ---------- ----------
 180+ 9E68              ;
 181+ 9E68              ;   07/7/23
 182+ 9E68              ;
 183+ 9E68              ;   Inicia_Repetimos_movimiento
 184+ 9E68              ;
 185+ 9E68              ;
 186+ 9E68
 187+ 9E68              Inicia_Repetimos_movimiento
 188+ 9E68
 189+ 9E68              ; Iniciamos (Repetimos_movimiento).
 190+ 9E68
 191+ 9E68 DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E6C DD 7E 02         ld a,(ix+2)
 193+ 9E6F 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E72
 195+ 9E72 C9               ret
 196+ 9E73
 197+ 9E73              ; ---------- --------- --------- ---------- ----------
 198+ 9E73              ;
 199+ 9E73              ;   26/6/23
 200+ 9E73              ;
 201+ 9E73              ;   Inicia_Puntero_mov
 202+ 9E73              ;
 203+ 9E73              ;
 204+ 9E73
 205+ 9E73 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E76 CD C7 90         call Extrae_address
 207+ 9E79 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E7C C9               ret
 209+ 9E7D
 210+ 9E7D              ; ---------- --------- --------- ---------- ----------
 211+ 9E7D              ;
 212+ 9E7D              ;   27/06/23
 213+ 9E7D              ;
 214+ 9E7D              ;   Aplica_movimiento.
 215+ 9E7D
 216+ 9E7D              Aplica_desplazamiento
 217+ 9E7D
 218+ 9E7D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E7D
 220+ 9E7D 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E80
 222+ 9E80 7E               ld a,(hl)
 223+ 9E81 E6 F0            and $f0
 224+ 9E83 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E84
 226+ 9E84 CB 7E            bit 7,(hl)
 227+ 9E86 28 03            jr z,1F
 228+ 9E88 CD 5F 9A         call Mov_up
 229+ 9E8B 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E8E CB 76            bit 6,(hl)
 231+ 9E90 28 03            jr z,2F
 232+ 9E92 CD 26 9A         call Mov_down
 233+ 9E95
 234+ 9E95              ; Se ha aplicado reinicio ???
 235+ 9E95              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E95
 237+ 9E95              ;    ld a,(Ctrl_3)
 238+ 9E95              ;    bit 1,a
 239+ 9E95              ;    ret nz
 240+ 9E95
 241+ 9E95 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E98 CB 6E            bit 5,(hl)
 243+ 9E9A 28 03            jr z,3F
 244+ 9E9C CD C5 9B         call Mov_left
 245+ 9E9F 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9EA2 CB 66            bit 4,(hl)
 247+ 9EA4 C8               ret z
 248+ 9EA5 CD A2 9A         call Mov_right
 249+ 9EA8 C9               ret
 250+ 9EA9
 251+ 9EA9              ; ---------- --------- --------- ---------- ----------
 252+ 9EA9              ;
 253+ 9EA9              ;   26/06/23
 254+ 9EA9              ;
 255+ 9EA9              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA9
 257+ 9EA9              Ajusta_velocidad_desplazamiento
 258+ 9EA9
 259+ 9EA9              ; 1er byte de la cadena de movimiento.
 260+ 9EA9              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA9
 262+ 9EA9 CD C7 9E         call Extrae_nibble_alto
 263+ 9EAC
 264+ 9EAC 32 E6 8B         ld (Vel_up),a
 265+ 9EAF 79               ld a,c
 266+ 9EB0 E6 0F            and $0f
 267+ 9EB2 32 E7 8B         ld (Vel_down),a
 268+ 9EB5
 269+ 9EB5              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EB5              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EB5
 272+ 9EB5 23               inc hl
 273+ 9EB6 CD C7 9E         call Extrae_nibble_alto
 274+ 9EB9
 275+ 9EB9 32 E4 8B         ld (Vel_left),a
 276+ 9EBC 79               ld a,c
 277+ 9EBD E6 0F            and $0f
 278+ 9EBF 32 E5 8B         ld (Vel_right),a
 279+ 9EC2
 280+ 9EC2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EC2
 282+ 9EC2 23               inc hl
 283+ 9EC3 22 F2 8B         ld (Puntero_mov),hl
 284+ 9EC6 C9               ret
 285+ 9EC7
 286+ 9EC7 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC9 7E               ld a,(hl)
 288+ 9ECA 4F               ld c,a
 289+ 9ECB E6 F0            and $f0
 290+ 9ECD CB 3F        1 srl a
 291+ 9ECF 10 FC            djnz 1B
 292+ 9ED1 C9               ret
 293+ 9ED2
 294+ 9ED2              ; ---------- --------- --------- ---------- ----------
 295+ 9ED2              ;
 296+ 9ED2              ;   5/7/23
 297+ 9ED2              ;
 298+ 9ED2              ;   Incrementa_Puntero_indice_mov
 299+ 9ED2
 300+ 9ED2              Incrementa_Puntero_indice_mov
 301+ 9ED2
 302+ 9ED2 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9ED5 34               inc (hl)
 304+ 9ED6
 305+ 9ED6 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED9 01 02 00         ld bc,2
 307+ 9EDC A7               and a
 308+ 9EDD 09               add hl,bc
 309+ 9EDE 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9EE1
 311+ 9EE1 7E               ld a,(hl)
 312+ 9EE2 A7               and a
 313+ 9EE3
 314+ 9EE3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EE3
 316+ 9EE3              ;    jr z,$
 317+ 9EE3
 318+ 9EE3              ;! Reinicia el Patrón de movimiento.
 319+ 9EE3
 320+ 9EE3 CC E8 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE6
 322+ 9EE6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE7
 324+ 9EE7 C9               ret
 325+ 9EE8
 326+ 9EE8              ; ---------- --------- --------- ---------- ----------
 327+ 9EE8              ;
 328+ 9EE8              ;   15/01/24
 329+ 9EE8              ;
 330+ 9EE8              ;   Inicializa_Puntero_indice_mov
 331+ 9EE8
 332+ 9EE8              Inicializa_Puntero_indice_mov_2
 333+ 9EE8
 334+ 9EE8              ; Existe etiqueta de bucle principal???
 335+ 9EE8
 336+ 9EE8 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EEB 24               inc h
 338+ 9EEC 25               dec h
 339+ 9EED 28 05            jr z,2F
 340+ 9EEF
 341+ 9EEF 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9EF2 18 14            jr 3F
 343+ 9EF4
 344+ 9EF4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EF4
 346+ 9EF4 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EF7 47               ld b,a
 348+ 9EF8
 349+ 9EF8 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EFB 2B           1 dec hl
 351+ 9EFC 2B               dec hl
 352+ 9EFD 10 FC            djnz 1B
 353+ 9EFF 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9F02
 355+ 9F02 AF               xor a
 356+ 9F03 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9F06 18 06            jr 4F
 358+ 9F08
 359+ 9F08 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F0B 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9F0E C9           4 ret
 362+ 9F0F
 363+ 9F0F              ; ----------------------------------------------------------------------
 364+ 9F0F              ;
 365+ 9F0F              ;   30/01/24
 366+ 9F0F              ;
 367+ 9F0F              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F0F
 369+ 9F0F 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F12 CD 63 94         call Calcula_salto_en_BC
 371+ 9F15 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F18 A7               and a
 373+ 9F19 ED 4A            adc hl,bc
 374+ 9F1B C9               ret
 375+ 9F1C
 376+ 9F1C              ; ----------------------------------------------------------------------
 377+ 9F1C              ;
 378+ 9F1C              ;   30/01/24
 379+ 9F1C              ;
 380+ 9F1C              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F1C              ;
 382+ 9F1C              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F1C
 384+ 9F1C 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F1D 23               inc hl
 386+ 9F1E 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F1F 69               ld l,c
 388+ 9F20 60               ld h,b
 389+ 9F21 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F24 C9               ret
 391+ 9F25
# file closed: Movimiento.asm
2055  9F25              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F25              ; --------------------------------------------------------------------------------------
   2+ 9F25              ;
   3+ 9F25              ;   25/10/24
   4+ 9F25              ;
   5+ 9F25
   6+ 9F25              Pinta_disparos_Entidades
   7+ 9F25
   8+ 9F25 ED 73 0C 8C      ld (Stack),sp
   9+ 9F29 ED 7B 1E 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F2D
  11+ 9F2D 3E 02            ld a,2
  12+ 9F2F 08               ex af,af
  13+ 9F30
  14+ 9F30 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F32              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F32              ;                                     _ No encontraría "0".
  17+ 9F32 FD E1        4 pop iy
  18+ 9F34 D1               pop de                          ; 1er .db IYL
  19+ 9F35              ;                                   ; 2º  .db IYH
  20+ 9F35              ;                                   ; 3er .db E.
  21+ 9F35              ;   Album vacío ???
  22+ 9F35
  23+ 9F35 FD 7D            ld a,iyl
  24+ 9F37 FD 84            add iyh
  25+ 9F39 83               add e
  26+ 9F3A 28 1F            jr z,1F
  27+ 9F3C
  28+ 9F3C              ;   Imprime album, (contiene datos).
  29+ 9F3C
  30+ 9F3C 3B               dec sp
  31+ 9F3D
  32+ 9F3D E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F3E
  34+ 9F3E              ; Imprime el 1er scanline del disparo.
  35+ 9F3E
  36+ 9F3E FD 7D            ld a,iyl
  37+ 9F40 AE               xor (hl)
  38+ 9F41 77               ld (hl),a
  39+ 9F42
  40+ 9F42 2C               inc l
  41+ 9F43
  42+ 9F43 FD 7C            ld a,iyh
  43+ 9F45 AE               xor (hl)
  44+ 9F46 77               ld (hl),a
  45+ 9F47
  46+ 9F47 2C               inc l
  47+ 9F48
  48+ 9F48 7B               ld a,e
  49+ 9F49 AE               xor (hl)
  50+ 9F4A 77               ld (hl),a
  51+ 9F4B
  52+ 9F4B              ; Imprime el 2º scanline del disparo.
  53+ 9F4B
  54+ 9F4B E1               pop hl
  55+ 9F4C
  56+ 9F4C FD 7D            ld a,iyl
  57+ 9F4E AE               xor (hl)
  58+ 9F4F 77               ld (hl),a
  59+ 9F50
  60+ 9F50 2C               inc l
  61+ 9F51
  62+ 9F51 FD 7C            ld a,iyh
  63+ 9F53 AE               xor (hl)
  64+ 9F54 77               ld (hl),a
  65+ 9F55
  66+ 9F55 2C               inc l
  67+ 9F56
  68+ 9F56 7B               ld a,e
  69+ 9F57 AE               xor (hl)
  70+ 9F58 77               ld (hl),a
  71+ 9F59
  72+ 9F59 10 D7            djnz 4B
  73+ 9F5B
  74+ 9F5B 08           1 ex af,af
  75+ 9F5C 3D               dec a
  76+ 9F5D 20 05            jr nz,2F
  77+ 9F5F
  78+ 9F5F ED 7B 0C 8C      ld sp,(Stack)
  79+ 9F63 C9               ret
  80+ 9F64
  81+ 9F64 ED 7B 1C 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F68 08               ex af,af
  83+ 9F69 18 C5            jr 3B
  84+ 9F6B
  85+ 9F6B              ; --------------------------------------------------------------------------------------
  86+ 9F6B              ;
  87+ 9F6B              ;   15/10/24
  88+ 9F6B              ;
  89+ 9F6B
  90+ 9F6B              Motor_de_disparos_entidades
  91+ 9F6B
  92+ 9F6B 3A 24 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F6E FE 07            cp 7
  94+ 9F70 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F71
  96+ 9F71 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F73 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F76
  99+ 9F76 CD C7 90     1 call Extrae_address
 100+ 9F79 1C               inc e
 101+ 9F7A 1C               inc e
 102+ 9F7B ED 53 37 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F7F
 104+ 9F7F               ; Caja vacía ???
 105+ 9F7F
 106+ 9F7F 2C               inc l
 107+ 9F80
 108+ 9F80 7E               ld a,(hl)
 109+ 9F81 A7               and a
 110+ 9F82 28 16            jr z,3F                                                              ; Caja vacía.
 111+ 9F84
 112+ 9F84              ; --- Trabajamos con caja:
 113+ 9F84
 114+ 9F84              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
 115+ 9F84
 116+ 9F84              ;    call Rota_disparo_si_procede
 117+ 9F84
 118+ 9F84              ; ------------------------------------------------------------
 119+ 9F84
 120+ 9F84 2D               dec l
 121+ 9F85 2D               dec l
 122+ 9F86 2D               dec l
 123+ 9F87
 124+ 9F87 CD C7 90         call Extrae_address
 125+ 9F8A              ;   (Puntero_de_impresion) del disparo en HL.
 126+ 9F8A
 127+ 9F8A              ;! Velocidad del disparo de entidades.
 128+ 9F8A
 129+ 9F8A CD E0 99         call NextScan
 130+ 9F8D
 131+ 9F8D              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 132+ 9F8D
 133+ 9F8D CD 9E 9F         call Fin_de_disparo_de_entidad
 134+ 9F90
 135+ 9F90 EB               ex de,hl
 136+ 9F91
 137+ 9F91 73               ld (hl),e
 138+ 9F92 23               inc hl
 139+ 9F93 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 140+ 9F94
 141+ 9F94 2A 37 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 142+ 9F97 18 02            jr 2F
 143+ 9F99
 144+ 9F99 C9               ret
 145+ 9F9A
 146+ 9F9A EB           3 ex de,hl
 147+ 9F9B 10 D9        2 djnz 1B
 148+ 9F9D
 149+ 9F9D C9               ret
 150+ 9F9E
 151+ 9F9E              ; ------------- ------------- ------------
 152+ 9F9E              ;
 153+ 9F9E              ;   25/9/24
 154+ 9F9E
 155+ 9F9E              Fin_de_disparo_de_entidad
 156+ 9F9E
 157+ 9F9E 7C               ld a,h
 158+ 9F9F FE 54            cp $54
 159+ 9FA1 D8               ret c
 160+ 9FA2
 161+ 9FA2 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 162+ 9FA3
 163+ 9FA3 5D               ld e,l
 164+ 9FA4 54               ld d,h
 165+ 9FA5
 166+ 9FA5 21 E0 57         ld hl,$57e0
 167+ 9FA8 ED 52            sbc hl,de
 168+ 9FAA
 169+ 9FAA 38 39            jr c,Elimina_disparo_entidad
 170+ 9FAC
 171+ 9FAC 6B               ld l,e
 172+ 9FAD 62               ld h,d
 173+ 9FAE
 174+ 9FAE D1               pop de
 175+ 9FAF
 176+ 9FAF C9               ret
 177+ 9FB0
 178+ 9FB0              ; ----------------------------------------------------------
 179+ 9FB0              ;
 180+ 9FB0              ;   08/10/24
 181+ 9FB0
 182+ 9FB0              Rota_disparo_si_procede
 183+ 9FB0
 184+ 9FB0              ;   Nos situamos en el byte alto de (Control).
 185+ 9FB0
 186+ 9FB0 CB 76            bit 6,(hl)
 187+ 9FB2 20 03            jr nz,Decrementa_contador_de_control_de_disparo
 188+ 9FB4 CB 7E            bit 7,(hl)
 189+ 9FB6 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 190+ 9FB7
 191+ 9FB7              Decrementa_contador_de_control_de_disparo
 192+ 9FB7
 193+ 9FB7 35               dec (hl)
 194+ 9FB8 7E               ld a,(hl)
 195+ 9FB9 E6 07            and 7
 196+ 9FBB C0               ret nz
 197+ 9FBC
 198+ 9FBC              Rotamos_disparo_segun_proceda
 199+ 9FBC
 200+ 9FBC              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 201+ 9FBC
 202+ 9FBC 3E 07            ld a,7
 203+ 9FBE 86               add (hl)
 204+ 9FBF 77               ld (hl),a                                                           ; Contador reinicializado.
 205+ 9FC0
 206+ 9FC0 CD D9 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 207+ 9FC3
 208+ 9FC3 CB 76            bit 6,(hl)
 209+ 9FC5 20 05            jr nz,Rota_a_derecha
 210+ 9FC7
 211+ 9FC7
 212+ 9FC7              Rota_a_izq
 213+ 9FC7
 214+ 9FC7 F3               di
 215+ 9FC8 18 FE            jr $
 216+ 9FCA FB               ei
 217+ 9FCB
 218+ 9FCB C9               ret
 219+ 9FCC
 220+ 9FCC              Rota_a_derecha
 221+ 9FCC
 222+ 9FCC FD CB 00 3E      srl (iy+0)
 223+ 9FD0 FD CB 01 3E      srl (iy+1)
 224+ 9FD4 FD CB 02 3E      srl (iy+2)
 225+ 9FD8
 226+ 9FD8              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 227+ 9FD8
 228+ 9FD8 C9               ret
 229+ 9FD9
 230+ 9FD9              ; ------------ ----------- ------------
 231+ 9FD9              ;
 232+ 9FD9              ;   11/10/24
 233+ 9FD9
 234+ 9FD9              Puntero_objeto_en_IY
 235+ 9FD9
 236+ 9FD9 E5               push hl
 237+ 9FDA
 238+ 9FDA 2D               dec l
 239+ 9FDB 2D               dec l
 240+ 9FDC 2D               dec l
 241+ 9FDD 2D               dec l
 242+ 9FDE 2D               dec l
 243+ 9FDF 2D               dec l
 244+ 9FE0
 245+ 9FE0 E5               push hl
 246+ 9FE1 FD E1            pop iy
 247+ 9FE3
 248+ 9FE3 E1               pop hl
 249+ 9FE4
 250+ 9FE4 C9               ret
 251+ 9FE5
 252+ 9FE5              ; ------------ ----------- ------------
 253+ 9FE5              ;
 254+ 9FE5              ;   25/9/24
 255+ 9FE5
 256+ 9FE5              Elimina_disparo_entidad
 257+ 9FE5
 258+ 9FE5 21 36 8C         ld hl,Ctrl_5
 259+ 9FE8 CB D6            set 2,(hl)
 260+ 9FEA
 261+ 9FEA 21 24 8C         ld hl,Numero_de_disparos_de_entidades
 262+ 9FED 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 263+ 9FEE
 264+ 9FEE E1               pop hl
 265+ 9FEF E5               push hl
 266+ 9FF0
 267+ 9FF0 2C               inc l
 268+ 9FF1 2C               inc l
 269+ 9FF2 2C               inc l                                                               ; Sitúa en el 1er .db de la caja.
 270+ 9FF3
 271+ 9FF3 CD FB 9F         call Borra_7_bytes
 272+ 9FF6
 273+ 9FF6 D1               pop de
 274+ 9FF7
 275+ 9FF7 21 00 00         ld hl,0
 276+ 9FFA
 277+ 9FFA C9               ret
 278+ 9FFB
 279+ 9FFB              ; ----- ----- ----- ----- -----
 280+ 9FFB
 281+ 9FFB 16 07        Borra_7_bytes ld d,7                                                    ; Contador
 282+ 9FFD AF               xor a                                                               ; Borrador
 283+ 9FFE 77           1 ld (hl),a
 284+ 9FFF 2D               dec l
 285+ A000 15               dec d
 286+ A001 20 FB            jr nz,1B
 287+ A003 C9               ret
 288+ A004
 289+ A004              ; --------------------------------------------------------------------------------------
 290+ A004              ;
 291+ A004              ;   12/10/24
 292+ A004              ;
 293+ A004
 294+ A004              Genera_datos_de_impresion_disparos_Entidades
 295+ A004
 296+ A004 3E 07            ld a,7
 297+ A006 08               ex af,af                                                  ;? Salimos. No hay disparos de entidades generados.                                                    ex af,af
 298+ A007
 299+ A007              ; ---------------
 300+ A007
 301+ A007              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 302+ A007
 303+ A007 21 23 89          ld hl,Indice_de_disparos_entidades
 304+ A00A
 305+ A00A CD C7 90     1 call Extrae_address
 306+ A00D
 307+ A00D 13               inc de
 308+ A00E 13               inc de
 309+ A00F
 310+ A00F ED 53 37 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 311+ A013
 312+ A013 2C               inc l
 313+ A014
 314+ A014 7E               ld a,(hl)
 315+ A015 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 316+ A016 28 35            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 317+ A018
 318+ A018              ; ----- ----- ----- -----
 319+ A018
 320+ A018 2D               dec l
 321+ A019 2D               dec l
 322+ A01A 2D               dec l
 323+ A01B
 324+ A01B CD C7 90         call Extrae_address
 325+ A01E E5               push hl
 326+ A01F
 327+ A01F 1D               dec e
 328+ A020
 329+ A020 EB               ex de,hl
 330+ A021
 331+ A021 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 332+ A022 2D               dec l
 333+ A023 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 334+ A024 2D               dec l
 335+ A025 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 336+ A026
 337+ A026 E1               pop hl                                                    ;? Puntero de impresión en HL.
 338+ A027
 339+ A027              Genera_scanlines_de_los_disparos_de_entidades.
 340+ A027
 341+ A027 FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 342+ A02B FD 73 00         ld (iy+0),e
 343+ A02E FD 70 01         ld (iy+1),b
 344+ A031 FD 71 02         ld (iy+2),c
 345+ A034
 346+ A034 FD 75 03         ld (iy+3),l
 347+ A037 FD 74 04         ld (iy+4),h
 348+ A03A
 349+ A03A CD E0 99         call NextScan
 350+ A03D
 351+ A03D FD 75 05         ld (iy+5),l
 352+ A040 FD 74 06         ld (iy+6),h
 353+ A043
 354+ A043 FD E5            push iy
 355+ A045 E1               pop hl
 356+ A046
 357+ A046 3E 07            ld a,7
 358+ A048 85               add l
 359+ A049 6F               ld l,a
 360+ A04A
 361+ A04A 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 362+ A04D
 363+ A04D              ; ----- ----- ----- -----
 364+ A04D
 365+ A04D              Situa_en_siguiente_caja
 366+ A04D
 367+ A04D 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 368+ A04E 3D               dec a
 369+ A04F C8               ret z
 370+ A050
 371+ A050 08               ex af,af
 372+ A051 2A 37 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 373+ A054 18 B4            jr 1B
 374+ A056
 375+ A056              ; --------------------------------------------------------------------------------------
 376+ A056              ;
 377+ A056              ;   12/10/24
 378+ A056              ;
 379+ A056
 380+ A056              Genera_disparo_de_entidad_maldosa
 381+ A056
 382+ A056              ;   Estructura de un disparo de entidades.
 383+ A056
 384+ A056              ;   Disparo_1 defw 0								; Puntero objeto.
 385+ A056              ; 	defw 0											; Puntero de impresión.
 386+ A056              ;	defw 0											; Control.
 387+ A056
 388+ A056              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 389+ A056              ;   _de la entidad en el momento de disparar.
 390+ A056
 391+ A056              ;   El byte alto muestra la siguiente información:
 392+ A056              ;
 393+ A056              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 394+ A056              ;                        _antes de desplazarse a derecha/izquierda.
 395+ A056              ;
 396+ A056              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 397+ A056              ;
 398+ A056              ;                        10xx ..... Izquierda.
 399+ A056              ;                        01xx ..... Derecha.
 400+ A056              ;                        00xx ..... Recto.
 401+ A056
 402+ A056              ;*  Exclusiones.
 403+ A056
 404+ A056              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 405+ A056              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 406+ A056
 407+ A056              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 408+ A056
 409+ A056 3A 24 8C         ld a,(Numero_de_disparos_de_entidades)
 410+ A059 A7               and a
 411+ A05A C8               ret z
 412+ A05B
 413+ A05B 3A C1 8B         ld a,(Coordenada_y)
 414+ A05E A7               and a
 415+ A05F C8               ret z
 416+ A060
 417+ A060 3D               dec a
 418+ A061 C8               ret z
 419+ A062
 420+ A062 FE 10            cp 16
 421+ A064 D0               ret nc
 422+ A065
 423+ A065              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 424+ A065              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 425+ A065              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 426+ A065
 427+ A065 21 26 8C         ld hl,Permiso_de_disparo_Entidades
 428+ A068 35               dec (hl)                                            ; No más disparos en este FRAME.
 429+ A069
 430+ A069              ;   Decrementa el numero de disparos de entidades.
 431+ A069
 432+ A069 21 24 8C         ld hl,Numero_de_disparos_de_entidades
 433+ A06C 35               dec (hl)
 434+ A06D
 435+ A06D 21 23 89         ld hl,Indice_de_disparos_entidades
 436+ A070
 437+ A070 CD C7 90     1 call Extrae_address
 438+ A073
 439+ A073 13               inc de
 440+ A074 13               inc de
 441+ A075
 442+ A075 ED 53 37 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 443+ A079
 444+ A079              ;   Comprobamos si la caja está vacía.
 445+ A079
 446+ A079 2C               inc l
 447+ A07A
 448+ A07A 7E               ld a,(hl)
 449+ A07B A7               and a
 450+ A07C 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 451+ A07E
 452+ A07E              ;   Caja vacía, vamos a generar un disparo.
 453+ A07E              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 454+ A07E
 455+ A07E CD A4 A0         call Genera_byte_inclinacion
 456+ A081
 457+ A081 7E               ld a,(hl)
 458+ A082 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 459+ A083
 460+ A083 2D               dec l
 461+ A084
 462+ A084              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 463+ A084
 464+ A084 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 465+ A087 77               ld (hl),a
 466+ A088
 467+ A088 2D               dec l
 468+ A089
 469+ A089 CD C2 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 470+ A08C
 471+ A08C 70               ld (hl),b
 472+ A08D 2D               dec l
 473+ A08E 71               ld (hl),c
 474+ A08F
 475+ A08F 2D               dec l
 476+ A090
 477+ A090              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 478+ A090
 479+ A090 FD 7E 02         ld a,(iy+02)
 480+ A093 77               ld (hl),a
 481+ A094 2D               dec l
 482+ A095
 483+ A095 FD 7E 01         ld a,(iy+01)
 484+ A098 77               ld (hl),a
 485+ A099 2D               dec l
 486+ A09A
 487+ A09A FD 7E 00         ld a,(iy+00)
 488+ A09D 77               ld (hl),a
 489+ A09E
 490+ A09E C9               ret
 491+ A09F
 492+ A09F              ;   --- --- ---
 493+ A09F
 494+ A09F              Situa_en_siguiente_disparo
 495+ A09F
 496+ A09F 2A 37 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 497+ A0A2 18 CC            jr 1B
 498+ A0A4
 499+ A0A4              ; --------------------------------------------------------------------------------------
 500+ A0A4              ;
 501+ A0A4              ;   09/10/24
 502+ A0A4              ;
 503+ A0A4
 504+ A0A4              Genera_byte_inclinacion
 505+ A0A4
 506+ A0A4 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 507+ A0A6
 508+ A0A6              ; Determina tendencia del disparo.
 509+ A0A6
 510+ A0A6 3A 75 89         ld a,(CX_Amadeus)
 511+ A0A9 47               ld b,a
 512+ A0AA 3A C0 8B         ld a,(Coordenada_X)
 513+ A0AD 90               sub b
 514+ A0AE 38 07            jr c,Disparo_a_derecha
 515+ A0B0
 516+ A0B0 FE 04        Disparo_a_izquierda cp 4
 517+ A0B2
 518+ A0B2 D8               ret c
 519+ A0B3 C8               ret z
 520+ A0B4
 521+ A0B4 CB FE            set 7,(hl)
 522+ A0B6 C9               ret
 523+ A0B7
 524+ A0B7 47           Disparo_a_derecha ld b,a
 525+ A0B8 3E FF            ld a,$ff
 526+ A0BA 90               sub b
 527+ A0BB
 528+ A0BB FE 04            cp 4
 529+ A0BD
 530+ A0BD D8               ret c
 531+ A0BE C8               ret z
 532+ A0BF
 533+ A0BF CB F6            set 6,(hl)
 534+ A0C1 C9               ret
 535+ A0C2
 536+ A0C2              ; --------------------------------------------------------------------------------------
 537+ A0C2              ;
 538+ A0C2              ;   09/10/24
 539+ A0C2              ;
 540+ A0C2
 541+ A0C2              Modifica_puntero_de_impresion
 542+ A0C2
 543+ A0C2              ;   Puntero de impresión del disparo en BC.
 544+ A0C2
 545+ A0C2 E5               push hl
 546+ A0C3
 547+ A0C3 2A 39 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 548+ A0C6 CD E0 99         call NextScan
 549+ A0C9
 550+ A0C9 4D               ld c,l
 551+ A0CA 44               ld b,h
 552+ A0CB
 553+ A0CB E1               pop hl
 554+ A0CC
 555+ A0CC 08               ex af,af
 556+ A0CD CB 77            bit 6,a
 557+ A0CF 28 06            jr z,1F
 558+ A0D1
 559+ A0D1 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 560+ A0D5 0C               inc c
 561+ A0D6 C9               ret
 562+ A0D7
 563+ A0D7 CB 7F        1 bit 7,a
 564+ A0D9 28 F6            jr z,2B
 565+ A0DB
 566+ A0DB FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 567+ A0DF 0D               dec c
 568+ A0E0
 569+ A0E0 C9               ret
 570+ A0E1
 571+ A0E1              ; --------------------------------------------------------------------------------------
 572+ A0E1              ;
 573+ A0E1              ;   31/08/24
 574+ A0E1              ;
 575+ A0E1
 576+ A0E1              Compara_con_coordenadas_de_disparo
 577+ A0E1
 578+ A0E1 3A C1 8B         ld a,(Coordenada_y)
 579+ A0E4 47               ld b,a
 580+ A0E5 3A 3E 8C         ld a,(Coordenadas_disparo_certero)
 581+ A0E8 90               sub b
 582+ A0E9
 583+ A0E9              ; A = "0" ok
 584+ A0E9              ; A = "1" ok
 585+ A0E9
 586+ A0E9 28 08            jr z,Comprueba_coordenada_X
 587+ A0EB 3D               dec a
 588+ A0EC 28 05            jr z,Comprueba_coordenada_X
 589+ A0EE
 590+ A0EE              ; A = "$ff" ok
 591+ A0EE
 592+ A0EE FE FE            cp $fe
 593+ A0F0 28 01            jr z,Comprueba_coordenada_X
 594+ A0F2
 595+ A0F2 C9               ret
 596+ A0F3
 597+ A0F3              Comprueba_coordenada_X
 598+ A0F3
 599+ A0F3 3A C0 8B         ld a,(Coordenada_X)
 600+ A0F6 47               ld b,a
 601+ A0F7 21 3F 8C         ld hl,Coordenadas_disparo_certero+1
 602+ A0FA 7E               ld a,(hl)
 603+ A0FB 90               sub b
 604+ A0FC
 605+ A0FC              ; A = "0" ok
 606+ A0FC              ; A = "1" ok
 607+ A0FC
 608+ A0FC 28 09            jr z,Activa_Impacto_en_entidad
 609+ A0FE 3D               dec a
 610+ A0FF 28 06            jr z,Activa_Impacto_en_entidad
 611+ A101
 612+ A101              ; A = "2" ok
 613+ A101
 614+ A101 3D               dec a
 615+ A102 28 03            jr z,Activa_Impacto_en_entidad
 616+ A104
 617+ A104              ; A = "$ff"
 618+ A104
 619+ A104 FE FD            cp $fd
 620+ A106 C0               ret nz
 621+ A107
 622+ A107              Activa_Impacto_en_entidad
 623+ A107
 624+ A107              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 625+ A107
 626+ A107 3E 02            ld a,2
 627+ A109 32 C3 8B         ld (Impacto),a
 628+ A10C
 629+ A10C              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 630+ A10C
 631+ A10C 11 C0 87         ld de,Indice_Explosion_entidades
 632+ A10F 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 633+ A112
 634+ A112 73               ld (hl),e
 635+ A113 23               inc hl
 636+ A114 72               ld (hl),d
 637+ A115
 638+ A115              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 639+ A115
 640+ A115 21 3B 8C         ld hl,Impacto2
 641+ A118 CB 9E            res 3,(hl)
 642+ A11A
 643+ A11A C9               ret
 644+ A11B
 645+ A11B              ; --------------------------------------------------------------------------------------
 646+ A11B              ;
 647+ A11B              ;   13/10/24
 648+ A11B              ;
 649+ A11B
 650+ A11B              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 651+ A11B
 652+ A11B              Limpia_album_de_pintado_disparos_Amadeus
 653+ A11B
 654+ A11B 2A 18 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 655+ A11E 06 06            ld b,6
 656+ A120 AF               xor a
 657+ A121 77           1 ld (hl),a
 658+ A122 2C               inc l
 659+ A123 10 FC            djnz 1B
 660+ A125
 661+ A125 C9               ret
 662+ A126
 663+ A126              ; --------------------------------------------------------------------------------------
 664+ A126              ;
 665+ A126              ;   29/09/24
 666+ A126              ;
 667+ A126
 668+ A126              Calcula_bytes_pintado_disparos
 669+ A126
 670+ A126 2A 1C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 671+ A129 45               ld b,l
 672+ A12A 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 673+ A12D 7D               ld a,l
 674+ A12E
 675+ A12E 90               sub b
 676+ A12F 32 22 8C         ld (Num_de_bytes_album_de_disparos),a
 677+ A132
 678+ A132 C9               ret
 679+ A133
 680+ A133              ; --------------------------------------------------------------------------------------
 681+ A133              ;
 682+ A133              ;   29/09/24
 683+ A133              ;
 684+ A133              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 685+ A133              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 686+ A133              ;   _disparos que el álbum del FRAME actual).
 687+ A133
 688+ A133              Limpia_album_de_pintado_disparos_entidades
 689+ A133
 690+ A133              ;    ld a,(Num_de_bytes_album_de_disparos)
 691+ A133              ;    ld b,a
 692+ A133
 693+ A133              ;    ld a,$31
 694+ A133              ;    sub b
 695+ A133              ;    ret z
 696+ A133
 697+ A133              ;    ld b,a
 698+ A133
 699+ A133              ;2 xor a
 700+ A133              ;    ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 701+ A133              ;1 ld (hl),a
 702+ A133              ;    inc hl
 703+ A133              ;    djnz 1B
 704+ A133              ;    ret
 705+ A133
 706+ A133 21 36 8C         ld hl,Ctrl_5
 707+ A136 CB 56            bit 2,(hl)
 708+ A138 F3               di
 709+ A139 20 FE            jr nz,$
 710+ A13B FB               ei
 711+ A13C
 712+ A13C 21 22 8C         ld hl,Num_de_bytes_album_de_disparos
 713+ A13F 46               ld b,(hl)
 714+ A140 23               inc hl
 715+ A141 7E               ld a,(hl)
 716+ A142 90               sub b
 717+ A143 D8               ret c
 718+ A144 C8               ret z
 719+ A145
 720+ A145              ; Clean.
 721+ A145
 722+ A145 47               ld b,a
 723+ A146 AF               xor a
 724+ A147 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 725+ A14A
 726+ A14A 77           1 ld (hl),a
 727+ A14B 23               inc hl
 728+ A14C 10 FC            djnz 1B
 729+ A14E
 730+ A14E C9               ret
 731+ A14F
 732+ A14F              ; --------------------------------------------------------------------------------------
 733+ A14F              ;
 734+ A14F              ;   29/09/24
 735+ A14F              ;
 736+ A14F
 737+ A14F              Motor_Disparos_Amadeus
 738+ A14F
 739+ A14F 21 20 89         ld hl,Disparo_Amad+1
 740+ A152
 741+ A152 34               inc (hl)
 742+ A153 35               dec (hl)
 743+ A154
 744+ A154 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 745+ A155
 746+ A155              ;   Esta caja contiene un disparo.
 747+ A155
 748+ A155 CD 5C A1         call Consulta_Impacto
 749+ A158 CC 75 A1         call z,Mueve_disparo_Amadeus
 750+ A15B
 751+ A15B C9               ret
 752+ A15C
 753+ A15C              ; ----------------------
 754+ A15C              ;
 755+ A15C              ;
 756+ A15C              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 757+ A15C              ;
 758+ A15C              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 759+ A15C
 760+ A15C
 761+ A15C              Consulta_Impacto
 762+ A15C
 763+ A15C              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 764+ A15C              ;   _sea lo más coherente posible.
 765+ A15C
 766+ A15C E5               push hl
 767+ A15D 2B               dec hl
 768+ A15E CD 51 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 769+ A161 E1               pop hl
 770+ A162 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 771+ A163
 772+ A163 C8               ret z
 773+ A164
 774+ A164 3A 3B 8C         ld a,(Impacto2)
 775+ A167 CB DF            set 3,a
 776+ A169 32 3B 8C         ld (Impacto2),a
 777+ A16C
 778+ A16C E5               push hl
 779+ A16D CD 3E A2         call Genera_coordenadas_de_disparo_Amadeus
 780+ A170 E1               pop hl
 781+ A171 CD 8E A1         call Elimina_disparo_Amadeus
 782+ A174
 783+ A174 C9               ret
 784+ A175
 785+ A175              ; ----------------------
 786+ A175              ;
 787+ A175              ;
 788+ A175              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 789+ A175
 790+ A175              Mueve_disparo_Amadeus
 791+ A175
 792+ A175 CD C7 90         call Extrae_address
 793+ A178
 794+ A178 CD EF 99         call PreviousScan
 795+ A17B CD EF 99         call PreviousScan
 796+ A17E CD EF 99         call PreviousScan
 797+ A181 CD EF 99         call PreviousScan
 798+ A184
 799+ A184              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 800+ A184
 801+ A184 7C               ld a,h
 802+ A185 D6 40            sub $40
 803+ A187 EB               ex de,hl
 804+ A188 38 04            jr c,Elimina_disparo_Amadeus
 805+ A18A
 806+ A18A               ; Introduce nuevo puntero_de_impresión en la caja.
 807+ A18A
 808+ A18A 73               ld (hl),e
 809+ A18B 23               inc hl
 810+ A18C 72               ld (hl),d
 811+ A18D
 812+ A18D C9               ret
 813+ A18E
 814+ A18E              ; ----------------------
 815+ A18E              ;
 816+ A18E              ;   29/9/24
 817+ A18E
 818+ A18E              Elimina_disparo_Amadeus
 819+ A18E
 820+ A18E              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 821+ A18E              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 822+ A18E
 823+ A18E              ;   Disparo_1A defw 0									; Puntero objeto.
 824+ A18E              ;   	defw 0											; Puntero de impresión.
 825+ A18E
 826+ A18E 2B               dec hl
 827+ A18F 2B               dec hl
 828+ A190
 829+ A190 AF               xor a
 830+ A191 77               ld (hl),a
 831+ A192 23               inc hl
 832+ A193 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 833+ A194
 834+ A194 23               inc hl
 835+ A195 77               ld (hl),a
 836+ A196 23               inc hl
 837+ A197 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 838+ A198
 839+ A198 3E 01            ld a,1
 840+ A19A 32 25 8C         ld (Permiso_de_disparo_Amadeus),a
 841+ A19D
 842+ A19D CD 1B A1         call Limpia_album_de_pintado_disparos_Amadeus
 843+ A1A0
 844+ A1A0 AF               xor a
 845+ A1A1 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 846+ A1A2
 847+ A1A2 C9               ret
 848+ A1A3
 849+ A1A3              ; --------------------------------------------------------------------------------------
 850+ A1A3              ;
 851+ A1A3              ;   13/10/24
 852+ A1A3              ;
 853+ A1A3
 854+ A1A3              Pinta_disparos_Amadeus
 855+ A1A3
 856+ A1A3 06 02            ld b,2
 857+ A1A5 ED 73 0C 8C      ld (Stack),sp
 858+ A1A9 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 859+ A1AD D1           3 pop de
 860+ A1AE 14               inc d
 861+ A1AF 15               dec d
 862+ A1B0 28 1C            jr z,1F
 863+ A1B2 E1               pop hl
 864+ A1B3
 865+ A1B3              Imprime_scanlines_en_pantalla
 866+ A1B3
 867+ A1B3              ; 1er scanline
 868+ A1B3
 869+ A1B3 1A               ld a,(de)
 870+ A1B4 AE               xor (hl)
 871+ A1B5 77               ld (hl),a
 872+ A1B6
 873+ A1B6 1C               inc e
 874+ A1B7 2C               inc l
 875+ A1B8
 876+ A1B8 1A               ld a,(de)
 877+ A1B9 AE               xor (hl)
 878+ A1BA 77               ld (hl),a
 879+ A1BB
 880+ A1BB 1D               dec e
 881+ A1BC E1               pop hl
 882+ A1BD
 883+ A1BD              ; 2º scanline
 884+ A1BD
 885+ A1BD 1A               ld a,(de)
 886+ A1BE AE               xor (hl)
 887+ A1BF 77               ld (hl),a
 888+ A1C0
 889+ A1C0 1C               inc e
 890+ A1C1 2C               inc l
 891+ A1C2
 892+ A1C2 1A               ld a,(de)
 893+ A1C3 AE               xor (hl)
 894+ A1C4 77               ld (hl),a
 895+ A1C5
 896+ A1C5 1D               dec e
 897+ A1C6
 898+ A1C6 18 06            jr 1F
 899+ A1C8
 900+ A1C8 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 901+ A1CC 18 DF            jr 3B
 902+ A1CE 10 F8        1 djnz 2B
 903+ A1D0 ED 7B 0C 8C      ld sp,(Stack)
 904+ A1D4 C9               ret
 905+ A1D5
 906+ A1D5              ; --------------------------------------------------------------------------------------
 907+ A1D5              ;
 908+ A1D5              ;   13/10/24
 909+ A1D5              ;
 910+ A1D5              ;   Modifica: HL,BC y DE.
 911+ A1D5
 912+ A1D5
 913+ A1D5              Genera_datos_de_impresion_disparos_Amadeus
 914+ A1D5
 915+ A1D5 ED 73 0C 8C      ld (Stack),sp
 916+ A1D9 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 917+ A1DC D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 918+ A1DD
 919+ A1DD 14               inc d                                                     ;? Salimos si no hay disparo.
 920+ A1DE 15               dec d
 921+ A1DF
 922+ A1DF 28 0E            jr z,Salida
 923+ A1E1
 924+ A1E1              Genera_scanlines_de_disparo_Amadeus
 925+ A1E1
 926+ A1E1 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 927+ A1E2              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 928+ A1E2 ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 929+ A1E6
 930+ A1E6 C1               pop bc
 931+ A1E7 C1               pop bc
 932+ A1E8 C1               pop bc
 933+ A1E9
 934+ A1E9 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 935+ A1EA CD EF 99         call PreviousScan
 936+ A1ED E5               push hl                                                   ;? Sube 1er scanline al álbum.
 937+ A1EE D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 938+ A1EF
 939+ A1EF              Salida
 940+ A1EF
 941+ A1EF ED 7B 0C 8C      ld sp,(Stack)
 942+ A1F3
 943+ A1F3 C9               ret
 944+ A1F4
 945+ A1F4              ; --------------------------------------------------------------------------------------
 946+ A1F4              ;
 947+ A1F4              ;   12/09/24
 948+ A1F4              ;
 949+ A1F4
 950+ A1F4              Genera_disparo_Amadeus
 951+ A1F4
 952+ A1F4              ;*  Exclusiones.
 953+ A1F4
 954+ A1F4 3A 25 8C         ld a,(Permiso_de_disparo_Amadeus)
 955+ A1F7 A7               and a
 956+ A1F8 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 957+ A1F9
 958+ A1F9 3D               dec a
 959+ A1FA 32 25 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 960+ A1FD
 961+ A1FD              Define_puntero_objeto_disparo
 962+ A1FD
 963+ A1FD              ;   Inicializamos contador.
 964+ A1FD
 965+ A1FD 06 00            ld b,0
 966+ A1FF
 967+ A1FF 2A 79 89         ld hl,(p.imp.amadeus)
 968+ A202 2C               inc l
 969+ A203
 970+ A203 3E 80            ld a,$80
 971+ A205 BE               cp (hl)
 972+ A206 28 0D            jr z,1F
 973+ A208
 974+ A208 04               inc b
 975+ A209
 976+ A209 3E 60            ld a,$60
 977+ A20B BE               cp (hl)
 978+ A20C 28 07            jr z,1F
 979+ A20E
 980+ A20E
 981+ A20E 04               inc b
 982+ A20F
 983+ A20F 3E 18            ld a,$18
 984+ A211 BE               cp (hl)
 985+ A212 28 01            jr z,1F
 986+ A214
 987+ A214 04               inc b
 988+ A215
 989+ A215              ;   Calcula el Puntero_de_impresión del disparo.
 990+ A215
 991+ A215              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 992+ A215
 993+ A215 CD EF 99     1 call PreviousScan
 994+ A218
 995+ A218 78               ld a,b
 996+ A219 CB 3F            srl a
 997+ A21B 28 03            jr z,4F
 998+ A21D
 999+ A21D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1000+ A21D E5               push hl
1001+ A21E 18 02            jr 5F
1002+ A220 2D           4 dec l
1003+ A221 E5               push hl
1004+ A222              ; ---
1005+ A222
1006+ A222              ;   Calcula el Puntero_objeto del disparo.
1007+ A222
1008+ A222 21 76 83     5 ld hl,Indice_disparo_Amadeus
1009+ A225 04               inc b
1010+ A226 05               dec b
1011+ A227 28 04            jr z,2F
1012+ A229
1013+ A229              ;   Nos desplazamos por el índice de disparos.
1014+ A229
1015+ A229 2C           3 inc l
1016+ A22A 2C               inc l
1017+ A22B 10 FC            djnz 3B
1018+ A22D
1019+ A22D              ; --- Guarda el Puntero_objeto del disparo en la pila.
1020+ A22D CD C7 90     2 call Extrae_address
1021+ A230 E5               push hl
1022+ A231              ; ---
1023+ A231
1024+ A231              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1025+ A231              ; HL en el 1er .db de la caja.
1026+ A231
1027+ A231 21 1F 89         ld hl,Disparo_Amad
1028+ A234
1029+ A234 06 02            ld b,2
1030+ A236
1031+ A236 D1           6 pop de
1032+ A237 73               ld (hl),e
1033+ A238 23               inc hl
1034+ A239 72               ld (hl),d
1035+ A23A 23               inc hl
1036+ A23B
1037+ A23B 10 F9            djnz 6B
1038+ A23D
1039+ A23D C9               ret
1040+ A23E
1041+ A23E              Genera_coordenadas_de_disparo_Amadeus
1042+ A23E
1043+ A23E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1044+ A23E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1045+ A23E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1046+ A23E
1047+ A23E CD C7 90         call Extrae_address
1048+ A241 CD E6 94         call Genera_coordenadas
1049+ A244
1050+ A244 3D               dec a
1051+ A245
1052+ A245 21 3E 8C         ld hl,Coordenadas_disparo_certero
1053+ A248 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1054+ A249 23               inc hl
1055+ A24A 3A C0 8B         ld a,(Coordenada_X)
1056+ A24D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1057+ A24E
1058+ A24E AF               xor a
1059+ A24F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1060+ A250
1061+ A250 C9               ret
1062+ A251
1063+ A251              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1064+ A251              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1065+ A251              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1066+ A251
1067+ A251              ; ----------------------------------------------
1068+ A251              ;
1069+ A251              ;   27/08/24
1070+ A251              ;
1071+ A251              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1072+ A251              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1073+ A251
1074+ A251              Detecta_impacto_en_disparo_de_Amadeus
1075+ A251
1076+ A251              Extraccion_de_datos
1077+ A251
1078+ A251 13               inc de
1079+ A252 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1080+ A253
1081+ A253 5E               ld e,(hl)
1082+ A254 23               inc hl
1083+ A255 56               ld d,(hl)
1084+ A256
1085+ A256 23               inc hl
1086+ A257
1087+ A257 4E               ld c,(hl)
1088+ A258 23               inc hl
1089+ A259 46               ld b,(hl)
1090+ A25A
1091+ A25A C5               push bc
1092+ A25B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1093+ A25C
1094+ A25C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1095+ A25C
1096+ A25C CD EF 99         call PreviousScan
1097+ A25F CD EF 99         call PreviousScan
1098+ A262
1099+ A262              Detecta_impacto_
1100+ A262
1101+ A262 1A               ld a,(de)
1102+ A263 A6               and (hl)
1103+ A264 C0               ret nz
1104+ A265
1105+ A265 13               inc de
1106+ A266 23               inc hl
1107+ A267
1108+ A267 1A               ld a,(de)
1109+ A268 A6               and (hl)
1110+ A269 C9               ret
1111+ A26A
1112+ A26A              ; -------------------------------------------------------------------------------------------------------------
1113+ A26A              ;
1114+ A26A              ;   8/8/24
1115+ A26A              ;
1116+ A26A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1117+ A26A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1118+ A26A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1119+ A26A              ;
1120+ A26A              ;   MODIFICA: HL,DE,BC y A.
1121+ A26A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1122+ A26A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1123+ A26A
1124+ A26A              Colision_Entidad_Amadeus
1125+ A26A
1126+ A26A              ; Posible contacto de entidad con Amadeus. ?????
1127+ A26A
1128+ A26A              ; Exclusiones:
1129+ A26A
1130+ A26A 3A 5E 8C         ld a,(Shield)
1131+ A26D A7               and a
1132+ A26E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1133+ A26F
1134+ A26F 21 34 8C         ld hl,Ctrl_3
1135+ A272 CB 76            bit 6,(hl)
1136+ A274 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1137+ A275
1138+ A275 21 3B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1139+ A278 CB 56            bit 2,(hl)
1140+ A27A C0               ret nz
1141+ A27B
1142+ A27B 3A C1 8B     	ld a,(Coordenada_y)
1143+ A27E FE 14        	cp $14
1144+ A280 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1145+ A281
1146+ A281 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1147+ A284 A7               and a
1148+ A285 C0               ret nz
1149+ A286
1150+ A286              Genera_coordenadas_X
1151+ A286
1152+ A286              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1153+ A286              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1154+ A286
1155+ A286              ;   Limpiamos almacenes.
1156+ A286
1157+ A286              ;    call Limpia_Coordenadas_X
1158+ A286
1159+ A286              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1160+ A286
1161+ A286 21 40 8C         ld hl,Coordenadas_X_Entidad
1162+ A289 3A C0 8B         ld a,(Coordenada_X)
1163+ A28C CD AE A2         call Guarda_coordenadas_X
1164+ A28F
1165+ A28F              ;   Almacenamos las coordenadas X de Amadeus.
1166+ A28F
1167+ A28F 3A 75 89         ld a,(CX_Amadeus)
1168+ A292 CD AE A2         call Guarda_coordenadas_X
1169+ A295 CD C2 A2         call Compara_coordenadas_X
1170+ A298 C0               ret nz
1171+ A299
1172+ A299 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1173+ A29B 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1174+ A29E
1175+ A29E 2A FF 8B         ld hl,(Puntero_store_caja)
1176+ A2A1 2C               inc l
1177+ A2A2 2C               inc l
1178+ A2A3 2C               inc l
1179+ A2A4 2C               inc l
1180+ A2A5 22 3C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1181+ A2A8
1182+ A2A8 21 3B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1183+ A2AB CB D6            set 2,(hl)
1184+ A2AD
1185+ A2AD C9               ret
1186+ A2AE
1187+ A2AE               ; ----- ----- ----- ----- -----
1188+ A2AE
1189+ A2AE 77           Guarda_coordenadas_X ld (hl),a
1190+ A2AF 3C               inc a
1191+ A2B0 2C               inc l
1192+ A2B1 77               ld (hl),a
1193+ A2B2 3C               inc a
1194+ A2B3 2C               inc l
1195+ A2B4 77               ld (hl),a
1196+ A2B5 2C               inc l
1197+ A2B6 C9               ret
1198+ A2B7
1199+ A2B7 AF           Limpia_Coordenadas_X xor a
1200+ A2B8 06 06            ld b,6
1201+ A2BA 21 43 8C         ld hl,Coordenadas_X_Amadeus
1202+ A2BD 77           1 ld (hl),a
1203+ A2BE 23               inc hl
1204+ A2BF 10 FC            djnz 1B
1205+ A2C1 C9               ret
1206+ A2C2
1207+ A2C2              ; ----- ----- ----- ----- -----
1208+ A2C2
1209+ A2C2              Compara_coordenadas_X
1210+ A2C2
1211+ A2C2 DD 21 40 8C      ld ix,Coordenadas_X_Entidad
1212+ A2C6 DD 7E 00         ld a,(ix+0)
1213+ A2C9 CD D7 A2         call Comparando
1214+ A2CC C8               ret z
1215+ A2CD
1216+ A2CD 3C               inc a
1217+ A2CE CD E6 A2         call Comparando_1
1218+ A2D1 C8               ret z
1219+ A2D2
1220+ A2D2 3C               inc a
1221+ A2D3 CD E6 A2         call Comparando_1
1222+ A2D6 C9               ret
1223+ A2D7
1224+ A2D7              ; ----- ----- ----- ----- -----
1225+ A2D7              ;
1226+ A2D7              ;   4/12/23
1227+ A2D7              ;
1228+ A2D7              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1229+ A2D7
1230+ A2D7              Comparando
1231+ A2D7
1232+ A2D7 DD 2C            inc ixl
1233+ A2D9 DD 2C            inc ixl
1234+ A2DB DD 2C            inc ixl
1235+ A2DD
1236+ A2DD DD 46 00         ld b,(ix+0)
1237+ A2E0 DD 4E 01         ld c,(ix+1)
1238+ A2E3 DD 56 02         ld d,(ix+2)
1239+ A2E6
1240+ A2E6 B8           Comparando_1 cp b
1241+ A2E7 C8               ret z
1242+ A2E8 B9               cp c
1243+ A2E9 C8               ret z
1244+ A2EA BA               cp d
1245+ A2EB C9               ret
1246+ A2EC
1247+ A2EC              ; -----------------------------------------------------------------------
1248+ A2EC              ;
1249+ A2EC              ;   04/7/24
1250+ A2EC              ;
1251+ A2EC
1252+ A2EC              Detecta_colision_nave_entidad
1253+ A2EC
1254+ A2EC              ; Exclusiones:
1255+ A2EC
1256+ A2EC              ; Salimos de la rutina si no hay advertencia de posible colisión.
1257+ A2EC
1258+ A2EC 21 3B 8C     	ld hl,Impacto2
1259+ A2EF CB 56        	bit 2,(hl)
1260+ A2F1 C8           	ret z
1261+ A2F2
1262+ A2F2              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1263+ A2F2
1264+ A2F2 2A 7B 89         ld hl,(Pamm_Amadeus)
1265+ A2F5 CD C7 90         call Extrae_address
1266+ A2F8 54               ld d,h
1267+ A2F9 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1268+ A2FA
1269+ A2FA 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1270+ A2FD 06 10            ld b,16                                        ; Contador de scanlines en B.
1271+ A2FF FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1272+ A302
1273+ A302 C5           1 push bc
1274+ A303 06 03            ld b,3
1275+ A305 E5               push hl
1276+ A306
1277+ A306              ; .db
1278+ A306
1279+ A306 1A           3 ld a,(de)
1280+ A307 A7               and a
1281+ A308 20 03            jr nz,4F
1282+ A30A
1283+ A30A 2C               inc l
1284+ A30B 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1285+ A30D
1286+ A30D ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1287+ A30F 28 04            jr z,2F
1288+ A311
1289+ A311              ; Impacto.
1290+ A311 FD 2D            dec iyl
1291+ A313 28 22            jr z,5F
1292+ A315
1293+ A315 1C           2 inc e
1294+ A316 10 EE            djnz 3B
1295+ A318
1296+ A318 E1               pop hl
1297+ A319
1298+ A319              ; Hay salto de línea en el puntero de impresión ???
1299+ A319
1300+ A319 7C               ld a,h
1301+ A31A D6 57            sub $57
1302+ A31C 20 0A            jr nz,6F
1303+ A31E
1304+ A31E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1305+ A31E
1306+ A31E 2A 79 89         ld hl,(p.imp.amadeus)
1307+ A321 3E 20            ld a,$20
1308+ A323 A7               and a
1309+ A324 85               add l
1310+ A325 6F               ld l,a
1311+ A326 18 01            jr 7F
1312+ A328
1313+ A328 24           6 inc h
1314+ A329
1315+ A329 C1           7 pop bc
1316+ A32A 10 D6            djnz 1B
1317+ A32C
1318+ A32C              ;   Fin de la comparativa.
1319+ A32C
1320+ A32C              ;   NO HAY COLISIÓN !!!!!.
1321+ A32C              ;
1322+ A32C              ;   .db (Impacto) de Amadeus a "0".
1323+ A32C              ;   RES el bit2 de (Impacto2).
1324+ A32C              ;
1325+ A32C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1326+ A32C              ;   Lo colocamos a "0".
1327+ A32C
1328+ A32C 21 3B 8C         ld hl,Impacto2
1329+ A32F CB 96            res 2,(hl)
1330+ A331 2A 3C 8C         ld hl,(Entidad_sospechosa_de_colision)
1331+ A334 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1332+ A336 C9               ret
1333+ A337
1334+ A337              ;   COLISIÓN !!!!!.
1335+ A337              ;
1336+ A337              ;   .db (Impacto) de Amadeus a "1".
1337+ A337              ;   SET el bit3 de (Impacto2).
1338+ A337              ;
1339+ A337              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1340+ A337
1341+ A337 E1           5 pop hl
1342+ A338 C1               pop bc
1343+ A339
1344+ A339 21 78 89         ld hl,Impacto_Amadeus
1345+ A33C 36 01            ld (hl),1
1346+ A33E 21 3B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1347+ A341 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1348+ A343
1349+ A343 11 C0 87         ld de,Indice_Explosion_entidades
1350+ A346 2A 3C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1351+ A349
1352+ A349 23               inc hl
1353+ A34A 23               inc hl
1354+ A34B 23               inc hl
1355+ A34C
1356+ A34C 73               ld (hl),e
1357+ A34D 23               inc hl
1358+ A34E 72               ld (hl),d
1359+ A34F
1360+ A34F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1361+ A34F
1362+ A34F 11 60 88         ld de,Indice_Explosion_Amadeus
1363+ A352 21 7B 89         ld hl,Pamm_Amadeus
1364+ A355
1365+ A355 73               ld (hl),e
1366+ A356 23               inc hl
1367+ A357 72               ld (hl),d
1368+ A358
1369+ A358 C9               ret
1370+ A359
1371+ A359
1372+ A359
# file closed: Disparo.asm
2056  A359
2057  A359              	SAVESNA "Pruebas.sna", START
2058  A359
2059  A359
2060  A359
2061  A359
# file closed: Banco_de_pruebas.asm
