# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 D2 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A E5 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24              Borrando
  44  AA24
  45  AA24 2A DF 89     	ld hl,(Scanlines_album_SP)
  46  AA27 CD 6C 8C     	call Extrae_address
  47  AA2A
  48  AA2A 24           	inc h
  49  AA2B 25           	dec h
  50  AA2C 28 05        	jr z,Pintando
  51  AA2E
  52  AA2E CD 19 91     	call Pinta_Sprites
  53  AA31
  54  AA31 18 F1        	jr Borrando
  55  AA33
  56  AA33
  57  AA33              Pintando
  58  AA33
  59  AA33 2A E1 89     	ld hl,(India_SP)
  60  AA36 2C           	inc l
  61  AA37 CD 6C 8C     	call Extrae_address
  62  AA3A
  63  AA3A 24           	inc h
  64  AA3B 25           	dec h
  65  AA3C 28 0E        	jr z,1F
  66  AA3E
  67  AA3E 1C           	inc e
  68  AA3F 1C           	inc e
  69  AA40
  70  AA40 ED 53 E1 89  	ld (India_SP),de
  71  AA44
  72  AA44 CD 6C 8C     	call Extrae_address
  73  AA47
  74  AA47
  75  AA47 CD 19 91     	call Pinta_Sprites
  76  AA4A
  77  AA4A 18 E7        	jr Pintando
  78  AA4C
  79  AA4C              ; Posible colisión Entidad-Amadeus ???
  80  AA4C
  81  AA4C              ;	ld a,(Impacto2)
  82  AA4C              ;	bit 2,a
  83  AA4C              ;	jr z,1F
  84  AA4C
  85  AA4C              ;	call Detecta_colision_nave_entidad
  86  AA4C
  87  AA4C              ;1 ld a,4
  88  AA4C              ;	out ($fe),a
  89  AA4C              ;	call Gestiona_Amadeus
  90  AA4C
  91  AA4C              ;	ld a,7
  92  AA4C              ;	out ($fe),a											; Borde blanco.
  93  AA4C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  94  AA4C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  95  AA4C
  96  AA4C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  97  AA4C
  98  AA4C              ;	call Recupera_parametros_DRAW
  99  AA4C
 100  AA4C CD F7 8C     1 call Actualiza_relojes
 101  AA4F
 102  AA4F 21 E5 89     	ld hl,Ctrl_3
 103  AA52 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 104  AA54 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 105  AA56
 106  AA56 FD E1        	pop iy
 107  AA58 DD E1        	pop ix
 108  AA5A F1           	pop af
 109  AA5B C1           	pop bc
 110  AA5C D1           	pop de
 111  AA5D E1           	pop hl
 112  AA5E D9           	exx
 113  AA5F C1           	pop bc
 114  AA60 D1           	pop de
 115  AA61 E1           	pop hl
 116  AA62 08           	ex af,af'
 117  AA63 F1           	pop af
 118  AA64 08           	ex af,af'
 119  AA65 D9           	exx
 120  AA66
 121  AA66 ED 7B D2 89  	ld sp,(Stack_3)
 122  AA6A
 123  AA6A FB           	ei
 124  AA6B
 125  AA6B 3E 01        	ld a,1												; Borde azul.
 126  AA6D D3 FE        	out ($fe),a
 127  AA6F
 128  AA6F C9           	ret
 129  AA70
 130  AA70              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 131  AA70
 132  AA70              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA70              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA70              ;
   3+ AA70              ;	17/02/23
   4+ AA70              ;
   5+ AA70              ;	Sprites e índices.
   6+ AA70
   7+ AA70              	org $8120
   8+ 8120
   9+ 8120              ; Disparo.
  10+ 8120
  11+ 8120 28 81        Indice_disparo defw Disparo_0
  12+ 8122 2E 81        	defw Disparo_f9
  13+ 8124 34 81        	defw Disparo_fb
  14+ 8126 3A 81        	defw Disparo_fd
  15+ 8128
  16+ 8128              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8128 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 812C 01 80
  18+ 812E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 812E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8132 00 60
  20+ 8134              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8134 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8138 18 00
  22+ 813A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 813A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 813E 06 00
  24+ 8140
  25+ 8140              ; ----------------------------------------------------------------------------------------
  26+ 8140
  27+ 8140              ; Badsat_izq. 2x2.
  28+ 8140
  29+ 8140 50 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8142 C0 82        	defw Badsat_izq_fe
  31+ 8144 90 82        	defw Badsat_izq_fd
  32+ 8146 60 82        	defw Badsat_izq_fc
  33+ 8148 30 82        	defw Badsat_izq_fb
  34+ 814A 00 82        	defw Badsat_izq_fa
  35+ 814C B0 81        	defw Badsat_izq_f9
  36+ 814E 80 81        	defw Badsat_izq_f8
  37+ 8150
  38+ 8150 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8153 02 14 00     	DEFB 	$02,$14,$00
  40+ 8156 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8159 02 55 00     	DEFB 	$02,$55,$00
  42+ 815C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 815F 02 54 00     	DEFB 	$02,$54,$00
  44+ 8162 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 8165 03 60 00     	DEFB 	$03,$60,$00
  46+ 8168 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 816B 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 816E 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 8171 54 40 00     	DEFB 	$54,$40,$00
  50+ 8174 AA 60 00     	DEFB	$AA,$60,$00
  51+ 8177 54 00 00     	DEFB 	$54,$00,$00
  52+ 817A 28 00 00     	DEFB 	$28,$00,$00
  53+ 817D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8180
  55+ 8180 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 8184 0A 00 01 15
  56+ 8188 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 818C 01 55 00 01
  57+ 8190 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 8194 00 01 B0 00
  58+ 8198 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 819C FC 00 15 F4
  59+ 81A0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81A4 55 30 00 2A
  60+ 81A8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81AC 00 08 00 00
  61+ 81B0
  62+ 81B0 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81B4 85 00 00 8A
  63+ 81B8 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81BC 00 AA 80 00
  64+ 81C0 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81C4 00 00 D8 00
  65+ 81C8 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81CC FE 00 0A FA
  66+ 81D0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81D4 2A 98 00 15
  67+ 81D8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81DC 00 04 00 00
  68+ 81E0
  69+ 81E0
  70+ 81E0              ;! 39 bytes libres aquí !!!!!
  71+ 81E0
  72+ 81E0              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 84B4 26 64 24 24
 214+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 84BC 6F F6 67 E6
 215+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 84C4 F7 EF FF FF
 216+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 84CC 8B D1 71 8E
 217+ 84D0
 218+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 84D4 F1 00 09 99
 219+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 84DC 0B 0D 00 1B
 220+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 84E4 80 19 F9 80
 221+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 84EC F3 C0 3D FB
 222+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 84F4 3E F7 C0 3E
 223+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 84FC 40 1C 63 80
 224+ 8500
 225+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 8504 3C 40 02 66
 226+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 850C 02 C3 40 06
 227+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 8514 60 06 7E 60
 228+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 851C 3C F0 0F 7E
 229+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 8524 0F BD F0 0F
 230+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 852C 10 07 18 E0
 231+ 8530
 232+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 8534 8F 10 00 99
 233+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 853C 00 B0 D0 01
 234+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 8544 D8 01 9F 98
 235+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 854C CF 3C 03 DF
 236+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 8554 03 EF 7C 03
 237+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 855C 44 01 C6 38
 238+ 8560
 239+ 8560              ; ----------------------------------------------------------------------------------------
 240+ 8560
 241+ 8560              ;	org $8690
 242+ 8560
 243+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8562 96 85        	defw Explosion_2x3_2
 245+ 8564 C6 85        	defw Explosion_2x3_3
 246+ 8566
 247+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 856A 10 00 04 38
 248+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 8572 02 E6 80 01
 249+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 857A 00 03 DD 80
 250+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 8582 3B 80 01 9D
 251+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 858A 02 FD 80 03
 252+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 8592 00 08 00 00
 253+ 8596
 254+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 859A 38 10 03 BC
 255+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 85A2 04 06 C0 00
 256+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 85AA 00 03 DD 80
 257+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 85B2 3A 70 01 9C
 258+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 85BA 04 F8 80 06
 259+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 85C2 00 00 00 00
 260+ 85C6
 261+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 85CA 00 20 08 00
 262+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 85D2 00 06 00 00
 263+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 85DA 00 00 14 30
 264+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 85E2 38 00 01 08
 265+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 85EA 00 80 00 04
 266+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 85F2 10 08 00 20
 267+ 85F6
 268+ 85F6              ; ------------------------------------------
 269+ 85F6
 270+ 85F6 FC 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 85F8 1C 86        	defw Explosion_2x2_2
 272+ 85FA 3C 86        	defw Explosion_2x2_3
 273+ 85FC
 274+ 85FC 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8600 43 84 37 D8
 275+ 8604 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8608 17 F0 3D D8
 276+ 860C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8610 19 D0 1F 60
 277+ 8614 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8618 40 00 80 00
 278+ 861C
 279+ 861C
 280+ 861C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8620 3B C2 60 0C
 281+ 8624 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8628 07 F0 3D D8
 282+ 862C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8630 19 C6 1F 64
 283+ 8634 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8638 80 00 00 00
 284+ 863C
 285+ 863C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8640 88 04 10 0C
 286+ 8644 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8648 81 E0 01 43
 287+ 864C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8650 10 80 18 00
 288+ 8654 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8658 60 01 80 02
 289+ 865C
 290+ 865C
 291+ 865C
 292+ 865C
 293+ 865C
# file closed: Sprites_e_indices.asm
 133  865C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 865C              ; ---------------------------------------------------------------------
   2+ 865C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 865C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 865C              ; ---------------------------------------------------------------------
   5+ 865C
   6+ 865C              ; 27/03/24
   7+ 865C              ;
   8+ 865C              ;	En esta tabla iremos almacenando:
   9+ 865C              ;
  10+ 865C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 865C
  12+ 865C 00 00 00...  Numeros_aleatorios ds 7
  13+ 8663
  14+ 8663 00 00 00...  Tabla_de_pintado ds 24
  15+ 867B
  16+ 867B              ;	db 0, defw 0
  17+ 867B              ;	db 0, defw 0
  18+ 867B              ;	db 0, defw 0
  19+ 867B              ;	db 0, defw 0
  20+ 867B              ;	db 0, defw 0
  21+ 867B              ;	db 0, defw 0
  22+ 867B              ;	db 0, defw 0
  23+ 867B
  24+ 867B C0 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  25+ 867D              ;	defw ...
  26+ 867D              ; 	defw ...
  27+ 867D 00 00        	defw 0
  28+ 867F
  29+ 867F              ; Control. %00000001 00000001
  30+ 867F              ;
  31+ 867F              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  32+ 867F              ;                    _ hacen las entidades hacia abajo.
  33+ 867F              ;
  34+ 867F              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  35+ 867F
  36+ 867F 85 86        Indice_de_disparos_Amadeus defw Disparo_1A
  37+ 8681 8D 86        	defw Disparo_2A
  38+ 8683 95 86        	defw Disparo_3A
  39+ 8685
  40+ 8685 00 00        Disparo_1A defw 0									; Control.
  41+ 8687 00 00        	defw 0											; Puntero objeto.
  42+ 8689 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  43+ 868B 00 00        	defw 0											; Rutina de impresión.
  44+ 868D
  45+ 868D 00 00        Disparo_2A defw 0									; Control.
  46+ 868F 00 00        	defw 0											; Puntero objeto.
  47+ 8691 00 00        	defw 0											; Puntero de impresión.
  48+ 8693 00 00        	defw 0											; Rutina de impresión.
  49+ 8695
  50+ 8695 00 00        Disparo_3A defw 0
  51+ 8697
  52+ 8697 AD 86        Indice_de_disparos_entidades defw Disparo_1
  53+ 8699 B5 86        	defw Disparo_2
  54+ 869B BD 86        	defw Disparo_3
  55+ 869D C5 86        	defw Disparo_4
  56+ 869F CD 86        	defw Disparo_5
  57+ 86A1 D5 86        	defw Disparo_6
  58+ 86A3 DD 86        	defw Disparo_7
  59+ 86A5 E5 86        	defw Disparo_8
  60+ 86A7 ED 86        	defw Disparo_9
  61+ 86A9 F5 86        	defw Disparo_10
  62+ 86AB FD 86        	defw Disparo_11
  63+ 86AD
  64+ 86AD 00 00        Disparo_1 defw 0									; Control.
  65+ 86AF 00 00        	defw 0											; Puntero objeto.
  66+ 86B1 00 00        	defw 0											; Puntero de impresión.
  67+ 86B3 00 00        	defw 0											; Rutina de impresión.
  68+ 86B5
  69+ 86B5 00 00        Disparo_2 defw 0									; Control.
  70+ 86B7 00 00        	defw 0											; Puntero objeto.
  71+ 86B9 00 00        	defw 0											; Puntero de impresión.
  72+ 86BB 00 00        	defw 0											; Rutina de impresión.
  73+ 86BD
  74+ 86BD 00 00        Disparo_3 defw 0									; Control.
  75+ 86BF 00 00        	defw 0											; Puntero objeto.
  76+ 86C1 00 00        	defw 0											; Puntero de impresión.
  77+ 86C3 00 00        	defw 0											; Rutina de impresión.
  78+ 86C5
  79+ 86C5 00 00        Disparo_4 defw 0									; Control.
  80+ 86C7 00 00        	defw 0											; Puntero objeto.
  81+ 86C9 00 00        	defw 0											; Puntero de impresión.
  82+ 86CB 00 00        	defw 0											; Rutina de impresión.
  83+ 86CD
  84+ 86CD 00 00        Disparo_5 defw 0									; Control.
  85+ 86CF 00 00        	defw 0											; Puntero objeto.
  86+ 86D1 00 00        	defw 0											; Puntero de impresión.
  87+ 86D3 00 00        	defw 0											; Rutina de impresión.
  88+ 86D5
  89+ 86D5 00 00        Disparo_6 defw 0									; Control.
  90+ 86D7 00 00        	defw 0											; Puntero objeto.
  91+ 86D9 00 00        	defw 0											; Puntero de impresión.
  92+ 86DB 00 00        	defw 0											; Rutina de impresión.
  93+ 86DD
  94+ 86DD 00 00        Disparo_7 defw 0									; Control.
  95+ 86DF 00 00        	defw 0											; Puntero objeto.
  96+ 86E1 00 00        	defw 0											; Puntero de impresión.
  97+ 86E3 00 00        	defw 0											; Rutina de impresión.
  98+ 86E5
  99+ 86E5 00 00        Disparo_8 defw 0									; Control.
 100+ 86E7 00 00        	defw 0											; Puntero objeto.
 101+ 86E9 00 00        	defw 0											; Puntero de impresión.
 102+ 86EB 00 00        	defw 0											; Rutina de impresión.
 103+ 86ED
 104+ 86ED 00 00        Disparo_9 defw 0									; Control.
 105+ 86EF 00 00        	defw 0											; Puntero objeto.
 106+ 86F1 00 00        	defw 0											; Puntero de impresión.
 107+ 86F3 00 00        	defw 0											; Rutina de impresión.
 108+ 86F5
 109+ 86F5 00 00        Disparo_10 defw 0									; Control.
 110+ 86F7 00 00        	defw 0											; Puntero objeto.
 111+ 86F9 00 00        	defw 0											; Puntero de impresión.
 112+ 86FB 00 00        	defw 0											; Rutina de impresión.
 113+ 86FD
 114+ 86FD 00 00        Disparo_11 defw 0
 115+ 86FF
 116+ 86FF              ; -------------------------------------------------------------------------------------
 117+ 86FF              ;
 118+ 86FF              ;	Índice de cajas de entidades.
 119+ 86FF              ;
 120+ 86FF              ;	18/1/24
 121+ 86FF              ;
 122+ 86FF
 123+ 86FF              Indice_de_cajas_de_entidades
 124+ 86FF
 125+ 86FF 47 87        	defw Caja_1
 126+ 8701 54 87        	defw Caja_2
 127+ 8703 61 87        	defw Caja_3
 128+ 8705 6E 87        	defw Caja_4
 129+ 8707 7B 87        	defw Caja_5
 130+ 8709 88 87        	defw Caja_6
 131+ 870B 95 87        	defw Caja_7
 132+ 870D
 133+ 870D 00 00        	defw 0
 134+ 870F 00 00        	defw 0
 135+ 8711
 136+ 8711              ; ---------- ---------- ---------- ---------- ----------
 137+ 8711
 138+ 8711 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 139+ 8714 00 00        	defw 0		 										; (Posicion_actual).
 140+ 8716 00 00        	defw 0	 											; (Puntero_objeto).
 141+ 8718 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 142+ 871A
 143+ 871A 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 144+ 871B 05           	db %00000101										; (Attr).
 145+ 871C 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 146+ 871E A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 147+ 8720 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 148+ 8722 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 149+ 8724 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 150+ 8726 04           	db 4 												; (Cuad_objeto).
 151+ 8727 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 152+ 8728 00 00 00...  	ds 6												; Variables_de_borrado
 153+ 872E
 154+ 872E 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 155+ 8730
 156+ 8730              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 157+ 8730 00 00        	defw 0
 158+ 8732 00 00        	defw 0 												; Contador_de_mov_masticados
 159+ 8734 40           	db $40												; (Ctrl_0).
 160+ 8735 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 160+ 8739 00 00
 161+ 873B 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 162+ 873E 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 163+ 8740 00           	db 0												; (Cola_de_desplazamiento).
 164+ 8741 00           	db 0 												; (Columnas).
 165+ 8742 00 00        	defw 0												; (Limite_horizontal).
 166+ 8744 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 167+ 8747
 168+ 8747              ; ---------- ---------- ---------- ---------- ----------
 169+ 8747              ;
 170+ 8747              ;	22/01/24
 171+ 8747              ;
 172+ 8747              ; 	Cada caja tiene 13 bytes !!!
 173+ 8747
 174+ 8747 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 175+ 874A 00           	db %00000000										; (Attr).
 176+ 874B 00           	db 0												; (Impacto).
 177+ 874C 00 00        	defw 0												; (Puntero_de_impresion).
 178+ 874E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 179+ 8750 00 00        	defw 0 												; (Contador_de_mov_masticados).
 180+ 8752 00           	db 0												; (Ctrl_0).
 181+ 8753 00           	db 0												; (Ctrl_2).
 182+ 8754
 183+ 8754              ; ---------- ---------- ---------- ---------- ----------
 184+ 8754
 185+ 8754 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 186+ 8757 00           	db %00000000										; (Attr).
 187+ 8758 00           	db 0												; (Impacto).
 188+ 8759 00 00        	defw 0												; (Puntero_de_impresion).
 189+ 875B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 190+ 875D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 191+ 875F 00           	db 0												; (Ctrl_0).
 192+ 8760 00           	db 0												; (Ctrl_2).
 193+ 8761
 194+ 8761              ; ---------- ---------- ---------- ---------- ----------
 195+ 8761
 196+ 8761 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 8764 00           	db %00000000										; (Attr).
 198+ 8765 00           	db 0												; (Impacto).
 199+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 876C 00           	db 0												; (Ctrl_0).
 203+ 876D 00           	db 0												; (Ctrl_2).
 204+ 876E
 205+ 876E              ; ---------- ---------- ---------- ---------- ----------
 206+ 876E
 207+ 876E 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 208+ 8771 00           	db %00000000										; (Attr).
 209+ 8772 00           	db 0												; (Impacto).
 210+ 8773 00 00        	defw 0												; (Puntero_de_impresion).
 211+ 8775 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 212+ 8777 00 00        	defw 0 												; (Contador_de_mov_masticados).
 213+ 8779 00           	db 0												; (Ctrl_0).
 214+ 877A 00           	db 0												; (Ctrl_2).
 215+ 877B
 216+ 877B              ; ---------- ---------- ---------- ---------- ----------
 217+ 877B
 218+ 877B 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 219+ 877E 00           	db %00000000										; (Attr).
 220+ 877F 00           	db 0												; (Impacto).
 221+ 8780 00 00        	defw 0												; (Puntero_de_impresion).
 222+ 8782 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 223+ 8784 00 00        	defw 0 												; (Contador_de_mov_masticados).
 224+ 8786 00           	db 0												; (Ctrl_0).
 225+ 8787 00           	db 0												; (Ctrl_2).
 226+ 8788
 227+ 8788              ; ---------- ---------- ---------- ---------- ----------
 228+ 8788
 229+ 8788 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 230+ 878B 00           	db %00000000										; (Attr).
 231+ 878C 00           	db 0												; (Impacto).
 232+ 878D 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 878F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8791 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 8793 00           	db 0												; (Ctrl_0).
 236+ 8794 00           	db 0												; (Ctrl_2).
 237+ 8795
 238+ 8795              ; ---------- ---------- ---------- ---------- ----------
 239+ 8795
 240+ 8795 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 241+ 8798 00           	db %00000000										; (Attr).
 242+ 8799 00           	db 0												; (Impacto).
 243+ 879A 00 00        	defw 0												; (Puntero_de_impresion).
 244+ 879C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 245+ 879E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 246+ 87A0 00           	db 0												; (Ctrl_0).
 247+ 87A1 00           	db 0												; (Ctrl_2).
 248+ 87A2
 249+ 87A2              ; -------------------------------------------------------------------------------------
 250+ 87A2              ;
 251+ 87A2              ;	11/1/24
 252+ 87A2              ;
 253+ 87A2              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 254+ 87A2              ;
 255+ 87A2              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 256+ 87A2              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 257+ 87A2              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 258+ 87A2              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 259+ 87A2
 260+ 87A2              Indice_de_definiciones_de_entidades
 261+ 87A2
 262+ 87A2 A6 87        	defw Entidad_1
 263+ 87A4 B3 87        	defw Entidad_2
 264+ 87A6
 265+ 87A6              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 266+ 87A6
 267+ 87A6              ;	BADSAT, (Satélite malvado).
 268+ 87A6
 269+ 87A6 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 270+ 87A9 04           	db %00000100										; (Attr).
 271+ 87AA F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 272+ 87AC 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 273+ 87AE 03 40        	defw $4003	                                     	; (Posicion_inicio).
 274+ 87B0 01           	db 1												; (Cuad_objeto).
 275+ 87B1 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 276+ 87B3
 277+ 87B3 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 278+ 87B6 02           	db %00000010										; (Attr).
 279+ 87B7 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 280+ 87B9 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 281+ 87BB 40 50        	defw $5040                                      	; (Posicion_inicio).
 282+ 87BD 01           	db 1												; (Cuad_objeto).
 283+ 87BE 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 284+ 87C0
# file closed: Cajas_y_disparos.asm
 134  87C0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87C0
   2+ 87C0
   3+ 87C0              ;   07/07/23
   4+ 87C0              ;
   5+ 87C0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87C0              ;
   7+ 87C0              ;   Codificación:
   8+ 87C0              ;
   9+ 87C0              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87C0              ;
  11+ 87C0              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87C0              ;
  13+ 87C0              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87C0              ;
  15+ 87C0              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87C0              ;
  17+ 87C0              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87C0              ;                               ..... %01000010 Vel_up 4
  19+ 87C0              ;                                               Vel_down 2
  20+ 87C0              ;                               ..... $42
  21+ 87C0              ;
  22+ 87C0              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87C0              ;
  24+ 87C0              ;                               ..... %01000010 Vel_left 4
  25+ 87C0              ;                                               Vel_right 2
  26+ 87C0              ;                               ..... $42
  27+ 87C0              ;
  28+ 87C0              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87C0              ;
  30+ 87C0              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87C0              ;
  32+ 87C0              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87C0              ;
  34+ 87C0              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87C0              ;                                     $53
  36+ 87C0              ;
  37+ 87C0              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87C0              ;
  39+ 87C0              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87C0              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87C0              ;
  42+ 87C0              ;                       Arriba ..... $81
  43+ 87C0              ;                       Arriba - izquierda ..... $a1
  44+ 87C0              ;                       Arriba - derecha ..... $91
  45+ 87C0              ;
  46+ 87C0              ;                       Abajo ..... $41
  47+ 87C0              ;                       Abajo - izquierda ..... $61
  48+ 87C0              ;                       Abajo - derecha ..... $51
  49+ 87C0              ;
  50+ 87C0              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87C0              ;
  52+ 87C0              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87C0              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87C0              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87C0              ;
  56+ 87C0              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87C0              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87C0              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87C0              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87C0              ;
  61+ 87C0              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87C0              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87C0              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87C0              ;
  65+ 87C0              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87C0              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87C0              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87C0              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87C0
  70+ 87C0              ; ----- ----- ----- ----- -----
  71+ 87C0
  72+ 87C0 EC 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87C2 F4 87            defw F_1
  74+ 87C4 FE 87            defw F_2
  75+ 87C6 08 88            defw Codo_abajo_derecha
  76+ 87C8 3C 88            defw Derecha_y_subiendo
  77+ 87CA 46 88            defw Derecha_y_subiendo_1
  78+ 87CC 50 88            defw F_3
  79+ 87CE 5A 88            defw F_4
  80+ 87D0 64 88            defw Derecha_y_bajando
  81+ 87D2 6E 88            defw Derecha_y_bajando_1
  82+ 87D4 78 88            defw Derecha_y_bajando_2
  83+ 87D6 82 88            defw Codo_derecha_abajo
  84+ 87D8 B2 88            defw Codo_abajo_izq.
  85+ 87DA E6 88            defw Izquierda_y_subiendo
  86+ 87DC F0 88            defw Izquierda_y_subiendo_1
  87+ 87DE FA 88            defw F_5
  88+ 87E0 04 89            defw F_6
  89+ 87E2 0E 89            defw Izquierda_y_bajando
  90+ 87E4 18 89            defw Izquierda_y_bajando_1
  91+ 87E6 22 89            defw Izquierda_y_bajando_2
  92+ 87E8 2C 89            defw Codo_izquierda_abajo
  93+ 87EA 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87EC
  95+ 87EC 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87F0 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87F4
  98+ 87F4 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87F8 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87FC 08 00
 100+ 87FE
 101+ 87FE 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8802 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8806 0F FE
 103+ 8808
 104+ 8808 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 880C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8810 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8814 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8818 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 881C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8820 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8824 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8828 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 882C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8830 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8834 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8838 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 883C
 118+ 883C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8840 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8844 06 00
 120+ 8846
 121+ 8846 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 884A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 884E 02 00
 123+ 8850
 124+ 8850 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8854 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8858 04 00
 126+ 885A
 127+ 885A 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 885E 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8862 08 00
 129+ 8864
 130+ 8864 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8868 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 886C 02 00
 132+ 886E
 133+ 886E 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8872 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8876 06 00
 135+ 8878
 136+ 8878 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 887C 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8880 06 00
 138+ 8882
 139+ 8882              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8882
 141+ 8882 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8886 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 888A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 888E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8892 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8896 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 889A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 889E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88A2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88A6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88AA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88AE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88B2
 154+ 88B2 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88B6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88BA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88BE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88C2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88C6 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88CA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88CE 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88D2 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88D6 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88DA 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88DE 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88E2 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88E6
 168+ 88E6 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88EA 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88EE 06 00
 170+ 88F0
 171+ 88F0 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88F4 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88F8 02 00
 173+ 88FA
 174+ 88FA 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88FE 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8902 04 00
 176+ 8904
 177+ 8904 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8908 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 890C 08 00
 179+ 890E
 180+ 890E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8912 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8916 02 00
 182+ 8918
 183+ 8918 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 891C 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8920 06 00
 185+ 8922
 186+ 8922 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8926 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 892A 06 00
 188+ 892C
 189+ 892C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8930 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8934 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8938 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 893C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8940 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8944 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8948 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 894C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8950 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8954 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8958 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 895C
 202+ 895C
 203+ 895C
 204+ 895C
 205+ 895C
 206+ 895C
 207+ 895C
 208+ 895C
 209+ 895C
 210+ 895C
# file closed: Patrones_de_mov.asm
 135  895C              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 895C              ; 19/1/24
   2+ 895C
   3+ 895C              Indice_de_niveles
   4+ 895C
   5+ 895C 64 89        	defw Nivel_1
   6+ 895E 70 89        	defw Nivel_2
   7+ 8960
   8+ 8960              ;	...
   9+ 8960              ;	...
  10+ 8960              ;	+ Niveles ...
  11+ 8960
  12+ 8960 00 00        	defw 0
  13+ 8962 00 00        	defw 0
  14+ 8964
  15+ 8964 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8965 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8969 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 896D 01 01 01
  18+ 8970
  19+ 8970 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8971 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8975 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8979 01 02
  22+ 897B 02 01 01 01  	db 2,1,1,1,1,2
  22+ 897F 01 02
  23+ 8981
# file closed: Niveles.asm
 136  8981
 137  8981              ; ******************************************************************************************************************************************************************************************
 138  8981              ; Constantes.
 139  8981              ; ******************************************************************************************************************************************************************************************
 140  8981              ;
 141  8981              ; 09/03/24
 142  8981
 143  8981              ;
 144  8981              ; Constantes.
 145  8981              ;
 146  8981
 147  8981              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 148  8981
 149  8981              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 150  8981              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 151  8981              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 152  8981              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 153  8981
 154  8981              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb00 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 155  8981
 156  8981              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 157  8981
 158  8981              ;                                                       ; 35 bytes por entidad.
 159  8981              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 160  8981              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 161  8981              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 162  8981              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 163  8981
 164  8981              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 165  8981
 166  8981
 167  8981              ; ******************************************************************************************************************************************************************************************
 168  8981              ; Variables.
 169  8981              ; ******************************************************************************************************************************************************************************************
 170  8981              ;
 171  8981              ; 18/01/24
 172  8981              ;
 173  8981              ; Variables de DRAW. (Motor principal).	42 Bytes.
 174  8981              ;
 175  8981
 176  8981              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 177  8981
 178  8981 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 179  8982              ;															- Patrón de movimiento.
 180  8982              ;															- Aspecto
 181  8982 00           Filas db 0												; Filas. [DRAW]
 182  8983 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 183  8984 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 184  8986 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 185  8988 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 186  8989 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 187  898A
 188  898A              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 189  898A
 190  898A 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 191  898B              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 192  898B              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 193  898B 00           Attr db 0												; Atributos de la entidad:
 194  898C
 195  898C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 196  898C              ;
 197  898C              ;	COLORES: 0 ..... NEGRO
 198  898C              ;    		 1 ..... AZUL
 199  898C              ; 			 2 ..... ROJO
 200  898C              ;			 3 ..... MAGENTA
 201  898C              ; 			 4 ..... VERDE
 202  898C              ; 			 5 ..... CIAN
 203  898C              ;			 6 ..... AMARILLO
 204  898C              ; 			 7 ..... BLANCO
 205  898C
 206  898C 00 00        Indice_Sprite_der defw 0
 207  898E 00 00        Indice_Sprite_izq defw 0
 208  8990 00 00        Puntero_DESPLZ_der defw 0
 209  8992 00 00        Puntero_DESPLZ_izq defw 0
 210  8994
 211  8994 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 212  8996 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 213  8997
 214  8997              ; Variables de objeto. (Características).
 215  8997
 216  8997 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 217  8998              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 218  8998              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 219  8998              ; Variables_de_borrado ds 6
 220  8998
 221  8998 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 222  899A              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 223  899A
 224  899A 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 225  899C
 226  899C              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 227  899C              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 228  899C
 229  899C 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 230  899E              ;														; _palabras que componen el "movimiento_masticado".
 231  899E
 232  899E              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 233  899E
 234  899E 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 235  899F              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 236  899F              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 237  899F              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 238  899F              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 239  899F              ;
 240  899F              ; 														DESCRIPCIÖN:
 241  899F              ;
 242  899F              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 243  899F              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 244  899F              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 245  899F              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 246  899F              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 247  899F              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 248  899F              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 249  899F              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 250  899F              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 251  899F              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 252  899F              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 253  899F              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 254  899F              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 255  899F              ;
 256  899F              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 257  899F              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 258  899F              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 259  899F
 260  899F              ; Variables de funcionamiento. [DRAW].
 261  899F
 262  899F 00           Columnas db 0
 263  89A0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 264  89A2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 265  89A2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 266  89A3
 267  89A3              ; variables de control general.
 268  89A3
 269  89A3 00           Ctrl_2 db 0
 270  89A4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 271  89A4              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 272  89A4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 273  89A4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 274  89A4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 275  89A4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 276  89A4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 277  89A4              ;
 278  89A4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 279  89A4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 280  89A4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 281  89A4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 282  89A4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 283  89A4              ;														BIT 4, ???
 284  89A4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 285  89A4
 286  89A4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 287  89A5
 288  89A5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 289  89A5
 290  89A5              ;					         		---------;      ;---------
 291  89A5
 292  89A5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 293  89A5
 294  89A5              Perfiles_de_velocidad
 295  89A5
 296  89A5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 297  89A6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 298  89A7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 299  89A8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 300  89A9
 301  89A9              ; Contadores de 16 bits.
 302  89A9
 303  89A9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 304  89AB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 305  89AD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 306  89AF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 307  89B1
 308  89B1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 309  89B1
 310  89B1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 311  89B3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 312  89B5 00 00        Puntero_indice_mov_bucle defw 0							;
 313  89B7              ;
 314  89B7              ;
 315  89B7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 316  89B8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 317  89B8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 318  89B8 00           Incrementa_puntero_backup db 0
 319  89B9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 320  89BA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 321  89BA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 322  89BB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 323  89BC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 324  89BD              ;
 325  89BD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 326  89BD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 327  89BD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 328  89BD              ;
 329  89BD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 330  89BD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 331  89BD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 332  89BD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 333  89BD              ;
 334  89BD              ;														;	"$ff" ..... Bucle infinito de repetición.
 335  89BD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 336  89BD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 337  89BD              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 338  89BD
 339  89BD 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 340  89BE
 341  89BE              ;														DESCRIPCIÓN:
 342  89BE              ;
 343  89BE              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 344  89BE              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 345  89BE              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 346  89BE              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 347  89BE              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 348  89BE              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 349  89BE
 350  89BE              ;														BIT 3, Recarga de nueva oleada.
 351  89BE              ;														BIT 4, Recarga de nueva oleada.
 352  89BE              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 353  89BE              ;														BIT 6, **** Frame completo.
 354  89BE              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 355  89BE
 356  89BE 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 357  89C0              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 358  89C0              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 359  89C0              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 360  89C0
 361  89C0              ; Gestión de ENTIDADES y CAJAS.
 362  89C0
 363  89C0 00 00        Puntero_store_caja defw 0
 364  89C2 00 00        Puntero_restore_caja defw 0
 365  89C4 00 00        Indice_restore_caja defw 0
 366  89C6 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 367  89C7 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 368  89C8 00           Entidades_en_curso db 0									; ..... ..... .....
 369  89C9 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 370  89CA              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 371  89CA              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 372  89CA              ;														; _ (Numero_de_malotes)="0".
 373  89CA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 374  89CC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 375  89CE              ;														; _ puntero (Indice_entidades).
 376  89CE
 377  89CE              ;---------------------------------------------------------------------------------------------------------------
 378  89CE              ;
 379  89CE              ;	11/01/24
 380  89CE              ;
 381  89CE              ;	Álbumes.
 382  89CE
 383  89CE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 384  89D0              ;														; _variable para almacenar lo posición del puntero_
 385  89D0              ; 														; _de pila, SP.
 386  89D0 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 387  89D2              ;														; La utiliza la rutina [Extrae_foto_registros].
 388  89D2 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 389  89D4
 390  89D4
 391  89D4              ; Impresión. ----------------------------------------------------------------------------------------------------
 392  89D4
 393  89D4 00 00        Album_de_pintado defw 0
 394  89D6 00 00        Album_de_borrado defw 0
 395  89D8 00 00        Techo_Scanlines_album defw 0
 396  89DA 00 00        Techo_Scanlines_album_2 defw 0
 397  89DC 00           Switch db 0
 398  89DD 00 00        Techo defw 0
 399  89DF 00 00        Scanlines_album_SP defw 0
 400  89E1 63 86        India_SP defw Tabla_de_pintado
 401  89E3 66 86        India_2_SP defw Tabla_de_pintado+3
 402  89E5
 403  89E5 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 404  89E6              ;
 405  89E6              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 406  89E6              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 407  89E6              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 408  89E6              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 409  89E6              ;																Habilita el borrado/pintado de sprites.
 410  89E6              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 411  89E6              ;																_ a la baja.
 412  89E6              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 413  89E6
 414  89E6
 415  89E6
 416  89E6 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  89E7              ;
 418  89E7              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  89E7              ;
 420  89E7              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  89E7              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  89E7              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  89E7              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  89E7              ;
 425  89E7              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  89E7              ;															_ masticados ya generados.
 427  89E7              ;
 428  89E7              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  89E7              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  89E7              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  89E7              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  89E7
 433  89E7
 434  89E7              ; Gestión de Disparos.
 435  89E7
 436  89E7              ;;Numero_de_disparotes db 0
 437  89E7              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  89E7              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 439  89E7              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 440  89E7              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 441  89E7              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 442  89E7              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 443  89E7              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 444  89E7              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 445  89E7              ;														; _produzca colisión.
 446  89E7              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 447  89E7              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 448  89E7              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 449  89E7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 450  89E7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 451  89EA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 452  89EA              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 453  89EA
 454  89EA              ;---------------------------------------------------------------------------------------------------------------
 455  89EA
 456  89EA              ; Relojes y temporizaciones.
 457  89EA
 458  89EA 00           Contador_de_frames db 0
 459  89EB 00           Contador_de_frames_2 db 0
 460  89EC
 461  89EC              ;Clock_explosion db 4
 462  89EC 14           Clock_Entidades_en_curso db 20
 463  89ED 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 464  89EE              ;														; Repite la oleada de entidades.
 465  89EE              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 466  89EE              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 467  89EE              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 468  89EE
 469  89EE              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 470  89EE              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 471  89EE              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 472  89EE
 473  89EE              ;---------------------------------------------------------------------------------------------------------------
 474  89EE
 475  89EE              ; Gestión de NIVELES.
 476  89EE
 477  89EE 00           Nivel db 0												; Nivel actual del juego.
 478  89EF 00 00        Puntero_indice_NIVELES defw 0
 479  89F1 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 480  89F3              ; 														; _ que definen el NIVEL.
 481  89F3              ; Y todo comienza aquí .....
 482  89F3              ;
 483  89F3              ; 	INICIO  *************************************************************************************************************************************************************************
 484  89F3              ;
 485  89F3              ;	5/1/24
 486  89F3
 487  89F3              START
 488  89F3
 489  89F3 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 490  89F6 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 491  89F8 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 492  89FA ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 493  89FC F3           	DI
 494  89FD
 495  89FD              ;	ld a,%00000111
 496  89FD              ;	call Cls
 497  89FD CD E3 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 498  8A00
 499  8A00              ; INICIALIZACIÓN.
 500  8A00
 501  8A00 CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 502  8A03
 503  8A03              ;	Inicializa 1er Nivel.
 504  8A03
 505  8A03 21 5C 89     	ld hl,Indice_de_niveles
 506  8A06 22 EF 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 507  8A09 CD AD AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 508  8A0C              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 509  8A0C              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 510  8A0C              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 511  8A0C
 512  8A0C              ;	Provisional, (para desarrollo).
 513  8A0C              	;-
 514  8A0C              ;	ld hl,Numero_parcial_de_entidades
 515  8A0C              ;	ld b,(hl)
 516  8A0C              ;	inc b
 517  8A0C              ;	dec b
 518  8A0C              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 519  8A0C
 520  8A0C CD 46 8C     	call Inicia_albumes_de_lineas
 521  8A0F
 522  8A0F CD F2 AA     4 call Inicia_Entidades
 523  8A12
 524  8A12 CD 56 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 525  8A15              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 526  8A15              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 527  8A15              ; (Esto se dá cuando se inicia una nueva oleada).
 528  8A15
 529  8A15              ;	ld a,(Ctrl_1)
 530  8A15              ;	bit 3,a
 531  8A15              ;	jr nz,5F											 ; Loop
 532  8A15
 533  8A15              ; 	INICIA AMADEUS !!!!!
 534  8A15
 535  8A15              ;3 call Restore_Amadeus
 536  8A15              ;	call Inicia_Puntero_objeto
 537  8A15              ;	call Draw
 538  8A15
 539  8A15              ;	call Guarda_movimiento_masticado	;! Provisional
 540  8A15
 541  8A15              ;	call Genera_datos_de_impresion
 542  8A15              ;	call Guarda_datos_de_borrado_Amadeus
 543  8A15
 544  8A15              ;	ld de,Amadeus_db
 545  8A15              ;	call Store_Amadeus
 546  8A15
 547  8A15              ; 	INICIA DISPAROS !!!!!
 548  8A15
 549  8A15              ;	call Inicia_Puntero_Disparo_Entidades
 550  8A15              ;	call Inicia_Puntero_Disparo_Amadeus
 551  8A15
 552  8A15              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 553  8A15
 554  8A15              ;5 call Inicia_punteros_de_cajas
 555  8A15              ;	call Restore_entidad
 556  8A15
 557  8A15              ;	ld a,(Ctrl_1)
 558  8A15              ;	bit 3,a
 559  8A15              ;	jr z,6F
 560  8A15
 561  8A15              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 562  8A15
 563  8A15              ;	ld hl,Ctrl_1
 564  8A15              ;	res 3,(hl)
 565  8A15              ;	jr Main
 566  8A15
 567  8A15              ; Damos por concluida la construcción del FRAME.
 568  8A15              ;
 569  8A15
 570  8A15 2A DF 89     6 ld hl,(Scanlines_album_SP)
 571  8A18 22 D8 89     	ld (Techo_Scanlines_album),hl
 572  8A1B
 573  8A1B 2A D6 89     	ld hl,(Album_de_borrado)
 574  8A1E 22 DF 89     	ld (Scanlines_album_SP),hl
 575  8A21
 576  8A21 21 63 86     	ld hl,Tabla_de_pintado
 577  8A24 22 E1 89     	ld (India_SP),hl
 578  8A27
 579  8A27 21 E5 89     	ld hl,Ctrl_3
 580  8A2A CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 581  8A2C CB D6        	set 2,(hl)
 582  8A2E
 583  8A2E FB           	ei
 584  8A2F 76           	halt
 585  8A30
 586  8A30              ; ------------------------------------
 587  8A30
 588  8A30              Main
 589  8A30              ;
 590  8A30              ;	11/12/23
 591  8A30
 592  8A30              ; Aparece nueva entidad ???
 593  8A30
 594  8A30              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 595  8A30              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 596  8A30              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 597  8A30              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 598  8A30              ;														; _un 2º bloque.
 599  8A30
 600  8A30              ;	call Genera_scanlines_masticados_a_borrar
 601  8A30              ;	call Limpia_Almacen_de_scanlines_masticados
 602  8A30
 603  8A30              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 604  8A30              ; 													 	; _(Scanlines_album_SP).
 605  8A30
 606  8A30 3A EC 89     	ld a,(Clock_Entidades_en_curso)
 607  8A33 47           	ld b,a
 608  8A34 3A EA 89     	ld a,(Contador_de_frames)
 609  8A37 B8           	cp b
 610  8A38 20 18        	jr nz,13F
 611  8A3A
 612  8A3A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 613  8A3A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 614  8A3A
 615  8A3A 3A C7 89     21 ld a,(Numero_parcial_de_entidades)
 616  8A3D 47           	ld b,a
 617  8A3E 3A C8 89     	ld a,(Entidades_en_curso)
 618  8A41 B8           	cp b
 619  8A42 28 0E        	jr z,13F
 620  8A44 30 0C        	jr nc,13F
 621  8A46
 622  8A46 3C           	inc a
 623  8A47 32 C8 89     	ld (Entidades_en_curso),a
 624  8A4A
 625  8A4A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 626  8A4A
 627  8A4A 3A EC 89     	ld a,(Clock_Entidades_en_curso)
 628  8A4D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 629  8A4D              ;! _ IMPREDECIBLE !!!!
 630  8A4D C6 64        	add 100
 631  8A4F 32 EC 89     	ld (Clock_Entidades_en_curso),a
 632  8A52
 633  8A52              ; -------------------------------------------------------------------------------------------------------------
 634  8A52
 635  8A52              ; Habilita disparos.
 636  8A52
 637  8A52              13
 638  8A52
 639  8A52              ;	ld hl,Disparo_Amadeus
 640  8A52              ;	ld de,CLOCK_repone_disparo_Amadeus
 641  8A52              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 642  8A52
 643  8A52              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 644  8A52              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 645  8A52              ;	call Habilita_disparos
 646  8A52
 647  8A52              ; COLISIONES.
 648  8A52
 649  8A52              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 650  8A52
 651  8A52              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 652  8A52              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 653  8A52              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 654  8A52
 655  8A52              ;	xor a
 656  8A52              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 657  8A52
 658  8A52              ;	call Inicia_punteros_de_cajas
 659  8A52              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 660  8A52              ; 														; _ en DRAW.
 661  8A52
 662  8A52              ;	ld a,(Filas)
 663  8A52              ;	and a
 664  8A52              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 665  8A52              ;	call Incrementa_punteros_de_cajas
 666  8A52              ;	jr 12B
 667  8A52
 668  8A52              ; ---------------------------------------------------------------------------------------
 669  8A52
 670  8A52 3A C7 89     10 ld a,(Numero_parcial_de_entidades)
 671  8A55 47               ld b,a
 672  8A56 A7           	and a
 673  8A57 20 00        	jr nz,11F
 674  8A59
 675  8A59              ;	ld hl,Ctrl_1;
 676  8A59              ;	bit 4,(hl)
 677  8A59              ;	jp nz,16F
 678  8A59
 679  8A59              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 680  8A59
 681  8A59              ;	ld hl,Ctrl_1
 682  8A59              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 683  8A59
 684  8A59              ;	ld a,(Contador_de_frames)
 685  8A59              ;	inc a
 686  8A59              ;	ld (Activa_recarga_cajas),a
 687  8A59
 688  8A59              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 689  8A59
 690  8A59 3A C8 89     11 ld a,(Entidades_en_curso)
 691  8A5C A7           	and a
 692  8A5D 28 42        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 693  8A5F 47           	ld b,a												; No hay entidades que gestionar.
 694  8A60
 695  8A60              ; ( Código que ejecutamos con cada entidad: ).
 696  8A60
 697  8A60              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 698  8A60              ;
 699  8A60              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 700  8A60
 701  8A60 21 63 86     	ld hl,Tabla_de_pintado
 702  8A63 22 E1 89     	ld (India_SP),hl
 703  8A66
 704  8A66 21 E5 89     	ld hl,Ctrl_3
 705  8A69 CB D6        	set 2,(hl)
 706  8A6B CD B8 8A     	call Change
 707  8A6E
 708  8A6E C5           15 push bc 												; Nº de entidades en curso.
 709  8A6F
 710  8A6F CD A7 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 711  8A72
 712  8A72 CD 02 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 713  8A75
 714  8A75
 715  8A75              ; Existe "Entidad_guía" ???.
 716  8A75              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 717  8A75
 718  8A75              ;	ld a,(Ctrl_3)
 719  8A75              ;	bit 1,a
 720  8A75              ;	jr nz,22F
 721  8A75
 722  8A75              ; Almacén de "Movimientos_masticados" lleno ???
 723  8A75              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 724  8A75              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 725  8A75
 726  8A75              ;;	ld a,(Ctrl_3)
 727  8A75              ;;	bit 3,a
 728  8A75              ;;	jr nz,22F
 729  8A75
 730  8A75              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 731  8A75
 732  8A75              ;	ld hl,Ctrl_2
 733  8A75              ;	set 5,(hl)
 734  8A75              ;	ld hl,Ctrl_3
 735  8A75              ;	set 1,(hl)
 736  8A75
 737  8A75              ; Impacto ???
 738  8A75
 739  8A75              ;22 ld a,(Impacto)
 740  8A75              ;	and a
 741  8A75              ;	jr z,8F
 742  8A75
 743  8A75              ; Hay Impacto en esta entidad.
 744  8A75
 745  8A75              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 746  8A75              ;	dec (hl)
 747  8A75              ;	jp nz,17F
 748  8A75
 749  8A75              ;! Velocidad de la animación de la explosión.
 750  8A75
 751  8A75              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 752  8A75              ;														; _,(velocidad de la explosión).
 753  8A75              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 754  8A75
 755  8A75              ;	call Repone_datos_de_borrado
 756  8A75              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 757  8A75
 758  8A75              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 759  8A75
 760  8A75              ;	ld a,(Ctrl_2)
 761  8A75              ;	bit 1,a
 762  8A75              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 763  8A75
 764  8A75              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 765  8A75
 766  8A75              ;	ld a,(CTRL_DESPLZ)
 767  8A75              ;	and a
 768  8A75              ;	jr nz,18F
 769  8A75
 770  8A75              ;	ld hl,Indice_Explosion_2x2-2
 771  8A75              ;	ld (Puntero_DESPLZ_der),hl
 772  8A75              ;	jr 19F
 773  8A75
 774  8A75              ;18 ld hl,Indice_Explosion_2x3-2
 775  8A75              ;	ld (Puntero_DESPLZ_der),hl
 776  8A75
 777  8A75              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 778  8A75              ;	set 1,(hl)
 779  8A75              ;	jr 7F
 780  8A75
 781  8A75              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 782  8A75              ; _con las coordenadas de la entidad almacenada en DRAW.
 783  8A75
 784  8A75              ;8 ld a,(Ctrl_1)
 785  8A75              ;	bit 2,a
 786  8A75              ;	jr z,7F
 787  8A75
 788  8A75              ;	ld hl,(Coordenadas_disparo_certero)
 789  8A75              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 790  8A75              ;														; E contiene la coordenada_X del disparo.
 791  8A75              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 792  8A75              ;														; H FILA, (Coordenada_y de la entidad).
 793  8A75              ;	and a
 794  8A75              ;	sbc hl,de
 795  8A75
 796  8A75              ;	call Determina_resultado_comparativa
 797  8A75
 798  8A75              ;	ld a,b
 799  8A75              ;	and a
 800  8A75              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 801  8A75
 802  8A75              ; ----- ----- -----
 803  8A75
 804  8A75              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 805  8A75              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 806  8A75
 807  8A75              ;	ld hl,Ctrl_1
 808  8A75              ;	res 2,(hl)
 809  8A75
 810  8A75              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 811  8A75
 812  8A75              ;	ld a,(Ctrl_0)
 813  8A75              ;	bit 4,a
 814  8A75              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 815  8A75
 816  8A75              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 817  8A75              ; [[[
 818  8A75              ;	call Detecta_disparo_entidad
 819  8A75              ; ]]]
 820  8A75
 821  8A75              ; -------------------------------------------
 822  8A75
 823  8A75 CD F2 8B      	call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 824  8A78 CD F4 AC     	call Genera_datos_de_impresion
 825  8A7B              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 826  8A7B              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 827  8A7B              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 828  8A7B              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 829  8A7B
 830  8A7B CD 6C AB     	call Decrementa_Contador_de_mov_masticados
 831  8A7E
 832  8A7E              ; -------------------------------------------
 833  8A7E
 834  8A7E              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 835  8A7E
 836  8A7E 2A 98 89     	ld hl,(Puntero_de_impresion)
 837  8A81 CD A1 AC     	call Genera_coordenadas
 838  8A84
 839  8A84              ;	ld hl,Ctrl_0
 840  8A84              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 841  8A84
 842  8A84 CD 57 AB     17 call Store_Restore_cajas
 843  8A87
 844  8A87 C1           	pop bc
 845  8A88
 846  8A88 10 E4        	djnz 15B
 847  8A8A
 848  8A8A              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 849  8A8A
 850  8A8A CD 16 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 851  8A8D CD 2D 8B     	call Ordena_tabla_de_impresion
 852  8A90 CD 56 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 853  8A93
 854  8A93              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 855  8A93              ; Hemos gestionado todas las unidades.
 856  8A93              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 857  8A93
 858  8A93              ;	ld hl,Ctrl_1
 859  8A93              ;	res 2,(hl)
 860  8A93
 861  8A93
 862  8A93 CD D3 8A     	call Borra_diferencia
 863  8A96
 864  8A96 3A E5 89     	ld a,(Ctrl_3)
 865  8A99 CB 5F        	bit 3,a
 866  8A9B 20 04        	jr nz,16F
 867  8A9D
 868  8A9D EB           	ex de,hl
 869  8A9E 71           	ld (hl),c
 870  8A9F 2C           	inc l
 871  8AA0 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 872  8AA1
 873  8AA1              ; Aquí situaremos la rutina que ordena el índice Masa.
 874  8AA1
 875  8AA1 2A D6 89     16 ld hl,(Album_de_borrado)
 876  8AA4 22 DF 89     	ld (Scanlines_album_SP),hl
 877  8AA7
 878  8AA7 21 E5 89     	ld hl,Ctrl_3
 879  8AAA CB C6        	set 0,(hl) 											; Indica Frame completo.
 880  8AAC
 881  8AAC CB 9E        	res 3,(hl)
 882  8AAE CB A6        	res 4,(hl)
 883  8AB0
 884  8AB0 AF           	xor a
 885  8AB1 D3 FE        	out ($fe),a
 886  8AB3 76           	halt
 887  8AB4
 888  8AB4              ; ----------------------------------------
 889  8AB4
 890  8AB4              ;	ld a,(Ctrl_1) 										; Existe Loop?
 891  8AB4              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 892  8AB4 CA 30 8A     	jp z,Main
 893  8AB7
 894  8AB7              ; RECARGA DE NUEVA OLEADA.
 895  8AB7
 896  8AB7              ;	ld a,(Contador_de_frames)
 897  8AB7              ;	ld b,a
 898  8AB7              ;	ld a,(Activa_recarga_cajas)
 899  8AB7              ;	cp b
 900  8AB7              ;	jr z,20F
 901  8AB7
 902  8AB7              ;	ld hl,Ctrl_1
 903  8AB7              ;	set 4,(hl)
 904  8AB7              ;	jp Main
 905  8AB7
 906  8AB7              ;20 ld hl,Ctrl_1
 907  8AB7              ;	res 4,(hl)
 908  8AB7
 909  8AB7              ;	ld a,(Contador_de_frames)
 910  8AB7
 911  8AB7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 912  8AB7              ;! _ IMPREDECIBLE !!!!
 913  8AB7
 914  8AB7              ;	add 10
 915  8AB7              ;	ld (Clock_Entidades_en_curso),a
 916  8AB7
 917  8AB7              ;	jp 4B
 918  8AB7
 919  8AB7 C9           	ret
 920  8AB8
 921  8AB8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 922  8AB8              ;
 923  8AB8              ;	16/11/23
 924  8AB8
 925  8AB8              ;;Gestiona_Amadeus
 926  8AB8
 927  8AB8              ;! Activa/desactiva impacto con Amadeus.
 928  8AB8
 929  8AB8              ;	ld a,(Impacto)
 930  8AB8              ;	and a
 931  8AB8              ;	jr nz,2F
 932  8AB8
 933  8AB8              ;;	call Mov_Amadeus
 934  8AB8
 935  8AB8              ;;2 ld a,(Ctrl_0)
 936  8AB8              ;;	bit 4,a
 937  8AB8              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 938  8AB8
 939  8AB8              ;;	call Guarda_foto_entidad_a_pintar
 940  8AB8              ;;	call Guarda_datos_de_borrado_Amadeus
 941  8AB8
 942  8AB8              ;;1 ld hl,Ctrl_0
 943  8AB8              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 944  8AB8
 945  8AB8              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 946  8AB8
 947  8AB8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 948  8AB8
 949  8AB8              ;	call Calcula_numero_de_disparotes
 950  8AB8
 951  8AB8              ;;	ret
 952  8AB8
 953  8AB8              ; -----------------------------
 954  8AB8              ;
 955  8AB8              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 956  8AB8              ;
 957  8AB8              ;	INPUTS: B a de estar a "0".
 958  8AB8
 959  8AB8              ;Prepara_Borra_sprites
 960  8AB8
 961  8AB8              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 962  8AB8              ;	ld a,l
 963  8AB8              ;	ret z
 964  8AB8
 965  8AB8              ;	srl a
 966  8AB8
 967  8AB8              ;2 sub 16
 968  8AB8              ;	jr z,1F
 969  8AB8              ;	inc b
 970  8AB8              ;	jr 2B
 971  8AB8
 972  8AB8              ;1 inc b
 973  8AB8
 974  8AB8              ;	exx
 975  8AB8              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 976  8AB8              ;	exx
 977  8AB8
 978  8AB8              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 979  8AB8              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 980  8AB8
 981  8AB8              ;	ret
 982  8AB8
 983  8AB8              ; --------------------------------------------------------------------------------------------------------------
 984  8AB8              ;
 985  8AB8              ;	15/12/23
 986  8AB8
 987  8AB8              ;Mov_obj
 988  8AB8
 989  8AB8              ;	ld a,(Ctrl_2)
 990  8AB8              ;	bit 1,a
 991  8AB8              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 992  8AB8
 993  8AB8              ; Explosión:
 994  8AB8
 995  8AB8              ;	ld a,(Frames_explosion)
 996  8AB8              ;	and a
 997  8AB8              ;	jr nz,4F
 998  8AB8
 999  8AB8              ;!  Una alimaña menos!!!!!!!!!1
1000  8AB8
1001  8AB8              ; Se trataba de una Entidad_guía ???
1002  8AB8
1003  8AB8              ;	ld a,(Ctrl_2)
1004  8AB8              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1005  8AB8              ;	jr z,5F
1006  8AB8
1007  8AB8              ;	ld hl,Ctrl_3
1008  8AB8              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1009  8AB8
1010  8AB8              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1011  8AB8              ;!! _generado puede ser distinto, (aletoriedad).
1012  8AB8
1013  8AB8              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1014  8AB8              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1015  8AB8              ;	dec (hl)
1016  8AB8              ;	ld hl,Entidades_en_curso
1017  8AB8              ;	dec (hl)
1018  8AB8              ;	ld hl,Numero_de_entidades
1019  8AB8              ;	dec (hl)
1020  8AB8              ;	jr 3F
1021  8AB8
1022  8AB8              ; -----
1023  8AB8
1024  8AB8              ;	`Movemos´ la explosión.
1025  8AB8
1026  8AB8              ;4 ld hl,(Puntero_DESPLZ_der)
1027  8AB8              ;	inc hl
1028  8AB8              ;	inc hl
1029  8AB8              ;	call Extrae_address
1030  8AB8              ;;	ld (Puntero_objeto),hl
1031  8AB8
1032  8AB8              ;;	ld hl,Frames_explosion
1033  8AB8              ;;	dec (hl)
1034  8AB8
1035  8AB8              ;;	ld hl,Ctrl_0
1036  8AB8              ;;	set 4,(hl);;
1037  8AB8
1038  8AB8              ;;	jr 3F
1039  8AB8
1040  8AB8              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1041  8AB8
1042  8AB8              ;2 xor a
1043  8AB8              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1044  8AB8
1045  8AB8              ; Movemos Entidades malignas.
1046  8AB8              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1047  8AB8
1048  8AB8              ;	ld a,(Ctrl_2)
1049  8AB8              ;	bit 5,a
1050  8AB8              ;	jr nz,8F
1051  8AB8
1052  8AB8              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1053  8AB8              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1054  8AB8              ;	jr 7F
1055  8AB8
1056  8AB8              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1057  8AB8
1058  8AB8              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1059  8AB8              ;	bit 4,a
1060  8AB8              ;	ret z
1061  8AB8
1062  8AB8              ; Ha habido desplazamiento de la entidad maligna.
1063  8AB8              ; Ha llegado a zona de AMADEUS ???
1064  8AB8
1065  8AB8              ;7 ld a,(Coordenada_y)
1066  8AB8              ;	cp $14
1067  8AB8              ;	jr c,1F
1068  8AB8
1069  8AB8              ; ---------
1070  8AB8
1071  8AB8              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1072  8AB8              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1073  8AB8
1074  8AB8              ;	di
1075  8AB8              ;	call Genera_coordenadas_X
1076  8AB8              ;	call Compara_coordenadas_X
1077  8AB8              ;	ei
1078  8AB8
1079  8AB8              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1080  8AB8
1081  8AB8              ; ---------
1082  8AB8
1083  8AB8              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1084  8AB8              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1085  8AB8              ;	call Limpia_Variables_de_borrado
1086  8AB8
1087  8AB8              ;3 ret
1088  8AB8
1089  8AB8              ; --------------------------------------------------------------------------------------------------------------
1090  8AB8              ;
1091  8AB8              ;	29/1/23
1092  8AB8
1093  8AB8              ;Mov_Amadeus
1094  8AB8
1095  8AB8              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1096  8AB8
1097  8AB8              ;	call Mov_right
1098  8AB8
1099  8AB8              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1100  8AB8              ;	bit 4,a
1101  8AB8              ;	ret z
1102  8AB8
1103  8AB8              ; ---------
1104  8AB8
1105  8AB8              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1106  8AB8              ;	call Repone_datos_de_borrado_Amadeus
1107  8AB8              ;	call Limpia_Variables_de_borrado
1108  8AB8
1109  8AB8              ;	ret
1110  8AB8
1111  8AB8              ; --------------------------------------------------------------------------------------------------------------
1112  8AB8              ;
1113  8AB8              ;	17/3/24
1114  8AB8
1115  8AB8              Change
1116  8AB8
1117  8AB8 3A DC 89     	ld a,(Switch)
1118  8ABB EE 01        	xor 1
1119  8ABD 32 DC 89     	ld (Switch),a
1120  8AC0
1121  8AC0 2A D4 89     	ld hl,(Album_de_pintado)
1122  8AC3 ED 5B D6 89  	ld de,(Album_de_borrado)
1123  8AC7 EB           	ex de,hl
1124  8AC8 22 D4 89     	ld (Album_de_pintado),hl
1125  8ACB 22 DF 89     	ld (Scanlines_album_SP),hl
1126  8ACE
1127  8ACE ED 53 D6 89  	ld (Album_de_borrado),de
1128  8AD2
1129  8AD2 C9           	ret
1130  8AD3
1131  8AD3              ; ------------------------------------
1132  8AD3              ;
1133  8AD3              ; 18/03/24
1134  8AD3
1135  8AD3              Borra_diferencia
1136  8AD3
1137  8AD3 ED 4B DF 89  	ld bc,(Scanlines_album_SP)
1138  8AD7
1139  8AD7 3A DC 89     	ld a,(Switch)
1140  8ADA A7           	and a
1141  8ADB 28 08        	jr z,2F
1142  8ADD
1143  8ADD 2A DA 89     	ld hl,(Techo_Scanlines_album_2)
1144  8AE0 11 DA 89     	ld de,Techo_Scanlines_album_2
1145  8AE3 18 06        	jr 3F
1146  8AE5
1147  8AE5 2A D8 89     2 ld hl,(Techo_Scanlines_album)
1148  8AE8 11 D8 89     	ld de,Techo_Scanlines_album
1149  8AEB
1150  8AEB              ; Diferencia.
1151  8AEB
1152  8AEB ED 42        3 sbc hl,bc
1153  8AED
1154  8AED C8           	ret z
1155  8AEE D8           	ret c
1156  8AEF
1157  8AEF              ; Nuevo techo, (más bajo que el anterior).
1158  8AEF              ; Fijamos nuevo techo y borramos bytes sobrantes.
1159  8AEF
1160  8AEF EB           	ex de,hl
1161  8AF0
1162  8AF0 71           	ld (hl),c
1163  8AF1 2C           	inc l
1164  8AF2 70           	ld (hl),b
1165  8AF3
1166  8AF3 AF           	xor a
1167  8AF4 43           	ld b,e
1168  8AF5
1169  8AF5 2A DF 89     	ld hl,(Scanlines_album_SP)
1170  8AF8
1171  8AF8 77           1 ld (hl),a
1172  8AF9 2C           	inc l
1173  8AFA 10 FC        	djnz 1B
1174  8AFC
1175  8AFC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1176  8AFC
1177  8AFC 21 E5 89     	ld hl,Ctrl_3
1178  8AFF CB DE        	set 3,(hl)
1179  8B01
1180  8B01 C9           	ret
1181  8B02
1182  8B02              ; --------------------------------------------------------------------------------------------------------------
1183  8B02              ;
1184  8B02              ;	26/3/24
1185  8B02
1186  8B02              Recauda_informacion_de_entidad_en_curso
1187  8B02
1188  8B02              ; Almacena la Coordenada Y de la entidad en curso.
1189  8B02
1190  8B02              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1191  8B02
1192  8B02 3A 89 89     	ld a,(Coordenada_y)
1193  8B05 2A E1 89     	ld hl,(India_SP)
1194  8B08 77           	ld (hl),a
1195  8B09 2C           	inc l
1196  8B0A
1197  8B0A              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1198  8B0A
1199  8B0A ED 5B DF 89  	ld de,(Scanlines_album_SP)
1200  8B0E
1201  8B0E 73           	ld (hl),e
1202  8B0F 2C           	inc l
1203  8B10 72           	ld (hl),d
1204  8B11 2C           	inc l
1205  8B12
1206  8B12 22 E1 89     	ld (India_SP),hl
1207  8B15
1208  8B15 C9           	ret
1209  8B16
1210  8B16              ; --------------------------------------------------------------------------------------------------------------
1211  8B16              ;
1212  8B16              ;	27/03/24
1213  8B16              ;
1214  8B16
1215  8B16              Inicializa_India_y_limpia_Tabla_de_impresion
1216  8B16
1217  8B16 2A E1 89     	ld hl,(India_SP)
1218  8B19 01 7B 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1219  8B1C
1220  8B1C 79           	ld a,c
1221  8B1D 95           	sub l
1222  8B1E 28 06        	jr z,2F
1223  8B20 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1224  8B21              ;														; _ y pasamos a inicializar (India_SP).
1225  8B21 AF           	xor a
1226  8B22
1227  8B22 77           1 ld (hl),a
1228  8B23 2C           	inc l
1229  8B24 10 FC        	djnz 1B												; Limpia Tabla.
1230  8B26
1231  8B26 21 63 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1232  8B29 22 E1 89     	ld (India_SP),hl
1233  8B2C
1234  8B2C C9           	ret
1235  8B2D
1236  8B2D              ; --------------------------------------------------------------------------------------------------------------
1237  8B2D              ;
1238  8B2D              ;	31/3/24
1239  8B2D
1240  8B2D              Ordena_tabla_de_impresion
1241  8B2D
1242  8B2D              ; 5794 T/states.
1243  8B2D              ; 6278 T/states.
1244  8B2D              ; 5310 T/states.
1245  8B2D
1246  8B2D              ; Inicializamos punteros (India_SP) e (India_2_SP).
1247  8B2D              ; Inicializamos contador de comparaciones, [C].
1248  8B2D              ; Cargamos los registros A y B para efectuar comparación.
1249  8B2D
1250  8B2D FD 2E 00     	ld iyl,0
1251  8B30
1252  8B30 3A C8 89     	ld a,(Entidades_en_curso)
1253  8B33 FE 04        	cp 4 	;	4
1254  8B35 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1255  8B36
1256  8B36 3D           	dec a
1257  8B37 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1258  8B38 51           	ld d,c 										; Copia de respaldo.
1259  8B39
1260  8B39 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1261  8B3A
1262  8B3A 21 66 86     	ld hl,Tabla_de_pintado+3
1263  8B3D 46           	ld b,(hl)
1264  8B3E 22 E3 89     	ld (India_2_SP),hl
1265  8B41
1266  8B41 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1267  8B42 DC 6A 8B     	call c, Avanza_India_2_SP
1268  8B45 CC 6A 8B     	call z, Avanza_India_2_SP
1269  8B48
1270  8B48 FD 2D        	dec iyl
1271  8B4A 28 18        	jr z,2F
1272  8B4C
1273  8B4C
1274  8B4C              ; --------------------------------------------------------------------------------------------------------------
1275  8B4C              ;
1276  8B4C              ;	7/4/24
1277  8B4C
1278  8B4C              Trueque
1279  8B4C
1280  8B4C              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1281  8B4C              ;  			A contiene en nº de fila de (India_SP).
1282  8B4C              ;			HL contiene (India_2_SP).
1283  8B4C
1284  8B4C D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1285  8B4D E5           	push hl										; Preservo (India_2_SP).
1286  8B4E
1287  8B4E ED 5B E1 89  	ld de,(India_SP)
1288  8B52 EB           	ex de,hl
1289  8B53 70           	ld (hl),b
1290  8B54 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1291  8B55
1292  8B55 CD 96 8B     	call Intercambia_1_byte
1293  8B58 CD 96 8B     	call Intercambia_1_byte
1294  8B5B
1295  8B5B
1296  8B5B              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1297  8B5B              ; Recuperamos (India_2_SP) en HL.
1298  8B5B
1299  8B5B 2A E1 89     	ld hl,(India_SP)
1300  8B5E 7E           	ld a,(hl)
1301  8B5F
1302  8B5F E1           	pop hl
1303  8B60 D1           	pop de
1304  8B61
1305  8B61              ; --------------------------------------------------------------------------------------------------------------
1306  8B61
1307  8B61 CD 6A 8B     	call Avanza_India_2_SP
1308  8B64
1309  8B64 14           2 inc d
1310  8B65 15           	dec d
1311  8B66 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1312  8B67 18 D8        	jr 1B
1313  8B69
1314  8B69 C9           	ret
1315  8B6A
1316  8B6A              ; ----- ----- ----- ----- -----
1317  8B6A
1318  8B6A              Avanza_India_2_SP
1319  8B6A
1320  8B6A 0D           	dec c
1321  8B6B 28 0A        	jr z,Avanza_punteros_indios
1322  8B6D
1323  8B6D FD 2C        	inc iyl
1324  8B6F
1325  8B6F 2C           	inc l
1326  8B70 2C           	inc l
1327  8B71 2C           	inc l
1328  8B72
1329  8B72 46           	ld b,(hl)
1330  8B73 22 E3 89     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1331  8B76
1332  8B76 C9           	ret
1333  8B77
1334  8B77              ; ----- ----- ----- ----- -----
1335  8B77
1336  8B77              Avanza_punteros_indios
1337  8B77
1338  8B77 15           	dec d
1339  8B78 28 15        	jr z,Prepara_salida
1340  8B7A
1341  8B7A 4A           	ld c,d
1342  8B7B
1343  8B7B 2A E1 89     	ld hl,(India_SP)
1344  8B7E 2C           	inc l
1345  8B7F 2C           	inc l
1346  8B80 2C           	inc l
1347  8B81 7E           	ld a,(hl)
1348  8B82 22 E1 89     	ld (India_SP),hl
1349  8B85
1350  8B85 2C           	inc l
1351  8B86 2C           	inc l
1352  8B87 2C           	inc l
1353  8B88 46           	ld b,(hl)
1354  8B89 22 E3 89     	ld (India_2_SP),hl
1355  8B8C
1356  8B8C FD 2C        	inc iyl
1357  8B8E
1358  8B8E C9           	ret
1359  8B8F
1360  8B8F              Prepara_salida
1361  8B8F
1362  8B8F 21 63 86     	ld hl,Tabla_de_pintado
1363  8B92 22 E1 89     	ld (India_SP),hl
1364  8B95 C9           	ret
1365  8B96
1366  8B96
1367  8B96 2C           Intercambia_1_byte inc l
1368  8B97 1C           	inc e
1369  8B98 46           	ld b,(hl)
1370  8B99 1A           	ld a,(de)
1371  8B9A EB           	ex de,hl
1372  8B9B 70           	ld (hl),b
1373  8B9C 12           	ld (de),a									; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1374  8B9D C9           	ret
1375  8B9E
1376  8B9E              ; -----------------------------------------------------------------------------------
1377  8B9E              ;
1378  8B9E              ;	20/01/24
1379  8B9E              ;
1380  8B9E              ;
1381  8B9E
1382  8B9E              Construye_movimientos_masticados_entidad
1383  8B9E
1384  8B9E 2A 9A 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1385  8BA1 E5           	push hl
1386  8BA2 CD E5 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1387  8BA5              ;															; _ el (Contador_de_mov_masticados).
1388  8BA5 CD 72 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1389  8BA8              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1390  8BA8 CD 16 95     	call Recompone_posicion_inicio
1391  8BAB
1392  8BAB CD 3C 92     1 call Draw
1393  8BAE CD CA 8B     	call Guarda_movimiento_masticado
1394  8BB1
1395  8BB1 CD 90 98     	call Movimiento
1396  8BB4
1397  8BB4 3A E5 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1398  8BB7 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1399  8BB9 28 F0        	jr z,1B
1400  8BBB
1401  8BBB              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1402  8BBB              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1403  8BBB
1404  8BBB E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1405  8BBC 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1406  8BBF
1407  8BBF              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1408  8BBF
1409  8BBF CD F4 99     	call Situa_en_contador_general_de_mov_masticados
1410  8BC2
1411  8BC2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1412  8BC2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1413  8BC2
1414  8BC2 ED 4B 9C 89  	ld bc,(Contador_de_mov_masticados)
1415  8BC6
1416  8BC6 71           	ld (hl),c
1417  8BC7 23           	inc hl
1418  8BC8 70           	ld (hl),b
1419  8BC9
1420  8BC9 C9           	ret
1421  8BCA
1422  8BCA              ; -----------------------------------------------------------------------------------
1423  8BCA              ;
1424  8BCA              ;	28/12/23
1425  8BCA              ;
1426  8BCA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1427  8BCA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1428  8BCA
1429  8BCA              Guarda_movimiento_masticado
1430  8BCA
1431  8BCA ED 73 CE 89  	ld (Stack),sp
1432  8BCE ED 7B 9A 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1433  8BD2
1434  8BD2              ;	push hl
1435  8BD2 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1436  8BD4 FD E5            push iy 												; Pushea Puntero_objeto.
1437  8BD6
1438  8BD6 ED 7B CE 89      ld sp,(Stack)
1439  8BDA
1440  8BDA 2A 9C 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1441  8BDD 23           	inc hl
1442  8BDE 22 9C 89     	ld (Contador_de_mov_masticados),hl
1443  8BE1
1444  8BE1 CD E5 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1445  8BE4              ;															; _ el (Contador_de_mov_masticados).
1446  8BE4 C9               ret
1447  8BE5
1448  8BE5              ; --------------------------------------------------------------------------------------------------------------
1449  8BE5              ;
1450  8BE5              ;	12/1/24
1451  8BE5              ;
1452  8BE5              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1453  8BE5
1454  8BE5              Actualiza_Puntero_de_almacen_de_mov_masticados
1455  8BE5
1456  8BE5 2A 9A 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1457  8BE8 01 04 00     	ld bc,4
1458  8BEB A7           	and a
1459  8BEC ED 4A        	adc hl,bc
1460  8BEE 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1461  8BF1 C9           	ret
1462  8BF2
1463  8BF2              ; --------------------------------------------------------------------------------------------------------------
1464  8BF2              ;
1465  8BF2              ;	24/03/24
1466  8BF2              ;
1467  8BF2              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1468  8BF2              ;
1469  8BF2              ;	IX contiene el puntero de impresión.
1470  8BF2              ;	DE contiene (Puntero_objeto).
1471  8BF2
1472  8BF2
1473  8BF2 ED 73 CE 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1474  8BF6 ED 7B 9A 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1475  8BFA
1476  8BFA D1           	pop de 															; DE contiene Puntero_objeto
1477  8BFB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1478  8BFD
1479  8BFD ED 73 9A 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1480  8C01 ED 7B CE 89  	ld sp,(Stack)
1481  8C05
1482  8C05 7B           	ld a,e
1483  8C06 82           	add d															; Comprueba si ya no hay datos en el almacén.
1484  8C07
1485  8C07 CC 74 AB     	call z,Reinicia_entidad_maliciosa
1486  8C0A
1487  8C0A C9           	ret
1488  8C0B
1489  8C0B              ; --------------------------------------------------------------------------------------------------------------
1490  8C0B              ;
1491  8C0B              ;	28/12/23
1492  8C0B              ;
1493  8C0B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1494  8C0B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1495  8C0B
1496  8C0B              Guarda_foto_entidad_a_pintar
1497  8C0B
1498  8C0B 3A 9E 89     	ld a,(Ctrl_0)
1499  8C0E CB 77        	bit 6,a
1500  8C10 28 04        	jr z,5F
1501  8C12
1502  8C12              ;	Guarda la foto de Amadeus.
1503  8C12
1504  8C12              ;	call Draw
1505  8C12              ;	call Guarda_movimiento_masticado	;! Provisional
1506  8C12 CD F4 AC     	call Genera_datos_de_impresion
1507  8C15 C9           	ret
1508  8C16
1509  8C16              ; ENTIDADES!
1510  8C16              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1511  8C16
1512  8C16 3A E5 89     5 ld a,(Ctrl_3)
1513  8C19 CB 5F        	bit 3,a
1514  8C1B 28 01        	jr z,1F
1515  8C1D
1516  8C1D              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1517  8C1D
1518  8C1D              4
1519  8C1D              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1520  8C1D C9           	ret
1521  8C1E
1522  8C1E              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1523  8C1E
1524  8C1E 3A E5 89     1 ld a,(Ctrl_3)
1525  8C21 CB 57        	bit 2,a
1526  8C23 20 10        	jr nz,6F
1527  8C25
1528  8C25              ; Entidad guía o fantasma ???
1529  8C25
1530  8C25 3A A3 89     	ld a,(Ctrl_2)
1531  8C28 CB 6F        	bit 5,a
1532  8C2A 20 10        	jr nz,3F
1533  8C2C
1534  8C2C              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1535  8C2C
1536  8C2C 18 EF        	jr 4B
1537  8C2E
1538  8C2E              ; ENTIDAD_GUÍA:
1539  8C2E              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1540  8C2E              ; _guardando "movimientos_masticados".
1541  8C2E
1542  8C2E 3A E5 89     2 ld a,(Ctrl_3)
1543  8C31 CB 57        	bit 2,a
1544  8C33 28 07        	jr z,3F
1545  8C35
1546  8C35              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1547  8C35              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1548  8C35
1549  8C35 CB 97        6 res 2,a
1550  8C37 CB DF        	set 3,a
1551  8C39 32 E5 89     	ld (Ctrl_3),a
1552  8C3C
1553  8C3C
1554  8C3C              ;	Esto sólo lo ejecuta una entidad guía.
1555  8C3C
1556  8C3C CD 3C 92     3 	call Draw
1557  8C3F CD CA 8B     	call Guarda_movimiento_masticado
1558  8C42 CD F4 AC     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1559  8C45
1560  8C45              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1561  8C45              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1562  8C45
1563  8C45              ;	call Convierte_guia_en_fantasma
1564  8C45 C9           	ret
1565  8C46
1566  8C46              ; ---------------------------------------------------------------------------------------------------------------------
1567  8C46              ;
1568  8C46              ;	13/03/24
1569  8C46              ;
1570  8C46
1571  8C46              Inicia_albumes_de_lineas
1572  8C46
1573  8C46 21 00 80     	ld hl,Scanlines_album
1574  8C49 22 D4 89     	ld (Album_de_pintado),hl
1575  8C4C 22 DF 89     	ld (Scanlines_album_SP),hl
1576  8C4F
1577  8C4F 21 00 90     	ld hl,Scanlines_album_2
1578  8C52 22 D6 89     	ld (Album_de_borrado),hl
1579  8C55
1580  8C55 C9           	ret
1581  8C56
1582  8C56
1583  8C56
1584  8C56              ; ---------------------------------------------------------------------------------------------------------------------
1585  8C56              ;
1586  8C56              ; 8/1/23
1587  8C56              ;
1588  8C56              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1589  8C56              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1590  8C56              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1591  8C56
1592  8C56              ; Destruye HL y DE !!!!!
1593  8C56
1594  8C56              Inicia_punteros_de_cajas
1595  8C56
1596  8C56 21 FF 86     	ld hl,Indice_de_cajas_de_entidades
1597  8C59 CD 6C 8C         call Extrae_address
1598  8C5C 22 C0 89         ld (Puntero_store_caja),hl
1599  8C5F 21 01 87     	ld hl,Indice_de_cajas_de_entidades+2
1600  8C62 22 C4 89     	ld (Indice_restore_caja),hl
1601  8C65 CD 6C 8C     	call Extrae_address
1602  8C68 22 C2 89     	ld (Puntero_restore_caja),hl
1603  8C6B C9               ret
1604  8C6C
1605  8C6C              ; *************************************************************************************************************************************************************
1606  8C6C              ;
1607  8C6C              ; 8/1/23
1608  8C6C              ;
1609  8C6C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1610  8C6C
1611  8C6C              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1612  8C6C              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1613  8C6C              ;	ret
1614  8C6C              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1615  8C6C              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1616  8C6C              ;	ret
1617  8C6C
1618  8C6C              ; -------------------------------------------------------------------------------------------------------------
1619  8C6C              ;
1620  8C6C              ; 21/9/23
1621  8C6C              ;
1622  8C6C
1623  8C6C              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1624  8C6C
1625  8C6C              ;;Limpia_album_Amadeus
1626  8C6C              ;
1627  8C6C              ;;	ld hl,Scanlines_album_Amadeus
1628  8C6C              ;;	ld a,(hl)
1629  8C6C              ;;	and a
1630  8C6C              ;;	ret z
1631  8C6C
1632  8C6C              ;;	ld hl,Scanlines_album_Amadeus;
1633  8C6C              ;;	ld de,Scanlines_album_Amadeus+1
1634  8C6C              ;;	ld bc,11
1635  8C6C              ;;	xor a
1636  8C6C              ;;	ld (hl),a
1637  8C6C              ;;	ldir
1638  8C6C
1639  8C6C              ;;	ld hl,Scanlines_album_Amadeus
1640  8C6C              ;;	ld (End_Snapshot_Amadeus),hl
1641  8C6C
1642  8C6C              ;;	ret
1643  8C6C
1644  8C6C              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1645  8C6C              ;	ld de,Variables_de_borrado+1
1646  8C6C              ;	ld bc,5
1647  8C6C              ;	xor a
1648  8C6C              ;	ld (hl),a
1649  8C6C              ;	ldir
1650  8C6C              ;	ret
1651  8C6C
1652  8C6C              ; *************************************************************************************************************************************************************
1653  8C6C              ;
1654  8C6C              ; 20/10/22
1655  8C6C              ;
1656  8C6C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1657  8C6C              ;
1658  8C6C              ; Destruye el puntero y DE !!!!!
1659  8C6C
1660  8C6C 5E           Extrae_address ld e,(hl)
1661  8C6D 23           	inc hl
1662  8C6E 56           	ld d,(hl)
1663  8C6F 2B           	dec hl
1664  8C70 EB           	ex de,hl
1665  8C71 C9           	ret
1666  8C72
1667  8C72              ; *************************************************************************************************************************************************************
1668  8C72              ;
1669  8C72              ;	20/1/24
1670  8C72              ;
1671  8C72              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1672  8C72              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1673  8C72              ;
1674  8C72              ;   Destruye HL y BC !!!!!,
1675  8C72              ;
1676  8C72              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1677  8C72              ;					"0" ..... Izquierda.
1678  8C72
1679  8C72              Inicia_Puntero_objeto
1680  8C72
1681  8C72 3A 96 89     	ld a,(Cuad_objeto)
1682  8C75 E6 01        	and 1
1683  8C77 F5           	push af
1684  8C78 CC 94 8C     	call z,Inicia_puntero_objeto_izq
1685  8C7B F1           	pop af
1686  8C7C C8           	ret z
1687  8C7D CD 81 8C     	call Inicia_puntero_objeto_der
1688  8C80 C9           	ret
1689  8C81
1690  8C81              ; Arrancamos desde la parte izquierda de la pantalla.
1691  8C81              ; Iniciamos (Indice_Sprite_der).
1692  8C81
1693  8C81 2A 8C 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1694  8C84 22 90 89     	ld (Puntero_DESPLZ_der),hl
1695  8C87 CD 6C 8C     	call Extrae_address
1696  8C8A 22 86 89     	ld (Puntero_objeto),hl
1697  8C8D
1698  8C8D 2A 8E 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1699  8C90 22 92 89     	ld (Puntero_DESPLZ_izq),hl
1700  8C93 C9           	ret
1701  8C94
1702  8C94              ; Arrancamos desde la parte derecha de la pantalla.
1703  8C94              ; Iniciamos (Indice_Sprite_izq).
1704  8C94
1705  8C94 2A 8E 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1706  8C97 22 92 89     	ld (Puntero_DESPLZ_izq),hl
1707  8C9A CD 6C 8C     	call Extrae_address
1708  8C9D 22 86 89     	ld (Puntero_objeto),hl
1709  8CA0
1710  8CA0 2A 8C 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1711  8CA3 22 90 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1712  8CA6 C9           	ret
1713  8CA7
1714  8CA7              ; **************************************************************************************************
1715  8CA7              ;
1716  8CA7              ;	31/01/24
1717  8CA7              ;
1718  8CA7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1719  8CA7
1720  8CA7              Restore_entidad
1721  8CA7
1722  8CA7 2A C0 89     	ld hl,(Puntero_store_caja)
1723  8CAA 11 81 89     	ld de,Bandeja_DRAW
1724  8CAD 7E           	ld a,(hl)
1725  8CAE 12           	ld (de),a
1726  8CAF 23           	inc hl 											; (Tipo).
1727  8CB0
1728  8CB0 11 88 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1729  8CB3 01 02 00     	ld bc,2
1730  8CB6 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1731  8CB8
1732  8CB8 13           	inc de
1733  8CB9 7E           	ld a,(hl)
1734  8CBA 12           	ld (de),a 										; Transferimos (Attr).
1735  8CBB 23           	inc hl
1736  8CBC
1737  8CBC 11 97 89     	ld de,Impacto
1738  8CBF
1739  8CBF 7E           	ld a,(hl)
1740  8CC0 12           	ld (de),a 										; Transferimos (Impacto).
1741  8CC1 23           	inc hl
1742  8CC2
1743  8CC2 13           	inc de
1744  8CC3 01 07 00     	ld bc,7
1745  8CC6 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1746  8CC8              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1747  8CC8 11 A3 89     	ld de,Ctrl_2
1748  8CCB
1749  8CCB 7E           	ld a,(hl)
1750  8CCC 12           	ld (de),a 										; Transferimos (Ctrl_2).
1751  8CCD
1752  8CCD C9           	ret
1753  8CCE
1754  8CCE              ; **************************************************************************************************
1755  8CCE              ;
1756  8CCE              ;	08/05/23
1757  8CCE              ;
1758  8CCE              ;	Incrementamos los dos punteros de entidades. (+1).
1759  8CCE
1760  8CCE              Incrementa_punteros_de_cajas
1761  8CCE
1762  8CCE 2A C2 89     	ld hl,(Puntero_restore_caja)
1763  8CD1 22 C0 89     	ld (Puntero_store_caja),hl
1764  8CD4 2A C4 89     	ld hl,(Indice_restore_caja)
1765  8CD7 23           	inc hl
1766  8CD8 23           	inc hl
1767  8CD9 22 C4 89     	ld (Indice_restore_caja),hl
1768  8CDC CD 6C 8C         call Extrae_address
1769  8CDF 22 C2 89         ld (Puntero_restore_caja),hl
1770  8CE2 C9               ret
1771  8CE3
1772  8CE3              ; **************************************************************************************************
1773  8CE3              ;
1774  8CE3              ;	21/12/23
1775  8CE3              ;
1776  8CE3              ;	Restore_Amadeus
1777  8CE3              ;
1778  8CE3              ;	Cargamos en DRAW los parámetros de Amadeus.
1779  8CE3              ;
1780  8CE3
1781  8CE3              ;Restore_Amadeus	push hl
1782  8CE3              ;	push de
1783  8CE3              ; 	push bc
1784  8CE3              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1785  8CE3              ;	ld de,Bandeja_DRAW
1786  8CE3              ;	ld bc,42
1787  8CE3              ;	ldir
1788  8CE3              ;	pop bc
1789  8CE3              ;	pop de
1790  8CE3              ;	pop hl
1791  8CE3              ;	ret
1792  8CE3
1793  8CE3              ; *************************************************************************************************************************************************************
1794  8CE3              ;
1795  8CE3              ;	21/12/23
1796  8CE3              ;
1797  8CE3              ;	Store_Amadeus
1798  8CE3              ;
1799  8CE3              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1800  8CE3              ;
1801  8CE3              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1802  8CE3              ;
1803  8CE3              ;	DESTRUYE: HL y BC y DE.
1804  8CE3
1805  8CE3              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1806  8CE3              ;	ld bc,42
1807  8CE3              ;	ldir
1808  8CE3              ;	ret
1809  8CE3
1810  8CE3              ; -----------------------------------------------------------
1811  8CE3              ;
1812  8CE3              ;	21/12/23
1813  8CE3              ;
1814  8CE3              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1815  8CE3              ;
1816  8CE3              ;	Destruye: HL,BC,DE,A
1817  8CE3
1818  8CE3              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1819  8CE3              ;	ld bc,41
1820  8CE3              ;	xor a
1821  8CE3              ;	ld (hl),a;
1822  8CE3              ;	ld de,Bandeja_DRAW+1
1823  8CE3              ;	ldir
1824  8CE3              ;	ret
1825  8CE3
1826  8CE3              ; -----------------------------------------------------------
1827  8CE3
1828  8CE3              ; Teclado.
1829  8CE3
1830  8CE3 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1831  8CE5 DB FE        	in a,($fe)
1832  8CE7 E6 01        	and $01
1833  8CE9 28 02        	jr z,1f
1834  8CEB 18 F6        	jr Pulsa_ENTER
1835  8CED C9           1 ret
1836  8CEE
1837  8CEE              ; **************************************************************************************************
1838  8CEE              ;
1839  8CEE              ; Temporización.
1840  8CEE
1841  8CEE              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1842  8CEE              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1843  8CEE              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1844  8CEE              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1845  8CEE
1846  8CEE              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1847  8CEE              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1848  8CEE              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1849  8CEE
1850  8CEE              ; A partir de $4f61 no hace falta DELAY.
1851  8CEE
1852  8CEE              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1853  8CEE
1854  8CEE 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1855  8CF1 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1856  8CF2 78           	LD A,B
1857  8CF3 A7           	AND A
1858  8CF4 20 FB        	JR NZ,wait
1859  8CF6 C9           	RET
1860  8CF7
1861  8CF7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1862  8CF7              ;
1863  8CF7              ;	5/3/23
1864  8CF7              ;
1865  8CF7              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1866  8CF7
1867  8CF7              ;Movimiento_Amadeus
1868  8CF7
1869  8CF7              ; Disparo.
1870  8CF7
1871  8CF7              ;	ld a,(Disparo_Amadeus)
1872  8CF7              ;	and a
1873  8CF7              ;	jr nz,1F
1874  8CF7              ;	jr 2F
1875  8CF7
1876  8CF7              ;1 ld a,$f7													; "5" para disparar.
1877  8CF7              ;	in a,($fe)
1878  8CF7              ;	and $10
1879  8CF7
1880  8CF7              ;	push af
1881  8CF7              ;	call z,Genera_disparo
1882  8CF7              ;	pop af
1883  8CF7              ;	jr nz,2F
1884  8CF7
1885  8CF7              ;	ld a,(Disparo_Amadeus)
1886  8CF7              ;	xor 1
1887  8CF7              ;	ld (Disparo_Amadeus),a
1888  8CF7              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1889  8CF7              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1890  8CF7              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1891  8CF7              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1892  8CF7
1893  8CF7              ;	ld a,$f7
1894  8CF7              ;	in a,($fe)
1895  8CF7              ;	and $01
1896  8CF7              ;	ret z
1897  8CF7
1898  8CF7              ;	ld a,$f7
1899  8CF7              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1900  8CF7              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1901  8CF7              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1902  8CF7              ;	ret
1903  8CF7
1904  8CF7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1905  8CF7              ;
1906  8CF7              ;	Rutina provisional para que los malotes cagen balas.
1907  8CF7
1908  8CF7              ;Detecta_disparo_entidad
1909  8CF7
1910  8CF7              ;	ld a,(Disparo_entidad)
1911  8CF7              ;	and a
1912  8CF7              ;	ret z
1913  8CF7
1914  8CF7              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1915  8CF7
1916  8CF7              ;	ld a,$7f				; Detecta SPACE.
1917  8CF7              ;	in a,($fe)
1918  8CF7              ;	and 1
1919  8CF7              ;	ret nz
1920  8CF7
1921  8CF7              ;	call Genera_disparo
1922  8CF7              ;	ret
1923  8CF7
1924  8CF7              ; ----------------------------------------------------------------------
1925  8CF7              ;
1926  8CF7              ;	8/9/23
1927  8CF7
1928  8CF7              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1929  8CF7              ; 	dec hl
1930  8CF7              ;	ld a,(hl)
1931  8CF7              ;	and a
1932  8CF7              ;	ret z										; Salimos si es álbum está vacío.
1933  8CF7
1934  8CF7              ;	ld de,Variables_de_borrado+5
1935  8CF7              ;	ld bc,6
1936  8CF7              ;	lddr
1937  8CF7              ;	ret
1938  8CF7
1939  8CF7              ; ----------------------------------------------------------------------
1940  8CF7              ;
1941  8CF7              ;	9/9/23
1942  8CF7
1943  8CF7              ;Repone_datos_de_borrado_Amadeus
1944  8CF7
1945  8CF7              ;	ld hl,Variables_de_borrado
1946  8CF7              ;	ld de,Scanlines_album_Amadeus
1947  8CF7              ;	ld bc,6
1948  8CF7              ;	ldir
1949  8CF7
1950  8CF7              ;	ex de,hl
1951  8CF7              ;	ld (End_Snapshot_Amadeus),hl
1952  8CF7
1953  8CF7              ;	ret
1954  8CF7
1955  8CF7              ; ----------------------------------------------------------------------
1956  8CF7              ;
1957  8CF7              ;	27/10/23
1958  8CF7              ;
1959  8CF7
1960  8CF7              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1961  8CF7              ;	_ Scanlines_album correspondiente.
1962  8CF7
1963  8CF7              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1964  8CF7              ;	_ durante el proceso de escritura.
1965  8CF7
1966  8CF7              ;Repone_datos_de_borrado
1967  8CF7
1968  8CF7              ;	ld de,(Scanlines_album_SP)
1969  8CF7              ;	ld hl,Variables_de_borrado
1970  8CF7              ;	ld bc,6
1971  8CF7              ;	ldir
1972  8CF7
1973  8CF7              ;	ex de,hl
1974  8CF7              ;	ld (Scanlines_album_SP),hl
1975  8CF7
1976  8CF7              ;	ret
1977  8CF7
1978  8CF7              ; --------------------------------------------------------------------------------------
1979  8CF7
1980  8CF7              ;Pinta_Amadeus
1981  8CF7
1982  8CF7              ;   	call Calcula_malotes_Amadeus
1983  8CF7              ;	call Extrae_foto_Amadeus
1984  8CF7              ;	call Limpia_album_Amadeus
1985  8CF7
1986  8CF7              ;	ret
1987  8CF7
1988  8CF7              ; -----------------------------------------------------------------------------------
1989  8CF7              ;
1990  8CF7              ;	10/12/23
1991  8CF7              ;
1992  8CF7              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1993  8CF7
1994  8CF7              Actualiza_relojes
1995  8CF7
1996  8CF7 3A E5 89     	ld a,(Ctrl_3)
1997  8CFA CB 47        	bit 0,a
1998  8CFC C8           	ret z 						;	Salimos si no hemos pintado unidades.
1999  8CFD
2000  8CFD 21 EA 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
2001  8D00 34           	inc (hl)
2002  8D01
2003  8D01 34           	inc (hl)
2004  8D02 35           	dec (hl)
2005  8D03 C0           	ret nz
2006  8D04
2007  8D04 21 EB 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
2008  8D07 34           	inc (hl)
2009  8D08 C9           	ret
2010  8D09
2011  8D09              ; ---------------------------------------------------------------
2012  8D09
2013  8D09              	org $aa7f
2014  AA7F
2015  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F
   3+ AA7F              ; Construyo un nº aleatorio. Método: "DERIVANDO."
   4+ AA7F
   5+ AA7F              Derivando_RND
   6+ AA7F
   7+ AA7F              ;    ld hl,attr_msg         ;o          ; En el caso de que queramos generar más de un nº aleatorio partiendo de la misma semilla:::. HL apuntará a la dirección_
   8+ AA7F              ;                                       ; _de memoria donde se va a almacenar el 1er byte, (nº aleatorio).
   9+ AA7F              ;    ld b,attr_msg-msg-1    ;o          ; En el caso de que queramos generar más de un nº aleatorio partiendo de la misma semilla:::.
  10+ AA7F
  11+ AA7F 18 FE            jr $
  12+ AA81
  13+ AA81
  14+ AA81 ED 5F        7 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA83              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  16+ AA83 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  17+ AA86              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  18+ AA86
  19+ AA86              ;    push bc                            ;o
  20+ AA86
  21+ AA86 A7           6 and a                                 ; Carry a "0".
  22+ AA87 CB 3F            srl a                               ; Desplazamiento a la derecha.
  23+ AA89 30 02            jr nc,1F
  24+ AA8B
  25+ AA8B CB C1            set 0,c
  26+ AA8D
  27+ AA8D 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  28+ AA8E E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  29+ AA90 5F               ld e,a
  30+ AA91
  31+ AA91 7A               ld a,d
  32+ AA92 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  33+ AA94 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  34+ AA96
  35+ AA96 3E 01            ld a,1
  36+ AA98
  37+ AA98 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  38+ AA99
  39+ AA99 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  40+ AA9A 28 04            jr z,4F
  41+ AA9C
  42+ AA9C CB FF            set 7,a
  43+ AA9E 18 02            jr 5F
  44+ AAA0 CB BF        4 res 7,a
  45+ AAA2 CB 21        5 sla c
  46+ AAA4 10 E0            djnz 6B
  47+ AAA6 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  48+ AAA7
  49+ AAA7              ; Ejemplos de cribado:
  50+ AAA7
  51+ AAA7              ;    and %01111000       ; o            ; No quiero que los attr. tengan FLASH. La tinta siempre en NEGRO.
  52+ AAA7
  53+ AAA7              ; Esta parte es opcional. Permite seguir generando X nº aleatorios partiendo de la misma semilla. En este caso, almacenaré esos nº en un espacio de memoria_
  54+ AAA7              ; _reservado para este fin, (attr_msg).
  55+ AAA7
  56+ AAA7 77               ld (hl),a     ; o
  57+ AAA8 23               inc hl        ; o
  58+ AAA9 C1               pop bc        ; o
  59+ AAAA 10 D5            djnz 7B       ; o
  60+ AAAC
  61+ AAAC C9               ret
  62+ AAAD
  63+ AAAD
  64+ AAAD
# file closed: RND_Derivando.asm
2016  AAAD              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAD              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAD              ;
   3+ AAAD              ;   8/3/24
   4+ AAAD              ;
   5+ AAAD              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAD              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAD              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAD              ;	_ de la 1ª entidad del Nivel.
   9+ AAAD              ;
  10+ AAAD              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAD
  12+ AAAD              ;	MODIFICA: HL,DE y A.
  13+ AAAD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAD
  15+ AAAD              Inicializa_Nivel
  16+ AAAD
  17+ AAAD 2A EF 89     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB0 CD 6C 8C     	call Extrae_address
  19+ AAB3 7E           	ld a,(hl)
  20+ AAB4 32 C6 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB7 23           	inc hl
  22+ AAB8 CD C5 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABB 22 F1 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AABE CD CE AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC1
  26+ AAC1 CD DF AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC4 C9           	ret
  28+ AAC5
  29+ AAC5              ; ----------------------
  30+ AAC5
  31+ AAC5 11 A5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AAC8 01 04 00     	ld bc,4
  33+ AACB ED B0        	ldir
  34+ AACD C9           	ret
  35+ AACE
  36+ AACE 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AACF CD 02 AC         call Calcula_salto_en_BC
  38+ AAD2 21 7B 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD5 A7               and a
  40+ AAD6 ED 4A            adc hl,bc
  41+ AAD8 CD 6C 8C         call Extrae_address
  42+ AADB 22 B1 89         ld (Puntero_indice_mov),hl
  43+ AADE C9               ret
  44+ AADF
  45+ AADF 3A 81 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE2 CD 02 AC     	call Calcula_salto_en_BC
  47+ AAE5 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAE8 A7               and a
  49+ AAE9 ED 4A            adc hl,bc
  50+ AAEB CD 6C 8C         call Extrae_address
  51+ AAEE 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF1 C9           	ret
  53+ AAF2
  54+ AAF2              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF2              ;
  56+ AAF2              ;   5/1/24
  57+ AAF2              ;
  58+ AAF2              ;	Destruye A,BC,HL,DE
  59+ AAF2
  60+ AAF2              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF2              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF2
  63+ AAF2              Inicia_Entidades
  64+ AAF2
  65+ AAF2              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF2
  67+ AAF2 CD 56 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF5              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF5 CD 66 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAF8
  71+ AAF8 2A F1 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFB
  73+ AAFB 22 F1 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AAFE
  75+ AAFE CD B0 AB     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB01
  77+ AB01 2A F1 89     	ld hl,(Datos_de_nivel)
  78+ AB04
  79+ AB04              ; En este punto:
  80+ AB04              ;
  81+ AB04              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB04              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB04
  84+ AB04 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB05
  86+ AB05 7E           	ld a,(hl)
  87+ AB06 CD 4D AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB09
  89+ AB09 CD 14 AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0C
  91+ AB0C              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0C
  93+ AB0C CD D2 AB     	call Busca_mov_masticados_segun_tipo
  94+ AB0F
  95+ AB0F A7           	and a
  96+ AB10 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB12
  98+ AB12              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB12
 100+ AB12              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB12              ;	_ de este tipo de entidad.
 102+ AB12
 103+ AB12 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 104+ AB15 CD 01 9A     	call Transfiere_datos_de_contadores
 105+ AB18
 106+ AB18 18 06        	jr 4F
 107+ AB1A
 108+ AB1A CD 9E 8B     3 call Construye_movimientos_masticados_entidad
 109+ AB1D
 110+ AB1D              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1D              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1D              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1D              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1D              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1D
 116+ AB1D CD 90 AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB20              ;																; _ Mov_masticados ya generados.
 118+ AB20
 119+ AB20 CD F2 8B     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB23
 121+ AB23 DD E5        	push ix
 122+ AB25 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB26
 124+ AB26 D5           	push de
 125+ AB27 CD A1 AC     	call Genera_coordenadas
 126+ AB2A CD 02 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ AB2D D1           	pop de
 128+ AB2E
 129+ AB2E CD F4 AC     	call Genera_datos_de_impresion
 130+ AB31              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ AB31              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ AB31              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ AB31              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ AB31
 135+ AB31 CD 6C AB     	call Decrementa_Contador_de_mov_masticados
 136+ AB34
 137+ AB34              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ AB34
 139+ AB34 CD 3B AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 140+ AB37 CD 61 AB     	call Limpiamos_bandeja_DRAW
 141+ AB3A CD CE 8C     	call Incrementa_punteros_de_cajas
 142+ AB3D
 143+ AB3D              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 144+ AB3D              ; _ entidad del Nivel.
 145+ AB3D
 146+ AB3D 3A E6 89     	ld a,(Ctrl_4)
 147+ AB40 E6 F0        	and $f0
 148+ AB42 32 E6 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 149+ AB45
 150+ AB45              ; Siguiente entidad del Nivel.
 151+ AB45
 152+ AB45 2A F1 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 153+ AB48 23           	inc hl 														; _ entidad del Nivel.
 154+ AB49
 155+ AB49 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 156+ AB4A
 157+ AB4A 10 AF        	djnz 2B
 158+ AB4C
 159+ AB4C C9           	ret
 160+ AB4D
 161+ AB4D              ; ---------------------------------------------------------------------
 162+ AB4D              ;
 163+ AB4D              ;	10/02/24
 164+ AB4D              ;
 165+ AB4D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 166+ AB4D              ;
 167+ AB4D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 168+ AB4D
 169+ AB4D              Definicion_segun_tipo
 170+ AB4D
 171+ AB4D CD 02 AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 172+ AB50 21 A2 87     	ld hl,Indice_de_definiciones_de_entidades
 173+ AB53 CD 0A AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 174+ AB56 C9           	ret
 175+ AB57
 176+ AB57              ; ---------------------------------------------------------------------
 177+ AB57              ;
 178+ AB57              ;	27/03/24
 179+ AB57
 180+ AB57
 181+ AB57              Store_Restore_cajas
 182+ AB57
 183+ AB57 CD 3B AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 184+ AB5A CD 61 AB     	call Limpiamos_bandeja_DRAW
 185+ AB5D
 186+ AB5D              ; 	Entidad_sospechosa. 20/4/23
 187+ AB5D
 188+ AB5D              ;	ld a,(Impacto)
 189+ AB5D              ;	and a
 190+ AB5D              ;	jr z,1F
 191+ AB5D
 192+ AB5D              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 193+ AB5D              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 194+ AB5D              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 195+ AB5D              ;	adc hl,bc 											; _ "0" más adelante.
 196+ AB5D              ;	ld (Entidad_sospechosa_de_colision),hl
 197+ AB5D
 198+ AB5D
 199+ AB5D              ;1 ld hl,(Puntero_restore_caja)
 200+ AB5D              ;	ld a,(hl)
 201+ AB5D              ;	and a
 202+ AB5D              ;	push af
 203+ AB5D              ;	jr z,2F
 204+ AB5D
 205+ AB5D              ;	di
 206+ AB5D              ;	ld de,Bandeja_DRAW
 207+ AB5D              ;	ld bc,42
 208+ AB5D              ;	ldir
 209+ AB5D              ;	ei
 210+ AB5D
 211+ AB5D CD CE 8C     2 call Incrementa_punteros_de_cajas
 212+ AB60 C9           	ret
 213+ AB61
 214+ AB61              ; ---------------------------------------------------------------------
 215+ AB61              ;
 216+ AB61              ;	26/03/24
 217+ AB61
 218+ AB61 21 81 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 219+ AB64 06 24        	ld b,36
 220+ AB66 AF           	xor a
 221+ AB67 77           1 ld (hl),a
 222+ AB68 23           	inc hl
 223+ AB69 10 FC        	djnz 1B
 224+ AB6B C9           	ret
 225+ AB6C
 226+ AB6C              ; ---------------------------------------------------------------------
 227+ AB6C              ;
 228+ AB6C              ;	24/03/24
 229+ AB6C
 230+ AB6C 2A 9C 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 231+ AB6F 2B           	dec hl
 232+ AB70 22 9C 89     	ld (Contador_de_mov_masticados),hl
 233+ AB73 C9           	ret
 234+ AB74
 235+ AB74              ; ---------------------------------------------------------------------
 236+ AB74              ;
 237+ AB74              ;	10/2/24
 238+ AB74
 239+ AB74              Reinicia_entidad_maliciosa
 240+ AB74
 241+ AB74              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 242+ AB74
 243+ AB74 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 244+ AB77 CD 01 9A     	call Transfiere_datos_de_contadores
 245+ AB7A
 246+ AB7A              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 247+ AB7A
 248+ AB7A 3A 81 89     	ld a,(Tipo)
 249+ AB7D CD 4D AB     	call Definicion_segun_tipo
 250+ AB80
 251+ AB80 E5           	push hl
 252+ AB81 DD E1        	pop ix
 253+ AB83
 254+ AB83 DD 6E 0B     	ld l,(ix+11)
 255+ AB86 DD 66 0C     	ld h,(ix+12)
 256+ AB89
 257+ AB89 22 9A 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 258+ AB8C
 259+ AB8C CD F2 8B     	call Cargamos_registros_con_mov_masticado
 260+ AB8F
 261+ AB8F C9           	ret
 262+ AB90
 263+ AB90              ; ---------------------------------------------------------------------
 264+ AB90              ;
 265+ AB90              ;	22/01/24
 266+ AB90
 267+ AB90 21 E6 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 268+ AB93 CB 46        	bit 0,(hl)
 269+ AB95 20 0D        	jr nz,1F
 270+ AB97 CB 4E        	bit 1,(hl)
 271+ AB99 20 0C        	jr nz,2F
 272+ AB9B CB 56        	bit 2,(hl)
 273+ AB9D 20 0B        	jr nz,3F
 274+ AB9F CB 5E        	bit 3,(hl)
 275+ ABA1 20 0A        	jr nz,4F
 276+ ABA3 C9           	ret
 277+ ABA4
 278+ ABA4 CB E6        1 set 4,(hl)
 279+ ABA6 C9           	ret
 280+ ABA7 CB EE        2 set 5,(hl)
 281+ ABA9 C9           	ret
 282+ ABAA CB F6        3 set 6,(hl)
 283+ ABAC C9           	ret
 284+ ABAD CB FE        4 set 7,(hl)
 285+ ABAF C9           	ret
 286+ ABB0
 287+ ABB0              ; ---------------------------------------------------------------------
 288+ ABB0              ;
 289+ ABB0              ;	23/01/24
 290+ ABB0              ;
 291+ ABB0              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 292+ ABB0              ;
 293+ ABB0              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 294+ ABB0              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 295+ ABB0              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 296+ ABB0              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 297+ ABB0
 298+ ABB0              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 299+ ABB0
 300+ ABB0 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 301+ ABB1 3D           	dec a
 302+ ABB2 20 06        	jr nz,1F
 303+ ABB4
 304+ ABB4              ; --- Tipo_1
 305+ ABB4
 306+ ABB4 21 E6 89     	ld hl,Ctrl_4
 307+ ABB7 CB C6        	set 0,(hl)
 308+ ABB9 C9           	ret
 309+ ABBA
 310+ ABBA 3D           1 dec a
 311+ ABBB 20 06        	jr nz,2F
 312+ ABBD
 313+ ABBD              ; --- Tipo_2
 314+ ABBD
 315+ ABBD 21 E6 89     	ld hl,Ctrl_4
 316+ ABC0 CB CE        	set 1,(hl)
 317+ ABC2 C9           	ret
 318+ ABC3
 319+ ABC3 3D           2 dec a
 320+ ABC4 20 06        	jr nz,3F
 321+ ABC6
 322+ ABC6              ; --- Tipo_3
 323+ ABC6
 324+ ABC6 21 E6 89     	ld hl,Ctrl_4
 325+ ABC9 CB D6        	set 2,(hl)
 326+ ABCB C9           	ret
 327+ ABCC
 328+ ABCC              ; --- Tipo_3
 329+ ABCC
 330+ ABCC 21 E6 89     3 ld hl,Ctrl_4
 331+ ABCF CB D6        	set 2,(hl)
 332+ ABD1 C9           	ret
 333+ ABD2
 334+ ABD2              ; ---------------------------------------------------------------------
 335+ ABD2              ;
 336+ ABD2              ;	22/01/24
 337+ ABD2
 338+ ABD2 21 E6 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 339+ ABD5 CB 46        	bit 0,(hl)
 340+ ABD7 20 0E        	jr nz,1F
 341+ ABD9
 342+ ABD9 CB 4E        	bit 1,(hl)
 343+ ABDB 20 10        	jr nz,2F
 344+ ABDD
 345+ ABDD CB 56        	bit 2,(hl)
 346+ ABDF 20 12        	jr nz,3F
 347+ ABE1
 348+ ABE1 CB 5E        	bit 3,(hl)
 349+ ABE3 20 14        	jr nz,4F
 350+ ABE5 18 19        	jr 6F
 351+ ABE7
 352+ ABE7              ; Entidad_de_Tipo_1.
 353+ ABE7
 354+ ABE7 CB 66        1 bit 4,(hl)
 355+ ABE9 28 15        	jr z,6F
 356+ ABEB 18 10        	jr 5F
 357+ ABED
 358+ ABED              ; Entidad_de_Tipo_2.
 359+ ABED
 360+ ABED CB 6E        2 bit 5,(hl)
 361+ ABEF 28 0F        	jr z,6F
 362+ ABF1 18 0A        	jr 5F
 363+ ABF3
 364+ ABF3              ; Entidad_de_Tipo_3.
 365+ ABF3
 366+ ABF3 CB 76        3 bit 6,(hl)
 367+ ABF5 28 09        	jr z,6F
 368+ ABF7 18 04        	jr 5F
 369+ ABF9
 370+ ABF9              ; Entidad_de_Tipo_4.
 371+ ABF9
 372+ ABF9 CB 7E        4 bit 7,(hl)
 373+ ABFB 28 03        	jr z,6F
 374+ ABFD
 375+ ABFD              ; Esta entidad TIENE MOV_MASTICADOS.
 376+ ABFD
 377+ ABFD AF           5 xor a
 378+ ABFE 3C           	inc a
 379+ ABFF C9           	ret
 380+ AC00
 381+ AC00              ; Esta entidad NO TIENE MOV_MASTICADOS.
 382+ AC00
 383+ AC00 AF           6 xor a
 384+ AC01 C9           	ret
 385+ AC02
 386+ AC02              ;	------------------------------------------------------------------------------------
 387+ AC02              ;
 388+ AC02              ;	12/01/24
 389+ AC02              ;
 390+ AC02              ;	INPUTS:	A contiene el (Tipo) de entidad.
 391+ AC02              ;
 392+ AC02              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 393+ AC02              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 394+ AC02
 395+ AC02 CB 27        Calcula_salto_en_BC sla a
 396+ AC04 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 397+ AC06 4F           	ld c,a
 398+ AC07 06 00        	ld b,0
 399+ AC09 C9           	ret
 400+ AC0A
 401+ AC0A              ; ------------------------------------------------------------------
 402+ AC0A              ;
 403+ AC0A              ;	19/1/24
 404+ AC0A              ;
 405+ AC0A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 406+ AC0A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 407+ AC0A
 408+ AC0A A7           Situa_en_datos_de_definicion and a
 409+ AC0B ED 4A        	adc hl,bc
 410+ AC0D CD 6C 8C     	call Extrae_address
 411+ AC10 22 CC 89         ld (Datos_de_entidad),hl
 412+ AC13 C9           	ret
 413+ AC14
 414+ AC14              ; ------------------------------------------------------------------
 415+ AC14
 416+ AC14              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 417+ AC14              ; 	inc de
 418+ AC14              ; 	inc de
 419+ AC14              ; 	ex de,hl
 420+ AC14              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 421+ AC14              ; 	ret
 422+ AC14
 423+ AC14              ; ----------------------------------------------------------------------------------------------------------
 424+ AC14              ;
 425+ AC14              ;	31/1/24
 426+ AC14              ;
 427+ AC14              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 428+ AC14              ;	_ de entidad.
 429+ AC14              ;
 430+ AC14              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 431+ AC14              ;
 432+ AC14              ;
 433+ AC14              ;	MODIFICA: HL,DE y BC
 434+ AC14
 435+ AC14
 436+ AC14              Definicion_de_entidad_a_bandeja_DRAW
 437+ AC14
 438+ AC14 11 81 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 439+ AC17 01 03 00     	ld bc,3
 440+ AC1A ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 441+ AC1C              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 442+ AC1C 11 8B 89     	ld de,Attr									; DE en (Attr).
 443+ AC1F 01 05 00     	ld bc,5
 444+ AC22 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 445+ AC24              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 446+ AC24 11 94 89     	ld de,Posicion_inicio
 447+ AC27 01 03 00     	ld bc,3
 448+ AC2A ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 449+ AC2C              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 450+ AC2C 11 9A 89     	ld de,Puntero_de_almacen_de_mov_masticados
 451+ AC2F 01 02 00     	ld bc,2
 452+ AC32 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 453+ AC34
 454+ AC34 11 A4 89     	ld de,Frames_explosion
 455+ AC37 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 456+ AC39 12           	ld (de),a 									; Vuelco (Frames_explosion).
 457+ AC3A
 458+ AC3A C9           	ret
 459+ AC3B
 460+ AC3B              ; ----------------------------------------------------------------------------------------------------------
 461+ AC3B              ;
 462+ AC3B              ;	22/01/24
 463+ AC3B              ;
 464+ AC3B              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 465+ AC3B              ;
 466+ AC3B              ;	Las cajas contienen entidades iniciadas:
 467+ AC3B              ;
 468+ AC3B              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 469+ AC3B              ;
 470+ AC3B              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 471+ AC3B              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 472+ AC3B              ;
 473+ AC3B              ;	MODIFICA: HL,DE y BC
 474+ AC3B
 475+ AC3B              Parametros_de_bandeja_DRAW_a_caja
 476+ AC3B
 477+ AC3B 21 81 89     	ld hl,Bandeja_DRAW
 478+ AC3E ED 5B C0 89  	ld de,(Puntero_store_caja)
 479+ AC42 7E           	ld a,(hl)
 480+ AC43 12           	ld (de),a
 481+ AC44 13           	inc de 													; (Tipo).
 482+ AC45
 483+ AC45 21 88 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 484+ AC48 01 02 00     	ld bc,2
 485+ AC4B ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 486+ AC4D              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 487+ AC4D 23           	inc hl
 488+ AC4E 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 489+ AC4F 12           	ld (de),a
 490+ AC50 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 491+ AC51
 492+ AC51 21 97 89     	ld hl,Impacto
 493+ AC54 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 494+ AC55 12           	ld (de),a
 495+ AC56 13           	inc de 													; (Impacto), volcado a la caja.
 496+ AC57
 497+ AC57 21 98 89     	ld hl,Puntero_de_impresion								; DE situado ahora en (Puntero_de_impresión).
 498+ AC5A 01 07 00     	ld bc,7
 499+ AC5D ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 500+ AC5F              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 501+ AC5F              ;															; HL apunta ahora a (Columnas).
 502+ AC5F 21 A3 89     	ld hl,Ctrl_2
 503+ AC62 7E           	ld a,(hl)
 504+ AC63 12           	ld (de),a 												; Volcamos (Ctrl_2).
 505+ AC64 13           	inc de
 506+ AC65
 507+ AC65 C9           	ret
 508+ AC66
 509+ AC66              ;---------------------------------------------------------------------------------------------------------------
 510+ AC66              ;
 511+ AC66              ;	5/1/24
 512+ AC66              ;
 513+ AC66              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ AC66              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 515+ AC66              ;
 516+ AC66              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 517+ AC66              ;
 518+ AC66              ;	(Numero_parcial_de_entidades)="7".
 519+ AC66              ;
 520+ AC66              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 521+ AC66              ;
 522+ AC66              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 523+ AC66              ;
 524+ AC66              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 525+ AC66              ;	MODIFICA: A y B.
 526+ AC66              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 527+ AC66
 528+ AC66              Inicializa_Numero_parcial_de_entidades
 529+ AC66
 530+ AC66              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 531+ AC66
 532+ AC66 3A C6 89     	ld a,(Numero_de_entidades)
 533+ AC69 A7           	and a
 534+ AC6A
 535+ AC6A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 536+ AC6A              ;	jr z,$
 537+ AC6A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 538+ AC6A
 539+ AC6A 20 03        	jr nz,3F
 540+ AC6C
 541+ AC6C              ; ---------- ---------- ----------
 542+ AC6C
 543+ AC6C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 544+ AC6C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 545+ AC6C
 546+ AC6C CD AD AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 547+ AC6F
 548+ AC6F              ; ---------- ---------- ----------
 549+ AC6F
 550+ AC6F 3A C6 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 551+ AC72 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 552+ AC74 38 08        	jr c,1F
 553+ AC76
 554+ AC76              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 555+ AC76              ; Actualizamos variables.
 556+ AC76
 557+ AC76 3E 07        	ld a,7
 558+ AC78 32 C7 89     	ld (Numero_parcial_de_entidades),a
 559+ AC7B 47           	ld b,a
 560+ AC7C 18 04        	jr 2F
 561+ AC7E
 562+ AC7E              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 563+ AC7E              ; (Numero_de_entidades)="0".
 564+ AC7E
 565+ AC7E 32 C7 89     1 ld (Numero_parcial_de_entidades),a
 566+ AC81 47           	ld b,a
 567+ AC82 C9           2 ret
 568+ AC83
# file closed: Rutinas_de_inicio_y_niveles.asm
2017  AC83              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ AC83              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ AC83              ;
   3+ AC83              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ AC83              ;
   5+ AC83              ; *****************************************************************************************************************************************************************************************
   6+ AC83              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ AC83
   8+ AC83 7C           calcula_tercio ld a,h
   9+ AC84 E6 18        	and $18
  10+ AC86 CB 2F        	sra a
  11+ AC88 CB 2F        	sra a
  12+ AC8A CB 2F        	sra a
  13+ AC8C C9           	ret
  14+ AC8D
# file closed: calcula_tercio.asm
2018  AC8D              	include "Cls.asm"
# file opened: Cls.asm
   1+ AC8D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ AC8D              ;
   3+ AC8D              ;
   4+ AC8D              ;	CLS.
   5+ AC8D              ;
   6+ AC8D              ;	Limpia la pantalla y define sus atributos.
   7+ AC8D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ AC8D              ;
   9+ AC8D              ;	COLORES: 0 ..... NEGRO
  10+ AC8D              ;    		 1 ..... AZUL
  11+ AC8D              ; 			 2 ..... ROJO
  12+ AC8D              ;			 3 ..... MAGENTA
  13+ AC8D              ; 			 4 ..... VERDE
  14+ AC8D              ; 			 5 ..... CIAN
  15+ AC8D              ;			 6 ..... AMARILLO
  16+ AC8D              ; 			 7 ..... BLANCO
  17+ AC8D              ;
  18+ AC8D              ;	INPUT: A contiene los atributos de pantalla.
  19+ AC8D              ;
  20+ AC8D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ AC8D
  22+ AC8D
  23+ AC8D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ AC90 11 01 40     	LD DE,$4001
  25+ AC93 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ AC96 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ AC98 ED B0        	LDIR
  28+ AC9A 01 FF 02     	LD BC,767
  29+ AC9D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ AC9E ED B0        	LDIR
  31+ ACA0 C9           	ret
  32+ ACA1
# file closed: Cls.asm
2019  ACA1              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACA1              ; ------------------------------------------------------------------------
   2+ ACA1              ;
   3+ ACA1              ;	30/1/24
   4+ ACA1              ;
   5+ ACA1              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACA1              ;	Fila superior "0", Columna izquierda "0".
   7+ ACA1              ;
   8+ ACA1              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACA1              ;
  10+ ACA1              ;	Modifica: A,BC y DE.
  11+ ACA1
  12+ ACA1 7D           Genera_coordenadas ld a,l
  13+ ACA2 E6 1F        	and $1f
  14+ ACA4 32 88 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACA7
  16+ ACA7 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACA8 FE 40        	cp $40
  18+ ACAA 38 1C        	jr c,4F
  19+ ACAC
  20+ ACAC CD 83 AC     	call calcula_tercio
  21+ ACAF 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ ACB0
  23+ ACB0 1E 00        	ld e,0
  24+ ACB2 7D           	ld a,l
  25+ ACB3 E6 E0        	and $e0
  26+ ACB5 28 01        	jr z,1F
  27+ ACB7 04           	inc b
  28+ ACB8
  29+ ACB8 04           1 inc b
  30+ ACB9 05           	dec b
  31+ ACBA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ ACBC              ;														; _ , salimos.
  33+ ACBC 1C           3 inc e
  34+ ACBD D6 20        	sub 32
  35+ ACBF 20 FB        	jr nz,3B
  36+ ACC1 10 F5        	djnz 1B
  37+ ACC3
  38+ ACC3 7B           2 ld a,e
  39+ ACC4 32 89 89     	ld (Coordenada_y),a
  40+ ACC7 C9           	ret
  41+ ACC8
  42+ ACC8 AF           4 xor a
  43+ ACC9 32 89 89     	ld (Coordenada_y),a
  44+ ACCC C9           	ret
  45+ ACCD
  46+ ACCD              ; ------------------------------------------------------------------------
  47+ ACCD              ;	28/05/23
  48+ ACCD              ;
  49+ ACCD              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ ACCD              ;	Fila superior "0", Columna izquierda "0".
  51+ ACCD              ;
  52+ ACCD              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ ACCD              ;	Output: DE contendrá las coordenadas del disparo:
  54+ ACCD              ;
  55+ ACCD              ;		DE="$120d"
  56+ ACCD              ;
  57+ ACCD              ;		D, (Coordenada_X), Columnas, $12
  58+ ACCD              ;		E, (Coordenada_y), Filas, $0d
  59+ ACCD              ;
  60+ ACCD              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ ACCD
  62+ ACCD              ;	Modifica: A,BC y DE.
  63+ ACCD
  64+ ACCD
  65+ ACCD              Genera_coordenadas_disparo
  66+ ACCD
  67+ ACCD              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ ACCD
  69+ ACCD 7D           	ld a,l
  70+ ACCE E6 1F        	and $1f
  71+ ACD0 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ ACD1 CD 83 AC     	call calcula_tercio
  73+ ACD4 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ ACD5 1E 00        	ld e,0
  75+ ACD7 7D           	ld a,l
  76+ ACD8 E6 E0        	and $e0
  77+ ACDA 28 01        	jr z,1F
  78+ ACDC 04           	inc b
  79+ ACDD 1C           1 inc e
  80+ ACDE D6 20        	sub 32
  81+ ACE0 20 FB        	jr nz,1B
  82+ ACE2 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ ACE4 C9           	ret
  84+ ACE5
# file closed: Genera_coordenadas.asm
2020  ACE5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ ACE5              ; Relojes y temporizaciones.
   2+ ACE5
   3+ ACE5              ; ------------------------------------------------------
   4+ ACE5              ;
   5+ ACE5              ;	16/7/23
   6+ ACE5              ;
   7+ ACE5              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ ACE5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ ACE5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ ACE5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ ACE5              ;
  12+ ACE5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ ACE5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ ACE5
  15+ ACE5              ; Disparo_entidad db 1
  16+ ACE5              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ ACE5              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ ACE5
  19+ ACE5              Habilita_disparos
  20+ ACE5
  21+ ACE5 7E           	ld a,(hl)
  22+ ACE6 A7           	and a
  23+ ACE7 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ ACE8
  25+ ACE8 EB           	ex de,hl
  26+ ACE9
  27+ ACE9 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ ACEA C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ ACEB
  30+ ACEB              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ ACEB
  32+ ACEB 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ ACEC 7E           	ld a,(hl)
  34+ ACED 23           	inc hl
  35+ ACEE 77           	ld (hl),a
  36+ ACEF
  37+ ACEF EB           	ex de,hl						; Habilitamos disparo.
  38+ ACF0 3E 01        	ld a,1
  39+ ACF2 77           	ld (hl),a
  40+ ACF3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2021  ACF4              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ ACF4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ ACF4              ;
   3+ ACF4              ;	11/03/24
   4+ ACF4              ;
   5+ ACF4              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ ACF4              ;   DE contiene Puntero_objeto.
   7+ ACF4              ;   IX contiene el Puntero de impresión.
   8+ ACF4
   9+ ACF4              Genera_datos_de_impresion
  10+ ACF4
  11+ ACF4 ED 73 CE 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ ACF8 31 9A 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ ACFB DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ ACFD
  15+ ACFD 2A DF 89         ld hl,(Scanlines_album_SP)
  16+ AD00
  17+ AD00 3E 05            ld a,5
  18+ AD02 85               add l
  19+ AD03 6F               ld l,a
  20+ AD04
  21+ AD04 F9               ld sp,hl
  22+ AD05 22 DF 89         ld (Scanlines_album_SP),hl
  23+ AD08
  24+ AD08 21 00 00         ld hl,0
  25+ AD0B
  26+ AD0B DD E5            push ix
  27+ AD0D 3B               dec sp
  28+ AD0E ED 7A            adc hl,sp
  29+ AD10 D5               push de
  30+ AD11
  31+ AD11              ; Recuperamos SP.
  32+ AD11
  33+ AD11 ED 7B CE 89      ld sp,(Stack)
  34+ AD15
  35+ AD15 E5               push hl
  36+ AD16 F1               pop af
  37+ AD17 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ AD18
  39+ AD18              ; Tenemos el encabezado listo.
  40+ AD18              ; Preparamos registros para generar los scanlines.
  41+ AD18
  42+ AD18 DD E5            push ix
  43+ AD1A E1               pop hl                                          ; 1er scanline en HL.
  44+ AD1B
  45+ AD1B ED 5B DF 89      ld de,(Scanlines_album_SP)
  46+ AD1F
  47+ AD1F              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ AD1F              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ AD1F
  50+ AD1F 7C               ld a,h
  51+ AD20 FE 50            cp $50
  52+ AD22 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ AD24
  54+ AD24 20 05            jr nz,2F
  55+ AD26
  56+ AD26 7D               ld a,l
  57+ AD27 FE E0            cp $e0
  58+ AD29 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ AD2B
  60+ AD2B 7D           2 ld a,l
  61+ AD2C FE C0            cp $c0
  62+ AD2E D2 C0 AD         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD31
  64+ AD31              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD31
  66+ AD31 CD F8 94         call NextScan
  67+ AD34 EB               ex de,hl
  68+ AD35
  69+ AD35 73               ld (hl),e
  70+ AD36 23               inc hl
  71+ AD37 72               ld (hl),d
  72+ AD38 23               inc hl
  73+ AD39
  74+ AD39 EB               ex de,hl
  75+ AD3A
  76+ AD3A CD F8 94         call NextScan
  77+ AD3D EB               ex de,hl
  78+ AD3E
  79+ AD3E 73               ld (hl),e
  80+ AD3F 23               inc hl
  81+ AD40 72               ld (hl),d
  82+ AD41 23               inc hl
  83+ AD42
  84+ AD42 EB               ex de,hl
  85+ AD43
  86+ AD43 CD F8 94         call NextScan
  87+ AD46 EB               ex de,hl
  88+ AD47
  89+ AD47 73               ld (hl),e
  90+ AD48 23               inc hl
  91+ AD49 72               ld (hl),d
  92+ AD4A 23               inc hl
  93+ AD4B
  94+ AD4B EB               ex de,hl
  95+ AD4C
  96+ AD4C CD F8 94         call NextScan
  97+ AD4F EB               ex de,hl
  98+ AD50
  99+ AD50 73               ld (hl),e
 100+ AD51 23               inc hl
 101+ AD52 72               ld (hl),d
 102+ AD53 23               inc hl
 103+ AD54
 104+ AD54 EB               ex de,hl
 105+ AD55
 106+ AD55 CD F8 94         call NextScan
 107+ AD58 EB               ex de,hl
 108+ AD59
 109+ AD59 73               ld (hl),e
 110+ AD5A 23               inc hl
 111+ AD5B 72               ld (hl),d
 112+ AD5C 23               inc hl
 113+ AD5D
 114+ AD5D EB               ex de,hl
 115+ AD5E
 116+ AD5E CD F8 94         call NextScan
 117+ AD61 EB               ex de,hl
 118+ AD62
 119+ AD62 73               ld (hl),e
 120+ AD63 23               inc hl
 121+ AD64 72               ld (hl),d
 122+ AD65 23               inc hl
 123+ AD66
 124+ AD66 EB               ex de,hl
 125+ AD67
 126+ AD67 CD F8 94         call NextScan
 127+ AD6A EB               ex de,hl
 128+ AD6B
 129+ AD6B 73               ld (hl),e
 130+ AD6C 23               inc hl
 131+ AD6D 72               ld (hl),d
 132+ AD6E 23               inc hl
 133+ AD6F
 134+ AD6F EB               ex de,hl
 135+ AD70
 136+ AD70 CD F8 94         call NextScan
 137+ AD73 EB               ex de,hl
 138+ AD74
 139+ AD74 73               ld (hl),e
 140+ AD75 23               inc hl
 141+ AD76 72               ld (hl),d
 142+ AD77 23               inc hl
 143+ AD78
 144+ AD78 EB               ex de,hl
 145+ AD79
 146+ AD79 CD F8 94         call NextScan
 147+ AD7C EB               ex de,hl
 148+ AD7D
 149+ AD7D 73               ld (hl),e
 150+ AD7E 23               inc hl
 151+ AD7F 72               ld (hl),d
 152+ AD80 23               inc hl
 153+ AD81
 154+ AD81 EB               ex de,hl
 155+ AD82
 156+ AD82 CD F8 94         call NextScan
 157+ AD85 EB               ex de,hl
 158+ AD86
 159+ AD86 73               ld (hl),e
 160+ AD87 23               inc hl
 161+ AD88 72               ld (hl),d
 162+ AD89 23               inc hl
 163+ AD8A
 164+ AD8A EB               ex de,hl
 165+ AD8B
 166+ AD8B CD F8 94         call NextScan
 167+ AD8E EB               ex de,hl
 168+ AD8F
 169+ AD8F 73               ld (hl),e
 170+ AD90 23               inc hl
 171+ AD91 72               ld (hl),d
 172+ AD92 23               inc hl
 173+ AD93
 174+ AD93 EB               ex de,hl
 175+ AD94
 176+ AD94 CD F8 94         call NextScan
 177+ AD97 EB               ex de,hl
 178+ AD98
 179+ AD98 73               ld (hl),e
 180+ AD99 23               inc hl
 181+ AD9A 72               ld (hl),d
 182+ AD9B 23               inc hl
 183+ AD9C
 184+ AD9C EB               ex de,hl
 185+ AD9D
 186+ AD9D CD F8 94         call NextScan
 187+ ADA0 EB               ex de,hl
 188+ ADA1
 189+ ADA1 73               ld (hl),e
 190+ ADA2 23               inc hl
 191+ ADA3 72               ld (hl),d
 192+ ADA4 23               inc hl
 193+ ADA5
 194+ ADA5 EB               ex de,hl
 195+ ADA6
 196+ ADA6 CD F8 94         call NextScan
 197+ ADA9 EB               ex de,hl
 198+ ADAA
 199+ ADAA 73               ld (hl),e
 200+ ADAB 23               inc hl
 201+ ADAC 72               ld (hl),d
 202+ ADAD 23               inc hl
 203+ ADAE
 204+ ADAE EB               ex de,hl
 205+ ADAF
 206+ ADAF CD F8 94         call NextScan
 207+ ADB2 EB               ex de,hl
 208+ ADB3
 209+ ADB3 73               ld (hl),e
 210+ ADB4 23               inc hl
 211+ ADB5 72               ld (hl),d
 212+ ADB6 23               inc hl
 213+ ADB7
 214+ ADB7              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ ADB7
 216+ ADB7 22 DF 89         ld (Scanlines_album_SP),hl
 217+ ADBA
 218+ ADBA              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ ADBA
 220+ ADBA 08               ex af,af
 221+ ADBB
 222+ ADBB F5               push af
 223+ ADBC E1               pop hl
 224+ ADBD
 225+ ADBD 36 10            ld (hl),16
 226+ ADBF
 227+ ADBF C9               ret
 228+ ADC0
 229+ ADC0              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ ADC0
 231+ ADC0              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ ADC0
 233+ ADC0 3E 57            ld a,$57
 234+ ADC2 94               sub h
 235+ ADC3 47               ld b,a
 236+ ADC4
 237+ ADC4 3E DF            ld a,$df
 238+ ADC6 BD               cp l
 239+ ADC7 38 04            jr c,1F
 240+ ADC9
 241+ ADC9 3E 08            ld a,8
 242+ ADCB 80               add b
 243+ ADCC 47               ld b,a
 244+ ADCD
 245+ ADCD              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ ADCD              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ ADCD
 248+ ADCD 48           1 ld c,b
 249+ ADCE 0C               inc c
 250+ ADCF
 251+ ADCF 04               inc b
 252+ ADD0 05               dec b
 253+ ADD1 20 02            jr nz,3F
 254+ ADD3
 255+ ADD3 18 0B            jr 6F
 256+ ADD5
 257+ ADD5 CD F8 94     3 call NextScan
 258+ ADD8 EB               ex de,hl
 259+ ADD9
 260+ ADD9 73               ld (hl),e
 261+ ADDA 23               inc hl
 262+ ADDB 72               ld (hl),d
 263+ ADDC 23               inc hl
 264+ ADDD
 265+ ADDD EB               ex de,hl
 266+ ADDE 10 F5            djnz 3B
 267+ ADE0
 268+ ADE0 ED 53 DF 89  6 ld (Scanlines_album_SP),de
 269+ ADE4
 270+ ADE4 08           5 ex af,af
 271+ ADE5 F5               push af
 272+ ADE6 E1               pop hl
 273+ ADE7
 274+ ADE7 71               ld (hl),c
 275+ ADE8
 276+ ADE8 C9               ret
 277+ ADE9
# file closed: Genera_datos_de_impresion.asm
2022  ADE9
2023  ADE9              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ ADE9              ; -----------------------------------------------------------------------------
   2+ ADE9              ;
   3+ ADE9              ;   11/03/24
   4+ ADE9              ;
   5+ ADE9
   6+ ADE9                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 CE 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 DF 89      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B CE 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 DF 89      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B CE 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2024  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD EC 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A 96 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A 94 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 84 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 58 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A 9E 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A 9E 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 9E 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A 9E 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 9E 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 9E 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A A0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD 83 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD 83 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A 96 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD 83 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD 83 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD 83 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A 84 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A A2 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A 96 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A 88 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A 88 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 83 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A 9E 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 84 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 84 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 9E 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A 9E 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 84 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 84 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 9E 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD 07 95     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 84 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD F8 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 84 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A 96 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD 83 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 96 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 A0 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 A2 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 96 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 A0 89     	ld (Limite_horizontal),hl
 381+ 940D 21 A2 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 96 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 A0 89     	ld (Limite_horizontal),hl
 392+ 9425 21 A2 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 96 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 A0 89     	ld (Limite_horizontal),hl
 401+ 9438 21 A2 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A 84 89     	ld hl,(Posicion_actual)
 410+ 9444 CD A1 AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 9E 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A 96 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A 88 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 9F 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 9F 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A 88 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 9F 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 9F 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A 96 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A 84 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD 07 95     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD E0 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD 07 95     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A 86 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D5
 546+ 94D5 3A 9E 89     	ld a,(Ctrl_0)
 547+ 94D8 CB 77        	bit 6,a
 548+ 94DA C8           	ret z
 549+ 94DB
 550+ 94DB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DB              ; _ entidad / Amadeus´.
 552+ 94DB
 553+ 94DB DD 22 2E 87  	ld (p.imp.amadeus),ix
 554+ 94DF
 555+ 94DF C9           	ret
 556+ 94E0
 557+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E0              ;
 559+ 94E0              ;	2/1/23
 560+ 94E0              ;
 561+ 94E0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E0              ;
 563+ 94E0              ;	Tras esta rutina tenemos:
 564+ 94E0              ;
 565+ 94E0              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E0              ;
 568+ 94E0              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E0
 570+ 94E0 2A 84 89     Operandos ld hl,(Posicion_actual)
 571+ 94E3 3A 9F 89     	ld a,(Columnas)
 572+ 94E6 3D           	dec a
 573+ 94E7 20 01        	jr nz,1F
 574+ 94E9 3C           	inc a
 575+ 94EA 47           1 ld b,a
 576+ 94EB C9           	ret
 577+ 94EC
 578+ 94EC              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94EC              ;
 580+ 94EC              ;	Prepara_draw
 581+ 94EC              ;
 582+ 94EC              ;	Es una rutina de carga.
 583+ 94EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94EC              ;
 585+ 94EC              ;	FUNCIONAMIENTO:
 586+ 94EC              ;
 587+ 94EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94EC              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94EC              ;
 591+ 94EC              ;	DESTRUYE:
 592+ 94EC              ;
 593+ 94EC              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94EC
 595+ 94EC 21 82 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F1 4E           	ld c,(hl)
 599+ 94F2 2A 84 89     	ld hl,(Posicion_actual)
 600+ 94F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94F7 C9           	ret
 602+ 94F8
 603+ 94F8              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F8              ;
 605+ 94F8              ;	5/08/22
 606+ 94F8              ;
 607+ 94F8              ;   NextScan.
 608+ 94F8              ;
 609+ 94F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F8              ;
 611+ 94F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F8              ;
 613+ 94F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F8              ;
 615+ 94F8              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F8              ;
 617+ 94F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F8              ;
 619+ 94F8
 620+ 94F8 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F9 7C               ld a,h
 622+ 94FA E6 07            and 7
 623+ 94FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94FD
 625+ 94FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94FE C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9500 6F               ld l,a
 628+ 9501 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9502
 630+ 9502 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9503 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9505 67               ld h,a
 633+ 9506 C9               ret
 634+ 9507
 635+ 9507              ;----------------------------------------------------------------------------------------------------------------
 636+ 9507              ;
 637+ 9507              ;	5/08/22
 638+ 9507              ;
 639+ 9507              ;   PreviousScan.
 640+ 9507              ;
 641+ 9507              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 9507              ;
 643+ 9507              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 9507              ;
 645+ 9507              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 9507              ;
 647+ 9507              ;       DESTRUIDOS: AF y HL !!!
 648+ 9507              ;
 649+ 9507              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 9507              ;
 651+ 9507
 652+ 9507 7C           PreviousScan ld a,h
 653+ 9508 25               dec h               ; Dec H.
 654+ 9509 E6 07            and 7
 655+ 950B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 950C
 657+ 950C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 950D D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 950F 6F               ld l,a
 660+ 9510 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9511
 662+ 9511 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9512 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9514 67               ld h,a
 665+ 9515 C9               ret
 666+ 9516
 667+ 9516
 668+ 9516
 669+ 9516
 670+ 9516
 671+ 9516
 672+ 9516
 673+ 9516
 674+ 9516
 675+ 9516
 676+ 9516
 677+ 9516
# file closed: Draw_XOR.asm
2025  9516              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9516
   2+ 9516              ; ******************************************************************************************************************************************************************************************
   3+ 9516              ;
   4+ 9516              ;   20/05/23
   5+ 9516              ;
   6+ 9516              ;	Recompone_posicion_inicio
   7+ 9516              ;
   8+ 9516              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9516              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9516              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9516              ;	_ a una u otra rutina.
  12+ 9516
  13+ 9516              Recompone_posicion_inicio
  14+ 9516
  15+ 9516 2A 94 89     	ld hl,(Posicion_inicio)
  16+ 9519 7D           	ld a,l
  17+ 951A E6 1F        	and $1f
  18+ 951C 28 16        	jr z,1F
  19+ 951E
  20+ 951E FE 1F        	cp $1f
  21+ 9520 28 0D        	jr z,3F
  22+ 9522
  23+ 9522 21 A3 89     	ld hl,Ctrl_2
  24+ 9525 CB C6        	set 0,(hl)
  25+ 9527 2A 86 89     	ld hl,(Puntero_objeto)
  26+ 952A 22 BE 89     	ld (Repone_puntero_objeto),hl
  27+ 952D 18 08        	jr 2F
  28+ 952F
  29+ 952F CD DD 96     3 call Mov_left
  30+ 9532 18 03        	jr 2F
  31+ 9534
  32+ 9534 CD BA 95     1 call Mov_right
  33+ 9537 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953A 22 86 89     	ld (Puntero_objeto),hl
  35+ 953D C9           	ret
  36+ 953E
  37+ 953E              ; ******************************************************************************************************************************************************************************************
  38+ 953E              ;
  39+ 953E              ;   27/05/23
  40+ 953E              ;
  41+ 953E              ;	Mov_down
  42+ 953E              ;
  43+ 953E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953E              ;
  45+ 953E              ;
  46+ 953E              Mov_down
  47+ 953E
  48+ 953E CD A8 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9541              ;																	; _ repone (Puntero_objeto).
  50+ 9541 21 9E 89     	ld hl,Ctrl_0
  51+ 9544 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9546              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9546              ; 																	; _ en el caso de que no lo haya.
  54+ 9546 3A A8 89     	ld a,(Vel_down)
  55+ 9549 47           	ld b,a
  56+ 954A 2A 84 89         ld hl,(Posicion_actual)
  57+ 954D CD 83 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9550 E6 02        	and 2
  59+ 9552 28 17        	jr z,1F
  60+ 9554
  61+ 9554              ; Nos encontramos en el último tercio de pantalla.
  62+ 9554              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9554
  64+ 9554 7C           	ld a,h
  65+ 9555 FE 57        	cp $57
  66+ 9557 20 12        	jr nz,1F
  67+ 9559
  68+ 9559 7D           	ld a,l
  69+ 955A C6 20        	add $20
  70+ 955C 30 0D        	jr nc,1F
  71+ 955E
  72+ 955E              ; ------------------------------
  73+ 955E              ;
  74+ 955E              ;	12/01/24
  75+ 955E
  76+ 955E              ;	call Reaparece_arriba
  77+ 955E CD 6A 98     	call Reinicio
  78+ 9561
  79+ 9561              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9561
  81+ 9561 3A E5 89     	ld a,(Ctrl_3)
  82+ 9564 CB CF        	set 1,a
  83+ 9566 32 E5 89     	ld (Ctrl_3),a
  84+ 9569
  85+ 9569 18 08        	jr 3F
  86+ 956B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956B              ; ------------------------------
  89+ 956B
  90+ 956B CD F8 94     1 call NextScan
  91+ 956E 22 84 89     	ld (Posicion_actual),hl
  92+ 9571 10 DA            djnz 2B
  93+ 9573 CD A1 AC     3 call Genera_coordenadas
  94+ 9576 C9           	ret
  95+ 9577
  96+ 9577              ; ******************************************************************************************************************************************************************************************
  97+ 9577              ;
  98+ 9577              ;   27/05/23
  99+ 9577              ;
 100+ 9577              ;	Mov_up
 101+ 9577              ;
 102+ 9577              ; 	Mueve el Sprite hacia arriba.
 103+ 9577              ;
 104+ 9577              ;
 105+ 9577              Mov_up
 106+ 9577
 107+ 9577 CD A8 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957A 21 9E 89     	ld hl,Ctrl_0
 110+ 957D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957F              ; 																		; _ en el caso de que no lo haya.
 113+ 957F 3A A7 89     	ld a,(Vel_up)
 114+ 9582 47           	ld b,a
 115+ 9583 2A 84 89     	ld hl,(Posicion_actual)
 116+ 9586 CD 83 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9589 A7           	and a
 118+ 958A 20 10        	jr nz,1F
 119+ 958C
 120+ 958C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958C
 123+ 958C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958F 20 0B            jr nz,1F
 126+ 9591 7D               ld a,l
 127+ 9592 D6 20            sub $20
 128+ 9594 30 06            jr nc,1F
 129+ 9596 25               dec h
 130+ 9597
 131+ 9597              ; -----------------------------
 132+ 9597 CD 4B 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959A              ;	call Reinicio
 134+ 959A              ; -----------------------------
 135+ 959A
 136+ 959A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959C CD 07 95     1 call PreviousScan
 138+ 959F 22 84 89     	ld (Posicion_actual),hl
 139+ 95A2 10 E2            djnz 3B
 140+ 95A4 CD A1 AC     2 call Genera_coordenadas
 141+ 95A7 C9           	ret
 142+ 95A8
 143+ 95A8              ; -----------------------------
 144+ 95A8              ;
 145+ 95A8              ;	27/5/23
 146+ 95A8              ;
 147+ 95A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A8              ;
 150+ 95A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A8              ;
 153+ 95A8              ;	Modifica: A y (Puntero_objeto).
 154+ 95A8
 155+ 95A8 3A A3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AB CB 47        	bit 0,a
 157+ 95AD C8           	ret z
 158+ 95AE CB 87        	res 0,a
 159+ 95B0 32 A3 89     	ld (Ctrl_2),a
 160+ 95B3 2A BE 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B6 22 86 89     	ld (Puntero_objeto),hl
 162+ 95B9 C9           	ret
 163+ 95BA
 164+ 95BA              ; ******************************************************************************************************************************************************************************************
 165+ 95BA              ;
 166+ 95BA              ;	19/10/22
 167+ 95BA              ;
 168+ 95BA              ;	Mov_right.
 169+ 95BA              ;
 170+ 95BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BA              ;
 172+ 95BA
 173+ 95BA 3A 9E 89     Mov_right ld a,(Ctrl_0)
 174+ 95BD CB 77        	bit 6,a
 175+ 95BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C1
 177+ 95C1 CD F9 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C5
 180+ 95C5 21 9E 89     	ld hl,Ctrl_0
 181+ 95C8 CB E6        	set 4,(hl)
 182+ 95CA 18 52        	jr 8F
 183+ 95CC
 184+ 95CC 21 9E 89     10 ld hl,Ctrl_0
 185+ 95CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D1              ; 																	; _ en el caso de que no lo haya.
 188+ 95D1 3A 88 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D6 20 46        	jr nz,8F
 191+ 95D8
 192+ 95D8 3A 8A 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DC 28 40        	jr z,8F
 195+ 95DE
 196+ 95DE              ; ---------- ---------- ----------
 197+ 95DE              ;
 198+ 95DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DE
 200+ 95DE 3A A6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E3 28 11        	jr z,1F
 203+ 95E5 38 06        	jr c,6F
 204+ 95E7 FE 04        	cp 4
 205+ 95E9 28 14        	jr z,7F
 206+ 95EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95ED
 208+ 95ED              ; ---------- ---------- ----------
 209+ 95ED              ;
 210+ 95ED              ; Perfiles de velocidad
 211+ 95ED              ;
 212+ 95ED
 213+ 95ED 3A 8A 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F0 FE FE        	cp $fe
 215+ 95F2 20 2A        	jr nz,8F
 216+ 95F4 18 10        	jr 3F
 217+ 95F6 3A 8A 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F9 FE FD        	cp $fd
 219+ 95FB 20 21        	jr nz,8F
 220+ 95FD 18 07        	jr 3F
 221+ 95FF 3A 8A 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9602 FE FB        	cp $fb
 223+ 9604 20 18        	jr nz,8F
 224+ 9606
 225+ 9606              ; ---------- ---------- ----------
 226+ 9606
 227+ 9606              3
 228+ 9606 CD 39 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9609              ;	call Reinicio
 230+ 9609
 231+ 9609              ; ---------- ---------- ----------
 232+ 9609              ;
 233+ 9609              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9609
 235+ 9609 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960C CD 25 96     	call DESPLZ_DER
 238+ 960F C1           	pop bc
 239+ 9610 10 F9        	djnz 5B
 240+ 9612 2A 84 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9615 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9616 22 84 89     	ld (Posicion_actual),hl
 243+ 9619 CD A1 AC     	call Genera_coordenadas
 244+ 961C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961E
 246+ 961E              ; ---------- ---------- ----------
 247+ 961E
 248+ 961E 2A 84 89     8 ld hl,(Posicion_actual)
 249+ 9621 CD 25 96     	call DESPLZ_DER
 250+ 9624 C9           2 ret
 251+ 9625
 252+ 9625              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9625              ;
 254+ 9625              ;	22/9/22
 255+ 9625              ;
 256+ 9625
 257+ 9625 CD 34 96     DESPLZ_DER call Desplaza_derecha
 258+ 9628 CD 80 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962B CD A9 96         call Ciclo_completo
 260+ 962E 21 9E 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9631 CB FE        	set 7,(hl)
 262+ 9633 C9           	ret
 263+ 9634
 264+ 9634              ; ******************************************************************************************************************************************************************************************
 265+ 9634              ;	15/02/23
 266+ 9634              ;
 267+ 9634
 268+ 9634 3A A6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9637 47           	ld b,a
 270+ 9638 2A 90 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963B 23           1 inc hl
 272+ 963C 23           	inc hl
 273+ 963D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963F 22 90 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9642 CD 6C 8C     	call Extrae_address
 276+ 9645 22 86 89     	ld (Puntero_objeto),hl
 277+ 9648
 278+ 9648              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9648
 280+ 9648              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9648              ; Cuántos movimientos hemos hecho ??
 282+ 9648              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9648
 284+ 9648 2A 8C 89     7 ld hl,(Indice_Sprite_der)
 285+ 964B EB           	ex de,hl
 286+ 964C A7           	and a
 287+ 964D ED 52        	sbc hl,de
 288+ 964F CB 3D        	srl l
 289+ 9651 3E 08        6 ld a,8
 290+ 9653 95           	sub l
 291+ 9654 30 1E        	jr nc,3F
 292+ 9656
 293+ 9656              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9656              ; B="0".
 295+ 9656
 296+ 9656 04           4 inc b
 297+ 9657 3C           	inc a
 298+ 9658 20 FC        	jr nz,4B
 299+ 965A 78           	ld a,b
 300+ 965B 08           	ex af,af
 301+ 965C 2A 8C 89     	ld hl,(Indice_Sprite_der)
 302+ 965F 23           5 inc hl
 303+ 9660 23           	inc hl
 304+ 9661 10 FC        	djnz 5B
 305+ 9663 22 90 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9666 CD 6C 8C     	call Extrae_address
 307+ 9669 22 86 89     	ld (Puntero_objeto),hl
 308+ 966C
 309+ 966C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966C              ; _(Posicion_actual).
 311+ 966C
 312+ 966C 21 84 89     	ld hl,Posicion_actual
 313+ 966F 34           	inc (hl)
 314+ 9670 08               ex af,af
 315+ 9671 6F           	ld l,a
 316+ 9672 18 DD        	jr 6B
 317+ 9674
 318+ 9674              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9674
 320+ 9674 47           3 ld b,a
 321+ 9675 2A 8E 89     	ld hl,(Indice_Sprite_izq)
 322+ 9678 23           2 inc hl
 323+ 9679 23           	inc hl
 324+ 967A 10 FC        	djnz 2B
 325+ 967C 22 92 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967F C9           8 ret
 327+ 9680
 328+ 9680              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9680              ;
 330+ 9680              ;	24/7/22
 331+ 9680              ;
 332+ 9680              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9680              ;
 334+ 9680              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9680              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9680              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9680
 338+ 9680 3A 8A 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9683 A7           	and a
 340+ 9684 20 1F        	jr nz,1F
 341+ 9686 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9688 32 8A 89         ld (CTRL_DESPLZ),a
 343+ 968B
 344+ 968B 21 83 89     	ld hl,Columns
 345+ 968E 34           	inc (hl)
 346+ 968F 3A 96 89     	ld a,(Cuad_objeto)
 347+ 9692 E6 01        	and 1
 348+ 9694 28 0F        	jr z,1F
 349+ 9696 2A 84 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9699 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969A 22 84 89     	ld (Posicion_actual),hl
 352+ 969D CD A1 AC     	call Genera_coordenadas
 353+ 96A0 CD 05 98     	call Inc_CTRL_DESPLZ
 354+ 96A3 18 03        	jr 2F
 355+ 96A5 CD 05 98     1 call Inc_CTRL_DESPLZ
 356+ 96A8 C9           2 ret
 357+ 96A9
 358+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A9              ;
 360+ 96A9              ;	24/7/22
 361+ 96A9              ;
 362+ 96A9              ;	Ciclo_completo.
 363+ 96A9              ;
 364+ 96A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A9              ;
 366+ 96A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A9              ; 	Decrementamos (Columns).
 368+ 96A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A9
 371+ 96A9
 372+ 96A9 3A 8A 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AC FE FF        	cp $ff
 374+ 96AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B0 E6 F0        	and $f0
 376+ 96B2 20 28        	jr nz,3F
 377+ 96B4
 378+ 96B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B4
 380+ 96B4 3A 8A 89     	ld a,(CTRL_DESPLZ)
 381+ 96B7 47           	ld b,a
 382+ 96B8 3E F8        	ld a,$f8
 383+ 96BA 80           	add b
 384+ 96BB 32 8A 89     	ld (CTRL_DESPLZ),a
 385+ 96BE 18 1C        	jr 3F
 386+ 96C0 21 83 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C5 32 8A 89     	ld (CTRL_DESPLZ),a
 390+ 96C8 3A 96 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CD 20 0A        	jr nz,2F
 393+ 96CF 2A 84 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D2 23           	inc hl
 395+ 96D3 22 84 89     	ld (Posicion_actual),hl
 396+ 96D6 CD A1 AC     	call Genera_coordenadas
 397+ 96D9
 398+ 96D9              ; Inicia el puntero de Sprite.
 399+ 96D9
 400+ 96D9 CD 81 8C     2 call Inicia_puntero_objeto_der
 401+ 96DC C9           3 ret
 402+ 96DD
 403+ 96DD              ; ******************************************************************************************************************************************************************************************
 404+ 96DD              ;
 405+ 96DD              ;	15/02/23
 406+ 96DD              ;
 407+ 96DD              ;	Mov_left.
 408+ 96DD              ;
 409+ 96DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DD              ;
 411+ 96DD              Mov_left
 412+ 96DD
 413+ 96DD 21 9E 89     	ld hl,Ctrl_0
 414+ 96E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E2              ; 																	; _ en el caso de que no lo haya.
 417+ 96E2 3A 9E 89     	ld a,(Ctrl_0)
 418+ 96E5 CB 77        	bit 6,a
 419+ 96E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E9
 421+ 96E9 CD FF 97     	call Stop_Amadeus_left
 422+ 96EC C8           	ret z
 423+ 96ED 20 4A        	jr nz,8F
 424+ 96EF
 425+ 96EF 3A 88 89     11 ld a,(Coordenada_X)
 426+ 96F2 A7           	and a
 427+ 96F3 20 44        	jr nz,8F
 428+ 96F5
 429+ 96F5 3A 8A 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FB
 433+ 96FB              ; ---------- ---------- ----------
 434+ 96FB
 435+ 96FB 3A A5 89     	ld a,(Vel_left)
 436+ 96FE FE 02        	cp 2
 437+ 9700 28 0F        	jr z,1F
 438+ 9702 38 04        	jr c,6F
 439+ 9704 FE 04        	cp 4
 440+ 9706 28 12        	jr z,7F
 441+ 9708
 442+ 9708              ; ---------- ---------- ----------
 443+ 9708
 444+ 9708 3A 8A 89     6 ld a,(CTRL_DESPLZ)
 445+ 970B FE F8        	cp $f8
 446+ 970D 20 2A        	jr nz,8F
 447+ 970F 18 10        	jr 4F
 448+ 9711 3A 8A 89     1 ld a,(CTRL_DESPLZ)
 449+ 9714 FE F9        	cp $f9
 450+ 9716 20 21        	jr nz,8F
 451+ 9718 18 07        	jr 4F
 452+ 971A 3A 8A 89     7 ld a,(CTRL_DESPLZ)
 453+ 971D FE FB        	cp $fb
 454+ 971F 20 18        	jr nz,8F
 455+ 9721
 456+ 9721              ; ---------- ---------- ----------
 457+ 9721
 458+ 9721              4
 459+ 9721 CD 27 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9724              ;	call Reinicio
 461+ 9724
 462+ 9724              ; ---------- ---------- ----------
 463+ 9724
 464+ 9724 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9726 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9727
 467+ 9727              ;	ld hl,(Indice_Sprite_izq)
 468+ 9727              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9727
 470+ 9727 CD 40 97     	call DESPLZ_IZQ
 471+ 972A C1           	pop bc
 472+ 972B 10 F9        	djnz 5B
 473+ 972D 2A 84 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9730 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9731 22 84 89     	ld (Posicion_actual),hl
 476+ 9734 CD A1 AC     	call Genera_coordenadas
 477+ 9737 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9739
 479+ 9739              ; ---------- ---------- ----------
 480+ 9739
 481+ 9739              ; Movemos, no hay recolocación.
 482+ 9739
 483+ 9739 2A 84 89     8 ld hl,(Posicion_actual)
 484+ 973C CD 40 97     	call DESPLZ_IZQ
 485+ 973F C9           2 ret
 486+ 9740
 487+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9740              ;
 489+ 9740              ;	22/9/22
 490+ 9740
 491+ 9740              DESPLZ_IZQ
 492+ 9740
 493+ 9740 CD 4F 97     	call Desplaza_izquierda
 494+ 9743 CD 9B 97         call modifica_parametros_1er_DESPLZ
 495+ 9746 CD C3 97     	call Ciclo_completo_2
 496+ 9749 21 9E 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974C CB BE        	res 7,(hl)
 498+ 974E C9           	ret
 499+ 974F
 500+ 974F              Desplaza_izquierda
 501+ 974F
 502+ 974F 3A A5 89     	ld a,(Vel_left)
 503+ 9752 47           	ld b,a
 504+ 9753 2A 92 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9756 23           1 inc hl
 506+ 9757 23           	inc hl
 507+ 9758 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975A 22 92 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975D CD 6C 8C     	call Extrae_address
 510+ 9760 22 86 89     	ld (Puntero_objeto),hl
 511+ 9763
 512+ 9763              ; Modifica (Puntero_DESPLZ_der).
 513+ 9763
 514+ 9763              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9763              ; Cuántos movimientos hemos hecho ??
 516+ 9763              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9763
 518+ 9763 2A 8E 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9766 EB           	ex de,hl
 520+ 9767 A7           	and a
 521+ 9768 ED 52        	sbc hl,de
 522+ 976A CB 3D        	srl l
 523+ 976C 3E 08        6 ld a,8
 524+ 976E 95           	sub l
 525+ 976F 30 1E        	jr nc,3F
 526+ 9771
 527+ 9771              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9771              ; B="0".
 529+ 9771
 530+ 9771 04           4 inc b
 531+ 9772 3C           	inc a
 532+ 9773 20 FC        	jr nz,4B
 533+ 9775 78           	ld a,b
 534+ 9776 08           	ex af,af
 535+ 9777 2A 8E 89     	ld hl,(Indice_Sprite_izq)
 536+ 977A 23           5 inc hl
 537+ 977B 23           	inc hl
 538+ 977C 10 FC        	djnz 5B
 539+ 977E 22 92 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9781 CD 6C 8C     	call Extrae_address
 541+ 9784 22 86 89     	ld (Puntero_objeto),hl
 542+ 9787
 543+ 9787              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9787              ; _(Posicion_actual).
 545+ 9787
 546+ 9787 21 84 89     	ld hl,Posicion_actual
 547+ 978A 35           	dec (hl)
 548+ 978B 08           	ex af,af
 549+ 978C 6F           	ld l,a
 550+ 978D 18 DD        	jr 6B
 551+ 978F
 552+ 978F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978F
 554+ 978F 47           3 ld b,a
 555+ 9790 2A 8C 89     	ld hl,(Indice_Sprite_der)
 556+ 9793 23           2 inc hl
 557+ 9794 23           	inc hl
 558+ 9795 10 FC        	djnz 2B
 559+ 9797 22 90 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979A C9           8 ret
 561+ 979B
 562+ 979B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979B              ;
 564+ 979B              ;	modifica_parametros_1er_DESPLZ
 565+ 979B              ;
 566+ 979B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979B
 570+ 979B 3A 8A 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979E A7           	and a
 572+ 979F 20 1E        	jr nz,1F
 573+ 97A1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A2 32 8A 89         ld (CTRL_DESPLZ),a
 575+ 97A5 21 83 89     	ld hl,Columns
 576+ 97A8 34           	inc (hl)
 577+ 97A9 3A 96 89     	ld a,(Cuad_objeto)
 578+ 97AC E6 01        	and 1
 579+ 97AE 20 0F        	jr nz,1F
 580+ 97B0 2A 84 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B4 22 84 89     	ld (Posicion_actual),hl
 583+ 97B7 CD A1 AC     	call Genera_coordenadas
 584+ 97BA CD 16 98     	call Dec_CTRL_DESPLZ
 585+ 97BD 18 03        	jr 2F
 586+ 97BF CD 16 98     1 call Dec_CTRL_DESPLZ
 587+ 97C2 C9           2 ret
 588+ 97C3
 589+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C3
 591+ 97C3 3A 8A 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C6 FE F7        	cp $f7
 593+ 97C8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CA 30 2C        	jr nc,3F
 595+ 97CC
 596+ 97CC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CC
 598+ 97CC 06 00        	ld b,0
 599+ 97CE 04           4 inc b
 600+ 97CF 3C           	inc a
 601+ 97D0 FE F7        	cp $f7
 602+ 97D2 20 FA        	jr nz,4B
 603+ 97D4 3E FF        	ld a,$ff
 604+ 97D6 90           	sub b
 605+ 97D7 32 8A 89     	ld (CTRL_DESPLZ),a
 606+ 97DA 18 1C        	jr 3F
 607+ 97DC
 608+ 97DC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DC
 610+ 97DC 21 83 89     1 ld hl,Columns
 611+ 97DF 35           	dec (hl)
 612+ 97E0 AF           	xor a
 613+ 97E1 32 8A 89     	ld (CTRL_DESPLZ),a
 614+ 97E4 3A 96 89     	ld a,(Cuad_objeto)
 615+ 97E7 E6 01        	and 1
 616+ 97E9 28 0A        	jr z,2F
 617+ 97EB 2A 84 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EE 2B           	dec hl
 619+ 97EF 22 84 89     	ld (Posicion_actual),hl
 620+ 97F2 CD A1 AC     	call Genera_coordenadas
 621+ 97F5
 622+ 97F5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F5
 624+ 97F5 CD 94 8C     2 call Inicia_puntero_objeto_izq
 625+ 97F8 C9           3 ret
 626+ 97F9
 627+ 97F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F9              ;
 629+ 97F9              ;	19/10/22
 630+ 97F9              ;
 631+ 97F9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F9
 634+ 97F9 3A 88 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FE C9           	ret
 637+ 97FF
 638+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FF              ;
 640+ 97FF              ;	19/10/22
 641+ 97FF              ;
 642+ 97FF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FF
 645+ 97FF 3A 88 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9802 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9804 C9           	ret
 648+ 9805
 649+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9805              ;
 651+ 9805              ;	24/7/22
 652+ 9805              ;
 653+ 9805              ;	Inc_CTRL_DESPLZ
 654+ 9805              ;
 655+ 9805              ;
 656+ 9805              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9805
 658+ 9805 21 8A 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9808 3A A6 89     	ld a,(Vel_right)
 660+ 980B A7           	and a
 661+ 980C 28 06        	jr z,1F
 662+ 980E 47           	ld b,a
 663+ 980F 34           3 inc (hl)
 664+ 9810 10 FD        	djnz 3B
 665+ 9812 18 01        	jr 2F
 666+ 9814 34           1 inc (hl)
 667+ 9815 C9           2 ret
 668+ 9816
 669+ 9816              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9816              ;
 671+ 9816              ;	5/2/23
 672+ 9816              ;
 673+ 9816              ;	Dec_CTRL_DESPLZ
 674+ 9816              ;
 675+ 9816              ;
 676+ 9816              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9816
 678+ 9816 21 8A 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9819 3A A5 89     	ld a,(Vel_left)
 680+ 981C A7           	and a
 681+ 981D 28 06        	jr z,1F
 682+ 981F 47           	ld b,a
 683+ 9820 35           3 dec (hl)
 684+ 9821 10 FD        	djnz 3B
 685+ 9823 18 01        	jr 2F
 686+ 9825 35           1 dec (hl)
 687+ 9826 C9           2 ret
 688+ 9827
 689+ 9827              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9827
 691+ 9827 2A 84 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982A 01 1F 00     	ld bc,31
 693+ 982D A7           	and a
 694+ 982E ED 4A        	adc hl,bc
 695+ 9830 22 84 89     	ld (Posicion_actual),hl
 696+ 9833 21 9E 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9836 CB C6        	set 0,(hl)
 698+ 9838 C9           	ret
 699+ 9839
 700+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9839
 702+ 9839 2A 84 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983C 01 1F 00     	ld bc,31
 704+ 983F A7           	and a
 705+ 9840 ED 42        	sbc hl,bc
 706+ 9842 22 84 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9845 21 9E 89     	ld hl,Ctrl_0
 708+ 9848 CB CE        	set 1,(hl)
 709+ 984A C9           	ret
 710+ 984B
 711+ 984B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984B
 713+ 984B 24           Reaparece_abajo inc h
 714+ 984C 01 E0 17     	ld bc,$17e0
 715+ 984F A7           	and a
 716+ 9850 ED 4A        	adc hl,bc
 717+ 9852 22 84 89     	ld (Posicion_actual),hl
 718+ 9855 21 9E 89     	ld hl,Ctrl_0
 719+ 9858 CB D6        	set 2,(hl)
 720+ 985A C9           	ret
 721+ 985B
 722+ 985B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985B
 724+ 985B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985E A7           	and a
 726+ 985F ED 42        	sbc hl,bc
 727+ 9861 22 84 89     	ld (Posicion_actual),hl
 728+ 9864 21 9E 89     	ld hl,Ctrl_0
 729+ 9867 CB DE        	set 3,(hl)
 730+ 9869 C9           	ret
 731+ 986A
 732+ 986A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986A              ;
 734+ 986A              ;	15/07/23
 735+ 986A
 736+ 986A              Reinicio
 737+ 986A
 738+ 986A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986A
 740+ 986A AF           	xor a
 741+ 986B 21 B5 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986E CD 8C 98     	call Limpia_contenido_hl
 743+ 9871
 744+ 9871 21 84 89     	ld hl,Posicion_actual
 745+ 9874 CD 8C 98     	call Limpia_contenido_hl
 746+ 9877
 747+ 9877 CD CE AA     	call Inicializa_Puntero_indice_mov
 748+ 987A CD 58 99     	call Inicia_Puntero_mov
 749+ 987D
 750+ 987D 21 B7 89     	ld hl,Incrementa_puntero
 751+ 9880 06 05        	ld b,5
 752+ 9882 77           1 ld (hl),a
 753+ 9883 23           	inc hl
 754+ 9884 10 FC        	djnz 1B
 755+ 9886
 756+ 9886 21 A3 89     	ld hl,Ctrl_2
 757+ 9889 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988B
 759+ 988B C9           	ret
 760+ 988C
 761+ 988C 77           Limpia_contenido_hl	ld (hl),a
 762+ 988D 23           	inc hl
 763+ 988E 77           	ld (hl),a
 764+ 988F C9           	ret
 765+ 9890
 766+ 9890
# file closed: Direcciones.asm
2026  9890              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9890              ; ----- ----- ----- ----- -----
   2+ 9890              ;
   3+ 9890              ;   28/12/23
   4+ 9890
   5+ 9890              Movimiento
   6+ 9890
   7+ 9890              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9890
   9+ 9890 3A A3 89         ld a,(Ctrl_2)
  10+ 9893 CB 57            bit 2,a
  11+ 9895 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9897
  13+ 9897 2A B3 89         ld hl,(Puntero_mov)
  14+ 989A 7E               ld a,(hl)
  15+ 989B
  16+ 989B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989B
  18+ 989B              Inicia_desplazamiento.
  19+ 989B
  20+ 989B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989B
  22+ 989B CD 8E 99         call Ajusta_velocidad_desplazamiento
  23+ 989E
  24+ 989E              ; Iniciamos (Repetimos_mov).
  25+ 989E
  26+ 989E 7E               ld a,(hl)
  27+ 989F E6 0F            and $0f
  28+ 98A1 32 B9 89         ld (Repetimos_desplazamiento),a
  29+ 98A4 32 BA 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A7
  31+ 98A7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A7
  33+ 98A7 23               inc hl
  34+ 98A8 7E               ld a,(hl)
  35+ 98A9 32 BC 89         ld (Cola_de_desplazamiento),a
  36+ 98AC 2B               dec hl
  37+ 98AD
  38+ 98AD 21 A3 89         ld hl,Ctrl_2
  39+ 98B0 CB D6            set 2,(hl)
  40+ 98B2
  41+ 98B2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B2
  44+ 98B2              Desplazamiento_iniciado
  45+ 98B2
  46+ 98B2 CD 62 99         call Aplica_desplazamiento
  47+ 98B5
  48+ 98B5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B5
  50+ 98B5 3A E5 89         ld a,(Ctrl_3)
  51+ 98B8 CB 4F            bit 1,a
  52+ 98BA C0               ret nz
  53+ 98BB
  54+ 98BB 21 B9 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BE 35               dec (hl)
  56+ 98BF C0               ret nz
  57+ 98C0
  58+ 98C0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C0              ; Analiza (Cola_de_desplazamiento).
  61+ 98C0
  62+ 98C0 3A BC 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C3 A7               and a
  64+ 98C4 CC B7 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C7 28 30            jr z,Reinicia_el_movimiento
  66+ 98C9
  67+ 98C9 FE FF            cp $ff
  68+ 98CB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CD
  70+ 98CD FE FE            cp $fe
  71+ 98CF CC 3C 99         call z,Fijamos_bucle
  72+ 98D2 28 25            jr z,Reinicia_el_movimiento
  73+ 98D4
  74+ 98D4 FE FD            cp $fd
  75+ 98D6 20 11            jr nz,1F
  76+ 98D8
  77+ 98D8              ; ---
  78+ 98D8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D8
  80+ 98D8 3A A3 89         ld a,(Ctrl_2)
  81+ 98DB CB 5F            bit 3,a
  82+ 98DD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DF
  84+ 98DF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DF
  86+ 98DF 21 A3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E4
  89+ 98E4 CD 4D 99         call Inicia_Repetimos_movimiento
  90+ 98E7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E9              ; ---
  92+ 98E9
  93+ 98E9 FE 01        1 cp 1
  94+ 98EB CA 26 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98EE
  96+ 98EE 3D               dec a
  97+ 98EF 32 BC 89         ld (Cola_de_desplazamiento),a
  98+ 98F2
  99+ 98F2 3A BA 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F5 32 B9 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F8 C9               ret
 103+ 98F9
 104+ 98F9              Reinicia_el_movimiento
 105+ 98F9
 106+ 98F9 3A A3 89         ld a,(Ctrl_2)
 107+ 98FC CB 5F            bit 3,a
 108+ 98FE 28 1B            jr z,2F
 109+ 9900
 110+ 9900              ; (Cola_de_desplazamiento)="254".
 111+ 9900
 112+ 9900 21 BB 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9903 35               dec (hl)
 114+ 9904 20 15            jr nz,2F
 115+ 9906
 116+ 9906              ; Fin de las repeticiones del último movimiento.
 117+ 9906
 118+ 9906 21 A3 89         ld hl,Ctrl_2
 119+ 9909 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990B
 121+ 990B 2A B3 89         ld hl,(Puntero_mov)
 122+ 990E 23               inc hl
 123+ 990F 23               inc hl
 124+ 9910 23               inc hl
 125+ 9911 22 B3 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9914              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9914 7E               ld a,(hl)
 128+ 9915 32 BC 89         ld (Cola_de_desplazamiento),a
 129+ 9918
 130+ 9918 C3 C0 98         jp Cola
 131+ 991B
 132+ 991B CD 58 99     2 call Inicia_Puntero_mov
 133+ 991E
 134+ 991E 21 A3 89         ld hl,Ctrl_2
 135+ 9921 CB 96            res 2,(hl)
 136+ 9923
 137+ 9923 C3 90 98         jp Movimiento
 138+ 9926
 139+ 9926              Siguiente_desplazamiento
 140+ 9926
 141+ 9926              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9926              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9926
 144+ 9926 21 A3 89         ld hl,Ctrl_2
 145+ 9929 CB 96            res 2,(hl)
 146+ 992B
 147+ 992B 2A B3 89         ld hl,(Puntero_mov)
 148+ 992E 23               inc hl
 149+ 992F 23               inc hl
 150+ 9930 22 B3 89         ld (Puntero_mov),hl
 151+ 9933
 152+ 9933 7E               ld a,(hl)
 153+ 9934 A7               and a
 154+ 9935 CC B7 99         call z,Incrementa_Puntero_indice_mov
 155+ 9938 CA F9 98         jp z,Reinicia_el_movimiento
 156+ 993B
 157+ 993B C9               ret
 158+ 993C
 159+ 993C              ; Subrutinas -----------------------------------------
 160+ 993C              ; ---------- --------- --------- ---------- ----------
 161+ 993C              ;
 162+ 993C              ;   24/07/23
 163+ 993C              ;
 164+ 993C              ;   Fijamos_bucle
 165+ 993C              ;
 166+ 993C              ;
 167+ 993C
 168+ 993C              Fijamos_bucle
 169+ 993C
 170+ 993C 3A B7 89         ld a,(Incrementa_puntero)
 171+ 993F 3C               inc a
 172+ 9940 32 B8 89         ld (Incrementa_puntero_backup),a
 173+ 9943
 174+ 9943 CD B7 99         call Incrementa_Puntero_indice_mov
 175+ 9946 2A B1 89         ld hl,(Puntero_indice_mov)
 176+ 9949 22 B5 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994C C9               ret
 178+ 994D
 179+ 994D              ; ---------- --------- --------- ---------- ----------
 180+ 994D              ;
 181+ 994D              ;   07/7/23
 182+ 994D              ;
 183+ 994D              ;   Inicia_Repetimos_movimiento
 184+ 994D              ;
 185+ 994D              ;
 186+ 994D
 187+ 994D              Inicia_Repetimos_movimiento
 188+ 994D
 189+ 994D              ; Iniciamos (Repetimos_movimiento).
 190+ 994D
 191+ 994D DD 2A B3 89      ld ix,(Puntero_mov)
 192+ 9951 DD 7E 02         ld a,(ix+2)
 193+ 9954 32 BB 89         ld (Repetimos_movimiento),a
 194+ 9957
 195+ 9957 C9               ret
 196+ 9958
 197+ 9958              ; ---------- --------- --------- ---------- ----------
 198+ 9958              ;
 199+ 9958              ;   26/6/23
 200+ 9958              ;
 201+ 9958              ;   Inicia_Puntero_mov
 202+ 9958              ;
 203+ 9958              ;
 204+ 9958
 205+ 9958 2A B1 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995B CD 6C 8C         call Extrae_address
 207+ 995E 22 B3 89         ld (Puntero_mov),hl
 208+ 9961 C9               ret
 209+ 9962
 210+ 9962              ; ---------- --------- --------- ---------- ----------
 211+ 9962              ;
 212+ 9962              ;   27/06/23
 213+ 9962              ;
 214+ 9962              ;   Aplica_movimiento.
 215+ 9962
 216+ 9962              Aplica_desplazamiento
 217+ 9962
 218+ 9962              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9962
 220+ 9962 2A B3 89         ld hl, (Puntero_mov)
 221+ 9965
 222+ 9965 7E               ld a,(hl)
 223+ 9966 E6 F0            and $f0
 224+ 9968 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9969
 226+ 9969 CB 7E            bit 7,(hl)
 227+ 996B 28 03            jr z,1F
 228+ 996D CD 77 95         call Mov_up
 229+ 9970 2A B3 89     1 ld hl, (Puntero_mov)
 230+ 9973 CB 76            bit 6,(hl)
 231+ 9975 28 03            jr z,2F
 232+ 9977 CD 3E 95         call Mov_down
 233+ 997A
 234+ 997A              ; Se ha aplicado reinicio ???
 235+ 997A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997A
 237+ 997A              ;    ld a,(Ctrl_3)
 238+ 997A              ;    bit 1,a
 239+ 997A              ;    ret nz
 240+ 997A
 241+ 997A 2A B3 89     2 ld hl, (Puntero_mov)
 242+ 997D CB 6E            bit 5,(hl)
 243+ 997F 28 03            jr z,3F
 244+ 9981 CD DD 96         call Mov_left
 245+ 9984 2A B3 89     3 ld hl, (Puntero_mov)
 246+ 9987 CB 66            bit 4,(hl)
 247+ 9989 C8               ret z
 248+ 998A CD BA 95         call Mov_right
 249+ 998D C9               ret
 250+ 998E
 251+ 998E              ; ---------- --------- --------- ---------- ----------
 252+ 998E              ;
 253+ 998E              ;   26/06/23
 254+ 998E              ;
 255+ 998E              ;   Ajusta_velocidad_desplazamiento.
 256+ 998E
 257+ 998E              Ajusta_velocidad_desplazamiento
 258+ 998E
 259+ 998E              ; 1er byte de la cadena de movimiento.
 260+ 998E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998E
 262+ 998E CD AC 99         call Extrae_nibble_alto
 263+ 9991
 264+ 9991 32 A7 89         ld (Vel_up),a
 265+ 9994 79               ld a,c
 266+ 9995 E6 0F            and $0f
 267+ 9997 32 A8 89         ld (Vel_down),a
 268+ 999A
 269+ 999A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999A
 272+ 999A 23               inc hl
 273+ 999B CD AC 99         call Extrae_nibble_alto
 274+ 999E
 275+ 999E 32 A5 89         ld (Vel_left),a
 276+ 99A1 79               ld a,c
 277+ 99A2 E6 0F            and $0f
 278+ 99A4 32 A6 89         ld (Vel_right),a
 279+ 99A7
 280+ 99A7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A7
 282+ 99A7 23               inc hl
 283+ 99A8 22 B3 89         ld (Puntero_mov),hl
 284+ 99AB C9               ret
 285+ 99AC
 286+ 99AC 06 04        Extrae_nibble_alto ld b,4
 287+ 99AE 7E               ld a,(hl)
 288+ 99AF 4F               ld c,a
 289+ 99B0 E6 F0            and $f0
 290+ 99B2 CB 3F        1 srl a
 291+ 99B4 10 FC            djnz 1B
 292+ 99B6 C9               ret
 293+ 99B7
 294+ 99B7              ; ---------- --------- --------- ---------- ----------
 295+ 99B7              ;
 296+ 99B7              ;   5/7/23
 297+ 99B7              ;
 298+ 99B7              ;   Incrementa_Puntero_indice_mov
 299+ 99B7
 300+ 99B7              Incrementa_Puntero_indice_mov
 301+ 99B7
 302+ 99B7 21 B7 89         ld hl,Incrementa_puntero
 303+ 99BA 34               inc (hl)
 304+ 99BB
 305+ 99BB 2A B1 89         ld hl,(Puntero_indice_mov)
 306+ 99BE 01 02 00         ld bc,2
 307+ 99C1 A7               and a
 308+ 99C2 09               add hl,bc
 309+ 99C3 22 B1 89         ld (Puntero_indice_mov),hl
 310+ 99C6
 311+ 99C6 7E               ld a,(hl)
 312+ 99C7 A7               and a
 313+ 99C8
 314+ 99C8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C8
 316+ 99C8              ;    jr z,$
 317+ 99C8
 318+ 99C8              ;! Reinicia el Patrón de movimiento.
 319+ 99C8
 320+ 99C8 CC CD 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CB
 322+ 99CB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CC
 324+ 99CC C9               ret
 325+ 99CD
 326+ 99CD              ; ---------- --------- --------- ---------- ----------
 327+ 99CD              ;
 328+ 99CD              ;   15/01/24
 329+ 99CD              ;
 330+ 99CD              ;   Inicializa_Puntero_indice_mov
 331+ 99CD
 332+ 99CD              Inicializa_Puntero_indice_mov_2
 333+ 99CD
 334+ 99CD              ; Existe etiqueta de bucle principal???
 335+ 99CD
 336+ 99CD 2A B5 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D0 24               inc h
 338+ 99D1 25               dec h
 339+ 99D2 28 05            jr z,2F
 340+ 99D4
 341+ 99D4 22 B1 89         ld (Puntero_indice_mov),hl
 342+ 99D7 18 14            jr 3F
 343+ 99D9
 344+ 99D9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D9
 346+ 99D9 3A B7 89     2 ld a,(Incrementa_puntero)
 347+ 99DC 47               ld b,a
 348+ 99DD
 349+ 99DD 2A B1 89         ld hl,(Puntero_indice_mov)
 350+ 99E0 2B           1 dec hl
 351+ 99E1 2B               dec hl
 352+ 99E2 10 FC            djnz 1B
 353+ 99E4 22 B1 89         ld (Puntero_indice_mov),hl
 354+ 99E7
 355+ 99E7 AF               xor a
 356+ 99E8 32 B7 89         ld (Incrementa_puntero),a
 357+ 99EB 18 06            jr 4F
 358+ 99ED
 359+ 99ED 3A B8 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F0 32 B7 89         ld (Incrementa_puntero),a
 361+ 99F3 C9           4 ret
 362+ 99F4
 363+ 99F4              ; ----------------------------------------------------------------------
 364+ 99F4              ;
 365+ 99F4              ;   30/01/24
 366+ 99F4              ;
 367+ 99F4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F4
 369+ 99F4 3A 81 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F7 CD 02 AC         call Calcula_salto_en_BC
 371+ 99FA 21 A9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FD A7               and a
 373+ 99FE ED 4A            adc hl,bc
 374+ 9A00 C9               ret
 375+ 9A01
 376+ 9A01              ; ----------------------------------------------------------------------
 377+ 9A01              ;
 378+ 9A01              ;   30/01/24
 379+ 9A01              ;
 380+ 9A01              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A01              ;
 382+ 9A01              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A01
 384+ 9A01 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A02 23               inc hl
 386+ 9A03 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A04 69               ld l,c
 388+ 9A05 60               ld h,b
 389+ 9A06 22 9C 89         ld (Contador_de_mov_masticados),hl
 390+ 9A09 C9               ret
 391+ 9A0A
# file closed: Movimiento.asm
2027  9A0A
2028  9A0A
2029  9A0A              ;	include "Disparo.asm"
2030  9A0A
2031  9A0A
2032  9A0A              	SAVESNA "Pruebas.sna", START
2033  9A0A
2034  9A0A
2035  9A0A
2036  9A0A
# file closed: Banco_de_pruebas.asm
