# file opened: Banco_de_pruebas.asm
   1  0000              ;	29/12/23
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 32 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ;! debuggg
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  39  AA15
  40  AA15 3E 02        	ld a,2
  41  AA17 D3 FE        	out ($fe),a
  42  AA19 CD B9 8E     	call Pinta_entidades									; Borde rojo.
  43  AA1C
  44  AA1C              ;	ld a,6
  45  AA1C              ;	out ($fe),a
  46  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  47  AA1C
  48  AA1C 3E 07        	ld a,7
  49  AA1E D3 FE        	out ($fe),a												; Borde blanco.
  50  AA20              ;	call Guarda_parametros_DRAW
  51  AA20              ;	call Restore_Amadeus
  52  AA20
  53  AA20              ; Posible colisión Entidad-Amadeus ???
  54  AA20
  55  AA20              ;	ld a,(Impacto2)
  56  AA20              ;	bit 2,a
  57  AA20              ;	jr z,1F
  58  AA20
  59  AA20              ;	call Detecta_colision_nave_entidad
  60  AA20
  61  AA20              ;1 ld a,4
  62  AA20              ;	out ($fe),a
  63  AA20              ;	call Gestiona_Amadeus
  64  AA20
  65  AA20              ;	ld a,7
  66  AA20              ;	out ($fe),a											; Borde blanco.
  67  AA20              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA20              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA20
  70  AA20              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA20
  72  AA20              ;	call Recupera_parametros_DRAW
  73  AA20 CD C9 8E     	call Actualiza_relojes
  74  AA23
  75  AA23 21 3C 89     	ld hl,Ctrl_3
  76  AA26 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA28
  78  AA28 FD E1        	pop iy
  79  AA2A DD E1        	pop ix
  80  AA2C F1           	pop af
  81  AA2D C1           	pop bc
  82  AA2E D1           	pop de
  83  AA2F E1           	pop hl
  84  AA30 D9           	exx
  85  AA31 C1           	pop bc
  86  AA32 D1           	pop de
  87  AA33 E1           	pop hl
  88  AA34 08           	ex af,af'
  89  AA35 F1           	pop af
  90  AA36 08           	ex af,af'
  91  AA37 D9           	exx
  92  AA38
  93  AA38 ED 7B 32 89  	ld sp,(Stack_3)
  94  AA3C
  95  AA3C FB           	ei
  96  AA3D
  97  AA3D 3E 01        	ld a,1												; Borde azul.
  98  AA3F D3 FE        	out ($fe),a
  99  AA41
 100  AA41 C9           	ret
 101  AA42
 102  AA42              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA42
 104  AA42              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA42              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA42              ;
   3+ AA42              ;	17/02/23
   4+ AA42              ;
   5+ AA42              ;	Sprites e índices.
   6+ AA42
   7+ AA42              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C3 85        	defw Caja_1
 103+ 856E 08 86        	defw Caja_2
 104+ 8570 4D 86        	defw Caja_3
 105+ 8572 92 86        	defw Caja_4
 106+ 8574 D7 86        	defw Caja_5
 107+ 8576 1C 87        	defw Caja_6
 108+ 8578 61 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 148+ 85B0
 149+ 85B0 00           	db 0											; (Autoriza_movimiento).
 150+ 85B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 150+ 85B5 00 00
 151+ 85B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 152+ 85BA
 153+ 85BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 154+ 85BC 00           	db 0											; (Cola_de_desplazamiento).
 155+ 85BD
 156+ 85BD 00           	db 0 											; (Columnas).
 157+ 85BE 00 00        	defw 0											; (Limite_horizontal).
 158+ 85C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 159+ 85C3
 160+ 85C3              ; ---------- ---------- ---------- ---------- ----------
 161+ 85C3
 162+ 85C3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 163+ 85C5 00 00        	defw 0											; (Posicion_actual).
 164+ 85C7 00 00        	defw 0 											; (Puntero_objeto).
 165+ 85C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 166+ 85CC
 167+ 85CC 00           	db %00000000 									; (Attr).
 168+ 85CD
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_der).
 170+ 85CF 00 00        	defw 0											; (Indice_Sprite_izq).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 172+ 85D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 173+ 85D5
 174+ 85D5 00 00        	defw 0											; (Posicion_inicio).
 175+ 85D7 00           	db 0											; (Cuad_objeto).
 176+ 85D8
 177+ 85D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 178+ 85DC
 179+ 85DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 180+ 85DD
 181+ 85DD 00 00 00...  	ds 6											; Variables_de_borrado
 182+ 85E3
 183+ 85E3 00 00        	db 0,0											; Variables_de_pintado
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00        	defw 0											;	" " " " " " "
 186+ 85E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 187+ 85ED
 188+ 85ED 00 00        	defw 0 											; Puntero_de_impresion.
 189+ 85EF
 190+ 85EF D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 191+ 85F1 00 00        	defw 0 											; Contador_de_mov_masticados
 192+ 85F3
 193+ 85F3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 194+ 85F5
 195+ 85F5 00           	db 0											; (Autoriza_movimiento).
 196+ 85F6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 196+ 85FA 00 00
 197+ 85FC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 198+ 85FF
 199+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 200+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 201+ 8602
 202+ 8602 00           	db 0 											; (Columnas).
 203+ 8603 00 00        	defw 0											; (Limite_horizontal).
 204+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 205+ 8608
 206+ 8608              ; ---------- ---------- ---------- ---------- ----------
 207+ 8608
 208+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 209+ 860A 00 00        	defw 0											; (Posicion_actual).
 210+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 211+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 212+ 8611
 213+ 8611 00           	db %00000000 									; (Attr).
 214+ 8612
 215+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 216+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 217+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 218+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 219+ 861A
 220+ 861A 00 00        	defw 0											; (Posicion_inicio).
 221+ 861C 00           	db 0											; (Cuad_objeto).
 222+ 861D
 223+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 224+ 8621
 225+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 226+ 8622
 227+ 8622 00 00 00...  	ds 6											; Variables_de_borrado
 228+ 8628
 229+ 8628 00 00        	db 0,0											; Variables_de_pintado
 230+ 862A 00 00        	defw 0											;	" " " " " " "
 231+ 862C 00 00        	defw 0											;	" " " " " " "
 232+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 233+ 8632
 234+ 8632 00 00        	defw 0 											; Puntero_de_impresion.
 235+ 8634
 236+ 8634 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 237+ 8636 00 00        	defw 0 											; Contador_de_mov_masticados
 238+ 8638
 239+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 240+ 863A
 241+ 863A 00           	db 0											; (Autoriza_movimiento).
 242+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 242+ 863F 00 00
 243+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 244+ 8644
 245+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 246+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 247+ 8647
 248+ 8647 00           	db 0 											; (Columnas).
 249+ 8648 00 00        	defw 0											; (Limite_horizontal).
 250+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 251+ 864D
 252+ 864D              ; ---------- ---------- ---------- ---------- ----------
 253+ 864D
 254+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 255+ 864F 00 00        	defw 0											; (Posicion_actual).
 256+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 257+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 258+ 8656
 259+ 8656 00           	db %00000000 									; (Attr).
 260+ 8657
 261+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 262+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 263+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 264+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 265+ 865F
 266+ 865F 00 00        	defw 0											; (Posicion_inicio).
 267+ 8661 00           	db 0											; (Cuad_objeto).
 268+ 8662
 269+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 270+ 8666
 271+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 272+ 8667
 273+ 8667 00 00 00...  	ds 6											; Variables_de_borrado
 274+ 866D
 275+ 866D 00 00        	db 0,0											; Variables_de_pintado
 276+ 866F 00 00        	defw 0											;	" " " " " " "
 277+ 8671 00 00        	defw 0											;	" " " " " " "
 278+ 8673 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 279+ 8677
 280+ 8677 00 00        	defw 0 											; Puntero_de_impresion.
 281+ 8679
 282+ 8679 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 283+ 867B 00 00        	defw 0 											; Contador_de_mov_masticados
 284+ 867D
 285+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 286+ 867F
 287+ 867F 00           	db 0											; (Autoriza_movimiento).
 288+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 288+ 8684 00 00
 289+ 8686 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 290+ 8689
 291+ 8689 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 292+ 868B 00           	db 0											; (Cola_de_desplazamiento).
 293+ 868C
 294+ 868C 00           	db 0 											; (Columnas).
 295+ 868D 00 00        	defw 0											; (Limite_horizontal).
 296+ 868F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 297+ 8692
 298+ 8692              ; ---------- ---------- ---------- ---------- ----------
 299+ 8692
 300+ 8692 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 301+ 8694 00 00        	defw 0											; (Posicion_actual).
 302+ 8696 00 00        	defw 0 											; (Puntero_objeto).
 303+ 8698 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 304+ 869B
 305+ 869B 00           	db %00000000 									; (Attr).
 306+ 869C
 307+ 869C 00 00        	defw 0											; (Indice_Sprite_der).
 308+ 869E 00 00        	defw 0											; (Indice_Sprite_izq).
 309+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 310+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 311+ 86A4
 312+ 86A4 00 00        	defw 0											; (Posicion_inicio).
 313+ 86A6 00           	db 0											; (Cuad_objeto).
 314+ 86A7
 315+ 86A7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 316+ 86AB
 317+ 86AB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 318+ 86AC
 319+ 86AC 00 00 00...  	ds 6											; Variables_de_borrado
 320+ 86B2
 321+ 86B2 00 00        	db 0,0											; Variables_de_pintado
 322+ 86B4 00 00        	defw 0											;	" " " " " " "
 323+ 86B6 00 00        	defw 0											;	" " " " " " "
 324+ 86B8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 325+ 86BC
 326+ 86BC 00 00        	defw 0 											; Puntero_de_impresion.
 327+ 86BE
 328+ 86BE D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 329+ 86C0 00 00        	defw 0 											; Contador_de_mov_masticados
 330+ 86C2
 331+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 332+ 86C4
 333+ 86C4 00           	db 0											; (Autoriza_movimiento).
 334+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 334+ 86C9 00 00
 335+ 86CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 336+ 86CE
 337+ 86CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 338+ 86D0 00           	db 0											; (Cola_de_desplazamiento).
 339+ 86D1
 340+ 86D1 00           	db 0 											; (Columnas).
 341+ 86D2 00 00        	defw 0											; (Limite_horizontal).
 342+ 86D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 343+ 86D7
 344+ 86D7              ; ---------- ---------- ---------- ---------- ----------
 345+ 86D7
 346+ 86D7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 347+ 86D9 00 00        	defw 0											; (Posicion_actual).
 348+ 86DB 00 00        	defw 0 											; (Puntero_objeto).
 349+ 86DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 350+ 86E0
 351+ 86E0 00           	db %00000000 									; (Attr).
 352+ 86E1
 353+ 86E1 00 00        	defw 0											; (Indice_Sprite_der).
 354+ 86E3 00 00        	defw 0											; (Indice_Sprite_izq).
 355+ 86E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 356+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 357+ 86E9
 358+ 86E9 00 00        	defw 0											; (Posicion_inicio).
 359+ 86EB 00           	db 0											; (Cuad_objeto).
 360+ 86EC
 361+ 86EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 362+ 86F0
 363+ 86F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 364+ 86F1
 365+ 86F1 00 00 00...  	ds 6											; Variables_de_borrado
 366+ 86F7
 367+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 368+ 86F9 00 00        	defw 0											;	" " " " " " "
 369+ 86FB 00 00        	defw 0											;	" " " " " " "
 370+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 371+ 8701
 372+ 8701 00 00        	defw 0 											; Puntero_de_impresion.
 373+ 8703
 374+ 8703 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 375+ 8705 00 00        	defw 0 											; Contador_de_mov_masticados
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 378+ 8709
 379+ 8709 00           	db 0											; (Autoriza_movimiento).
 380+ 870A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 380+ 870E 00 00
 381+ 8710 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 382+ 8713
 383+ 8713 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 384+ 8715 00           	db 0											; (Cola_de_desplazamiento).
 385+ 8716
 386+ 8716 00           	db 0 											; (Columnas).
 387+ 8717 00 00        	defw 0											; (Limite_horizontal).
 388+ 8719 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 389+ 871C
 390+ 871C              ; ---------- ---------- ---------- ---------- ----------
 391+ 871C
 392+ 871C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 393+ 871E 00 00        	defw 0											; (Posicion_actual).
 394+ 8720 00 00        	defw 0 											; (Puntero_objeto).
 395+ 8722 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 396+ 8725
 397+ 8725 00           	db %00000000 									; (Attr).
 398+ 8726
 399+ 8726 00 00        	defw 0											; (Indice_Sprite_der).
 400+ 8728 00 00        	defw 0											; (Indice_Sprite_izq).
 401+ 872A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 402+ 872C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 403+ 872E
 404+ 872E 00 00        	defw 0											; (Posicion_inicio).
 405+ 8730 00           	db 0											; (Cuad_objeto).
 406+ 8731
 407+ 8731 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 8735
 409+ 8735 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 410+ 8736
 411+ 8736 00 00 00...  	ds 6											; Variables_de_borrado
 412+ 873C
 413+ 873C 00 00        	db 0,0											; Variables_de_pintado
 414+ 873E 00 00        	defw 0											;	" " " " " " "
 415+ 8740 00 00        	defw 0											;	" " " " " " "
 416+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8746
 418+ 8746 00 00        	defw 0 											; Puntero_de_impresion.
 419+ 8748
 420+ 8748 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 421+ 874A 00 00        	defw 0 											; Contador_de_mov_masticados
 422+ 874C
 423+ 874C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 424+ 874E
 425+ 874E 00           	db 0											; (Autoriza_movimiento).
 426+ 874F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 426+ 8753 00 00
 427+ 8755 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 428+ 8758
 429+ 8758 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 430+ 875A 00           	db 0											; (Cola_de_desplazamiento).
 431+ 875B
 432+ 875B 00           	db 0 											; (Columnas).
 433+ 875C 00 00        	defw 0											; (Limite_horizontal).
 434+ 875E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 8761
 436+ 8761              ; ---------- ---------- ---------- ---------- ----------
 437+ 8761
 438+ 8761 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 439+ 8763 00 00        	defw 0											; (Posicion_actual).
 440+ 8765 00 00        	defw 0 											; (Puntero_objeto).
 441+ 8767 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 442+ 876A
 443+ 876A 00           	db %00000000 									; (Attr).
 444+ 876B
 445+ 876B 00 00        	defw 0											; (Indice_Sprite_der).
 446+ 876D 00 00        	defw 0											; (Indice_Sprite_izq).
 447+ 876F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 448+ 8771 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 449+ 8773
 450+ 8773 00 00        	defw 0											; (Posicion_inicio).
 451+ 8775 00           	db 0											; (Cuad_objeto).
 452+ 8776
 453+ 8776 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 454+ 877A
 455+ 877A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 456+ 877B
 457+ 877B 00 00 00...  	ds 6											; Variables_de_borrado
 458+ 8781
 459+ 8781 00 00        	db 0,0											; Variables_de_pintado
 460+ 8783 00 00        	defw 0											;	" " " " " " "
 461+ 8785 00 00        	defw 0											;	" " " " " " "
 462+ 8787 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 463+ 878B
 464+ 878B 00 00        	defw 0 											; Puntero_de_impresion.
 465+ 878D
 466+ 878D D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 467+ 878F 00 00        	defw 0 											; Contador_de_mov_masticados
 468+ 8791
 469+ 8791 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 470+ 8793
 471+ 8793 00           	db 0											; (Autoriza_movimiento).
 472+ 8794 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 472+ 8798 00 00
 473+ 879A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 474+ 879D
 475+ 879D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 476+ 879F 00           	db 0											; (Cola_de_desplazamiento).
 477+ 87A0
 478+ 87A0 00           	db 0 											; (Columnas).
 479+ 87A1 00 00        	defw 0											; (Limite_horizontal).
 480+ 87A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 481+ 87A6
 482+ 87A6              ; -------------------------------------------------------------------------------------
 483+ 87A6              ;
 484+ 87A6              ;	20/05/23
 485+ 87A6              ;
 486+ 87A6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 487+ 87A6              ;
 488+ 87A6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 489+ 87A6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 490+ 87A6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 491+ 87A6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 492+ 87A6
 493+ 87A6              Indice_de_entidades
 494+ 87A6
 495+ 87A6 AA 87        	defw Entidad_1
 496+ 87A8 BA 87        	defw Entidad_2
 497+ 87AA
 498+ 87AA              ;	BADSAT, (Satélite malvado).
 499+ 87AA
 500+ 87AA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 501+ 87AC 04           	db %00000100									; (Attr).
 502+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 503+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 504+ 87B1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 505+ 87B3 01           	db 1											; (Cuad_objeto).
 506+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 507+ 87B8 B1 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 508+ 87BA
 509+ 87BA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 510+ 87BC 02           	db %00000010									; (Attr).
 511+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 512+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 513+ 87C1 40 50        	defw $5040                                      ; (Posicion_inicio).
 514+ 87C3 01           	db 1											; (Cuad_objeto).
 515+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 516+ 87C8 B1 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 517+ 87CA
# file closed: Cajas_y_disparos.asm
 106  87CA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87CA              ; 13/05/23
   2+ 87CA
   3+ 87CA              Indice_de_niveles
   4+ 87CA
   5+ 87CA D8 87        	defw Nivel_1
   6+ 87CC DE 87        	defw Nivel_2
   7+ 87CE EB 87        	defw Nivel_3
   8+ 87D0 FB 87        	defw Nivel_4
   9+ 87D2 0D 88        	defw Nivel_5
  10+ 87D4              ;	...
  11+ 87D4              ;	...
  12+ 87D4              ;	+ Niveles ...
  13+ 87D4
  14+ 87D4 00 00        	defw 0
  15+ 87D6 00 00        	defw 0
  16+ 87D8
  17+ 87D8 05           Nivel_1 db 5	                                ; Nº de entidades.
  18+ 87D9 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87DD 01
  19+ 87DE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87DF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87E3 01 02
  21+ 87E5 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87E9 01 02
  22+ 87EB 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87EC 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87F0 01
  24+ 87F1 03 01 01 01  	db 3,1,1,1,1
  24+ 87F5 01
  25+ 87F6 03 01 01 01  	db 3,1,1,1,1
  25+ 87FA 01
  26+ 87FB 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87FC 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 8800 01
  28+ 8801 04 01 01 01  	db 4,1,1,1,1
  28+ 8805 01
  29+ 8806 04 01 01 01  	db 4,1,1,1,1
  29+ 880A 01
  30+ 880B 02 03        	db 2,3
  31+ 880D 14           Nivel_5 db 20									; Nº de entidades.
  32+ 880E 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8812 01
  33+ 8813 05 01 01 01  	db 5,1,1,1,1
  33+ 8817 01
  34+ 8818 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 881C 01
  35+ 881D 05 01 01 01  	db 5,1,1,1,1
  35+ 8821 01
  36+ 8822
  37+ 8822              ;---------------------------------------------------------------------------------------------------------------
  38+ 8822              ;
  39+ 8822              ;   3/9/23
  40+ 8822              ;
  41+ 8822              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8822              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8822              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8822              ;	_en la caja DRAW correspondiente.
  45+ 8822              ;
  46+ 8822              ;	MODIFICA: HL,DE y A.
  47+ 8822              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8822
  49+ 8822              Inicializa_Punteros_de_nivel
  50+ 8822
  51+ 8822 21 CA 87     	ld hl,Indice_de_niveles
  52+ 8825 22 5A 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8828 CD 4B 8D     	call Extrae_address
  54+ 882B 7E           	ld a,(hl)
  55+ 882C 32 26 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 882F 23           	inc hl
  57+ 8830 22 5C 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8833 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8834
  60+ 8834              ;---------------------------------------------------------------------------------------------------------------
  61+ 8834              ;
  62+ 8834              ;   13/5/23
  63+ 8834              ;
  64+ 8834              ;	Destruye A,BC,HL,DE
  65+ 8834
  66+ 8834              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8834              ;	_del juego.
  68+ 8834
  69+ 8834              Prepara_cajas
  70+ 8834
  71+ 8834              ; Preparamos los punteros de las cajas.
  72+ 8834
  73+ 8834 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8837 CD 4B 8D     	call Extrae_address
  75+ 883A CD 77 88     	call Avanza_caja
  76+ 883D
  77+ 883D CD BB 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8840
  79+ 8840 2A 5C 89     	ld hl,(Datos_de_nivel)
  80+ 8843
  81+ 8843              ; HL está en los datos del nivel correspondiente.
  82+ 8843              ; B actuará como contador de cajas.
  83+ 8843
  84+ 8843 C5           1 push bc
  85+ 8844
  86+ 8844 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8845 CD 68 88     	call PreparaBC
  88+ 8848
  89+ 8848 21 A6 87     	ld hl,Indice_de_entidades
  90+ 884B CD 70 88     	call SBC_HL_con_BC_y_Extrae
  91+ 884E 22 2C 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8851
  93+ 8851 CD 81 88     	call Datos_de_entidad_a_caja
  94+ 8854
  95+ 8854 2A 24 89     	ld hl,(Indice_restore_caja)
  96+ 8857 CD 4B 8D     	call Extrae_address
  97+ 885A CD 77 88     	call Avanza_caja
  98+ 885D
  99+ 885D 2A 5C 89     	ld hl,(Datos_de_nivel)
 100+ 8860 23           	inc hl
 101+ 8861 22 5C 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8864
 103+ 8864 C1           	pop bc
 104+ 8865 10 DC        	djnz 1B
 105+ 8867 C9           	ret
 106+ 8868
 107+ 8868 CB 27        PreparaBC sla a
 108+ 886A D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 886C 4F           	ld c,a
 110+ 886D 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 886F C9           	ret
 112+ 8870
 113+ 8870 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8871 ED 4A        	adc hl,bc
 115+ 8873 CD 4B 8D     	call Extrae_address
 116+ 8876 C9           	ret
 117+ 8877
 118+ 8877 22 20 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 887A 13           	inc de
 120+ 887B 13           	inc de
 121+ 887C EB           	ex de,hl
 122+ 887D 22 24 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8880 C9           	ret
 124+ 8881
 125+ 8881              Datos_de_entidad_a_caja
 126+ 8881
 127+ 8881              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8881
 129+ 8881
 130+ 8881 ED 5B 20 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8885
 132+ 8885 01 02 00     	ld bc,2
 133+ 8888 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 888A
 135+ 888A 01 07 00     	ld bc,7
 136+ 888D CD B5 88     	call Situa_DE
 137+ 8890
 138+ 8890 01 05 00     	ld bc,5
 139+ 8893 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8895
 141+ 8895 01 04 00     	ld bc,4
 142+ 8898 CD B5 88     	call Situa_DE
 143+ 889B
 144+ 889B 01 07 00     	ld bc,7
 145+ 889E ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88A0
 147+ 88A0 01 18 00     	ld bc,24
 148+ 88A3 CD B5 88     	call Situa_DE
 149+ 88A6
 150+ 88A6 01 02 00     	ld bc,2
 151+ 88A9 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88AB
 153+ 88AB              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88AB              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88AB
 156+ 88AB 01 0F 00     	ld bc,15									; *****
 157+ 88AE CD B5 88     	call Situa_DE
 158+ 88B1
 159+ 88B1 3E 03        	ld a,3
 160+ 88B3 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88B4
 162+ 88B4 C9           	ret
 163+ 88B5
 164+ 88B5 EB           Situa_DE ex de,hl
 165+ 88B6 A7           	and a
 166+ 88B7 ED 4A        	adc hl,bc
 167+ 88B9 EB           	ex de,hl
 168+ 88BA C9           	ret
 169+ 88BB
 170+ 88BB              ;---------------------------------------------------------------------------------------------------------------
 171+ 88BB              ;
 172+ 88BB              ;	21/5/23
 173+ 88BB              ;
 174+ 88BB              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88BB              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88BB              ;
 177+ 88BB              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88BB              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88BB              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88BB              ;
 181+ 88BB              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88BB              ;	MODIFICA: A y B.
 183+ 88BB              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88BB
 185+ 88BB              Admin_num_entidades
 186+ 88BB
 187+ 88BB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88BB
 189+ 88BB 3A 26 89     	ld a,(Numero_de_entidades)
 190+ 88BE A7           	and a
 191+ 88BF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88BF              ;	jr z,$
 193+ 88BF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88BF
 195+ 88BF 20 03        	jr nz,3F
 196+ 88C1
 197+ 88C1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88C1
 199+ 88C1 CD 22 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88C4
 201+ 88C4 3A 26 89     3 ld a,(Numero_de_entidades)
 202+ 88C7 FE 07        	cp 7
 203+ 88C9 38 08        	jr c,1F
 204+ 88CB
 205+ 88CB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88CB              ; Actualizamos variables.
 207+ 88CB
 208+ 88CB 3E 07        	ld a,7
 209+ 88CD 32 27 89     	ld (Numero_parcial_de_entidades),a
 210+ 88D0 47           	ld b,a
 211+ 88D1 18 04        	jr 2F
 212+ 88D3
 213+ 88D3              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88D3              ; (Numero_de_entidades)="0".
 215+ 88D3
 216+ 88D3 32 27 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88D6 47           	ld b,a
 218+ 88D7 C9           2 ret
# file closed: Niveles.asm
 107  88D8
 108  88D8              ; ******************************************************************************************************************************************************************************************
 109  88D8              ; Constantes.
 110  88D8              ; ******************************************************************************************************************************************************************************************
 111  88D8              ;
 112  88D8              ; 25/12/23
 113  88D8
 114  88D8              ;
 115  88D8              ; Constantes.
 116  88D8              ;
 117  88D8
 118  88D8              Sprite_vacio equ $f000
 119  88D8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  88D8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  88D8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  88D8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  88D8
 124  88D8              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  88D8              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 126  88D8              ;														; 4799 bytes, 4,8Kb.
 127  88D8              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  88D8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  88D8              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  88D8              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  88D8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  88D8
 133  88D8              ;														; 55 Bytes.
 134  88D8              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  88D8              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  88D8
 137  88D8              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  88D8
 139  88D8              ; ******************************************************************************************************************************************************************************************
 140  88D8              ; Variables.
 141  88D8              ; ******************************************************************************************************************************************************************************************
 142  88D8              ;
 143  88D8              ; 25/12//23
 144  88D8              ;
 145  88D8              ; Variables de DRAW. (Motor principal).
 146  88D8              ;
 147  88D8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 148  88D8
 149  88D8 00           Filas db 0												; Filas. [DRAW]
 150  88D9 00           Columns db 0  											; Nº de columnas. [DRAW]
 151  88DA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 152  88DC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 153  88DE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 154  88DF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 155  88E0
 156  88E0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 157  88E0
 158  88E0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 159  88E1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 160  88E1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 161  88E1 00           Attr db 0												; Atributos de la entidad:
 162  88E2
 163  88E2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 164  88E2              ;
 165  88E2              ;	COLORES: 0 ..... NEGRO
 166  88E2              ;    		 1 ..... AZUL
 167  88E2              ; 			 2 ..... ROJO
 168  88E2              ;			 3 ..... MAGENTA
 169  88E2              ; 			 4 ..... VERDE
 170  88E2              ; 			 5 ..... CIAN
 171  88E2              ;			 6 ..... AMARILLO
 172  88E2              ; 			 7 ..... BLANCO
 173  88E2
 174  88E2 00 00        Indice_Sprite_der defw 0
 175  88E4 00 00        Indice_Sprite_izq defw 0
 176  88E6 00 00        Puntero_DESPLZ_der defw 0
 177  88E8 00 00        Puntero_DESPLZ_izq defw 0
 178  88EA
 179  88EA 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 180  88EC 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 181  88ED
 182  88ED              ; Variables de objeto. (Características).
 183  88ED
 184  88ED 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 185  88EE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 186  88EF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 187  88F0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 188  88F1
 189  88F1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  88F2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  88F2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  88F2 00 00 00...  Variables_de_borrado ds 6
 193  88F8
 194  88F8 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 195  88FA 00 00        	defw 0
 196  88FC 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 197  88FE 00 00 00 00  	db 0,0,0,0
 198  8902
 199  8902 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 200  8904              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 201  8904
 202  8904 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 203  8906
 204  8906              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 205  8906              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 206  8906
 207  8906 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 208  8908              ;														; _palabras que componen el "movimiento_masticado".
 209  8908
 210  8908              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 211  8908
 212  8908 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8909              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8909              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8909              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8909              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8909              ;
 218  8909              ; 														DESCRIPCIÖN:
 219  8909              ;
 220  8909              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8909              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8909              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8909              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8909              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8909              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8909              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8909              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8909              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8909              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8909              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8909              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8909              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8909              ;
 234  8909              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8909              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8909              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8909
 238  8909              ; Movimiento. ------------------------------------------------------------------------------------------------------
 239  8909
 240  8909 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 241  890B 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 242  890D 00 00        Puntero_indice_mov_bucle defw 0							;
 243  890F              ;
 244  890F              ;
 245  890F 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 246  8910              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 247  8910              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 248  8910 00           Incrementa_puntero_backup db 0
 249  8911 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 250  8912              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 251  8912 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 252  8913 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 253  8914 00           Cola_de_desplazamiento db 0								; Este byte indica:
 254  8915              ;
 255  8915              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 256  8915              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 257  8915              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 258  8915              ;
 259  8915              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 260  8915              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 261  8915              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 262  8915              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 263  8915              ;
 264  8915              ;														;	"$ff" ..... Bucle infinito de repetición.
 265  8915              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 266  8915              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 267  8915
 268  8915
 269  8915              ; Variables de funcionamiento. [DRAW].
 270  8915
 271  8915 00           Columnas db 0
 272  8916 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8918              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8918 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8919
 276  8919              ; variables de control general.
 277  8919
 278  8919 00           Ctrl_2 db 0
 279  891A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 280  891A              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 281  891A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 282  891A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 283  891A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 284  891A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 285  891A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 286  891A              ;
 287  891A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 288  891A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 289  891A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 290  891A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 291  891A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 292  891A              ;														BIT 4, ???
 293  891A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 294  891A
 295  891A 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 296  891B
 297  891B              ;! 67 Bytes por entidad.
 298  891B
 299  891B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 300  891B              ;					         		---------;      ;---------
 301  891B
 302  891B
 303  891B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 304  891B
 305  891B 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 306  891D
 307  891D 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 308  891E
 309  891E              ;														DESCRIPCIÓN:
 310  891E              ;
 311  891E              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 312  891E              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 313  891E              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 314  891E              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 315  891E              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 316  891E              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 317  891E
 318  891E              ;														BIT 3, Recarga de nueva oleada.
 319  891E              ;														BIT 4, Recarga de nueva oleada.
 320  891E              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 321  891E              ;														BIT 6, **** Frame completo.
 322  891E              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 323  891E
 324  891E 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 325  8920              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 326  8920              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 327  8920              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 328  8920
 329  8920              ; Gestión de ENTIDADES y CAJAS.
 330  8920
 331  8920 00 00        Puntero_store_caja defw 0
 332  8922 00 00        Puntero_restore_caja defw 0
 333  8924 00 00        Indice_restore_caja defw 0
 334  8926 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 335  8927 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 336  8928 00           Entidades_en_curso db 0									; ..... ..... .....
 337  8929 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 338  892A              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 339  892A              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 340  892A              ;														; _ (Numero_de_malotes)="0".
 341  892A 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 342  892C 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 343  892E              ;														; _ puntero (Indice_entidades).
 344  892E
 345  892E              ;---------------------------------------------------------------------------------------------------------------
 346  892E              ;
 347  892E              ;	18/11/23
 348  892E              ;
 349  892E              ;	Álbumes.
 350  892E
 351  892E 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 352  8930              ;														; _variable para almacenar lo posición del puntero_
 353  8930              ; 														; _de pila, SP.
 354  8930 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 355  8932              ;														; La utiliza la rutina [Extrae_foto_registros].
 356  8932 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 357  8934 00 70        Stack_snapshot defw Album_de_fotos
 358  8936 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 359  8938
 360  8938              ;End_Snapshot defw Album_de_fotos
 361  8938              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 362  8938 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 363  893A              ;														; _el snapshot de los registros del siguiente disparo.
 364  893A              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 365  893A AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 366  893C
 367  893C 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 368  893D              ;
 369  893D              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 370  893D              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 371  893D              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 372  893D              ;																_ no se inicia una nueva "Entidad_guía".
 373  893D              ; Gestión de Disparos.
 374  893D
 375  893D 00           Numero_de_disparotes db 0
 376  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 377  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 378  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 379  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 380  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 381  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 382  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 383  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 384  8945              ;														; _produzca colisión.
 385  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 386  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 387  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 388  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 389  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 390  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 391  894D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 392  894E
 393  894E              ;---------------------------------------------------------------------------------------------------------------
 394  894E
 395  894E              ; Relojes y temporizaciones.
 396  894E
 397  894E 00           Contador_de_frames db 0
 398  894F 00           Contador_de_frames_2 db 0
 399  8950
 400  8950 04           Clock_explosion db 4
 401  8951 14           Clock_Entidades_en_curso db 20
 402  8952 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 403  8953              ;														; Repite la oleada de entidades.
 404  8953 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 405  8954 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 406  8955 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 407  8956
 408  8956 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 409  8957 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 410  8958 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 411  8959
 412  8959              ;---------------------------------------------------------------------------------------------------------------
 413  8959
 414  8959              ; Gestión de NIVELES.
 415  8959
 416  8959 00           Nivel db 0												; Nivel actual del juego.
 417  895A 00 00        Puntero_indice_NIVELES defw 0
 418  895C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 419  895E              ; 														; _ que definen el NIVEL.
 420  895E              ; Y todo comienza aquí .....
 421  895E              ;
 422  895E              ; Rutina principal *************************************************************************************************************************************************************************
 423  895E              ;
 424  895E              ;	16/11/22
 425  895E
 426  895E              START
 427  895E
 428  895E 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 429  8961 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 430  8963 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 431  8965 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 432  8967 F3           	DI
 433  8968
 434  8968 3E 07        	ld a,%00000111
 435  896A CD D4 99     	call Cls
 436  896D
 437  896D CD 28 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 438  8970
 439  8970              ; INICIALIZACIÓN.
 440  8970
 441  8970 CD 22 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 442  8973 CD 34 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 443  8976 CD B3 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 444  8979              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 445  8979
 446  8979 CD D8 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 447  897C
 448  897C 21 27 89     	ld hl,Numero_parcial_de_entidades
 449  897F 46           	ld b,(hl)
 450  8980 04           	inc b
 451  8981 05           	dec b
 452  8982 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 453  8984
 454  8984              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 455  8984              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 456  8984              ;	Pintamos el resto de entidades:
 457  8984
 458  8984              ;	INICIA ENTIDADES !!!!!
 459  8984
 460  8984 C5           1 push bc  												; Guardo el contador de entidades.
 461  8985 CD A7 8B     	call Inicia_entidad
 462  8988 C1           	pop bc
 463  8989 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 464  898B
 465  898B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 466  898B              ; (Esto se dá cuando se inicia una nueva oleada).
 467  898B
 468  898B 3A 1D 89     	ld a,(Ctrl_1)
 469  898E CB 5F        	bit 3,a
 470  8990 20 1B        	jr nz,5F											; Loop
 471  8992
 472  8992              ; 	INICIA AMADEUS !!!!!
 473  8992
 474  8992 CD FF 8D     3 call Restore_Amadeus
 475  8995 CD 51 8D     	call Inicia_Puntero_objeto
 476  8998 CD C7 93     	call Draw
 477  899B CD 16 71     	call Guarda_foto_registros
 478  899E CD 7C 8E     	call Guarda_datos_de_borrado_Amadeus
 479  89A1
 480  89A1 11 7E 85     	ld de,Amadeus_db
 481  89A4 CD 11 8E     	call Store_Amadeus
 482  89A7
 483  89A7              ; 	INICIA DISPAROS !!!!!
 484  89A7
 485  89A7 CD C9 8C     	call Inicia_Puntero_Disparo_Entidades
 486  89AA CD D0 8C     	call Inicia_Puntero_Disparo_Amadeus
 487  89AD
 488  89AD              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 489  89AD
 490  89AD CD B3 8C     5 call Inicia_punteros_de_cajas
 491  89B0 CD D8 8D     	call Restore_entidad
 492  89B3
 493  89B3 3A 1D 89     	ld a,(Ctrl_1)
 494  89B6 CB 5F        	bit 3,a
 495  89B8 28 07        	jr z,6F
 496  89BA
 497  89BA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 498  89BA
 499  89BA 21 1D 89     	ld hl,Ctrl_1
 500  89BD CB 9E        	res 3,(hl)
 501  89BF 18 07        	jr Main
 502  89C1
 503  89C1              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 504  89C1
 505  89C1 21 3C 89     6 ld hl,Ctrl_3
 506  89C4 CB C6        	set 0,(hl)											; Frame completo.
 507  89C6 FB           	ei
 508  89C7 76           	halt
 509  89C8
 510  89C8              ; ------------------------------------
 511  89C8
 512  89C8              Main
 513  89C8              ;
 514  89C8              ;	11/12/23
 515  89C8
 516  89C8              ; Aparece nueva entidad ???
 517  89C8
 518  89C8              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 519  89C8              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 520  89C8              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 521  89C8              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 522  89C8              ;														; _un 2º bloque.
 523  89C8
 524  89C8 3E 01        	ld a,1
 525  89CA D3 FE        	out ($fe),a
 526  89CC
 527  89CC 3A 51 89     	ld a,(Clock_Entidades_en_curso)
 528  89CF 47           	ld b,a
 529  89D0 3A 4E 89     	ld a,(Contador_de_frames)
 530  89D3 B8           	cp b
 531  89D4 20 18        	jr nz,13F
 532  89D6
 533  89D6              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 534  89D6              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 535  89D6
 536  89D6 3A 27 89     21 ld a,(Numero_parcial_de_entidades)
 537  89D9 47           	ld b,a
 538  89DA 3A 28 89     	ld a,(Entidades_en_curso)
 539  89DD B8           	cp b
 540  89DE 28 0E        	jr z,13F
 541  89E0 30 0C        	jr nc,13F
 542  89E2
 543  89E2 3C           	inc a
 544  89E3 32 28 89     	ld (Entidades_en_curso),a
 545  89E6
 546  89E6              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 547  89E6
 548  89E6 3A 51 89     	ld a,(Clock_Entidades_en_curso)
 549  89E9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 550  89E9              ;! _ IMPREDECIBLE !!!!
 551  89E9 C6 64        	add 100
 552  89EB 32 51 89     	ld (Clock_Entidades_en_curso),a
 553  89EE
 554  89EE              ; -------------------------------------------------------------------------------------------------------------
 555  89EE
 556  89EE              ; Habilita disparos.
 557  89EE
 558  89EE 21 53 89     13 ld hl,Disparo_Amadeus
 559  89F1 11 55 89     	ld de,CLOCK_repone_disparo_Amadeus
 560  89F4 CD A2 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 561  89F7
 562  89F7 21 56 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 563  89FA 11 58 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 564  89FD CD A2 9D     	call Habilita_disparos
 565  8A00
 566  8A00              ; COLISIONES.
 567  8A00
 568  8A00 CD C7 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 569  8A03
 570  8A03              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 571  8A03              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 572  8A03              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 573  8A03
 574  8A03 AF           	xor a
 575  8A04 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 576  8A07
 577  8A07 CD B3 8C     	call Inicia_punteros_de_cajas
 578  8A0A CD D8 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 579  8A0D              ; 														; _ en DRAW.
 580  8A0D 3A D8 88     	ld a,(Filas)
 581  8A10 A7           	and a
 582  8A11 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 583  8A13 CD EA 8D     	call Incrementa_punteros_de_cajas
 584  8A16 18 F2        	jr 12B
 585  8A18
 586  8A18              ; ---------------------------------------------------------------------------------------
 587  8A18
 588  8A18 3A 27 89     10 ld a,(Numero_parcial_de_entidades)
 589  8A1B 47               ld b,a
 590  8A1C A7           	and a
 591  8A1D 20 14        	jr nz,11F
 592  8A1F
 593  8A1F 21 1D 89     	ld hl,Ctrl_1
 594  8A22 CB 66        	bit 4,(hl)
 595  8A24 C2 CC 8A     	jp nz,16F
 596  8A27
 597  8A27              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 598  8A27
 599  8A27 21 1D 89     	ld hl,Ctrl_1
 600  8A2A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 601  8A2C
 602  8A2C 3A 4E 89     	ld a,(Contador_de_frames)
 603  8A2F 3C           	inc a
 604  8A30 32 52 89     	ld (Activa_recarga_cajas),a
 605  8A33
 606  8A33              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 607  8A33
 608  8A33 3A 28 89     11 ld a,(Entidades_en_curso)
 609  8A36 A7           	and a
 610  8A37 CA CC 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 611  8A3A 47           	ld b,a												; No hay entidades que gestionar.
 612  8A3B
 613  8A3B              ; ( Código que ejecutamos con cada entidad: ).
 614  8A3B
 615  8A3B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 616  8A3B
 617  8A3B C5           15 push bc 												; Nº de entidades en curso.
 618  8A3C
 619  8A3C              ; Existe "Entidad_guía" ???.
 620  8A3C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 621  8A3C
 622  8A3C 3A 3C 89     	ld a,(Ctrl_3)
 623  8A3F CB 4F        	bit 1,a
 624  8A41 20 11        	jr nz,22F
 625  8A43
 626  8A43              ; Almacén de "Movimientos_masticados" lleno ???
 627  8A43              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 628  8A43              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 629  8A43
 630  8A43 3A 3C 89     	ld a,(Ctrl_3)
 631  8A46 CB 5F        	bit 3,a
 632  8A48 20 0A        	jr nz,22F
 633  8A4A
 634  8A4A              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 635  8A4A
 636  8A4A 21 19 89     	ld hl,Ctrl_2
 637  8A4D CB EE        	set 5,(hl)
 638  8A4F 21 3C 89     	ld hl,Ctrl_3
 639  8A52 CB CE        	set 1,(hl)
 640  8A54
 641  8A54              ; Impacto ???
 642  8A54
 643  8A54 3A F1 88     22 ld a,(Impacto)
 644  8A57 A7           	and a
 645  8A58 28 31        	jr z,8F
 646  8A5A
 647  8A5A              ; Hay Impacto en esta entidad.
 648  8A5A
 649  8A5A 21 50 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 650  8A5D 35           	dec (hl)
 651  8A5E C2 BF 8A     	jp nz,17F
 652  8A61
 653  8A61              ;! Velocidad de la animación de la explosión.
 654  8A61
 655  8A61 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 656  8A63              ;														; _,(velocidad de la explosión).
 657  8A63              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 658  8A63
 659  8A63 CD 9C 8E     	call Repone_datos_de_borrado
 660  8A66 CD F1 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 661  8A69
 662  8A69              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 663  8A69
 664  8A69 3A 19 89     	ld a,(Ctrl_2)
 665  8A6C CB 4F        	bit 1,a
 666  8A6E 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 667  8A70
 668  8A70              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 669  8A70
 670  8A70 3A E0 88     	ld a,(CTRL_DESPLZ)
 671  8A73 A7           	and a
 672  8A74 20 08        	jr nz,18F
 673  8A76
 674  8A76 21 84 84     	ld hl,Indice_Explosion_2x2-2
 675  8A79 22 E6 88     	ld (Puntero_DESPLZ_der),hl
 676  8A7C 18 06        	jr 19F
 677  8A7E
 678  8A7E 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 679  8A81 22 E6 88     	ld (Puntero_DESPLZ_der),hl
 680  8A84
 681  8A84 21 19 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 682  8A87 CB CE        	set 1,(hl)
 683  8A89 18 22        	jr 7F
 684  8A8B
 685  8A8B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 686  8A8B              ; _con las coordenadas de la entidad almacenada en DRAW.
 687  8A8B
 688  8A8B 3A 1D 89     8 ld a,(Ctrl_1)
 689  8A8E CB 57        	bit 2,a
 690  8A90 28 1B        	jr z,7F
 691  8A92
 692  8A92 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 693  8A95 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 694  8A96              ;														; E contiene la coordenada_X del disparo.
 695  8A96 2A DE 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 696  8A99              ;														; H FILA, (Coordenada_y de la entidad).
 697  8A99 A7           	and a
 698  8A9A ED 52        	sbc hl,de
 699  8A9C
 700  8A9C CD E0 92     	call Determina_resultado_comparativa
 701  8A9F
 702  8A9F 78           	ld a,b
 703  8AA0 A7           	and a
 704  8AA1 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 705  8AA3
 706  8AA3              ; ----- ----- -----
 707  8AA3
 708  8AA3 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 709  8AA5 32 F1 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 710  8AA8
 711  8AA8 21 1D 89     	ld hl,Ctrl_1
 712  8AAB CB 96        	res 2,(hl)
 713  8AAD
 714  8AAD CD 1D 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 715  8AB0
 716  8AB0 3A 08 89     	ld a,(Ctrl_0)
 717  8AB3 CB 67        	bit 4,a
 718  8AB5 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 719  8AB7
 720  8AB7              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 721  8AB7              ; [[[
 722  8AB7              ;	call Detecta_disparo_entidad
 723  8AB7              ; ]]]
 724  8AB7
 725  8AB7 CD 13 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 726  8ABA
 727  8ABA 21 08 89     	ld hl,Ctrl_0
 728  8ABD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 729  8ABF
 730  8ABF CD 99 8D     17 call Store_Restore_cajas
 731  8AC2
 732  8AC2 C1           	pop bc
 733  8AC3
 734  8AC3 05           	dec b
 735  8AC4 C2 3B 8A     	jp nz,15B
 736  8AC7
 737  8AC7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 738  8AC7              ; Hemos gestionado todas las unidades.
 739  8AC7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 740  8AC7
 741  8AC7 21 1D 89     	ld hl,Ctrl_1
 742  8ACA CB 96        	res 2,(hl)
 743  8ACC
 744  8ACC 21 3C 89     16 ld hl,Ctrl_3
 745  8ACF CB C6        	set 0,(hl)											; Frame completo.
 746  8AD1
 747  8AD1 AF           	xor a
 748  8AD2 D3 FE        	out ($fe),a
 749  8AD4
 750  8AD4 FB           	ei
 751  8AD5 76           	halt
 752  8AD6
 753  8AD6              ; ----------------------------------------
 754  8AD6
 755  8AD6 3A 1D 89     	ld a,(Ctrl_1) 										; Existe Loop?
 756  8AD9 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 757  8ADB CA C8 89     	jp z,Main
 758  8ADE
 759  8ADE              ; RECARGA DE NUEVA OLEADA.
 760  8ADE
 761  8ADE 3A 4E 89     	ld a,(Contador_de_frames)
 762  8AE1 47           	ld b,a
 763  8AE2 3A 52 89     	ld a,(Activa_recarga_cajas)
 764  8AE5 B8           	cp b
 765  8AE6 28 08        	jr z,20F
 766  8AE8
 767  8AE8 21 1D 89     	ld hl,Ctrl_1
 768  8AEB CB E6        	set 4,(hl)
 769  8AED C3 C8 89     	jp Main
 770  8AF0
 771  8AF0 21 1D 89     20 ld hl,Ctrl_1
 772  8AF3 CB A6        	res 4,(hl)
 773  8AF5
 774  8AF5 3A 4E 89     	ld a,(Contador_de_frames)
 775  8AF8
 776  8AF8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 777  8AF8              ;! _ IMPREDECIBLE !!!!
 778  8AF8
 779  8AF8 C6 0A        	add 10
 780  8AFA 32 51 89     	ld (Clock_Entidades_en_curso),a
 781  8AFD
 782  8AFD C3 73 89     	jp 4B
 783  8B00
 784  8B00 C9           	ret
 785  8B01
 786  8B01              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 787  8B01              ;
 788  8B01              ;	16/11/23
 789  8B01
 790  8B01              Gestiona_Amadeus
 791  8B01
 792  8B01              ;! Activa/desactiva impacto con Amadeus.
 793  8B01
 794  8B01              ;	ld a,(Impacto)
 795  8B01              ;	and a
 796  8B01              ;	jr nz,2F
 797  8B01
 798  8B01 CD 94 8B     	call Mov_Amadeus
 799  8B04
 800  8B04 3A 08 89     2 ld a,(Ctrl_0)
 801  8B07 CB 67        	bit 4,a
 802  8B09 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 803  8B0B
 804  8B0B CD 13 8C     	call Guarda_foto_entidad_a_pintar
 805  8B0E CD 7C 8E     	call Guarda_datos_de_borrado_Amadeus
 806  8B11
 807  8B11 21 08 89     1 ld hl,Ctrl_0
 808  8B14 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 809  8B16
 810  8B16 CD 6B 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 811  8B19
 812  8B19              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 813  8B19
 814  8B19 CD 33 8D     	call Calcula_numero_de_disparotes
 815  8B1C
 816  8B1C C9           	ret
 817  8B1D
 818  8B1D              ; --------------------------------------------------------------------------------------------------------------
 819  8B1D              ;
 820  8B1D              ;	15/12/23
 821  8B1D
 822  8B1D              Mov_obj
 823  8B1D
 824  8B1D 3A 19 89     	ld a,(Ctrl_2)
 825  8B20 CB 4F        	bit 1,a
 826  8B22 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 827  8B24
 828  8B24              ; Explosión:
 829  8B24
 830  8B24 3A 1A 89     	ld a,(Frames_explosion)
 831  8B27 A7           	and a
 832  8B28 20 1D        	jr nz,4F
 833  8B2A
 834  8B2A              ;!  Una alimaña menos!!!!!!!!!1
 835  8B2A
 836  8B2A              ; Se trataba de una Entidad_guía ???
 837  8B2A
 838  8B2A 3A 19 89     	ld a,(Ctrl_2)
 839  8B2D CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 840  8B2F 28 05        	jr z,5F
 841  8B31
 842  8B31 21 3C 89     	ld hl,Ctrl_3
 843  8B34 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 844  8B36
 845  8B36              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 846  8B36              ;!! _generado puede ser distinto, (aletoriedad).
 847  8B36
 848  8B36 CD 1A 8E     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 849  8B39 21 27 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 850  8B3C 35           	dec (hl)
 851  8B3D 21 28 89     	ld hl,Entidades_en_curso
 852  8B40 35           	dec (hl)
 853  8B41 21 26 89     	ld hl,Numero_de_entidades
 854  8B44 35           	dec (hl)
 855  8B45 18 4C        	jr 3F
 856  8B47
 857  8B47              ; -----
 858  8B47
 859  8B47              ;	`Movemos´ la explosión.
 860  8B47
 861  8B47 2A E6 88     4 ld hl,(Puntero_DESPLZ_der)
 862  8B4A 23           	inc hl
 863  8B4B 23           	inc hl
 864  8B4C 22 E6 88     	ld (Puntero_DESPLZ_der),hl
 865  8B4F CD 4B 8D     	call Extrae_address
 866  8B52 22 DC 88     	ld (Puntero_objeto),hl
 867  8B55
 868  8B55 21 1A 89     	ld hl,Frames_explosion
 869  8B58 35           	dec (hl)
 870  8B59
 871  8B59 21 08 89     	ld hl,Ctrl_0
 872  8B5C CB E6        	set 4,(hl)
 873  8B5E
 874  8B5E 18 33        	jr 3F
 875  8B60
 876  8B60              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 877  8B60
 878  8B60 AF           2 xor a
 879  8B61 32 08 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 880  8B64
 881  8B64              ; Movemos Entidades malignas.
 882  8B64              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 883  8B64
 884  8B64 3A 19 89     	ld a,(Ctrl_2)
 885  8B67 CB 6F        	bit 5,a
 886  8B69 20 07        	jr nz,8F
 887  8B6B
 888  8B6B 21 08 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 889  8B6E CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 890  8B70 18 09        	jr 7F
 891  8B72
 892  8B72 CD 4D 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 893  8B75
 894  8B75 3A 08 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 895  8B78 CB 67        	bit 4,a
 896  8B7A C8           	ret z
 897  8B7B
 898  8B7B              ; Ha habido desplazamiento de la entidad maligna.
 899  8B7B              ; Ha llegado a zona de AMADEUS ???
 900  8B7B
 901  8B7B 3A DF 88     7 ld a,(Coordenada_y)
 902  8B7E FE 14        	cp $14
 903  8B80 38 08        	jr c,1F
 904  8B82
 905  8B82              ; ---------
 906  8B82
 907  8B82              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 908  8B82              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 909  8B82
 910  8B82 F3           	di
 911  8B83 CD 90 90     	call Genera_coordenadas_X
 912  8B86 CD CC 90     	call Compara_coordenadas_X
 913  8B89 FB           	ei
 914  8B8A
 915  8B8A              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 916  8B8A
 917  8B8A              ; ---------
 918  8B8A
 919  8B8A CD 9B 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 920  8B8D CD 9C 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 921  8B90 CD F1 8C     	call Limpia_Variables_de_borrado
 922  8B93
 923  8B93 C9           3 ret
 924  8B94
 925  8B94              ; --------------------------------------------------------------------------------------------------------------
 926  8B94              ;
 927  8B94              ;	29/1/23
 928  8B94
 929  8B94              Mov_Amadeus
 930  8B94
 931  8B94 CD 3C 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 932  8B97
 933  8B97 3A 08 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 934  8B9A CB 67        	bit 4,a
 935  8B9C C8           	ret z
 936  8B9D
 937  8B9D              ; ---------
 938  8B9D
 939  8B9D CD 9B 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 940  8BA0 CD 8C 8E     	call Repone_datos_de_borrado_Amadeus
 941  8BA3 CD F1 8C     	call Limpia_Variables_de_borrado
 942  8BA6
 943  8BA6 C9           	ret
 944  8BA7
 945  8BA7              ; -----------------------------------------------------------------------------------
 946  8BA7              ;
 947  8BA7              ;	12/12/23
 948  8BA7              ;
 949  8BA7              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 950  8BA7
 951  8BA7              Inicia_entidad
 952  8BA7
 953  8BA7 CD E5 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 954  8BAA CD 51 8D     	call Inicia_Puntero_objeto
 955  8BAD CD E8 99     	call Recompone_posicion_inicio
 956  8BB0 CD C7 93     	call Draw
 957  8BB3 CD BE 8B     	call Guarda_movimiento_masticado
 958  8BB6 CD 16 71     	call Guarda_foto_registros
 959  8BB9 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 960  8BBA              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 961  8BBA              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 962  8BBA CD 99 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 963  8BBD C9           	ret
 964  8BBE
 965  8BBE
 966  8BBE              ; -----------------------------------------------------------------------------------
 967  8BBE              ;
 968  8BBE              ;	28/12/23
 969  8BBE              ;
 970  8BBE              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 971  8BBE              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 972  8BBE
 973  8BBE 3A 19 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 974  8BC1 CB 6F        	bit 5,a
 975  8BC3 C8           	ret z 													; Salimos si NO se trata de una entidad guía.
 976  8BC4
 977  8BC4 ED 73 2E 89  	ld (Stack),sp
 978  8BC8 ED 7B 04 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
 979  8BCC
 980  8BCC E5           	push hl
 981  8BCD DD E5            push ix
 982  8BCF FD E5            push iy
 983  8BD1
 984  8BD1 ED 7B 2E 89      ld sp,(Stack)
 985  8BD5
 986  8BD5 E5               push hl
 987  8BD6
 988  8BD6 2A 06 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
 989  8BD9 23           	inc hl
 990  8BDA 22 06 89     	ld (Contador_de_mov_masticados),hl
 991  8BDD
 992  8BDD 22 1B 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
 993  8BE0
 994  8BE0 E1           	pop hl
 995  8BE1
 996  8BE1 CD FC 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 997  8BE4              ;															; _ el (Contador_de_mov_masticados).
 998  8BE4 C9               ret
 999  8BE5
1000  8BE5              ; --------------------------------------------------------------------------------------------------------------
1001  8BE5              ;
1002  8BE5              ;	12/12/23
1003  8BE5              ;
1004  8BE5
1005  8BE5              Inicia_entidad_guia
1006  8BE5
1007  8BE5              ; Existe "Entidad_guía" ???
1008  8BE5
1009  8BE5 3A 3C 89     	ld a,(Ctrl_3)
1010  8BE8 CB 4F        	bit 1,a
1011  8BEA C0           	ret nz
1012  8BEB
1013  8BEB              ; Inicia Entidad_guía:
1014  8BEB
1015  8BEB 21 19 89     	ld hl,Ctrl_2
1016  8BEE CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1017  8BF0 21 3C 89     	ld hl,Ctrl_3
1018  8BF3 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1019  8BF5
1020  8BF5 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1021  8BF8 22 04 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1022  8BFB
1023  8BFB C9           	ret
1024  8BFC
1025  8BFC              ; --------------------------------------------------------------------------------------------------------------
1026  8BFC              ;
1027  8BFC              ;	21/12/23
1028  8BFC              ;
1029  8BFC
1030  8BFC              Actualiza_Puntero_de_almacen_de_mov_masticados
1031  8BFC
1032  8BFC              ;	Entidad_guía ???
1033  8BFC
1034  8BFC 3A 19 89     	ld a,(Ctrl_2)
1035  8BFF CB 6F        	bit 5,a
1036  8C01 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1037  8C02
1038  8C02 E5           	push hl
1039  8C03 C5           	push bc
1040  8C04
1041  8C04 2A 04 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1042  8C07 01 06 00     	ld bc,6
1043  8C0A A7           	and a
1044  8C0B ED 4A        	adc hl,bc
1045  8C0D 22 04 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1046  8C10
1047  8C10 C1           	pop bc
1048  8C11 E1           	pop hl
1049  8C12
1050  8C12 C9           	ret
1051  8C13
1052  8C13              ; --------------------------------------------------------------------------------------------------------------
1053  8C13              ;
1054  8C13              ;	28/12/23
1055  8C13              ;
1056  8C13              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1057  8C13              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1058  8C13
1059  8C13              Guarda_foto_entidad_a_pintar
1060  8C13
1061  8C13 3A 08 89     	ld a,(Ctrl_0)
1062  8C16 CB 77        	bit 6,a
1063  8C18 28 07        	jr z,5F
1064  8C1A
1065  8C1A              ; Guarda la foto de Amadeus.
1066  8C1A
1067  8C1A CD C7 93     	call Draw
1068  8C1D CD 16 71     	call Guarda_foto_registros
1069  8C20 C9           	ret
1070  8C21
1071  8C21              ; ENTIDADES!
1072  8C21              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1073  8C21
1074  8C21 3A 3C 89     5 ld a,(Ctrl_3)
1075  8C24 CB 5F        	bit 3,a
1076  8C26 28 04        	jr z,1F
1077  8C28
1078  8C28              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1079  8C28
1080  8C28 CD 6F 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1081  8C2B C9           	ret
1082  8C2C
1083  8C2C              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1084  8C2C
1085  8C2C 3A 3C 89     1 ld a,(Ctrl_3)
1086  8C2F CB 57        	bit 2,a
1087  8C31 20 10        	jr nz,6F
1088  8C33
1089  8C33              ; Entidad guía o fantasma ???
1090  8C33
1091  8C33 3A 19 89     	ld a,(Ctrl_2)
1092  8C36 CB 6F        	bit 5,a
1093  8C38 20 10        	jr nz,3F
1094  8C3A
1095  8C3A              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1096  8C3A
1097  8C3A 18 EC        	jr 4B
1098  8C3C
1099  8C3C              ; ENTIDAD_GUÍA:
1100  8C3C              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1101  8C3C              ; _guardando "movimientos_masticados".
1102  8C3C
1103  8C3C 3A 3C 89     2 ld a,(Ctrl_3)
1104  8C3F CB 57        	bit 2,a
1105  8C41 28 07        	jr z,3F
1106  8C43
1107  8C43              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1108  8C43              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1109  8C43
1110  8C43 CB 97        6 res 2,a
1111  8C45 CB DF        	set 3,a
1112  8C47 32 3C 89     	ld (Ctrl_3),a
1113  8C4A
1114  8C4A
1115  8C4A              ;	Esto sólo lo ejecuta una entidad guía.
1116  8C4A
1117  8C4A CD C7 93     3 	call Draw
1118  8C4D CD BE 8B     	call Guarda_movimiento_masticado
1119  8C50 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1120  8C53
1121  8C53              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1122  8C53              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1123  8C53
1124  8C53 CD 57 8C     	call Convierte_guia_en_fantasma
1125  8C56 C9           	ret
1126  8C57
1127  8C57              ; --------------------------------------------------------------------------------------------------------------
1128  8C57              ;
1129  8C57              ;	28/12/23
1130  8C57              ;
1131  8C57
1132  8C57 3A 3C 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1133  8C5A CB 5F        	bit 3,a
1134  8C5C C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1135  8C5D
1136  8C5D              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1137  8C5D
1138  8C5D 21 19 89     	ld hl,Ctrl_2
1139  8C60 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1140  8C62
1141  8C62              ;	Reinicializamos el (Puntero_de_almacen_de_mov_masticados).
1142  8C62
1143  8C62 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1144  8C65 22 04 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1145  8C68
1146  8C68              ;	Reinicializamos el (Contador_de_mov_masticados).
1147  8C68
1148  8C68 21 00 00     	ld hl,0
1149  8C6B 22 06 89     	ld (Contador_de_mov_masticados),hl
1150  8C6E
1151  8C6E C9           	ret
1152  8C6F
1153  8C6F              ; --------------------------------------------------------------------------------------------------------------
1154  8C6F              ;
1155  8C6F              ;	21/12/23
1156  8C6F              ;
1157  8C6F              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1158  8C6F              ;
1159  8C6F              ;		IY contiene (Puntero_objeto).
1160  8C6F              ;		IX contiene el puntero de impresión.
1161  8C6F              ;		HL contiene la dirección de la rutina de impresión.
1162  8C6F              ;
1163  8C6F              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1164  8C6F              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1165  8C6F              ;	Decrementa el (Contador_de_mov_masticados)
1166  8C6F              ;
1167  8C6F              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1168  8C6F              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1169  8C6F              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1170  8C6F
1171  8C6F
1172  8C6F ED 73 2E 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1173  8C73 ED 7B 04 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1174  8C77
1175  8C77 FD E1        	pop iy
1176  8C79 DD E1        	pop ix
1177  8C7B E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1178  8C7C
1179  8C7C ED 73 04 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1180  8C80 ED 7B 2E 89  	ld sp,(Stack)
1181  8C84
1182  8C84 CD 16 71     	call Guarda_foto_registros
1183  8C87
1184  8C87 E5           	push hl
1185  8C88
1186  8C88 2A 06 89     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1187  8C8B 23           	inc hl
1188  8C8C 22 06 89     	ld (Contador_de_mov_masticados),hl
1189  8C8F
1190  8C8F              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1191  8C8F
1192  8C8F ED 4B 1B 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1193  8C93 A7           	and a
1194  8C94 ED 42        	sbc hl,bc
1195  8C96 CC 57 8C     	call z,Convierte_guia_en_fantasma
1196  8C99
1197  8C99 E1           	pop hl
1198  8C9A
1199  8C9A C9           	ret
1200  8C9B
1201  8C9B              ; --------------------------------------------------------------------------------------------------------------
1202  8C9B              ;
1203  8C9B              ;	19/9/23
1204  8C9B
1205  8C9B              Prepara_var_pintado
1206  8C9B
1207  8C9B 21 D8 88     	ld hl,Filas
1208  8C9E 11 F8 88     	ld de,Variables_de_pintado
1209  8CA1 01 08 00     	ld bc,8
1210  8CA4 ED B0        	ldir
1211  8CA6 C9           	ret
1212  8CA7
1213  8CA7              ; --------------------------------------------------------------------------------------------------------------
1214  8CA7
1215  8CA7              Repone_pintar
1216  8CA7
1217  8CA7 21 F8 88     	ld hl,Variables_de_pintado
1218  8CAA 11 D8 88     	ld de,Filas
1219  8CAD 01 08 00     	ld bc,8
1220  8CB0 ED B0        	ldir
1221  8CB2 C9           	ret
1222  8CB3
1223  8CB3              ; *************************************************************************************************************************************************************
1224  8CB3              ;
1225  8CB3              ; 8/1/23
1226  8CB3              ;
1227  8CB3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1228  8CB3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1229  8CB3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1230  8CB3
1231  8CB3              ; Destruye HL y DE !!!!!
1232  8CB3
1233  8CB3              Inicia_punteros_de_cajas
1234  8CB3
1235  8CB3 21 6C 85     	ld hl,Indice_de_cajas
1236  8CB6 CD 4B 8D         call Extrae_address
1237  8CB9 22 20 89         ld (Puntero_store_caja),hl
1238  8CBC 21 6E 85     	ld hl,Indice_de_cajas+2
1239  8CBF 22 24 89     	ld (Indice_restore_caja),hl
1240  8CC2 CD 4B 8D     	call Extrae_address
1241  8CC5 22 22 89     	ld (Puntero_restore_caja),hl
1242  8CC8 C9               ret
1243  8CC9
1244  8CC9              ; *************************************************************************************************************************************************************
1245  8CC9              ;
1246  8CC9              ; 8/1/23
1247  8CC9              ;
1248  8CC9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1249  8CC9
1250  8CC9 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1251  8CCC 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1252  8CCF C9           	ret
1253  8CD0 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1254  8CD3 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1255  8CD6 C9           	ret
1256  8CD7
1257  8CD7              ; -------------------------------------------------------------------------------------------------------------
1258  8CD7              ;
1259  8CD7              ; 21/9/23
1260  8CD7              ;
1261  8CD7
1262  8CD7              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1263  8CD7
1264  8CD7              Limpia_album_Amadeus
1265  8CD7
1266  8CD7 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1267  8CDA 7E           	ld a,(hl)
1268  8CDB A7           	and a
1269  8CDC C8           	ret z
1270  8CDD
1271  8CDD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1272  8CE0 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1273  8CE3 01 0B 00     	ld bc,11
1274  8CE6 AF           	xor a
1275  8CE7 77           	ld (hl),a
1276  8CE8 ED B0        	ldir
1277  8CEA
1278  8CEA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1279  8CED 22 3A 89     	ld (End_Snapshot_Amadeus),hl
1280  8CF0
1281  8CF0 C9           	ret
1282  8CF1
1283  8CF1 21 F2 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1284  8CF4 11 F3 88     	ld de,Variables_de_borrado+1
1285  8CF7 01 05 00     	ld bc,5
1286  8CFA AF           	xor a
1287  8CFB 77           	ld (hl),a
1288  8CFC ED B0        	ldir
1289  8CFE C9           	ret
1290  8CFF
1291  8CFF              ; -------------------------------------------------------------------------------------------------------------
1292  8CFF              ;
1293  8CFF              ; 8/9/23
1294  8CFF              ;
1295  8CFF
1296  8CFF              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1297  8CFF              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1298  8CFF
1299  8CFF              Calcula_numero_de_malotes
1300  8CFF
1301  8CFF 21 00 70     	ld hl,Album_de_fotos
1302  8D02 EB           	ex de,hl
1303  8D03 2A 34 89     	ld hl,(Stack_snapshot)
1304  8D06
1305  8D06 06 00        	ld b,0
1306  8D08 7D           	ld a,l
1307  8D09 93           	sub e
1308  8D0A 28 07        	jr z,1F
1309  8D0C
1310  8D0C              ; Nº de malotes no es "0".
1311  8D0C
1312  8D0C D6 06        2 sub 6
1313  8D0E 04           	inc b
1314  8D0F A7           	and a
1315  8D10 20 FA        	jr nz,2B
1316  8D12 78           	ld a,b
1317  8D13
1318  8D13 32 29 89     1 ld (Numero_de_malotes),a
1319  8D16 C9           	ret
1320  8D17
1321  8D17              ; -------------------------------------------------------------------------------------------------------------
1322  8D17              ;
1323  8D17              ; 8/9/23
1324  8D17              ;
1325  8D17
1326  8D17              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1327  8D17              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1328  8D17
1329  8D17              Calcula_malotes_Amadeus
1330  8D17
1331  8D17 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1332  8D1A EB           	ex de,hl
1333  8D1B 2A 3A 89     	ld hl,(End_Snapshot_Amadeus)
1334  8D1E
1335  8D1E 7C           	ld a,h
1336  8D1F A7           	and a
1337  8D20 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1338  8D22
1339  8D22 06 00        	ld b,0
1340  8D24 7D           	ld a,l
1341  8D25 93           	sub e
1342  8D26 28 07        	jr z,1F
1343  8D28
1344  8D28              ; Nº de malotes no es "0".
1345  8D28
1346  8D28 D6 06        2 sub 6
1347  8D2A 04           	inc b
1348  8D2B A7           	and a
1349  8D2C 20 FA        	jr nz,2B
1350  8D2E 78           	ld a,b
1351  8D2F
1352  8D2F 32 29 89     1 ld (Numero_de_malotes),a
1353  8D32 C9           	ret
1354  8D33
1355  8D33              ; -------------------------------------------------------------------------------------------------------------
1356  8D33              ;
1357  8D33              ; 28/2/23
1358  8D33              ;
1359  8D33
1360  8D33              Calcula_numero_de_disparotes
1361  8D33
1362  8D33 21 56 70     	ld hl,Album_de_fotos_disparos
1363  8D36 EB           	ex de,hl
1364  8D37 2A 38 89     	ld hl,(End_Snapshot_disparos)
1365  8D3A
1366  8D3A 06 00        	ld b,0
1367  8D3C 7D           	ld a,l
1368  8D3D 93           	sub e
1369  8D3E 28 07        	jr z,1F
1370  8D40
1371  8D40              ; Nº de malotes no es "0".
1372  8D40
1373  8D40 D6 06        2 sub 6
1374  8D42 04           	inc b
1375  8D43 A7           	and a
1376  8D44 20 FA        	jr nz,2B
1377  8D46 78           	ld a,b
1378  8D47
1379  8D47 32 3D 89     1 ld (Numero_de_disparotes),a
1380  8D4A C9           	ret
1381  8D4B
1382  8D4B              ; *************************************************************************************************************************************************************
1383  8D4B              ;
1384  8D4B              ; 20/10/22
1385  8D4B              ;
1386  8D4B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1387  8D4B              ;
1388  8D4B              ; Destruye el puntero y DE !!!!!
1389  8D4B
1390  8D4B 5E           Extrae_address ld e,(hl)
1391  8D4C 23           	inc hl
1392  8D4D 56           	ld d,(hl)
1393  8D4E 2B           	dec hl
1394  8D4F EB           	ex de,hl
1395  8D50 C9           	ret
1396  8D51
1397  8D51              ; *************************************************************************************************************************************************************
1398  8D51              ;
1399  8D51              ;	7/2/23
1400  8D51              ;
1401  8D51              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1402  8D51              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1403  8D51              ;
1404  8D51              ;   Destruye HL y BC !!!!!,
1405  8D51              ;
1406  8D51              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1407  8D51              ;					"0" ..... Izquierda.
1408  8D51
1409  8D51              Inicia_Puntero_objeto
1410  8D51
1411  8D51 3A EC 88     	ld a,(Cuad_objeto)
1412  8D54 E6 01        	and 1
1413  8D56 F5           	push af
1414  8D57 CC 75 8D     	call z,Inicia_puntero_objeto_izq
1415  8D5A F1           	pop af
1416  8D5B 28 2B        	jr z,1F
1417  8D5D CD 62 8D     	call Inicia_puntero_objeto_der
1418  8D60 18 26        	jr 1F
1419  8D62
1420  8D62              ; Arrancamos desde la parte izquierda de la pantalla.
1421  8D62              ; Iniciamos (Indice_Sprite_der).
1422  8D62
1423  8D62 2A E2 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1424  8D65 22 E6 88     	ld (Puntero_DESPLZ_der),hl
1425  8D68 CD 4B 8D     	call Extrae_address
1426  8D6B 22 DC 88     	ld (Puntero_objeto),hl
1427  8D6E
1428  8D6E 2A E4 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1429  8D71 22 E8 88     	ld (Puntero_DESPLZ_izq),hl
1430  8D74 C9           	ret
1431  8D75
1432  8D75              ; Arrancamos desde la parte derecha de la pantalla.
1433  8D75              ; Iniciamos (Indice_Sprite_izq).
1434  8D75
1435  8D75 2A E4 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1436  8D78 22 E8 88     	ld (Puntero_DESPLZ_izq),hl
1437  8D7B CD 4B 8D     	call Extrae_address
1438  8D7E 22 DC 88     	ld (Puntero_objeto),hl
1439  8D81
1440  8D81 2A E2 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1441  8D84 22 E6 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1442  8D87 C9           	ret
1443  8D88
1444  8D88              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1445  8D88
1446  8D88 21 40 83     1 ld hl,Amadeus
1447  8D8B ED 4B DC 88  	ld bc,(Puntero_objeto)
1448  8D8F B7 ED 42     	sub hl,bc
1449  8D92 C0           	ret nz
1450  8D93 21 08 89     	ld hl,Ctrl_0
1451  8D96 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1452  8D98 C9           	ret 												; _de nuestra nave en los extremos.
1453  8D99
1454  8D99              ; *************************************************************************************************************************************************************
1455  8D99              ;
1456  8D99              ;	21/12/23
1457  8D99              ;
1458  8D99              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1459  8D99              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1460  8D99
1461  8D99              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1462  8D99              ;	_de la 2ª y 3ª entidad respectivamente.
1463  8D99
1464  8D99              Store_Restore_cajas
1465  8D99
1466  8D99 E5           	push hl
1467  8D9A D5           	push de
1468  8D9B C5            	push bc
1469  8D9C
1470  8D9C              ;	STORE !!!!!
1471  8D9C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1472  8D9C
1473  8D9C F3           	di
1474  8D9D 21 D8 88     	ld hl,Filas
1475  8DA0 ED 5B 20 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1476  8DA4 01 43 00     	ld bc,67
1477  8DA7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1478  8DA9 FB           	ei
1479  8DAA
1480  8DAA              ; 	Entidad_sospechosa. 20/4/23
1481  8DAA
1482  8DAA 3A F1 88     	ld a,(Impacto)
1483  8DAD A7           	and a
1484  8DAE 28 0C        	jr z,1F
1485  8DB0
1486  8DB0 2A 20 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1487  8DB3 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1488  8DB6 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1489  8DB7 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1490  8DB9 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1491  8DBC
1492  8DBC              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1493  8DBC
1494  8DBC 2A 22 89     1 ld hl,(Puntero_restore_caja)
1495  8DBF 7E           	ld a,(hl)
1496  8DC0 A7           	and a
1497  8DC1 F5           	push af
1498  8DC2 28 0A        	jr z,2F
1499  8DC4
1500  8DC4 F3           	di
1501  8DC5 11 D8 88     	ld de,Filas
1502  8DC8 01 43 00     	ld bc,67
1503  8DCB ED B0        	ldir
1504  8DCD FB           	ei
1505  8DCE
1506  8DCE CD EA 8D     2 call Incrementa_punteros_de_cajas
1507  8DD1
1508  8DD1 F1           	pop af
1509  8DD2 28 E8        	jr z,1B
1510  8DD4
1511  8DD4 C1           	pop bc
1512  8DD5 D1           	pop de
1513  8DD6 E1           	pop hl
1514  8DD7
1515  8DD7 C9           	ret
1516  8DD8
1517  8DD8              ; **************************************************************************************************
1518  8DD8              ;
1519  8DD8              ;	21/12/23
1520  8DD8              ;
1521  8DD8              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1522  8DD8
1523  8DD8 E5           Restore_entidad push hl
1524  8DD9 D5           	push de
1525  8DDA C5            	push bc
1526  8DDB
1527  8DDB 2A 20 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1528  8DDE 11 D8 88     	ld de,Filas
1529  8DE1 01 43 00     	ld bc,67
1530  8DE4 ED B0        	ldir
1531  8DE6
1532  8DE6 C1           	pop bc
1533  8DE7 D1           	pop de
1534  8DE8 E1           	pop hl
1535  8DE9 C9           	ret
1536  8DEA
1537  8DEA              ; **************************************************************************************************
1538  8DEA              ;
1539  8DEA              ;	08/05/23
1540  8DEA              ;
1541  8DEA              ;	Incrementamos los dos punteros de entidades. (+1).
1542  8DEA
1543  8DEA              Incrementa_punteros_de_cajas
1544  8DEA
1545  8DEA 2A 22 89     	ld hl,(Puntero_restore_caja)
1546  8DED 22 20 89     	ld (Puntero_store_caja),hl
1547  8DF0 2A 24 89     	ld hl,(Indice_restore_caja)
1548  8DF3 23           	inc hl
1549  8DF4 23           	inc hl
1550  8DF5 22 24 89     	ld (Indice_restore_caja),hl
1551  8DF8 CD 4B 8D         call Extrae_address
1552  8DFB 22 22 89         ld (Puntero_restore_caja),hl
1553  8DFE C9               ret
1554  8DFF
1555  8DFF              ; **************************************************************************************************
1556  8DFF              ;
1557  8DFF              ;	21/12/23
1558  8DFF              ;
1559  8DFF              ;	Restore_Amadeus
1560  8DFF              ;
1561  8DFF              ;	Cargamos en DRAW los parámetros de Amadeus.
1562  8DFF              ;
1563  8DFF
1564  8DFF E5           Restore_Amadeus	push hl
1565  8E00 D5           	push de
1566  8E01 C5            	push bc
1567  8E02 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1568  8E05 11 D8 88     	ld de,Filas
1569  8E08 01 43 00     	ld bc,67
1570  8E0B ED B0        	ldir
1571  8E0D C1           	pop bc
1572  8E0E D1           	pop de
1573  8E0F E1           	pop hl
1574  8E10 C9           	ret
1575  8E11
1576  8E11              ; *************************************************************************************************************************************************************
1577  8E11              ;
1578  8E11              ;	21/12/23
1579  8E11              ;
1580  8E11              ;	Store_Amadeus
1581  8E11              ;
1582  8E11              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1583  8E11              ;
1584  8E11              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1585  8E11              ;
1586  8E11              ;	DESTRUYE: HL y BC y DE.
1587  8E11
1588  8E11 21 D8 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1589  8E14 01 43 00     	ld bc,67
1590  8E17 ED B0        	ldir
1591  8E19 C9           	ret
1592  8E1A
1593  8E1A              ; -----------------------------------------------------------
1594  8E1A              ;
1595  8E1A              ;	21/12/23
1596  8E1A              ;
1597  8E1A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1598  8E1A              ;
1599  8E1A              ;	Destruye: HL,BC,DE,A
1600  8E1A
1601  8E1A 21 D8 88     Borra_datos_entidad ld hl,Filas
1602  8E1D 01 42 00     	ld bc,66
1603  8E20 AF           	xor a
1604  8E21 77           	ld (hl),a
1605  8E22 11 D9 88     	ld de,Filas+1
1606  8E25 ED B0        	ldir
1607  8E27 C9           	ret
1608  8E28
1609  8E28              ; -----------------------------------------------------------
1610  8E28
1611  8E28              ; Teclado.
1612  8E28
1613  8E28 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1614  8E2A DB FE        	in a,($fe)
1615  8E2C E6 01        	and $01
1616  8E2E 28 02        	jr z,1f
1617  8E30 18 F6        	jr Pulsa_ENTER
1618  8E32 C9           1 ret
1619  8E33
1620  8E33              ; **************************************************************************************************
1621  8E33              ;
1622  8E33              ; Temporización.
1623  8E33
1624  8E33              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1625  8E33              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1626  8E33              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1627  8E33              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1628  8E33
1629  8E33              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1630  8E33              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1631  8E33              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1632  8E33
1633  8E33              ; A partir de $4f61 no hace falta DELAY.
1634  8E33
1635  8E33              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1636  8E33
1637  8E33 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1638  8E36 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1639  8E37 78           	LD A,B
1640  8E38 A7           	AND A
1641  8E39 20 FB        	JR NZ,wait
1642  8E3B C9           	RET
1643  8E3C
1644  8E3C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1645  8E3C              ;
1646  8E3C              ;	5/3/23
1647  8E3C              ;
1648  8E3C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1649  8E3C
1650  8E3C              Movimiento_Amadeus
1651  8E3C
1652  8E3C              ; Disparo.
1653  8E3C
1654  8E3C 3A 53 89     	ld a,(Disparo_Amadeus)
1655  8E3F A7           	and a
1656  8E40 20 02        	jr nz,1F
1657  8E42 18 15        	jr 2F
1658  8E44
1659  8E44 3E F7        1 ld a,$f7													; "5" para disparar.
1660  8E46 DB FE        	in a,($fe)
1661  8E48 E6 10        	and $10
1662  8E4A
1663  8E4A F5           	push af
1664  8E4B CC F3 8E     	call z,Genera_disparo
1665  8E4E F1           	pop af
1666  8E4F 20 08        	jr nz,2F
1667  8E51
1668  8E51 3A 53 89     	ld a,(Disparo_Amadeus)
1669  8E54 EE 01        	xor 1
1670  8E56 32 53 89     	ld (Disparo_Amadeus),a
1671  8E59 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1672  8E5B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1673  8E5D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1674  8E5F CC AC 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1675  8E62
1676  8E62 3E F7        	ld a,$f7
1677  8E64 DB FE        	in a,($fe)
1678  8E66 E6 01        	and $01
1679  8E68 C8           	ret z
1680  8E69
1681  8E69 3E F7        	ld a,$f7
1682  8E6B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1683  8E6D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1684  8E6F CC 8E 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1685  8E72 C9           	ret
1686  8E73
1687  8E73              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1688  8E73              ;
1689  8E73              ;	Rutina provisional para que los malotes cagen balas.
1690  8E73
1691  8E73              Detecta_disparo_entidad
1692  8E73
1693  8E73 3A 56 89     	ld a,(Disparo_entidad)
1694  8E76 A7           	and a
1695  8E77 C8           	ret z
1696  8E78
1697  8E78              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1698  8E78
1699  8E78              ;	ld a,$7f				; Detecta SPACE.
1700  8E78              ;	in a,($fe)
1701  8E78              ;	and 1
1702  8E78              ;	ret nz
1703  8E78
1704  8E78 CD F3 8E     	call Genera_disparo
1705  8E7B C9           	ret
1706  8E7C
1707  8E7C              ; ----------------------------------------------------------------------
1708  8E7C              ;
1709  8E7C              ;	8/9/23
1710  8E7C
1711  8E7C 2A 3A 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1712  8E7F 2B            	dec hl
1713  8E80 7E           	ld a,(hl)
1714  8E81 A7           	and a
1715  8E82 C8           	ret z										; Salimos si es álbum está vacío.
1716  8E83
1717  8E83 11 F7 88     	ld de,Variables_de_borrado+5
1718  8E86 01 06 00     	ld bc,6
1719  8E89 ED B8        	lddr
1720  8E8B C9           	ret
1721  8E8C
1722  8E8C              ; ----------------------------------------------------------------------
1723  8E8C              ;
1724  8E8C              ;	9/9/23
1725  8E8C
1726  8E8C              Repone_datos_de_borrado_Amadeus
1727  8E8C
1728  8E8C 21 F2 88     	ld hl,Variables_de_borrado
1729  8E8F 11 AC 70     	ld de,Album_de_fotos_Amadeus
1730  8E92 01 06 00     	ld bc,6
1731  8E95 ED B0        	ldir
1732  8E97
1733  8E97 EB           	ex de,hl
1734  8E98 22 3A 89     	ld (End_Snapshot_Amadeus),hl
1735  8E9B
1736  8E9B C9           	ret
1737  8E9C
1738  8E9C              ; ----------------------------------------------------------------------
1739  8E9C              ;
1740  8E9C              ;	27/10/23
1741  8E9C              ;
1742  8E9C
1743  8E9C              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1744  8E9C              ;	_ Album_de_fotos correspondiente.
1745  8E9C
1746  8E9C              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1747  8E9C              ;	_ durante el proceso de escritura.
1748  8E9C
1749  8E9C              Repone_datos_de_borrado
1750  8E9C
1751  8E9C F3           	di
1752  8E9D ED 5B 34 89  	ld de,(Stack_snapshot)
1753  8EA1 21 F2 88     	ld hl,Variables_de_borrado
1754  8EA4 01 06 00     	ld bc,6
1755  8EA7 ED B0        	ldir
1756  8EA9 FB           	ei
1757  8EAA
1758  8EAA EB           	ex de,hl
1759  8EAB 22 34 89     	ld (Stack_snapshot),hl
1760  8EAE
1761  8EAE C9           	ret
1762  8EAF
1763  8EAF              ; --------------------------------------------------------------------------------------
1764  8EAF
1765  8EAF              Pinta_Amadeus
1766  8EAF
1767  8EAF CD 17 8D        	call Calcula_malotes_Amadeus
1768  8EB2 CD 57 97     	call Extrae_foto_Amadeus
1769  8EB5 CD D7 8C     	call Limpia_album_Amadeus
1770  8EB8
1771  8EB8 C9           	ret
1772  8EB9
1773  8EB9              Pinta_entidades
1774  8EB9
1775  8EB9              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1776  8EB9
1777  8EB9 3A 3C 89     	ld a,(Ctrl_3)
1778  8EBC CB 47        	bit 0,a
1779  8EBE C8           	ret z
1780  8EBF
1781  8EBF CD FF 8C     	call Calcula_numero_de_malotes
1782  8EC2 CD D5 96     	call Extrae_foto_entidades
1783  8EC5 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1784  8EC8
1785  8EC8 C9           	ret
1786  8EC9
1787  8EC9              ; -----------------------------------------------------------------------------------
1788  8EC9              ;
1789  8EC9              ;	10/12/23
1790  8EC9              ;
1791  8EC9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1792  8EC9
1793  8EC9              Actualiza_relojes
1794  8EC9
1795  8EC9 3A 3C 89     	ld a,(Ctrl_3)
1796  8ECC CB 47        	bit 0,a
1797  8ECE C8           	ret z 						;	Salimos si no hemos pintado unidades.
1798  8ECF
1799  8ECF 21 4E 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1800  8ED2 34           	inc (hl)
1801  8ED3
1802  8ED3 34           	inc (hl)
1803  8ED4 35           	dec (hl)
1804  8ED5 C0           	ret nz
1805  8ED6
1806  8ED6 21 4F 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1807  8ED9 34           	inc (hl)
1808  8EDA C9           	ret
1809  8EDB
1810  8EDB              ; ---------------------------------------------------------------
1811  8EDB              ;
1812  8EDB              ;	21/12/23
1813  8EDB
1814  8EDB              Guarda_parametros_DRAW
1815  8EDB
1816  8EDB 21 D8 88     	ld hl,Filas
1817  8EDE 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1818  8EE1 01 43 00     	ld bc,67
1819  8EE4 ED B0        	ldir
1820  8EE6 C9           	ret
1821  8EE7
1822  8EE7              Recupera_parametros_DRAW
1823  8EE7
1824  8EE7 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1825  8EEA 11 D8 88     	ld de,Filas
1826  8EED 01 43 00     	ld bc,67
1827  8EF0 ED B0        	ldir
1828  8EF2 C9           	ret
1829  8EF3
1830  8EF3              ; ---------------------------------------------------------------
1831  8EF3
1832  8EF3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EF3              ; ******************************************************************************************************************************************************************************************
   2+ 8EF3              ;
   3+ 8EF3              ;   21/07/23
   4+ 8EF3              ;
   5+ 8EF3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EF3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EF3              ;
   8+ 8EF3              ;
   9+ 8EF3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EF3              ;
  11+ 8EF3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EF3              ;               _ hacen las entidades hacia abajo.
  13+ 8EF3              ;
  14+ 8EF3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EF3              ;
  16+ 8EF3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EF3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EF3              ;
  19+ 8EF3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EF3              ;           _ la bala.
  21+ 8EF3              ;
  22+ 8EF3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EF3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EF3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EF3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EF3              ;           _ en el momento de generarse la bala)).
  27+ 8EF3
  28+ 8EF3              Genera_disparo
  29+ 8EF3
  30+ 8EF3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EF3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EF3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EF3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EF3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EF3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EF3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EF3
  38+ 8EF3              ; Exclusiones:
  39+ 8EF3
  40+ 8EF3 3A F0 88         ld a,(Vel_down)
  41+ 8EF6 47               ld b,a
  42+ 8EF7 3A 4D 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EFA B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EFB D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EFC 3A 15 89         ld a,(Columnas)
  46+ 8EFF 47               ld b,a
  47+ 8F00 3A D9 88         ld a,(Columns)
  48+ 8F03 B8               cp b
  49+ 8F04 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F05
  51+ 8F05              ; ----- ----- -----
  52+ 8F05
  53+ 8F05 3A 08 89         ld a,(Ctrl_0)
  54+ 8F08 CB 77            bit 6,a
  55+ 8F0A 20 06            jr nz,14F
  56+ 8F0C
  57+ 8F0C 3A DF 88         ld a,(Coordenada_y)
  58+ 8F0F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F11 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F12
  61+ 8F12 21 00 80     14 ld hl,Indice_disparo
  62+ 8F15 3A E0 88         ld a,(CTRL_DESPLZ)
  63+ 8F18 4F               ld c,a
  64+ 8F19 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F1B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F1B              ;                                            ""        ""       "f9", B="1"
  67+ 8F1B              ;                                            ""        ""       "fb", B="2"
  68+ 8F1B              ;                                            ""        ""       "fb", B="3"
  69+ 8F1B A7               and a
  70+ 8F1C 28 10            jr z,1F
  71+ 8F1E E6 01            and 1
  72+ 8F20 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F21
  74+ 8F21 79               ld a,c
  75+ 8F22 16 F9            ld d,$f9
  76+ 8F24 23           2 inc hl
  77+ 8F25 23               inc hl
  78+ 8F26 04               inc b
  79+ 8F27 BA               cp d
  80+ 8F28 28 04            jr z,1F
  81+ 8F2A 14               inc d
  82+ 8F2B 14               inc d
  83+ 8F2C 18 F6            jr 2B
  84+ 8F2E
  85+ 8F2E CD 4B 8D     1 call Extrae_address
  86+ 8F31 E5               push hl
  87+ 8F32 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F34 DD 21 9D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F38
  90+ 8F38              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F38              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F38
  93+ 8F38 3A 08 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F3B CB 77            bit 6,a
  95+ 8F3D 20 04            jr nz,19F
  96+ 8F3F
  97+ 8F3F AF               xor a
  98+ 8F40 32 56 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F43
 100+ 8F43 3A EC 88     19 ld a,(Cuad_objeto)
 101+ 8F46 FE 02            cp 2
 102+ 8F48 38 66            jr c,3F
 103+ 8F4A 28 64            jr z,3F
 104+ 8F4C
 105+ 8F4C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F4C
 107+ 8F4C E6 01            and 1
 108+ 8F4E 28 30            jr z,4F
 109+ 8F50
 110+ 8F50              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F50              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F50              ;
 113+ 8F50              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F50              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F50              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F50
 117+ 8F50 2A DA 88     	ld hl,(Posicion_actual)
 118+ 8F53
 119+ 8F53              ;   Amadeus o entidad ???.
 120+ 8F53
 121+ 8F53 3A 08 89         ld a,(Ctrl_0)
 122+ 8F56 CB 77            bit 6,a
 123+ 8F58 28 0A            jr z,8F
 124+ 8F5A
 125+ 8F5A              ; 	Dispara Amadeus.
 126+ 8F5A
 127+ 8F5A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F5C CD C6 96         call PreviousScan
 129+ 8F5F CD C6 96         call PreviousScan
 130+ 8F62
 131+ 8F62              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F62              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F62              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F62              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F62
 136+ 8F62 18 11            jr 10F
 137+ 8F64
 138+ 8F64              ; 	Dispara Entidad.
 139+ 8F64
 140+ 8F64 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F67              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F67
 143+ 8F67              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F67              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F67
 146+ 8F67 C5               push bc
 147+ 8F68 06 10            ld b,16
 148+ 8F6A CD B7 96     9 call NextScan
 149+ 8F6D 10 FB            djnz 9B
 150+ 8F6F C1               pop bc
 151+ 8F70 CD DA 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F73 18 06            jr 17F
 153+ 8F75
 154+ 8F75              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F75              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F75              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F75
 159+ 8F75 CD DA 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F78 CD 4F 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F7B              ;                                                      ; _al generar el disparo.
 162+ 8F7B
 163+ 8F7B              ; 	LLegados a este punto tendremos:
 164+ 8F7B              ;
 165+ 8F7B              ;       Puntero_objeto_disparo en IY.
 166+ 8F7B              ;       Rutinas_de_impresion en IX.
 167+ 8F7B              ;       Puntero_de_impresion en HL.
 168+ 8F7B              ;       Impacto/Dirección en BC.
 169+ 8F7B
 170+ 8F7B CD E2 8F     17 call Almacena_disparo
 171+ 8F7E 18 52            jr 6F                                             ; RET.
 172+ 8F80
 173+ 8F80              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F80              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F80              ;
 176+ 8F80              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F80              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F80              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F80
 180+ 8F80 2A DA 88     4 ld hl,(Posicion_actual)
 181+ 8F83
 182+ 8F83              ;   Amadeus o entidad ???.
 183+ 8F83
 184+ 8F83 3A 08 89         ld a,(Ctrl_0)
 185+ 8F86 CB 77            bit 6,a
 186+ 8F88 28 0A            jr z,11F
 187+ 8F8A
 188+ 8F8A              ; 	Dispara Amadeus.
 189+ 8F8A
 190+ 8F8A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F8C CD C6 96         call PreviousScan
 192+ 8F8F CD C6 96         call PreviousScan
 193+ 8F92
 194+ 8F92              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F92              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F92              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F92
 199+ 8F92 18 11            jr 13F
 200+ 8F94
 201+ 8F94              ; 	Dispara Entidad.
 202+ 8F94
 203+ 8F94 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F97              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F97
 206+ 8F97              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F97              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F97
 209+ 8F97 C5               push bc
 210+ 8F98 06 10            ld b,16
 211+ 8F9A CD B7 96     12 call NextScan
 212+ 8F9D 10 FB            djnz 12B
 213+ 8F9F C1               pop bc
 214+ 8FA0
 215+ 8FA0 CD D3 8F         call Ajusta_disparo_parte_derecha
 216+ 8FA3 18 06            jr 18F
 217+ 8FA5
 218+ 8FA5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FA5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FA5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FA5
 223+ 8FA5 CD D3 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FA8 CD 4F 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FAB              ;                                                       ; _al generar el disparo.
 226+ 8FAB
 227+ 8FAB              ; LLegados a este punto tendremos:
 228+ 8FAB              ;
 229+ 8FAB              ;       Puntero_objeto_disparo en IY.
 230+ 8FAB              ;       Rutinas_de_impresion en IX.
 231+ 8FAB              ;       Puntero_de_impresion en HL.
 232+ 8FAB              ;       Impacto/Dirección en BC.
 233+ 8FAB
 234+ 8FAB CD E2 8F     18 call Almacena_disparo
 235+ 8FAE 18 22            jr 6F                                               ; RET.
 236+ 8FB0
 237+ 8FB0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FB0
 239+ 8FB0 28 11        3 jr z,5F
 240+ 8FB2
 241+ 8FB2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FB2              ;
 243+ 8FB2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FB2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FB2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FB2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FB2
 248+ 8FB2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FB2              ;	   ""        ""       "f9", B="1"
 250+ 8FB2              ;	   ""        ""       "fb", B="2"
 251+ 8FB2              ; 	   ""        ""       "fb", B="3"
 252+ 8FB2
 253+ 8FB2 2A DA 88     	ld hl,(Posicion_actual)
 254+ 8FB5 CD B7 96     	call NextScan
 255+ 8FB8
 256+ 8FB8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FB8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FB8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FB8
 261+ 8FB8 CD DA 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FBB
 263+ 8FBB              ; 	No se produce impacto. B="$80"
 264+ 8FBB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FBB
 266+ 8FBB 01 80 80         ld bc,$8080
 267+ 8FBE
 268+ 8FBE              ; 	LLegados a este punto tendremos:
 269+ 8FBE              ;
 270+ 8FBE              ;       Puntero_objeto_disparo en IY.
 271+ 8FBE              ;       Rutinas_de_impresion en IX.
 272+ 8FBE              ;       Puntero_de_impresion en HL.
 273+ 8FBE              ;       Impacto/Dirección en BC.
 274+ 8FBE
 275+ 8FBE CD E2 8F         call Almacena_disparo
 276+ 8FC1 18 0F            jr 6F                                           ; RET.
 277+ 8FC3
 278+ 8FC3              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FC3              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FC3              ;
 281+ 8FC3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FC3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FC3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FC3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FC3
 286+ 8FC3 2A DA 88     5 ld hl,(Posicion_actual)
 287+ 8FC6 CD B7 96     	call NextScan
 288+ 8FC9
 289+ 8FC9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FC9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FC9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FC9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FC9
 294+ 8FC9 CD D3 8F         call Ajusta_disparo_parte_derecha
 295+ 8FCC
 296+ 8FCC              ; 	No se produce impacto. B="$80"
 297+ 8FCC              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FCC
 299+ 8FCC 01 80 80     15 ld bc,$8080
 300+ 8FCF
 301+ 8FCF              ; 	LLegados a este punto tendremos:
 302+ 8FCF              ;
 303+ 8FCF              ;       Puntero_objeto_disparo en IY.
 304+ 8FCF              ;       Rutinas_de_impresion en IX.
 305+ 8FCF              ;       Puntero_de_impresion en HL.
 306+ 8FCF              ;       Impacto/Dirección en BC.
 307+ 8FCF
 308+ 8FCF CD E2 8F         call Almacena_disparo
 309+ 8FD2
 310+ 8FD2 C9           6 ret
 311+ 8FD3
 312+ 8FD3              ; ----------------------------------------------------------------
 313+ 8FD3              ;
 314+ 8FD3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FD3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FD3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FD3
 318+ 8FD3 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FD4 FE 02            cp 2
 320+ 8FD6 38 01            jr c,1F
 321+ 8FD8 23               inc hl
 322+ 8FD9 C9           1 ret
 323+ 8FDA
 324+ 8FDA 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FDB FE 01        	cp 1
 326+ 8FDD 20 01        	jr nz,1F
 327+ 8FDF 2B           	dec hl
 328+ 8FE0 2B           1 dec hl
 329+ 8FE1 C9               ret
 330+ 8FE2
 331+ 8FE2              ; ----------------------------------------------------------------
 332+ 8FE2              ;
 333+ 8FE2              ;   25/02/23
 334+ 8FE2              ;
 335+ 8FE2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FE2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FE2              ;
 338+ 8FE2              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FE2              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FE2
 341+ 8FE2              Almacena_disparo
 342+ 8FE2
 343+ 8FE2 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FE3 F1               pop af
 345+ 8FE4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FE5
 347+ 8FE5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FE6 E6 01            and 1
 349+ 8FE8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FEA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FEA              ; 	Dispara AMADEUS.
 352+ 8FEA
 353+ 8FEA              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FEA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FEA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FEA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FEA
 358+ 8FEA C5               push bc
 359+ 8FEB 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FEE 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FF1 A7               and a
 362+ 8FF2 ED 42            sbc hl,bc
 363+ 8FF4 CC D0 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FF7 C1               pop bc
 365+ 8FF8 28 54            jr z,4F
 366+ 8FFA
 367+ 8FFA 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FFD 23               inc hl
 369+ 8FFE 23               inc hl
 370+ 8FFF 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9002              ;                                                   ; _ Disparo_(+1).
 372+ 9002 18 18            jr 2F
 373+ 9004
 374+ 9004              ; Dispara una entidad.
 375+ 9004
 376+ 9004 C5           1 push bc
 377+ 9005 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9008 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 900B A7               and a
 380+ 900C ED 42            sbc hl,bc
 381+ 900E CC C9 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9011 C1               pop bc
 383+ 9012 28 3A            jr z,4F
 384+ 9014
 385+ 9014 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9017 23               inc hl
 387+ 9018 23               inc hl
 388+ 9019 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 901C              ;                                                   ; _ Disparo_(+1).
 390+ 901C CD 4B 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 901F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 901F              ;
 393+ 901F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 901F              ;                                                     Rutinas_de_impresion en IX.
 395+ 901F              ;                                                     Puntero_de_impresion en HL.
 396+ 901F              ;                                                     Impacto/Dirección en BC.
 397+ 901F
 398+ 901F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9020 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9021 23               inc hl                                          ; _ al siguiente.
 401+ 9022 A7               and a
 402+ 9023 20 C0            jr nz,3B
 403+ 9025
 404+ 9025 08               ex af,af
 405+ 9026 ED 73 2E 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 902A F9               ld sp,hl
 407+ 902B
 408+ 902B DD E5            push ix                                         ; Rutina de impresión.
 409+ 902D F5               push af                                         ; Puntero de impresión.
 410+ 902E FD E5            push iy                                         ; Puntero objeto.
 411+ 9030 C5               push bc                                         ; Control.
 412+ 9031
 413+ 9031 ED 7B 2E 89      ld sp,(Stack)
 414+ 9035
 415+ 9035              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9035
 417+ 9035 21 1D 89     	ld hl,Ctrl_1
 418+ 9038 CB C6        	set 0,(hl)
 419+ 903A
 420+ 903A DD E5        	push ix
 421+ 903C E1               pop hl
 422+ 903D F5               push af
 423+ 903E DD E1            pop ix
 424+ 9040
 425+ 9040 CD 16 71     	call Guarda_foto_registros
 426+ 9043
 427+ 9043 21 1D 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9046 CB 86        	res 0,(hl)
 429+ 9048
 430+ 9048              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9048              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9048
 433+ 9048 CD D0 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 904B CD C9 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 904E
 436+ 904E C9           4 ret
 437+ 904F
 438+ 904F              ; ----------------------------------------------------------------
 439+ 904F              ;
 440+ 904F              ;   4/3/23
 441+ 904F              ;
 442+ 904F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 904F              ;   _ al generarse el disparo.
 444+ 904F              ;
 445+ 904F              ;       "$80" ..... No se produce colisión.
 446+ 904F              ;       "$81" ..... Se produce colisión.
 447+ 904F              ;
 448+ 904F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 904F              ;         _ que forman el disparo.
 450+ 904F
 451+ 904F
 452+ 904F              Comprueba_Colision
 453+ 904F
 454+ 904F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 904F
 456+ 904F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9051 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9052
 459+ 9052 CD 88 90         call Modifica_H_Velocidad_disparo
 460+ 9055
 461+ 9055 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9056 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9058 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 905A
 465+ 905A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 905C CD 78 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 905F
 468+ 905F 7B               ld a,e
 469+ 9060 E6 01            and 1
 470+ 9062 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9064              ;                                                  ; _ para activar IMPACTO.
 472+ 9064 E1               pop hl
 473+ 9065 E5               push hl
 474+ 9066 CD B7 96         call NextScan
 475+ 9069
 476+ 9069 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 906A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 906C 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 906E              ;                                                  ; _ 2º scanline si esto es así.
 480+ 906E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9070 CD 78 90         call Bucle_2
 482+ 9073
 483+ 9073 43           1 ld b,e
 484+ 9074 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9075 FD E1            pop iy
 486+ 9077 C9               ret
 487+ 9078
 488+ 9078              ; ---------- ----------
 489+ 9078
 490+ 9078 06 02        Bucle_2 ld b,2
 491+ 907A FD 7E 00     2 ld a,(iy)
 492+ 907D A6               and (hl)
 493+ 907E 28 02            jr z,1F
 494+ 9080 1E 81            ld e,$81
 495+ 9082 23           1 inc hl
 496+ 9083 FD 23            inc iy
 497+ 9085 10 F3            djnz 2B
 498+ 9087 C9               ret
 499+ 9088
 500+ 9088              ; ---------- ----------
 501+ 9088              ;
 502+ 9088              ;   21/7/23
 503+ 9088
 504+ 9088              Modifica_H_Velocidad_disparo
 505+ 9088
 506+ 9088 3A 4D 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 908B FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 908D D0               ret nc                                         ; _ incrementamos H.
 509+ 908E 24               inc h
 510+ 908F
 511+ 908F C9               ret
 512+ 9090
 513+ 9090              ; -------------------------------------------------------------------------------------------------------------
 514+ 9090              ;
 515+ 9090              ;   04/12/23
 516+ 9090              ;
 517+ 9090              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9090              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9090              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9090              ;
 521+ 9090              ;   MODIFICA: HL,DE,B y A.
 522+ 9090
 523+ 9090              Genera_coordenadas_X
 524+ 9090
 525+ 9090              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9090              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9090
 528+ 9090              ;   Limpiamos almacenes.
 529+ 9090
 530+ 9090 CD C1 90         call Limpia_Coordenadas_X
 531+ 9093
 532+ 9093              ;   Almacenamos coordenadas X.
 533+ 9093
 534+ 9093              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9093
 536+ 9093 2A 02 89         ld hl,(Puntero_de_impresion)
 537+ 9096 11 4A 89         ld de,Coordenadas_X_Entidad
 538+ 9099 06 02            ld b,2
 539+ 909B
 540+ 909B 3A E0 88         ld a,(CTRL_DESPLZ)
 541+ 909E A7               and a
 542+ 909F 28 01            jr z,1F
 543+ 90A1 04               inc b
 544+ 90A2
 545+ 90A2 CD B8 90     1 call Guarda_coordenadas_X
 546+ 90A5
 547+ 90A5              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 90A5
 549+ 90A5 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 90A8 11 47 89         ld de,Coordenadas_X_Amadeus
 551+ 90AB 06 02            ld b,2
 552+ 90AD
 553+ 90AD 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 90B0 A7               and a
 555+ 90B1 28 01            jr z,2F
 556+ 90B3 04               inc b
 557+ 90B4
 558+ 90B4 CD B8 90     2 call Guarda_coordenadas_X
 559+ 90B7
 560+ 90B7              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 90B7
 562+ 90B7 C9               ret
 563+ 90B8
 564+ 90B8              ; ----- ----- ----- ----- -----
 565+ 90B8
 566+ 90B8 7D           Guarda_coordenadas_X  ld a,l
 567+ 90B9 E6 1F            and $1f
 568+ 90BB 12           1 ld (de),a
 569+ 90BC 3C               inc a
 570+ 90BD 13               inc de
 571+ 90BE 10 FB            djnz 1B
 572+ 90C0 C9               ret
 573+ 90C1
 574+ 90C1 AF           Limpia_Coordenadas_X xor a
 575+ 90C2 06 06            ld b,6
 576+ 90C4 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 90C7 77           1 ld (hl),a
 578+ 90C8 23               inc hl
 579+ 90C9 10 FC            djnz 1B
 580+ 90CB C9               ret
 581+ 90CC
 582+ 90CC              ; ----- ----- ----- ----- -----
 583+ 90CC
 584+ 90CC              Compara_coordenadas_X
 585+ 90CC
 586+ 90CC 06 03            ld b,3
 587+ 90CE 11 4C 89         ld de,Coordenadas_X_Entidad+2
 588+ 90D1
 589+ 90D1 1A               ld a,(de)
 590+ 90D2 A7               and a
 591+ 90D3 20 01            jr nz,2F
 592+ 90D5 05               dec b
 593+ 90D6
 594+ 90D6 1B           2 dec de
 595+ 90D7 1B               dec de
 596+ 90D8 21 47 89         ld hl,Coordenadas_X_Amadeus
 597+ 90DB
 598+ 90DB D5           1 push de
 599+ 90DC E5               push hl
 600+ 90DD C5               push bc
 601+ 90DE
 602+ 90DE CD E8 90         call Comparando
 603+ 90E1
 604+ 90E1 C1               pop bc
 605+ 90E2 E1               pop hl
 606+ 90E3 D1               pop de
 607+ 90E4
 608+ 90E4 13               inc de
 609+ 90E5 10 F4            djnz 1B
 610+ 90E7
 611+ 90E7 C9               ret
 612+ 90E8
 613+ 90E8              ; ----- ----- ----- ----- -----
 614+ 90E8              ;
 615+ 90E8              ;   4/12/23
 616+ 90E8              ;
 617+ 90E8              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90E8
 619+ 90E8 06 03        Comparando ld b,3
 620+ 90EA 1A               ld a,(de)
 621+ 90EB 4E           2 ld c,(hl)
 622+ 90EC B9               cp c
 623+ 90ED 28 04            jr z,1F
 624+ 90EF 23               inc hl
 625+ 90F0 10 F9            djnz 2B
 626+ 90F2 C9               ret
 627+ 90F3
 628+ 90F3 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90F5 32 F1 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90F8 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90FB CB D6            set 2,(hl)
 632+ 90FD C9               ret
 633+ 90FE
 634+ 90FE              ; -----------------------------------------------------------------------
 635+ 90FE              ;
 636+ 90FE              ;   7/12/23
 637+ 90FE              ;
 638+ 90FE
 639+ 90FE              Detecta_colision_nave_entidad
 640+ 90FE
 641+ 90FE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90FE
 643+ 90FE FD 2A DC 88      ld iy,(Puntero_objeto)
 644+ 9102 2A 02 89         ld hl,(Puntero_de_impresion)
 645+ 9105
 646+ 9105 E5               push hl
 647+ 9106
 648+ 9106              ; ----- ----- -----
 649+ 9106 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9108 06 0A            ld b,10
 651+ 910A CD 3A 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 910D 7B               ld a,e
 653+ 910E FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9110 38 0E            jr c,3F
 655+ 9112
 656+ 9112              ; LLegados a este punto:
 657+ 9112              ;
 658+ 9112              ;   HAY COLISIÓN !!!!!.
 659+ 9112              ;
 660+ 9112              ;   .db (Impacto) de Amadeus a "1".
 661+ 9112              ;   SET el bit3 de (Impacto2).
 662+ 9112              ;
 663+ 9112              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9112
 665+ 9112 21 F1 88         ld hl,Impacto
 666+ 9115 36 01            ld (hl),1
 667+ 9117 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 911A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 911C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 911E
 671+ 911E 18 18            jr 1F
 672+ 9120
 673+ 9120              ; -----
 674+ 9120
 675+ 9120 E1           3 pop hl
 676+ 9121 CD B7 96         call NextScan
 677+ 9124 E5               push hl
 678+ 9125 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9126 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9128 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 912A 30 0C            jr nc,1F
 682+ 912C              ;                                                  ; _ 2º scanline si esto es así.
 683+ 912C 10 DC            djnz 2B
 684+ 912E
 685+ 912E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 912E
 687+ 912E              ; LLegados a este punto:
 688+ 912E              ;
 689+ 912E              ;   NO HAY COLISIÓN !!!!!.
 690+ 912E              ;
 691+ 912E              ;   .db (Impacto) de Amadeus a "0".
 692+ 912E              ;   RES el bit2 de (Impacto2).
 693+ 912E              ;
 694+ 912E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 912E              ;   Lo colocamos a "0".
 696+ 912E
 697+ 912E 21 42 89         ld hl,Impacto2
 698+ 9131 CB 96            res 2,(hl)
 699+ 9133 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9136 36 00            ld (hl),0
 701+ 9138
 702+ 9138 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9139 C9               ret
 704+ 913A
 705+ 913A               ; ---------- ----------
 706+ 913A
 707+ 913A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 913B 3A D9 88         ld a,(Columns)
 709+ 913E 47               ld b,a
 710+ 913F FD 7E 00     2 ld a,(iy)
 711+ 9142 BE               cp (hl)
 712+ 9143 28 01            jr z,1F
 713+ 9145
 714+ 9145 1C               inc e
 715+ 9146
 716+ 9146 23           1 inc hl
 717+ 9147 FD 23            inc iy
 718+ 9149 10 F4            djnz 2B
 719+ 914B C1               pop bc
 720+ 914C C9               ret
 721+ 914D
 722+ 914D              ; -------------------------------------------------------------------------------------------------------------
 723+ 914D              ;
 724+ 914D              ;   13/03/23
 725+ 914D              ;
 726+ 914D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 914D              ;
 728+ 914D              ;   DESTRUYE: HL,BC,DE y A.
 729+ 914D
 730+ 914D 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9150 7E               ld a,(hl)
 732+ 9151 A7               and a
 733+ 9152 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9153
 735+ 9153 44               ld b,h
 736+ 9154 4D               ld c,l
 737+ 9155 2A 36 89         ld hl,(Stack_snapshot_disparos)
 738+ 9158 E5               push hl
 739+ 9159 A7               and a
 740+ 915A ED 42            sbc hl,bc
 741+ 915C E5               push hl
 742+ 915D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 915E
 744+ 915E E1               pop hl
 745+ 915F 54               ld d,h
 746+ 9160 5D               ld e,l
 747+ 9161 1B               dec de
 748+ 9162 ED B8            lddr                                                ; Limpiamos.
 749+ 9164
 750+ 9164 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9167 22 36 89         ld (Stack_snapshot_disparos),hl
 752+ 916A
 753+ 916A C9               ret
 754+ 916B
 755+ 916B              ; -------------------------------------------------------------------------------------------------------------
 756+ 916B              ;
 757+ 916B              ;   18/07/23
 758+ 916B              ;
 759+ 916B
 760+ 916B              Motor_de_disparos
 761+ 916B
 762+ 916B              ; Gestiona DISPAROS DE AMADEUS.
 763+ 916B
 764+ 916B 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 916E 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9171
 767+ 9171 CD 4B 8D     2 call Extrae_address
 768+ 9174 7E               ld a,(hl)
 769+ 9175 A7               and a
 770+ 9176 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9178
 772+ 9178              ; ----- ----- ----- ----- ----- -----
 773+ 9178
 774+ 9178 C5               push bc
 775+ 9179 CD 3D 92         call foto_disparo_a_borrar
 776+ 917C
 777+ 917C              ; Existe colisión con este disparo???
 778+ 917C
 779+ 917C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 917D 7E               ld a,(hl)
 781+ 917E 2B               dec hl
 782+ 917F E6 01            and 1
 783+ 9181 28 1D            jr z,9F
 784+ 9183
 785+ 9183              ;   En este punto:
 786+ 9183              ;
 787+ 9183              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9183              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9183              ;   _con la entidad).
 790+ 9183              ;
 791+ 9183              ;   Disparo_2A defw 0                                ; Control.
 792+ 9183              ;    defw 0                                          ; Puntero objeto.
 793+ 9183              ;    defw 0                                          ; Puntero de impresión.
 794+ 9183              ;    defw 0                                          ; Rutina de impresión.
 795+ 9183
 796+ 9183 E5               push hl
 797+ 9184
 798+ 9184 06 04            ld b,4
 799+ 9186 23           19 inc hl
 800+ 9187 10 FD            djnz 19B
 801+ 9189
 802+ 9189 CD 4B 8D         call Extrae_address
 803+ 918C CD 8A 9D         call Genera_coordenadas_disparo
 804+ 918F
 805+ 918F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 918F
 807+ 918F 21 45 89         ld hl,Coordenadas_disparo_certero
 808+ 9192 72               ld (hl),d
 809+ 9193 23               inc hl
 810+ 9194 73               ld (hl),e
 811+ 9195
 812+ 9195              ; Elimino el disparo de la base de datos.
 813+ 9195
 814+ 9195 E1               pop hl
 815+ 9196 CD BC 92         call Elimina_disparo_de_base_de_datos
 816+ 9199 21 42 89         ld hl,Impacto2
 817+ 919C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 919E
 819+ 919E 18 06            jr 11F
 820+ 91A0
 821+ 91A0 CD 66 92     9 call Mueve_disparo
 822+ 91A3 CD 3D 92         call foto_disparo_a_borrar
 823+ 91A6
 824+ 91A6 C1           11 pop bc
 825+ 91A7 18 04            jr 7F
 826+ 91A9
 827+ 91A9              ; ----- ----- ----- ----- ----- -----
 828+ 91A9
 829+ 91A9 ED 42        1 sbc hl,bc
 830+ 91AB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 91AD
 832+ 91AD 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 91B0 23               inc hl
 834+ 91B1 23               inc hl
 835+ 91B2 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 91B5 18 BA            jr 2B
 837+ 91B7
 838+ 91B7 CD D0 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 91BA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 91BA
 841+ 91BA              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 91BA
 843+ 91BA 01 6A 85         ld bc,Disparo_11
 844+ 91BD 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91C0
 846+ 91C0 CD 4B 8D     5 call Extrae_address
 847+ 91C3 7E               ld a,(hl)
 848+ 91C4 A7               and a
 849+ 91C5 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91C7
 851+ 91C7              ; ----- ----- ----- ----- ----- -----
 852+ 91C7
 853+ 91C7 C5               push bc
 854+ 91C8 CD 3D 92         call foto_disparo_a_borrar
 855+ 91CB
 856+ 91CB              ; Existe colisión con este disparo???
 857+ 91CB
 858+ 91CB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91CC 7E               ld a,(hl)
 860+ 91CD 2B               dec hl
 861+ 91CE E6 01            and 1
 862+ 91D0 28 4D            jr z,10F
 863+ 91D2
 864+ 91D2              ;! La colisión se produce con Amadeus???
 865+ 91D2              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91D2
 867+ 91D2 E5               push hl
 868+ 91D3
 869+ 91D3 06 04            ld b,4
 870+ 91D5 23           16 inc hl
 871+ 91D6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91D8
 873+ 91D8 CD 4B 8D         call Extrae_address
 874+ 91DB CD 8A 9D         call Genera_coordenadas_disparo
 875+ 91DE
 876+ 91DE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91DF FE 16            cp $16
 878+ 91E1 38 2A            jr c,15F
 879+ 91E3
 880+ 91E3
 881+ 91E3              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91E3
 883+ 91E3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91E4
 885+ 91E4              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91E4
 887+ 91E4 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91E7
 889+ 91E7              ; Coordenada X de Amadeus en D.
 890+ 91E7
 891+ 91E7 7D               ld a,l
 892+ 91E8 E6 1F            and $1F
 893+ 91EA 57               ld d,a
 894+ 91EB
 895+ 91EB 21 86 85         ld hl,Amadeus_db+8
 896+ 91EE 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91EF
 898+ 91EF 21 47 89         ld hl,Coordenadas_X_Amadeus
 899+ 91F2 CD B8 90         call Guarda_coordenadas_X
 900+ 91F5
 901+ 91F5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91F6
 903+ 91F6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91F6
 905+ 91F6 06 02            ld b,2
 906+ 91F8 C5           20 push bc
 907+ 91F9
 908+ 91F9 06 03            ld b,3
 909+ 91FB 21 47 89         ld hl,Coordenadas_X_Amadeus
 910+ 91FE 7E           18 ld a,(hl)
 911+ 91FF BA               cp d
 912+ 9200 20 04            jr nz,17F
 913+ 9202
 914+ 9202              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9202
 916+ 9202 C1               pop bc
 917+ 9203 E1               pop hl
 918+ 9204 18 0D            jr 14F
 919+ 9206
 920+ 9206 23           17 inc hl
 921+ 9207 10 F5            djnz 18B
 922+ 9209
 923+ 9209 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 920A
 925+ 920A C1               pop bc
 926+ 920B 10 EB            djnz 20B
 927+ 920D
 928+ 920D
 929+ 920D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 920D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 920D
 932+ 920D E1           15 pop hl
 933+ 920E 23               inc hl
 934+ 920F 35               dec (hl)
 935+ 9210 2B               dec hl
 936+ 9211 18 0C            jr 10F
 937+ 9213
 938+ 9213              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9213              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9213
 941+ 9213 E5           14 push hl
 942+ 9214 CD BC 92         call Elimina_disparo_de_base_de_datos
 943+ 9217 21 42 89         ld hl,Impacto2
 944+ 921A CB CE            set 1,(hl)
 945+ 921C E1               pop hl
 946+ 921D 18 06            jr 12F
 947+ 921F
 948+ 921F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 921F
 950+ 921F CD 66 92     10 call Mueve_disparo
 951+ 9222 CD 3D 92         call foto_disparo_a_borrar
 952+ 9225 C1           12 pop bc
 953+ 9226
 954+ 9226 18 04            jr 8F
 955+ 9228
 956+ 9228              ; ----- ----- ----- ----- ----- -----
 957+ 9228
 958+ 9228 ED 42        4 sbc hl,bc
 959+ 922A 28 0A            jr z,6F
 960+ 922C
 961+ 922C 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 922F 23               inc hl
 963+ 9230 23               inc hl
 964+ 9231 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9234 18 8A            jr 5B
 966+ 9236
 967+ 9236 CD C9 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9239 CD C1 90         call Limpia_Coordenadas_X
 969+ 923C C9               ret
 970+ 923D
 971+ 923D              ; ------------------------------------------------------------------
 972+ 923D
 973+ 923D              foto_disparo_a_borrar
 974+ 923D
 975+ 923D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 923E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 923F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9240
 979+ 9240 E5               push hl
 980+ 9241 23               inc hl
 981+ 9242 23               inc hl
 982+ 9243 ED 73 2E 89      ld (Stack),sp
 983+ 9247 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9248 FD E1            pop iy
 985+ 924A DD E1            pop ix
 986+ 924C E1               pop hl
 987+ 924D ED 7B 2E 89      ld sp,(Stack)
 988+ 9251 3A 1D 89         ld a,(Ctrl_1)
 989+ 9254 CB C7            set 0,a
 990+ 9256 32 1D 89         ld (Ctrl_1),a
 991+ 9259 CD 16 71         call Guarda_foto_registros
 992+ 925C 3A 1D 89         ld a,(Ctrl_1)
 993+ 925F CB 87            res 0,a
 994+ 9261 32 1D 89         ld (Ctrl_1),a
 995+ 9264 E1               pop hl
 996+ 9265 C9               ret
 997+ 9266
 998+ 9266              ;---------------------------------------------------
 999+ 9266              ;
1000+ 9266              ;   18/07/23
1001+ 9266              ;
1002+ 9266
1003+ 9266              Mueve_disparo
1004+ 9266
1005+ 9266              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9266              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9266              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9266
1009+ 9266 E5               push hl
1010+ 9267
1011+ 9267 7E               ld a,(hl)
1012+ 9268
1013+ 9268 06 04            ld b,4
1014+ 926A 23           1 inc hl
1015+ 926B 10 FD            djnz 1B
1016+ 926D
1017+ 926D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 926D
1019+ 926D CD 4B 8D         call Extrae_address
1020+ 9270
1021+ 9270 E6 01            and 1
1022+ 9272 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9274
1024+ 9274              ; Disparo hacia arriba, (Amadeus).
1025+ 9274
1026+ 9274              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9274              ; _ de la dificultad.
1028+ 9274
1029+ 9274 CD C6 96         call PreviousScan
1030+ 9277 CD C6 96         call PreviousScan
1031+ 927A CD C6 96         call PreviousScan
1032+ 927D CD C6 96         call PreviousScan
1033+ 9280
1034+ 9280              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9280
1036+ 9280 7C               ld a,h
1037+ 9281 FE 40            cp $40
1038+ 9283 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9285
1040+ 9285              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9285
1042+ 9285 EB               ex de,hl
1043+ 9286 06 04            ld b,4
1044+ 9288 2B           6 dec hl
1045+ 9289 10 FD            djnz 6B
1046+ 928B
1047+ 928B CD BC 92         call Elimina_disparo_de_base_de_datos
1048+ 928E E1               pop hl
1049+ 928F 18 10            jr 7F
1050+ 9291
1051+ 9291              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9291              ; HL contiene el puntero de impresión del disparo.
1053+ 9291              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9291
1055+ 9291 D5           3 push de
1056+ 9292 C5               push bc
1057+ 9293
1058+ 9293 CD 4F 90         call Comprueba_Colision
1059+ 9296
1060+ 9296              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9296
1062+ 9296 78               ld a,b
1063+ 9297
1064+ 9297 C1               pop bc
1065+ 9298 D1               pop de
1066+ 9299
1067+ 9299 EB               ex de,hl
1068+ 929A
1069+ 929A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 929B 23               inc hl                                      ; _ movimiento.
1071+ 929C 72               ld (hl),d
1072+ 929D
1073+ 929D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 929E
1075+ 929E 23               inc hl                                      ; _ en curso.
1076+ 929F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 92A0 2B               dec hl
1078+ 92A1
1079+ 92A1 C9           7 ret
1080+ 92A2
1081+ 92A2              ; Disparo hacia abajo, (Entidad).
1082+ 92A2
1083+ 92A2 3A 4D 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 92A5 47               ld b,a
1085+ 92A6
1086+ 92A6 CD B7 96     4 call NextScan
1087+ 92A9 10 FB            djnz 4B
1088+ 92AB
1089+ 92AB              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 92AB
1091+ 92AB 7C               ld a,h
1092+ 92AC FE 58            cp $58
1093+ 92AE 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 92B0
1095+ 92B0 EB               ex de,hl
1096+ 92B1 06 04            ld b,4
1097+ 92B3 2B           5 dec hl
1098+ 92B4 10 FD            djnz 5B
1099+ 92B6
1100+ 92B6 CD BC 92         call Elimina_disparo_de_base_de_datos
1101+ 92B9 E1               pop hl
1102+ 92BA 18 E5            jr 7B
1103+ 92BC
1104+ 92BC              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 92BC
1106+ 92BC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92BF AF               xor a
1108+ 92C0 77               ld (hl),a
1109+ 92C1 54               ld d,h
1110+ 92C2 5D               ld e,l
1111+ 92C3 13               inc de
1112+ 92C4 ED B0            ldir
1113+ 92C6 C9               ret
1114+ 92C7
1115+ 92C7              ; -----------------------------------------------------------------
1116+ 92C7              ;
1117+ 92C7              ;   7/12/23
1118+ 92C7              ;
1119+ 92C7
1120+ 92C7 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92CA A7               and a
1122+ 92CB C8               ret z
1123+ 92CC
1124+ 92CC              ; Analizamos si hay impacto por disparos.
1125+ 92CC
1126+ 92CC              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92CC
1128+ 92CC CB 4F            bit 1,a
1129+ 92CE 28 07            jr z,1F
1130+ 92D0
1131+ 92D0 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92D3 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92D5 18 08            jr 2F
1134+ 92D7
1135+ 92D7 CB 47        1 bit 0,a
1136+ 92D9 C8               ret z
1137+ 92DA
1138+ 92DA              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92DA
1140+ 92DA 21 1D 89         ld hl,Ctrl_1
1141+ 92DD CB D6            set 2,(hl)
1142+ 92DF
1143+ 92DF C9           2 ret
1144+ 92E0
1145+ 92E0              ; -----------------------------------------------------------------
1146+ 92E0              ;
1147+ 92E0              ;   25/04/23
1148+ 92E0              ;
1149+ 92E0
1150+ 92E0              Determina_resultado_comparativa
1151+ 92E0
1152+ 92E0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92E0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92E0              ;
1155+ 92E0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92E0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92E0              ;
1158+ 92E0              ;   SBC HL,DE
1159+ 92E0
1160+ 92E0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92E0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92E0
1163+ 92E0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92E0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92E0
1166+ 92E0
1167+ 92E0 3A EC 88         ld a,(Cuad_objeto)
1168+ 92E3 FE 02            cp 2
1169+ 92E5 28 26            jr z,2F
1170+ 92E7 38 24            jr c,2F
1171+ 92E9
1172+ 92E9              ; Cuadrantes 3º y 4º
1173+ 92E9
1174+ 92E9 E6 01            and 1
1175+ 92EB 28 10            jr z,4F
1176+ 92ED
1177+ 92ED              ; Cuadrante 3º
1178+ 92ED
1179+ 92ED 7C               ld a,h
1180+ 92EE 06 00            ld b,0
1181+ 92F0
1182+ 92F0 CD 7B 93         call Compara_cositas_H3
1183+ 92F3
1184+ 92F3 04               inc b
1185+ 92F4 05               dec b
1186+ 92F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92F6
1188+ 92F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92F7 06 00            ld b,0
1190+ 92F9
1191+ 92F9 CD 8D 93         call Compara_cositas_L3
1192+ 92FC C9               ret
1193+ 92FD
1194+ 92FD              ; Cuadrante 4º
1195+ 92FD
1196+ 92FD 7C           4 ld a,h
1197+ 92FE 06 00            ld b,0
1198+ 9300
1199+ 9300 CD 9F 93         call Compara_cositas_H4
1200+ 9303
1201+ 9303 04               inc b
1202+ 9304 05               dec b
1203+ 9305 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9306
1205+ 9306 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9307 06 00            ld b,0
1207+ 9309
1208+ 9309 CD B5 93         call Compara_cositas_L4
1209+ 930C C9               ret
1210+ 930D
1211+ 930D              ; Cuadrantes 1º y 2º.
1212+ 930D
1213+ 930D 28 10        2 jr z,3F
1214+ 930F
1215+ 930F              ; 1er Cuadrante
1216+ 930F
1217+ 930F 7C               ld a,h
1218+ 9310 06 00            ld b,0
1219+ 9312
1220+ 9312 CD 53 93         call Compara_cositas_H1
1221+ 9315
1222+ 9315 04               inc b
1223+ 9316 05               dec b
1224+ 9317 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9318
1226+ 9318 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9319 06 00            ld b,0
1228+ 931B
1229+ 931B CD 69 93         call Compara_cositas_L1
1230+ 931E C9               ret
1231+ 931F
1232+ 931F
1233+ 931F              ; 2º Cuadrante
1234+ 931F
1235+ 931F 7C           3 ld a,h
1236+ 9320 06 00            ld b,0
1237+ 9322
1238+ 9322 CD 2F 93         call Compara_cositas_H2
1239+ 9325
1240+ 9325 04               inc b
1241+ 9326 05               dec b
1242+ 9327 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9328
1244+ 9328 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9329 06 00            ld b,0
1246+ 932B
1247+ 932B CD 41 93         call Compara_cositas_L2
1248+ 932E C9               ret
1249+ 932F
1250+ 932F A7           Compara_cositas_H2 and a
1251+ 9330 28 0D            jr z,1F
1252+ 9332              ;    cp $fd
1253+ 9332              ;    jr z,1F
1254+ 9332              ;    cp $fe
1255+ 9332              ;    jr z,1F
1256+ 9332 FE FF            cp $ff
1257+ 9334 28 09            jr z,1F
1258+ 9336 FE 01            cp $01
1259+ 9338 28 05            jr z,1F
1260+ 933A FE 02            cp $02
1261+ 933C 28 01            jr z,1F
1262+ 933E C0               ret nz
1263+ 933F 04           1 inc b
1264+ 9340 C9               ret
1265+ 9341
1266+ 9341 A7           Compara_cositas_L2 and a
1267+ 9342 28 0D            jr z,1F
1268+ 9344              ;    cp $fd
1269+ 9344              ;    jr z,1F
1270+ 9344 FE FE            cp $fe
1271+ 9346 28 09            jr z,1F
1272+ 9348 FE FF            cp $ff
1273+ 934A 28 05            jr z,1F
1274+ 934C FE 01            cp $01
1275+ 934E 28 01            jr z,1F
1276+ 9350              ;    cp $02
1277+ 9350              ;    jr z,1F
1278+ 9350 C0               ret nz
1279+ 9351 04           1 inc b
1280+ 9352 C9               ret
1281+ 9353
1282+ 9353 A7           Compara_cositas_H1 and a
1283+ 9354 28 11            jr z,1F
1284+ 9356              ;    cp $fd
1285+ 9356              ;    jr z,1F
1286+ 9356              ;    cp $fe
1287+ 9356              ;    jr z,1F
1288+ 9356 FE FF            cp $ff
1289+ 9358 28 0D            jr z,1F
1290+ 935A FE 01            cp $01
1291+ 935C 28 09            jr z,1F
1292+ 935E FE 02            cp $02
1293+ 9360 28 05            jr z,1F
1294+ 9362 FE 03            cp $03
1295+ 9364 28 01            jr z,1F
1296+ 9366 C0               ret nz
1297+ 9367 04           1 inc b
1298+ 9368 C9               ret
1299+ 9369
1300+ 9369 A7           Compara_cositas_L1 and a
1301+ 936A 28 0D            jr z,1F
1302+ 936C              ;    cp $fd
1303+ 936C              ;    jr z,1F
1304+ 936C              ;    cp $fe
1305+ 936C              ;    jr z,1F
1306+ 936C              ;    cp $ff
1307+ 936C              ;    jr z,1F
1308+ 936C FE 01            cp $01
1309+ 936E 28 09            jr z,1F
1310+ 9370 FE 02            cp $02
1311+ 9372 28 05            jr z,1F
1312+ 9374 FE 03            cp $03
1313+ 9376 28 01            jr z,1F
1314+ 9378 C0               ret nz
1315+ 9379 04           1 inc b
1316+ 937A C9               ret
1317+ 937B
1318+ 937B A7           Compara_cositas_H3 and a
1319+ 937C 28 0D            jr z,1F
1320+ 937E              ;    cp $fd
1321+ 937E              ;    jr z,1F
1322+ 937E FE FE            cp $fe
1323+ 9380 28 09            jr z,1F
1324+ 9382 FE FF            cp $ff
1325+ 9384 28 05            jr z,1F
1326+ 9386 FE 01            cp $01
1327+ 9388 28 01            jr z,1F
1328+ 938A              ;    cp $02
1329+ 938A              ;    jr z,1F
1330+ 938A              ;    cp $03
1331+ 938A              ;    jr z,1F
1332+ 938A C0               ret nz
1333+ 938B 04           1 inc b
1334+ 938C C9               ret
1335+ 938D
1336+ 938D A7           Compara_cositas_L3 and a
1337+ 938E 28 0D            jr z,1F
1338+ 9390              ;    cp $fd
1339+ 9390              ;    jr z,1F
1340+ 9390              ;    cp $fe
1341+ 9390              ;    jr z,1F
1342+ 9390              ;    cp $ff
1343+ 9390              ;    jr z,1F
1344+ 9390 FE 01            cp $01
1345+ 9392 28 09            jr z,1F
1346+ 9394 FE 02            cp $02
1347+ 9396 28 05            jr z,1F
1348+ 9398 FE 03            cp $03
1349+ 939A 28 01            jr z,1F
1350+ 939C C0               ret nz
1351+ 939D 04           1 inc b
1352+ 939E C9               ret
1353+ 939F
1354+ 939F A7           Compara_cositas_H4 and a
1355+ 93A0 28 11            jr z,1F
1356+ 93A2 FE FD            cp $fd
1357+ 93A4 28 0D            jr z,1F
1358+ 93A6 FE FE            cp $fe
1359+ 93A8 28 09            jr z,1F
1360+ 93AA FE FF            cp $ff
1361+ 93AC 28 05            jr z,1F
1362+ 93AE FE 01            cp $01
1363+ 93B0 28 01            jr z,1F
1364+ 93B2              ;    cp $02
1365+ 93B2              ;    jr z,1F
1366+ 93B2              ;    cp $03
1367+ 93B2              ;    jr z,1F
1368+ 93B2 C0               ret nz
1369+ 93B3 04           1 inc b
1370+ 93B4 C9               ret
1371+ 93B5
1372+ 93B5 A7           Compara_cositas_L4 and a
1373+ 93B6 28 0D            jr z,1F
1374+ 93B8              ;    cp $fd
1375+ 93B8              ;    jr z,1F
1376+ 93B8 FE FE            cp $fe
1377+ 93BA 28 09            jr z,1F
1378+ 93BC FE FF            cp $ff
1379+ 93BE 28 05            jr z,1F
1380+ 93C0 FE 01            cp $01
1381+ 93C2 28 01            jr z,1F
1382+ 93C4              ;    cp $02
1383+ 93C4              ;    jr z,1F
1384+ 93C4              ;    cp $03
1385+ 93C4              ;    jr z,1F
1386+ 93C4 C0               ret nz
1387+ 93C5 04           1 inc b
1388+ 93C6 C9               ret
# file closed: Disparo.asm
1833  93C7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93C7              ; ******************************************************************************************************************************************************************************************
   2+ 93C7              ;
   3+ 93C7              ; 26/06/23
   4+ 93C7              ;
   5+ 93C7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93C7
   7+ 93C7              Draw
   8+ 93C7
   9+ 93C7 CD AB 96     	call Prepara_draw
  10+ 93CA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93CB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93CC 28 05        	jr z,2F
  13+ 93CE
  14+ 93CE 3A EC 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93D1 18 0C        	jr 1F
  16+ 93D3
  17+ 93D3 2A EA 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93D6 22 DA 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93D9 CD 68 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93DC              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93DC CD 1B A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93DF
  23+ 93DF 3A 08 89     1 ld a,(Ctrl_0)
  24+ 93E2 CB 6F        	bit 5,a
  25+ 93E4 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93E6
  27+ 93E6 CD FE 93     	call Comprueba_limite_horizontal
  28+ 93E9 CD 8E 94     	call Comprueba_limite_vertical
  29+ 93EC
  30+ 93EC              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93EC              ; -----------------------
  32+ 93EC              ; -----------------------
  33+ 93EC              ; -----------------------
  34+ 93EC
  35+ 93EC CD DB 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93EF CD 12 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93F2 CD 71 96     	call Define_rutina_de_impresion
  38+ 93F5
  39+ 93F5 3A 08 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93F8 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93FA 32 08 89     	ld (Ctrl_0),a
  42+ 93FD
  43+ 93FD C9           	ret
  44+ 93FE
  45+ 93FE              ; *******************************************************************************************************************************************************************************************
  46+ 93FE              ;	21/01/23
  47+ 93FE              ;
  48+ 93FE              ; 	Comprueba_limite_horizontal.
  49+ 93FE              ;
  50+ 93FE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93FE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93FE              ;
  53+ 93FE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93FE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93FE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93FE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93FE
  58+ 93FE
  59+ 93FE
  60+ 93FE 3A 08 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9401 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9403 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9405 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9407 32 08 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 940A 18 09            jr 6F
  66+ 940C CB 5F        1 bit 3,a
  67+ 940E 28 0A            jr z,2F
  68+ 9410 E6 F7            and $f7
  69+ 9412 32 08 89         ld (Ctrl_0),a
  70+ 9415 CD 68 95     6 call Inicializacion
  71+ 9418 18 5B            jr 5F
  72+ 941A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 941B
  74+ 941B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 941B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 941B
  77+ 941B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 941C 2A 16 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 941F CD CA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9422 67           	ld h,a
  81+ 9423 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9424 CD CA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9427 67           	ld h,a
  84+ 9428 A7           	and a
  85+ 9429 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 942B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 942C 3A EC 88     	ld a,(Cuad_objeto)
  88+ 942F FE 02        	cp 2
  89+ 9431 38 1E        	jr c,3F
  90+ 9433 28 1C        	jr z,3F
  91+ 9435 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9436 28 23            jr z,7F
  93+ 9438 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 943A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 943C E1           	pop hl
  96+ 943D
  97+ 943D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 943D              ; _para indicar con E="2" en caso necesario.
  99+ 943D
 100+ 943D E5               push hl
 101+ 943E C5               push bc
 102+ 943F CD CA 99     	call calcula_tercio
 103+ 9442 FE 01        	cp 1
 104+ 9444 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9446 CD 76 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9449 28 26            jr z,9F
 107+ 944B 38 24            jr c,9F
 108+ 944D 1E 00        11 ld e,0
 109+ 944F 18 22            jr 8F
 110+ 9451 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9452 28 07        	jr z, 7F
 112+ 9454 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9456 1E 00         	ld e,0
 114+ 9458 E1           	pop hl
 115+ 9459 18 04        	jr 4F
 116+ 945B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 945D 18 15            jr 10F
 118+ 945F
 119+ 945F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 945F              ; _para indicar con E="2" en caso necesario.
 121+ 945F
 122+ 945F E5           4 push hl
 123+ 9460 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9461 CD CA 99     	call calcula_tercio
 125+ 9464 FE 01        	cp 1
 126+ 9466 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9468 CD 76 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 946B 28 04            jr z,9F
 129+ 946D 30 02            jr nc,9F
 130+ 946F 18 02        	jr 8F
 131+ 9471 1E 02        9 ld e,2
 132+ 9473 C1           8 pop bc
 133+ 9474 E1           10 pop hl
 134+ 9475 C9           5 ret
 135+ 9476
 136+ 9476              ; --------------------
 137+ 9476              ;
 138+ 9476              ; 25/08/22
 139+ 9476
 140+ 9476 CD CA 99     Comprueba_centro call calcula_tercio
 141+ 9479 67               ld h,a
 142+ 947A 08           	ex af,af
 143+ 947B FE 02        	cp 2
 144+ 947D 38 07        	jr c,1F
 145+ 947F 28 05        	jr z,1F
 146+ 9481 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9484 18 03        	jr 2F
 148+ 9486 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9489 08           2 ex af,af
 150+ 948A A7               and a
 151+ 948B ED 42            sbc hl,bc
 152+ 948D C9               ret
 153+ 948E
 154+ 948E              ; *********************************************************************************************************************************************************************************************
 155+ 948E              ;
 156+ 948E              ;   16/8/22
 157+ 948E              ;
 158+ 948E              ;	Comprueba_limite_vertical
 159+ 948E              ;
 160+ 948E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 948E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 948E              ;
 163+ 948E
 164+ 948E 2A DA 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9491 7D           	ld a,l
 166+ 9492 E6 1F        	and $1F
 167+ 9494 57           	ld d,a
 168+ 9495 3A 18 89     	ld a,(Limite_vertical)
 169+ 9498 BA           	cp d 											; Límite - Posición.
 170+ 9499 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 949A 3A EC 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 949D CB 47        	bit 0,a
 173+ 949F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 94A1
 175+ 94A1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 94A1
 177+ 94A1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 94A2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 94A4
 180+ 94A4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 94A4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 94A4
 183+ 94A4 3A DE 88         ld a,(Coordenada_X)
 184+ 94A7 16 0F            ld d,Centro_izquierda
 185+ 94A9 A7               and a
 186+ 94AA 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 94AB 28 1E            jr z,3F
 188+ 94AD 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 94AF              ;                                                    ; _salimos sin modificar nada.
 190+ 94AF 18 0E            jr 2F
 191+ 94B1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 94B2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 94B4
 194+ 94B4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 94B4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 94B4
 197+ 94B4 3A DE 88         ld a,(Coordenada_X)
 198+ 94B7 16 10            ld d,Centro_derecha
 199+ 94B9 A7               and a
 200+ 94BA 92               sub d
 201+ 94BB 28 0E            jr z,3F
 202+ 94BD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94BF              ;                                                    ; _salimos sin modificar nada.
 204+ 94BF CB 43        2 bit 0,e
 205+ 94C1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94C3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94C4 CD 58 95         call Modificaccionne
 208+ 94C7 C1           	pop bc
 209+ 94C8 CD 68 95         call Inicializacion
 210+ 94CB C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94CC
 212+ 94CC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94CC
 214+ 94CC C5           4 push bc
 215+ 94CD 01 D9 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94D0 0A           	ld a,(bc)
 217+ 94D1 3D           	dec a
 218+ 94D2 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94D3 7D           	ld a,l
 220+ 94D4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94D5 CB 47        	bit 0,a
 222+ 94D7 28 03        	jr z,5F
 223+ 94D9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94DA 18 2E        	jr 7F
 225+ 94DC
 226+ 94DC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94DC
 228+ 94DC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94DD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94DE 3A 08 89     	ld a,(Ctrl_0)
 231+ 94E1 CB 4F        	bit 1,a
 232+ 94E3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94E5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94E6
 235+ 94E6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94E6
 237+ 94E6 1C               inc e
 238+ 94E7 1D               dec e
 239+ 94E8 20 07            jr nz,12F
 240+ 94EA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94EB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94EC 22 DA 88     	ld (Posicion_actual),hl
 243+ 94EF 18 44        13 jr 9F
 244+ 94F1 CB 43        12 bit 0,e
 245+ 94F3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94F5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94F5 C1           	pop bc
 248+ 94F6 18 D3        	jr 3B
 249+ 94F8 80           14 add b
 250+ 94F9 6F               ld l,a
 251+ 94FA 22 DA 88     	ld (Posicion_actual),hl
 252+ 94FD CD 58 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9500 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9502 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9504 32 08 89         ld (Ctrl_0),a
 256+ 9507 F1           	pop af
 257+ 9508 18 2B        	jr 9F
 258+ 950A
 259+ 950A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 950A
 261+ 950A F5           7 push af
 262+ 950B 3A 08 89     	ld a,(Ctrl_0)
 263+ 950E CB 47        	bit 0,a
 264+ 9510 20 1D        	jr nz,8F
 265+ 9512 F1           	pop af
 266+ 9513
 267+ 9513              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9513
 269+ 9513 1C           	inc e
 270+ 9514 1D               dec e
 271+ 9515 20 07            jr nz,10F
 272+ 9517 90           	sub b
 273+ 9518 6F               ld l,a
 274+ 9519 22 DA 88     	ld (Posicion_actual),hl
 275+ 951C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 951E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 951E CB 43        10 bit 0,e
 278+ 9520 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9522              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9522 C1           	pop bc
 281+ 9523 18 A6        	jr 3B
 282+ 9525 90           16 sub b
 283+ 9526 6F               ld l,a
 284+ 9527 22 DA 88     	ld (Posicion_actual),hl
 285+ 952A CD 58 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 952D 18 06            jr 9F
 287+ 952F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9531 32 08 89         ld (Ctrl_0),a
 289+ 9534 F1           	pop af
 290+ 9535 C1           9 pop bc
 291+ 9536 1E 00        	ld e,0
 292+ 9538 CD 68 95         call Inicializacion
 293+ 953B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 953C 08           	ex af,af
 295+ 953D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 953E 18 8B            jr 3B
 297+ 9540
 298+ 9540              ; --------------------
 299+ 9540
 300+ 9540 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9542 CD C6 96     1 call PreviousScan
 302+ 9545 10 FB            djnz 1B
 303+ 9547 22 DA 88     	ld (Posicion_actual),hl
 304+ 954A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 954B C9           	ret
 306+ 954C
 307+ 954C              ; --------------------
 308+ 954C
 309+ 954C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 954E CD B7 96     1 call NextScan
 311+ 9551 10 FB            djnz 1B
 312+ 9553 22 DA 88     	ld (Posicion_actual),hl
 313+ 9556 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9557 C9           	ret
 315+ 9558
 316+ 9558              ; --------------------
 317+ 9558              ;
 318+ 9558              ;	22/01/23
 319+ 9558              ;
 320+ 9558              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9558              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9558              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9558
 324+ 9558
 325+ 9558              Modificaccionne
 326+ 9558
 327+ 9558 3A EC 88     	ld a,(Cuad_objeto)
 328+ 955B FE 02        	cp 2
 329+ 955D CC 40 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9560 DC 40 95         call c,Modifica_Pos_actual
 331+ 9563 C8           	ret z
 332+ 9564 CD 4C 95         call Modifica_Pos_actual2
 333+ 9567 C9               ret
 334+ 9568
 335+ 9568              ; *************************************************************************************************************************************************************************************************
 336+ 9568              ;
 337+ 9568              ;	13/8/22
 338+ 9568              ;
 339+ 9568              ;	Inicializacion
 340+ 9568              ;
 341+ 9568              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9568              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9568              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9568              ;
 345+ 9568              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9568              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9568              ;	_ desaparece/aparece.
 348+ 9568
 349+ 9568              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9568              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9568              ;
 352+ 9568              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9568              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9568              ; 		   [E] ="0"
 355+ 9568
 356+ 9568              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9568
 358+ 9568 CD CA 99     Inicializacion call calcula_tercio
 359+ 956B 28 36        	jr z,primit
 360+ 956D E6 02        	and 2
 361+ 956F 20 07        	jr nz,segmit
 362+ 9571 7D           	ld a,l
 363+ 9572 FE 7F        	cp $7f
 364+ 9574 38 2D        	jr c,primit
 365+ 9576 28 2B        	jr z,primit
 366+ 9578 CD D5 95     segmit call column
 367+ 957B 38 13        	jr c,tercuad
 368+ 957D 3E 04        cuarcuad ld a,4
 369+ 957F 32 EC 88     	ld (Cuad_objeto),a
 370+ 9582 21 20 48     	ld hl,$4820
 371+ 9585 22 16 89     	ld (Limite_horizontal),hl
 372+ 9588 21 18 89     	ld hl,Limite_vertical
 373+ 958B 36 0D        	ld (hl),$0d
 374+ 958D 08           	ex af,af
 375+ 958E 18 3C        	jr 1F
 376+ 9590              tercuad
 377+ 9590 3E 03        	ld a,3
 378+ 9592 32 EC 88     	ld (Cuad_objeto),a
 379+ 9595 21 20 48     	ld hl,$4820
 380+ 9598 22 16 89     	ld (Limite_horizontal),hl
 381+ 959B 21 18 89     	ld hl,Limite_vertical
 382+ 959E 36 12        	ld (hl),$12
 383+ 95A0 08           	ex af,af
 384+ 95A1 18 29        	jr 1F
 385+ 95A3 CD D5 95     primit call column
 386+ 95A6 38 13        	jr c, primcuad
 387+ 95A8              segcuad
 388+ 95A8 3E 02        	ld a,2
 389+ 95AA 32 EC 88     	ld (Cuad_objeto),a
 390+ 95AD 21 C0 4F     	ld hl,$4fc0
 391+ 95B0 22 16 89     	ld (Limite_horizontal),hl
 392+ 95B3 21 18 89     	ld hl,Limite_vertical
 393+ 95B6 36 0D        	ld (hl),$0d
 394+ 95B8 08           	ex af,af
 395+ 95B9 18 11        	jr 1F
 396+ 95BB              primcuad
 397+ 95BB 3E 01        	ld a,1
 398+ 95BD 32 EC 88     	ld (Cuad_objeto),a
 399+ 95C0 21 C0 4F     	ld hl,$4fc0
 400+ 95C3 22 16 89     	ld (Limite_horizontal),hl
 401+ 95C6 21 18 89     	ld hl,Limite_vertical
 402+ 95C9 36 12        	ld (hl),$12
 403+ 95CB 08           	ex af,af
 404+ 95CC CD 5F 9D     1 call Genera_coordenadas
 405+ 95CF 21 08 89     	ld hl,Ctrl_0
 406+ 95D2 CB EE        	set 5,(hl)
 407+ 95D4 C9           	ret
 408+ 95D5
 409+ 95D5              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95D5
 411+ 95D5              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95D5              ;
 413+ 95D5              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95D5
 415+ 95D5 7D           column ld a,l
 416+ 95D6 E6 1F        	and $1f
 417+ 95D8 FE 10         	cp $10
 418+ 95DA C9            	ret
 419+ 95DB
 420+ 95DB              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95DB              ;
 422+ 95DB              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95DB              ;
 424+ 95DB              ; 14/12/22
 425+ 95DB              ;
 426+ 95DB              ;	Modifica: A y BC.
 427+ 95DB
 428+ 95DB 3A EC 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95DE E6 01        	and 1
 430+ 95E0 28 17        	jr z,1F
 431+ 95E2
 432+ 95E2              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95E2
 434+ 95E2 3A DE 88     	ld a,(Coordenada_X)
 435+ 95E5 47           	ld b,a
 436+ 95E6 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95E7 79           	ld a,c
 438+ 95E8 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95E9 38 08        	jr c,2F
 440+ 95EB 47           	ld b,a
 441+ 95EC 79           	ld a,c
 442+ 95ED 90           	sub b
 443+ 95EE 32 15 89     	ld (Columnas),a
 444+ 95F1 18 1B        	jr 4F
 445+ 95F3 79           2 ld a,c
 446+ 95F4 32 15 89     	ld (Columnas),a
 447+ 95F7 18 15        	jr 4F
 448+ 95F9
 449+ 95F9              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95F9
 451+ 95F9 3A DE 88     1 ld a,(Coordenada_X)
 452+ 95FC 81           	add c
 453+ 95FD 3D           	dec a
 454+ 95FE D6 1F        	sub $1f
 455+ 9600 38 08        	jr c,3F
 456+ 9602 47           	ld b,a
 457+ 9603 79           	ld a,c
 458+ 9604 90           	sub b
 459+ 9605 32 15 89     	ld (Columnas),a
 460+ 9608 18 04        	jr 4F
 461+ 960A 79           3 ld a,c
 462+ 960B 32 15 89     	ld (Columnas),a
 463+ 960E D9           4 exx
 464+ 960F 4F           	ld c,a
 465+ 9610 D9           	exx
 466+ 9611 C9            ret
 467+ 9612
 468+ 9612              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9612              ;
 470+ 9612              ;   19/7/23
 471+ 9612              ;
 472+ 9612              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9612              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9612              ;
 475+ 9612              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9612              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9612              ;
 478+ 9612              ;	DESTRUYE: HL,B Y A.
 479+ 9612
 480+ 9612 3A EC 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9615 FE 02        	cp 2
 482+ 9617 38 18        	jr c,1F
 483+ 9619 28 16        	jr z,1F
 484+ 961B E6 01        	and 1
 485+ 961D 28 0D        	jr z,3F
 486+ 961F
 487+ 961F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 961F
 489+ 961F CD 65 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9622
 491+ 9622 7D           9 ld a,l
 492+ 9623 E6 1F        	and $1f
 493+ 9625 28 2A        	jr z,7F
 494+ 9627 2B           	dec hl
 495+ 9628 10 F8        	djnz 9B
 496+ 962A 18 25        	jr 7F
 497+ 962C
 498+ 962C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 962C
 500+ 962C 2A DA 88     3 ld hl,(Posicion_actual)
 501+ 962F 18 20        	jr 7F
 502+ 9631
 503+ 9631 28 14        1 jr z,2F
 504+ 9633
 505+ 9633              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9633
 507+ 9633 CD 65 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9636
 509+ 9636 7D           4 ld a,l
 510+ 9637 E6 1F        	and $1f
 511+ 9639 28 03        	jr z,6F
 512+ 963B 2B           	dec hl
 513+ 963C 10 F8        	djnz 4B
 514+ 963E 06 0F        6 ld b,15
 515+ 9640 CD C6 96     5 call PreviousScan
 516+ 9643 10 FB        	djnz 5B
 517+ 9645 18 0A        	jr 7F
 518+ 9647
 519+ 9647              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9647
 521+ 9647 CD 65 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 964A 06 0F        	ld b,15
 523+ 964C CD C6 96     8 call PreviousScan
 524+ 964F 10 FB        	djnz 8B
 525+ 9651
 526+ 9651 E5           7 push hl
 527+ 9652 DD E1        	pop ix
 528+ 9654
 529+ 9654 2A DC 88     	ld hl,(Puntero_objeto)
 530+ 9657 E5           	push hl
 531+ 9658 FD E1        	pop iy
 532+ 965A
 533+ 965A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 965A
 535+ 965A 3A 08 89     	ld a,(Ctrl_0)
 536+ 965D CB 77        	bit 6,a
 537+ 965F C8           	ret z
 538+ 9660
 539+ 9660              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9660              ; _ entidad / Amadeus´.
 541+ 9660
 542+ 9660 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9664
 544+ 9664 C9           	ret
 545+ 9665
 546+ 9665              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9665              ;
 548+ 9665              ;	2/1/23
 549+ 9665              ;
 550+ 9665              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9665              ;
 552+ 9665              ;	Tras esta rutina tenemos:
 553+ 9665              ;
 554+ 9665              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9665              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9665              ;
 557+ 9665              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9665
 559+ 9665 2A DA 88     Operandos ld hl,(Posicion_actual)
 560+ 9668 3A 15 89     	ld a,(Columnas)
 561+ 966B 3D           	dec a
 562+ 966C 20 01        	jr nz,1F
 563+ 966E 3C           	inc a
 564+ 966F 47           1 ld b,a
 565+ 9670 C9           	ret
 566+ 9671
 567+ 9671              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9671              ;
 569+ 9671              ;	3/1/23
 570+ 9671              ;
 571+ 9671              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9671              ;
 573+ 9671              ;	Destruye: A,B,HL y DE.
 574+ 9671
 575+ 9671              Define_rutina_de_impresion
 576+ 9671
 577+ 9671 3A D9 88     	ld a,(Columns)
 578+ 9674 47           	ld b,a
 579+ 9675 3A 15 89     	ld a,(Columnas)
 580+ 9678 B8           	cp b
 581+ 9679 20 0D        	jr nz,2f
 582+ 967B
 583+ 967B              ;	La entidad se imprime entera.
 584+ 967B
 585+ 967B 21 9A 97     	ld hl, Indice_entidades_completas
 586+ 967E E6 01        	and 1
 587+ 9680 28 02        	jr z,1F
 588+ 9682
 589+ 9682 23           	inc hl
 590+ 9683 23           	inc hl
 591+ 9684
 592+ 9684 CD 4B 8D     1 call Extrae_address
 593+ 9687 C9           	ret		;	ret
 594+ 9688
 595+ 9688              ;	La entidad no se imprime entera en pantalla.
 596+ 9688
 597+ 9688 3A EC 88     2 ld a,(Cuad_objeto)
 598+ 968B E6 01        	and 1
 599+ 968D 28 17        	jr z,3F
 600+ 968F
 601+ 968F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 968F
 603+ 968F 21 9E 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9692 3A D9 88     4 ld a,(Columns)
 605+ 9695 E6 01        	and 1
 606+ 9697 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 9699
 608+ 9699 23           	inc hl
 609+ 969A 23           	inc hl
 610+ 969B
 611+ 969B 3A 15 89     	ld a,(Columnas)
 612+ 969E E6 01        	and 1
 613+ 96A0 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 96A2
 615+ 96A2 23           	inc hl
 616+ 96A3 23           	inc hl
 617+ 96A4
 618+ 96A4 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 96A6
 620+ 96A6 21 A4 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 96A9 18 E7        	jr 4B
 622+ 96AB
 623+ 96AB              ; --------------------------------------------------------------------------------------------------------------------
 624+ 96AB              ;
 625+ 96AB              ;	Prepara_draw
 626+ 96AB              ;
 627+ 96AB              ;	Es una rutina de carga.
 628+ 96AB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 96AB              ;
 630+ 96AB              ;	FUNCIONAMIENTO:
 631+ 96AB              ;
 632+ 96AB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 96AB              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 96AB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 96AB              ;
 636+ 96AB              ;	DESTRUYE:
 637+ 96AB              ;
 638+ 96AB              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 96AB
 640+ 96AB 21 D8 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 96AE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 96AF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 96B0 4E           	ld c,(hl)
 644+ 96B1 2A DA 88     	ld hl,(Posicion_actual)
 645+ 96B4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 96B6 C9           	ret
 647+ 96B7
 648+ 96B7              ;----------------------------------------------------------------------------------------------------------------
 649+ 96B7              ;
 650+ 96B7              ;	5/08/22
 651+ 96B7              ;
 652+ 96B7              ;   NextScan.
 653+ 96B7              ;
 654+ 96B7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 96B7              ;
 656+ 96B7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 96B7              ;
 658+ 96B7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 96B7              ;
 660+ 96B7              ;       DESTRUIDOS: AF y HL !!!
 661+ 96B7              ;
 662+ 96B7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 96B7              ;
 664+ 96B7
 665+ 96B7 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 96B8 7C               ld a,h
 667+ 96B9 E6 07            and 7
 668+ 96BB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 96BC
 670+ 96BC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 96BD C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96BF 6F               ld l,a
 673+ 96C0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96C1
 675+ 96C1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96C2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96C4 67               ld h,a
 678+ 96C5 C9               ret
 679+ 96C6
 680+ 96C6              ;----------------------------------------------------------------------------------------------------------------
 681+ 96C6              ;
 682+ 96C6              ;	5/08/22
 683+ 96C6              ;
 684+ 96C6              ;   PreviousScan.
 685+ 96C6              ;
 686+ 96C6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96C6              ;
 688+ 96C6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96C6              ;
 690+ 96C6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96C6              ;
 692+ 96C6              ;       DESTRUIDOS: AF y HL !!!
 693+ 96C6              ;
 694+ 96C6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96C6              ;
 696+ 96C6
 697+ 96C6 7C           PreviousScan ld a,h
 698+ 96C7 25               dec h               ; Dec H.
 699+ 96C8 E6 07            and 7
 700+ 96CA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96CB
 702+ 96CB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96CC D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96CE 6F               ld l,a
 705+ 96CF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96D0
 707+ 96D0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96D1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96D3 67               ld h,a
 710+ 96D4 C9               ret
 711+ 96D5
 712+ 96D5              ; -----------------------------------------------------------------------------------
 713+ 96D5              ;
 714+ 96D5              ;	31/7/23
 715+ 96D5              ;
 716+ 96D5              ;	Rutina principal de pintado de entidades.
 717+ 96D5              ;	Extrae la foto del frame, (entidades).
 718+ 96D5
 719+ 96D5              Extrae_foto_entidades
 720+ 96D5
 721+ 96D5 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96D8 7E           	ld a,(hl)
 723+ 96D9 A7           	and a
 724+ 96DA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96DB
 726+ 96DB              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96DB
 728+ 96DB 3A 29 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96DE A7           	and a
 730+ 96DF C8           	ret z
 731+ 96E0
 732+ 96E0              ; -----------------------------------
 733+ 96E0
 734+ 96E0 ED 73 2E 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96E4 31 00 70     	ld sp,Album_de_fotos
 736+ 96E7
 737+ 96E7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96E9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96EA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96EB
 741+ 96EB ED 73 30 89  	ld (Stack_2),sp
 742+ 96EF ED 7B 2E 89  	ld sp,(Stack)
 743+ 96F3
 744+ 96F3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96F3
 746+ 96F3 3E CD        	ld a,$cd
 747+ 96F5 32 FD 96     	ld (Imprime),a
 748+ 96F8 EB           	ex de,hl
 749+ 96F9 22 FE 96     	ld (Imprime+1),hl
 750+ 96FC EB           	ex de,hl
 751+ 96FD
 752+ 96FD              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96FD
 754+ 96FD 00 00 00     Imprime db 0,0,0
 755+ 9700
 756+ 9700 ED 73 2E 89  	ld (Stack),sp
 757+ 9704
 758+ 9704 3A 29 89     	ld a,(Numero_de_malotes)
 759+ 9707 3D           	dec a
 760+ 9708 28 09        	jr z,1F
 761+ 970A 32 29 89      	ld (Numero_de_malotes),a
 762+ 970D
 763+ 970D ED 7B 30 89  	ld sp,(Stack_2)
 764+ 9711 18 D4        	jr 2B
 765+ 9713
 766+ 9713 AF           1 xor a
 767+ 9714 32 30 89     	ld (Stack_2),a
 768+ 9717
 769+ 9717 C9           	ret
 770+ 9718
 771+ 9718              ; -----------------------------------------------------------------------------------
 772+ 9718              ;
 773+ 9718              ;	28/2/23
 774+ 9718              ;
 775+ 9718              ;	Pinta los disparos generados.
 776+ 9718
 777+ 9718              Extrae_foto_disparos
 778+ 9718
 779+ 9718 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 971B 7E               ld a,(hl)
 781+ 971C A7               and a
 782+ 971D C8               ret z
 783+ 971E
 784+ 971E 3A 3D 89     	ld a,(Numero_de_disparotes)
 785+ 9721 A7           	and a
 786+ 9722 C8           	ret z
 787+ 9723 ED 73 2E 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9727 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 972A
 790+ 972A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 972C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 972D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 972E
 794+ 972E ED 73 30 89  	ld (Stack_2),sp
 795+ 9732 ED 7B 2E 89  	ld sp,(Stack)
 796+ 9736
 797+ 9736              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9736
 799+ 9736 3E CD        	ld a,$cd
 800+ 9738 32 40 97     	ld (Imprime2),a
 801+ 973B EB           	ex de,hl
 802+ 973C 22 41 97     	ld (Imprime2+1),hl
 803+ 973F EB           	ex de,hl
 804+ 9740
 805+ 9740              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9740
 807+ 9740 00 00 00     Imprime2 db 0,0,0
 808+ 9743
 809+ 9743 3A 3D 89     	ld a,(Numero_de_disparotes)
 810+ 9746 3D           	dec a
 811+ 9747 28 09        	jr z,1F
 812+ 9749 32 3D 89      	ld (Numero_de_disparotes),a
 813+ 974C
 814+ 974C ED 7B 30 89  	ld sp,(Stack_2)
 815+ 9750 18 D8        	jr 2B
 816+ 9752
 817+ 9752 AF           1 xor a
 818+ 9753 32 30 89     	ld (Stack_2),a
 819+ 9756 C9           	ret
 820+ 9757
 821+ 9757              ; -----------------------------------------------------------------------------------
 822+ 9757              ;
 823+ 9757              ;	4/9/23
 824+ 9757              ;
 825+ 9757              ;	Rutina principal de pintado de Amadeus.
 826+ 9757              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9757
 828+ 9757 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 975A 7E           	ld a,(hl)
 830+ 975B A7           	and a
 831+ 975C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 975D
 833+ 975D 3A 29 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9760 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9761 C8           	ret z
 836+ 9762
 837+ 9762              ; -----------------------------------
 838+ 9762
 839+ 9762 ED 73 2E 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9766 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 9769
 842+ 9769 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 976B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 976C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 976D
 846+ 976D ED 73 30 89  	ld (Stack_2),sp
 847+ 9771 ED 7B 2E 89  	ld sp,(Stack)
 848+ 9775
 849+ 9775              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9775
 851+ 9775 3E CD        	ld a,$cd
 852+ 9777 32 7F 97     	ld (Imprime_Amadeus),a
 853+ 977A EB           	ex de,hl
 854+ 977B 22 80 97     	ld (Imprime_Amadeus+1),hl
 855+ 977E EB           	ex de,hl
 856+ 977F
 857+ 977F              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 977F
 859+ 977F 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9782
 861+ 9782 ED 73 2E 89  	ld (Stack),sp
 862+ 9786
 863+ 9786 3A 29 89     	ld a,(Numero_de_malotes)
 864+ 9789 3D           	dec a
 865+ 978A 28 09        	jr z,1F
 866+ 978C 32 29 89      	ld (Numero_de_malotes),a
 867+ 978F
 868+ 978F ED 7B 30 89  	ld sp,(Stack_2)
 869+ 9793 18 D4        	jr 2B
 870+ 9795
 871+ 9795 AF           1 xor a
 872+ 9796 32 30 89     	ld (Stack_2),a
 873+ 9799
 874+ 9799 C9           	ret
# file closed: Draw_XOR.asm
1834  979A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 979A              ;   índices de Rutinas de impresión.
   2+ 979A
   3+ 979A AA 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 979C D7 97            defw Pinta_Amadeus_3x2
   5+ 979E
   6+ 979E 2D 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97A0 CD 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97A2 81 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97A4
  10+ 97A4 57 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97A6 5B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97A8 0F 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97AA
  14+ 97AA
  15+ 97AA              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97AA              ;
  17+ 97AA              ;   12/12/22
  18+ 97AA              ;
  19+ 97AA              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97AA              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97AA              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97AA              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97AA              ;
  24+ 97AA              ;   Modifica: DE y HL.
  25+ 97AA
  26+ 97AA ED 73 2E 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97AE FD F9        	ld sp,iy
  28+ 97B0 06 10            ld b,16
  29+ 97B2 D1           1 pop de
  30+ 97B3 7B               ld a,e
  31+ 97B4 AE               xor (hl)
  32+ 97B5 77           	ld (hl),a
  33+ 97B6 23           	inc hl
  34+ 97B7 7A               ld a,d
  35+ 97B8 AE               xor (hl)
  36+ 97B9 77           	ld (hl),a
  37+ 97BA 2B           	dec hl
  38+ 97BB 24           	inc h
  39+ 97BC 7C               ld a,h
  40+ 97BD E6 07            and 7
  41+ 97BF 20 0A            jr nz,2F
  42+ 97C1 7D               ld a,l
  43+ 97C2 C6 20            add a,$20
  44+ 97C4 6F               ld l,a
  45+ 97C5 38 04            jr c,2F
  46+ 97C7 7C               ld a,h
  47+ 97C8 D6 08            sub 8
  48+ 97CA 67               ld h,a
  49+ 97CB 7C           2 ld a,h
  50+ 97CC FE 58            cp $58
  51+ 97CE 28 02            jr z,3F
  52+ 97D0 10 E0            djnz 1B
  53+ 97D2 ED 7B 2E 89  3 ld sp,(Stack)
  54+ 97D6 C9           	ret
  55+ 97D7
  56+ 97D7 ED 73 2E 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97DB FD F9        	ld sp,iy
  58+ 97DD 06 08            ld b,8
  59+ 97DF D1           1 pop de
  60+ 97E0 7B               ld a,e
  61+ 97E1 AE               xor (hl)
  62+ 97E2 77           	ld (hl),a
  63+ 97E3 23           	inc hl
  64+ 97E4 7A               ld a,d
  65+ 97E5 AE               xor (hl)
  66+ 97E6 77           	ld (hl),a
  67+ 97E7 23           	inc hl
  68+ 97E8 D1           	pop de
  69+ 97E9 7B               ld a,e
  70+ 97EA AE               xor (hl)
  71+ 97EB 77           	ld (hl),a
  72+ 97EC 2B           	dec hl
  73+ 97ED 2B           	dec hl
  74+ 97EE 24           	inc h
  75+ 97EF 7C               ld a,h
  76+ 97F0 E6 07            and 7
  77+ 97F2 20 0A            jr nz,2F
  78+ 97F4 7D               ld a,l
  79+ 97F5 C6 20            add a,$20
  80+ 97F7 6F               ld l,a
  81+ 97F8 38 04            jr c,2F
  82+ 97FA 7C               ld a,h
  83+ 97FB D6 08            sub 8
  84+ 97FD 67               ld h,a
  85+ 97FE 7C           2 ld a,h
  86+ 97FF FE 58            cp $58
  87+ 9801 28 25            jr z,4F
  88+ 9803 7A               ld a,d
  89+ 9804 AE               xor (hl)
  90+ 9805 77               ld (hl),a
  91+ 9806 D1           	pop de
  92+ 9807 23           	inc hl
  93+ 9808 7B               ld a,e
  94+ 9809 AE               xor (hl)
  95+ 980A 77           	ld (hl),a
  96+ 980B 23           	inc hl
  97+ 980C 7A               ld a,d
  98+ 980D AE               xor (hl)
  99+ 980E 77           	ld (hl),a
 100+ 980F 2B           	dec hl
 101+ 9810 2B           	dec hl
 102+ 9811 24           	inc h
 103+ 9812 7C               ld a,h
 104+ 9813 E6 07            and 7
 105+ 9815 20 0A            jr nz,3F
 106+ 9817 7D               ld a,l
 107+ 9818 C6 20            add a,$20
 108+ 981A 6F               ld l,a
 109+ 981B 38 04            jr c,3F
 110+ 981D 7C               ld a,h
 111+ 981E D6 08            sub 8
 112+ 9820 67               ld h,a
 113+ 9821 7C           3 ld a,h
 114+ 9822 FE 58            cp $58
 115+ 9824 28 02            jr z,4F
 116+ 9826 10 B7            djnz 1B
 117+ 9828 ED 7B 2E 89  4 ld sp,(Stack)
 118+ 982C C9           	ret
 119+ 982D
 120+ 982D              ; ---------------------------------------------------
 121+ 982D
 122+ 982D ED 73 2E 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9831 FD F9        	ld sp,iy
 124+ 9833
 125+ 9833              ; >>>
 126+ 9833
 127+ 9833 06 10            ld b,16
 128+ 9835 D1           1 pop de
 129+ 9836 7A           	ld a,d
 130+ 9837 AE           	xor (hl)
 131+ 9838 77           	ld (hl),a
 132+ 9839 24           	inc h
 133+ 983A 7C               ld a,h
 134+ 983B E6 07            and 7
 135+ 983D 20 0C            jr nz,2F
 136+ 983F 7D               ld a,l
 137+ 9840 C6 20            add a,$20
 138+ 9842 6F               ld l,a
 139+ 9843 38 06            jr c,2F
 140+ 9845 7C               ld a,h
 141+ 9846 D6 08            sub 8
 142+ 9848 67               ld h,a
 143+ 9849 18 00            jr 2F
 144+ 984B 7C           2 ld a,h
 145+ 984C FE 58            cp $58
 146+ 984E 28 02            jr z,3F
 147+ 9850 10 E3            djnz 1B
 148+ 9852 ED 7B 2E 89  3 ld sp,(Stack)
 149+ 9856 C9           	ret
 150+ 9857
 151+ 9857 ED 73 2E 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 985B FD F9        	ld sp,iy
 153+ 985D
 154+ 985D              ; >>>
 155+ 985D
 156+ 985D 06 10            ld b,16
 157+ 985F D1           1 pop de
 158+ 9860 7B           	ld a,e
 159+ 9861 AE           	xor (hl)
 160+ 9862 77           	ld (hl),a
 161+ 9863 24           	inc h
 162+ 9864 7C               ld a,h
 163+ 9865 E6 07            and 7
 164+ 9867 20 0C            jr nz,2F
 165+ 9869 7D               ld a,l
 166+ 986A C6 20            add a,$20
 167+ 986C 6F               ld l,a
 168+ 986D 38 06            jr c,2F
 169+ 986F 7C               ld a,h
 170+ 9870 D6 08            sub 8
 171+ 9872 67               ld h,a
 172+ 9873 18 00            jr 2F
 173+ 9875 7C           2 ld a,h
 174+ 9876 FE 58            cp $58
 175+ 9878 28 02            jr z,3F
 176+ 987A 10 E3            djnz 1B
 177+ 987C ED 7B 2E 89  3 ld sp,(Stack)
 178+ 9880 C9           	ret
 179+ 9881
 180+ 9881              ; ---------------------------------------------------
 181+ 9881
 182+ 9881 ED 73 2E 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9885 FD F9        	ld sp,iy
 184+ 9887 06 08            ld b,8
 185+ 9889 D1           1 pop de
 186+ 988A 7A           	ld a,d
 187+ 988B AE           	xor (hl)
 188+ 988C 77           	ld (hl),a
 189+ 988D 23           	inc hl
 190+ 988E D1           	pop de
 191+ 988F 7B           	ld a,e
 192+ 9890 AE           	xor (hl)
 193+ 9891 77           	ld (hl),a
 194+ 9892 2B           	dec hl
 195+ 9893 24            	inc h
 196+ 9894 7C               ld a,h
 197+ 9895 E6 07            and 7
 198+ 9897 20 0A            jr nz,2F
 199+ 9899 7D               ld a,l
 200+ 989A C6 20            add a,$20
 201+ 989C 6F               ld l,a
 202+ 989D 38 04            jr c,2F
 203+ 989F 7C               ld a,h
 204+ 98A0 D6 08            sub 8
 205+ 98A2 67               ld h,a
 206+ 98A3 7C           2 ld a,h
 207+ 98A4 FE 58            cp $58
 208+ 98A6 28 20            jr z,4F
 209+ 98A8 D1               pop de
 210+ 98A9 7B           	ld a,e
 211+ 98AA AE           	xor (hl)
 212+ 98AB 77           	ld (hl),a
 213+ 98AC 23           	inc hl
 214+ 98AD 7A           	ld a,d
 215+ 98AE AE           	xor (hl)
 216+ 98AF 77           	ld (hl),a
 217+ 98B0 2B           	dec hl
 218+ 98B1 24           	inc h
 219+ 98B2 7C               ld a,h
 220+ 98B3 E6 07            and 7
 221+ 98B5 20 0A            jr nz,3F
 222+ 98B7 7D               ld a,l
 223+ 98B8 C6 20            add a,$20
 224+ 98BA 6F               ld l,a
 225+ 98BB 38 04            jr c,3F
 226+ 98BD 7C               ld a,h
 227+ 98BE D6 08            sub 8
 228+ 98C0 67               ld h,a
 229+ 98C1 7C           3 ld a,h
 230+ 98C2 FE 58            cp $58
 231+ 98C4 28 02            jr z,4F
 232+ 98C6 10 C1            djnz 1B
 233+ 98C8 ED 7B 2E 89  4 ld sp,(Stack)
 234+ 98CC C9           	ret
 235+ 98CD
 236+ 98CD ED 73 2E 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98D1 FD F9        	ld sp,iy
 238+ 98D3 06 08            ld b,8
 239+ 98D5 D1           1 pop de
 240+ 98D6 D1           	pop de
 241+ 98D7 7B           	ld a,e
 242+ 98D8 AE           	xor (hl)
 243+ 98D9 77           	ld (hl),a
 244+ 98DA 24            	inc h
 245+ 98DB 7C               ld a,h
 246+ 98DC E6 07            and 7
 247+ 98DE 20 0A            jr nz,2F
 248+ 98E0 7D               ld a,l
 249+ 98E1 C6 20            add a,$20
 250+ 98E3 6F               ld l,a
 251+ 98E4 38 04            jr c,2F
 252+ 98E6 7C               ld a,h
 253+ 98E7 D6 08            sub 8
 254+ 98E9 67               ld h,a
 255+ 98EA 7C           2 ld a,h
 256+ 98EB FE 58            cp $58
 257+ 98ED 28 1B            jr z,4F
 258+ 98EF D1               pop de
 259+ 98F0 7A           	ld a,d
 260+ 98F1 AE           	xor (hl)
 261+ 98F2 77           	ld (hl),a
 262+ 98F3 24           	inc h
 263+ 98F4 7C               ld a,h
 264+ 98F5 E6 07            and 7
 265+ 98F7 20 0A            jr nz,3F
 266+ 98F9 7D               ld a,l
 267+ 98FA C6 20            add a,$20
 268+ 98FC 6F               ld l,a
 269+ 98FD 38 04            jr c,3F
 270+ 98FF 7C               ld a,h
 271+ 9900 D6 08            sub 8
 272+ 9902 67               ld h,a
 273+ 9903 7C           3 ld a,h
 274+ 9904 FE 58            cp $58
 275+ 9906 28 02            jr z,4F
 276+ 9908 10 CB            djnz 1B
 277+ 990A ED 7B 2E 89  4 ld sp,(Stack)
 278+ 990E C9           	ret
 279+ 990F
 280+ 990F ED 73 2E 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9913 FD F9        	ld sp,iy
 282+ 9915 06 08            ld b,8
 283+ 9917 D1           1 pop de
 284+ 9918 7B           	ld a,e
 285+ 9919 AE           	xor (hl)
 286+ 991A 77           	ld (hl),a
 287+ 991B 23           	inc hl
 288+ 991C 7A           	ld a,d
 289+ 991D AE           	xor (hl)
 290+ 991E 77           	ld (hl),a
 291+ 991F 2B           	dec hl
 292+ 9920 24             	inc h
 293+ 9921 7C               ld a,h
 294+ 9922 E6 07            and 7
 295+ 9924 20 0A            jr nz,2F
 296+ 9926 7D               ld a,l
 297+ 9927 C6 20            add a,$20
 298+ 9929 6F               ld l,a
 299+ 992A 38 04            jr c,2F
 300+ 992C 7C               ld a,h
 301+ 992D D6 08            sub 8
 302+ 992F 67               ld h,a
 303+ 9930 7C           2 ld a,h
 304+ 9931 FE 58            cp $58
 305+ 9933 28 21            jr z,4F
 306+ 9935 D1               pop de
 307+ 9936 7A           	ld a,d
 308+ 9937 AE           	xor (hl)
 309+ 9938 77           	ld (hl),a
 310+ 9939 23           	inc hl
 311+ 993A D1               pop de
 312+ 993B 7B           	ld a,e
 313+ 993C AE           	xor (hl)
 314+ 993D 77           	ld (hl),a
 315+ 993E 2B           	dec hl
 316+ 993F 24           	inc h
 317+ 9940 7C               ld a,h
 318+ 9941 E6 07            and 7
 319+ 9943 20 0A            jr nz,3F
 320+ 9945 7D               ld a,l
 321+ 9946 C6 20            add a,$20
 322+ 9948 6F               ld l,a
 323+ 9949 38 04            jr c,3F
 324+ 994B 7C               ld a,h
 325+ 994C D6 08            sub 8
 326+ 994E 67               ld h,a
 327+ 994F 7C           3 ld a,h
 328+ 9950 FE 58            cp $58
 329+ 9952 28 02            jr z,4F
 330+ 9954 10 C1            djnz 1B
 331+ 9956 ED 7B 2E 89  4 ld sp,(Stack)
 332+ 995A C9           	ret
 333+ 995B
 334+ 995B ED 73 2E 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 995F FD F9        	ld sp,iy
 336+ 9961 06 08            ld b,8
 337+ 9963 D1           1 pop de
 338+ 9964 7B           	ld a,e
 339+ 9965 AE           	xor (hl)
 340+ 9966 77           	ld (hl),a
 341+ 9967 24            	inc h
 342+ 9968 7C               ld a,h
 343+ 9969 E6 07            and 7
 344+ 996B 20 0A            jr nz,2F
 345+ 996D 7D               ld a,l
 346+ 996E C6 20            add a,$20
 347+ 9970 6F               ld l,a
 348+ 9971 38 04            jr c,2F
 349+ 9973 7C               ld a,h
 350+ 9974 D6 08            sub 8
 351+ 9976 67               ld h,a
 352+ 9977 7C           2 ld a,h
 353+ 9978 FE 58            cp $58
 354+ 997A 28 1C            jr z,4F
 355+ 997C D1               pop de
 356+ 997D 7A           	ld a,d
 357+ 997E AE           	xor (hl)
 358+ 997F 77           	ld (hl),a
 359+ 9980 24           	inc h
 360+ 9981 7C               ld a,h
 361+ 9982 E6 07            and 7
 362+ 9984 20 0A            jr nz,3F
 363+ 9986 7D               ld a,l
 364+ 9987 C6 20            add a,$20
 365+ 9989 6F               ld l,a
 366+ 998A 38 04            jr c,3F
 367+ 998C 7C               ld a,h
 368+ 998D D6 08            sub 8
 369+ 998F 67               ld h,a
 370+ 9990 7C           3 ld a,h
 371+ 9991 FE 58            cp $58
 372+ 9993 28 03            jr z,4F
 373+ 9995 D1               pop de
 374+ 9996 10 CB            djnz 1B
 375+ 9998 ED 7B 2E 89  4 ld sp,(Stack)
 376+ 999C C9           	ret
 377+ 999D
 378+ 999D              ; ---------------------------------------------------
 379+ 999D              ;
 380+ 999D              ;   27/02/23
 381+ 999D              ;
 382+ 999D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 999D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 999D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 999D
 386+ 999D ED 73 2E 89  Pinta_Disparo ld (Stack),sp
 387+ 99A1 FD F9            ld sp,iy
 388+ 99A3 06 03            ld b,3
 389+ 99A5 D1           1 pop de
 390+ 99A6 7B               ld a,e
 391+ 99A7 AE               xor (hl)
 392+ 99A8 77               ld (hl),a
 393+ 99A9 23               inc hl
 394+ 99AA 7A               ld a,d
 395+ 99AB AE               xor (hl)
 396+ 99AC 77               ld (hl),a
 397+ 99AD 2B               dec hl
 398+ 99AE
 399+ 99AE 24               inc h
 400+ 99AF 7C               ld a,h
 401+ 99B0 E6 07            and 7
 402+ 99B2 20 0A            jr nz,2F
 403+ 99B4 7D               ld a,l
 404+ 99B5 C6 20            add a,$20
 405+ 99B7 6F               ld l,a
 406+ 99B8 38 04            jr c,2F
 407+ 99BA 7C               ld a,h
 408+ 99BB D6 08            sub 8
 409+ 99BD 67               ld h,a
 410+ 99BE 7C           2 ld a,h
 411+ 99BF FE 58            cp $58
 412+ 99C1 28 02            jr z,3F
 413+ 99C3
 414+ 99C3 10 E0            djnz 1B
 415+ 99C5 ED 7B 2E 89  3 ld sp,(Stack)
 416+ 99C9 C9               ret
 417+ 99CA
# file closed: Rutinas_de_impresion_sprites.asm
1835  99CA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99CA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99CA              ;
   3+ 99CA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99CA              ;
   5+ 99CA              ; *****************************************************************************************************************************************************************************************
   6+ 99CA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99CA
   8+ 99CA 7C           calcula_tercio ld a,h
   9+ 99CB E6 18        	and $18
  10+ 99CD CB 2F        	sra a
  11+ 99CF CB 2F        	sra a
  12+ 99D1 CB 2F        	sra a
  13+ 99D3 C9           	ret
  14+ 99D4
# file closed: calcula_tercio.asm
1836  99D4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99D4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99D4              ;
   3+ 99D4              ;
   4+ 99D4              ;	CLS.
   5+ 99D4              ;
   6+ 99D4              ;	Limpia la pantalla y define sus atributos.
   7+ 99D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99D4              ;
   9+ 99D4              ;	COLORES: 0 ..... NEGRO
  10+ 99D4              ;    		 1 ..... AZUL
  11+ 99D4              ; 			 2 ..... ROJO
  12+ 99D4              ;			 3 ..... MAGENTA
  13+ 99D4              ; 			 4 ..... VERDE
  14+ 99D4              ; 			 5 ..... CIAN
  15+ 99D4              ;			 6 ..... AMARILLO
  16+ 99D4              ; 			 7 ..... BLANCO
  17+ 99D4              ;
  18+ 99D4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99D4              ;
  20+ 99D4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99D4
  22+ 99D4
  23+ 99D4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99D7 11 01 40     	LD DE,$4001
  25+ 99DA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99DD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99DF ED B0        	LDIR
  28+ 99E1 01 FF 02     	LD BC,767
  29+ 99E4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99E5 ED B0        	LDIR
  31+ 99E7 C9           	ret
  32+ 99E8
# file closed: Cls.asm
1837  99E8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E8              ; ******************************************************************************************************************************************************************************************
   2+ 99E8              ;
   3+ 99E8              ;   20/05/23
   4+ 99E8              ;
   5+ 99E8              ;	Recompone_posicion_inicio
   6+ 99E8              ;
   7+ 99E8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99E8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99E8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99E8              ;	_ a una u otra rutina.
  11+ 99E8
  12+ 99E8              Recompone_posicion_inicio
  13+ 99E8
  14+ 99E8 2A EA 88     	ld hl,(Posicion_inicio)
  15+ 99EB 7D           	ld a,l
  16+ 99EC E6 1F        	and $1f
  17+ 99EE 28 16        	jr z,1F
  18+ 99F0
  19+ 99F0 FE 1F        	cp $1f
  20+ 99F2 28 0D        	jr z,3F
  21+ 99F4
  22+ 99F4 21 19 89     	ld hl,Ctrl_2
  23+ 99F7 CB C6        	set 0,(hl)
  24+ 99F9 2A DC 88     	ld hl,(Puntero_objeto)
  25+ 99FC 22 1E 89     	ld (Repone_puntero_objeto),hl
  26+ 99FF 18 08        	jr 2F
  27+ 9A01
  28+ 9A01 CD AC 9B     3 call Mov_left
  29+ 9A04 18 03        	jr 2F
  30+ 9A06
  31+ 9A06 CD 8E 9A     1 call Mov_right
  32+ 9A09 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A0C 22 DC 88     	ld (Puntero_objeto),hl
  34+ 9A0F C9           	ret
  35+ 9A10
  36+ 9A10              ; ******************************************************************************************************************************************************************************************
  37+ 9A10              ;
  38+ 9A10              ;   27/05/23
  39+ 9A10              ;
  40+ 9A10              ;	Mov_down
  41+ 9A10              ;
  42+ 9A10              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A10              ;
  44+ 9A10              ;
  45+ 9A10              Mov_down
  46+ 9A10
  47+ 9A10 CD 7C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A13              ;																	; _ repone (Puntero_objeto).
  49+ 9A13 21 08 89     	ld hl,Ctrl_0
  50+ 9A16 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A18              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A18              ; 																	; _ en el caso de que no lo haya.
  53+ 9A18 3A F0 88     	ld a,(Vel_down)
  54+ 9A1B 47           	ld b,a
  55+ 9A1C 2A DA 88         ld hl,(Posicion_actual)
  56+ 9A1F CD CA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A22 E6 02        	and 2
  58+ 9A24 28 19        	jr z,1F
  59+ 9A26
  60+ 9A26              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A26              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A26
  63+ 9A26 7C           	ld a,h
  64+ 9A27 FE 57        	cp $57
  65+ 9A29 20 14        	jr nz,1F
  66+ 9A2B
  67+ 9A2B 7D           	ld a,l
  68+ 9A2C C6 20        	add $20
  69+ 9A2E 30 0F        	jr nc,1F
  70+ 9A30
  71+ 9A30              ; ------------------------------
  72+ 9A30              ;
  73+ 9A30              ;	30/12/15
  74+ 9A30
  75+ 9A30              ;	call Reaparece_arriba
  76+ 9A30 CD 39 9D     	call Reinicio
  77+ 9A33
  78+ 9A33              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A33              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A33
  81+ 9A33 3A 3C 89     	ld a,(Ctrl_3)
  82+ 9A36 CB 8F        	res 1,a
  83+ 9A38 CB D7        	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  84+ 9A3A 32 3C 89     	ld (Ctrl_3),a
  85+ 9A3D
  86+ 9A3D 18 08        	jr 3F
  87+ 9A3F              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  88+ 9A3F              ;															; _a la siguiente entidad como "Entidad_guía".
  89+ 9A3F              ; ------------------------------
  90+ 9A3F
  91+ 9A3F CD B7 96     1 call NextScan
  92+ 9A42 22 DA 88     	ld (Posicion_actual),hl
  93+ 9A45 10 D8            djnz 2B
  94+ 9A47 CD 5F 9D     3 call Genera_coordenadas
  95+ 9A4A C9           	ret
  96+ 9A4B
  97+ 9A4B              ; ******************************************************************************************************************************************************************************************
  98+ 9A4B              ;
  99+ 9A4B              ;   27/05/23
 100+ 9A4B              ;
 101+ 9A4B              ;	Mov_up
 102+ 9A4B              ;
 103+ 9A4B              ; 	Mueve el Sprite hacia arriba.
 104+ 9A4B              ;
 105+ 9A4B              ;
 106+ 9A4B              Mov_up
 107+ 9A4B
 108+ 9A4B CD 7C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 109+ 9A4E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 110+ 9A4E 21 08 89     	ld hl,Ctrl_0
 111+ 9A51 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 112+ 9A53              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 113+ 9A53              ; 																		; _ en el caso de que no lo haya.
 114+ 9A53 3A EF 88     	ld a,(Vel_up)
 115+ 9A56 47           	ld b,a
 116+ 9A57 2A DA 88     	ld hl,(Posicion_actual)
 117+ 9A5A CD CA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 118+ 9A5D A7           	and a
 119+ 9A5E 20 10        	jr nz,1F
 120+ 9A60
 121+ 9A60              ; Nos encontramos en el 1er tercio de pantalla.
 122+ 9A60              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 123+ 9A60
 124+ 9A60 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 125+ 9A61 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 126+ 9A63 20 0B            jr nz,1F
 127+ 9A65 7D               ld a,l
 128+ 9A66 D6 20            sub $20
 129+ 9A68 30 06            jr nc,1F
 130+ 9A6A 25               dec h
 131+ 9A6B
 132+ 9A6B              ; -----------------------------
 133+ 9A6B CD 1A 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 134+ 9A6E              ;	call Reinicio
 135+ 9A6E              ; -----------------------------
 136+ 9A6E
 137+ 9A6E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 138+ 9A70 CD C6 96     1 call PreviousScan
 139+ 9A73 22 DA 88     	ld (Posicion_actual),hl
 140+ 9A76 10 E2            djnz 3B
 141+ 9A78 CD 5F 9D     2 call Genera_coordenadas
 142+ 9A7B C9           	ret
 143+ 9A7C
 144+ 9A7C              ; -----------------------------
 145+ 9A7C              ;
 146+ 9A7C              ;	27/5/23
 147+ 9A7C              ;
 148+ 9A7C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 149+ 9A7C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 150+ 9A7C              ;
 151+ 9A7C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 152+ 9A7C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 153+ 9A7C              ;
 154+ 9A7C              ;	Modifica: A y (Puntero_objeto).
 155+ 9A7C
 156+ 9A7C 3A 19 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 157+ 9A7F CB 47        	bit 0,a
 158+ 9A81 C8           	ret z
 159+ 9A82 CB 87        	res 0,a
 160+ 9A84 32 19 89     	ld (Ctrl_2),a
 161+ 9A87 2A 1E 89     	ld hl,(Repone_puntero_objeto)
 162+ 9A8A 22 DC 88     	ld (Puntero_objeto),hl
 163+ 9A8D C9           	ret
 164+ 9A8E
 165+ 9A8E              ; ******************************************************************************************************************************************************************************************
 166+ 9A8E              ;
 167+ 9A8E              ;	19/10/22
 168+ 9A8E              ;
 169+ 9A8E              ;	Mov_right.
 170+ 9A8E              ;
 171+ 9A8E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 172+ 9A8E              ;
 173+ 9A8E
 174+ 9A8E 21 08 89     Mov_right ld hl,Ctrl_0
 175+ 9A91 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 176+ 9A93              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 177+ 9A93              ; 																	; _ en el caso de que no lo haya.
 178+ 9A93 3A 08 89     	ld a,(Ctrl_0)
 179+ 9A96 CB 77        	bit 6,a
 180+ 9A98 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 181+ 9A9A
 182+ 9A9A CD C8 9C     	call Stop_Amadeus_right
 183+ 9A9D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 9A9E 18 4D        	jr 8F
 185+ 9AA0
 186+ 9AA0 3A DE 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 187+ 9AA3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 188+ 9AA5 20 46        	jr nz,8F
 189+ 9AA7
 190+ 9AA7 3A E0 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 191+ 9AAA A7           	and a 															; _[3] para continuar con el DESPLZ.
 192+ 9AAB 28 40        	jr z,8F
 193+ 9AAD
 194+ 9AAD              ; ---------- ---------- ----------
 195+ 9AAD              ;
 196+ 9AAD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 197+ 9AAD
 198+ 9AAD 3A EE 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 199+ 9AB0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 200+ 9AB2 28 11        	jr z,1F
 201+ 9AB4 38 06        	jr c,6F
 202+ 9AB6 FE 04        	cp 4
 203+ 9AB8 28 14        	jr z,7F
 204+ 9ABA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 205+ 9ABC
 206+ 9ABC              ; ---------- ---------- ----------
 207+ 9ABC              ;
 208+ 9ABC              ; Perfiles de velocidad
 209+ 9ABC              ;
 210+ 9ABC
 211+ 9ABC 3A E0 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 212+ 9ABF FE FE        	cp $fe
 213+ 9AC1 20 2A        	jr nz,8F
 214+ 9AC3 18 10        	jr 3F
 215+ 9AC5 3A E0 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 216+ 9AC8 FE FD        	cp $fd
 217+ 9ACA 20 21        	jr nz,8F
 218+ 9ACC 18 07        	jr 3F
 219+ 9ACE 3A E0 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 220+ 9AD1 FE FB        	cp $fb
 221+ 9AD3 20 18        	jr nz,8F
 222+ 9AD5
 223+ 9AD5              ; ---------- ---------- ----------
 224+ 9AD5
 225+ 9AD5              3
 226+ 9AD5 CD 08 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 227+ 9AD8              ;	call Reinicio
 228+ 9AD8
 229+ 9AD8              ; ---------- ---------- ----------
 230+ 9AD8              ;
 231+ 9AD8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 232+ 9AD8
 233+ 9AD8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 234+ 9ADA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 235+ 9ADB CD F4 9A     	call DESPLZ_DER
 236+ 9ADE C1           	pop bc
 237+ 9ADF 10 F9        	djnz 5B
 238+ 9AE1 2A DA 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 239+ 9AE4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 240+ 9AE5 22 DA 88     	ld (Posicion_actual),hl
 241+ 9AE8 CD 5F 9D     	call Genera_coordenadas
 242+ 9AEB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 243+ 9AED
 244+ 9AED              ; ---------- ---------- ----------
 245+ 9AED
 246+ 9AED 2A DA 88     8 ld hl,(Posicion_actual)
 247+ 9AF0 CD F4 9A     	call DESPLZ_DER
 248+ 9AF3 C9           2 ret
 249+ 9AF4
 250+ 9AF4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 251+ 9AF4              ;
 252+ 9AF4              ;	22/9/22
 253+ 9AF4              ;
 254+ 9AF4
 255+ 9AF4 CD 03 9B     DESPLZ_DER call Desplaza_derecha
 256+ 9AF7 CD 4F 9B         call modifica_parametros_1er_DESPLZ_2
 257+ 9AFA CD 78 9B         call Ciclo_completo
 258+ 9AFD 21 08 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 259+ 9B00 CB FE        	set 7,(hl)
 260+ 9B02 C9           	ret
 261+ 9B03
 262+ 9B03              ; ******************************************************************************************************************************************************************************************
 263+ 9B03              ;	15/02/23
 264+ 9B03              ;
 265+ 9B03
 266+ 9B03 3A EE 88     Desplaza_derecha ld a,(Vel_right)
 267+ 9B06 47           	ld b,a
 268+ 9B07 2A E6 88     	ld hl,(Puntero_DESPLZ_der)
 269+ 9B0A 23           1 inc hl
 270+ 9B0B 23           	inc hl
 271+ 9B0C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 272+ 9B0E 22 E6 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 273+ 9B11 CD 4B 8D     	call Extrae_address
 274+ 9B14 22 DC 88     	ld (Puntero_objeto),hl
 275+ 9B17
 276+ 9B17              ; Modifica (Puntero_DESPLZ_izq).
 277+ 9B17
 278+ 9B17              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 279+ 9B17              ; Cuántos movimientos hemos hecho ??
 280+ 9B17              ; DE contiene (Puntero_DESPLZ_der).
 281+ 9B17
 282+ 9B17 2A E2 88     7 ld hl,(Indice_Sprite_der)
 283+ 9B1A EB           	ex de,hl
 284+ 9B1B A7           	and a
 285+ 9B1C ED 52        	sbc hl,de
 286+ 9B1E CB 3D        	srl l
 287+ 9B20 3E 08        6 ld a,8
 288+ 9B22 95           	sub l
 289+ 9B23 30 1E        	jr nc,3F
 290+ 9B25
 291+ 9B25              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 292+ 9B25              ; B="0".
 293+ 9B25
 294+ 9B25 04           4 inc b
 295+ 9B26 3C           	inc a
 296+ 9B27 20 FC        	jr nz,4B
 297+ 9B29 78           	ld a,b
 298+ 9B2A 08           	ex af,af
 299+ 9B2B 2A E2 88     	ld hl,(Indice_Sprite_der)
 300+ 9B2E 23           5 inc hl
 301+ 9B2F 23           	inc hl
 302+ 9B30 10 FC        	djnz 5B
 303+ 9B32 22 E6 88     	ld (Puntero_DESPLZ_der),hl
 304+ 9B35 CD 4B 8D     	call Extrae_address
 305+ 9B38 22 DC 88     	ld (Puntero_objeto),hl
 306+ 9B3B
 307+ 9B3B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 308+ 9B3B              ; _(Posicion_actual).
 309+ 9B3B
 310+ 9B3B 21 DA 88     	ld hl,Posicion_actual
 311+ 9B3E 34           	inc (hl)
 312+ 9B3F 08               ex af,af
 313+ 9B40 6F           	ld l,a
 314+ 9B41 18 DD        	jr 6B
 315+ 9B43
 316+ 9B43              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 317+ 9B43
 318+ 9B43 47           3 ld b,a
 319+ 9B44 2A E4 88     	ld hl,(Indice_Sprite_izq)
 320+ 9B47 23           2 inc hl
 321+ 9B48 23           	inc hl
 322+ 9B49 10 FC        	djnz 2B
 323+ 9B4B 22 E8 88     	ld (Puntero_DESPLZ_izq),hl
 324+ 9B4E C9           8 ret
 325+ 9B4F
 326+ 9B4F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 327+ 9B4F              ;
 328+ 9B4F              ;	24/7/22
 329+ 9B4F              ;
 330+ 9B4F              ;	modifica_parametros_1er_DESPLZ_2
 331+ 9B4F              ;
 332+ 9B4F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 333+ 9B4F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 334+ 9B4F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 335+ 9B4F
 336+ 9B4F 3A E0 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 337+ 9B52 A7           	and a
 338+ 9B53 20 1F        	jr nz,1F
 339+ 9B55 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 340+ 9B57 32 E0 88         ld (CTRL_DESPLZ),a
 341+ 9B5A
 342+ 9B5A 21 D9 88     	ld hl,Columns
 343+ 9B5D 34           	inc (hl)
 344+ 9B5E 3A EC 88     	ld a,(Cuad_objeto)
 345+ 9B61 E6 01        	and 1
 346+ 9B63 28 0F        	jr z,1F
 347+ 9B65 2A DA 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 348+ 9B68 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 349+ 9B69 22 DA 88     	ld (Posicion_actual),hl
 350+ 9B6C CD 5F 9D     	call Genera_coordenadas
 351+ 9B6F CD D4 9C     	call Inc_CTRL_DESPLZ
 352+ 9B72 18 03        	jr 2F
 353+ 9B74 CD D4 9C     1 call Inc_CTRL_DESPLZ
 354+ 9B77 C9           2 ret
 355+ 9B78
 356+ 9B78              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 357+ 9B78              ;
 358+ 9B78              ;	24/7/22
 359+ 9B78              ;
 360+ 9B78              ;	Ciclo_completo.
 361+ 9B78              ;
 362+ 9B78              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 363+ 9B78              ;
 364+ 9B78              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 365+ 9B78              ; 	Decrementamos (Columns).
 366+ 9B78              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 367+ 9B78              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 368+ 9B78
 369+ 9B78
 370+ 9B78 3A E0 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 371+ 9B7B FE FF        	cp $ff
 372+ 9B7D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 373+ 9B7F E6 F0        	and $f0
 374+ 9B81 20 28        	jr nz,3F
 375+ 9B83
 376+ 9B83              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 377+ 9B83
 378+ 9B83 3A E0 88     	ld a,(CTRL_DESPLZ)
 379+ 9B86 47           	ld b,a
 380+ 9B87 3E F8        	ld a,$f8
 381+ 9B89 80           	add b
 382+ 9B8A 32 E0 88     	ld (CTRL_DESPLZ),a
 383+ 9B8D 18 1C        	jr 3F
 384+ 9B8F 21 D9 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 385+ 9B92 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 386+ 9B93 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 387+ 9B94 32 E0 88     	ld (CTRL_DESPLZ),a
 388+ 9B97 3A EC 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 389+ 9B9A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 390+ 9B9C 20 0A        	jr nz,2F
 391+ 9B9E 2A DA 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 392+ 9BA1 23           	inc hl
 393+ 9BA2 22 DA 88     	ld (Posicion_actual),hl
 394+ 9BA5 CD 5F 9D     	call Genera_coordenadas
 395+ 9BA8
 396+ 9BA8              ; Inicia el puntero de Sprite.
 397+ 9BA8
 398+ 9BA8 CD 62 8D     2 call Inicia_puntero_objeto_der
 399+ 9BAB C9           3 ret
 400+ 9BAC
 401+ 9BAC              ; ******************************************************************************************************************************************************************************************
 402+ 9BAC              ;
 403+ 9BAC              ;	15/02/23
 404+ 9BAC              ;
 405+ 9BAC              ;	Mov_left.
 406+ 9BAC              ;
 407+ 9BAC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 408+ 9BAC              ;
 409+ 9BAC              Mov_left
 410+ 9BAC
 411+ 9BAC 21 08 89     	ld hl,Ctrl_0
 412+ 9BAF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 413+ 9BB1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 414+ 9BB1              ; 																	; _ en el caso de que no lo haya.
 415+ 9BB1 3A 08 89     	ld a,(Ctrl_0)
 416+ 9BB4 CB 77        	bit 6,a
 417+ 9BB6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 418+ 9BB8
 419+ 9BB8 CD CE 9C     	call Stop_Amadeus_left
 420+ 9BBB C8           	ret z
 421+ 9BBC 20 4A        	jr nz,8F
 422+ 9BBE
 423+ 9BBE 3A DE 88     11 ld a,(Coordenada_X)
 424+ 9BC1 A7           	and a
 425+ 9BC2 20 44        	jr nz,8F
 426+ 9BC4
 427+ 9BC4 3A E0 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 428+ 9BC7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 429+ 9BC8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 430+ 9BCA
 431+ 9BCA              ; ---------- ---------- ----------
 432+ 9BCA
 433+ 9BCA 3A ED 88     	ld a,(Vel_left)
 434+ 9BCD FE 02        	cp 2
 435+ 9BCF 28 0F        	jr z,1F
 436+ 9BD1 38 04        	jr c,6F
 437+ 9BD3 FE 04        	cp 4
 438+ 9BD5 28 12        	jr z,7F
 439+ 9BD7
 440+ 9BD7              ; ---------- ---------- ----------
 441+ 9BD7
 442+ 9BD7 3A E0 88     6 ld a,(CTRL_DESPLZ)
 443+ 9BDA FE F8        	cp $f8
 444+ 9BDC 20 2A        	jr nz,8F
 445+ 9BDE 18 10        	jr 4F
 446+ 9BE0 3A E0 88     1 ld a,(CTRL_DESPLZ)
 447+ 9BE3 FE F9        	cp $f9
 448+ 9BE5 20 21        	jr nz,8F
 449+ 9BE7 18 07        	jr 4F
 450+ 9BE9 3A E0 88     7 ld a,(CTRL_DESPLZ)
 451+ 9BEC FE FB        	cp $fb
 452+ 9BEE 20 18        	jr nz,8F
 453+ 9BF0
 454+ 9BF0              ; ---------- ---------- ----------
 455+ 9BF0
 456+ 9BF0              4
 457+ 9BF0 CD F6 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 458+ 9BF3              ;	call Reinicio
 459+ 9BF3
 460+ 9BF3              ; ---------- ---------- ----------
 461+ 9BF3
 462+ 9BF3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 463+ 9BF5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 464+ 9BF6
 465+ 9BF6              ;	ld hl,(Indice_Sprite_izq)
 466+ 9BF6              ;	ld (Puntero_DESPLZ_izq),hl
 467+ 9BF6
 468+ 9BF6 CD 0F 9C     	call DESPLZ_IZQ
 469+ 9BF9 C1           	pop bc
 470+ 9BFA 10 F9        	djnz 5B
 471+ 9BFC 2A DA 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 472+ 9BFF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 473+ 9C00 22 DA 88     	ld (Posicion_actual),hl
 474+ 9C03 CD 5F 9D     	call Genera_coordenadas
 475+ 9C06 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 476+ 9C08
 477+ 9C08              ; ---------- ---------- ----------
 478+ 9C08
 479+ 9C08              ; Movemos, no hay recolocación.
 480+ 9C08
 481+ 9C08 2A DA 88     8 ld hl,(Posicion_actual)
 482+ 9C0B CD 0F 9C     	call DESPLZ_IZQ
 483+ 9C0E C9           2 ret
 484+ 9C0F
 485+ 9C0F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 486+ 9C0F              ;
 487+ 9C0F              ;	22/9/22
 488+ 9C0F
 489+ 9C0F              DESPLZ_IZQ
 490+ 9C0F
 491+ 9C0F CD 1E 9C     	call Desplaza_izquierda
 492+ 9C12 CD 6A 9C         call modifica_parametros_1er_DESPLZ
 493+ 9C15 CD 92 9C     	call Ciclo_completo_2
 494+ 9C18 21 08 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 495+ 9C1B CB BE        	res 7,(hl)
 496+ 9C1D C9           	ret
 497+ 9C1E
 498+ 9C1E              Desplaza_izquierda
 499+ 9C1E
 500+ 9C1E 3A ED 88     	ld a,(Vel_left)
 501+ 9C21 47           	ld b,a
 502+ 9C22 2A E8 88     	ld hl,(Puntero_DESPLZ_izq)
 503+ 9C25 23           1 inc hl
 504+ 9C26 23           	inc hl
 505+ 9C27 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 506+ 9C29 22 E8 88     	ld (Puntero_DESPLZ_izq),hl
 507+ 9C2C CD 4B 8D     	call Extrae_address
 508+ 9C2F 22 DC 88     	ld (Puntero_objeto),hl
 509+ 9C32
 510+ 9C32              ; Modifica (Puntero_DESPLZ_der).
 511+ 9C32
 512+ 9C32              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 513+ 9C32              ; Cuántos movimientos hemos hecho ??
 514+ 9C32              ; DE contiene (Puntero_DESPLZ_izq).
 515+ 9C32
 516+ 9C32 2A E4 88     7 ld hl,(Indice_Sprite_izq)
 517+ 9C35 EB           	ex de,hl
 518+ 9C36 A7           	and a
 519+ 9C37 ED 52        	sbc hl,de
 520+ 9C39 CB 3D        	srl l
 521+ 9C3B 3E 08        6 ld a,8
 522+ 9C3D 95           	sub l
 523+ 9C3E 30 1E        	jr nc,3F
 524+ 9C40
 525+ 9C40              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 526+ 9C40              ; B="0".
 527+ 9C40
 528+ 9C40 04           4 inc b
 529+ 9C41 3C           	inc a
 530+ 9C42 20 FC        	jr nz,4B
 531+ 9C44 78           	ld a,b
 532+ 9C45 08           	ex af,af
 533+ 9C46 2A E4 88     	ld hl,(Indice_Sprite_izq)
 534+ 9C49 23           5 inc hl
 535+ 9C4A 23           	inc hl
 536+ 9C4B 10 FC        	djnz 5B
 537+ 9C4D 22 E8 88     	ld (Puntero_DESPLZ_izq),hl
 538+ 9C50 CD 4B 8D     	call Extrae_address
 539+ 9C53 22 DC 88     	ld (Puntero_objeto),hl
 540+ 9C56
 541+ 9C56              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 542+ 9C56              ; _(Posicion_actual).
 543+ 9C56
 544+ 9C56 21 DA 88     	ld hl,Posicion_actual
 545+ 9C59 35           	dec (hl)
 546+ 9C5A 08           	ex af,af
 547+ 9C5B 6F           	ld l,a
 548+ 9C5C 18 DD        	jr 6B
 549+ 9C5E
 550+ 9C5E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 551+ 9C5E
 552+ 9C5E 47           3 ld b,a
 553+ 9C5F 2A E2 88     	ld hl,(Indice_Sprite_der)
 554+ 9C62 23           2 inc hl
 555+ 9C63 23           	inc hl
 556+ 9C64 10 FC        	djnz 2B
 557+ 9C66 22 E6 88     	ld (Puntero_DESPLZ_der),hl
 558+ 9C69 C9           8 ret
 559+ 9C6A
 560+ 9C6A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 561+ 9C6A              ;
 562+ 9C6A              ;	modifica_parametros_1er_DESPLZ
 563+ 9C6A              ;
 564+ 9C6A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 565+ 9C6A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 566+ 9C6A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 567+ 9C6A
 568+ 9C6A 3A E0 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 569+ 9C6D A7           	and a
 570+ 9C6E 20 1E        	jr nz,1F
 571+ 9C70 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 572+ 9C71 32 E0 88         ld (CTRL_DESPLZ),a
 573+ 9C74 21 D9 88     	ld hl,Columns
 574+ 9C77 34           	inc (hl)
 575+ 9C78 3A EC 88     	ld a,(Cuad_objeto)
 576+ 9C7B E6 01        	and 1
 577+ 9C7D 20 0F        	jr nz,1F
 578+ 9C7F 2A DA 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 579+ 9C82 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 580+ 9C83 22 DA 88     	ld (Posicion_actual),hl
 581+ 9C86 CD 5F 9D     	call Genera_coordenadas
 582+ 9C89 CD E5 9C     	call Dec_CTRL_DESPLZ
 583+ 9C8C 18 03        	jr 2F
 584+ 9C8E CD E5 9C     1 call Dec_CTRL_DESPLZ
 585+ 9C91 C9           2 ret
 586+ 9C92
 587+ 9C92              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 588+ 9C92
 589+ 9C92 3A E0 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 590+ 9C95 FE F7        	cp $f7
 591+ 9C97 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 592+ 9C99 30 2C        	jr nc,3F
 593+ 9C9B
 594+ 9C9B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 595+ 9C9B
 596+ 9C9B 06 00        	ld b,0
 597+ 9C9D 04           4 inc b
 598+ 9C9E 3C           	inc a
 599+ 9C9F FE F7        	cp $f7
 600+ 9CA1 20 FA        	jr nz,4B
 601+ 9CA3 3E FF        	ld a,$ff
 602+ 9CA5 90           	sub b
 603+ 9CA6 32 E0 88     	ld (CTRL_DESPLZ),a
 604+ 9CA9 18 1C        	jr 3F
 605+ 9CAB
 606+ 9CAB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 607+ 9CAB
 608+ 9CAB 21 D9 88     1 ld hl,Columns
 609+ 9CAE 35           	dec (hl)
 610+ 9CAF AF           	xor a
 611+ 9CB0 32 E0 88     	ld (CTRL_DESPLZ),a
 612+ 9CB3 3A EC 88     	ld a,(Cuad_objeto)
 613+ 9CB6 E6 01        	and 1
 614+ 9CB8 28 0A        	jr z,2F
 615+ 9CBA 2A DA 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 616+ 9CBD 2B           	dec hl
 617+ 9CBE 22 DA 88     	ld (Posicion_actual),hl
 618+ 9CC1 CD 5F 9D     	call Genera_coordenadas
 619+ 9CC4
 620+ 9CC4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 621+ 9CC4
 622+ 9CC4 CD 75 8D     2 call Inicia_puntero_objeto_izq
 623+ 9CC7 C9           3 ret
 624+ 9CC8
 625+ 9CC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 626+ 9CC8              ;
 627+ 9CC8              ;	19/10/22
 628+ 9CC8              ;
 629+ 9CC8              ;	(cp 29) para un Amadeus de 3 Columns.
 630+ 9CC8              ;	(cp 30)   ""  ""    ""     2 Columns.
 631+ 9CC8
 632+ 9CC8 3A DE 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 633+ 9CCB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 634+ 9CCD C9           	ret
 635+ 9CCE
 636+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9CCE              ;
 638+ 9CCE              ;	19/10/22
 639+ 9CCE              ;
 640+ 9CCE              ;	(cp 2) para un Amadeus de 3 Columns.
 641+ 9CCE              ;	(cp 1)   ""  ""    ""     2 Columns.
 642+ 9CCE
 643+ 9CCE 3A DE 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 644+ 9CD1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 645+ 9CD3 C9           	ret
 646+ 9CD4
 647+ 9CD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9CD4              ;
 649+ 9CD4              ;	24/7/22
 650+ 9CD4              ;
 651+ 9CD4              ;	Inc_CTRL_DESPLZ
 652+ 9CD4              ;
 653+ 9CD4              ;
 654+ 9CD4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 655+ 9CD4
 656+ 9CD4 21 E0 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 657+ 9CD7 3A EE 88     	ld a,(Vel_right)
 658+ 9CDA A7           	and a
 659+ 9CDB 28 06        	jr z,1F
 660+ 9CDD 47           	ld b,a
 661+ 9CDE 34           3 inc (hl)
 662+ 9CDF 10 FD        	djnz 3B
 663+ 9CE1 18 01        	jr 2F
 664+ 9CE3 34           1 inc (hl)
 665+ 9CE4 C9           2 ret
 666+ 9CE5
 667+ 9CE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 9CE5              ;
 669+ 9CE5              ;	5/2/23
 670+ 9CE5              ;
 671+ 9CE5              ;	Dec_CTRL_DESPLZ
 672+ 9CE5              ;
 673+ 9CE5              ;
 674+ 9CE5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 675+ 9CE5
 676+ 9CE5 21 E0 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 677+ 9CE8 3A ED 88     	ld a,(Vel_left)
 678+ 9CEB A7           	and a
 679+ 9CEC 28 06        	jr z,1F
 680+ 9CEE 47           	ld b,a
 681+ 9CEF 35           3 dec (hl)
 682+ 9CF0 10 FD        	djnz 3B
 683+ 9CF2 18 01        	jr 2F
 684+ 9CF4 35           1 dec (hl)
 685+ 9CF5 C9           2 ret
 686+ 9CF6
 687+ 9CF6              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9CF6
 689+ 9CF6 2A DA 88     Reaparece_derecha ld hl,(Posicion_actual)
 690+ 9CF9 01 1F 00     	ld bc,31
 691+ 9CFC A7           	and a
 692+ 9CFD ED 4A        	adc hl,bc
 693+ 9CFF 22 DA 88     	ld (Posicion_actual),hl
 694+ 9D02 21 08 89     	ld hl,Ctrl_0														; $xxx1
 695+ 9D05 CB C6        	set 0,(hl)
 696+ 9D07 C9           	ret
 697+ 9D08
 698+ 9D08              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9D08
 700+ 9D08 2A DA 88     Reaparece_izquierda ld hl,(Posicion_actual)
 701+ 9D0B 01 1F 00     	ld bc,31
 702+ 9D0E A7           	and a
 703+ 9D0F ED 42        	sbc hl,bc
 704+ 9D11 22 DA 88     	ld (Posicion_actual),hl 											; $xx1x
 705+ 9D14 21 08 89     	ld hl,Ctrl_0
 706+ 9D17 CB CE        	set 1,(hl)
 707+ 9D19 C9           	ret
 708+ 9D1A
 709+ 9D1A              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9D1A
 711+ 9D1A 24           Reaparece_abajo inc h
 712+ 9D1B 01 E0 17     	ld bc,$17e0
 713+ 9D1E A7           	and a
 714+ 9D1F ED 4A        	adc hl,bc
 715+ 9D21 22 DA 88     	ld (Posicion_actual),hl
 716+ 9D24 21 08 89     	ld hl,Ctrl_0
 717+ 9D27 CB D6        	set 2,(hl)
 718+ 9D29 C9           	ret
 719+ 9D2A
 720+ 9D2A              ; ---------- ---------- ---------- ---------- ---------- ----------
 721+ 9D2A
 722+ 9D2A 01 E0 17     Reaparece_arriba ld bc,$17e0
 723+ 9D2D A7           	and a
 724+ 9D2E ED 42        	sbc hl,bc
 725+ 9D30 22 DA 88     	ld (Posicion_actual),hl
 726+ 9D33 21 08 89     	ld hl,Ctrl_0
 727+ 9D36 CB DE        	set 3,(hl)
 728+ 9D38 C9           	ret
 729+ 9D39
 730+ 9D39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 731+ 9D39              ;
 732+ 9D39              ;	15/07/23
 733+ 9D39
 734+ 9D39              Reinicio
 735+ 9D39
 736+ 9D39              ; Vamos a reiniciar los punteros y variables de movimiento.
 737+ 9D39
 738+ 9D39 AF           	xor a
 739+ 9D3A 21 0D 89     	ld hl,Puntero_indice_mov_bucle
 740+ 9D3D CD 5B 9D     	call Limpia_contenido_hl
 741+ 9D40
 742+ 9D40 21 DA 88     	ld hl,Posicion_actual
 743+ 9D43 CD 5B 9D     	call Limpia_contenido_hl
 744+ 9D46
 745+ 9D46 CD 97 A0     	call Inicializa_Puntero_indice_mov
 746+ 9D49 CD 1B A0     	call Inicia_Puntero_mov
 747+ 9D4C
 748+ 9D4C 21 0F 89     	ld hl,Incrementa_puntero
 749+ 9D4F 06 05        	ld b,5
 750+ 9D51 77           1 ld (hl),a
 751+ 9D52 23           	inc hl
 752+ 9D53 10 FC        	djnz 1B
 753+ 9D55
 754+ 9D55 21 19 89     	ld hl,Ctrl_2
 755+ 9D58 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 756+ 9D5A
 757+ 9D5A C9           	ret
 758+ 9D5B
 759+ 9D5B 77           Limpia_contenido_hl	ld (hl),a
 760+ 9D5C 23           	inc hl
 761+ 9D5D 77           	ld (hl),a
 762+ 9D5E C9           	ret
 763+ 9D5F
 764+ 9D5F
# file closed: Direcciones.asm
1838  9D5F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D5F              ; ------------------------------------------------------------------------
   2+ 9D5F              ;
   3+ 9D5F              ;	02/04/23
   4+ 9D5F              ;
   5+ 9D5F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D5F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D5F              ;
   8+ 9D5F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D5F              ;
  10+ 9D5F              ;	Modifica: A,BC y DE.
  11+ 9D5F
  12+ 9D5F C5           Genera_coordenadas push bc
  13+ 9D60 E5           	push hl
  14+ 9D61 D5           	push de
  15+ 9D62
  16+ 9D62 2A DA 88     	ld hl,(Posicion_actual)
  17+ 9D65
  18+ 9D65 7D           	ld a,l
  19+ 9D66 E6 1F        	and $1f
  20+ 9D68 32 DE 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D6B
  22+ 9D6B CD CA 99     	call calcula_tercio
  23+ 9D6E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D6F
  25+ 9D6F 1E 00        	ld e,0
  26+ 9D71 7D           	ld a,l
  27+ 9D72 E6 E0        	and $e0
  28+ 9D74 28 01        	jr z,1F
  29+ 9D76 04           	inc b
  30+ 9D77
  31+ 9D77 04           1 inc b
  32+ 9D78 05           	dec b
  33+ 9D79 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D7B              ;														; _ , salimos.
  35+ 9D7B 1C           3 inc e
  36+ 9D7C D6 20        	sub 32
  37+ 9D7E 20 FB        	jr nz,3B
  38+ 9D80 10 F5        	djnz 1B
  39+ 9D82
  40+ 9D82 7B           2 ld a,e
  41+ 9D83 32 DF 88     	ld (Coordenada_y),a
  42+ 9D86
  43+ 9D86 D1           	pop de
  44+ 9D87 E1           	pop hl
  45+ 9D88 C1           	pop bc
  46+ 9D89
  47+ 9D89 C9           	ret
  48+ 9D8A
  49+ 9D8A              ; ------------------------------------------------------------------------
  50+ 9D8A              ;	28/05/23
  51+ 9D8A              ;
  52+ 9D8A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D8A              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D8A              ;
  55+ 9D8A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D8A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D8A              ;
  58+ 9D8A              ;		DE="$120d"
  59+ 9D8A              ;
  60+ 9D8A              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D8A              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D8A              ;
  63+ 9D8A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D8A
  65+ 9D8A              ;	Modifica: A,BC y DE.
  66+ 9D8A
  67+ 9D8A
  68+ 9D8A              Genera_coordenadas_disparo
  69+ 9D8A
  70+ 9D8A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D8A
  72+ 9D8A 7D           	ld a,l
  73+ 9D8B E6 1F        	and $1f
  74+ 9D8D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D8E CD CA 99     	call calcula_tercio
  76+ 9D91 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D92 1E 00        	ld e,0
  78+ 9D94 7D           	ld a,l
  79+ 9D95 E6 E0        	and $e0
  80+ 9D97 28 01        	jr z,1F
  81+ 9D99 04           	inc b
  82+ 9D9A 1C           1 inc e
  83+ 9D9B D6 20        	sub 32
  84+ 9D9D 20 FB        	jr nz,1B
  85+ 9D9F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DA1 C9           	ret
  87+ 9DA2
# file closed: Genera_coordenadas.asm
1839  9DA2              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DA2              ; Relojes y temporizaciones.
   2+ 9DA2
   3+ 9DA2              ; ------------------------------------------------------
   4+ 9DA2              ;
   5+ 9DA2              ;	16/7/23
   6+ 9DA2              ;
   7+ 9DA2              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9DA2              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DA2              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DA2              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DA2              ;
  12+ 9DA2              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DA2              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DA2
  15+ 9DA2              ; Disparo_entidad db 1
  16+ 9DA2              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9DA2              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9DA2
  19+ 9DA2              Habilita_disparos
  20+ 9DA2
  21+ 9DA2 7E           	ld a,(hl)
  22+ 9DA3 A7           	and a
  23+ 9DA4 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9DA5
  25+ 9DA5 EB           	ex de,hl
  26+ 9DA6
  27+ 9DA6 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9DA7 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9DA8
  30+ 9DA8              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9DA8
  32+ 9DA8 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9DA9 7E           	ld a,(hl)
  34+ 9DAA 23           	inc hl
  35+ 9DAB 77           	ld (hl),a
  36+ 9DAC
  37+ 9DAC EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DAD 3E 01        	ld a,1
  39+ 9DAF 77           	ld (hl),a
  40+ 9DB0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1840  9DB1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DB1
   2+ 9DB1
   3+ 9DB1              ;   07/07/23
   4+ 9DB1              ;
   5+ 9DB1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DB1              ;
   7+ 9DB1              ;   Codificación:
   8+ 9DB1              ;
   9+ 9DB1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DB1              ;
  11+ 9DB1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DB1              ;
  13+ 9DB1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DB1              ;
  15+ 9DB1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DB1              ;
  17+ 9DB1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DB1              ;                               ..... %01000010 Vel_up 4
  19+ 9DB1              ;                                               Vel_down 2
  20+ 9DB1              ;                               ..... $42
  21+ 9DB1              ;
  22+ 9DB1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DB1              ;
  24+ 9DB1              ;                               ..... %01000010 Vel_left 4
  25+ 9DB1              ;                                               Vel_right 2
  26+ 9DB1              ;                               ..... $42
  27+ 9DB1              ;
  28+ 9DB1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DB1              ;
  30+ 9DB1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DB1              ;
  32+ 9DB1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DB1              ;
  34+ 9DB1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DB1              ;                                     $53
  36+ 9DB1              ;
  37+ 9DB1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DB1              ;
  39+ 9DB1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DB1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DB1              ;
  42+ 9DB1              ;                       Arriba ..... $81
  43+ 9DB1              ;                       Arriba - izquierda ..... $a1
  44+ 9DB1              ;                       Arriba - derecha ..... $91
  45+ 9DB1              ;
  46+ 9DB1              ;                       Abajo ..... $41
  47+ 9DB1              ;                       Abajo - izquierda ..... $61
  48+ 9DB1              ;                       Abajo - derecha ..... $51
  49+ 9DB1              ;
  50+ 9DB1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DB1              ;
  52+ 9DB1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DB1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DB1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DB1              ;
  56+ 9DB1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DB1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DB1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DB1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DB1              ;
  61+ 9DB1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DB1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DB1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DB1              ;
  65+ 9DB1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DB1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DB1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DB1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DB1
  70+ 9DB1              ; ----- ----- ----- ----- -----
  71+ 9DB1
  72+ 9DB1 DD 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DB3 E5 9D            defw F_1
  74+ 9DB5 EF 9D            defw F_2
  75+ 9DB7 F9 9D            defw Codo_abajo_derecha
  76+ 9DB9 2D 9E            defw Derecha_y_subiendo
  77+ 9DBB 37 9E            defw Derecha_y_subiendo_1
  78+ 9DBD 41 9E            defw F_3
  79+ 9DBF 4B 9E            defw F_4
  80+ 9DC1 55 9E            defw Derecha_y_bajando
  81+ 9DC3 5F 9E            defw Derecha_y_bajando_1
  82+ 9DC5 69 9E            defw Derecha_y_bajando_2
  83+ 9DC7 73 9E            defw Codo_derecha_abajo
  84+ 9DC9 A3 9E            defw Codo_abajo_izq.
  85+ 9DCB D7 9E            defw Izquierda_y_subiendo
  86+ 9DCD E1 9E            defw Izquierda_y_subiendo_1
  87+ 9DCF EB 9E            defw F_5
  88+ 9DD1 F5 9E            defw F_6
  89+ 9DD3 FF 9E            defw Izquierda_y_bajando
  90+ 9DD5 09 9F            defw Izquierda_y_bajando_1
  91+ 9DD7 13 9F            defw Izquierda_y_bajando_2
  92+ 9DD9 1D 9F            defw Codo_izquierda_abajo
  93+ 9DDB 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DDD
  95+ 9DDD 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DE1 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DE5
  98+ 9DE5 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DE9 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DED 08 00
 100+ 9DEF 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DF3 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DF7 0F FE
 102+ 9DF9
 103+ 9DF9 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DFD 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E01 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E05 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E15 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E19 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E1D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E21 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E25 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E29 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E2D
 117+ 9E2D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E31 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E35 06 00
 119+ 9E37
 120+ 9E37 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E3B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E3F 02 00
 122+ 9E41
 123+ 9E41 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E45 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E49 04 00
 125+ 9E4B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E4F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E53 08 00
 127+ 9E55
 128+ 9E55 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E59 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E5D 02 00
 130+ 9E5F
 131+ 9E5F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E63 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E67 06 00
 133+ 9E69
 134+ 9E69 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E6D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E71 06 00
 136+ 9E73
 137+ 9E73              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E73
 139+ 9E73 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E77 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E7B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E7F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E83 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E87 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E8B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E8F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E93 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E97 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E9B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E9F 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EA3
 152+ 9EA3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EA7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EAB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EB3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EB7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EBB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EBF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EC3 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EC7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9ECB 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9ECF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9ED3 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ED7
 166+ 9ED7 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EDB 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EDF 06 00
 168+ 9EE1
 169+ 9EE1 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EE5 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EE9 02 00
 171+ 9EEB
 172+ 9EEB 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EEF 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EF3 04 00
 174+ 9EF5 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EF9 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EFD 08 00
 176+ 9EFF
 177+ 9EFF 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F03 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F07 02 00
 179+ 9F09
 180+ 9F09 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F0D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F11 06 00
 182+ 9F13
 183+ 9F13 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F17 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F1B 06 00
 185+ 9F1D
 186+ 9F1D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F21 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F25 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F29 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F2D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F31 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F35 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F39 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F3D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F41 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F45 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F49 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F4D
 199+ 9F4D              ; ----- ----- ----- ----- -----
 200+ 9F4D              ;
 201+ 9F4D              ;   28/12/23
 202+ 9F4D
 203+ 9F4D              Movimiento
 204+ 9F4D
 205+ 9F4D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F4D
 207+ 9F4D 3A 19 89         ld a,(Ctrl_2)
 208+ 9F50 CB 57            bit 2,a
 209+ 9F52 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9F54
 211+ 9F54 2A 0B 89         ld hl,(Puntero_mov)
 212+ 9F57 7E               ld a,(hl)
 213+ 9F58
 214+ 9F58              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9F58
 216+ 9F58              Inicia_desplazamiento.
 217+ 9F58
 218+ 9F58              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9F58
 220+ 9F58 CD 58 A0         call Ajusta_velocidad_desplazamiento
 221+ 9F5B
 222+ 9F5B              ; Iniciamos (Repetimos_mov).
 223+ 9F5B
 224+ 9F5B 7E               ld a,(hl)
 225+ 9F5C E6 0F            and $0f
 226+ 9F5E 32 11 89         ld (Repetimos_desplazamiento),a
 227+ 9F61 32 12 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9F64
 229+ 9F64              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F64
 231+ 9F64 23               inc hl
 232+ 9F65 7E               ld a,(hl)
 233+ 9F66 32 14 89         ld (Cola_de_desplazamiento),a
 234+ 9F69 2B               dec hl
 235+ 9F6A
 236+ 9F6A 21 19 89         ld hl,Ctrl_2
 237+ 9F6D CB D6            set 2,(hl)
 238+ 9F6F
 239+ 9F6F              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F6F              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F6F
 242+ 9F6F              Desplazamiento_iniciado
 243+ 9F6F
 244+ 9F6F CD 26 A0         call Aplica_desplazamiento
 245+ 9F72
 246+ 9F72              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F72
 248+ 9F72 3A 3C 89         ld a,(Ctrl_3)
 249+ 9F75 CB 57            bit 2,a
 250+ 9F77 C0               ret nz
 251+ 9F78
 252+ 9F78 3A 19 89         ld a,(Ctrl_2)
 253+ 9F7B CB 67            bit 4,a
 254+ 9F7D C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F7E
 256+ 9F7E 21 11 89     3 ld hl,Repetimos_desplazamiento
 257+ 9F81 35               dec (hl)
 258+ 9F82 C0               ret nz
 259+ 9F83
 260+ 9F83              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F83              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F83              ; Analiza (Cola_de_desplazamiento).
 263+ 9F83
 264+ 9F83 3A 14 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F86 A7               and a
 266+ 9F87 CC 81 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F8A 28 30            jr z,Reinicia_el_movimiento
 268+ 9F8C
 269+ 9F8C FE FF            cp $ff
 270+ 9F8E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F90
 272+ 9F90 FE FE            cp $fe
 273+ 9F92 CC FF 9F         call z,Fijamos_bucle
 274+ 9F95 28 25            jr z,Reinicia_el_movimiento
 275+ 9F97
 276+ 9F97 FE FD            cp $fd
 277+ 9F99 20 11            jr nz,1F
 278+ 9F9B
 279+ 9F9B              ; ---
 280+ 9F9B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F9B
 282+ 9F9B 3A 19 89         ld a,(Ctrl_2)
 283+ 9F9E CB 5F            bit 3,a
 284+ 9FA0 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9FA2
 286+ 9FA2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9FA2
 288+ 9FA2 21 19 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9FA5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9FA7
 291+ 9FA7 CD 10 A0         call Inicia_Repetimos_movimiento
 292+ 9FAA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9FAC              ; ---
 294+ 9FAC
 295+ 9FAC FE 01        1 cp 1
 296+ 9FAE CA E9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9FB1
 298+ 9FB1 3D               dec a
 299+ 9FB2 32 14 89         ld (Cola_de_desplazamiento),a
 300+ 9FB5
 301+ 9FB5 3A 12 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9FB8 32 11 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9FBB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9FBB C9               ret
 305+ 9FBC
 306+ 9FBC              Reinicia_el_movimiento
 307+ 9FBC
 308+ 9FBC 3A 19 89         ld a,(Ctrl_2)
 309+ 9FBF CB 5F            bit 3,a
 310+ 9FC1 28 1B            jr z,2F
 311+ 9FC3
 312+ 9FC3              ; (Cola_de_desplazamiento)="254".
 313+ 9FC3
 314+ 9FC3 21 13 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FC6 35               dec (hl)
 316+ 9FC7 20 15            jr nz,2F
 317+ 9FC9
 318+ 9FC9              ; Fin de las repeticiones del último movimiento.
 319+ 9FC9
 320+ 9FC9 21 19 89         ld hl,Ctrl_2
 321+ 9FCC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FCE
 323+ 9FCE 2A 0B 89         ld hl,(Puntero_mov)
 324+ 9FD1 23               inc hl
 325+ 9FD2 23               inc hl
 326+ 9FD3 23               inc hl
 327+ 9FD4 22 0B 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FD7              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FD7 7E               ld a,(hl)
 330+ 9FD8 32 14 89         ld (Cola_de_desplazamiento),a
 331+ 9FDB
 332+ 9FDB C3 83 9F         jp Cola
 333+ 9FDE
 334+ 9FDE CD 1B A0     2 call Inicia_Puntero_mov
 335+ 9FE1
 336+ 9FE1 21 19 89         ld hl,Ctrl_2
 337+ 9FE4 CB 96            res 2,(hl)
 338+ 9FE6
 339+ 9FE6 C3 4D 9F         jp Movimiento
 340+ 9FE9
 341+ 9FE9              Siguiente_desplazamiento
 342+ 9FE9
 343+ 9FE9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FE9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FE9
 346+ 9FE9 21 19 89         ld hl,Ctrl_2
 347+ 9FEC CB 96            res 2,(hl)
 348+ 9FEE
 349+ 9FEE 2A 0B 89         ld hl,(Puntero_mov)
 350+ 9FF1 23               inc hl
 351+ 9FF2 23               inc hl
 352+ 9FF3 22 0B 89         ld (Puntero_mov),hl
 353+ 9FF6
 354+ 9FF6 7E               ld a,(hl)
 355+ 9FF7 A7               and a
 356+ 9FF8 CC 81 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FFB CA BC 9F         jp z,Reinicia_el_movimiento
 358+ 9FFE
 359+ 9FFE C9               ret
 360+ 9FFF
 361+ 9FFF              ; Subrutinas -----------------------------------------
 362+ 9FFF              ; ---------- --------- --------- ---------- ----------
 363+ 9FFF              ;
 364+ 9FFF              ;   24/07/23
 365+ 9FFF              ;
 366+ 9FFF              ;   Fijamos_bucle
 367+ 9FFF              ;
 368+ 9FFF              ;
 369+ 9FFF
 370+ 9FFF              Fijamos_bucle
 371+ 9FFF
 372+ 9FFF 3A 0F 89         ld a,(Incrementa_puntero)
 373+ A002 3C               inc a
 374+ A003 32 10 89         ld (Incrementa_puntero_backup),a
 375+ A006
 376+ A006 CD 81 A0         call Incrementa_Puntero_indice_mov
 377+ A009 2A 09 89         ld hl,(Puntero_indice_mov)
 378+ A00C 22 0D 89         ld (Puntero_indice_mov_bucle),hl
 379+ A00F C9               ret
 380+ A010
 381+ A010              ; ---------- --------- --------- ---------- ----------
 382+ A010              ;
 383+ A010              ;   07/7/23
 384+ A010              ;
 385+ A010              ;   Inicia_Repetimos_movimiento
 386+ A010              ;
 387+ A010              ;
 388+ A010
 389+ A010              Inicia_Repetimos_movimiento
 390+ A010
 391+ A010              ; Iniciamos (Repetimos_movimiento).
 392+ A010
 393+ A010 DD 2A 0B 89      ld ix,(Puntero_mov)
 394+ A014 DD 7E 02         ld a,(ix+2)
 395+ A017 32 13 89         ld (Repetimos_movimiento),a
 396+ A01A
 397+ A01A C9               ret
 398+ A01B
 399+ A01B              ; ---------- --------- --------- ---------- ----------
 400+ A01B              ;
 401+ A01B              ;   26/6/23
 402+ A01B              ;
 403+ A01B              ;   Inicia_Puntero_mov
 404+ A01B              ;
 405+ A01B              ;
 406+ A01B
 407+ A01B 2A 09 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ A01E 5E               ld e,(hl)
 409+ A01F 23               inc hl
 410+ A020 56               ld d,(hl)
 411+ A021 EB               ex de,hl
 412+ A022 22 0B 89         ld (Puntero_mov),hl
 413+ A025 C9               ret
 414+ A026
 415+ A026              ; ---------- --------- --------- ---------- ----------
 416+ A026              ;
 417+ A026              ;   27/06/23
 418+ A026              ;
 419+ A026              ;   Aplica_movimiento.
 420+ A026
 421+ A026              Aplica_desplazamiento
 422+ A026
 423+ A026              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ A026
 425+ A026 2A 0B 89         ld hl, (Puntero_mov)
 426+ A029
 427+ A029 7E               ld a,(hl)
 428+ A02A E6 F0            and $f0
 429+ A02C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ A02D
 431+ A02D CB 7E            bit 7,(hl)
 432+ A02F 28 03            jr z,1F
 433+ A031 CD 4B 9A         call Mov_up
 434+ A034 2A 0B 89     1 ld hl, (Puntero_mov)
 435+ A037 CB 76            bit 6,(hl)
 436+ A039 28 09            jr z,2F
 437+ A03B CD 10 9A         call Mov_down
 438+ A03E
 439+ A03E              ; Se ha aplicado reinicio ???
 440+ A03E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ A03E
 442+ A03E 3A 3C 89         ld a,(Ctrl_3)
 443+ A041 CB 57            bit 2,a
 444+ A043 C0               ret nz
 445+ A044
 446+ A044 2A 0B 89     2 ld hl, (Puntero_mov)
 447+ A047 CB 6E            bit 5,(hl)
 448+ A049 28 03            jr z,3F
 449+ A04B CD AC 9B         call Mov_left
 450+ A04E 2A 0B 89     3 ld hl, (Puntero_mov)
 451+ A051 CB 66            bit 4,(hl)
 452+ A053 C8               ret z
 453+ A054 CD 8E 9A         call Mov_right
 454+ A057 C9               ret
 455+ A058
 456+ A058              ; ---------- --------- --------- ---------- ----------
 457+ A058              ;
 458+ A058              ;   26/06/23
 459+ A058              ;
 460+ A058              ;   Ajusta_velocidad_desplazamiento.
 461+ A058
 462+ A058              Ajusta_velocidad_desplazamiento
 463+ A058
 464+ A058              ; 1er byte de la cadena de movimiento.
 465+ A058              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ A058
 467+ A058 CD 76 A0         call Extrae_nibble_alto
 468+ A05B
 469+ A05B 32 EF 88         ld (Vel_up),a
 470+ A05E 79               ld a,c
 471+ A05F E6 0F            and $0f
 472+ A061 32 F0 88         ld (Vel_down),a
 473+ A064
 474+ A064              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A064              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A064
 477+ A064 23               inc hl
 478+ A065 CD 76 A0         call Extrae_nibble_alto
 479+ A068
 480+ A068 32 ED 88         ld (Vel_left),a
 481+ A06B 79               ld a,c
 482+ A06C E6 0F            and $0f
 483+ A06E 32 EE 88         ld (Vel_right),a
 484+ A071
 485+ A071              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A071
 487+ A071 23               inc hl
 488+ A072 22 0B 89         ld (Puntero_mov),hl
 489+ A075 C9               ret
 490+ A076
 491+ A076 06 04        Extrae_nibble_alto ld b,4
 492+ A078 7E               ld a,(hl)
 493+ A079 4F               ld c,a
 494+ A07A E6 F0            and $f0
 495+ A07C CB 3F        1 srl a
 496+ A07E 10 FC            djnz 1B
 497+ A080 C9               ret
 498+ A081
 499+ A081              ; ---------- --------- --------- ---------- ----------
 500+ A081              ;
 501+ A081              ;   5/7/23
 502+ A081              ;
 503+ A081              ;   Incrementa_Puntero_indice_mov
 504+ A081
 505+ A081              Incrementa_Puntero_indice_mov
 506+ A081
 507+ A081 21 0F 89         ld hl,Incrementa_puntero
 508+ A084 34               inc (hl)
 509+ A085
 510+ A085 2A 09 89         ld hl,(Puntero_indice_mov)
 511+ A088 01 02 00         ld bc,2
 512+ A08B A7               and a
 513+ A08C 09               add hl,bc
 514+ A08D 22 09 89         ld (Puntero_indice_mov),hl
 515+ A090
 516+ A090 7E               ld a,(hl)
 517+ A091 A7               and a
 518+ A092
 519+ A092              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A092
 521+ A092              ;    jr z,$
 522+ A092
 523+ A092              ;! Reinicia el Patrón de movimiento.
 524+ A092
 525+ A092 CC 97 A0         call z,Inicializa_Puntero_indice_mov
 526+ A095
 527+ A095 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A096
 529+ A096 C9               ret
 530+ A097
 531+ A097
 532+ A097              ; ---------- --------- --------- ---------- ----------
 533+ A097              ;
 534+ A097              ;   24/07/23
 535+ A097              ;
 536+ A097              ;   Inicializa_Puntero_indice_mov
 537+ A097
 538+ A097              Inicializa_Puntero_indice_mov
 539+ A097
 540+ A097              ; Existe etiqueta de bucle principal???
 541+ A097
 542+ A097 2A 0D 89         ld hl,(Puntero_indice_mov_bucle)
 543+ A09A 24               inc h
 544+ A09B 25               dec h
 545+ A09C 28 05            jr z,2F
 546+ A09E
 547+ A09E 22 09 89         ld (Puntero_indice_mov),hl
 548+ A0A1 18 14            jr 3F
 549+ A0A3
 550+ A0A3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A0A3
 552+ A0A3 3A 0F 89     2 ld a,(Incrementa_puntero)
 553+ A0A6 47               ld b,a
 554+ A0A7
 555+ A0A7 2A 09 89         ld hl,(Puntero_indice_mov)
 556+ A0AA 2B           1 dec hl
 557+ A0AB 2B               dec hl
 558+ A0AC 10 FC            djnz 1B
 559+ A0AE 22 09 89         ld (Puntero_indice_mov),hl
 560+ A0B1
 561+ A0B1 AF               xor a
 562+ A0B2 32 0F 89         ld (Incrementa_puntero),a
 563+ A0B5 18 06            jr 4F
 564+ A0B7
 565+ A0B7 3A 10 89     3 ld a,(Incrementa_puntero_backup)
 566+ A0BA 32 0F 89         ld (Incrementa_puntero),a
 567+ A0BD C9           4 ret
 568+ A0BE
 569+ A0BE
 570+ A0BE
# file closed: Patrones_de_mov.asm
1841  A0BE              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0BE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0BE              ;
   3+ A0BE              ;	12/12/23
   4+ A0BE              ;
   5+ A0BE              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0BE
   7+ A0BE              ;	ADC HL,SP	LD (addr),SP
   8+ A0BE              ;	ADD HL,SP	LD SP,(addr)
   9+ A0BE              ;	ADD IX,SP	LD SP,nn
  10+ A0BE              ; 	ADD IY,SP	LD SP,HL
  11+ A0BE              ;				LD SP,IX
  12+ A0BE              ;	DEC SP		LD SP,IY
  13+ A0BE
  14+ A0BE              ;	EX (SP),HL
  15+ A0BE              ;	EX (SP),IX
  16+ A0BE              ;	EX (SP),IY
  17+ A0BE
  18+ A0BE              ;	INC SP
  19+ A0BE
  20+ A0BE                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 2E 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 F8 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 04 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 1D 89         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 36 89         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 08 89     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 3A 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 34 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 1D 89         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 36 89         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 08 89     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 3A 89         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 2E 89      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 34 89     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 2E 89  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 34 89         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 34 89         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1842  718B
1843  718B              	SAVESNA "Pruebas.sna", START
1844  718B
1845  718B
1846  718B
1847  718B
# file closed: Banco_de_pruebas.asm
