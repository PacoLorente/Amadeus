# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD F9 8A     	call Frame
  15  A104
  16  A104 3A 0A 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 0C 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  27  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D EB 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D EB 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D EB 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD EB 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD EB 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  28  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 CF 88        	defw Nivel_2
   7+ 88C3 DC 88        	defw Nivel_3
   8+ 88C5 EC 88        	defw Nivel_4
   9+ 88C7 FE 88        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CE 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D4 01 02
  22+ 88D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DA 01 02
  23+ 88DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E1 01
  25+ 88E2 03 01 01 01  	db 3,1,1,1,1
  25+ 88E6 01
  26+ 88E7 03 01 01 01  	db 3,1,1,1,1
  26+ 88EB 01
  27+ 88EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F1 01
  29+ 88F2 04 01 01 01  	db 4,1,1,1,1
  29+ 88F6 01
  30+ 88F7 04 01 01 01  	db 4,1,1,1,1
  30+ 88FB 01
  31+ 88FC 02 03        	db 2,3
  32+ 88FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8903 01
  34+ 8904 05 01 01 01  	db 5,1,1,1,1
  34+ 8908 01
  35+ 8909 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890D 01
  36+ 890E 05 01 01 01  	db 5,1,1,1,1
  36+ 8912 01
  37+ 8913
  38+ 8913              ;---------------------------------------------------------------------------------------------------------------
  39+ 8913              ;
  40+ 8913              ;   21/5/23
  41+ 8913              ;
  42+ 8913              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8913              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8913              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8913              ;	_en la caja DRAW correspondiente.
  46+ 8913              ;
  47+ 8913              ;	MODIFICA: HL,DE y A.
  48+ 8913              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8913
  50+ 8913              Inicializa_Punteros_de_nivel
  51+ 8913
  52+ 8913 21 BF 88     	ld hl,Indice_de_niveles
  53+ 8916 22 4C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8919 CD 48 8D     	call Extrae_address
  55+ 891C 7E           	ld a,(hl)
  56+ 891D 32 15 8A     	ld (Numero_de_entidades),a
  57+ 8920 23           	inc hl
  58+ 8921 22 4E 8A     	ld (Datos_de_nivel),hl
  59+ 8924 C9           	ret
  60+ 8925
  61+ 8925              ;---------------------------------------------------------------------------------------------------------------
  62+ 8925              ;
  63+ 8925              ;   13/5/23
  64+ 8925              ;
  65+ 8925              ;	Destruye A,BC,HL,DE
  66+ 8925
  67+ 8925              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8925              ;	_del juego.
  69+ 8925
  70+ 8925              Prepara_cajas
  71+ 8925
  72+ 8925              ; Preparamos los punteros de las cajas.
  73+ 8925
  74+ 8925 21 6C 85     	ld hl,Indice_de_cajas
  75+ 8928 CD 48 8D     	call Extrae_address
  76+ 892B CD 68 89     	call Avanza_caja
  77+ 892E
  78+ 892E CD AC 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8931
  80+ 8931 2A 4E 8A     	ld hl,(Datos_de_nivel)
  81+ 8934
  82+ 8934              ; HL está en los datos del nivel correspondiente.
  83+ 8934              ; B actuará como contador de cajas.
  84+ 8934
  85+ 8934 C5           1 push bc
  86+ 8935
  87+ 8935 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8936 CD 59 89     	call PreparaBC
  89+ 8939
  90+ 8939 21 65 88     	ld hl,Indice_de_entidades
  91+ 893C CD 61 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893F 22 1B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8942
  94+ 8942 CD 72 89     	call Datos_de_entidad_a_caja
  95+ 8945
  96+ 8945 2A 13 8A     	ld hl,(Indice_restore_caja)
  97+ 8948 CD 48 8D     	call Extrae_address
  98+ 894B CD 68 89     	call Avanza_caja
  99+ 894E
 100+ 894E 2A 4E 8A     	ld hl,(Datos_de_nivel)
 101+ 8951 23           	inc hl
 102+ 8952 22 4E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8955
 104+ 8955 C1           	pop bc
 105+ 8956 10 DC        	djnz 1B
 106+ 8958 C9           	ret
 107+ 8959
 108+ 8959 CB 27        PreparaBC sla a
 109+ 895B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895D 4F           	ld c,a
 111+ 895E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8960 C9           	ret
 113+ 8961
 114+ 8961 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8962 ED 4A        	adc hl,bc
 116+ 8964 CD 48 8D     	call Extrae_address
 117+ 8967 C9           	ret
 118+ 8968
 119+ 8968 22 0F 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896B 13           	inc de
 121+ 896C 13           	inc de
 122+ 896D EB           	ex de,hl
 123+ 896E 22 13 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8971 C9           	ret
 125+ 8972
 126+ 8972              Datos_de_entidad_a_caja
 127+ 8972
 128+ 8972              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8972
 130+ 8972
 131+ 8972 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8976
 133+ 8976 01 02 00     	ld bc,2
 134+ 8979 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897B
 136+ 897B 01 07 00     	ld bc,7
 137+ 897E CD A6 89     	call Situa_DE
 138+ 8981
 139+ 8981 01 05 00     	ld bc,5
 140+ 8984 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8986
 142+ 8986 01 04 00     	ld bc,4
 143+ 8989 CD A6 89     	call Situa_DE
 144+ 898C
 145+ 898C 01 07 00     	ld bc,7
 146+ 898F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8991
 148+ 8991 01 18 00     	ld bc,24
 149+ 8994 CD A6 89     	call Situa_DE
 150+ 8997
 151+ 8997 01 02 00     	ld bc,2
 152+ 899A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 899C
 154+ 899C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 899C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 899C
 157+ 899C 01 0F 00     	ld bc,15									; *****
 158+ 899F CD A6 89     	call Situa_DE
 159+ 89A2
 160+ 89A2 3E 03        	ld a,3
 161+ 89A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A5
 163+ 89A5 C9           	ret
 164+ 89A6
 165+ 89A6 EB           Situa_DE ex de,hl
 166+ 89A7 A7           	and a
 167+ 89A8 ED 4A        	adc hl,bc
 168+ 89AA EB           	ex de,hl
 169+ 89AB C9           	ret
 170+ 89AC
 171+ 89AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 89AC              ;
 173+ 89AC              ;	21/5/23
 174+ 89AC              ;
 175+ 89AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89AC              ;
 178+ 89AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89AC              ;
 182+ 89AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89AC              ;	MODIFICA: A y B.
 184+ 89AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89AC
 186+ 89AC              Admin_num_entidades
 187+ 89AC
 188+ 89AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89AC
 190+ 89AC 3A 15 8A     	ld a,(Numero_de_entidades)
 191+ 89AF A7           	and a
 192+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B0              ;	jr z,$
 194+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B0
 196+ 89B0 20 03        	jr nz,3F
 197+ 89B2
 198+ 89B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B2
 200+ 89B2 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B5
 202+ 89B5
 203+ 89B5 3A 15 8A     3 ld a,(Numero_de_entidades)
 204+ 89B8 FE 0A        	cp 10
 205+ 89BA 38 08        	jr c,1F
 206+ 89BC
 207+ 89BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89BC              ; Actualizamos variables.
 209+ 89BC
 210+ 89BC 3E 0A        	ld a,10
 211+ 89BE 32 16 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C1 47           	ld b,a
 213+ 89C2 18 04        	jr 2F
 214+ 89C4
 215+ 89C4              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C4              ; (Numero_de_entidades)="0".
 217+ 89C4
 218+ 89C4 32 16 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C7 47           	ld b,a
 220+ 89C8 C9           2 ret
# file closed: Niveles.asm
  29  89C9
  30  89C9              ; ******************************************************************************************************************************************************************************************
  31  89C9              ; Constantes.
  32  89C9              ; ******************************************************************************************************************************************************************************************
  33  89C9              ;
  34  89C9              ; 25/05/23
  35  89C9              ;
  36  89C9              ; Constantes generales.
  37  89C9              ;
  38  89C9
  39  89C9              Sprite_vacio equ $f000
  40  89C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C9
  45  89C9              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C9              Album_de_fotos_disparos equ $7109						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C9              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C9              Album_de_fotos_2 equ $7085
  52  89C9              Album_de_fotos_disparos_2 equ $7182						;Termina en 71fah (10 disparos).
  53  89C9
  54  89C9              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  55  89C9              ; 78h es el espacio necesario en (Album_de_fotos_disparos) para 10 disparos en pantalla.
  56  89C9
  57  89C9              ; ******************************************************************************************************************************************************************************************
  58  89C9              ; Variables.
  59  89C9              ; ******************************************************************************************************************************************************************************************
  60  89C9              ;
  61  89C9              ; 28/07/23
  62  89C9              ;
  63  89C9              ; Variables de DRAW. (Motor principal).
  64  89C9              ;
  65  89C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  66  89C9
  67  89C9 00           Filas db 0												; Filas. [DRAW]
  68  89CA 00           Columns db 0  											; Nº de columnas. [DRAW]
  69  89CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  70  89CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  71  89CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  72  89D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  73  89D1
  74  89D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  75  89D1
  76  89D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  77  89D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  78  89D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  79  89D2 00           Attr db 0												; Atributos de la entidad:
  80  89D3
  81  89D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  82  89D3              ;
  83  89D3              ;	COLORES: 0 ..... NEGRO
  84  89D3              ;    		 1 ..... AZUL
  85  89D3              ; 			 2 ..... ROJO
  86  89D3              ;			 3 ..... MAGENTA
  87  89D3              ; 			 4 ..... VERDE
  88  89D3              ; 			 5 ..... CIAN
  89  89D3              ;			 6 ..... AMARILLO
  90  89D3              ; 			 7 ..... BLANCO
  91  89D3
  92  89D3 00 00        Indice_Sprite_der defw 0
  93  89D5 00 00        Indice_Sprite_izq defw 0
  94  89D7 00 00        Puntero_DESPLZ_der defw 0
  95  89D9 00 00        Puntero_DESPLZ_izq defw 0
  96  89DB
  97  89DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  98  89DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  99  89DE
 100  89DE              ; Variables de objeto. (Características).
 101  89DE
 102  89DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 103  89DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 104  89E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 105  89E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 106  89E2
 107  89E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 108  89E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 109  89E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 110  89E3
 111  89E3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89E5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 113  89E7 00 00        	defw 0
 114  89E9 00 00 00 00  	db 0,0,0,0
 115  89ED
 116  89ED 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 117  89EF 00 00        	defw 0
 118  89F1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 119  89F3 00 00 00 00  	db 0,0,0,0
 120  89F7
 121  89F7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 122  89F7
 123  89F7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 124  89F8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 125  89F8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 126  89F8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 127  89F8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 128  89F8              ;
 129  89F8              ; 														DESCRIPCIÖN:
 130  89F8              ;
 131  89F8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 132  89F8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 133  89F8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 134  89F8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 135  89F8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 136  89F8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 137  89F8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 138  89F8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 139  89F8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 140  89F8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 141  89F8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 142  89F8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 143  89F8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 144  89F8              ;
 145  89F8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 146  89F8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 147  89F8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 148  89F8
 149  89F8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 150  89F9
 151  89F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 152  89F9
 153  89F9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 154  89FA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 155  89FC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 156  89FE 00 00        Puntero_indice_mov_bucle defw 0							;
 157  8A00              ;
 158  8A00              ;
 159  8A00 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 160  8A01              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 161  8A01              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 162  8A01 00           Incrementa_puntero_backup db 0
 163  8A02 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 164  8A03              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 165  8A03 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 166  8A04 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 167  8A05 00           Cola_de_desplazamiento db 0								; Este byte indica:
 168  8A06              ;
 169  8A06              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 170  8A06              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 171  8A06              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 172  8A06              ;
 173  8A06              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 174  8A06              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 175  8A06              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 176  8A06              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 177  8A06              ;
 178  8A06              ;														;	"$ff" ..... Bucle infinito de repetición.
 179  8A06              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 180  8A06              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 181  8A06
 182  8A06
 183  8A06              ; Variables de funcionamiento. [DRAW].
 184  8A06
 185  8A06 00           Columnas db 0
 186  8A07 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 187  8A09              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 188  8A09 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 189  8A0A
 190  8A0A              ; variables de control general.
 191  8A0A
 192  8A0A 00           Ctrl_2 db 0
 193  8A0B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 194  8A0B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 195  8A0B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 196  8A0B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 197  8A0B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 198  8A0B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 199  8A0B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 200  8A0B              ;
 201  8A0B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 202  8A0B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 203  8A0B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 204  8A0B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 205  8A0B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 206  8A0B
 207  8A0B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 208  8A0C
 209  8A0C              ;! 67 Bytes por entidad.
 210  8A0C
 211  8A0C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 212  8A0C              ;					         		---------;      ;---------
 213  8A0C
 214  8A0C
 215  8A0C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 216  8A0C
 217  8A0C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 218  8A0D
 219  8A0D              ;														DESCRIPCIÓN:
 220  8A0D              ;
 221  8A0D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 222  8A0D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 223  8A0D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 224  8A0D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 225  8A0D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 226  8A0D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 227  8A0D              ;														BIT 3, Recarga de nueva oleada.
 228  8A0D              ;														BIT 4, Recarga de nueva oleada.
 229  8A0D
 230  8A0D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  8A0F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  8A0F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  8A0F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  8A0F
 235  8A0F
 236  8A0F
 237  8A0F              ; Gestión de ENTIDADES y CAJAS.
 238  8A0F
 239  8A0F 00 00        Puntero_store_caja defw 0
 240  8A11 00 00        Puntero_restore_caja defw 0
 241  8A13 00 00        Indice_restore_caja defw 0
 242  8A15 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A16 00           Numero_parcial_de_entidades db 0
 244  8A17 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A18 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A19              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A19              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A19              ;														; _ (Numero_de_malotes)="0".
 249  8A19 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A1B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A1D              ;														; _ puntero (Indice_entidades).
 252  8A1D
 253  8A1D
 254  8A1D              ;---------------------------------------------------------------------------------------------------------------
 255  8A1D              ;
 256  8A1D              ; Sirven para PINTAR.
 257  8A1D
 258  8A1D 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 259  8A1F              ;															; _variable para almacenar lo posición del puntero_
 260  8A1F              ; 															; _de pila, SP.
 261  8A1F 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 262  8A21              ;															; La utiliza la rutina [Extrae_foto_registros].
 263  8A21 00 00        Stack_snapshot defw 0										; Puntero que indica la posición de memoria donde vamos a guardar_
 264  8A23              ;															; _el snapshot de los registros de la siguiente entidad.
 265  8A23              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 266  8A23 00 00        Stack_snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 267  8A25              ;															; _el snapshot de los registros del siguiente disparo.
 268  8A25              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 269  8A25 01           Resorte db 1
 270  8A26 00 70        Stack_snapshot_1 defw Album_de_fotos
 271  8A28 09 71        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos
 272  8A2A 85 70        Stack_snapshot_2 defw Album_de_fotos_2
 273  8A2C 82 71        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 274  8A2E
 275  8A2E              ;---------------------------------------------------------------------------------------------------------------
 276  8A2E
 277  8A2E              ; Gestión de Disparos.
 278  8A2E
 279  8A2E 00           Numero_de_disparotes db 0
 280  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 281  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 282  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 283  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 284  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 285  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 286  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 287  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 288  8A36              ;														; _produzca colisión.
 289  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 290  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 291  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 292  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 293  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 294  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 295  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 296  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 297  8A41
 298  8A41              ;---------------------------------------------------------------------------------------------------------------
 299  8A41
 300  8A41              ; Relojes y temporizaciones.
 301  8A41
 302  8A41 00           Contador_de_frames db 0
 303  8A42 04           Clock_explosion db 4
 304  8A43 1E           Clock_Entidades_en_curso db 30
 305  8A44 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 306  8A45              ;														; Repite la oleada de entidades.
 307  8A45 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 308  8A46 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 309  8A47 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 310  8A48
 311  8A48 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 312  8A49 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 313  8A4A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 314  8A4B
 315  8A4B              ;---------------------------------------------------------------------------------------------------------------
 316  8A4B
 317  8A4B              ; Gestión de NIVELES.
 318  8A4B
 319  8A4B 00           Nivel db 0												; Nivel actual del juego.
 320  8A4C 00 00        Puntero_indice_NIVELES defw 0
 321  8A4E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 322  8A50              ; 														; _ que definen el NIVEL.
 323  8A50              ; Y todo comienza aquí .....
 324  8A50              ;
 325  8A50              ; Rutina principal *************************************************************************************************************************************************************************
 326  8A50              ;
 327  8A50              ;	14/11/22
 328  8A50
 329  8A50              START
 330  8A50
 331  8A50 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 332  8A53 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 333  8A55 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 334  8A57 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 335  8A59 F3           	DI
 336  8A5A
 337  8A5A 3E 07        	ld a,%00000111
 338  8A5C CD 27 99     	call Cls
 339  8A5F
 340  8A5F              ;	call Pinta_marco
 341  8A5F
 342  8A5F CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 343  8A62
 344  8A62 CD 21 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 345  8A65
 346  8A65 CD 25 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 347  8A68
 348  8A68 CD F4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 349  8A6B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 350  8A6B CD D1 8D     	call Restore_entidad
 351  8A6E
 352  8A6E 21 16 8A     	ld hl,Numero_parcial_de_entidades
 353  8A71 46           	ld b,(hl)
 354  8A72 04           	inc b
 355  8A73 05           	dec b
 356  8A74 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 357  8A76
 358  8A76              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 359  8A76              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 360  8A76              ;	Pintamos el resto de entidades:
 361  8A76
 362  8A76              ;	INICIA ENTIDADES !!!!!
 363  8A76
 364  8A76 C5           1 push bc  												; Guardo el contador de entidades.
 365  8A77
 366  8A77 CD E9 8A     	call Inicia_entidad
 367  8A7A
 368  8A7A C1           	pop bc
 369  8A7B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 370  8A7D
 371  8A7D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 372  8A7D              ; (Esto se dá cuando se inicia una nueva oleada).
 373  8A7D
 374  8A7D 3A 0C 8A     	ld a,(Ctrl_1)
 375  8A80 CB 5F        	bit 3,a
 376  8A82 20 18        	jr nz,5F											; Loop
 377  8A84
 378  8A84              ; 	INICIA AMADEUS !!!!!
 379  8A84
 380  8A84 CD F8 8D     3 call Restore_Amadeus
 381  8A87 CD 4E 8D     	call Inicia_Puntero_objeto
 382  8A8A CD 68 93     	call Draw
 383  8A8D CD A0 7F     	call Guarda_foto_registros
 384  8A90 11 84 85     	ld de,Amadeus_db
 385  8A93 CD 0A 8E     	call Store_Amadeus
 386  8A96
 387  8A96              ; 	INICIA DISPAROS !!!!!
 388  8A96
 389  8A96 CD 0A 8D     	call Inicia_Puntero_Disparo_Entidades
 390  8A99 CD 11 8D     	call Inicia_Puntero_Disparo_Amadeus
 391  8A9C
 392  8A9C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 393  8A9C
 394  8A9C CD F4 8C     5 call Inicia_punteros_de_cajas
 395  8A9F CD D1 8D     	call Restore_entidad
 396  8AA2
 397  8AA2 3A 0C 8A     	ld a,(Ctrl_1)
 398  8AA5 CB 5F        	bit 3,a
 399  8AA7 28 0A        	jr z,6F
 400  8AA9
 401  8AA9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 402  8AA9
 403  8AA9 21 0C 8A     	ld hl,Ctrl_1
 404  8AAC CB 9E        	res 3,(hl)
 405  8AAE CD 18 8D     	call Calcula_numero_de_malotes
 406  8AB1 18 07        	jr 7F
 407  8AB3
 408  8AB3              ; ----------
 409  8AB3
 410  8AB3 3A 16 8A     6 ld a,(Numero_parcial_de_entidades)
 411  8AB6 3C           	inc a
 412  8AB7 32 18 8A     	ld (Numero_de_malotes),a
 413  8ABA
 414  8ABA              ; Cambiamos el rsorte de "1" a "0". Esto evitará que se imprima el siguiente cuadro.
 415  8ABA
 416  8ABA 3A 25 8A     7 ld a,(Resorte)
 417  8ABD EE 01        	xor 1
 418  8ABF 32 25 8A     	ld (Resorte),a
 419  8AC2
 420  8AC2 AF           	xor a
 421  8AC3              ; ------------------------------------
 422  8AC3
 423  8AC3 FB           2 ei
 424  8AC4 28 FD        	jr z,2B
 425  8AC6
 426  8AC6              ; ------------------------------------
 427  8AC6
 428  8AC6 3A 41 8A     	ld a,(Contador_de_frames)
 429  8AC9 47           	ld b,a
 430  8ACA 3A 44 8A     	ld a,(Activa_recarga_cajas)
 431  8ACD B8           	cp b
 432  8ACE 28 08        	jr z,8F
 433  8AD0
 434  8AD0 21 0C 8A     	ld hl,Ctrl_1
 435  8AD3 CB E6        	set 4,(hl)
 436  8AD5 AF           	xor a
 437  8AD6 18 EB        	jr 2B
 438  8AD8
 439  8AD8 21 0C 8A     8 ld hl,Ctrl_1
 440  8ADB CB A6        	res 4,(hl)
 441  8ADD F3           	di
 442  8ADE
 443  8ADE 3A 41 8A     	ld a,(Contador_de_frames)
 444  8AE1
 445  8AE1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 446  8AE1              ;! _ IMPREDECIBLE !!!!
 447  8AE1
 448  8AE1 C6 0A        	add 10
 449  8AE3 32 43 8A     	ld (Clock_Entidades_en_curso),a
 450  8AE6
 451  8AE6 C3 65 8A     	jp 4B
 452  8AE9
 453  8AE9              ; -----------------------------------------------------------------------------------
 454  8AE9
 455  8AE9 CD 4E 8D     Inicia_entidad	call Inicia_Puntero_objeto
 456  8AEC CD 3B 99     	call Recompone_posicion_inicio
 457  8AEF CD 68 93     	call Draw
 458  8AF2 CD A0 7F     	call Guarda_foto_registros
 459  8AF5 CD 96 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 460  8AF8 C9           	ret
 461  8AF9
 462  8AF9              ; -----------------------------------------------------------------------------------
 463  8AF9
 464  8AF9              Frame
 465  8AF9
 466  8AF9              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 467  8AF9              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 468  8AF9
 469  8AF9              ; PINTAMOS.
 470  8AF9
 471  8AF9 3E 02            ld a,2
 472  8AFB D3 FE            out ($fe),a
 473  8AFD CD 76 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 474  8B00 CD B4 96     	call Extrae_foto_disparos
 475  8B03 3E 01            ld a,1
 476  8B05 D3 FE            out ($fe),a
 477  8B07
 478  8B07
 479  8B07 18 FE            jr $
 480  8B09
 481  8B09              ; ----------------------------------------------------------------------
 482  8B09
 483  8B09              ; RELOJES.
 484  8B09
 485  8B09 21 41 8A     	ld hl,Contador_de_frames
 486  8B0C 34           	inc (hl)											; 0 - 255
 487  8B0D
 488  8B0D 3A 43 8A     	ld a,(Clock_Entidades_en_curso)
 489  8B10 47           	ld b,a
 490  8B11 3A 41 8A     	ld a,(Contador_de_frames)
 491  8B14 B8           	cp b
 492  8B15 20 18        	jr nz,13F
 493  8B17
 494  8B17 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 495  8B1A 47           	ld b,a
 496  8B1B 3A 17 8A     	ld a,(Entidades_en_curso)
 497  8B1E B8           	cp b
 498  8B1F 28 0E        	jr z,13F
 499  8B21 30 0C        	jr nc,13F
 500  8B23
 501  8B23 3C           	inc a
 502  8B24 32 17 8A     	ld (Entidades_en_curso),a
 503  8B27
 504  8B27 3A 43 8A     	ld a,(Clock_Entidades_en_curso)
 505  8B2A
 506  8B2A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 507  8B2A              ;! _ IMPREDECIBLE !!!!
 508  8B2A
 509  8B2A C6 64        	add 100
 510  8B2C 32 43 8A     	ld (Clock_Entidades_en_curso),a
 511  8B2F
 512  8B2F              ; Habilita disparos.
 513  8B2F
 514  8B2F 21 45 8A     13 ld hl,Disparo_Amadeus
 515  8B32 11 47 8A     	ld de,CLOCK_repone_disparo_Amadeus
 516  8B35 CD EC 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 517  8B38
 518  8B38 21 48 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 519  8B3B 11 4A 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 520  8B3E CD EC 9F     	call Habilita_disparos
 521  8B41
 522  8B41              ; COLISIONES.
 523  8B41
 524  8B41 CD 4A 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 525  8B44
 526  8B44              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 527  8B44              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 528  8B44              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 529  8B44
 530  8B44 AF           	xor a
 531  8B45 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 532  8B48
 533  8B48 CD F4 8C     	call Inicia_punteros_de_cajas
 534  8B4B CD D1 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 535  8B4E              ; 														; _ en DRAW.
 536  8B4E 3A C9 89     	ld a,(Filas)
 537  8B51 A7           	and a
 538  8B52 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 539  8B54 CD E3 8D     	call Incrementa_punteros_de_cajas
 540  8B57 18 F2        	jr 12B
 541  8B59
 542  8B59              ; ---------------------------------------------------------------------------------------
 543  8B59
 544  8B59 CD C0 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 545  8B5C 21 00 70     	ld hl,Album_de_fotos
 546  8B5F 22 21 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 547  8B62              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 548  8B62 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 549  8B65 47               ld b,a
 550  8B66 A7           	and a
 551  8B67 20 14        	jr nz,2F
 552  8B69
 553  8B69 21 0C 8A     	ld hl,Ctrl_1
 554  8B6C CB 66        	bit 4,(hl)
 555  8B6E C2 FA 8B     	jp nz,4F
 556  8B71
 557  8B71 21 0C 8A     	ld hl,Ctrl_1
 558  8B74 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 559  8B76
 560  8B76 3A 41 8A     	ld a,(Contador_de_frames)
 561  8B79 3C           	inc a
 562  8B7A 32 44 8A     	ld (Activa_recarga_cajas),a
 563  8B7D
 564  8B7D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 565  8B7D
 566  8B7D 3A 17 8A     2 ld a,(Entidades_en_curso)
 567  8B80 A7           	and a
 568  8B81 CA FA 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 569  8B84 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 570  8B85
 571  8B85              ; Código que ejecutamos con cada entidad:
 572  8B85              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 573  8B85
 574  8B85 C5           15 push bc 												; Nº de entidades en curso.
 575  8B86
 576  8B86              ; Impacto ???
 577  8B86
 578  8B86 3A E2 89     33 ld a,(Impacto)
 579  8B89 A7           	and a
 580  8B8A 28 2D        	jr z,8F
 581  8B8C
 582  8B8C              ; Hay Impacto en esta entidad.
 583  8B8C
 584  8B8C 21 42 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 585  8B8F 35           	dec (hl)
 586  8B90 20 62        	jr nz,6F
 587  8B92
 588  8B92              ;! Velocidad de la animación de la explosión.
 589  8B92
 590  8B92 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 591  8B94              ;														; _,(velocidad de la explosión).
 592  8B94 CD AB 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 593  8B97
 594  8B97              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 595  8B97
 596  8B97 3A 0A 8A     	ld a,(Ctrl_2)
 597  8B9A CB 4F        	bit 1,a
 598  8B9C 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 599  8B9E
 600  8B9E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 601  8B9E
 602  8B9E 3A D1 89     	ld a,(CTRL_DESPLZ)
 603  8BA1 A7           	and a
 604  8BA2 20 08        	jr nz,21F
 605  8BA4
 606  8BA4 21 84 84     	ld hl,Indice_Explosion_2x2-2
 607  8BA7 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 608  8BAA 18 06        	jr 22F
 609  8BAC
 610  8BAC 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 611  8BAF 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 612  8BB2
 613  8BB2 21 0A 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 614  8BB5 CB CE        	set 1,(hl)
 615  8BB7 18 22        	jr 7F
 616  8BB9
 617  8BB9              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 618  8BB9              ; _con las coordenadas de la entidad almacenada en DRAW.
 619  8BB9
 620  8BB9 3A 0C 8A     8 ld a,(Ctrl_1)
 621  8BBC CB 57        	bit 2,a
 622  8BBE 28 1B        	jr z,7F
 623  8BC0
 624  8BC0 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 625  8BC3 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 626  8BC4              ;														; E contiene la coordenada_X del disparo.
 627  8BC4 2A CF 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 628  8BC7              ;														; H FILA, (Coordenada_y de la entidad).
 629  8BC7 A7           	and a
 630  8BC8 ED 52        	sbc hl,de
 631  8BCA
 632  8BCA CD 81 92     	call Determina_resultado_comparativa
 633  8BCD
 634  8BCD 78           	ld a,b
 635  8BCE A7           	and a
 636  8BCF 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 637  8BD1
 638  8BD1              ; ----- ----- -----
 639  8BD1
 640  8BD1 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 641  8BD3 32 E2 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 642  8BD6
 643  8BD6 21 0C 8A     	ld hl,Ctrl_1
 644  8BD9 CB 96        	res 2,(hl)
 645  8BDB
 646  8BDB CD 2D 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 647  8BDE
 648  8BDE 3A F7 89     	ld a,(Ctrl_0)
 649  8BE1 CB 67        	bit 4,a
 650  8BE3 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8BE5
 652  8BE5              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 653  8BE5              ; [[[
 654  8BE5 CD 6C 8E     	call Detecta_disparo_entidad
 655  8BE8              ; ]]]
 656  8BE8 CD BB 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 657  8BEB
 658  8BEB 21 F7 89     	ld hl,Ctrl_0
 659  8BEE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 660  8BF0 AF           	xor a
 661  8BF1 32 F8 89     	ld (Obj_dibujado),a
 662  8BF4
 663  8BF4 CD 96 8D     6 call Store_Restore_cajas
 664  8BF7
 665  8BF7 C1           	pop bc
 666  8BF8 10 8B        	djnz 15B
 667  8BFA
 668  8BFA              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 669  8BFA
 670  8BFA              ;	ld a,2
 671  8BFA              ;	ld (Limitador_de_entidades_x_frame),a
 672  8BFA
 673  8BFA              ; ------------------------------------
 674  8BFA              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 675  8BFA              ; Hemos gestionado todas las unidades.
 676  8BFA              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 677  8BFA
 678  8BFA              ;	ld hl,Ctrl_1
 679  8BFA              ;	res 2,(hl)
 680  8BFA
 681  8BFA              ; ------------------------------------
 682  8BFA
 683  8BFA              ; Tras la gestión de las entidades, ... AMADEUS.
 684  8BFA
 685  8BFA CD F8 8D     4 call Restore_Amadeus
 686  8BFD
 687  8BFD 3A E2 89     	ld a,(Impacto)
 688  8C00 A7           	and a
 689  8C01 20 FE        	jr nz,$
 690  8C03
 691  8C03 CD 8C 8C     	call Mov_Amadeus
 692  8C06
 693  8C06 3A F7 89     	ld a,(Ctrl_0)
 694  8C09 CB 67        	bit 4,a
 695  8C0B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 696  8C0D
 697  8C0D CD BB 8C     	call Guarda_foto_entidad_a_pintar
 698  8C10
 699  8C10 21 F7 89     3 ld hl,Ctrl_0
 700  8C13 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 701  8C15 AF           	xor a
 702  8C16 32 F8 89     	ld (Obj_dibujado),a
 703  8C19
 704  8C19 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 705  8C1C CD 0A 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 706  8C1F
 707  8C1F CD DE 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 708  8C22
 709  8C22              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 710  8C22
 711  8C22 CD 30 8D     	call Calcula_numero_de_disparotes
 712  8C25 CD 18 8D     9 call Calcula_numero_de_malotes
 713  8C28
 714  8C28 3E 04        	ld a,4
 715  8C2A D3 FE        	out ($fe),a
 716  8C2C
 717  8C2C C9           	ret
 718  8C2D
 719  8C2D              ; --------------------------------------------------------------------------------------------------------------
 720  8C2D              ;
 721  8C2D              ;	27/05/23
 722  8C2D
 723  8C2D              Mov_obj
 724  8C2D
 725  8C2D              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 726  8C2D
 727  8C2D 3A 0A 8A     	ld a,(Ctrl_2)
 728  8C30 CB 4F        	bit 1,a
 729  8C32 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 730  8C34
 731  8C34              ; Explosión:
 732  8C34
 733  8C34 3A 0B 8A     	ld a,(Frames_explosion)
 734  8C37 A7           	and a
 735  8C38 20 11        	jr nz,4F
 736  8C3A
 737  8C3A              ; Una alimaña menos!!!!!!!!!1
 738  8C3A
 739  8C3A CD 13 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 740  8C3D 21 16 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 741  8C40 35           	dec (hl)
 742  8C41 21 17 8A     	ld hl,Entidades_en_curso
 743  8C44 35           	dec (hl)
 744  8C45 21 15 8A     	ld hl,Numero_de_entidades
 745  8C48 35           	dec (hl)
 746  8C49 18 40        	jr 3F
 747  8C4B
 748  8C4B              ; -----
 749  8C4B
 750  8C4B              ;	`Movemos´ la explosión.
 751  8C4B
 752  8C4B 2A D7 89     4 ld hl,(Puntero_DESPLZ_der)
 753  8C4E 23           	inc hl
 754  8C4F 23           	inc hl
 755  8C50 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 756  8C53 CD 48 8D     	call Extrae_address
 757  8C56 22 CD 89     	ld (Puntero_objeto),hl
 758  8C59
 759  8C59 21 0B 8A     	ld hl,Frames_explosion
 760  8C5C 35           	dec (hl)
 761  8C5D
 762  8C5D CD AB 8C     	call Guarda_foto_entidad_a_borrar
 763  8C60 18 29        	jr 3F
 764  8C62
 765  8C62 AF           2 xor a
 766  8C63 32 F8 89     	ld (Obj_dibujado),a
 767  8C66 32 F7 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 768  8C69              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 769  8C69              ; 														; _de la entidad.
 770  8C69 CD C5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 771  8C6C              ;														; Obj_dibujado="0".
 772  8C6C              ; Movemos Entidades malignas.
 773  8C6C
 774  8C6C              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 775  8C6C              ;	and a 												; _a movernos. (Limitador_de_entidades).
 776  8C6C              ;	ret z
 777  8C6C
 778  8C6C CD 87 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 779  8C6F
 780  8C6F 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 781  8C72 CB 67        	bit 4,a
 782  8C74 C8           	ret z
 783  8C75
 784  8C75              ; Ha habido desplazamiento de la entidad maligna.
 785  8C75              ; Ha llegado a zona de AMADEUS ???
 786  8C75
 787  8C75 3A D0 89     	ld a,(Coordenada_y)
 788  8C78 FE 14        	cp $14
 789  8C7A D4 0F 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 790  8C7D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 791  8C7D              ; ---------
 792  8C7D
 793  8C7D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 794  8C7F 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 795  8C82 CD C5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 796  8C85 CD DC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 797  8C88 CD AB 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 798  8C8B C9           3 ret													; _de la misma.
 799  8C8C
 800  8C8C              ; --------------------------------------------------------------------------------------------------------------
 801  8C8C              ;
 802  8C8C              ;	29/1/23
 803  8C8C
 804  8C8C              Mov_Amadeus
 805  8C8C
 806  8C8C AF           	xor a
 807  8C8D 32 F8 89     	ld (Obj_dibujado),a
 808  8C90 CD C5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 809  8C93              ;														; Obj_dibujado="0".
 810  8C93              ; Movemos Amadeus.
 811  8C93
 812  8C93 CD 35 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 813  8C96 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 814  8C99 CB 67        	bit 4,a
 815  8C9B C8           	ret z
 816  8C9C
 817  8C9C              ; ---------
 818  8C9C
 819  8C9C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 820  8C9E 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 821  8CA1 CD C5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 822  8CA4 CD DC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 823  8CA7 CD AB 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 824  8CAA C9           	ret													; _de la nave.
 825  8CAB
 826  8CAB              ; --------------------------------------------------------------------------------------------------------------
 827  8CAB              ;
 828  8CAB              ;	31/01/23
 829  8CAB              ;
 830  8CAB              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 831  8CAB
 832  8CAB              Guarda_foto_entidad_a_borrar
 833  8CAB
 834  8CAB CD 4C 96     	call Prepara_draw
 835  8CAE CD 7C 95     	call calcula_CColumnass
 836  8CB1 CD B3 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 837  8CB4 CD 12 96     	call Define_rutina_de_impresion
 838  8CB7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 839  8CBA C9           	ret
 840  8CBB
 841  8CBB              ; --------------------------------------------------------------------------------------------------------------
 842  8CBB              ;
 843  8CBB              ;	31/01/23
 844  8CBB              ;
 845  8CBB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8CBB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8CBB
 848  8CBB              Guarda_foto_entidad_a_pintar
 849  8CBB
 850  8CBB CD E8 8C     	call Repone_pintar
 851  8CBE CD 68 93     	call Draw
 852  8CC1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 853  8CC4 C9           	ret
 854  8CC5
 855  8CC5              ; --------------------------------------------------------------------------------------------------------------
 856  8CC5              ;
 857  8CC5              ;
 858  8CC5
 859  8CC5 21 C9 89     Prepara_var_pintado_borrado	ld hl,Filas
 860  8CC8 3A F8 89     	ld a,(Obj_dibujado)
 861  8CCB A7           	and a
 862  8CCC 28 05        	jr z,1F
 863  8CCE 11 ED 89     	ld de,Variables_de_pintado
 864  8CD1 18 03        	jr 2F
 865  8CD3 11 E3 89     1 ld de,Variables_de_borrado
 866  8CD6 01 08 00     2 ld bc,8
 867  8CD9 ED B0        	ldir
 868  8CDB C9           	ret
 869  8CDC
 870  8CDC              ; --------------------------------------------------------------------------------------------------------------
 871  8CDC
 872  8CDC 21 E3 89     Repone_borrar ld hl,Variables_de_borrado
 873  8CDF 11 C9 89     	ld de,Filas
 874  8CE2 01 08 00     	ld bc,8
 875  8CE5 ED B0        	ldir
 876  8CE7 C9           	ret
 877  8CE8
 878  8CE8 21 ED 89     Repone_pintar ld hl,Variables_de_pintado
 879  8CEB 11 C9 89     	ld de,Filas
 880  8CEE 01 08 00     	ld bc,8
 881  8CF1 ED B0        	ldir
 882  8CF3 C9           	ret
 883  8CF4
 884  8CF4              ; *************************************************************************************************************************************************************
 885  8CF4              ;
 886  8CF4              ; 8/1/23
 887  8CF4              ;
 888  8CF4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 889  8CF4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 890  8CF4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 891  8CF4
 892  8CF4              ; Destruye HL y DE !!!!!
 893  8CF4
 894  8CF4              Inicia_punteros_de_cajas
 895  8CF4
 896  8CF4 21 6C 85     	ld hl,Indice_de_cajas
 897  8CF7 CD 48 8D         call Extrae_address
 898  8CFA 22 0F 8A         ld (Puntero_store_caja),hl
 899  8CFD 21 6E 85     	ld hl,Indice_de_cajas+2
 900  8D00 22 13 8A     	ld (Indice_restore_caja),hl
 901  8D03 CD 48 8D     	call Extrae_address
 902  8D06 22 11 8A     	ld (Puntero_restore_caja),hl
 903  8D09 C9               ret
 904  8D0A
 905  8D0A              ; *************************************************************************************************************************************************************
 906  8D0A              ;
 907  8D0A              ; 8/1/23
 908  8D0A              ;
 909  8D0A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 910  8D0A
 911  8D0A 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 912  8D0D 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 913  8D10 C9           	ret
 914  8D11 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 915  8D14 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 916  8D17 C9           	ret
 917  8D18
 918  8D18              ; -------------------------------------------------------------------------------------------------------------
 919  8D18              ;
 920  8D18              ; 28/2/23
 921  8D18              ;
 922  8D18
 923  8D18              Calcula_numero_de_malotes
 924  8D18
 925  8D18 21 00 70     	ld hl,Album_de_fotos
 926  8D1B EB           	ex de,hl
 927  8D1C 2A 21 8A     	ld hl,(Stack_snapshot)
 928  8D1F
 929  8D1F 06 00        	ld b,0
 930  8D21 7D           	ld a,l
 931  8D22 93           	sub e
 932  8D23 28 07        	jr z,1F
 933  8D25
 934  8D25              ; Nº de malotes no es "0".
 935  8D25
 936  8D25 D6 06        2 sub 6
 937  8D27 04           	inc b
 938  8D28 A7           	and a
 939  8D29 20 FA        	jr nz,2B
 940  8D2B 78           	ld a,b
 941  8D2C
 942  8D2C 32 18 8A     1 ld (Numero_de_malotes),a
 943  8D2F C9           	ret
 944  8D30
 945  8D30              ; -------------------------------------------------------------------------------------------------------------
 946  8D30              ;
 947  8D30              ; 28/2/23
 948  8D30              ;
 949  8D30
 950  8D30              Calcula_numero_de_disparotes
 951  8D30
 952  8D30 21 09 71     	ld hl,Album_de_fotos_disparos
 953  8D33 EB           	ex de,hl
 954  8D34 2A 23 8A     	ld hl,(Stack_snapshot_disparos)
 955  8D37
 956  8D37 06 00        	ld b,0
 957  8D39 7D           	ld a,l
 958  8D3A 93           	sub e
 959  8D3B 28 07        	jr z,1F
 960  8D3D
 961  8D3D              ; Nº de malotes no es "0".
 962  8D3D
 963  8D3D D6 06        2 sub 6
 964  8D3F 04           	inc b
 965  8D40 A7           	and a
 966  8D41 20 FA        	jr nz,2B
 967  8D43 78           	ld a,b
 968  8D44
 969  8D44 32 2E 8A     1 ld (Numero_de_disparotes),a
 970  8D47 C9           	ret
 971  8D48              ; *************************************************************************************************************************************************************
 972  8D48              ;
 973  8D48              ; 20/10/22
 974  8D48              ;
 975  8D48              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 976  8D48              ;
 977  8D48              ; Destruye el puntero y DE !!!!!
 978  8D48
 979  8D48 5E           Extrae_address ld e,(hl)
 980  8D49 23           	inc hl
 981  8D4A 56           	ld d,(hl)
 982  8D4B 2B           	dec hl
 983  8D4C EB           	ex de,hl
 984  8D4D C9           	ret
 985  8D4E
 986  8D4E              ; *************************************************************************************************************************************************************
 987  8D4E              ;
 988  8D4E              ;	7/2/23
 989  8D4E              ;
 990  8D4E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  8D4E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 992  8D4E              ;
 993  8D4E              ;   Destruye HL y BC !!!!!,
 994  8D4E              ;
 995  8D4E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 996  8D4E              ;					"0" ..... Izquierda.
 997  8D4E
 998  8D4E              Inicia_Puntero_objeto
 999  8D4E
1000  8D4E 3A DD 89     	ld a,(Cuad_objeto)
1001  8D51 E6 01        	and 1
1002  8D53 F5           	push af
1003  8D54 CC 72 8D     	call z,Inicia_puntero_objeto_izq
1004  8D57 F1           	pop af
1005  8D58 28 2B        	jr z,1F
1006  8D5A CD 5F 8D     	call Inicia_puntero_objeto_der
1007  8D5D 18 26        	jr 1F
1008  8D5F
1009  8D5F              ; Arrancamos desde la parte izquierda de la pantalla.
1010  8D5F              ; Iniciamos (Indice_Sprite_der).
1011  8D5F
1012  8D5F 2A D3 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1013  8D62 22 D7 89     	ld (Puntero_DESPLZ_der),hl
1014  8D65 CD 48 8D     	call Extrae_address
1015  8D68 22 CD 89     	ld (Puntero_objeto),hl
1016  8D6B
1017  8D6B 2A D5 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1018  8D6E 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1019  8D71 C9           	ret
1020  8D72
1021  8D72              ; Arrancamos desde la parte derecha de la pantalla.
1022  8D72              ; Iniciamos (Indice_Sprite_izq).
1023  8D72
1024  8D72 2A D5 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1025  8D75 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1026  8D78 CD 48 8D     	call Extrae_address
1027  8D7B 22 CD 89     	ld (Puntero_objeto),hl
1028  8D7E
1029  8D7E 2A D3 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1030  8D81 22 D7 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1031  8D84 C9           	ret
1032  8D85
1033  8D85              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1034  8D85
1035  8D85 21 40 83     1 ld hl,Amadeus
1036  8D88 ED 4B CD 89  	ld bc,(Puntero_objeto)
1037  8D8C B7 ED 42     	sub hl,bc
1038  8D8F C0           	ret nz
1039  8D90 21 F7 89     	ld hl,Ctrl_0
1040  8D93 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1041  8D95 C9           	ret 												; _de nuestra nave en los extremos.
1042  8D96
1043  8D96              ; *************************************************************************************************************************************************************
1044  8D96              ;
1045  8D96              ;	14/5/23
1046  8D96              ;
1047  8D96              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1048  8D96              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1049  8D96
1050  8D96              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1051  8D96              ;	_de la 2ª y 3ª entidad respectivamente.
1052  8D96
1053  8D96              Store_Restore_cajas
1054  8D96
1055  8D96 E5           	push hl
1056  8D97 D5           	push de
1057  8D98 C5            	push bc
1058  8D99
1059  8D99              ;	STORE !!!!!
1060  8D99              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1061  8D99
1062  8D99 21 C9 89     	ld hl,Filas
1063  8D9C ED 5B 0F 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1064  8DA0 01 43 00     	ld bc,67
1065  8DA3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1066  8DA5
1067  8DA5              ; 	Entidad_sospechosa. 20/4/23
1068  8DA5
1069  8DA5 3A E2 89     	ld a,(Impacto)
1070  8DA8 A7           	and a
1071  8DA9 28 0C        	jr z,1F
1072  8DAB
1073  8DAB 2A 0F 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1074  8DAE 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1075  8DB1 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1076  8DB2 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1077  8DB4 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1078  8DB7
1079  8DB7              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1080  8DB7
1081  8DB7 2A 11 8A     1 ld hl,(Puntero_restore_caja)
1082  8DBA 7E           	ld a,(hl)
1083  8DBB A7           	and a
1084  8DBC F5           	push af
1085  8DBD 28 08        	jr z,2F
1086  8DBF
1087  8DBF 11 C9 89     	ld de,Filas
1088  8DC2 01 43 00     	ld bc,67
1089  8DC5 ED B0        	ldir
1090  8DC7
1091  8DC7 CD E3 8D     2 call Incrementa_punteros_de_cajas
1092  8DCA F1           	pop af
1093  8DCB 28 EA        	jr z,1B
1094  8DCD
1095  8DCD C1           	pop bc
1096  8DCE D1           	pop de
1097  8DCF E1           	pop hl
1098  8DD0
1099  8DD0 C9           	ret
1100  8DD1
1101  8DD1              ; **************************************************************************************************
1102  8DD1              ;
1103  8DD1              ;	12/05/23
1104  8DD1              ;
1105  8DD1              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1106  8DD1
1107  8DD1 E5           Restore_entidad push hl
1108  8DD2 D5           	push de
1109  8DD3 C5            	push bc
1110  8DD4
1111  8DD4 2A 0F 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1112  8DD7 11 C9 89     	ld de,Filas
1113  8DDA 01 43 00     	ld bc,67
1114  8DDD ED B0        	ldir
1115  8DDF
1116  8DDF C1           	pop bc
1117  8DE0 D1           	pop de
1118  8DE1 E1           	pop hl
1119  8DE2 C9           	ret
1120  8DE3
1121  8DE3
1122  8DE3              ; **************************************************************************************************
1123  8DE3              ;
1124  8DE3              ;	08/05/23
1125  8DE3              ;
1126  8DE3              ;	Incrementamos los dos punteros de entidades. (+1).
1127  8DE3
1128  8DE3 2A 11 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1129  8DE6 22 0F 8A     	ld (Puntero_store_caja),hl
1130  8DE9 2A 13 8A     	ld hl,(Indice_restore_caja)
1131  8DEC 23           	inc hl
1132  8DED 23           	inc hl
1133  8DEE 22 13 8A     	ld (Indice_restore_caja),hl
1134  8DF1 CD 48 8D         call Extrae_address
1135  8DF4 22 11 8A         ld (Puntero_restore_caja),hl
1136  8DF7 C9               ret
1137  8DF8
1138  8DF8              ; **************************************************************************************************
1139  8DF8              ;
1140  8DF8              ;	25/01/23
1141  8DF8              ;
1142  8DF8              ;	Restore_Amadeus
1143  8DF8              ;
1144  8DF8              ;	Cargamos en DRAW los parámetros de Amadeus.
1145  8DF8              ;
1146  8DF8
1147  8DF8 E5           Restore_Amadeus	push hl
1148  8DF9 D5           	push de
1149  8DFA C5            	push bc
1150  8DFB 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1151  8DFE 11 C9 89     	ld de,Filas
1152  8E01 01 43 00     	ld bc,67
1153  8E04 ED B0        	ldir
1154  8E06 C1           	pop bc
1155  8E07 D1           	pop de
1156  8E08 E1           	pop hl
1157  8E09 C9           	ret
1158  8E0A
1159  8E0A              ; *************************************************************************************************************************************************************
1160  8E0A              ;
1161  8E0A              ;	29/04/23
1162  8E0A              ;
1163  8E0A              ;	Store_Amadeus
1164  8E0A              ;
1165  8E0A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1166  8E0A              ;
1167  8E0A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1168  8E0A              ;
1169  8E0A              ;	DESTRUYE: HL y BC y DE.
1170  8E0A
1171  8E0A 21 C9 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1172  8E0D 01 43 00     	ld bc,67
1173  8E10 ED B0        	ldir
1174  8E12 C9           	ret
1175  8E13
1176  8E13              ; -----------------------------------------------------------
1177  8E13              ;
1178  8E13              ;	27/04/23
1179  8E13              ;
1180  8E13              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1181  8E13              ;
1182  8E13              ;	Destruye: HL,BC,DE,A
1183  8E13
1184  8E13 21 C9 89     Borra_datos_entidad ld hl,Filas
1185  8E16 01 42 00     	ld bc,66
1186  8E19 AF           	xor a
1187  8E1A 77           	ld (hl),a
1188  8E1B 11 CA 89     	ld de,Filas+1
1189  8E1E ED B0        	ldir
1190  8E20 C9           	ret
1191  8E21
1192  8E21              ; -----------------------------------------------------------
1193  8E21
1194  8E21              ; Teclado.
1195  8E21
1196  8E21 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1197  8E23 DB FE        	in a,($fe)
1198  8E25 E6 01        	and $01
1199  8E27 28 02        	jr z,1f
1200  8E29 18 F6        	jr Pulsa_ENTER
1201  8E2B C9           1 ret
1202  8E2C
1203  8E2C              ; **************************************************************************************************
1204  8E2C              ;
1205  8E2C              ; Temporización.
1206  8E2C
1207  8E2C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1208  8E2C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1209  8E2C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1210  8E2C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1211  8E2C
1212  8E2C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1213  8E2C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1214  8E2C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1215  8E2C
1216  8E2C              ; A partir de $4f61 no hace falta DELAY.
1217  8E2C
1218  8E2C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1219  8E2C
1220  8E2C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1221  8E2F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1222  8E30 78           	LD A,B
1223  8E31 A7           	AND A
1224  8E32 20 FB        	JR NZ,wait
1225  8E34 C9           	RET
1226  8E35
1227  8E35              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1228  8E35              ;
1229  8E35              ;	5/3/23
1230  8E35              ;
1231  8E35              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1232  8E35
1233  8E35              Movimiento_Amadeus
1234  8E35
1235  8E35              ; Disparo.
1236  8E35
1237  8E35 3A 45 8A     	ld a,(Disparo_Amadeus)
1238  8E38 A7           	and a
1239  8E39 20 02        	jr nz,1F
1240  8E3B 18 15        	jr 2F
1241  8E3D
1242  8E3D 3E F7        1 ld a,$f7													; "5" para disparar.
1243  8E3F DB FE        	in a,($fe)
1244  8E41 E6 10        	and $10
1245  8E43
1246  8E43 F5           	push af
1247  8E44 CC 72 8E     	call z,Genera_disparo
1248  8E47 F1           	pop af
1249  8E48 20 08        	jr nz,2F
1250  8E4A
1251  8E4A 3A 45 8A     	ld a,(Disparo_Amadeus)
1252  8E4D EE 01        	xor 1
1253  8E4F 32 45 8A     	ld (Disparo_Amadeus),a
1254  8E52
1255  8E52 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1256  8E54 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1257  8E56 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1258  8E58 CC F5 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1259  8E5B 3E F7        	ld a,$f7
1260  8E5D DB FE        	in a,($fe)
1261  8E5F E6 01        	and $01
1262  8E61 C8           	ret z
1263  8E62
1264  8E62 3E F7        	ld a,$f7
1265  8E64 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1266  8E66 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1267  8E68 CC D7 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1268  8E6B C9           	ret
1269  8E6C
1270  8E6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1271  8E6C              ;
1272  8E6C              ;	Rutina provisional para que los malotes cagen balas.
1273  8E6C
1274  8E6C              Detecta_disparo_entidad
1275  8E6C
1276  8E6C 3A 48 8A     	ld a,(Disparo_entidad)
1277  8E6F A7           	and a
1278  8E70 C8           	ret z
1279  8E71
1280  8E71              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1281  8E71
1282  8E71              ;	ld a,$7f				; Detecta SPACE.
1283  8E71              ;	in a,($fe)
1284  8E71              ;	and 1
1285  8E71              ;	ret nz
1286  8E71
1287  8E71              ;	call Genera_disparo
1288  8E71 C9           	ret
1289  8E72
1290  8E72              ; ---------------------------------------------------------------
1291  8E72
1292  8E72              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E72              ; ******************************************************************************************************************************************************************************************
   2+ 8E72              ;
   3+ 8E72              ;   21/07/23
   4+ 8E72              ;
   5+ 8E72              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E72              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E72              ;
   8+ 8E72              ;
   9+ 8E72              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E72              ;
  11+ 8E72              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E72              ;               _ hacen las entidades hacia abajo.
  13+ 8E72              ;
  14+ 8E72              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E72              ;
  16+ 8E72              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E72              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E72              ;
  19+ 8E72              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E72              ;           _ la bala.
  21+ 8E72              ;
  22+ 8E72              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E72              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E72              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E72              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E72              ;           _ en el momento de generarse la bala)).
  27+ 8E72
  28+ 8E72              Genera_disparo
  29+ 8E72
  30+ 8E72              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E72              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E72              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E72              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E72              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E72              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E72              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E72
  38+ 8E72              ; Exclusiones:
  39+ 8E72
  40+ 8E72 3A E1 89         ld a,(Vel_down)
  41+ 8E75 47               ld b,a
  42+ 8E76 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E79 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E7A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E7B 3A 06 8A         ld a,(Columnas)
  46+ 8E7E 47               ld b,a
  47+ 8E7F 3A CA 89         ld a,(Columns)
  48+ 8E82 B8               cp b
  49+ 8E83 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E84
  51+ 8E84              ; ----- ----- -----
  52+ 8E84
  53+ 8E84 3A F7 89         ld a,(Ctrl_0)
  54+ 8E87 CB 77            bit 6,a
  55+ 8E89 20 06            jr nz,14F
  56+ 8E8B
  57+ 8E8B 3A D0 89         ld a,(Coordenada_y)
  58+ 8E8E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E90 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E91
  61+ 8E91 21 00 80     14 ld hl,Indice_disparo
  62+ 8E94 3A D1 89         ld a,(CTRL_DESPLZ)
  63+ 8E97 4F               ld c,a
  64+ 8E98 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E9A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E9A              ;                                            ""        ""       "f9", B="1"
  67+ 8E9A              ;                                            ""        ""       "fb", B="2"
  68+ 8E9A              ;                                            ""        ""       "fb", B="3"
  69+ 8E9A A7               and a
  70+ 8E9B 28 10            jr z,1F
  71+ 8E9D E6 01            and 1
  72+ 8E9F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA0
  74+ 8EA0 79               ld a,c
  75+ 8EA1 16 F9            ld d,$f9
  76+ 8EA3 23           2 inc hl
  77+ 8EA4 23               inc hl
  78+ 8EA5 04               inc b
  79+ 8EA6 BA               cp d
  80+ 8EA7 28 04            jr z,1F
  81+ 8EA9 14               inc d
  82+ 8EAA 14               inc d
  83+ 8EAB 18 F6            jr 2B
  84+ 8EAD
  85+ 8EAD CD 48 8D     1 call Extrae_address
  86+ 8EB0 E5               push hl
  87+ 8EB1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB3 DD 21 F0 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EB7
  90+ 8EB7              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EB7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EB7
  93+ 8EB7 3A F7 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EBA CB 77            bit 6,a
  95+ 8EBC 20 04            jr nz,19F
  96+ 8EBE
  97+ 8EBE AF               xor a
  98+ 8EBF 32 48 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC2
 100+ 8EC2 3A DD 89     19 ld a,(Cuad_objeto)
 101+ 8EC5 FE 02            cp 2
 102+ 8EC7 38 66            jr c,3F
 103+ 8EC9 28 64            jr z,3F
 104+ 8ECB
 105+ 8ECB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ECB
 107+ 8ECB E6 01            and 1
 108+ 8ECD 28 30            jr z,4F
 109+ 8ECF
 110+ 8ECF              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ECF              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ECF              ;
 113+ 8ECF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ECF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ECF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ECF
 117+ 8ECF 2A CB 89     	ld hl,(Posicion_actual)
 118+ 8ED2
 119+ 8ED2              ;   Amadeus o entidad ???.
 120+ 8ED2
 121+ 8ED2 3A F7 89         ld a,(Ctrl_0)
 122+ 8ED5 CB 77            bit 6,a
 123+ 8ED7 28 0A            jr z,8F
 124+ 8ED9
 125+ 8ED9              ; 	Dispara Amadeus.
 126+ 8ED9
 127+ 8ED9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EDB CD 67 96         call PreviousScan
 129+ 8EDE CD 67 96         call PreviousScan
 130+ 8EE1
 131+ 8EE1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE1
 136+ 8EE1 18 11            jr 10F
 137+ 8EE3
 138+ 8EE3              ; 	Dispara Entidad.
 139+ 8EE3
 140+ 8EE3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EE6              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EE6
 143+ 8EE6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EE6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EE6
 146+ 8EE6 C5               push bc
 147+ 8EE7 06 10            ld b,16
 148+ 8EE9 CD 58 96     9 call NextScan
 149+ 8EEC 10 FB            djnz 9B
 150+ 8EEE C1               pop bc
 151+ 8EEF CD 59 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF2 18 06            jr 17F
 153+ 8EF4
 154+ 8EF4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EF4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EF4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EF4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EF4
 159+ 8EF4 CD 59 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EF7 CD CE 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EFA              ;                                                      ; _al generar el disparo.
 162+ 8EFA
 163+ 8EFA              ; 	LLegados a este punto tendremos:
 164+ 8EFA              ;
 165+ 8EFA              ;       Puntero_objeto_disparo en IY.
 166+ 8EFA              ;       Rutinas_de_impresion en IX.
 167+ 8EFA              ;       Puntero_de_impresion en HL.
 168+ 8EFA              ;       Impacto/Dirección en BC.
 169+ 8EFA
 170+ 8EFA CD 61 8F     17 call Almacena_disparo
 171+ 8EFD 18 52            jr 6F                                             ; RET.
 172+ 8EFF
 173+ 8EFF              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EFF              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EFF              ;
 176+ 8EFF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EFF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EFF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EFF
 180+ 8EFF 2A CB 89     4 ld hl,(Posicion_actual)
 181+ 8F02
 182+ 8F02              ;   Amadeus o entidad ???.
 183+ 8F02
 184+ 8F02 3A F7 89         ld a,(Ctrl_0)
 185+ 8F05 CB 77            bit 6,a
 186+ 8F07 28 0A            jr z,11F
 187+ 8F09
 188+ 8F09              ; 	Dispara Amadeus.
 189+ 8F09
 190+ 8F09 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F0B CD 67 96         call PreviousScan
 192+ 8F0E CD 67 96         call PreviousScan
 193+ 8F11
 194+ 8F11              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F11              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F11              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F11              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F11
 199+ 8F11 18 11            jr 13F
 200+ 8F13
 201+ 8F13              ; 	Dispara Entidad.
 202+ 8F13
 203+ 8F13 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F16              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F16
 206+ 8F16              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F16              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F16
 209+ 8F16 C5               push bc
 210+ 8F17 06 10            ld b,16
 211+ 8F19 CD 58 96     12 call NextScan
 212+ 8F1C 10 FB            djnz 12B
 213+ 8F1E C1               pop bc
 214+ 8F1F
 215+ 8F1F CD 52 8F         call Ajusta_disparo_parte_derecha
 216+ 8F22 18 06            jr 18F
 217+ 8F24
 218+ 8F24              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F24              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F24              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F24              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F24
 223+ 8F24 CD 52 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F27 CD CE 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F2A              ;                                                       ; _al generar el disparo.
 226+ 8F2A
 227+ 8F2A              ; LLegados a este punto tendremos:
 228+ 8F2A              ;
 229+ 8F2A              ;       Puntero_objeto_disparo en IY.
 230+ 8F2A              ;       Rutinas_de_impresion en IX.
 231+ 8F2A              ;       Puntero_de_impresion en HL.
 232+ 8F2A              ;       Impacto/Dirección en BC.
 233+ 8F2A
 234+ 8F2A CD 61 8F     18 call Almacena_disparo
 235+ 8F2D 18 22            jr 6F                                               ; RET.
 236+ 8F2F
 237+ 8F2F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F2F
 239+ 8F2F 28 11        3 jr z,5F
 240+ 8F31
 241+ 8F31              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F31              ;
 243+ 8F31              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F31              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F31              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F31              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F31
 248+ 8F31              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F31              ;	   ""        ""       "f9", B="1"
 250+ 8F31              ;	   ""        ""       "fb", B="2"
 251+ 8F31              ; 	   ""        ""       "fb", B="3"
 252+ 8F31
 253+ 8F31 2A CB 89     	ld hl,(Posicion_actual)
 254+ 8F34 CD 58 96     	call NextScan
 255+ 8F37
 256+ 8F37              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F37              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F37              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F37              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F37
 261+ 8F37 CD 59 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F3A
 263+ 8F3A              ; 	No se produce impacto. B="$80"
 264+ 8F3A              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F3A
 266+ 8F3A 01 80 80         ld bc,$8080
 267+ 8F3D
 268+ 8F3D              ; 	LLegados a este punto tendremos:
 269+ 8F3D              ;
 270+ 8F3D              ;       Puntero_objeto_disparo en IY.
 271+ 8F3D              ;       Rutinas_de_impresion en IX.
 272+ 8F3D              ;       Puntero_de_impresion en HL.
 273+ 8F3D              ;       Impacto/Dirección en BC.
 274+ 8F3D
 275+ 8F3D CD 61 8F         call Almacena_disparo
 276+ 8F40 18 0F            jr 6F                                           ; RET.
 277+ 8F42
 278+ 8F42              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F42              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F42              ;
 281+ 8F42              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F42              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F42              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F42              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F42
 286+ 8F42 2A CB 89     5 ld hl,(Posicion_actual)
 287+ 8F45 CD 58 96     	call NextScan
 288+ 8F48
 289+ 8F48              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F48              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F48              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F48              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F48
 294+ 8F48 CD 52 8F         call Ajusta_disparo_parte_derecha
 295+ 8F4B
 296+ 8F4B              ; 	No se produce impacto. B="$80"
 297+ 8F4B              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F4B
 299+ 8F4B 01 80 80     15 ld bc,$8080
 300+ 8F4E
 301+ 8F4E              ; 	LLegados a este punto tendremos:
 302+ 8F4E              ;
 303+ 8F4E              ;       Puntero_objeto_disparo en IY.
 304+ 8F4E              ;       Rutinas_de_impresion en IX.
 305+ 8F4E              ;       Puntero_de_impresion en HL.
 306+ 8F4E              ;       Impacto/Dirección en BC.
 307+ 8F4E
 308+ 8F4E CD 61 8F         call Almacena_disparo
 309+ 8F51
 310+ 8F51 C9           6 ret
 311+ 8F52
 312+ 8F52              ; ----------------------------------------------------------------
 313+ 8F52              ;
 314+ 8F52              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F52              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F52              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F52
 318+ 8F52 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F53 FE 02            cp 2
 320+ 8F55 38 01            jr c,1F
 321+ 8F57 23               inc hl
 322+ 8F58 C9           1 ret
 323+ 8F59
 324+ 8F59 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F5A FE 01        	cp 1
 326+ 8F5C 20 01        	jr nz,1F
 327+ 8F5E 2B           	dec hl
 328+ 8F5F 2B           1 dec hl
 329+ 8F60 C9               ret
 330+ 8F61
 331+ 8F61              ; ----------------------------------------------------------------
 332+ 8F61              ;
 333+ 8F61              ;   25/02/23
 334+ 8F61              ;
 335+ 8F61              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F61              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F61              ;
 338+ 8F61              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F61              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F61
 341+ 8F61              Almacena_disparo
 342+ 8F61
 343+ 8F61 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F62 F1               pop af
 345+ 8F63 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F64
 347+ 8F64 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F65 E6 01            and 1
 349+ 8F67 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F69              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F69              ; 	Dispara AMADEUS.
 352+ 8F69
 353+ 8F69              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F69              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F69              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F69              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F69
 358+ 8F69 C5               push bc
 359+ 8F6A 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F6D 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F70 A7               and a
 362+ 8F71 ED 42            sbc hl,bc
 363+ 8F73 CC 11 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F76 C1               pop bc
 365+ 8F77 28 54            jr z,4F
 366+ 8F79
 367+ 8F79 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F7C 23               inc hl
 369+ 8F7D 23               inc hl
 370+ 8F7E 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F81              ;                                                   ; _ Disparo_(+1).
 372+ 8F81 18 18            jr 2F
 373+ 8F83
 374+ 8F83              ; Dispara una entidad.
 375+ 8F83
 376+ 8F83 C5           1 push bc
 377+ 8F84 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F87 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F8A A7               and a
 380+ 8F8B ED 42            sbc hl,bc
 381+ 8F8D CC 0A 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F90 C1               pop bc
 383+ 8F91 28 3A            jr z,4F
 384+ 8F93
 385+ 8F93 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F96 23               inc hl
 387+ 8F97 23               inc hl
 388+ 8F98 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F9B              ;                                                   ; _ Disparo_(+1).
 390+ 8F9B CD 48 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F9E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F9E              ;
 393+ 8F9E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F9E              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F9E              ;                                                     Puntero_de_impresion en HL.
 396+ 8F9E              ;                                                     Impacto/Dirección en BC.
 397+ 8F9E
 398+ 8F9E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F9F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA0 23               inc hl                                          ; _ al siguiente.
 401+ 8FA1 A7               and a
 402+ 8FA2 20 C0            jr nz,3B
 403+ 8FA4
 404+ 8FA4 08               ex af,af
 405+ 8FA5 ED 73 1D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FA9 F9               ld sp,hl
 407+ 8FAA
 408+ 8FAA DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FAC F5               push af                                         ; Puntero de impresión.
 410+ 8FAD FD E5            push iy                                         ; Puntero objeto.
 411+ 8FAF C5               push bc                                         ; Control.
 412+ 8FB0
 413+ 8FB0 ED 7B 1D 8A      ld sp,(Stack)
 414+ 8FB4
 415+ 8FB4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FB4
 417+ 8FB4 21 0C 8A     	ld hl,Ctrl_1
 418+ 8FB7 CB C6        	set 0,(hl)
 419+ 8FB9
 420+ 8FB9 DD E5        	push ix
 421+ 8FBB E1               pop hl
 422+ 8FBC F5               push af
 423+ 8FBD DD E1            pop ix
 424+ 8FBF
 425+ 8FBF CD A0 7F     	call Guarda_foto_registros
 426+ 8FC2
 427+ 8FC2 21 0C 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FC5 CB 86        	res 0,(hl)
 429+ 8FC7
 430+ 8FC7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FC7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FC7
 433+ 8FC7 CD 11 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FCA CD 0A 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 8FCD
 436+ 8FCD C9           4 ret
 437+ 8FCE
 438+ 8FCE              ; ----------------------------------------------------------------
 439+ 8FCE              ;
 440+ 8FCE              ;   4/3/23
 441+ 8FCE              ;
 442+ 8FCE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FCE              ;   _ al generarse el disparo.
 444+ 8FCE              ;
 445+ 8FCE              ;       "$80" ..... No se produce colisión.
 446+ 8FCE              ;       "$81" ..... Se produce colisión.
 447+ 8FCE              ;
 448+ 8FCE              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FCE              ;         _ que forman el disparo.
 450+ 8FCE
 451+ 8FCE
 452+ 8FCE              Comprueba_Colision
 453+ 8FCE
 454+ 8FCE              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FCE
 456+ 8FCE FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD0 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD1
 459+ 8FD1 CD 07 90         call Modifica_H_Velocidad_disparo
 460+ 8FD4
 461+ 8FD4 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FD5 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FD7 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FD9
 465+ 8FD9 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FDB CD F7 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FDE
 468+ 8FDE 7B               ld a,e
 469+ 8FDF E6 01            and 1
 470+ 8FE1 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE3              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE3 E1               pop hl
 473+ 8FE4 E5               push hl
 474+ 8FE5 CD 58 96         call NextScan
 475+ 8FE8
 476+ 8FE8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FE9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FEB 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FED              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FED 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FEF CD F7 8F         call Bucle_2
 482+ 8FF2
 483+ 8FF2 43           1 ld b,e
 484+ 8FF3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FF4 FD E1            pop iy
 486+ 8FF6 C9               ret
 487+ 8FF7
 488+ 8FF7              ; ---------- ----------
 489+ 8FF7
 490+ 8FF7 06 02        Bucle_2 ld b,2
 491+ 8FF9 FD 7E 00     2 ld a,(iy)
 492+ 8FFC A6               and (hl)
 493+ 8FFD 28 02            jr z,1F
 494+ 8FFF 1E 81            ld e,$81
 495+ 9001 23           1 inc hl
 496+ 9002 FD 23            inc iy
 497+ 9004 10 F3            djnz 2B
 498+ 9006 C9               ret
 499+ 9007
 500+ 9007              ; ---------- ----------
 501+ 9007              ;
 502+ 9007              ;   21/7/23
 503+ 9007
 504+ 9007              Modifica_H_Velocidad_disparo
 505+ 9007
 506+ 9007 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 900A FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 900C D0               ret nc                                         ; _ incrementamos H.
 509+ 900D 24               inc h
 510+ 900E
 511+ 900E C9               ret
 512+ 900F
 513+ 900F              ; -------------------------------------------------------------------------------------------------------------
 514+ 900F              ;
 515+ 900F              ;   11/04/23
 516+ 900F              ;
 517+ 900F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 900F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 900F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 900F              ;
 521+ 900F              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 900F
 523+ 900F              Compara_coordenadas_X
 524+ 900F
 525+ 900F              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 900F              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 900F
 528+ 900F              ; Preparamos registros:
 529+ 900F
 530+ 900F 21 CF 89         ld hl,Filas+6
 531+ 9012 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9013 23               inc hl
 533+ 9014 23               inc hl
 534+ 9015 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9016 43               ld b,e
 536+ 9017
 537+ 9017 21 DD 89         ld hl,Filas+20
 538+ 901A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 901B 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 901E CD 3A 92         call Guarda_coordenadas_X
 541+ 9021
 542+ 9021              ; Preparamos registros:
 543+ 9021
 544+ 9021 21 8A 85         ld hl,Amadeus_db+6
 545+ 9024 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9025 23               inc hl
 547+ 9026 23               inc hl
 548+ 9027 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9028 7B               ld a,e
 550+ 9029 08               ex af,af'
 551+ 902A 21 98 85         ld hl,Amadeus_db+20
 552+ 902D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 902E 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9031 CD 3A 92         call Guarda_coordenadas_X
 555+ 9034
 556+ 9034              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9034              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9034
 559+ 9034 04               inc b
 560+ 9035 05               dec b
 561+ 9036 28 04            jr z,1F
 562+ 9038 06 03            ld b,3
 563+ 903A 18 02            jr 2F
 564+ 903C 06 02        1 ld b,2
 565+ 903E 08           2 ex af,af'
 566+ 903F 3C               inc a
 567+ 9040 3D               dec a
 568+ 9041 28 04            jr z,5F
 569+ 9043 0E 03            ld c,3
 570+ 9045 18 02            jr 6F
 571+ 9047 0E 02        5 ld c,2
 572+ 9049 79           6 ld a,c
 573+ 904A 08               ex af,af'
 574+ 904B 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 904E 1A           4 ld a,(de)
 576+ 904F 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9052 BE           3 cp (hl)
 578+ 9053 28 0E            jr z,7F
 579+ 9055 23               inc hl
 580+ 9056 0D               dec c
 581+ 9057 20 F9            jr nz,3B
 582+ 9059 13               inc de
 583+ 905A 08               ex af,af'
 584+ 905B 4F               ld c,a
 585+ 905C 08               ex af,af'
 586+ 905D 10 EF            djnz 4B
 587+ 905F
 588+ 905F              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 905F
 590+ 905F CD 76 92     8 call Limpia_Coordenadas_X
 591+ 9062 C9               ret
 592+ 9063
 593+ 9063 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9065 32 E2 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9068 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 906B CB D6            set 2,(hl)
 597+ 906D 18 F0            jr 8B
 598+ 906F
 599+ 906F              ; -----------------------------------------------------------------------
 600+ 906F              ;
 601+ 906F              ;   17/04/23
 602+ 906F              ;
 603+ 906F
 604+ 906F              Detecta_colision_nave_entidad
 605+ 906F
 606+ 906F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 906F
 608+ 906F 2A CB 89         ld hl,(Posicion_actual)
 609+ 9072 CD B3 95         call Calcula_puntero_de_impresion
 610+ 9075
 611+ 9075              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9075              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9075
 614+ 9075 DD E5            push ix
 615+ 9077 E1               pop hl
 616+ 9078 E5               push hl
 617+ 9079
 618+ 9079              ; ----- ----- -----
 619+ 9079 1E 00            ld e,0                                         ; Indica impacto.
 620+ 907B 06 0A            ld b,10
 621+ 907D CD AD 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9080 7B               ld a,e
 623+ 9081 FE 05            cp 5
 624+ 9083 38 0E            jr c,3F
 625+ 9085
 626+ 9085              ; LLegados a este punto:
 627+ 9085              ;
 628+ 9085              ;   HAY COLISIÓN !!!!!.
 629+ 9085              ;
 630+ 9085              ;   .db (Impacto) de Amadeus a "1".
 631+ 9085              ;   SET el bit3 de (Impacto2).
 632+ 9085              ;
 633+ 9085              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9085
 635+ 9085 21 9D 85         ld hl,Amadeus_db+25
 636+ 9088 36 01            ld (hl),1
 637+ 908A 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 908D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 908F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9091 18 18            jr 1F
 641+ 9093
 642+ 9093              ; -----
 643+ 9093
 644+ 9093 E1           3 pop hl
 645+ 9094 CD 58 96         call NextScan
 646+ 9097 E5               push hl
 647+ 9098 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9099 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 909B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 909D 30 0C            jr nc,1F
 651+ 909F              ;                                                  ; _ 2º scanline si esto es así.
 652+ 909F 10 DC            djnz 2B
 653+ 90A1
 654+ 90A1              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90A1
 656+ 90A1              ; LLegados a este punto:
 657+ 90A1              ;
 658+ 90A1              ;   NO HAY COLISIÓN !!!!!.
 659+ 90A1              ;
 660+ 90A1              ;   .db (Impacto) de Amadeus a "0".
 661+ 90A1              ;   RES el bit2 de (Impacto2).
 662+ 90A1              ;
 663+ 90A1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A1              ;   Lo colocamos a "0".
 665+ 90A1
 666+ 90A1 21 33 8A         ld hl,Impacto2
 667+ 90A4 CB 96            res 2,(hl)
 668+ 90A6 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90A9 36 00            ld (hl),0
 670+ 90AB
 671+ 90AB E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90AC C9               ret
 673+ 90AD
 674+ 90AD               ; ---------- ----------
 675+ 90AD
 676+ 90AD C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90AE 3A CA 89         ld a,(Columns)
 678+ 90B1 47               ld b,a
 679+ 90B2 FD 7E 00     2 ld a,(iy)
 680+ 90B5 BE               cp (hl)
 681+ 90B6 28 01            jr z,1F
 682+ 90B8
 683+ 90B8 1C               inc e
 684+ 90B9
 685+ 90B9 23           1 inc hl
 686+ 90BA FD 23            inc iy
 687+ 90BC 10 F4            djnz 2B
 688+ 90BE C1               pop bc
 689+ 90BF C9               ret
 690+ 90C0
 691+ 90C0              ; -------------------------------------------------------------------------------------------------------------
 692+ 90C0              ;
 693+ 90C0              ;   13/03/23
 694+ 90C0              ;
 695+ 90C0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90C0              ;
 697+ 90C0              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90C0
 699+ 90C0 21 09 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90C3 7E               ld a,(hl)
 701+ 90C4 A7               and a
 702+ 90C5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90C6
 704+ 90C6 44               ld b,h
 705+ 90C7 4D               ld c,l
 706+ 90C8 2A 23 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90CB E5               push hl
 708+ 90CC A7               and a
 709+ 90CD ED 42            sbc hl,bc
 710+ 90CF E5               push hl
 711+ 90D0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90D1
 713+ 90D1 E1               pop hl
 714+ 90D2 54               ld d,h
 715+ 90D3 5D               ld e,l
 716+ 90D4 1B               dec de
 717+ 90D5 ED B8            lddr                                                ; Limpiamos.
 718+ 90D7
 719+ 90D7 21 09 71         ld hl,Album_de_fotos_disparos
 720+ 90DA 22 23 8A         ld (Stack_snapshot_disparos),hl
 721+ 90DD
 722+ 90DD C9               ret
 723+ 90DE
 724+ 90DE              ; -------------------------------------------------------------------------------------------------------------
 725+ 90DE              ;
 726+ 90DE              ;   18/07/23
 727+ 90DE              ;
 728+ 90DE
 729+ 90DE              Motor_de_disparos
 730+ 90DE
 731+ 90DE              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90DE
 733+ 90DE 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90E1 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90E4
 736+ 90E4 CD 48 8D     2 call Extrae_address
 737+ 90E7 7E               ld a,(hl)
 738+ 90E8 A7               and a
 739+ 90E9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90EB
 741+ 90EB              ; ----- ----- ----- ----- ----- -----
 742+ 90EB
 743+ 90EB C5               push bc
 744+ 90EC CD B0 91         call foto_disparo_a_borrar
 745+ 90EF
 746+ 90EF              ; Existe colisión con este disparo???
 747+ 90EF
 748+ 90EF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90F0 7E               ld a,(hl)
 750+ 90F1 2B               dec hl
 751+ 90F2 E6 01            and 1
 752+ 90F4 28 1D            jr z,9F
 753+ 90F6
 754+ 90F6              ;   En este punto:
 755+ 90F6              ;
 756+ 90F6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90F6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90F6              ;   _con la entidad).
 759+ 90F6              ;
 760+ 90F6              ;   Disparo_2A defw 0                                ; Control.
 761+ 90F6              ;    defw 0                                          ; Puntero objeto.
 762+ 90F6              ;    defw 0                                          ; Puntero de impresión.
 763+ 90F6              ;    defw 0                                          ; Rutina de impresión.
 764+ 90F6
 765+ 90F6 E5               push hl
 766+ 90F7
 767+ 90F7 06 04            ld b,4
 768+ 90F9 23           19 inc hl
 769+ 90FA 10 FD            djnz 19B
 770+ 90FC
 771+ 90FC CD 48 8D         call Extrae_address
 772+ 90FF CD D3 9C         call Genera_coordenadas_disparo
 773+ 9102
 774+ 9102              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9102
 776+ 9102 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 9105 72               ld (hl),d
 778+ 9106 23               inc hl
 779+ 9107 73               ld (hl),e
 780+ 9108
 781+ 9108              ; Elimino el disparo de la base de datos.
 782+ 9108
 783+ 9108 E1               pop hl
 784+ 9109 CD 2F 92         call Elimina_disparo_de_base_de_datos
 785+ 910C 21 33 8A         ld hl,Impacto2
 786+ 910F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9111
 788+ 9111 18 06            jr 11F
 789+ 9113
 790+ 9113 CD D9 91     9 call Mueve_disparo
 791+ 9116 CD B0 91         call foto_disparo_a_borrar
 792+ 9119
 793+ 9119 C1           11 pop bc
 794+ 911A 18 04            jr 7F
 795+ 911C
 796+ 911C              ; ----- ----- ----- ----- ----- -----
 797+ 911C
 798+ 911C ED 42        1 sbc hl,bc
 799+ 911E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9120
 801+ 9120 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9123 23               inc hl
 803+ 9124 23               inc hl
 804+ 9125 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9128 18 BA            jr 2B
 806+ 912A
 807+ 912A CD 11 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 912D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 912D
 810+ 912D              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 912D
 812+ 912D 01 6A 85         ld bc,Disparo_11
 813+ 9130 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9133
 815+ 9133 CD 48 8D     5 call Extrae_address
 816+ 9136 7E               ld a,(hl)
 817+ 9137 A7               and a
 818+ 9138 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 913A
 820+ 913A              ; ----- ----- ----- ----- ----- -----
 821+ 913A
 822+ 913A C5               push bc
 823+ 913B CD B0 91         call foto_disparo_a_borrar
 824+ 913E
 825+ 913E              ; Existe colisión con este disparo???
 826+ 913E
 827+ 913E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 913F 7E               ld a,(hl)
 829+ 9140 2B               dec hl
 830+ 9141 E6 01            and 1
 831+ 9143 28 4D            jr z,10F
 832+ 9145
 833+ 9145              ;! La colisión se produce con Amadeus???
 834+ 9145              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9145
 836+ 9145 E5               push hl
 837+ 9146
 838+ 9146 06 04            ld b,4
 839+ 9148 23           16 inc hl
 840+ 9149 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 914B
 842+ 914B CD 48 8D         call Extrae_address
 843+ 914E CD D3 9C         call Genera_coordenadas_disparo
 844+ 9151
 845+ 9151 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9152 FE 16            cp $16
 847+ 9154 38 2A            jr c,15F
 848+ 9156
 849+ 9156
 850+ 9156              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9156
 852+ 9156 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9157
 854+ 9157              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9157
 856+ 9157
 857+ 9157 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 915A
 859+ 915A              ; Coordenada X de Amadeus en D.
 860+ 915A
 861+ 915A 7D               ld a,l
 862+ 915B E6 1F            and $1F
 863+ 915D 57               ld d,a
 864+ 915E
 865+ 915E 21 8C 85         ld hl,Amadeus_db+8
 866+ 9161 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9162
 868+ 9162 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9165 CD 3A 92         call Guarda_coordenadas_X
 870+ 9168
 871+ 9168 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9169
 873+ 9169              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9169
 875+ 9169 06 02            ld b,2
 876+ 916B C5           20 push bc
 877+ 916C
 878+ 916C 06 03            ld b,3
 879+ 916E 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9171 7E           18 ld a,(hl)
 881+ 9172 BA               cp d
 882+ 9173 20 04            jr nz,17F
 883+ 9175
 884+ 9175              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9175
 886+ 9175 C1               pop bc
 887+ 9176 E1               pop hl
 888+ 9177 18 0D            jr 14F
 889+ 9179
 890+ 9179 23           17 inc hl
 891+ 917A 10 F5            djnz 18B
 892+ 917C
 893+ 917C 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 917D
 895+ 917D C1               pop bc
 896+ 917E 10 EB            djnz 20B
 897+ 9180
 898+ 9180
 899+ 9180              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9180              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9180
 902+ 9180 E1           15 pop hl
 903+ 9181 23               inc hl
 904+ 9182 35               dec (hl)
 905+ 9183 2B               dec hl
 906+ 9184 18 0C            jr 10F
 907+ 9186
 908+ 9186              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9186              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9186
 911+ 9186 E5           14 push hl
 912+ 9187 CD 2F 92         call Elimina_disparo_de_base_de_datos
 913+ 918A 21 33 8A         ld hl,Impacto2
 914+ 918D CB CE            set 1,(hl)
 915+ 918F E1               pop hl
 916+ 9190 18 06            jr 12F
 917+ 9192
 918+ 9192              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9192
 920+ 9192 CD D9 91     10 call Mueve_disparo
 921+ 9195 CD B0 91         call foto_disparo_a_borrar
 922+ 9198 C1           12 pop bc
 923+ 9199
 924+ 9199 18 04            jr 8F
 925+ 919B
 926+ 919B              ; ----- ----- ----- ----- ----- -----
 927+ 919B
 928+ 919B ED 42        4 sbc hl,bc
 929+ 919D 28 0A            jr z,6F
 930+ 919F
 931+ 919F 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91A2 23               inc hl
 933+ 91A3 23               inc hl
 934+ 91A4 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91A7 18 8A            jr 5B
 936+ 91A9
 937+ 91A9 CD 0A 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91AC CD 76 92         call Limpia_Coordenadas_X
 939+ 91AF C9               ret
 940+ 91B0
 941+ 91B0              ; ------------------------------------------------------------------
 942+ 91B0
 943+ 91B0              foto_disparo_a_borrar
 944+ 91B0
 945+ 91B0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91B1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91B2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91B3
 949+ 91B3 E5               push hl
 950+ 91B4 23               inc hl
 951+ 91B5 23               inc hl
 952+ 91B6 ED 73 1D 8A      ld (Stack),sp
 953+ 91BA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91BB FD E1            pop iy
 955+ 91BD DD E1            pop ix
 956+ 91BF E1               pop hl
 957+ 91C0 ED 7B 1D 8A      ld sp,(Stack)
 958+ 91C4 3A 0C 8A         ld a,(Ctrl_1)
 959+ 91C7 CB C7            set 0,a
 960+ 91C9 32 0C 8A         ld (Ctrl_1),a
 961+ 91CC CD A0 7F         call Guarda_foto_registros
 962+ 91CF 3A 0C 8A         ld a,(Ctrl_1)
 963+ 91D2 CB 87            res 0,a
 964+ 91D4 32 0C 8A         ld (Ctrl_1),a
 965+ 91D7 E1               pop hl
 966+ 91D8 C9               ret
 967+ 91D9
 968+ 91D9              ;---------------------------------------------------
 969+ 91D9              ;
 970+ 91D9              ;   18/07/23
 971+ 91D9              ;
 972+ 91D9
 973+ 91D9              Mueve_disparo
 974+ 91D9
 975+ 91D9              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91D9              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91D9              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91D9
 979+ 91D9 E5               push hl
 980+ 91DA
 981+ 91DA 7E               ld a,(hl)
 982+ 91DB
 983+ 91DB 06 04            ld b,4
 984+ 91DD 23           1 inc hl
 985+ 91DE 10 FD            djnz 1B
 986+ 91E0
 987+ 91E0              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91E0
 989+ 91E0 CD 48 8D         call Extrae_address
 990+ 91E3
 991+ 91E3 E6 01            and 1
 992+ 91E5 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91E7
 994+ 91E7              ; Disparo hacia arriba, (Amadeus).
 995+ 91E7
 996+ 91E7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91E7              ; _ de la dificultad.
 998+ 91E7
 999+ 91E7 CD 67 96         call PreviousScan
1000+ 91EA CD 67 96         call PreviousScan
1001+ 91ED CD 67 96         call PreviousScan
1002+ 91F0 CD 67 96         call PreviousScan
1003+ 91F3
1004+ 91F3              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91F3
1006+ 91F3 7C               ld a,h
1007+ 91F4 FE 40            cp $40
1008+ 91F6 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91F8
1010+ 91F8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91F8
1012+ 91F8 EB               ex de,hl
1013+ 91F9 06 04            ld b,4
1014+ 91FB 2B           6 dec hl
1015+ 91FC 10 FD            djnz 6B
1016+ 91FE
1017+ 91FE CD 2F 92         call Elimina_disparo_de_base_de_datos
1018+ 9201 E1               pop hl
1019+ 9202 18 10            jr 7F
1020+ 9204
1021+ 9204              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9204              ; HL contiene el puntero de impresión del disparo.
1023+ 9204              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9204
1025+ 9204 D5           3 push de
1026+ 9205 C5               push bc
1027+ 9206
1028+ 9206 CD CE 8F         call Comprueba_Colision
1029+ 9209
1030+ 9209              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9209
1032+ 9209 78               ld a,b
1033+ 920A
1034+ 920A C1               pop bc
1035+ 920B D1               pop de
1036+ 920C
1037+ 920C EB               ex de,hl
1038+ 920D
1039+ 920D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 920E 23               inc hl                                      ; _ movimiento.
1041+ 920F 72               ld (hl),d
1042+ 9210
1043+ 9210 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9211
1045+ 9211 23               inc hl                                      ; _ en curso.
1046+ 9212 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9213 2B               dec hl
1048+ 9214
1049+ 9214 C9           7 ret
1050+ 9215
1051+ 9215              ; Disparo hacia abajo, (Entidad).
1052+ 9215
1053+ 9215 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9218 47               ld b,a
1055+ 9219
1056+ 9219 CD 58 96     4 call NextScan
1057+ 921C 10 FB            djnz 4B
1058+ 921E
1059+ 921E              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 921E
1061+ 921E 7C               ld a,h
1062+ 921F FE 58            cp $58
1063+ 9221 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9223
1065+ 9223 EB               ex de,hl
1066+ 9224 06 04            ld b,4
1067+ 9226 2B           5 dec hl
1068+ 9227 10 FD            djnz 5B
1069+ 9229
1070+ 9229 CD 2F 92         call Elimina_disparo_de_base_de_datos
1071+ 922C E1               pop hl
1072+ 922D 18 E5            jr 7B
1073+ 922F
1074+ 922F              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 922F
1076+ 922F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9232 AF               xor a
1078+ 9233 77               ld (hl),a
1079+ 9234 54               ld d,h
1080+ 9235 5D               ld e,l
1081+ 9236 13               inc de
1082+ 9237 ED B0            ldir
1083+ 9239 C9               ret
1084+ 923A
1085+ 923A              ; -----------------------------------------------------------------
1086+ 923A              ;
1087+ 923A              ;   19/7/23
1088+ 923A              ;
1089+ 923A              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 923A              ;
1091+ 923A              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 923A              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 923A              ;
1094+ 923A              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 923A              ;
1096+ 923A              ;   INPUTS:
1097+ 923A              ;
1098+ 923A              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 923A              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 923A
1101+ 923A              ;   MODIFICA: A, HL, BC y DE.
1102+ 923A
1103+ 923A              Guarda_coordenadas_X
1104+ 923A
1105+ 923A 7B               ld a,e
1106+ 923B A7               and a
1107+ 923C 20 04            jr nz,1F
1108+ 923E
1109+ 923E 06 02            ld b,2
1110+ 9240 18 02            jr 2F
1111+ 9242
1112+ 9242 06 03        1 ld b,3
1113+ 9244 72           2 ld (hl),d
1114+ 9245 23               inc hl
1115+ 9246 14               inc d
1116+ 9247 10 FB            djnz 2B
1117+ 9249
1118+ 9249 C9               ret
1119+ 924A
1120+ 924A              ; -----------------------------------------------------------------
1121+ 924A              ;
1122+ 924A              ;   12/04/23
1123+ 924A              ;
1124+ 924A
1125+ 924A 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 924D A7               and a
1127+ 924E C8               ret z
1128+ 924F
1129+ 924F FE 04            cp 4
1130+ 9251 20 09            jr nz,1F
1131+ 9253
1132+ 9253
1133+ 9253              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9253
1135+ 9253 CD 6F 90         call Detecta_colision_nave_entidad
1136+ 9256
1137+ 9256 21 33 8A         ld hl,Impacto2
1138+ 9259 CB 5E            bit 3,(hl)
1139+ 925B C0               ret nz                                               ; Existe colisión, RET.
1140+ 925C
1141+ 925C              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 925C              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 925C
1144+ 925C 21 33 8A     1 ld hl,Impacto2
1145+ 925F CB 4E            bit 1,(hl)
1146+ 9261 28 07            jr z,2F
1147+ 9263
1148+ 9263 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9266 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9268 18 0B            jr 3F
1151+ 926A
1152+ 926A 21 33 8A     2 ld hl,Impacto2
1153+ 926D CB 46            bit 0,(hl)
1154+ 926F C8               ret z
1155+ 9270
1156+ 9270              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9270
1158+ 9270 21 0C 8A         ld hl,Ctrl_1
1159+ 9273 CB D6            set 2,(hl)
1160+ 9275
1161+ 9275 C9           3 ret
1162+ 9276
1163+ 9276              ; -----------------------------------------------------------------
1164+ 9276              ;
1165+ 9276              ;   19/7/23
1166+ 9276              ;
1167+ 9276              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9276
1169+ 9276 AF           Limpia_Coordenadas_X xor a
1170+ 9277 06 06            ld b,6
1171+ 9279 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 927C 77           1 ld (hl),a
1173+ 927D 23               inc hl
1174+ 927E 10 FC            djnz 1B
1175+ 9280 C9               ret
1176+ 9281
1177+ 9281              ; -----------------------------------------------------------------
1178+ 9281              ;
1179+ 9281              ;   25/04/23
1180+ 9281              ;
1181+ 9281
1182+ 9281              Determina_resultado_comparativa
1183+ 9281
1184+ 9281              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9281              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9281              ;
1187+ 9281              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9281              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9281              ;
1190+ 9281              ;   SBC HL,DE
1191+ 9281
1192+ 9281              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9281              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9281
1195+ 9281              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9281              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9281
1198+ 9281
1199+ 9281 3A DD 89         ld a,(Cuad_objeto)
1200+ 9284 FE 02            cp 2
1201+ 9286 28 26            jr z,2F
1202+ 9288 38 24            jr c,2F
1203+ 928A
1204+ 928A              ; Cuadrantes 3º y 4º
1205+ 928A
1206+ 928A E6 01            and 1
1207+ 928C 28 10            jr z,4F
1208+ 928E
1209+ 928E              ; Cuadrante 3º
1210+ 928E
1211+ 928E 7C               ld a,h
1212+ 928F 06 00            ld b,0
1213+ 9291
1214+ 9291 CD 1C 93         call Compara_cositas_H3
1215+ 9294
1216+ 9294 04               inc b
1217+ 9295 05               dec b
1218+ 9296 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9297
1220+ 9297 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9298 06 00            ld b,0
1222+ 929A
1223+ 929A CD 2E 93         call Compara_cositas_L3
1224+ 929D C9               ret
1225+ 929E
1226+ 929E              ; Cuadrante 4º
1227+ 929E
1228+ 929E 7C           4 ld a,h
1229+ 929F 06 00            ld b,0
1230+ 92A1
1231+ 92A1 CD 40 93         call Compara_cositas_H4
1232+ 92A4
1233+ 92A4 04               inc b
1234+ 92A5 05               dec b
1235+ 92A6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92A7
1237+ 92A7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92A8 06 00            ld b,0
1239+ 92AA
1240+ 92AA CD 56 93         call Compara_cositas_L4
1241+ 92AD C9               ret
1242+ 92AE
1243+ 92AE              ; Cuadrantes 1º y 2º.
1244+ 92AE
1245+ 92AE 28 10        2 jr z,3F
1246+ 92B0
1247+ 92B0              ; 1er Cuadrante
1248+ 92B0
1249+ 92B0 7C               ld a,h
1250+ 92B1 06 00            ld b,0
1251+ 92B3
1252+ 92B3 CD F4 92         call Compara_cositas_H1
1253+ 92B6
1254+ 92B6 04               inc b
1255+ 92B7 05               dec b
1256+ 92B8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92B9
1258+ 92B9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92BA 06 00            ld b,0
1260+ 92BC
1261+ 92BC CD 0A 93         call Compara_cositas_L1
1262+ 92BF C9               ret
1263+ 92C0
1264+ 92C0
1265+ 92C0              ; 2º Cuadrante
1266+ 92C0
1267+ 92C0 7C           3 ld a,h
1268+ 92C1 06 00            ld b,0
1269+ 92C3
1270+ 92C3 CD D0 92         call Compara_cositas_H2
1271+ 92C6
1272+ 92C6 04               inc b
1273+ 92C7 05               dec b
1274+ 92C8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92C9
1276+ 92C9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92CA 06 00            ld b,0
1278+ 92CC
1279+ 92CC CD E2 92         call Compara_cositas_L2
1280+ 92CF C9               ret
1281+ 92D0
1282+ 92D0 A7           Compara_cositas_H2 and a
1283+ 92D1 28 0D            jr z,1F
1284+ 92D3              ;    cp $fd
1285+ 92D3              ;    jr z,1F
1286+ 92D3              ;    cp $fe
1287+ 92D3              ;    jr z,1F
1288+ 92D3 FE FF            cp $ff
1289+ 92D5 28 09            jr z,1F
1290+ 92D7 FE 01            cp $01
1291+ 92D9 28 05            jr z,1F
1292+ 92DB FE 02            cp $02
1293+ 92DD 28 01            jr z,1F
1294+ 92DF C0               ret nz
1295+ 92E0 04           1 inc b
1296+ 92E1 C9               ret
1297+ 92E2
1298+ 92E2 A7           Compara_cositas_L2 and a
1299+ 92E3 28 0D            jr z,1F
1300+ 92E5              ;    cp $fd
1301+ 92E5              ;    jr z,1F
1302+ 92E5 FE FE            cp $fe
1303+ 92E7 28 09            jr z,1F
1304+ 92E9 FE FF            cp $ff
1305+ 92EB 28 05            jr z,1F
1306+ 92ED FE 01            cp $01
1307+ 92EF 28 01            jr z,1F
1308+ 92F1              ;    cp $02
1309+ 92F1              ;    jr z,1F
1310+ 92F1 C0               ret nz
1311+ 92F2 04           1 inc b
1312+ 92F3 C9               ret
1313+ 92F4
1314+ 92F4 A7           Compara_cositas_H1 and a
1315+ 92F5 28 11            jr z,1F
1316+ 92F7              ;    cp $fd
1317+ 92F7              ;    jr z,1F
1318+ 92F7              ;    cp $fe
1319+ 92F7              ;    jr z,1F
1320+ 92F7 FE FF            cp $ff
1321+ 92F9 28 0D            jr z,1F
1322+ 92FB FE 01            cp $01
1323+ 92FD 28 09            jr z,1F
1324+ 92FF FE 02            cp $02
1325+ 9301 28 05            jr z,1F
1326+ 9303 FE 03            cp $03
1327+ 9305 28 01            jr z,1F
1328+ 9307 C0               ret nz
1329+ 9308 04           1 inc b
1330+ 9309 C9               ret
1331+ 930A
1332+ 930A A7           Compara_cositas_L1 and a
1333+ 930B 28 0D            jr z,1F
1334+ 930D              ;    cp $fd
1335+ 930D              ;    jr z,1F
1336+ 930D              ;    cp $fe
1337+ 930D              ;    jr z,1F
1338+ 930D              ;    cp $ff
1339+ 930D              ;    jr z,1F
1340+ 930D FE 01            cp $01
1341+ 930F 28 09            jr z,1F
1342+ 9311 FE 02            cp $02
1343+ 9313 28 05            jr z,1F
1344+ 9315 FE 03            cp $03
1345+ 9317 28 01            jr z,1F
1346+ 9319 C0               ret nz
1347+ 931A 04           1 inc b
1348+ 931B C9               ret
1349+ 931C
1350+ 931C A7           Compara_cositas_H3 and a
1351+ 931D 28 0D            jr z,1F
1352+ 931F              ;    cp $fd
1353+ 931F              ;    jr z,1F
1354+ 931F FE FE            cp $fe
1355+ 9321 28 09            jr z,1F
1356+ 9323 FE FF            cp $ff
1357+ 9325 28 05            jr z,1F
1358+ 9327 FE 01            cp $01
1359+ 9329 28 01            jr z,1F
1360+ 932B              ;    cp $02
1361+ 932B              ;    jr z,1F
1362+ 932B              ;    cp $03
1363+ 932B              ;    jr z,1F
1364+ 932B C0               ret nz
1365+ 932C 04           1 inc b
1366+ 932D C9               ret
1367+ 932E
1368+ 932E A7           Compara_cositas_L3 and a
1369+ 932F 28 0D            jr z,1F
1370+ 9331              ;    cp $fd
1371+ 9331              ;    jr z,1F
1372+ 9331              ;    cp $fe
1373+ 9331              ;    jr z,1F
1374+ 9331              ;    cp $ff
1375+ 9331              ;    jr z,1F
1376+ 9331 FE 01            cp $01
1377+ 9333 28 09            jr z,1F
1378+ 9335 FE 02            cp $02
1379+ 9337 28 05            jr z,1F
1380+ 9339 FE 03            cp $03
1381+ 933B 28 01            jr z,1F
1382+ 933D C0               ret nz
1383+ 933E 04           1 inc b
1384+ 933F C9               ret
1385+ 9340
1386+ 9340 A7           Compara_cositas_H4 and a
1387+ 9341 28 11            jr z,1F
1388+ 9343 FE FD            cp $fd
1389+ 9345 28 0D            jr z,1F
1390+ 9347 FE FE            cp $fe
1391+ 9349 28 09            jr z,1F
1392+ 934B FE FF            cp $ff
1393+ 934D 28 05            jr z,1F
1394+ 934F FE 01            cp $01
1395+ 9351 28 01            jr z,1F
1396+ 9353              ;    cp $02
1397+ 9353              ;    jr z,1F
1398+ 9353              ;    cp $03
1399+ 9353              ;    jr z,1F
1400+ 9353 C0               ret nz
1401+ 9354 04           1 inc b
1402+ 9355 C9               ret
1403+ 9356
1404+ 9356 A7           Compara_cositas_L4 and a
1405+ 9357 28 0D            jr z,1F
1406+ 9359              ;    cp $fd
1407+ 9359              ;    jr z,1F
1408+ 9359 FE FE            cp $fe
1409+ 935B 28 09            jr z,1F
1410+ 935D FE FF            cp $ff
1411+ 935F 28 05            jr z,1F
1412+ 9361 FE 01            cp $01
1413+ 9363 28 01            jr z,1F
1414+ 9365              ;    cp $02
1415+ 9365              ;    jr z,1F
1416+ 9365              ;    cp $03
1417+ 9365              ;    jr z,1F
1418+ 9365 C0               ret nz
1419+ 9366 04           1 inc b
1420+ 9367 C9               ret
# file closed: Disparo.asm
1293  9368              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9368              ; ******************************************************************************************************************************************************************************************
   2+ 9368              ;
   3+ 9368              ; 26/06/23
   4+ 9368              ;
   5+ 9368              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9368
   7+ 9368 CD 4C 96     Draw call Prepara_draw
   8+ 936B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 936C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 936D 28 05        	jr z,2F
  11+ 936F
  12+ 936F 3A DD 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9372 18 0C        	jr 1F
  14+ 9374
  15+ 9374 2A DB 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9377 22 CB 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 937A CD 09 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 937D              ;													; _la esquina superior izquierda de la pantalla.
  19+ 937D CD 4F 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9380
  21+ 9380 3A F7 89     1 ld a,(Ctrl_0)
  22+ 9383 CB 6F        	bit 5,a
  23+ 9385 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9387
  25+ 9387 CD 9F 93     	call Comprueba_limite_horizontal
  26+ 938A CD 2F 94     	call Comprueba_limite_vertical
  27+ 938D
  28+ 938D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 938D              ; -----------------------
  30+ 938D              ; -----------------------
  31+ 938D              ; -----------------------
  32+ 938D
  33+ 938D CD 7C 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9390 CD B3 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9393 CD 12 96     	call Define_rutina_de_impresion
  36+ 9396
  37+ 9396 3A F7 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9399 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 939B 32 F7 89     	ld (Ctrl_0),a
  40+ 939E
  41+ 939E C9           	ret
  42+ 939F
  43+ 939F              ; *******************************************************************************************************************************************************************************************
  44+ 939F              ;	21/01/23
  45+ 939F              ;
  46+ 939F              ; 	Comprueba_limite_horizontal.
  47+ 939F              ;
  48+ 939F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 939F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 939F              ;
  51+ 939F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 939F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 939F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 939F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 939F
  56+ 939F
  57+ 939F
  58+ 939F 3A F7 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93A4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93A6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93A8 32 F7 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93AB 18 09            jr 6F
  64+ 93AD CB 5F        1 bit 3,a
  65+ 93AF 28 0A            jr z,2F
  66+ 93B1 E6 F7            and $f7
  67+ 93B3 32 F7 89         ld (Ctrl_0),a
  68+ 93B6 CD 09 95     6 call Inicializacion
  69+ 93B9 18 5B            jr 5F
  70+ 93BB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93BC
  72+ 93BC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93BC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93BC
  75+ 93BC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93BD 2A 07 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C0 CD 1D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C3 67           	ld h,a
  79+ 93C4 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93C5 CD 1D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93C8 67           	ld h,a
  82+ 93C9 A7           	and a
  83+ 93CA ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93CC 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93CD 3A DD 89     	ld a,(Cuad_objeto)
  86+ 93D0 FE 02        	cp 2
  87+ 93D2 38 1E        	jr c,3F
  88+ 93D4 28 1C        	jr z,3F
  89+ 93D6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93D7 28 23            jr z,7F
  91+ 93D9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93DB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93DD E1           	pop hl
  94+ 93DE
  95+ 93DE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93DE              ; _para indicar con E="2" en caso necesario.
  97+ 93DE
  98+ 93DE E5               push hl
  99+ 93DF C5               push bc
 100+ 93E0 CD 1D 99     	call calcula_tercio
 101+ 93E3 FE 01        	cp 1
 102+ 93E5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93E7 CD 17 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93EA 28 26            jr z,9F
 105+ 93EC 38 24            jr c,9F
 106+ 93EE 1E 00        11 ld e,0
 107+ 93F0 18 22            jr 8F
 108+ 93F2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F3 28 07        	jr z, 7F
 110+ 93F5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93F7 1E 00         	ld e,0
 112+ 93F9 E1           	pop hl
 113+ 93FA 18 04        	jr 4F
 114+ 93FC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93FE 18 15            jr 10F
 116+ 9400
 117+ 9400              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9400              ; _para indicar con E="2" en caso necesario.
 119+ 9400
 120+ 9400 E5           4 push hl
 121+ 9401 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9402 CD 1D 99     	call calcula_tercio
 123+ 9405 FE 01        	cp 1
 124+ 9407 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9409 CD 17 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 940C 28 04            jr z,9F
 127+ 940E 30 02            jr nc,9F
 128+ 9410 18 02        	jr 8F
 129+ 9412 1E 02        9 ld e,2
 130+ 9414 C1           8 pop bc
 131+ 9415 E1           10 pop hl
 132+ 9416 C9           5 ret
 133+ 9417
 134+ 9417              ; --------------------
 135+ 9417              ;
 136+ 9417              ; 25/08/22
 137+ 9417
 138+ 9417 CD 1D 99     Comprueba_centro call calcula_tercio
 139+ 941A 67               ld h,a
 140+ 941B 08           	ex af,af
 141+ 941C FE 02        	cp 2
 142+ 941E 38 07        	jr c,1F
 143+ 9420 28 05        	jr z,1F
 144+ 9422 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9425 18 03        	jr 2F
 146+ 9427 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 942A 08           2 ex af,af
 148+ 942B A7               and a
 149+ 942C ED 42            sbc hl,bc
 150+ 942E C9               ret
 151+ 942F
 152+ 942F              ; *********************************************************************************************************************************************************************************************
 153+ 942F              ;
 154+ 942F              ;   16/8/22
 155+ 942F              ;
 156+ 942F              ;	Comprueba_limite_vertical
 157+ 942F              ;
 158+ 942F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 942F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 942F              ;
 161+ 942F
 162+ 942F 2A CB 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9432 7D           	ld a,l
 164+ 9433 E6 1F        	and $1F
 165+ 9435 57           	ld d,a
 166+ 9436 3A 09 8A     	ld a,(Limite_vertical)
 167+ 9439 BA           	cp d 											; Límite - Posición.
 168+ 943A 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 943B 3A DD 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 943E CB 47        	bit 0,a
 171+ 9440 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9442
 173+ 9442              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9442
 175+ 9442 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9443 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9445
 178+ 9445              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9445              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9445
 181+ 9445 3A CF 89         ld a,(Coordenada_X)
 182+ 9448 16 0F            ld d,Centro_izquierda
 183+ 944A A7               and a
 184+ 944B 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 944C 28 1E            jr z,3F
 186+ 944E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9450              ;                                                    ; _salimos sin modificar nada.
 188+ 9450 18 0E            jr 2F
 189+ 9452 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9453 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9455
 192+ 9455              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9455              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9455
 195+ 9455 3A CF 89         ld a,(Coordenada_X)
 196+ 9458 16 10            ld d,Centro_derecha
 197+ 945A A7               and a
 198+ 945B 92               sub d
 199+ 945C 28 0E            jr z,3F
 200+ 945E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9460              ;                                                    ; _salimos sin modificar nada.
 202+ 9460 CB 43        2 bit 0,e
 203+ 9462 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9464 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9465 CD F9 94         call Modificaccionne
 206+ 9468 C1           	pop bc
 207+ 9469 CD 09 95         call Inicializacion
 208+ 946C C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 946D
 210+ 946D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 946D
 212+ 946D C5           4 push bc
 213+ 946E 01 CA 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9471 0A           	ld a,(bc)
 215+ 9472 3D           	dec a
 216+ 9473 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9474 7D           	ld a,l
 218+ 9475 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9476 CB 47        	bit 0,a
 220+ 9478 28 03        	jr z,5F
 221+ 947A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 947B 18 2E        	jr 7F
 223+ 947D
 224+ 947D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 947D
 226+ 947D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 947E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 947F 3A F7 89     	ld a,(Ctrl_0)
 229+ 9482 CB 4F        	bit 1,a
 230+ 9484 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9486 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9487
 233+ 9487              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9487
 235+ 9487 1C               inc e
 236+ 9488 1D               dec e
 237+ 9489 20 07            jr nz,12F
 238+ 948B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 948C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 948D 22 CB 89     	ld (Posicion_actual),hl
 241+ 9490 18 44        13 jr 9F
 242+ 9492 CB 43        12 bit 0,e
 243+ 9494 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9496              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9496 C1           	pop bc
 246+ 9497 18 D3        	jr 3B
 247+ 9499 80           14 add b
 248+ 949A 6F               ld l,a
 249+ 949B 22 CB 89     	ld (Posicion_actual),hl
 250+ 949E CD F9 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A1 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94A5 32 F7 89         ld (Ctrl_0),a
 254+ 94A8 F1           	pop af
 255+ 94A9 18 2B        	jr 9F
 256+ 94AB
 257+ 94AB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94AB
 259+ 94AB F5           7 push af
 260+ 94AC 3A F7 89     	ld a,(Ctrl_0)
 261+ 94AF CB 47        	bit 0,a
 262+ 94B1 20 1D        	jr nz,8F
 263+ 94B3 F1           	pop af
 264+ 94B4
 265+ 94B4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94B4
 267+ 94B4 1C           	inc e
 268+ 94B5 1D               dec e
 269+ 94B6 20 07            jr nz,10F
 270+ 94B8 90           	sub b
 271+ 94B9 6F               ld l,a
 272+ 94BA 22 CB 89     	ld (Posicion_actual),hl
 273+ 94BD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94BF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94BF CB 43        10 bit 0,e
 276+ 94C1 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C3              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C3 C1           	pop bc
 279+ 94C4 18 A6        	jr 3B
 280+ 94C6 90           16 sub b
 281+ 94C7 6F               ld l,a
 282+ 94C8 22 CB 89     	ld (Posicion_actual),hl
 283+ 94CB CD F9 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94CE 18 06            jr 9F
 285+ 94D0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D2 32 F7 89         ld (Ctrl_0),a
 287+ 94D5 F1           	pop af
 288+ 94D6 C1           9 pop bc
 289+ 94D7 1E 00        	ld e,0
 290+ 94D9 CD 09 95         call Inicializacion
 291+ 94DC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94DD 08           	ex af,af
 293+ 94DE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94DF 18 8B            jr 3B
 295+ 94E1
 296+ 94E1              ; --------------------
 297+ 94E1
 298+ 94E1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E3 CD 67 96     1 call PreviousScan
 300+ 94E6 10 FB            djnz 1B
 301+ 94E8 22 CB 89     	ld (Posicion_actual),hl
 302+ 94EB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94EC C9           	ret
 304+ 94ED
 305+ 94ED              ; --------------------
 306+ 94ED
 307+ 94ED 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94EF CD 58 96     1 call NextScan
 309+ 94F2 10 FB            djnz 1B
 310+ 94F4 22 CB 89     	ld (Posicion_actual),hl
 311+ 94F7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94F8 C9           	ret
 313+ 94F9
 314+ 94F9              ; --------------------
 315+ 94F9              ;
 316+ 94F9              ;	22/01/23
 317+ 94F9              ;
 318+ 94F9              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94F9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94F9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94F9
 322+ 94F9
 323+ 94F9              Modificaccionne
 324+ 94F9
 325+ 94F9 3A DD 89     	ld a,(Cuad_objeto)
 326+ 94FC FE 02        	cp 2
 327+ 94FE CC E1 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9501 DC E1 94         call c,Modifica_Pos_actual
 329+ 9504 C8           	ret z
 330+ 9505 CD ED 94         call Modifica_Pos_actual2
 331+ 9508 C9               ret
 332+ 9509
 333+ 9509              ; *************************************************************************************************************************************************************************************************
 334+ 9509              ;
 335+ 9509              ;	13/8/22
 336+ 9509              ;
 337+ 9509              ;	Inicializacion
 338+ 9509              ;
 339+ 9509              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9509              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9509              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9509              ;
 343+ 9509              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9509              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9509              ;	_ desaparece/aparece.
 346+ 9509
 347+ 9509              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9509              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9509              ;
 350+ 9509              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9509              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9509              ; 		   [E] ="0"
 353+ 9509
 354+ 9509              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9509
 356+ 9509 CD 1D 99     Inicializacion call calcula_tercio
 357+ 950C 28 36        	jr z,primit
 358+ 950E E6 02        	and 2
 359+ 9510 20 07        	jr nz,segmit
 360+ 9512 7D           	ld a,l
 361+ 9513 FE 7F        	cp $7f
 362+ 9515 38 2D        	jr c,primit
 363+ 9517 28 2B        	jr z,primit
 364+ 9519 CD 76 95     segmit call column
 365+ 951C 38 13        	jr c,tercuad
 366+ 951E 3E 04        cuarcuad ld a,4
 367+ 9520 32 DD 89     	ld (Cuad_objeto),a
 368+ 9523 21 20 48     	ld hl,$4820
 369+ 9526 22 07 8A     	ld (Limite_horizontal),hl
 370+ 9529 21 09 8A     	ld hl,Limite_vertical
 371+ 952C 36 0D        	ld (hl),$0d
 372+ 952E 08           	ex af,af
 373+ 952F 18 3C        	jr 1F
 374+ 9531              tercuad
 375+ 9531 3E 03        	ld a,3
 376+ 9533 32 DD 89     	ld (Cuad_objeto),a
 377+ 9536 21 20 48     	ld hl,$4820
 378+ 9539 22 07 8A     	ld (Limite_horizontal),hl
 379+ 953C 21 09 8A     	ld hl,Limite_vertical
 380+ 953F 36 12        	ld (hl),$12
 381+ 9541 08           	ex af,af
 382+ 9542 18 29        	jr 1F
 383+ 9544 CD 76 95     primit call column
 384+ 9547 38 13        	jr c, primcuad
 385+ 9549              segcuad
 386+ 9549 3E 02        	ld a,2
 387+ 954B 32 DD 89     	ld (Cuad_objeto),a
 388+ 954E 21 C0 4F     	ld hl,$4fc0
 389+ 9551 22 07 8A     	ld (Limite_horizontal),hl
 390+ 9554 21 09 8A     	ld hl,Limite_vertical
 391+ 9557 36 0D        	ld (hl),$0d
 392+ 9559 08           	ex af,af
 393+ 955A 18 11        	jr 1F
 394+ 955C              primcuad
 395+ 955C 3E 01        	ld a,1
 396+ 955E 32 DD 89     	ld (Cuad_objeto),a
 397+ 9561 21 C0 4F     	ld hl,$4fc0
 398+ 9564 22 07 8A     	ld (Limite_horizontal),hl
 399+ 9567 21 09 8A     	ld hl,Limite_vertical
 400+ 956A 36 12        	ld (hl),$12
 401+ 956C 08           	ex af,af
 402+ 956D CD A8 9C     1 call Genera_coordenadas
 403+ 9570 21 F7 89     	ld hl,Ctrl_0
 404+ 9573 CB EE        	set 5,(hl)
 405+ 9575 C9           	ret
 406+ 9576
 407+ 9576              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9576
 409+ 9576              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9576              ;
 411+ 9576              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9576
 413+ 9576 7D           column ld a,l
 414+ 9577 E6 1F        	and $1f
 415+ 9579 FE 10         	cp $10
 416+ 957B C9            	ret
 417+ 957C
 418+ 957C              ; --------------------------------------------------------------------------------------------------------------------
 419+ 957C              ;
 420+ 957C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 957C              ;
 422+ 957C              ; 14/12/22
 423+ 957C              ;
 424+ 957C              ;	Modifica: A y BC.
 425+ 957C
 426+ 957C 3A DD 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 957F E6 01        	and 1
 428+ 9581 28 17        	jr z,1F
 429+ 9583
 430+ 9583              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9583
 432+ 9583 3A CF 89     	ld a,(Coordenada_X)
 433+ 9586 47           	ld b,a
 434+ 9587 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9588 79           	ld a,c
 436+ 9589 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 958A 38 08        	jr c,2F
 438+ 958C 47           	ld b,a
 439+ 958D 79           	ld a,c
 440+ 958E 90           	sub b
 441+ 958F 32 06 8A     	ld (Columnas),a
 442+ 9592 18 1B        	jr 4F
 443+ 9594 79           2 ld a,c
 444+ 9595 32 06 8A     	ld (Columnas),a
 445+ 9598 18 15        	jr 4F
 446+ 959A
 447+ 959A              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 959A
 449+ 959A 3A CF 89     1 ld a,(Coordenada_X)
 450+ 959D 81           	add c
 451+ 959E 3D           	dec a
 452+ 959F D6 1F        	sub $1f
 453+ 95A1 38 08        	jr c,3F
 454+ 95A3 47           	ld b,a
 455+ 95A4 79           	ld a,c
 456+ 95A5 90           	sub b
 457+ 95A6 32 06 8A     	ld (Columnas),a
 458+ 95A9 18 04        	jr 4F
 459+ 95AB 79           3 ld a,c
 460+ 95AC 32 06 8A     	ld (Columnas),a
 461+ 95AF D9           4 exx
 462+ 95B0 4F           	ld c,a
 463+ 95B1 D9           	exx
 464+ 95B2 C9            ret
 465+ 95B3
 466+ 95B3              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B3              ;
 468+ 95B3              ;   19/7/23
 469+ 95B3              ;
 470+ 95B3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B3              ;
 473+ 95B3              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B3              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B3              ;
 476+ 95B3              ;	DESTRUYE: HL,B Y A.
 477+ 95B3
 478+ 95B3 3A DD 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95B6 FE 02        	cp 2
 480+ 95B8 38 18        	jr c,1F
 481+ 95BA 28 16        	jr z,1F
 482+ 95BC E6 01        	and 1
 483+ 95BE 28 0D        	jr z,3F
 484+ 95C0
 485+ 95C0              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C0
 487+ 95C0 CD 06 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C3
 489+ 95C3 7D           9 ld a,l
 490+ 95C4 E6 1F        	and $1f
 491+ 95C6 28 2A        	jr z,7F
 492+ 95C8 2B           	dec hl
 493+ 95C9 10 F8        	djnz 9B
 494+ 95CB 18 25        	jr 7F
 495+ 95CD
 496+ 95CD              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95CD
 498+ 95CD 2A CB 89     3 ld hl,(Posicion_actual)
 499+ 95D0 18 20        	jr 7F
 500+ 95D2
 501+ 95D2 28 14        1 jr z,2F
 502+ 95D4
 503+ 95D4              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95D4
 505+ 95D4 CD 06 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95D7
 507+ 95D7 7D           4 ld a,l
 508+ 95D8 E6 1F        	and $1f
 509+ 95DA 28 03        	jr z,6F
 510+ 95DC 2B           	dec hl
 511+ 95DD 10 F8        	djnz 4B
 512+ 95DF 06 0F        6 ld b,15
 513+ 95E1 CD 67 96     5 call PreviousScan
 514+ 95E4 10 FB        	djnz 5B
 515+ 95E6 18 0A        	jr 7F
 516+ 95E8
 517+ 95E8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95E8
 519+ 95E8 CD 06 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95EB 06 0F        	ld b,15
 521+ 95ED CD 67 96     8 call PreviousScan
 522+ 95F0 10 FB        	djnz 8B
 523+ 95F2
 524+ 95F2 E5           7 push hl
 525+ 95F3 DD E1        	pop ix
 526+ 95F5
 527+ 95F5 2A CD 89     	ld hl,(Puntero_objeto)
 528+ 95F8 E5           	push hl
 529+ 95F9 FD E1        	pop iy
 530+ 95FB
 531+ 95FB              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95FB
 533+ 95FB 3A F7 89     	ld a,(Ctrl_0)
 534+ 95FE CB 77        	bit 6,a
 535+ 9600 C8           	ret z
 536+ 9601
 537+ 9601              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9601              ; _ entidad / Amadeus´.
 539+ 9601
 540+ 9601 DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9605
 542+ 9605 C9           	ret
 543+ 9606
 544+ 9606              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9606              ;
 546+ 9606              ;	2/1/23
 547+ 9606              ;
 548+ 9606              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9606              ;
 550+ 9606              ;	Tras esta rutina tenemos:
 551+ 9606              ;
 552+ 9606              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9606              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9606              ;
 555+ 9606              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9606
 557+ 9606 2A CB 89     Operandos ld hl,(Posicion_actual)
 558+ 9609 3A 06 8A     	ld a,(Columnas)
 559+ 960C 3D           	dec a
 560+ 960D 20 01        	jr nz,1F
 561+ 960F 3C           	inc a
 562+ 9610 47           1 ld b,a
 563+ 9611 C9           	ret
 564+ 9612
 565+ 9612              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9612              ;
 567+ 9612              ;	3/1/23
 568+ 9612              ;
 569+ 9612              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9612              ;
 571+ 9612              ;	Destruye: A,B,HL y DE.
 572+ 9612
 573+ 9612              Define_rutina_de_impresion
 574+ 9612
 575+ 9612 3A CA 89     	ld a,(Columns)
 576+ 9615 47           	ld b,a
 577+ 9616 3A 06 8A     	ld a,(Columnas)
 578+ 9619 B8           	cp b
 579+ 961A 20 0D        	jr nz,2f
 580+ 961C
 581+ 961C              ;	La entidad se imprime entera.
 582+ 961C
 583+ 961C 21 ED 96     	ld hl, Indice_entidades_completas
 584+ 961F E6 01        	and 1
 585+ 9621 28 02        	jr z,1F
 586+ 9623
 587+ 9623 23           	inc hl
 588+ 9624 23           	inc hl
 589+ 9625
 590+ 9625 CD 48 8D     1 call Extrae_address
 591+ 9628 C9           	ret		;	ret
 592+ 9629
 593+ 9629              ;	La entidad no se imprime entera en pantalla.
 594+ 9629
 595+ 9629 3A DD 89     2 ld a,(Cuad_objeto)
 596+ 962C E6 01        	and 1
 597+ 962E 28 17        	jr z,3F
 598+ 9630
 599+ 9630              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9630
 601+ 9630 21 F1 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9633 3A CA 89     4 ld a,(Columns)
 603+ 9636 E6 01        	and 1
 604+ 9638 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 963A
 606+ 963A 23           	inc hl
 607+ 963B 23           	inc hl
 608+ 963C
 609+ 963C 3A 06 8A     	ld a,(Columnas)
 610+ 963F E6 01        	and 1
 611+ 9641 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9643
 613+ 9643 23           	inc hl
 614+ 9644 23           	inc hl
 615+ 9645
 616+ 9645 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9647
 618+ 9647 21 F7 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 964A 18 E7        	jr 4B
 620+ 964C
 621+ 964C              ; --------------------------------------------------------------------------------------------------------------------
 622+ 964C              ;
 623+ 964C              ;	Prepara_draw
 624+ 964C              ;
 625+ 964C              ;	Es una rutina de carga.
 626+ 964C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 964C              ;
 628+ 964C              ;	FUNCIONAMIENTO:
 629+ 964C              ;
 630+ 964C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 964C              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 964C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 964C              ;
 634+ 964C              ;	DESTRUYE:
 635+ 964C              ;
 636+ 964C              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 964C
 638+ 964C 21 C9 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 964F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9650 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9651 4E           	ld c,(hl)
 642+ 9652 2A CB 89     	ld hl,(Posicion_actual)
 643+ 9655 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9657 C9           	ret
 645+ 9658
 646+ 9658              ;----------------------------------------------------------------------------------------------------------------
 647+ 9658              ;
 648+ 9658              ;	5/08/22
 649+ 9658              ;
 650+ 9658              ;   NextScan.
 651+ 9658              ;
 652+ 9658              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9658              ;
 654+ 9658              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9658              ;
 656+ 9658              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9658              ;
 658+ 9658              ;       DESTRUIDOS: AF y HL !!!
 659+ 9658              ;
 660+ 9658              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9658              ;
 662+ 9658
 663+ 9658 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9659 7C               ld a,h
 665+ 965A E6 07            and 7
 666+ 965C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 965D
 668+ 965D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 965E C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9660 6F               ld l,a
 671+ 9661 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9662
 673+ 9662 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9663 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9665 67               ld h,a
 676+ 9666 C9               ret
 677+ 9667
 678+ 9667              ;----------------------------------------------------------------------------------------------------------------
 679+ 9667              ;
 680+ 9667              ;	5/08/22
 681+ 9667              ;
 682+ 9667              ;   PreviousScan.
 683+ 9667              ;
 684+ 9667              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9667              ;
 686+ 9667              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9667              ;
 688+ 9667              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9667              ;
 690+ 9667              ;       DESTRUIDOS: AF y HL !!!
 691+ 9667              ;
 692+ 9667              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9667              ;
 694+ 9667
 695+ 9667 7C           PreviousScan ld a,h
 696+ 9668 25               dec h               ; Dec H.
 697+ 9669 E6 07            and 7
 698+ 966B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 966C
 700+ 966C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 966D D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 966F 6F               ld l,a
 703+ 9670 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9671
 705+ 9671 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9672 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9674 67               ld h,a
 708+ 9675 C9               ret
 709+ 9676
 710+ 9676              ; -----------------------------------------------------------------------------------
 711+ 9676              ;
 712+ 9676              ;	28/7/23
 713+ 9676              ;
 714+ 9676              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9676              ;	Extrae fotos de Album_de_fotos.
 716+ 9676
 717+ 9676              Extrae_foto_entidades
 718+ 9676
 719+ 9676 3A 25 8A     	ld a,(Resorte)
 720+ 9679 A7           	and a
 721+ 967A C8           	ret z
 722+ 967B
 723+ 967B 3A 18 8A     	ld a,(Numero_de_malotes)
 724+ 967E A7           	and a
 725+ 967F C8           	ret z
 726+ 9680 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 727+ 9684 31 00 70     	ld sp,Album_de_fotos
 728+ 9687
 729+ 9687 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 730+ 9689 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 731+ 968A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 732+ 968B
 733+ 968B ED 73 1F 8A  	ld (Stack_2),sp
 734+ 968F ED 7B 1D 8A  	ld sp,(Stack)
 735+ 9693
 736+ 9693              ; Fabrica la llamada a la correspondiente rutina de impresión.
 737+ 9693
 738+ 9693 3E CD        	ld a,$cd
 739+ 9695 32 9D 96     	ld (Imprime),a
 740+ 9698 EB           	ex de,hl
 741+ 9699 22 9E 96     	ld (Imprime+1),hl
 742+ 969C EB           	ex de,hl
 743+ 969D
 744+ 969D              ; Ejecuta la llamada:	CALL $xx,xx
 745+ 969D
 746+ 969D 00 00 00     Imprime db 0,0,0
 747+ 96A0
 748+ 96A0 3A 18 8A     	ld a,(Numero_de_malotes)
 749+ 96A3 3D           	dec a
 750+ 96A4 28 09        	jr z,1F
 751+ 96A6 32 18 8A      	ld (Numero_de_malotes),a
 752+ 96A9
 753+ 96A9 ED 7B 1F 8A   	ld sp,(Stack_2)
 754+ 96AD 18 D8        	jr 2B
 755+ 96AF
 756+ 96AF AF           1 xor a
 757+ 96B0 32 1F 8A     	ld (Stack_2),a
 758+ 96B3 C9           	ret
 759+ 96B4
 760+ 96B4              ; -----------------------------------------------------------------------------------
 761+ 96B4              ;
 762+ 96B4              ;	28/2/23
 763+ 96B4              ;
 764+ 96B4              ;	Pinta los disparos generados.
 765+ 96B4
 766+ 96B4              Extrae_foto_disparos
 767+ 96B4
 768+ 96B4 3A 2E 8A     	ld a,(Numero_de_disparotes)
 769+ 96B7 A7           	and a
 770+ 96B8 C8           	ret z
 771+ 96B9 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 772+ 96BD 31 09 71     	ld sp,Album_de_fotos_disparos
 773+ 96C0
 774+ 96C0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 775+ 96C2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 776+ 96C3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 777+ 96C4
 778+ 96C4 ED 73 1F 8A  	ld (Stack_2),sp
 779+ 96C8 ED 7B 1D 8A  	ld sp,(Stack)
 780+ 96CC
 781+ 96CC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 782+ 96CC
 783+ 96CC 3E CD        	ld a,$cd
 784+ 96CE 32 D6 96     	ld (Imprime2),a
 785+ 96D1 EB           	ex de,hl
 786+ 96D2 22 D7 96     	ld (Imprime2+1),hl
 787+ 96D5 EB           	ex de,hl
 788+ 96D6
 789+ 96D6              ; Ejecuta la llamada:	CALL $xx,xx
 790+ 96D6
 791+ 96D6 00 00 00     Imprime2 db 0,0,0
 792+ 96D9
 793+ 96D9 3A 2E 8A     	ld a,(Numero_de_disparotes)
 794+ 96DC 3D           	dec a
 795+ 96DD 28 09        	jr z,1F
 796+ 96DF 32 2E 8A      	ld (Numero_de_disparotes),a
 797+ 96E2
 798+ 96E2 ED 7B 1F 8A  	ld sp,(Stack_2)
 799+ 96E6 18 D8        	jr 2B
 800+ 96E8
 801+ 96E8 AF           1 xor a
 802+ 96E9 32 1F 8A     	ld (Stack_2),a
 803+ 96EC C9           	ret
 804+ 96ED
# file closed: Draw_XOR.asm
1294  96ED              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96ED              ;   índices de Rutinas de impresión.
   2+ 96ED
   3+ 96ED FD 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96EF 2A 97            defw Pinta_Amadeus_3x2
   5+ 96F1
   6+ 96F1 80 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96F3 20 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96F5 D4 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96F7
  10+ 96F7 AA 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96F9 AE 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96FB 62 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96FD
  14+ 96FD
  15+ 96FD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96FD              ;
  17+ 96FD              ;   12/12/22
  18+ 96FD              ;
  19+ 96FD              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96FD              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96FD              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96FD              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96FD              ;
  24+ 96FD              ;   Modifica: DE y HL.
  25+ 96FD
  26+ 96FD ED 73 1D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9701 FD F9        	ld sp,iy
  28+ 9703 06 10            ld b,16
  29+ 9705 D1           1 pop de
  30+ 9706 7B               ld a,e
  31+ 9707 AE               xor (hl)
  32+ 9708 77           	ld (hl),a
  33+ 9709 23           	inc hl
  34+ 970A 7A               ld a,d
  35+ 970B AE               xor (hl)
  36+ 970C 77           	ld (hl),a
  37+ 970D 2B           	dec hl
  38+ 970E 24           	inc h
  39+ 970F 7C               ld a,h
  40+ 9710 E6 07            and 7
  41+ 9712 20 0A            jr nz,2F
  42+ 9714 7D               ld a,l
  43+ 9715 C6 20            add a,$20
  44+ 9717 6F               ld l,a
  45+ 9718 38 04            jr c,2F
  46+ 971A 7C               ld a,h
  47+ 971B D6 08            sub 8
  48+ 971D 67               ld h,a
  49+ 971E 7C           2 ld a,h
  50+ 971F FE 58            cp $58
  51+ 9721 28 02            jr z,3F
  52+ 9723 10 E0            djnz 1B
  53+ 9725 ED 7B 1D 8A  3 ld sp,(Stack)
  54+ 9729 C9           	ret
  55+ 972A
  56+ 972A ED 73 1D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 972E FD F9        	ld sp,iy
  58+ 9730 06 08            ld b,8
  59+ 9732 D1           1 pop de
  60+ 9733 7B               ld a,e
  61+ 9734 AE               xor (hl)
  62+ 9735 77           	ld (hl),a
  63+ 9736 23           	inc hl
  64+ 9737 7A               ld a,d
  65+ 9738 AE               xor (hl)
  66+ 9739 77           	ld (hl),a
  67+ 973A 23           	inc hl
  68+ 973B D1           	pop de
  69+ 973C 7B               ld a,e
  70+ 973D AE               xor (hl)
  71+ 973E 77           	ld (hl),a
  72+ 973F 2B           	dec hl
  73+ 9740 2B           	dec hl
  74+ 9741 24           	inc h
  75+ 9742 7C               ld a,h
  76+ 9743 E6 07            and 7
  77+ 9745 20 0A            jr nz,2F
  78+ 9747 7D               ld a,l
  79+ 9748 C6 20            add a,$20
  80+ 974A 6F               ld l,a
  81+ 974B 38 04            jr c,2F
  82+ 974D 7C               ld a,h
  83+ 974E D6 08            sub 8
  84+ 9750 67               ld h,a
  85+ 9751 7C           2 ld a,h
  86+ 9752 FE 58            cp $58
  87+ 9754 28 25            jr z,4F
  88+ 9756 7A               ld a,d
  89+ 9757 AE               xor (hl)
  90+ 9758 77               ld (hl),a
  91+ 9759 D1           	pop de
  92+ 975A 23           	inc hl
  93+ 975B 7B               ld a,e
  94+ 975C AE               xor (hl)
  95+ 975D 77           	ld (hl),a
  96+ 975E 23           	inc hl
  97+ 975F 7A               ld a,d
  98+ 9760 AE               xor (hl)
  99+ 9761 77           	ld (hl),a
 100+ 9762 2B           	dec hl
 101+ 9763 2B           	dec hl
 102+ 9764 24           	inc h
 103+ 9765 7C               ld a,h
 104+ 9766 E6 07            and 7
 105+ 9768 20 0A            jr nz,3F
 106+ 976A 7D               ld a,l
 107+ 976B C6 20            add a,$20
 108+ 976D 6F               ld l,a
 109+ 976E 38 04            jr c,3F
 110+ 9770 7C               ld a,h
 111+ 9771 D6 08            sub 8
 112+ 9773 67               ld h,a
 113+ 9774 7C           3 ld a,h
 114+ 9775 FE 58            cp $58
 115+ 9777 28 02            jr z,4F
 116+ 9779 10 B7            djnz 1B
 117+ 977B ED 7B 1D 8A  4 ld sp,(Stack)
 118+ 977F C9           	ret
 119+ 9780
 120+ 9780              ; ---------------------------------------------------
 121+ 9780
 122+ 9780 ED 73 1D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9784 FD F9        	ld sp,iy
 124+ 9786
 125+ 9786              ; >>>
 126+ 9786
 127+ 9786 06 10            ld b,16
 128+ 9788 D1           1 pop de
 129+ 9789 7A           	ld a,d
 130+ 978A AE           	xor (hl)
 131+ 978B 77           	ld (hl),a
 132+ 978C 24           	inc h
 133+ 978D 7C               ld a,h
 134+ 978E E6 07            and 7
 135+ 9790 20 0C            jr nz,2F
 136+ 9792 7D               ld a,l
 137+ 9793 C6 20            add a,$20
 138+ 9795 6F               ld l,a
 139+ 9796 38 06            jr c,2F
 140+ 9798 7C               ld a,h
 141+ 9799 D6 08            sub 8
 142+ 979B 67               ld h,a
 143+ 979C 18 00            jr 2F
 144+ 979E 7C           2 ld a,h
 145+ 979F FE 58            cp $58
 146+ 97A1 28 02            jr z,3F
 147+ 97A3 10 E3            djnz 1B
 148+ 97A5 ED 7B 1D 8A  3 ld sp,(Stack)
 149+ 97A9 C9           	ret
 150+ 97AA
 151+ 97AA ED 73 1D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97AE FD F9        	ld sp,iy
 153+ 97B0
 154+ 97B0              ; >>>
 155+ 97B0
 156+ 97B0 06 10            ld b,16
 157+ 97B2 D1           1 pop de
 158+ 97B3 7B           	ld a,e
 159+ 97B4 AE           	xor (hl)
 160+ 97B5 77           	ld (hl),a
 161+ 97B6 24           	inc h
 162+ 97B7 7C               ld a,h
 163+ 97B8 E6 07            and 7
 164+ 97BA 20 0C            jr nz,2F
 165+ 97BC 7D               ld a,l
 166+ 97BD C6 20            add a,$20
 167+ 97BF 6F               ld l,a
 168+ 97C0 38 06            jr c,2F
 169+ 97C2 7C               ld a,h
 170+ 97C3 D6 08            sub 8
 171+ 97C5 67               ld h,a
 172+ 97C6 18 00            jr 2F
 173+ 97C8 7C           2 ld a,h
 174+ 97C9 FE 58            cp $58
 175+ 97CB 28 02            jr z,3F
 176+ 97CD 10 E3            djnz 1B
 177+ 97CF ED 7B 1D 8A  3 ld sp,(Stack)
 178+ 97D3 C9           	ret
 179+ 97D4
 180+ 97D4              ; ---------------------------------------------------
 181+ 97D4
 182+ 97D4 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97D8 FD F9        	ld sp,iy
 184+ 97DA 06 08            ld b,8
 185+ 97DC D1           1 pop de
 186+ 97DD 7A           	ld a,d
 187+ 97DE AE           	xor (hl)
 188+ 97DF 77           	ld (hl),a
 189+ 97E0 23           	inc hl
 190+ 97E1 D1           	pop de
 191+ 97E2 7B           	ld a,e
 192+ 97E3 AE           	xor (hl)
 193+ 97E4 77           	ld (hl),a
 194+ 97E5 2B           	dec hl
 195+ 97E6 24            	inc h
 196+ 97E7 7C               ld a,h
 197+ 97E8 E6 07            and 7
 198+ 97EA 20 0A            jr nz,2F
 199+ 97EC 7D               ld a,l
 200+ 97ED C6 20            add a,$20
 201+ 97EF 6F               ld l,a
 202+ 97F0 38 04            jr c,2F
 203+ 97F2 7C               ld a,h
 204+ 97F3 D6 08            sub 8
 205+ 97F5 67               ld h,a
 206+ 97F6 7C           2 ld a,h
 207+ 97F7 FE 58            cp $58
 208+ 97F9 28 20            jr z,4F
 209+ 97FB D1               pop de
 210+ 97FC 7B           	ld a,e
 211+ 97FD AE           	xor (hl)
 212+ 97FE 77           	ld (hl),a
 213+ 97FF 23           	inc hl
 214+ 9800 7A           	ld a,d
 215+ 9801 AE           	xor (hl)
 216+ 9802 77           	ld (hl),a
 217+ 9803 2B           	dec hl
 218+ 9804 24           	inc h
 219+ 9805 7C               ld a,h
 220+ 9806 E6 07            and 7
 221+ 9808 20 0A            jr nz,3F
 222+ 980A 7D               ld a,l
 223+ 980B C6 20            add a,$20
 224+ 980D 6F               ld l,a
 225+ 980E 38 04            jr c,3F
 226+ 9810 7C               ld a,h
 227+ 9811 D6 08            sub 8
 228+ 9813 67               ld h,a
 229+ 9814 7C           3 ld a,h
 230+ 9815 FE 58            cp $58
 231+ 9817 28 02            jr z,4F
 232+ 9819 10 C1            djnz 1B
 233+ 981B ED 7B 1D 8A  4 ld sp,(Stack)
 234+ 981F C9           	ret
 235+ 9820
 236+ 9820 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9824 FD F9        	ld sp,iy
 238+ 9826 06 08            ld b,8
 239+ 9828 D1           1 pop de
 240+ 9829 D1           	pop de
 241+ 982A 7B           	ld a,e
 242+ 982B AE           	xor (hl)
 243+ 982C 77           	ld (hl),a
 244+ 982D 24            	inc h
 245+ 982E 7C               ld a,h
 246+ 982F E6 07            and 7
 247+ 9831 20 0A            jr nz,2F
 248+ 9833 7D               ld a,l
 249+ 9834 C6 20            add a,$20
 250+ 9836 6F               ld l,a
 251+ 9837 38 04            jr c,2F
 252+ 9839 7C               ld a,h
 253+ 983A D6 08            sub 8
 254+ 983C 67               ld h,a
 255+ 983D 7C           2 ld a,h
 256+ 983E FE 58            cp $58
 257+ 9840 28 1B            jr z,4F
 258+ 9842 D1               pop de
 259+ 9843 7A           	ld a,d
 260+ 9844 AE           	xor (hl)
 261+ 9845 77           	ld (hl),a
 262+ 9846 24           	inc h
 263+ 9847 7C               ld a,h
 264+ 9848 E6 07            and 7
 265+ 984A 20 0A            jr nz,3F
 266+ 984C 7D               ld a,l
 267+ 984D C6 20            add a,$20
 268+ 984F 6F               ld l,a
 269+ 9850 38 04            jr c,3F
 270+ 9852 7C               ld a,h
 271+ 9853 D6 08            sub 8
 272+ 9855 67               ld h,a
 273+ 9856 7C           3 ld a,h
 274+ 9857 FE 58            cp $58
 275+ 9859 28 02            jr z,4F
 276+ 985B 10 CB            djnz 1B
 277+ 985D ED 7B 1D 8A  4 ld sp,(Stack)
 278+ 9861 C9           	ret
 279+ 9862
 280+ 9862 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9866 FD F9        	ld sp,iy
 282+ 9868 06 08            ld b,8
 283+ 986A D1           1 pop de
 284+ 986B 7B           	ld a,e
 285+ 986C AE           	xor (hl)
 286+ 986D 77           	ld (hl),a
 287+ 986E 23           	inc hl
 288+ 986F 7A           	ld a,d
 289+ 9870 AE           	xor (hl)
 290+ 9871 77           	ld (hl),a
 291+ 9872 2B           	dec hl
 292+ 9873 24             	inc h
 293+ 9874 7C               ld a,h
 294+ 9875 E6 07            and 7
 295+ 9877 20 0A            jr nz,2F
 296+ 9879 7D               ld a,l
 297+ 987A C6 20            add a,$20
 298+ 987C 6F               ld l,a
 299+ 987D 38 04            jr c,2F
 300+ 987F 7C               ld a,h
 301+ 9880 D6 08            sub 8
 302+ 9882 67               ld h,a
 303+ 9883 7C           2 ld a,h
 304+ 9884 FE 58            cp $58
 305+ 9886 28 21            jr z,4F
 306+ 9888 D1               pop de
 307+ 9889 7A           	ld a,d
 308+ 988A AE           	xor (hl)
 309+ 988B 77           	ld (hl),a
 310+ 988C 23           	inc hl
 311+ 988D D1               pop de
 312+ 988E 7B           	ld a,e
 313+ 988F AE           	xor (hl)
 314+ 9890 77           	ld (hl),a
 315+ 9891 2B           	dec hl
 316+ 9892 24           	inc h
 317+ 9893 7C               ld a,h
 318+ 9894 E6 07            and 7
 319+ 9896 20 0A            jr nz,3F
 320+ 9898 7D               ld a,l
 321+ 9899 C6 20            add a,$20
 322+ 989B 6F               ld l,a
 323+ 989C 38 04            jr c,3F
 324+ 989E 7C               ld a,h
 325+ 989F D6 08            sub 8
 326+ 98A1 67               ld h,a
 327+ 98A2 7C           3 ld a,h
 328+ 98A3 FE 58            cp $58
 329+ 98A5 28 02            jr z,4F
 330+ 98A7 10 C1            djnz 1B
 331+ 98A9 ED 7B 1D 8A  4 ld sp,(Stack)
 332+ 98AD C9           	ret
 333+ 98AE
 334+ 98AE ED 73 1D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98B2 FD F9        	ld sp,iy
 336+ 98B4 06 08            ld b,8
 337+ 98B6 D1           1 pop de
 338+ 98B7 7B           	ld a,e
 339+ 98B8 AE           	xor (hl)
 340+ 98B9 77           	ld (hl),a
 341+ 98BA 24            	inc h
 342+ 98BB 7C               ld a,h
 343+ 98BC E6 07            and 7
 344+ 98BE 20 0A            jr nz,2F
 345+ 98C0 7D               ld a,l
 346+ 98C1 C6 20            add a,$20
 347+ 98C3 6F               ld l,a
 348+ 98C4 38 04            jr c,2F
 349+ 98C6 7C               ld a,h
 350+ 98C7 D6 08            sub 8
 351+ 98C9 67               ld h,a
 352+ 98CA 7C           2 ld a,h
 353+ 98CB FE 58            cp $58
 354+ 98CD 28 1C            jr z,4F
 355+ 98CF D1               pop de
 356+ 98D0 7A           	ld a,d
 357+ 98D1 AE           	xor (hl)
 358+ 98D2 77           	ld (hl),a
 359+ 98D3 24           	inc h
 360+ 98D4 7C               ld a,h
 361+ 98D5 E6 07            and 7
 362+ 98D7 20 0A            jr nz,3F
 363+ 98D9 7D               ld a,l
 364+ 98DA C6 20            add a,$20
 365+ 98DC 6F               ld l,a
 366+ 98DD 38 04            jr c,3F
 367+ 98DF 7C               ld a,h
 368+ 98E0 D6 08            sub 8
 369+ 98E2 67               ld h,a
 370+ 98E3 7C           3 ld a,h
 371+ 98E4 FE 58            cp $58
 372+ 98E6 28 03            jr z,4F
 373+ 98E8 D1               pop de
 374+ 98E9 10 CB            djnz 1B
 375+ 98EB ED 7B 1D 8A  4 ld sp,(Stack)
 376+ 98EF C9           	ret
 377+ 98F0
 378+ 98F0              ; ---------------------------------------------------
 379+ 98F0              ;
 380+ 98F0              ;   27/02/23
 381+ 98F0              ;
 382+ 98F0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98F0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98F0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98F0
 386+ 98F0 ED 73 1D 8A  Pinta_Disparo ld (Stack),sp
 387+ 98F4 FD F9            ld sp,iy
 388+ 98F6 06 03            ld b,3
 389+ 98F8 D1           1 pop de
 390+ 98F9 7B               ld a,e
 391+ 98FA AE               xor (hl)
 392+ 98FB 77               ld (hl),a
 393+ 98FC 23               inc hl
 394+ 98FD 7A               ld a,d
 395+ 98FE AE               xor (hl)
 396+ 98FF 77               ld (hl),a
 397+ 9900 2B               dec hl
 398+ 9901
 399+ 9901 24               inc h
 400+ 9902 7C               ld a,h
 401+ 9903 E6 07            and 7
 402+ 9905 20 0A            jr nz,2F
 403+ 9907 7D               ld a,l
 404+ 9908 C6 20            add a,$20
 405+ 990A 6F               ld l,a
 406+ 990B 38 04            jr c,2F
 407+ 990D 7C               ld a,h
 408+ 990E D6 08            sub 8
 409+ 9910 67               ld h,a
 410+ 9911 7C           2 ld a,h
 411+ 9912 FE 58            cp $58
 412+ 9914 28 02            jr z,3F
 413+ 9916
 414+ 9916 10 E0            djnz 1B
 415+ 9918 ED 7B 1D 8A  3 ld sp,(Stack)
 416+ 991C C9               ret
 417+ 991D
# file closed: Rutinas_de_impresion_sprites.asm
1295  991D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 991D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 991D              ;
   3+ 991D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 991D              ;
   5+ 991D              ; *****************************************************************************************************************************************************************************************
   6+ 991D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 991D
   8+ 991D 7C           calcula_tercio ld a,h
   9+ 991E E6 18        	and $18
  10+ 9920 CB 2F        	sra a
  11+ 9922 CB 2F        	sra a
  12+ 9924 CB 2F        	sra a
  13+ 9926 C9           	ret
  14+ 9927
# file closed: calcula_tercio.asm
1296  9927              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9927              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9927              ;
   3+ 9927              ;
   4+ 9927              ;	CLS.
   5+ 9927              ;
   6+ 9927              ;	Limpia la pantalla y define sus atributos.
   7+ 9927              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9927              ;
   9+ 9927              ;	COLORES: 0 ..... NEGRO
  10+ 9927              ;    		 1 ..... AZUL
  11+ 9927              ; 			 2 ..... ROJO
  12+ 9927              ;			 3 ..... MAGENTA
  13+ 9927              ; 			 4 ..... VERDE
  14+ 9927              ; 			 5 ..... CIAN
  15+ 9927              ;			 6 ..... AMARILLO
  16+ 9927              ; 			 7 ..... BLANCO
  17+ 9927              ;
  18+ 9927              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9927              ;
  20+ 9927              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9927
  22+ 9927
  23+ 9927 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 992A 11 01 40     	LD DE,$4001
  25+ 992D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9930 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9932 ED B0        	LDIR
  28+ 9934 01 FF 02     	LD BC,767
  29+ 9937 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9938 ED B0        	LDIR
  31+ 993A C9           	ret
  32+ 993B
# file closed: Cls.asm
1297  993B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 993B              ; ******************************************************************************************************************************************************************************************
   2+ 993B              ;
   3+ 993B              ;   20/05/23
   4+ 993B              ;
   5+ 993B              ;	Recompone_posicion_inicio
   6+ 993B              ;
   7+ 993B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 993B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 993B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 993B              ;	_ a una u otra rutina.
  11+ 993B
  12+ 993B              Recompone_posicion_inicio
  13+ 993B
  14+ 993B 2A DB 89     	ld hl,(Posicion_inicio)
  15+ 993E 7D           	ld a,l
  16+ 993F E6 1F        	and $1f
  17+ 9941 28 16        	jr z,1F
  18+ 9943
  19+ 9943 FE 1F        	cp $1f
  20+ 9945 28 0D        	jr z,3F
  21+ 9947
  22+ 9947 21 0A 8A     	ld hl,Ctrl_2
  23+ 994A CB C6        	set 0,(hl)
  24+ 994C 2A CD 89     	ld hl,(Puntero_objeto)
  25+ 994F 22 0D 8A     	ld (Repone_puntero_objeto),hl
  26+ 9952 18 08        	jr 2F
  27+ 9954
  28+ 9954 CD F5 9A     3 call Mov_left
  29+ 9957 18 03        	jr 2F
  30+ 9959
  31+ 9959 CD D7 99     1 call Mov_right
  32+ 995C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 995F 22 CD 89     	ld (Puntero_objeto),hl
  34+ 9962 C9           	ret
  35+ 9963
  36+ 9963              ; ******************************************************************************************************************************************************************************************
  37+ 9963              ;
  38+ 9963              ;   27/05/23
  39+ 9963              ;
  40+ 9963              ;	Mov_down
  41+ 9963              ;
  42+ 9963              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9963              ;
  44+ 9963              ;
  45+ 9963              Mov_down
  46+ 9963
  47+ 9963 CD C5 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9966              ;																	; _ repone (Puntero_objeto).
  49+ 9966 21 F7 89     	ld hl,Ctrl_0
  50+ 9969 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 996B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 996B              ; 																	; _ en el caso de que no lo haya.
  53+ 996B 3A E1 89     	ld a,(Vel_down)
  54+ 996E 47           	ld b,a
  55+ 996F 2A CB 89         ld hl,(Posicion_actual)
  56+ 9972 CD 1D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9975 E6 02        	and 2
  58+ 9977 28 0F        	jr z,1F
  59+ 9979
  60+ 9979              ; Nos encontramos en el último tercio de pantalla.
  61+ 9979              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9979
  63+ 9979 7C           	ld a,h
  64+ 997A FE 57        	cp $57
  65+ 997C 20 0A        	jr nz,1F
  66+ 997E
  67+ 997E 7D           	ld a,l
  68+ 997F C6 20        	add $20
  69+ 9981 30 05        	jr nc,1F
  70+ 9983
  71+ 9983              ; ------------------------------
  72+ 9983              ;	call Reaparece_arriba
  73+ 9983 CD 82 9C     	call Reinicio
  74+ 9986              ; ------------------------------
  75+ 9986
  76+ 9986 18 08        	jr 3F
  77+ 9988 CD 58 96     1 call NextScan
  78+ 998B 22 CB 89     	ld (Posicion_actual),hl
  79+ 998E 10 E2            djnz 2B
  80+ 9990 CD A8 9C     3 call Genera_coordenadas
  81+ 9993 C9           	ret
  82+ 9994
  83+ 9994              ; ******************************************************************************************************************************************************************************************
  84+ 9994              ;
  85+ 9994              ;   27/05/23
  86+ 9994              ;
  87+ 9994              ;	Mov_up
  88+ 9994              ;
  89+ 9994              ; 	Mueve el Sprite hacia arriba.
  90+ 9994              ;
  91+ 9994              ;
  92+ 9994              Mov_up
  93+ 9994
  94+ 9994 CD C5 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9997              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9997 21 F7 89     	ld hl,Ctrl_0
  97+ 999A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 999C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 999C              ; 																		; _ en el caso de que no lo haya.
 100+ 999C 3A E0 89     	ld a,(Vel_up)
 101+ 999F 47           	ld b,a
 102+ 99A0 2A CB 89     	ld hl,(Posicion_actual)
 103+ 99A3 CD 1D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99A6 A7           	and a
 105+ 99A7 20 10        	jr nz,1F
 106+ 99A9
 107+ 99A9              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99A9              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99A9
 110+ 99A9 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99AA FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99AC 20 0B            jr nz,1F
 113+ 99AE 7D               ld a,l
 114+ 99AF D6 20            sub $20
 115+ 99B1 30 06            jr nc,1F
 116+ 99B3 25               dec h
 117+ 99B4
 118+ 99B4              ; -----------------------------
 119+ 99B4 CD 63 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99B7              ;	call Reinicio
 121+ 99B7              ; -----------------------------
 122+ 99B7
 123+ 99B7 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99B9 CD 67 96     1 call PreviousScan
 125+ 99BC 22 CB 89     	ld (Posicion_actual),hl
 126+ 99BF 10 E2            djnz 3B
 127+ 99C1 CD A8 9C     2 call Genera_coordenadas
 128+ 99C4 C9           	ret
 129+ 99C5
 130+ 99C5              ; -----------------------------
 131+ 99C5              ;
 132+ 99C5              ;	27/5/23
 133+ 99C5              ;
 134+ 99C5              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99C5              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99C5              ;
 137+ 99C5              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99C5              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99C5              ;
 140+ 99C5              ;	Modifica: A y (Puntero_objeto).
 141+ 99C5
 142+ 99C5 3A 0A 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99C8 CB 47        	bit 0,a
 144+ 99CA C8           	ret z
 145+ 99CB CB 87        	res 0,a
 146+ 99CD 32 0A 8A     	ld (Ctrl_2),a
 147+ 99D0 2A 0D 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99D3 22 CD 89     	ld (Puntero_objeto),hl
 149+ 99D6 C9           	ret
 150+ 99D7
 151+ 99D7              ; ******************************************************************************************************************************************************************************************
 152+ 99D7              ;
 153+ 99D7              ;	19/10/22
 154+ 99D7              ;
 155+ 99D7              ;	Mov_right.
 156+ 99D7              ;
 157+ 99D7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99D7              ;
 159+ 99D7
 160+ 99D7 21 F7 89     Mov_right ld hl,Ctrl_0
 161+ 99DA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99DC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99DC              ; 																	; _ en el caso de que no lo haya.
 164+ 99DC 3A F7 89     	ld a,(Ctrl_0)
 165+ 99DF CB 77        	bit 6,a
 166+ 99E1 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99E3
 168+ 99E3 CD 11 9C     	call Stop_Amadeus_right
 169+ 99E6 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99E7 18 4D        	jr 8F
 171+ 99E9
 172+ 99E9 3A CF 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99EC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99EE 20 46        	jr nz,8F
 175+ 99F0
 176+ 99F0 3A D1 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99F3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99F4 28 40        	jr z,8F
 179+ 99F6
 180+ 99F6              ; ---------- ---------- ----------
 181+ 99F6              ;
 182+ 99F6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99F6
 184+ 99F6 3A DF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99F9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99FB 28 11        	jr z,1F
 187+ 99FD 38 06        	jr c,6F
 188+ 99FF FE 04        	cp 4
 189+ 9A01 28 14        	jr z,7F
 190+ 9A03 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A05
 192+ 9A05              ; ---------- ---------- ----------
 193+ 9A05              ;
 194+ 9A05              ; Perfiles de velocidad
 195+ 9A05              ;
 196+ 9A05
 197+ 9A05 3A D1 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A08 FE FE        	cp $fe
 199+ 9A0A 20 2A        	jr nz,8F
 200+ 9A0C 18 10        	jr 3F
 201+ 9A0E 3A D1 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A11 FE FD        	cp $fd
 203+ 9A13 20 21        	jr nz,8F
 204+ 9A15 18 07        	jr 3F
 205+ 9A17 3A D1 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A1A FE FB        	cp $fb
 207+ 9A1C 20 18        	jr nz,8F
 208+ 9A1E
 209+ 9A1E              ; ---------- ---------- ----------
 210+ 9A1E
 211+ 9A1E              3
 212+ 9A1E CD 51 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A21              ;	call Reinicio
 214+ 9A21
 215+ 9A21              ; ---------- ---------- ----------
 216+ 9A21              ;
 217+ 9A21              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A21
 219+ 9A21 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A23 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A24 CD 3D 9A     	call DESPLZ_DER
 222+ 9A27 C1           	pop bc
 223+ 9A28 10 F9        	djnz 5B
 224+ 9A2A 2A CB 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A2D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A2E 22 CB 89     	ld (Posicion_actual),hl
 227+ 9A31 CD A8 9C     	call Genera_coordenadas
 228+ 9A34 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A36
 230+ 9A36              ; ---------- ---------- ----------
 231+ 9A36
 232+ 9A36 2A CB 89     8 ld hl,(Posicion_actual)
 233+ 9A39 CD 3D 9A     	call DESPLZ_DER
 234+ 9A3C C9           2 ret
 235+ 9A3D
 236+ 9A3D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A3D              ;
 238+ 9A3D              ;	22/9/22
 239+ 9A3D              ;
 240+ 9A3D
 241+ 9A3D CD 4C 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A40 CD 98 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A43 CD C1 9A         call Ciclo_completo
 244+ 9A46 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A49 CB FE        	set 7,(hl)
 246+ 9A4B C9           	ret
 247+ 9A4C
 248+ 9A4C              ; ******************************************************************************************************************************************************************************************
 249+ 9A4C              ;	15/02/23
 250+ 9A4C              ;
 251+ 9A4C
 252+ 9A4C 3A DF 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A4F 47           	ld b,a
 254+ 9A50 2A D7 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A53 23           1 inc hl
 256+ 9A54 23           	inc hl
 257+ 9A55 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A57 22 D7 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A5A CD 48 8D     	call Extrae_address
 260+ 9A5D 22 CD 89     	ld (Puntero_objeto),hl
 261+ 9A60
 262+ 9A60              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A60
 264+ 9A60              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A60              ; Cuántos movimientos hemos hecho ??
 266+ 9A60              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A60
 268+ 9A60 2A D3 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A63 EB           	ex de,hl
 270+ 9A64 A7           	and a
 271+ 9A65 ED 52        	sbc hl,de
 272+ 9A67 CB 3D        	srl l
 273+ 9A69 3E 08        6 ld a,8
 274+ 9A6B 95           	sub l
 275+ 9A6C 30 1E        	jr nc,3F
 276+ 9A6E
 277+ 9A6E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A6E              ; B="0".
 279+ 9A6E
 280+ 9A6E 04           4 inc b
 281+ 9A6F 3C           	inc a
 282+ 9A70 20 FC        	jr nz,4B
 283+ 9A72 78           	ld a,b
 284+ 9A73 08           	ex af,af
 285+ 9A74 2A D3 89     	ld hl,(Indice_Sprite_der)
 286+ 9A77 23           5 inc hl
 287+ 9A78 23           	inc hl
 288+ 9A79 10 FC        	djnz 5B
 289+ 9A7B 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A7E CD 48 8D     	call Extrae_address
 291+ 9A81 22 CD 89     	ld (Puntero_objeto),hl
 292+ 9A84
 293+ 9A84              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A84              ; _(Posicion_actual).
 295+ 9A84
 296+ 9A84 21 CB 89     	ld hl,Posicion_actual
 297+ 9A87 34           	inc (hl)
 298+ 9A88 08               ex af,af
 299+ 9A89 6F           	ld l,a
 300+ 9A8A 18 DD        	jr 6B
 301+ 9A8C
 302+ 9A8C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A8C
 304+ 9A8C 47           3 ld b,a
 305+ 9A8D 2A D5 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A90 23           2 inc hl
 307+ 9A91 23           	inc hl
 308+ 9A92 10 FC        	djnz 2B
 309+ 9A94 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A97 C9           8 ret
 311+ 9A98
 312+ 9A98              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A98              ;
 314+ 9A98              ;	24/7/22
 315+ 9A98              ;
 316+ 9A98              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A98              ;
 318+ 9A98              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A98              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A98              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A98
 322+ 9A98 3A D1 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A9B A7           	and a
 324+ 9A9C 20 1F        	jr nz,1F
 325+ 9A9E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AA0 32 D1 89         ld (CTRL_DESPLZ),a
 327+ 9AA3
 328+ 9AA3 21 CA 89     	ld hl,Columns
 329+ 9AA6 34           	inc (hl)
 330+ 9AA7 3A DD 89     	ld a,(Cuad_objeto)
 331+ 9AAA E6 01        	and 1
 332+ 9AAC 28 0F        	jr z,1F
 333+ 9AAE 2A CB 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AB1 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AB2 22 CB 89     	ld (Posicion_actual),hl
 336+ 9AB5 CD A8 9C     	call Genera_coordenadas
 337+ 9AB8 CD 1D 9C     	call Inc_CTRL_DESPLZ
 338+ 9ABB 18 03        	jr 2F
 339+ 9ABD CD 1D 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AC0 C9           2 ret
 341+ 9AC1
 342+ 9AC1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AC1              ;
 344+ 9AC1              ;	24/7/22
 345+ 9AC1              ;
 346+ 9AC1              ;	Ciclo_completo.
 347+ 9AC1              ;
 348+ 9AC1              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AC1              ;
 350+ 9AC1              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AC1              ; 	Decrementamos (Columns).
 352+ 9AC1              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AC1              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AC1
 355+ 9AC1
 356+ 9AC1 3A D1 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AC4 FE FF        	cp $ff
 358+ 9AC6 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AC8 E6 F0        	and $f0
 360+ 9ACA 20 28        	jr nz,3F
 361+ 9ACC
 362+ 9ACC              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ACC
 364+ 9ACC 3A D1 89     	ld a,(CTRL_DESPLZ)
 365+ 9ACF 47           	ld b,a
 366+ 9AD0 3E F8        	ld a,$f8
 367+ 9AD2 80           	add b
 368+ 9AD3 32 D1 89     	ld (CTRL_DESPLZ),a
 369+ 9AD6 18 1C        	jr 3F
 370+ 9AD8 21 CA 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9ADB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9ADC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9ADD 32 D1 89     	ld (CTRL_DESPLZ),a
 374+ 9AE0 3A DD 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AE3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AE5 20 0A        	jr nz,2F
 377+ 9AE7 2A CB 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AEA 23           	inc hl
 379+ 9AEB 22 CB 89     	ld (Posicion_actual),hl
 380+ 9AEE CD A8 9C     	call Genera_coordenadas
 381+ 9AF1
 382+ 9AF1              ; Inicia el puntero de Sprite.
 383+ 9AF1
 384+ 9AF1 CD 5F 8D     2 call Inicia_puntero_objeto_der
 385+ 9AF4 C9           3 ret
 386+ 9AF5
 387+ 9AF5              ; ******************************************************************************************************************************************************************************************
 388+ 9AF5              ;
 389+ 9AF5              ;	15/02/23
 390+ 9AF5              ;
 391+ 9AF5              ;	Mov_left.
 392+ 9AF5              ;
 393+ 9AF5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9AF5              ;
 395+ 9AF5 21 F7 89     Mov_left ld hl,Ctrl_0
 396+ 9AF8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9AFA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9AFA              ; 																	; _ en el caso de que no lo haya.
 399+ 9AFA 3A F7 89     	ld a,(Ctrl_0)
 400+ 9AFD CB 77        	bit 6,a
 401+ 9AFF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B01
 403+ 9B01 CD 17 9C     	call Stop_Amadeus_left
 404+ 9B04 C8           	ret z
 405+ 9B05 20 4A        	jr nz,8F
 406+ 9B07
 407+ 9B07 3A CF 89     11 ld a,(Coordenada_X)
 408+ 9B0A A7           	and a
 409+ 9B0B 20 44        	jr nz,8F
 410+ 9B0D
 411+ 9B0D 3A D1 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B10 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B11 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B13
 415+ 9B13              ; ---------- ---------- ----------
 416+ 9B13
 417+ 9B13 3A DE 89     	ld a,(Vel_left)
 418+ 9B16 FE 02        	cp 2
 419+ 9B18 28 0F        	jr z,1F
 420+ 9B1A 38 04        	jr c,6F
 421+ 9B1C FE 04        	cp 4
 422+ 9B1E 28 12        	jr z,7F
 423+ 9B20
 424+ 9B20              ; ---------- ---------- ----------
 425+ 9B20
 426+ 9B20 3A D1 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B23 FE F8        	cp $f8
 428+ 9B25 20 2A        	jr nz,8F
 429+ 9B27 18 10        	jr 4F
 430+ 9B29 3A D1 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B2C FE F9        	cp $f9
 432+ 9B2E 20 21        	jr nz,8F
 433+ 9B30 18 07        	jr 4F
 434+ 9B32 3A D1 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B35 FE FB        	cp $fb
 436+ 9B37 20 18        	jr nz,8F
 437+ 9B39
 438+ 9B39              ; ---------- ---------- ----------
 439+ 9B39
 440+ 9B39              4
 441+ 9B39 CD 3F 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B3C              ;	call Reinicio
 443+ 9B3C
 444+ 9B3C              ; ---------- ---------- ----------
 445+ 9B3C
 446+ 9B3C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B3E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B3F
 449+ 9B3F              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B3F              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B3F
 452+ 9B3F CD 58 9B     	call DESPLZ_IZQ
 453+ 9B42 C1           	pop bc
 454+ 9B43 10 F9        	djnz 5B
 455+ 9B45 2A CB 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B48 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B49 22 CB 89     	ld (Posicion_actual),hl
 458+ 9B4C CD A8 9C     	call Genera_coordenadas
 459+ 9B4F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B51
 461+ 9B51              ; ---------- ---------- ----------
 462+ 9B51
 463+ 9B51              ; Movemos, no hay recolocación.
 464+ 9B51
 465+ 9B51 2A CB 89     8 ld hl,(Posicion_actual)
 466+ 9B54 CD 58 9B     	call DESPLZ_IZQ
 467+ 9B57 C9           2 ret
 468+ 9B58
 469+ 9B58              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B58              ;
 471+ 9B58              ;	22/9/22
 472+ 9B58
 473+ 9B58              DESPLZ_IZQ
 474+ 9B58
 475+ 9B58 CD 67 9B     	call Desplaza_izquierda
 476+ 9B5B CD B3 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B5E CD DB 9B     	call Ciclo_completo_2
 478+ 9B61 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B64 CB BE        	res 7,(hl)
 480+ 9B66 C9           	ret
 481+ 9B67
 482+ 9B67              Desplaza_izquierda
 483+ 9B67
 484+ 9B67 3A DE 89     	ld a,(Vel_left)
 485+ 9B6A 47           	ld b,a
 486+ 9B6B 2A D9 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B6E 23           1 inc hl
 488+ 9B6F 23           	inc hl
 489+ 9B70 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B72 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B75 CD 48 8D     	call Extrae_address
 492+ 9B78 22 CD 89     	ld (Puntero_objeto),hl
 493+ 9B7B
 494+ 9B7B              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B7B
 496+ 9B7B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B7B              ; Cuántos movimientos hemos hecho ??
 498+ 9B7B              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B7B
 500+ 9B7B 2A D5 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9B7E EB           	ex de,hl
 502+ 9B7F A7           	and a
 503+ 9B80 ED 52        	sbc hl,de
 504+ 9B82 CB 3D        	srl l
 505+ 9B84 3E 08        6 ld a,8
 506+ 9B86 95           	sub l
 507+ 9B87 30 1E        	jr nc,3F
 508+ 9B89
 509+ 9B89              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B89              ; B="0".
 511+ 9B89
 512+ 9B89 04           4 inc b
 513+ 9B8A 3C           	inc a
 514+ 9B8B 20 FC        	jr nz,4B
 515+ 9B8D 78           	ld a,b
 516+ 9B8E 08           	ex af,af
 517+ 9B8F 2A D5 89     	ld hl,(Indice_Sprite_izq)
 518+ 9B92 23           5 inc hl
 519+ 9B93 23           	inc hl
 520+ 9B94 10 FC        	djnz 5B
 521+ 9B96 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9B99 CD 48 8D     	call Extrae_address
 523+ 9B9C 22 CD 89     	ld (Puntero_objeto),hl
 524+ 9B9F
 525+ 9B9F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9B9F              ; _(Posicion_actual).
 527+ 9B9F
 528+ 9B9F 21 CB 89     	ld hl,Posicion_actual
 529+ 9BA2 35           	dec (hl)
 530+ 9BA3 08           	ex af,af
 531+ 9BA4 6F           	ld l,a
 532+ 9BA5 18 DD        	jr 6B
 533+ 9BA7
 534+ 9BA7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BA7
 536+ 9BA7 47           3 ld b,a
 537+ 9BA8 2A D3 89     	ld hl,(Indice_Sprite_der)
 538+ 9BAB 23           2 inc hl
 539+ 9BAC 23           	inc hl
 540+ 9BAD 10 FC        	djnz 2B
 541+ 9BAF 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BB2 C9           8 ret
 543+ 9BB3
 544+ 9BB3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BB3              ;
 546+ 9BB3              ;	modifica_parametros_1er_DESPLZ
 547+ 9BB3              ;
 548+ 9BB3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BB3              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BB3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BB3
 552+ 9BB3 3A D1 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BB6 A7           	and a
 554+ 9BB7 20 1E        	jr nz,1F
 555+ 9BB9 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BBA 32 D1 89         ld (CTRL_DESPLZ),a
 557+ 9BBD 21 CA 89     	ld hl,Columns
 558+ 9BC0 34           	inc (hl)
 559+ 9BC1 3A DD 89     	ld a,(Cuad_objeto)
 560+ 9BC4 E6 01        	and 1
 561+ 9BC6 20 0F        	jr nz,1F
 562+ 9BC8 2A CB 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BCB 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BCC 22 CB 89     	ld (Posicion_actual),hl
 565+ 9BCF CD A8 9C     	call Genera_coordenadas
 566+ 9BD2 CD 2E 9C     	call Dec_CTRL_DESPLZ
 567+ 9BD5 18 03        	jr 2F
 568+ 9BD7 CD 2E 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BDA C9           2 ret
 570+ 9BDB
 571+ 9BDB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BDB
 573+ 9BDB 3A D1 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BDE FE F7        	cp $f7
 575+ 9BE0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BE2 30 2C        	jr nc,3F
 577+ 9BE4
 578+ 9BE4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BE4
 580+ 9BE4 06 00        	ld b,0
 581+ 9BE6 04           4 inc b
 582+ 9BE7 3C           	inc a
 583+ 9BE8 FE F7        	cp $f7
 584+ 9BEA 20 FA        	jr nz,4B
 585+ 9BEC 3E FF        	ld a,$ff
 586+ 9BEE 90           	sub b
 587+ 9BEF 32 D1 89     	ld (CTRL_DESPLZ),a
 588+ 9BF2 18 1C        	jr 3F
 589+ 9BF4
 590+ 9BF4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9BF4
 592+ 9BF4 21 CA 89     1 ld hl,Columns
 593+ 9BF7 35           	dec (hl)
 594+ 9BF8 AF           	xor a
 595+ 9BF9 32 D1 89     	ld (CTRL_DESPLZ),a
 596+ 9BFC 3A DD 89     	ld a,(Cuad_objeto)
 597+ 9BFF E6 01        	and 1
 598+ 9C01 28 0A        	jr z,2F
 599+ 9C03 2A CB 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C06 2B           	dec hl
 601+ 9C07 22 CB 89     	ld (Posicion_actual),hl
 602+ 9C0A CD A8 9C     	call Genera_coordenadas
 603+ 9C0D
 604+ 9C0D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C0D
 606+ 9C0D CD 72 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C10 C9           3 ret
 608+ 9C11
 609+ 9C11              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C11              ;
 611+ 9C11              ;	19/10/22
 612+ 9C11              ;
 613+ 9C11              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C11              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C11
 616+ 9C11 3A CF 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C14 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C16 C9           	ret
 619+ 9C17
 620+ 9C17              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C17              ;
 622+ 9C17              ;	19/10/22
 623+ 9C17              ;
 624+ 9C17              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C17              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C17
 627+ 9C17 3A CF 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C1A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C1C C9           	ret
 630+ 9C1D
 631+ 9C1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C1D              ;
 633+ 9C1D              ;	24/7/22
 634+ 9C1D              ;
 635+ 9C1D              ;	Inc_CTRL_DESPLZ
 636+ 9C1D              ;
 637+ 9C1D              ;
 638+ 9C1D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C1D
 640+ 9C1D 21 D1 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C20 3A DF 89     	ld a,(Vel_right)
 642+ 9C23 A7           	and a
 643+ 9C24 28 06        	jr z,1F
 644+ 9C26 47           	ld b,a
 645+ 9C27 34           3 inc (hl)
 646+ 9C28 10 FD        	djnz 3B
 647+ 9C2A 18 01        	jr 2F
 648+ 9C2C 34           1 inc (hl)
 649+ 9C2D C9           2 ret
 650+ 9C2E
 651+ 9C2E              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C2E              ;
 653+ 9C2E              ;	5/2/23
 654+ 9C2E              ;
 655+ 9C2E              ;	Dec_CTRL_DESPLZ
 656+ 9C2E              ;
 657+ 9C2E              ;
 658+ 9C2E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C2E
 660+ 9C2E 21 D1 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C31 3A DE 89     	ld a,(Vel_left)
 662+ 9C34 A7           	and a
 663+ 9C35 28 06        	jr z,1F
 664+ 9C37 47           	ld b,a
 665+ 9C38 35           3 dec (hl)
 666+ 9C39 10 FD        	djnz 3B
 667+ 9C3B 18 01        	jr 2F
 668+ 9C3D 35           1 dec (hl)
 669+ 9C3E C9           2 ret
 670+ 9C3F
 671+ 9C3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C3F
 673+ 9C3F 2A CB 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C42 01 1F 00     	ld bc,31
 675+ 9C45 A7           	and a
 676+ 9C46 ED 4A        	adc hl,bc
 677+ 9C48 22 CB 89     	ld (Posicion_actual),hl
 678+ 9C4B 21 F7 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C4E CB C6        	set 0,(hl)
 680+ 9C50 C9           	ret
 681+ 9C51
 682+ 9C51              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C51
 684+ 9C51 2A CB 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C54 01 1F 00     	ld bc,31
 686+ 9C57 A7           	and a
 687+ 9C58 ED 42        	sbc hl,bc
 688+ 9C5A 22 CB 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C5D 21 F7 89     	ld hl,Ctrl_0
 690+ 9C60 CB CE        	set 1,(hl)
 691+ 9C62 C9           	ret
 692+ 9C63
 693+ 9C63              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C63
 695+ 9C63 24           Reaparece_abajo inc h
 696+ 9C64 01 E0 17     	ld bc,$17e0
 697+ 9C67 A7           	and a
 698+ 9C68 ED 4A        	adc hl,bc
 699+ 9C6A 22 CB 89     	ld (Posicion_actual),hl
 700+ 9C6D 21 F7 89     	ld hl,Ctrl_0
 701+ 9C70 CB D6        	set 2,(hl)
 702+ 9C72 C9           	ret
 703+ 9C73
 704+ 9C73              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C73
 706+ 9C73 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C76 A7           	and a
 708+ 9C77 ED 42        	sbc hl,bc
 709+ 9C79 22 CB 89     	ld (Posicion_actual),hl
 710+ 9C7C 21 F7 89     	ld hl,Ctrl_0
 711+ 9C7F CB DE        	set 3,(hl)
 712+ 9C81 C9           	ret
 713+ 9C82
 714+ 9C82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C82              ;
 716+ 9C82              ;	15/07/23
 717+ 9C82
 718+ 9C82              Reinicio
 719+ 9C82
 720+ 9C82              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C82
 722+ 9C82 AF           	xor a
 723+ 9C83 21 FE 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9C86 CD A4 9C     	call Limpia_contenido_hl
 725+ 9C89
 726+ 9C89 21 CB 89     	ld hl,Posicion_actual
 727+ 9C8C CD A4 9C     	call Limpia_contenido_hl
 728+ 9C8F
 729+ 9C8F CD C5 9F     	call Inicializa_Puntero_indice_mov
 730+ 9C92 CD 4F 9F     	call Inicia_Puntero_mov
 731+ 9C95
 732+ 9C95 21 00 8A     	ld hl,Incrementa_puntero
 733+ 9C98 06 05        	ld b,5
 734+ 9C9A 77           1 ld (hl),a
 735+ 9C9B 23           	inc hl
 736+ 9C9C 10 FC        	djnz 1B
 737+ 9C9E
 738+ 9C9E 21 0A 8A     	ld hl,Ctrl_2
 739+ 9CA1 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CA3
 741+ 9CA3 C9           	ret
 742+ 9CA4
 743+ 9CA4 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CA5 23           	inc hl
 745+ 9CA6 77           	ld (hl),a
 746+ 9CA7 C9           	ret
 747+ 9CA8
 748+ 9CA8
# file closed: Direcciones.asm
1298  9CA8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CA8              ; ------------------------------------------------------------------------
   2+ 9CA8              ;
   3+ 9CA8              ;	02/04/23
   4+ 9CA8              ;
   5+ 9CA8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CA8              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CA8              ;
   8+ 9CA8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CA8              ;
  10+ 9CA8              ;	Modifica: A,BC y DE.
  11+ 9CA8
  12+ 9CA8 C5           Genera_coordenadas push bc
  13+ 9CA9 E5           	push hl
  14+ 9CAA D5           	push de
  15+ 9CAB
  16+ 9CAB 2A CB 89     	ld hl,(Posicion_actual)
  17+ 9CAE
  18+ 9CAE 7D           	ld a,l
  19+ 9CAF E6 1F        	and $1f
  20+ 9CB1 32 CF 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CB4
  22+ 9CB4 CD 1D 99     	call calcula_tercio
  23+ 9CB7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CB8
  25+ 9CB8 1E 00        	ld e,0
  26+ 9CBA 7D           	ld a,l
  27+ 9CBB E6 E0        	and $e0
  28+ 9CBD 28 01        	jr z,1F
  29+ 9CBF 04           	inc b
  30+ 9CC0
  31+ 9CC0 04           1 inc b
  32+ 9CC1 05           	dec b
  33+ 9CC2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CC4              ;														; _ , salimos.
  35+ 9CC4 1C           3 inc e
  36+ 9CC5 D6 20        	sub 32
  37+ 9CC7 20 FB        	jr nz,3B
  38+ 9CC9 10 F5        	djnz 1B
  39+ 9CCB
  40+ 9CCB 7B           2 ld a,e
  41+ 9CCC 32 D0 89     	ld (Coordenada_y),a
  42+ 9CCF
  43+ 9CCF D1           	pop de
  44+ 9CD0 E1           	pop hl
  45+ 9CD1 C1           	pop bc
  46+ 9CD2
  47+ 9CD2 C9           	ret
  48+ 9CD3
  49+ 9CD3              ; ------------------------------------------------------------------------
  50+ 9CD3              ;	28/05/23
  51+ 9CD3              ;
  52+ 9CD3              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CD3              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CD3              ;
  55+ 9CD3              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CD3              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CD3              ;
  58+ 9CD3              ;		DE="$120d"
  59+ 9CD3              ;
  60+ 9CD3              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CD3              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CD3              ;
  63+ 9CD3              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CD3
  65+ 9CD3              ;	Modifica: A,BC y DE.
  66+ 9CD3
  67+ 9CD3
  68+ 9CD3              Genera_coordenadas_disparo
  69+ 9CD3
  70+ 9CD3              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CD3
  72+ 9CD3 7D           	ld a,l
  73+ 9CD4 E6 1F        	and $1f
  74+ 9CD6 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CD7 CD 1D 99     	call calcula_tercio
  76+ 9CDA 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CDB 1E 00        	ld e,0
  78+ 9CDD 7D           	ld a,l
  79+ 9CDE E6 E0        	and $e0
  80+ 9CE0 28 01        	jr z,1F
  81+ 9CE2 04           	inc b
  82+ 9CE3 1C           1 inc e
  83+ 9CE4 D6 20        	sub 32
  84+ 9CE6 20 FB        	jr nz,1B
  85+ 9CE8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CEA C9           	ret
  87+ 9CEB
# file closed: Genera_coordenadas.asm
1299  9CEB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CEB
   2+ 9CEB
   3+ 9CEB              ;   07/07/23
   4+ 9CEB              ;
   5+ 9CEB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CEB              ;
   7+ 9CEB              ;   Codificación:
   8+ 9CEB              ;
   9+ 9CEB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CEB              ;
  11+ 9CEB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CEB              ;
  13+ 9CEB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CEB              ;
  15+ 9CEB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CEB              ;
  17+ 9CEB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CEB              ;                               ..... %01000010 Vel_up 4
  19+ 9CEB              ;                                               Vel_down 2
  20+ 9CEB              ;                               ..... $42
  21+ 9CEB              ;
  22+ 9CEB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CEB              ;
  24+ 9CEB              ;                               ..... %01000010 Vel_left 4
  25+ 9CEB              ;                                               Vel_right 2
  26+ 9CEB              ;                               ..... $42
  27+ 9CEB              ;
  28+ 9CEB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CEB              ;
  30+ 9CEB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CEB              ;
  32+ 9CEB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CEB              ;
  34+ 9CEB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CEB              ;                                     $53
  36+ 9CEB              ;
  37+ 9CEB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CEB              ;
  39+ 9CEB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CEB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CEB              ;
  42+ 9CEB              ;                       Arriba ..... $81
  43+ 9CEB              ;                       Arriba - izquierda ..... $a1
  44+ 9CEB              ;                       Arriba - derecha ..... $91
  45+ 9CEB              ;
  46+ 9CEB              ;                       Abajo ..... $41
  47+ 9CEB              ;                       Abajo - izquierda ..... $61
  48+ 9CEB              ;                       Abajo - derecha ..... $51
  49+ 9CEB              ;
  50+ 9CEB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CEB              ;
  52+ 9CEB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CEB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CEB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CEB              ;
  56+ 9CEB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CEB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CEB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CEB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CEB              ;
  61+ 9CEB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CEB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CEB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CEB              ;
  65+ 9CEB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CEB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CEB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CEB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CEB
  70+ 9CEB              ; ----- ----- ----- ----- -----
  71+ 9CEB
  72+ 9CEB 17 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CED 1F 9D            defw F_1
  74+ 9CEF 29 9D            defw F_2
  75+ 9CF1 33 9D            defw Codo_abajo_derecha
  76+ 9CF3 67 9D            defw Derecha_y_subiendo
  77+ 9CF5 71 9D            defw Derecha_y_subiendo_1
  78+ 9CF7 7B 9D            defw F_3
  79+ 9CF9 85 9D            defw F_4
  80+ 9CFB 8F 9D            defw Derecha_y_bajando
  81+ 9CFD 99 9D            defw Derecha_y_bajando_1
  82+ 9CFF A3 9D            defw Derecha_y_bajando_2
  83+ 9D01 AD 9D            defw Codo_derecha_abajo
  84+ 9D03 DD 9D            defw Codo_abajo_izq.
  85+ 9D05 11 9E            defw Izquierda_y_subiendo
  86+ 9D07 1B 9E            defw Izquierda_y_subiendo_1
  87+ 9D09 25 9E            defw F_5
  88+ 9D0B 2F 9E            defw F_6
  89+ 9D0D 39 9E            defw Izquierda_y_bajando
  90+ 9D0F 43 9E            defw Izquierda_y_bajando_1
  91+ 9D11 4D 9E            defw Izquierda_y_bajando_2
  92+ 9D13 57 9E            defw Codo_izquierda_abajo
  93+ 9D15 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D17
  95+ 9D17 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D1B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D1F
  98+ 9D1F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D23 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D27 08 00
 100+ 9D29 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D2D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D31 0F FE
 102+ 9D33
 103+ 9D33 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D37 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D3B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D3F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D43 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D47 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D4F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D53 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D57 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D5B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D5F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D63 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D67
 117+ 9D67 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D6B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D6F 06 00
 119+ 9D71
 120+ 9D71 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D75 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D79 02 00
 122+ 9D7B
 123+ 9D7B 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D7F 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D83 04 00
 125+ 9D85 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D89 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D8D 08 00
 127+ 9D8F
 128+ 9D8F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D93 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D97 02 00
 130+ 9D99
 131+ 9D99 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D9D 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DA1 06 00
 133+ 9DA3
 134+ 9DA3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DA7 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DAB 06 00
 136+ 9DAD
 137+ 9DAD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DAD
 139+ 9DAD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DB1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DB5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DB9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DBD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DC1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DC5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DC9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DCD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DD1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DD5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DD9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DDD
 152+ 9DDD 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DE5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DE9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DED 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DF1 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9DF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DF9 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DFD 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E01 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E05 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E09 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E0D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E11
 166+ 9E11 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E15 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E19 06 00
 168+ 9E1B
 169+ 9E1B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E1F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E23 02 00
 171+ 9E25
 172+ 9E25 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E29 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E2D 04 00
 174+ 9E2F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E33 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E37 08 00
 176+ 9E39
 177+ 9E39 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E3D 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E41 02 00
 179+ 9E43
 180+ 9E43 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E47 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E4B 06 00
 182+ 9E4D
 183+ 9E4D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E51 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E55 06 00
 185+ 9E57
 186+ 9E57 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E5B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E5F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E63 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E67 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E6B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E6F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E73 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E7B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E7F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E83 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E87
 199+ 9E87              ; ----- ----- ----- ----- -----
 200+ 9E87              ;
 201+ 9E87              ;   27/06/23
 202+ 9E87
 203+ 9E87              Movimiento
 204+ 9E87
 205+ 9E87              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E87
 207+ 9E87              ;    ld hl,(Posicion_actual)
 208+ 9E87
 209+ 9E87 3A 0A 8A         ld a,(Ctrl_2)
 210+ 9E8A CB 57            bit 2,a
 211+ 9E8C 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E8E
 213+ 9E8E 2A FC 89         ld hl,(Puntero_mov)
 214+ 9E91 7E               ld a,(hl)
 215+ 9E92
 216+ 9E92              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E92
 218+ 9E92              Inicia_desplazamiento.
 219+ 9E92
 220+ 9E92              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E92
 222+ 9E92 CD 86 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E95
 224+ 9E95              ; Iniciamos (Repetimos_mov).
 225+ 9E95
 226+ 9E95 7E               ld a,(hl)
 227+ 9E96 E6 0F            and $0f
 228+ 9E98 32 02 8A         ld (Repetimos_desplazamiento),a
 229+ 9E9B 32 03 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9E9E
 231+ 9E9E              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E9E
 233+ 9E9E 23               inc hl
 234+ 9E9F 7E               ld a,(hl)
 235+ 9EA0 32 05 8A         ld (Cola_de_desplazamiento),a
 236+ 9EA3 2B               dec hl
 237+ 9EA4
 238+ 9EA4 21 0A 8A         ld hl,Ctrl_2
 239+ 9EA7 CB D6            set 2,(hl)
 240+ 9EA9
 241+ 9EA9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EA9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EA9
 244+ 9EA9              Desplazamiento_iniciado
 245+ 9EA9
 246+ 9EA9 CD 5A 9F         call Aplica_desplazamiento
 247+ 9EAC
 248+ 9EAC 3A 0A 8A         ld a,(Ctrl_2)
 249+ 9EAF CB 67            bit 4,a
 250+ 9EB1 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EB2
 252+ 9EB2 21 02 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9EB5 35               dec (hl)
 254+ 9EB6 C0               ret nz
 255+ 9EB7
 256+ 9EB7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EB7              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EB7              ; Analiza (Cola_de_desplazamiento).
 259+ 9EB7
 260+ 9EB7 3A 05 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EBA A7               and a
 262+ 9EBB CC AF 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EBE 28 30            jr z,Reinicia_el_movimiento
 264+ 9EC0
 265+ 9EC0 FE FF            cp $ff
 266+ 9EC2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EC4
 268+ 9EC4 FE FE            cp $fe
 269+ 9EC6 CC 33 9F         call z,Fijamos_bucle
 270+ 9EC9 28 25            jr z,Reinicia_el_movimiento
 271+ 9ECB
 272+ 9ECB FE FD            cp $fd
 273+ 9ECD 20 11            jr nz,1F
 274+ 9ECF
 275+ 9ECF              ; ---
 276+ 9ECF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9ECF
 278+ 9ECF 3A 0A 8A         ld a,(Ctrl_2)
 279+ 9ED2 CB 5F            bit 3,a
 280+ 9ED4 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9ED6
 282+ 9ED6              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9ED6
 284+ 9ED6 21 0A 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9ED9 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EDB
 287+ 9EDB CD 44 9F         call Inicia_Repetimos_movimiento
 288+ 9EDE 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EE0              ; ---
 290+ 9EE0
 291+ 9EE0 FE 01        1 cp 1
 292+ 9EE2 CA 1D 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EE5
 294+ 9EE5 3D               dec a
 295+ 9EE6 32 05 8A         ld (Cola_de_desplazamiento),a
 296+ 9EE9
 297+ 9EE9 3A 03 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EEC 32 02 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EEF              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EEF C9               ret
 301+ 9EF0
 302+ 9EF0              Reinicia_el_movimiento
 303+ 9EF0
 304+ 9EF0 3A 0A 8A         ld a,(Ctrl_2)
 305+ 9EF3 CB 5F            bit 3,a
 306+ 9EF5 28 1B            jr z,2F
 307+ 9EF7
 308+ 9EF7              ; (Cola_de_desplazamiento)="254".
 309+ 9EF7
 310+ 9EF7 21 04 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EFA 35               dec (hl)
 312+ 9EFB 20 15            jr nz,2F
 313+ 9EFD
 314+ 9EFD              ; Fin de las repeticiones del último movimiento.
 315+ 9EFD
 316+ 9EFD 21 0A 8A         ld hl,Ctrl_2
 317+ 9F00 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F02
 319+ 9F02 2A FC 89         ld hl,(Puntero_mov)
 320+ 9F05 23               inc hl
 321+ 9F06 23               inc hl
 322+ 9F07 23               inc hl
 323+ 9F08 22 FC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F0B              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F0B 7E               ld a,(hl)
 326+ 9F0C 32 05 8A         ld (Cola_de_desplazamiento),a
 327+ 9F0F
 328+ 9F0F C3 B7 9E         jp Cola
 329+ 9F12
 330+ 9F12
 331+ 9F12 CD 4F 9F     2 call Inicia_Puntero_mov
 332+ 9F15
 333+ 9F15 21 0A 8A         ld hl,Ctrl_2
 334+ 9F18 CB 96            res 2,(hl)
 335+ 9F1A
 336+ 9F1A C3 87 9E         jp Movimiento
 337+ 9F1D
 338+ 9F1D              Siguiente_desplazamiento
 339+ 9F1D
 340+ 9F1D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F1D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F1D
 343+ 9F1D 21 0A 8A         ld hl,Ctrl_2
 344+ 9F20 CB 96            res 2,(hl)
 345+ 9F22
 346+ 9F22 2A FC 89         ld hl,(Puntero_mov)
 347+ 9F25 23               inc hl
 348+ 9F26 23               inc hl
 349+ 9F27 22 FC 89         ld (Puntero_mov),hl
 350+ 9F2A
 351+ 9F2A 7E               ld a,(hl)
 352+ 9F2B A7               and a
 353+ 9F2C CC AF 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F2F CA F0 9E         jp z,Reinicia_el_movimiento
 355+ 9F32
 356+ 9F32 C9               ret
 357+ 9F33              ; Subrutinas -----------------------------------------
 358+ 9F33              ; ---------- --------- --------- ---------- ----------
 359+ 9F33              ;
 360+ 9F33              ;   24/07/23
 361+ 9F33              ;
 362+ 9F33              ;   Fijamos_bucle
 363+ 9F33              ;
 364+ 9F33              ;
 365+ 9F33
 366+ 9F33              Fijamos_bucle
 367+ 9F33
 368+ 9F33 3A 00 8A         ld a,(Incrementa_puntero)
 369+ 9F36 3C               inc a
 370+ 9F37 32 01 8A         ld (Incrementa_puntero_backup),a
 371+ 9F3A
 372+ 9F3A CD AF 9F         call Incrementa_Puntero_indice_mov
 373+ 9F3D 2A FA 89         ld hl,(Puntero_indice_mov)
 374+ 9F40 22 FE 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F43 C9               ret
 376+ 9F44
 377+ 9F44              ; ---------- --------- --------- ---------- ----------
 378+ 9F44              ;
 379+ 9F44              ;   07/7/23
 380+ 9F44              ;
 381+ 9F44              ;   Inicia_Repetimos_movimiento
 382+ 9F44              ;
 383+ 9F44              ;
 384+ 9F44
 385+ 9F44              Inicia_Repetimos_movimiento
 386+ 9F44
 387+ 9F44              ; Iniciamos (Repetimos_movimiento).
 388+ 9F44
 389+ 9F44 DD 2A FC 89      ld ix,(Puntero_mov)
 390+ 9F48 DD 7E 02         ld a,(ix+2)
 391+ 9F4B 32 04 8A         ld (Repetimos_movimiento),a
 392+ 9F4E
 393+ 9F4E C9               ret
 394+ 9F4F
 395+ 9F4F              ; ---------- --------- --------- ---------- ----------
 396+ 9F4F              ;
 397+ 9F4F              ;   26/6/23
 398+ 9F4F              ;
 399+ 9F4F              ;   Inicia_Puntero_mov
 400+ 9F4F              ;
 401+ 9F4F              ;
 402+ 9F4F
 403+ 9F4F 2A FA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F52 5E               ld e,(hl)
 405+ 9F53 23               inc hl
 406+ 9F54 56               ld d,(hl)
 407+ 9F55 EB               ex de,hl
 408+ 9F56 22 FC 89         ld (Puntero_mov),hl
 409+ 9F59 C9               ret
 410+ 9F5A
 411+ 9F5A              ; ---------- --------- --------- ---------- ----------
 412+ 9F5A              ;
 413+ 9F5A              ;   27/06/23
 414+ 9F5A              ;
 415+ 9F5A              ;   Aplica_movimiento.
 416+ 9F5A
 417+ 9F5A              Aplica_desplazamiento
 418+ 9F5A
 419+ 9F5A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F5A
 421+ 9F5A 2A FC 89         ld hl, (Puntero_mov)
 422+ 9F5D
 423+ 9F5D 7E               ld a,(hl)
 424+ 9F5E E6 F0            and $f0
 425+ 9F60 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F61
 427+ 9F61 CB 7E            bit 7,(hl)
 428+ 9F63 28 03            jr z,1F
 429+ 9F65 CD 94 99         call Mov_up
 430+ 9F68 2A FC 89     1 ld hl, (Puntero_mov)
 431+ 9F6B CB 76            bit 6,(hl)
 432+ 9F6D 28 03            jr z,2F
 433+ 9F6F CD 63 99         call Mov_down
 434+ 9F72 2A FC 89     2 ld hl, (Puntero_mov)
 435+ 9F75 CB 6E            bit 5,(hl)
 436+ 9F77 28 03            jr z,3F
 437+ 9F79 CD F5 9A         call Mov_left
 438+ 9F7C 2A FC 89     3 ld hl, (Puntero_mov)
 439+ 9F7F CB 66            bit 4,(hl)
 440+ 9F81 C8               ret z
 441+ 9F82 CD D7 99         call Mov_right
 442+ 9F85 C9               ret
 443+ 9F86
 444+ 9F86              ; ---------- --------- --------- ---------- ----------
 445+ 9F86              ;
 446+ 9F86              ;   26/06/23
 447+ 9F86              ;
 448+ 9F86              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F86
 450+ 9F86              Ajusta_velocidad_desplazamiento
 451+ 9F86
 452+ 9F86              ; 1er byte de la cadena de movimiento.
 453+ 9F86              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F86
 455+ 9F86 CD A4 9F         call Extrae_nibble_alto
 456+ 9F89
 457+ 9F89 32 E0 89         ld (Vel_up),a
 458+ 9F8C 79               ld a,c
 459+ 9F8D E6 0F            and $0f
 460+ 9F8F 32 E1 89         ld (Vel_down),a
 461+ 9F92
 462+ 9F92              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F92              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F92
 465+ 9F92 23               inc hl
 466+ 9F93 CD A4 9F         call Extrae_nibble_alto
 467+ 9F96
 468+ 9F96 32 DE 89         ld (Vel_left),a
 469+ 9F99 79               ld a,c
 470+ 9F9A E6 0F            and $0f
 471+ 9F9C 32 DF 89         ld (Vel_right),a
 472+ 9F9F
 473+ 9F9F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F9F
 475+ 9F9F 23               inc hl
 476+ 9FA0 22 FC 89         ld (Puntero_mov),hl
 477+ 9FA3 C9               ret
 478+ 9FA4
 479+ 9FA4 06 04        Extrae_nibble_alto ld b,4
 480+ 9FA6 7E               ld a,(hl)
 481+ 9FA7 4F               ld c,a
 482+ 9FA8 E6 F0            and $f0
 483+ 9FAA CB 3F        1 srl a
 484+ 9FAC 10 FC            djnz 1B
 485+ 9FAE C9               ret
 486+ 9FAF
 487+ 9FAF              ; ---------- --------- --------- ---------- ----------
 488+ 9FAF              ;
 489+ 9FAF              ;   5/7/23
 490+ 9FAF              ;
 491+ 9FAF              ;   Incrementa_Puntero_indice_mov
 492+ 9FAF
 493+ 9FAF              Incrementa_Puntero_indice_mov
 494+ 9FAF
 495+ 9FAF 21 00 8A         ld hl,Incrementa_puntero
 496+ 9FB2 34               inc (hl)
 497+ 9FB3
 498+ 9FB3 2A FA 89         ld hl,(Puntero_indice_mov)
 499+ 9FB6 01 02 00         ld bc,2
 500+ 9FB9 A7               and a
 501+ 9FBA 09               add hl,bc
 502+ 9FBB 22 FA 89         ld (Puntero_indice_mov),hl
 503+ 9FBE
 504+ 9FBE 7E               ld a,(hl)
 505+ 9FBF A7               and a
 506+ 9FC0
 507+ 9FC0              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FC0
 509+ 9FC0              ;    jr z,$
 510+ 9FC0
 511+ 9FC0              ;! Reinicia el Patrón de movimiento.
 512+ 9FC0
 513+ 9FC0 CC C5 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FC3
 515+ 9FC3 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FC4
 517+ 9FC4 C9               ret
 518+ 9FC5
 519+ 9FC5
 520+ 9FC5              ; ---------- --------- --------- ---------- ----------
 521+ 9FC5              ;
 522+ 9FC5              ;   24/07/23
 523+ 9FC5              ;
 524+ 9FC5              ;   Inicializa_Puntero_indice_mov
 525+ 9FC5
 526+ 9FC5              Inicializa_Puntero_indice_mov
 527+ 9FC5
 528+ 9FC5              ; Existe etiqueta de bucle principal???
 529+ 9FC5
 530+ 9FC5 2A FE 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FC8 24               inc h
 532+ 9FC9 25               dec h
 533+ 9FCA 28 05            jr z,2F
 534+ 9FCC
 535+ 9FCC 22 FA 89         ld (Puntero_indice_mov),hl
 536+ 9FCF 18 14            jr 3F
 537+ 9FD1
 538+ 9FD1              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FD1
 540+ 9FD1 3A 00 8A     2 ld a,(Incrementa_puntero)
 541+ 9FD4 47               ld b,a
 542+ 9FD5
 543+ 9FD5 2A FA 89         ld hl,(Puntero_indice_mov)
 544+ 9FD8 2B           1 dec hl
 545+ 9FD9 2B               dec hl
 546+ 9FDA 10 FC            djnz 1B
 547+ 9FDC 22 FA 89         ld (Puntero_indice_mov),hl
 548+ 9FDF
 549+ 9FDF AF               xor a
 550+ 9FE0 32 00 8A         ld (Incrementa_puntero),a
 551+ 9FE3 18 06            jr 4F
 552+ 9FE5
 553+ 9FE5 3A 01 8A     3 ld a,(Incrementa_puntero_backup)
 554+ 9FE8 32 00 8A         ld (Incrementa_puntero),a
 555+ 9FEB C9           4 ret
 556+ 9FEC
 557+ 9FEC
 558+ 9FEC
# file closed: Patrones_de_mov.asm
1300  9FEC              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9FEC              ; Relojes y temporizaciones.
   2+ 9FEC
   3+ 9FEC              ; ------------------------------------------------------
   4+ 9FEC              ;
   5+ 9FEC              ;	16/7/23
   6+ 9FEC              ;
   7+ 9FEC              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9FEC              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9FEC              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9FEC              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9FEC              ;
  12+ 9FEC              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9FEC              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9FEC
  15+ 9FEC              ; Disparo_entidad db 1
  16+ 9FEC              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9FEC              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9FEC
  19+ 9FEC              Habilita_disparos
  20+ 9FEC
  21+ 9FEC 7E           	ld a,(hl)
  22+ 9FED A7           	and a
  23+ 9FEE C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9FEF
  25+ 9FEF EB           	ex de,hl
  26+ 9FF0
  27+ 9FF0 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9FF1 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9FF2
  30+ 9FF2              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9FF2
  32+ 9FF2 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9FF3 7E           	ld a,(hl)
  34+ 9FF4 23           	inc hl
  35+ 9FF5 77           	ld (hl),a
  36+ 9FF6
  37+ 9FF6 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9FF7 3E 01        	ld a,1
  39+ 9FF9 77           	ld (hl),a
  40+ 9FFA C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1301  9FFB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FFB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FFB              ;
   3+ 9FFB              ;	3/1/23
   4+ 9FFB              ;
   5+ 9FFB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FFB
   7+ 9FFB              ;	ADC HL,SP	LD (addr),SP
   8+ 9FFB              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FFB              ;	ADD IX,SP	LD SP,nn
  10+ 9FFB              ; 	ADD IY,SP	LD SP,HL
  11+ 9FFB              ;				LD SP,IX
  12+ 9FFB              ;	DEC SP		LD SP,IY
  13+ 9FFB
  14+ 9FFB              ;	EX (SP),HL
  15+ 9FFB              ;	EX (SP),IX
  16+ 9FFB              ;	EX (SP),IY
  17+ 9FFB
  18+ 9FFB              ;	INC SP
  19+ 9FFB
  20+ 9FFB
  21+ 9FFB                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 CD DB 7F         call Selecciona_punteros
  33+ 7FA3
  34+ 7FA3 ED 73 1D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 7FA7 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  36+ 7FAA
  37+ 7FAA E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  38+ 7FAB DD E5            push ix                                       ; IX contiene el puntero de impresión.
  39+ 7FAD FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  40+ 7FAF
  41+ 7FAF 3A 0C 8A         ld a,(Ctrl_1)
  42+ 7FB2 CB 47            bit 0,a
  43+ 7FB4 28 05            jr z,2F
  44+ 7FB6
  45+ 7FB6 2A 23 8A         ld hl,(Stack_snapshot_disparos)
  46+ 7FB9
  47+ 7FB9 18 03            jr 4F
  48+ 7FBB
  49+ 7FBB 2A 21 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  50+ 7FBE 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  51+ 7FC0
  52+ 7FC0 D1           1 pop de
  53+ 7FC1 73               ld (hl),e
  54+ 7FC2 23               inc hl
  55+ 7FC3 72               ld (hl),d
  56+ 7FC4 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  57+ 7FC5 10 F9            djnz 1B
  58+ 7FC7
  59+ 7FC7 CB 47            bit 0,a
  60+ 7FC9 28 05            jr z,5F
  61+ 7FCB
  62+ 7FCB 22 23 8A         ld (Stack_snapshot_disparos),hl
  63+ 7FCE 18 03            jr 6F
  64+ 7FD0
  65+ 7FD0 22 21 8A     5 ld (Stack_snapshot),hl
  66+ 7FD3 ED 7B 1D 8A  6 ld sp,(Stack)
  67+ 7FD7 CD 0C 80         call Actualiza_punteros                         ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  68+ 7FDA C9               ret
  69+ 7FDB
  70+ 7FDB              ; ------------------------------------------------
  71+ 7FDB              ;
  72+ 7FDB              ;   28/07/23
  73+ 7FDB              ;
  74+ 7FDB              ;   Seleccionamos el primer Album_de_fotos y disparos si (Resorte)="1".
  75+ 7FDB              ;   Seleccionamos el segundo Album_de_fotos y disparos si (Resorte)="0".
  76+ 7FDB
  77+ 7FDB              Selecciona_punteros
  78+ 7FDB
  79+ 7FDB DD E5            push ix
  80+ 7FDD FD E5            push iy
  81+ 7FDF
  82+ 7FDF 3A 25 8A         ld a,(Resorte)
  83+ 7FE2 A7               and a
  84+ 7FE3 28 12            jr z,1F
  85+ 7FE5
  86+ 7FE5              ; 1er Album.
  87+ 7FE5 DD 2A 26 8A      ld ix,(Stack_snapshot_1)
  88+ 7FE9 FD 2A 28 8A      ld iy,(Stack_snapshot_disparos_1)
  89+ 7FED DD 22 21 8A      ld (Stack_snapshot),ix
  90+ 7FF1 FD 22 23 8A      ld (Stack_snapshot_disparos),iy
  91+ 7FF5 18 10            jr 2F
  92+ 7FF7
  93+ 7FF7              ; 2º Album.
  94+ 7FF7 DD 2A 2A 8A  1 ld ix,(Stack_snapshot_2)
  95+ 7FFB FD 2A 2C 8A      ld iy,(Stack_snapshot_disparos_2)
  96+ 7FFF DD 22 21 8A      ld (Stack_snapshot),ix
  97+ 8003 FD 22 23 8A      ld (Stack_snapshot_disparos),iy
  98+ 8007
  99+ 8007 FD E1        2 pop iy
 100+ 8009 DD E1            pop ix
 101+ 800B C9               ret
 102+ 800C
 103+ 800C              ; ------------------------------------------------
 104+ 800C              ;
 105+ 800C              ;   28/07/23
 106+ 800C              ;
 107+ 800C              ;   Actualizamos los punteros del 1er album de fotos y disparos, si (Resorte)="1".
 108+ 800C              ;   Actualizamos los punteros del 2º album de fotos y disparos, si (Resorte)="0".
 109+ 800C
 110+ 800C              Actualiza_punteros
 111+ 800C
 112+ 800C DD E5            push ix
 113+ 800E FD E5            push iy
 114+ 8010
 115+ 8010 3A 25 8A         ld a,(Resorte)
 116+ 8013 A7               and a
 117+ 8014 28 12            jr z,1F
 118+ 8016
 119+ 8016              ; 1er Album.
 120+ 8016 DD 2A 21 8A      ld ix,(Stack_snapshot)
 121+ 801A FD 2A 23 8A      ld iy,(Stack_snapshot_disparos)
 122+ 801E DD 22 26 8A      ld (Stack_snapshot_1),ix
 123+ 8022 FD 22 28 8A      ld (Stack_snapshot_disparos_1),iy
 124+ 8026 18 10            jr 2F
 125+ 8028
 126+ 8028              ; 2º Album.
 127+ 8028 DD 2A 21 8A  1 ld ix,(Stack_snapshot)
 128+ 802C FD 2A 23 8A      ld iy,(Stack_snapshot_disparos)
 129+ 8030 DD 22 2A 8A      ld (Stack_snapshot_2),ix
 130+ 8034 FD 22 2C 8A      ld (Stack_snapshot_disparos_2),iy
 131+ 8038
 132+ 8038 FD E1        2 pop iy
 133+ 803A DD E1            pop ix
 134+ 803C C9               ret
# file closed: Guarda_foto_registros.asm
1302  803D
1303  803D              	SAVESNA "Pruebas.sna", START
1304  803D
1305  803D
1306  803D
1307  803D
# file closed: Banco_de_pruebas.asm
