# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E8 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A F6 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20 CD EA 92     	call Extrae_Album_de_fotos
  44  AA23
  45  AA23              ;	ld a,6
  46  AA23              ;	out ($fe),a
  47  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA23
  49  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  50  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  51  AA23
  52  AA23              ;	ld a,7
  53  AA23              ;	out ($fe),a												; Borde blanco.
  54  AA23              ;	call Guarda_parametros_DRAW
  55  AA23              ;	call Restore_Amadeus
  56  AA23
  57  AA23              ; Posible colisión Entidad-Amadeus ???
  58  AA23
  59  AA23              ;	ld a,(Impacto2)
  60  AA23              ;	bit 2,a
  61  AA23              ;	jr z,1F
  62  AA23
  63  AA23              ;	call Detecta_colision_nave_entidad
  64  AA23
  65  AA23              ;1 ld a,4
  66  AA23              ;	out ($fe),a
  67  AA23              ;	call Gestiona_Amadeus
  68  AA23
  69  AA23              ;	ld a,7
  70  AA23              ;	out ($fe),a											; Borde blanco.
  71  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  72  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  73  AA23
  74  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  75  AA23
  76  AA23              ;	call Recupera_parametros_DRAW
  77  AA23
  78  AA23 CD CB 8D     1 call Actualiza_relojes
  79  AA26
  80  AA26 21 F6 89     	ld hl,Ctrl_3
  81  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  82  AA2B
  83  AA2B FD E1        	pop iy
  84  AA2D DD E1        	pop ix
  85  AA2F F1           	pop af
  86  AA30 C1           	pop bc
  87  AA31 D1           	pop de
  88  AA32 E1           	pop hl
  89  AA33 D9           	exx
  90  AA34 C1           	pop bc
  91  AA35 D1           	pop de
  92  AA36 E1           	pop hl
  93  AA37 08           	ex af,af'
  94  AA38 F1           	pop af
  95  AA39 08           	ex af,af'
  96  AA3A D9           	exx
  97  AA3B
  98  AA3B ED 7B E8 89  	ld sp,(Stack_3)
  99  AA3F
 100  AA3F FB           	ei
 101  AA40
 102  AA40 3E 01        	ld a,1												; Borde azul.
 103  AA42 D3 FE        	out ($fe),a
 104  AA44
 105  AA44 C9           	ret
 106  AA45
 107  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 108  AA45
 109  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 110  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 111  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 112  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 7A 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 897A
  19+ 897A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8983 01 02
  22+ 8985 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8989 01 02
  23+ 898B
# file closed: Niveles.asm
 113  898B
 114  898B              ; ******************************************************************************************************************************************************************************************
 115  898B              ; Constantes.
 116  898B              ; ******************************************************************************************************************************************************************************************
 117  898B              ;
 118  898B              ; 25/12/23
 119  898B
 120  898B              ;
 121  898B              ; Constantes.
 122  898B              ;
 123  898B
 124  898B              Sprite_vacio equ $ead0
 125  898B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 126  898B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 127  898B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 128  898B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 129  898B
 130  898B              Almacen_de_scanlines_masticados_a_borrar equ $e800
 131  898B              Almacen_de_scanlines_masticados equ $e900
 132  898B              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 133  898B              Almacen_de_movimientos_masticados_Amadeus equ $e700
 134  898B              ;
 135  898B              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 136  898B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 137  898B              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 138  898B
 139  898B              Album_de_fotos_de_borrado equ $8056   ;   ($8056 - $80ab).
 140  898B
 141  898B              Album_de_fotos_disparos equ $80ac  ;  (8056h - 8101h).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 142  898B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 143  898B              ;														; 55 Bytes.
 144  898B
 145  898B              Album_de_fotos_Amadeus equ $8102  ;  (80ach - 810eh) ; 12 bytes.
 146  898B
 147  898B              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 148  898B
 149  898B              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 150  898B
 151  898B              ; ******************************************************************************************************************************************************************************************
 152  898B              ; Variables.
 153  898B              ; ******************************************************************************************************************************************************************************************
 154  898B              ;
 155  898B              ; 18/01/24
 156  898B              ;
 157  898B              ; Variables de DRAW. (Motor principal).	42 Bytes.
 158  898B              ;
 159  898B
 160  898B              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 161  898B
 162  898B 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 163  898C              ;															- Patrón de movimiento.
 164  898C              ;															- Aspecto
 165  898C 00           Filas db 0												; Filas. [DRAW]
 166  898D 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 167  898E 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 168  8990 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 169  8992 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 170  8993 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 171  8994
 172  8994              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 173  8994
 174  8994 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 175  8995              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 176  8995              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 177  8995 00           Attr db 0												; Atributos de la entidad:
 178  8996
 179  8996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 180  8996              ;
 181  8996              ;	COLORES: 0 ..... NEGRO
 182  8996              ;    		 1 ..... AZUL
 183  8996              ; 			 2 ..... ROJO
 184  8996              ;			 3 ..... MAGENTA
 185  8996              ; 			 4 ..... VERDE
 186  8996              ; 			 5 ..... CIAN
 187  8996              ;			 6 ..... AMARILLO
 188  8996              ; 			 7 ..... BLANCO
 189  8996
 190  8996 00 00        Indice_Sprite_der defw 0
 191  8998 00 00        Indice_Sprite_izq defw 0
 192  899A 00 00        Puntero_DESPLZ_der defw 0
 193  899C 00 00        Puntero_DESPLZ_izq defw 0
 194  899E
 195  899E 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 196  89A0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 197  89A1
 198  89A1              ; Variables de objeto. (Características).
 199  89A1
 200  89A1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 201  89A2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 202  89A2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 203  89A2 00 00 00...  Variables_de_borrado ds 6
 204  89A8
 205  89A8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 206  89AA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 207  89AA
 208  89AA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 209  89AC
 210  89AC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 211  89AC              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 212  89AC
 213  89AC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 214  89AE              ;														; _palabras que componen el "movimiento_masticado".
 215  89AE
 216  89AE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 217  89AE
 218  89AE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 219  89AF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 220  89AF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 221  89AF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 222  89AF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 223  89AF              ;
 224  89AF              ; 														DESCRIPCIÖN:
 225  89AF              ;
 226  89AF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 227  89AF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 228  89AF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 229  89AF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 230  89AF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 231  89AF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 232  89AF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 233  89AF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 234  89AF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 235  89AF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 236  89AF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 237  89AF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 238  89AF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 239  89AF              ;
 240  89AF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 241  89AF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 242  89AF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 243  89AF
 244  89AF              ; Variables de funcionamiento. [DRAW].
 245  89AF
 246  89AF 00           Columnas db 0
 247  89B0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 248  89B2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 249  89B2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 250  89B3
 251  89B3              ; variables de control general.
 252  89B3
 253  89B3 00           Ctrl_2 db 0
 254  89B4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 255  89B4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 256  89B4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 257  89B4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 258  89B4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 259  89B4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 260  89B4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 261  89B4              ;
 262  89B4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 263  89B4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 264  89B4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 265  89B4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 266  89B4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 267  89B4              ;														BIT 4, ???
 268  89B4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 269  89B4
 270  89B4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 271  89B5
 272  89B5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 273  89B5
 274  89B5              ;					         		---------;      ;---------
 275  89B5
 276  89B5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 277  89B5
 278  89B5              Perfiles_de_velocidad
 279  89B5
 280  89B5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 281  89B6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 282  89B7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 283  89B8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 284  89B9
 285  89B9              ; Contadores de 16 bits.
 286  89B9
 287  89B9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 288  89BB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 289  89BD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 290  89BF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 291  89C1
 292  89C1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 293  89C1
 294  89C1 00 E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 295  89C3 00 E8        Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 296  89C5 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 297  89C7
 298  89C7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  89C9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  89CB 00 00        Puntero_indice_mov_bucle defw 0							;
 301  89CD              ;
 302  89CD              ;
 303  89CD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  89CE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  89CE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  89CE 00           Incrementa_puntero_backup db 0
 307  89CF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  89D0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  89D0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  89D1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  89D2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  89D3              ;
 313  89D3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  89D3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  89D3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  89D3              ;
 317  89D3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  89D3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  89D3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  89D3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  89D3              ;
 322  89D3              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  89D3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  89D3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  89D3              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 326  89D3
 327  89D3 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 328  89D4
 329  89D4              ;														DESCRIPCIÓN:
 330  89D4              ;
 331  89D4              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 332  89D4              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 333  89D4              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 334  89D4              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 335  89D4              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 336  89D4              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 337  89D4
 338  89D4              ;														BIT 3, Recarga de nueva oleada.
 339  89D4              ;														BIT 4, Recarga de nueva oleada.
 340  89D4              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 341  89D4              ;														BIT 6, **** Frame completo.
 342  89D4              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 343  89D4
 344  89D4 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 345  89D6              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 346  89D6              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 347  89D6              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 348  89D6
 349  89D6              ; Gestión de ENTIDADES y CAJAS.
 350  89D6
 351  89D6 00 00        Puntero_store_caja defw 0
 352  89D8 00 00        Puntero_restore_caja defw 0
 353  89DA 00 00        Indice_restore_caja defw 0
 354  89DC 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 355  89DD 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 356  89DE 00           Entidades_en_curso db 0									; ..... ..... .....
 357  89DF 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 358  89E0              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 359  89E0              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 360  89E0              ;														; _ (Numero_de_malotes)="0".
 361  89E0 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  89E2 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  89E4              ;														; _ puntero (Indice_entidades).
 364  89E4
 365  89E4              ;---------------------------------------------------------------------------------------------------------------
 366  89E4              ;
 367  89E4              ;	11/01/24
 368  89E4              ;
 369  89E4              ;	Álbumes.
 370  89E4
 371  89E4 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  89E6              ;														; _variable para almacenar lo posición del puntero_
 373  89E6              ; 														; _de pila, SP.
 374  89E6 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  89E8              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  89E8 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 377  89EA 00 80        Stack_snapshot defw Album_de_fotos
 378  89EC
 379  89EC 5C 80        Stack_snapshot_borrado defw Album_de_fotos_de_borrado+6		 		; Puntero que almacena la rutina de impresión en el [Album_de_fotos_de_borrado].
 380  89EE 58 80        Stack_snapshot_borrado_sc defw Album_de_fotos_de_borrado+2			; Puntero que almacena la dirección donde se encuentran los scanlines_masticados_a_borrar.
 381  89F0
 382  89F0
 383  89F0 AC 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 384  89F2
 385  89F2              ;End_Snapshot defw Album_de_fotos
 386  89F2              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 387  89F2 AC 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 388  89F4              ;														; _el snapshot de los registros del siguiente disparo.
 389  89F4              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 390  89F4 02 81        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 391  89F6
 392  89F6 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 393  89F7              ;
 394  89F7              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 395  89F7              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 396  89F7              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 397  89F7
 398  89F7 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 399  89F8              ;
 400  89F8              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 401  89F8              ;
 402  89F8              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 403  89F8              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 404  89F8              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 405  89F8              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 406  89F8              ;
 407  89F8              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 408  89F8              ;															_ masticados ya generados.
 409  89F8              ;
 410  89F8              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 411  89F8              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 412  89F8              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 413  89F8              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 414  89F8
 415  89F8
 416  89F8              ; Gestión de Disparos.
 417  89F8
 418  89F8 00           Numero_de_disparotes db 0
 419  89F9 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 420  89FB 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 421  89FD 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 422  89FE              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 423  89FE              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 424  89FE 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 425  8A00              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 426  8A00              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 427  8A00              ;														; _produzca colisión.
 428  8A00 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 429  8A02              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 430  8A02 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 431  8A05              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 432  8A05 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 433  8A08              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 434  8A08 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 435  8A09
 436  8A09              ;---------------------------------------------------------------------------------------------------------------
 437  8A09
 438  8A09              ; Relojes y temporizaciones.
 439  8A09
 440  8A09 00           Contador_de_frames db 0
 441  8A0A 00           Contador_de_frames_2 db 0
 442  8A0B
 443  8A0B 04           Clock_explosion db 4
 444  8A0C 14           Clock_Entidades_en_curso db 20
 445  8A0D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 446  8A0E              ;														; Repite la oleada de entidades.
 447  8A0E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 448  8A0F 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 449  8A10 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 450  8A11
 451  8A11 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 452  8A12 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 453  8A13 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 454  8A14
 455  8A14              ;---------------------------------------------------------------------------------------------------------------
 456  8A14
 457  8A14              ; Gestión de NIVELES.
 458  8A14
 459  8A14 00           Nivel db 0												; Nivel actual del juego.
 460  8A15 00 00        Puntero_indice_NIVELES defw 0
 461  8A17 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 462  8A19              ; 														; _ que definen el NIVEL.
 463  8A19              ; Y todo comienza aquí .....
 464  8A19              ;
 465  8A19              ; 	INICIO  *************************************************************************************************************************************************************************
 466  8A19              ;
 467  8A19              ;	5/1/24
 468  8A19
 469  8A19              START
 470  8A19
 471  8A19 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 472  8A1C 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 473  8A1E ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 474  8A20 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 475  8A22 F3           	DI
 476  8A23
 477  8A23              ;	ld a,%00000111
 478  8A23              ;	call Cls
 479  8A23 CD 3C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 480  8A26
 481  8A26              ; INICIALIZACIÓN.
 482  8A26
 483  8A26              ;	Inicializa 1er Nivel.
 484  8A26
 485  8A26 21 6B 89     	ld hl,Indice_de_niveles
 486  8A29 22 15 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 487  8A2C CD DD 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 488  8A2F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 489  8A2F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 490  8A2F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 491  8A2F
 492  8A2F              ;	Provisional, (para desarrollo).
 493  8A2F
 494  8A2F              	;-
 495  8A2F              ;	ld hl,Numero_parcial_de_entidades
 496  8A2F              ;	ld b,(hl)
 497  8A2F              ;	inc b
 498  8A2F              ;	dec b
 499  8A2F              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 500  8A2F
 501  8A2F CD 22 8E     4 call Inicia_Entidades
 502  8A32
 503  8A32 CD FF 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 504  8A35
 505  8A35              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 506  8A35              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 507  8A35              ; (Esto se dá cuando se inicia una nueva oleada).
 508  8A35
 509  8A35              ;	ld a,(Ctrl_1)
 510  8A35              ;	bit 3,a
 511  8A35              ;	jr nz,5F											; Loop
 512  8A35
 513  8A35              ; 	INICIA AMADEUS !!!!!
 514  8A35
 515  8A35              ;3 call Restore_Amadeus
 516  8A35              ;	call Inicia_Puntero_objeto
 517  8A35              ;	call Draw
 518  8A35
 519  8A35              ;	call Guarda_movimiento_masticado	;! Provisional
 520  8A35
 521  8A35              ;	call Guarda_foto_registros
 522  8A35              ;	call Guarda_datos_de_borrado_Amadeus
 523  8A35
 524  8A35              ;	ld de,Amadeus_db
 525  8A35              ;	call Store_Amadeus
 526  8A35
 527  8A35              ; 	INICIA DISPAROS !!!!!
 528  8A35
 529  8A35              ;	call Inicia_Puntero_Disparo_Entidades
 530  8A35              ;	call Inicia_Puntero_Disparo_Amadeus
 531  8A35
 532  8A35              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 533  8A35
 534  8A35              ;5 call Inicia_punteros_de_cajas
 535  8A35              ;	call Restore_entidad
 536  8A35
 537  8A35              ;	ld a,(Ctrl_1)
 538  8A35              ;	bit 3,a
 539  8A35              ;	jr z,6F
 540  8A35
 541  8A35              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 542  8A35
 543  8A35              ;	ld hl,Ctrl_1
 544  8A35              ;	res 3,(hl)
 545  8A35              ;	jr Main
 546  8A35
 547  8A35              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 548  8A35
 549  8A35 CD 4B 8C     6 call Calcula_numero_de_malotes
 550  8A38 CD 20 8B     	call Genera_scanlines_masticados
 551  8A3B CD 07 8B     	call Genera_scanlines_masticados_a_borrar
 552  8A3E
 553  8A3E 21 F6 89     	ld hl,Ctrl_3
 554  8A41 CB C6        	set 0,(hl)											; Frame completo.
 555  8A43 FB           	ei
 556  8A44 76           	halt
 557  8A45
 558  8A45              ; ------------------------------------
 559  8A45
 560  8A45              Main
 561  8A45              ;
 562  8A45              ;	11/12/23
 563  8A45
 564  8A45              ; Aparece nueva entidad ???
 565  8A45
 566  8A45              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 567  8A45              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 568  8A45              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 569  8A45              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 570  8A45              ;														; _un 2º bloque.
 571  8A45
 572  8A45 CD EA 8A     	call Limpia_Almacen_de_scanlines_masticados
 573  8A48 CD 33 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 574  8A4B              ; 													 	; _(Stack_snapshot).
 575  8A4B
 576  8A4B F3           	di
 577  8A4C 18 FE        	jr $
 578  8A4E FB           	ei
 579  8A4F
 580  8A4F 3A 0C 8A     	ld a,(Clock_Entidades_en_curso)
 581  8A52 47           	ld b,a
 582  8A53 3A 09 8A     	ld a,(Contador_de_frames)
 583  8A56 B8           	cp b
 584  8A57 20 18        	jr nz,13F
 585  8A59
 586  8A59              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 587  8A59              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 588  8A59
 589  8A59 3A DD 89     21 ld a,(Numero_parcial_de_entidades)
 590  8A5C 47           	ld b,a
 591  8A5D 3A DE 89     	ld a,(Entidades_en_curso)
 592  8A60 B8           	cp b
 593  8A61 28 0E        	jr z,13F
 594  8A63 30 0C        	jr nc,13F
 595  8A65
 596  8A65 3C           	inc a
 597  8A66 32 DE 89     	ld (Entidades_en_curso),a
 598  8A69
 599  8A69              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 600  8A69
 601  8A69 3A 0C 8A     	ld a,(Clock_Entidades_en_curso)
 602  8A6C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 603  8A6C              ;! _ IMPREDECIBLE !!!!
 604  8A6C C6 64        	add 100
 605  8A6E 32 0C 8A     	ld (Clock_Entidades_en_curso),a
 606  8A71
 607  8A71              ; -------------------------------------------------------------------------------------------------------------
 608  8A71
 609  8A71              ; Habilita disparos.
 610  8A71
 611  8A71              13
 612  8A71
 613  8A71              ;	ld hl,Disparo_Amadeus
 614  8A71              ;	ld de,CLOCK_repone_disparo_Amadeus
 615  8A71              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 616  8A71
 617  8A71              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 618  8A71              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 619  8A71              ;	call Habilita_disparos
 620  8A71
 621  8A71              ; COLISIONES.
 622  8A71
 623  8A71              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 624  8A71
 625  8A71              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 626  8A71              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 627  8A71              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 628  8A71
 629  8A71              ;	xor a
 630  8A71              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 631  8A71
 632  8A71              ;	call Inicia_punteros_de_cajas
 633  8A71              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 634  8A71              ; 														; _ en DRAW.
 635  8A71
 636  8A71              ;	ld a,(Filas)
 637  8A71              ;	and a
 638  8A71              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 639  8A71              ;	call Incrementa_punteros_de_cajas
 640  8A71              ;	jr 12B
 641  8A71
 642  8A71              ; ---------------------------------------------------------------------------------------
 643  8A71
 644  8A71 3A DD 89     10 ld a,(Numero_parcial_de_entidades)
 645  8A74 47               ld b,a
 646  8A75 A7           	and a
 647  8A76 20 00        	jr nz,11F
 648  8A78
 649  8A78              ;	ld hl,Ctrl_1;
 650  8A78              ;	bit 4,(hl)
 651  8A78              ;	jp nz,16F
 652  8A78
 653  8A78              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 654  8A78
 655  8A78              ;	ld hl,Ctrl_1
 656  8A78              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 657  8A78
 658  8A78              ;	ld a,(Contador_de_frames)
 659  8A78              ;	inc a
 660  8A78              ;	ld (Activa_recarga_cajas),a
 661  8A78
 662  8A78              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 663  8A78
 664  8A78 3A DE 89     11 ld a,(Entidades_en_curso)
 665  8A7B A7           	and a
 666  8A7C 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 667  8A7E 47           	ld b,a												; No hay entidades que gestionar.
 668  8A7F
 669  8A7F              ; ( Código que ejecutamos con cada entidad: ).
 670  8A7F
 671  8A7F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 672  8A7F
 673  8A7F C5           15 push bc 												; Nº de entidades en curso.
 674  8A80
 675  8A80 CD D2 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 676  8A83
 677  8A83 3A F6 89     	ld a,(Ctrl_3)
 678  8A86 CB 57        	bit 2,a
 679  8A88 F3           	di
 680  8A89 20 FE        	jr nz,$
 681  8A8B FB           	ei
 682  8A8C
 683  8A8C              ; Existe "Entidad_guía" ???.
 684  8A8C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 685  8A8C
 686  8A8C              ;	ld a,(Ctrl_3)
 687  8A8C              ;	bit 1,a
 688  8A8C              ;	jr nz,22F
 689  8A8C
 690  8A8C              ; Almacén de "Movimientos_masticados" lleno ???
 691  8A8C              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 692  8A8C              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 693  8A8C
 694  8A8C              ;;	ld a,(Ctrl_3)
 695  8A8C              ;;	bit 3,a
 696  8A8C              ;;	jr nz,22F
 697  8A8C
 698  8A8C              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 699  8A8C
 700  8A8C              ;	ld hl,Ctrl_2
 701  8A8C              ;	set 5,(hl)
 702  8A8C              ;	ld hl,Ctrl_3
 703  8A8C              ;	set 1,(hl)
 704  8A8C
 705  8A8C              ; Impacto ???
 706  8A8C
 707  8A8C              ;22 ld a,(Impacto)
 708  8A8C              ;	and a
 709  8A8C              ;	jr z,8F
 710  8A8C
 711  8A8C              ; Hay Impacto en esta entidad.
 712  8A8C
 713  8A8C              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 714  8A8C              ;	dec (hl)
 715  8A8C              ;	jp nz,17F
 716  8A8C
 717  8A8C              ;! Velocidad de la animación de la explosión.
 718  8A8C
 719  8A8C              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 720  8A8C              ;														; _,(velocidad de la explosión).
 721  8A8C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 722  8A8C
 723  8A8C              ;	call Repone_datos_de_borrado
 724  8A8C              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 725  8A8C
 726  8A8C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 727  8A8C
 728  8A8C              ;	ld a,(Ctrl_2)
 729  8A8C              ;	bit 1,a
 730  8A8C              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 731  8A8C
 732  8A8C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 733  8A8C
 734  8A8C              ;	ld a,(CTRL_DESPLZ)
 735  8A8C              ;	and a
 736  8A8C              ;	jr nz,18F
 737  8A8C
 738  8A8C              ;	ld hl,Indice_Explosion_2x2-2
 739  8A8C              ;	ld (Puntero_DESPLZ_der),hl
 740  8A8C              ;	jr 19F
 741  8A8C
 742  8A8C              ;18 ld hl,Indice_Explosion_2x3-2
 743  8A8C              ;	ld (Puntero_DESPLZ_der),hl
 744  8A8C
 745  8A8C              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 746  8A8C              ;	set 1,(hl)
 747  8A8C              ;	jr 7F
 748  8A8C
 749  8A8C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 750  8A8C              ; _con las coordenadas de la entidad almacenada en DRAW.
 751  8A8C
 752  8A8C              ;8 ld a,(Ctrl_1)
 753  8A8C              ;	bit 2,a
 754  8A8C              ;	jr z,7F
 755  8A8C
 756  8A8C              ;	ld hl,(Coordenadas_disparo_certero)
 757  8A8C              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 758  8A8C              ;														; E contiene la coordenada_X del disparo.
 759  8A8C              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 760  8A8C              ;														; H FILA, (Coordenada_y de la entidad).
 761  8A8C              ;	and a
 762  8A8C              ;	sbc hl,de
 763  8A8C
 764  8A8C              ;	call Determina_resultado_comparativa
 765  8A8C
 766  8A8C              ;	ld a,b
 767  8A8C              ;	and a
 768  8A8C              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 769  8A8C
 770  8A8C              ; ----- ----- -----
 771  8A8C
 772  8A8C              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 773  8A8C              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 774  8A8C
 775  8A8C              ;	ld hl,Ctrl_1
 776  8A8C              ;	res 2,(hl)
 777  8A8C
 778  8A8C CD AE 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 779  8A8F
 780  8A8F              ;	ld a,(Ctrl_0)
 781  8A8F              ;	bit 4,a
 782  8A8F              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 783  8A8F
 784  8A8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 785  8A8F              ; [[[
 786  8A8F              ;	call Detecta_disparo_entidad
 787  8A8F              ; ]]]
 788  8A8F
 789  8A8F CD 8C 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 790  8A92
 791  8A92              ;	ld hl,Ctrl_0
 792  8A92              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 793  8A92
 794  8A92 CD 7C 8E     17 call Store_Restore_cajas
 795  8A95
 796  8A95 C1           	pop bc
 797  8A96
 798  8A96 10 E7        	djnz 15B
 799  8A98
 800  8A98 CD FF 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 801  8A9B
 802  8A9B              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 803  8A9B              ; Hemos gestionado todas las unidades.
 804  8A9B              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 805  8A9B
 806  8A9B              ;	ld hl,Ctrl_1
 807  8A9B              ;	res 2,(hl)
 808  8A9B
 809  8A9B              16
 810  8A9B
 811  8A9B CD 4B 8C     	call Calcula_numero_de_malotes
 812  8A9E CD 20 8B     	call Genera_scanlines_masticados
 813  8AA1
 814  8AA1 21 F6 89     	ld hl,Ctrl_3
 815  8AA4 CB C6        	set 0,(hl)											; Frame completo.
 816  8AA6
 817  8AA6 AF           	xor a
 818  8AA7 D3 FE        	out ($fe),a
 819  8AA9 76           	halt
 820  8AAA
 821  8AAA              ; ----------------------------------------
 822  8AAA
 823  8AAA              ;	ld a,(Ctrl_1) 										; Existe Loop?
 824  8AAA              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 825  8AAA CA 45 8A     	jp z,Main
 826  8AAD
 827  8AAD              ; RECARGA DE NUEVA OLEADA.
 828  8AAD
 829  8AAD              ;	ld a,(Contador_de_frames)
 830  8AAD              ;	ld b,a
 831  8AAD              ;	ld a,(Activa_recarga_cajas)
 832  8AAD              ;	cp b
 833  8AAD              ;	jr z,20F
 834  8AAD
 835  8AAD              ;	ld hl,Ctrl_1
 836  8AAD              ;	set 4,(hl)
 837  8AAD              ;	jp Main
 838  8AAD
 839  8AAD              ;20 ld hl,Ctrl_1
 840  8AAD              ;	res 4,(hl)
 841  8AAD
 842  8AAD              ;	ld a,(Contador_de_frames)
 843  8AAD
 844  8AAD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 845  8AAD              ;! _ IMPREDECIBLE !!!!
 846  8AAD
 847  8AAD              ;	add 10
 848  8AAD              ;	ld (Clock_Entidades_en_curso),a
 849  8AAD
 850  8AAD              ;	jp 4B
 851  8AAD
 852  8AAD C9           	ret
 853  8AAE
 854  8AAE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 855  8AAE              ;
 856  8AAE              ;	16/11/23
 857  8AAE
 858  8AAE              ;;Gestiona_Amadeus
 859  8AAE
 860  8AAE              ;! Activa/desactiva impacto con Amadeus.
 861  8AAE
 862  8AAE              ;	ld a,(Impacto)
 863  8AAE              ;	and a
 864  8AAE              ;	jr nz,2F
 865  8AAE
 866  8AAE              ;;	call Mov_Amadeus
 867  8AAE
 868  8AAE              ;;2 ld a,(Ctrl_0)
 869  8AAE              ;;	bit 4,a
 870  8AAE              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 871  8AAE
 872  8AAE              ;;	call Guarda_foto_entidad_a_pintar
 873  8AAE              ;;	call Guarda_datos_de_borrado_Amadeus
 874  8AAE
 875  8AAE              ;;1 ld hl,Ctrl_0
 876  8AAE              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 877  8AAE
 878  8AAE              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 879  8AAE
 880  8AAE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 881  8AAE
 882  8AAE              ;	call Calcula_numero_de_disparotes
 883  8AAE
 884  8AAE              ;;	ret
 885  8AAE
 886  8AAE              ; --------------------------------------------------------------------------------------------------------------
 887  8AAE              ;
 888  8AAE              ;	15/12/23
 889  8AAE
 890  8AAE              Mov_obj
 891  8AAE
 892  8AAE              ;	ld a,(Ctrl_2)
 893  8AAE              ;	bit 1,a
 894  8AAE              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 895  8AAE
 896  8AAE              ; Explosión:
 897  8AAE
 898  8AAE              ;	ld a,(Frames_explosion)
 899  8AAE              ;	and a
 900  8AAE              ;	jr nz,4F
 901  8AAE
 902  8AAE              ;!  Una alimaña menos!!!!!!!!!1
 903  8AAE
 904  8AAE              ; Se trataba de una Entidad_guía ???
 905  8AAE
 906  8AAE              ;	ld a,(Ctrl_2)
 907  8AAE              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 908  8AAE              ;	jr z,5F
 909  8AAE
 910  8AAE              ;	ld hl,Ctrl_3
 911  8AAE              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 912  8AAE
 913  8AAE              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 914  8AAE              ;!! _generado puede ser distinto, (aletoriedad).
 915  8AAE
 916  8AAE              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 917  8AAE              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 918  8AAE              ;	dec (hl)
 919  8AAE              ;	ld hl,Entidades_en_curso
 920  8AAE              ;	dec (hl)
 921  8AAE              ;	ld hl,Numero_de_entidades
 922  8AAE              ;	dec (hl)
 923  8AAE              ;	jr 3F
 924  8AAE
 925  8AAE              ; -----
 926  8AAE
 927  8AAE              ;	`Movemos´ la explosión.
 928  8AAE
 929  8AAE              ;4 ld hl,(Puntero_DESPLZ_der)
 930  8AAE              ;	inc hl
 931  8AAE              ;	inc hl
 932  8AAE              ;	call Extrae_address
 933  8AAE              ;;	ld (Puntero_objeto),hl
 934  8AAE
 935  8AAE              ;;	ld hl,Frames_explosion
 936  8AAE              ;;	dec (hl)
 937  8AAE
 938  8AAE              ;;	ld hl,Ctrl_0
 939  8AAE              ;;	set 4,(hl);;
 940  8AAE
 941  8AAE              ;;	jr 3F
 942  8AAE
 943  8AAE              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 944  8AAE
 945  8AAE              ;2 xor a
 946  8AAE              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 947  8AAE
 948  8AAE              ; Movemos Entidades malignas.
 949  8AAE              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 950  8AAE
 951  8AAE              ;	ld a,(Ctrl_2)
 952  8AAE              ;	bit 5,a
 953  8AAE              ;	jr nz,8F
 954  8AAE
 955  8AAE              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 956  8AAE              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 957  8AAE              ;	jr 7F
 958  8AAE
 959  8AAE              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 960  8AAE
 961  8AAE              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 962  8AAE              ;	bit 4,a
 963  8AAE              ;	ret z
 964  8AAE
 965  8AAE              ; Ha habido desplazamiento de la entidad maligna.
 966  8AAE              ; Ha llegado a zona de AMADEUS ???
 967  8AAE
 968  8AAE              ;7 ld a,(Coordenada_y)
 969  8AAE              ;	cp $14
 970  8AAE              ;	jr c,1F
 971  8AAE
 972  8AAE              ; ---------
 973  8AAE
 974  8AAE              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 975  8AAE              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 976  8AAE
 977  8AAE              ;	di
 978  8AAE              ;	call Genera_coordenadas_X
 979  8AAE              ;	call Compara_coordenadas_X
 980  8AAE              ;	ei
 981  8AAE
 982  8AAE              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 983  8AAE
 984  8AAE              ; ---------
 985  8AAE
 986  8AAE              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 987  8AAE              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 988  8AAE              ;	call Limpia_Variables_de_borrado
 989  8AAE
 990  8AAE C9           3 ret
 991  8AAF
 992  8AAF              ; --------------------------------------------------------------------------------------------------------------
 993  8AAF              ;
 994  8AAF              ;	29/1/23
 995  8AAF
 996  8AAF              Mov_Amadeus
 997  8AAF
 998  8AAF              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 999  8AAF
1000  8AAF CD 71 96     	call Mov_right
1001  8AB2
1002  8AB2 3A AE 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1003  8AB5 CB 67        	bit 4,a
1004  8AB7 C8           	ret z
1005  8AB8
1006  8AB8              ; ---------
1007  8AB8
1008  8AB8              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1009  8AB8 CD A0 8D     	call Repone_datos_de_borrado_Amadeus
1010  8ABB CD 3D 8C     	call Limpia_Variables_de_borrado
1011  8ABE
1012  8ABE C9           	ret
1013  8ABF
1014  8ABF              ; -----------------------------------------------------------------------------------
1015  8ABF              ;
1016  8ABF              ;	20/01/24
1017  8ABF              ;
1018  8ABF              ;
1019  8ABF
1020  8ABF              Construye_movimientos_masticados_entidad
1021  8ABF
1022  8ABF 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1023  8AC2 E5           	push hl
1024  8AC3 CD A1 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1025  8AC6              ;															; _ el (Contador_de_mov_masticados).
1026  8AC6 CD 9D 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1027  8AC9              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1028  8AC9              ;	call Recompone_posicion_inicio
1029  8AC9
1030  8AC9 CD D3 8F     1 call Draw
1031  8ACC CD 85 8B     	call Guarda_movimiento_masticado
1032  8ACF
1033  8ACF CD 47 99     	call Movimiento
1034  8AD2
1035  8AD2 3A F6 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1036  8AD5 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1037  8AD7 28 F0        	jr z,1B
1038  8AD9
1039  8AD9              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1040  8AD9              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1041  8AD9
1042  8AD9 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1043  8ADA 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1044  8ADD
1045  8ADD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1046  8ADD
1047  8ADD CD AB 9A     	call Situa_en_contador_general_de_mov_masticados
1048  8AE0
1049  8AE0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1050  8AE0              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1051  8AE0
1052  8AE0 ED 4B AC 89  	ld bc,(Contador_de_mov_masticados)
1053  8AE4 71           	ld (hl),c
1054  8AE5 23           	inc hl
1055  8AE6 70           	ld (hl),b
1056  8AE7
1057  8AE7 C9           	ret
1058  8AE8
1059  8AE8              ; -----------------------------------------------------------------------------------
1060  8AE8              ;
1061  8AE8              ;	28/02/24
1062  8AE8              ;
1063  8AE8
1064  8AE8 18 FE        Construye_album_de_borrado jr $
1065  8AEA
1066  8AEA              ; -----------------------------------------------------------------------------------
1067  8AEA              ;
1068  8AEA              ;	28/02/24
1069  8AEA              ;
1070  8AEA
1071  8AEA              Limpia_Almacen_de_scanlines_masticados
1072  8AEA
1073  8AEA 2A C1 89     	ld hl,(Puntero_de_scanlines_masticados)
1074  8AED 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1075  8AF0 A7           	and a
1076  8AF1 ED 42        	sbc hl,bc
1077  8AF3 C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1078  8AF4
1079  8AF4 E5           	push hl
1080  8AF5 C1           	pop bc
1081  8AF6
1082  8AF6 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1083  8AF9 11 01 E9     	ld de,Almacen_de_scanlines_masticados+1
1084  8AFC
1085  8AFC AF           	xor a
1086  8AFD 77           	ld (hl),a
1087  8AFE
1088  8AFE ED B0        	ldir
1089  8B00
1090  8B00 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1091  8B03 22 C1 89     	ld (Puntero_de_scanlines_masticados),hl
1092  8B06
1093  8B06 C9           	ret
1094  8B07
1095  8B07              ; -----------------------------------------------------------------------------------
1096  8B07              ;
1097  8B07              ;	28/02/24
1098  8B07              ;
1099  8B07
1100  8B07              Genera_scanlines_masticados_a_borrar
1101  8B07
1102  8B07 2A C1 89     	ld hl,(Puntero_de_scanlines_masticados)
1103  8B0A 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1104  8B0D A7           	and a
1105  8B0E ED 42        	sbc hl,bc
1106  8B10 C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1107  8B11
1108  8B11 E5           	push hl
1109  8B12 C1           	pop bc
1110  8B13
1111  8B13 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1112  8B16 11 00 E8     	ld de,Almacen_de_scanlines_masticados_a_borrar
1113  8B19 ED B0        	ldir
1114  8B1B
1115  8B1B ED 53 C3 89  	ld (Puntero_de_scanlines_masticados_a_borrar),de
1116  8B1F
1117  8B1F C9           	ret
1118  8B20
1119  8B20              ; -----------------------------------------------------------------------------------
1120  8B20              ;
1121  8B20              ;	24/02/24
1122  8B20              ;
1123  8B20              ;	INPUTS: A Y B contienen (Numero_de_malotes).
1124  8B20
1125  8B20              Genera_scanlines_masticados
1126  8B20
1127  8B20 A7           	and a
1128  8B21 C8           	ret z 												; Salimos si no hay malotes que pintar.
1129  8B22
1130  8B22 2A C5 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1131  8B25 ED 5B C1 89  	ld de,(Puntero_de_scanlines_masticados)
1132  8B29
1133  8B29 C5           1 push bc
1134  8B2A
1135  8B2A FD 2A EE 89  	ld iy,(Stack_snapshot_borrado_sc)
1136  8B2E
1137  8B2E 7A           	ld a,d
1138  8B2F 3D           	dec a
1139  8B30 FD 73 00     	ld (iy+0),e
1140  8B33 FD 77 01     	ld (iy+1),a
1141  8B36
1142  8B36              ;	Actualizamos (Stack_snapshot_borrado_sc).
1143  8B36
1144  8B36 D9           	exx
1145  8B37 FD E5        	push iy
1146  8B39 E1           	pop hl
1147  8B3A 01 06 00     	ld bc,6
1148  8B3D A7           	and a
1149  8B3E ED 4A        	adc hl,bc
1150  8B40 22 EE 89     	ld (Stack_snapshot_borrado_sc),hl
1151  8B43 D9           	exx
1152  8B44
1153  8B44 7E           	ld a,(hl)
1154  8B45 12           	ld (de),a
1155  8B46 73           	ld (hl),e
1156  8B47
1157  8B47 23           	inc hl
1158  8B48
1159  8B48 7E           	ld a,(hl)
1160  8B49 72           	ld (hl),d
1161  8B4A 1C           	inc e
1162  8B4B 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1163  8B4C              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1164  8B4C              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1165  8B4C CD 5C 8B     	call Construimos_scanlines
1166  8B4F
1167  8B4F              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1168  8B4F
1169  8B4F 01 05 00     	ld bc,5
1170  8B52 A7           	and a
1171  8B53 ED 4A        	adc hl,bc
1172  8B55 22 C5 89     	ld (Puntero_de_scanlines_en_album),hl
1173  8B58
1174  8B58 C1           	pop bc
1175  8B59
1176  8B59 10 CE        	djnz 1B
1177  8B5B
1178  8B5B C9           	ret
1179  8B5C
1180  8B5C              ; --------------------------------------------------------
1181  8B5C
1182  8B5C E5           Construimos_scanlines push hl
1183  8B5D C5           	push bc
1184  8B5E
1185  8B5E 06 0F        	ld b,15
1186  8B60 1B           	dec de
1187  8B61
1188  8B61 1A           	ld a,(de)
1189  8B62 6F           	ld l,a
1190  8B63 13           	inc de
1191  8B64 1A           	ld a,(de)
1192  8B65 67           	ld h,a 												; Puntero_de_impresión en HL.
1193  8B66
1194  8B66 13           	inc de
1195  8B67
1196  8B67 CD CC 92     1 call NextScan
1197  8B6A
1198  8B6A              ; Entramos en memoria de attr.???
1199  8B6A
1200  8B6A              ; Si es así, decrementamos H. (Repetimos el último scancline).
1201  8B6A
1202  8B6A 7C           	ld a,h
1203  8B6B FE 58        	cp $58
1204  8B6D 20 03        	jr nz,2F
1205  8B6F
1206  8B6F 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1207  8B72
1208  8B72 7D           2 ld a,l
1209  8B73 12           	ld (de),a
1210  8B74 13           	inc de
1211  8B75 7C           	ld a,h
1212  8B76 12           	ld (de),a
1213  8B77
1214  8B77 13           	inc de
1215  8B78
1216  8B78 24           	inc h
1217  8B79 25           	dec h
1218  8B7A 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1219  8B7C
1220  8B7C 10 E9        	djnz 1B 											; 16 scanlines generados.
1221  8B7E
1222  8B7E ED 53 C1 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1223  8B82
1224  8B82 C1           	pop bc
1225  8B83 E1           	pop hl
1226  8B84
1227  8B84 C9           	ret
1228  8B85
1229  8B85              ; -----------------------------------------------------------------------------------
1230  8B85              ;
1231  8B85              ;	28/12/23
1232  8B85              ;
1233  8B85              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1234  8B85              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1235  8B85
1236  8B85              Guarda_movimiento_masticado
1237  8B85
1238  8B85 ED 73 E4 89  	ld (Stack),sp
1239  8B89 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1240  8B8D
1241  8B8D E5           	push hl
1242  8B8E DD E5            push ix
1243  8B90 FD E5            push iy
1244  8B92
1245  8B92 ED 7B E4 89      ld sp,(Stack)
1246  8B96
1247  8B96 2A AC 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1248  8B99 23           	inc hl
1249  8B9A 22 AC 89     	ld (Contador_de_mov_masticados),hl
1250  8B9D
1251  8B9D CD A1 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1252  8BA0              ;															; _ el (Contador_de_mov_masticados).
1253  8BA0 C9               ret
1254  8BA1
1255  8BA1              ; --------------------------------------------------------------------------------------------------------------
1256  8BA1              ;
1257  8BA1              ;	12/1/24
1258  8BA1              ;
1259  8BA1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1260  8BA1
1261  8BA1              Actualiza_Puntero_de_almacen_de_mov_masticados
1262  8BA1
1263  8BA1 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1264  8BA4 01 06 00     	ld bc,6
1265  8BA7 A7           	and a
1266  8BA8 ED 4A        	adc hl,bc
1267  8BAA 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1268  8BAD C9           	ret
1269  8BAE
1270  8BAE              ; --------------------------------------------------------------------------------------------------------------
1271  8BAE              ;
1272  8BAE              ;	15/01/24
1273  8BAE              ;
1274  8BAE              ;	Cargamos los registros_
1275  8BAE              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1276  8BAE              ;
1277  8BAE              ;	HL contiene la dirección de la rutina de impresión.
1278  8BAE              ;	IX contiene el puntero de impresión.
1279  8BAE              ;	IY contiene (Puntero_objeto).
1280  8BAE
1281  8BAE
1282  8BAE ED 73 E4 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1283  8BB2 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1284  8BB6
1285  8BB6 FD E1        	pop iy
1286  8BB8 DD E1        	pop ix
1287  8BBA E1           	pop hl
1288  8BBB
1289  8BBB ED 73 AA 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1290  8BBF
1291  8BBF ED 7B E4 89  	ld sp,(Stack)
1292  8BC3
1293  8BC3 C9           	ret
1294  8BC4
1295  8BC4              ; --------------------------------------------------------------------------------------------------------------
1296  8BC4              ;
1297  8BC4              ;	28/12/23
1298  8BC4              ;
1299  8BC4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1300  8BC4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1301  8BC4
1302  8BC4              Guarda_foto_entidad_a_pintar
1303  8BC4
1304  8BC4 3A AE 89     	ld a,(Ctrl_0)
1305  8BC7 CB 77        	bit 6,a
1306  8BC9 28 04        	jr z,5F
1307  8BCB
1308  8BCB              ;	Guarda la foto de Amadeus.
1309  8BCB
1310  8BCB              ;	call Draw
1311  8BCB              ;	call Guarda_movimiento_masticado	;! Provisional
1312  8BCB CD BF 80     	call Guarda_foto_registros
1313  8BCE C9           	ret
1314  8BCF
1315  8BCF              ; ENTIDADES!
1316  8BCF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1317  8BCF
1318  8BCF 3A F6 89     5 ld a,(Ctrl_3)
1319  8BD2 CB 5F        	bit 3,a
1320  8BD4 28 01        	jr z,1F
1321  8BD6
1322  8BD6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1323  8BD6
1324  8BD6              4
1325  8BD6              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1326  8BD6 C9           	ret
1327  8BD7
1328  8BD7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1329  8BD7
1330  8BD7 3A F6 89     1 ld a,(Ctrl_3)
1331  8BDA CB 57        	bit 2,a
1332  8BDC 20 10        	jr nz,6F
1333  8BDE
1334  8BDE              ; Entidad guía o fantasma ???
1335  8BDE
1336  8BDE 3A B3 89     	ld a,(Ctrl_2)
1337  8BE1 CB 6F        	bit 5,a
1338  8BE3 20 10        	jr nz,3F
1339  8BE5
1340  8BE5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1341  8BE5
1342  8BE5 18 EF        	jr 4B
1343  8BE7
1344  8BE7              ; ENTIDAD_GUÍA:
1345  8BE7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1346  8BE7              ; _guardando "movimientos_masticados".
1347  8BE7
1348  8BE7 3A F6 89     2 ld a,(Ctrl_3)
1349  8BEA CB 57        	bit 2,a
1350  8BEC 28 07        	jr z,3F
1351  8BEE
1352  8BEE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1353  8BEE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1354  8BEE
1355  8BEE CB 97        6 res 2,a
1356  8BF0 CB DF        	set 3,a
1357  8BF2 32 F6 89     	ld (Ctrl_3),a
1358  8BF5
1359  8BF5
1360  8BF5              ;	Esto sólo lo ejecuta una entidad guía.
1361  8BF5
1362  8BF5 CD D3 8F     3 	call Draw
1363  8BF8 CD 85 8B     	call Guarda_movimiento_masticado
1364  8BFB CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1365  8BFE
1366  8BFE              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1367  8BFE              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1368  8BFE
1369  8BFE              ;	call Convierte_guia_en_fantasma
1370  8BFE C9           	ret
1371  8BFF
1372  8BFF              ; *************************************************************************************************************************************************************
1373  8BFF              ;
1374  8BFF              ; 8/1/23
1375  8BFF              ;
1376  8BFF              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1377  8BFF              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1378  8BFF              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1379  8BFF
1380  8BFF              ; Destruye HL y DE !!!!!
1381  8BFF
1382  8BFF              Inicia_punteros_de_cajas
1383  8BFF
1384  8BFF 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1385  8C02 CD 97 8C         call Extrae_address
1386  8C05 22 D6 89         ld (Puntero_store_caja),hl
1387  8C08 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1388  8C0B 22 DA 89     	ld (Indice_restore_caja),hl
1389  8C0E CD 97 8C     	call Extrae_address
1390  8C11 22 D8 89     	ld (Puntero_restore_caja),hl
1391  8C14 C9               ret
1392  8C15
1393  8C15              ; *************************************************************************************************************************************************************
1394  8C15              ;
1395  8C15              ; 8/1/23
1396  8C15              ;
1397  8C15              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1398  8C15
1399  8C15 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1400  8C18 22 F9 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1401  8C1B C9           	ret
1402  8C1C 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1403  8C1F 22 FB 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1404  8C22 C9           	ret
1405  8C23
1406  8C23              ; -------------------------------------------------------------------------------------------------------------
1407  8C23              ;
1408  8C23              ; 21/9/23
1409  8C23              ;
1410  8C23
1411  8C23              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1412  8C23
1413  8C23              Limpia_album_Amadeus
1414  8C23
1415  8C23 21 02 81     	ld hl,Album_de_fotos_Amadeus
1416  8C26 7E           	ld a,(hl)
1417  8C27 A7           	and a
1418  8C28 C8           	ret z
1419  8C29
1420  8C29 21 02 81     	ld hl,Album_de_fotos_Amadeus
1421  8C2C 11 03 81     	ld de,Album_de_fotos_Amadeus+1
1422  8C2F 01 0B 00     	ld bc,11
1423  8C32 AF           	xor a
1424  8C33 77           	ld (hl),a
1425  8C34 ED B0        	ldir
1426  8C36
1427  8C36 21 02 81     	ld hl,Album_de_fotos_Amadeus
1428  8C39 22 F4 89     	ld (End_Snapshot_Amadeus),hl
1429  8C3C
1430  8C3C C9           	ret
1431  8C3D
1432  8C3D 21 A2 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1433  8C40 11 A3 89     	ld de,Variables_de_borrado+1
1434  8C43 01 05 00     	ld bc,5
1435  8C46 AF           	xor a
1436  8C47 77           	ld (hl),a
1437  8C48 ED B0        	ldir
1438  8C4A C9           	ret
1439  8C4B
1440  8C4B              ; -------------------------------------------------------------------------------------------------------------
1441  8C4B              ;
1442  8C4B              ; 	21/02/24
1443  8C4B              ;
1444  8C4B              ;	MODIFICA: AF,HL,BC,DE
1445  8C4B              ;
1446  8C4B              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1447  8C4B              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1448  8C4B
1449  8C4B              Calcula_numero_de_malotes
1450  8C4B
1451  8C4B 21 00 80     	ld hl,Album_de_fotos
1452  8C4E EB           	ex de,hl
1453  8C4F 2A EA 89     	ld hl,(Stack_snapshot)
1454  8C52
1455  8C52 06 00        	ld b,0
1456  8C54 7D           	ld a,l
1457  8C55 93           	sub e
1458  8C56 28 07        	jr z,1F
1459  8C58
1460  8C58              ; Nº de malotes no es "0".
1461  8C58
1462  8C58 D6 06        2 sub 6
1463  8C5A 04           	inc b
1464  8C5B A7           	and a
1465  8C5C 20 FA        	jr nz,2B
1466  8C5E 78           	ld a,b
1467  8C5F
1468  8C5F 32 DF 89     1 ld (Numero_de_malotes),a
1469  8C62 C9           	ret
1470  8C63
1471  8C63              ; -------------------------------------------------------------------------------------------------------------
1472  8C63              ;
1473  8C63              ; 8/9/23
1474  8C63              ;
1475  8C63
1476  8C63              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1477  8C63              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1478  8C63
1479  8C63              Calcula_malotes_Amadeus
1480  8C63
1481  8C63 21 02 81     	ld hl,Album_de_fotos_Amadeus
1482  8C66 EB           	ex de,hl
1483  8C67 2A F4 89     	ld hl,(End_Snapshot_Amadeus)
1484  8C6A
1485  8C6A 7C           	ld a,h
1486  8C6B A7           	and a
1487  8C6C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1488  8C6E
1489  8C6E 06 00        	ld b,0
1490  8C70 7D           	ld a,l
1491  8C71 93           	sub e
1492  8C72 28 07        	jr z,1F
1493  8C74
1494  8C74              ; Nº de malotes no es "0".
1495  8C74
1496  8C74 D6 06        2 sub 6
1497  8C76 04           	inc b
1498  8C77 A7           	and a
1499  8C78 20 FA        	jr nz,2B
1500  8C7A 78           	ld a,b
1501  8C7B
1502  8C7B 32 DF 89     1 ld (Numero_de_malotes),a
1503  8C7E C9           	ret
1504  8C7F
1505  8C7F              ; -------------------------------------------------------------------------------------------------------------
1506  8C7F              ;
1507  8C7F              ; 28/2/23
1508  8C7F              ;
1509  8C7F
1510  8C7F              Calcula_numero_de_disparotes
1511  8C7F
1512  8C7F 21 AC 80     	ld hl,Album_de_fotos_disparos
1513  8C82 EB           	ex de,hl
1514  8C83 2A F2 89     	ld hl,(End_Snapshot_disparos)
1515  8C86
1516  8C86 06 00        	ld b,0
1517  8C88 7D           	ld a,l
1518  8C89 93           	sub e
1519  8C8A 28 07        	jr z,1F
1520  8C8C
1521  8C8C              ; Nº de malotes no es "0".
1522  8C8C
1523  8C8C D6 06        2 sub 6
1524  8C8E 04           	inc b
1525  8C8F A7           	and a
1526  8C90 20 FA        	jr nz,2B
1527  8C92 78           	ld a,b
1528  8C93
1529  8C93 32 F8 89     1 ld (Numero_de_disparotes),a
1530  8C96 C9           	ret
1531  8C97
1532  8C97              ; *************************************************************************************************************************************************************
1533  8C97              ;
1534  8C97              ; 20/10/22
1535  8C97              ;
1536  8C97              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1537  8C97              ;
1538  8C97              ; Destruye el puntero y DE !!!!!
1539  8C97
1540  8C97 5E           Extrae_address ld e,(hl)
1541  8C98 23           	inc hl
1542  8C99 56           	ld d,(hl)
1543  8C9A 2B           	dec hl
1544  8C9B EB           	ex de,hl
1545  8C9C C9           	ret
1546  8C9D
1547  8C9D              ; *************************************************************************************************************************************************************
1548  8C9D              ;
1549  8C9D              ;	20/1/24
1550  8C9D              ;
1551  8C9D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1552  8C9D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1553  8C9D              ;
1554  8C9D              ;   Destruye HL y BC !!!!!,
1555  8C9D              ;
1556  8C9D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1557  8C9D              ;					"0" ..... Izquierda.
1558  8C9D
1559  8C9D              Inicia_Puntero_objeto
1560  8C9D
1561  8C9D 3A A0 89     	ld a,(Cuad_objeto)
1562  8CA0 E6 01        	and 1
1563  8CA2 F5           	push af
1564  8CA3 CC BF 8C     	call z,Inicia_puntero_objeto_izq
1565  8CA6 F1           	pop af
1566  8CA7 C8           	ret z
1567  8CA8 CD AC 8C     	call Inicia_puntero_objeto_der
1568  8CAB C9           	ret
1569  8CAC
1570  8CAC              ; Arrancamos desde la parte izquierda de la pantalla.
1571  8CAC              ; Iniciamos (Indice_Sprite_der).
1572  8CAC
1573  8CAC 2A 96 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1574  8CAF 22 9A 89     	ld (Puntero_DESPLZ_der),hl
1575  8CB2 CD 97 8C     	call Extrae_address
1576  8CB5 22 90 89     	ld (Puntero_objeto),hl
1577  8CB8
1578  8CB8 2A 98 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1579  8CBB 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1580  8CBE C9           	ret
1581  8CBF
1582  8CBF              ; Arrancamos desde la parte derecha de la pantalla.
1583  8CBF              ; Iniciamos (Indice_Sprite_izq).
1584  8CBF
1585  8CBF 2A 98 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1586  8CC2 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1587  8CC5 CD 97 8C     	call Extrae_address
1588  8CC8 22 90 89     	ld (Puntero_objeto),hl
1589  8CCB
1590  8CCB 2A 96 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1591  8CCE 22 9A 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1592  8CD1 C9           	ret
1593  8CD2
1594  8CD2              ; **************************************************************************************************
1595  8CD2              ;
1596  8CD2              ;	31/01/24
1597  8CD2              ;
1598  8CD2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1599  8CD2
1600  8CD2              Restore_entidad
1601  8CD2
1602  8CD2 2A D6 89     	ld hl,(Puntero_store_caja)
1603  8CD5 11 8B 89     	ld de,Bandeja_DRAW
1604  8CD8 7E           	ld a,(hl)
1605  8CD9 12           	ld (de),a
1606  8CDA 23           	inc hl 											; (Tipo).
1607  8CDB
1608  8CDB 11 92 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1609  8CDE 01 02 00     	ld bc,2
1610  8CE1 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1611  8CE3
1612  8CE3 13           	inc de
1613  8CE4 7E           	ld a,(hl)
1614  8CE5 12           	ld (de),a 										; Transferimos (Attr).
1615  8CE6 23           	inc hl
1616  8CE7
1617  8CE7 11 A1 89     	ld de,Impacto
1618  8CEA
1619  8CEA 7E           	ld a,(hl)
1620  8CEB 12           	ld (de),a 										; Transferimos (Impacto).
1621  8CEC 23           	inc hl
1622  8CED
1623  8CED 13           	inc de
1624  8CEE
1625  8CEE 01 06 00     	ld bc,6
1626  8CF1 ED B0        	ldir
1627  8CF3
1628  8CF3 01 07 00     	ld bc,7
1629  8CF6 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1630  8CF8              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1631  8CF8 11 B3 89     	ld de,Ctrl_2
1632  8CFB
1633  8CFB 7E           	ld a,(hl)
1634  8CFC 12           	ld (de),a 										; Transferimos (Ctrl_2).
1635  8CFD
1636  8CFD C9           	ret
1637  8CFE
1638  8CFE              ; **************************************************************************************************
1639  8CFE              ;
1640  8CFE              ;	08/05/23
1641  8CFE              ;
1642  8CFE              ;	Incrementamos los dos punteros de entidades. (+1).
1643  8CFE
1644  8CFE              Incrementa_punteros_de_cajas
1645  8CFE
1646  8CFE 2A D8 89     	ld hl,(Puntero_restore_caja)
1647  8D01 22 D6 89     	ld (Puntero_store_caja),hl
1648  8D04 2A DA 89     	ld hl,(Indice_restore_caja)
1649  8D07 23           	inc hl
1650  8D08 23           	inc hl
1651  8D09 22 DA 89     	ld (Indice_restore_caja),hl
1652  8D0C CD 97 8C         call Extrae_address
1653  8D0F 22 D8 89         ld (Puntero_restore_caja),hl
1654  8D12 C9               ret
1655  8D13
1656  8D13              ; **************************************************************************************************
1657  8D13              ;
1658  8D13              ;	21/12/23
1659  8D13              ;
1660  8D13              ;	Restore_Amadeus
1661  8D13              ;
1662  8D13              ;	Cargamos en DRAW los parámetros de Amadeus.
1663  8D13              ;
1664  8D13
1665  8D13 E5           Restore_Amadeus	push hl
1666  8D14 D5           	push de
1667  8D15 C5            	push bc
1668  8D16 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1669  8D19 11 8B 89     	ld de,Bandeja_DRAW
1670  8D1C 01 2A 00     	ld bc,42
1671  8D1F ED B0        	ldir
1672  8D21 C1           	pop bc
1673  8D22 D1           	pop de
1674  8D23 E1           	pop hl
1675  8D24 C9           	ret
1676  8D25
1677  8D25              ; *************************************************************************************************************************************************************
1678  8D25              ;
1679  8D25              ;	21/12/23
1680  8D25              ;
1681  8D25              ;	Store_Amadeus
1682  8D25              ;
1683  8D25              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1684  8D25              ;
1685  8D25              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1686  8D25              ;
1687  8D25              ;	DESTRUYE: HL y BC y DE.
1688  8D25
1689  8D25 21 8B 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1690  8D28 01 2A 00     	ld bc,42
1691  8D2B ED B0        	ldir
1692  8D2D C9           	ret
1693  8D2E
1694  8D2E              ; -----------------------------------------------------------
1695  8D2E              ;
1696  8D2E              ;	21/12/23
1697  8D2E              ;
1698  8D2E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1699  8D2E              ;
1700  8D2E              ;	Destruye: HL,BC,DE,A
1701  8D2E
1702  8D2E 21 8B 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1703  8D31 01 29 00     	ld bc,41
1704  8D34 AF           	xor a
1705  8D35 77           	ld (hl),a
1706  8D36 11 8C 89     	ld de,Bandeja_DRAW+1
1707  8D39 ED B0        	ldir
1708  8D3B C9           	ret
1709  8D3C
1710  8D3C              ; -----------------------------------------------------------
1711  8D3C
1712  8D3C              ; Teclado.
1713  8D3C
1714  8D3C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1715  8D3E DB FE        	in a,($fe)
1716  8D40 E6 01        	and $01
1717  8D42 28 02        	jr z,1f
1718  8D44 18 F6        	jr Pulsa_ENTER
1719  8D46 C9           1 ret
1720  8D47
1721  8D47              ; **************************************************************************************************
1722  8D47              ;
1723  8D47              ; Temporización.
1724  8D47
1725  8D47              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1726  8D47              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1727  8D47              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1728  8D47              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1729  8D47
1730  8D47              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1731  8D47              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1732  8D47              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1733  8D47
1734  8D47              ; A partir de $4f61 no hace falta DELAY.
1735  8D47
1736  8D47              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1737  8D47
1738  8D47 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1739  8D4A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1740  8D4B 78           	LD A,B
1741  8D4C A7           	AND A
1742  8D4D 20 FB        	JR NZ,wait
1743  8D4F C9           	RET
1744  8D50
1745  8D50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1746  8D50              ;
1747  8D50              ;	5/3/23
1748  8D50              ;
1749  8D50              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1750  8D50
1751  8D50              Movimiento_Amadeus
1752  8D50
1753  8D50              ; Disparo.
1754  8D50
1755  8D50 3A 0E 8A     	ld a,(Disparo_Amadeus)
1756  8D53 A7           	and a
1757  8D54 20 02        	jr nz,1F
1758  8D56 18 15        	jr 2F
1759  8D58
1760  8D58 3E F7        1 ld a,$f7													; "5" para disparar.
1761  8D5A DB FE        	in a,($fe)
1762  8D5C E6 10        	and $10
1763  8D5E
1764  8D5E F5           	push af
1765  8D5F CC C1 9A     	call z,Genera_disparo
1766  8D62 F1           	pop af
1767  8D63 20 08        	jr nz,2F
1768  8D65
1769  8D65 3A 0E 8A     	ld a,(Disparo_Amadeus)
1770  8D68 EE 01        	xor 1
1771  8D6A 32 0E 8A     	ld (Disparo_Amadeus),a
1772  8D6D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1773  8D6F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1774  8D71 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1775  8D73 CC 94 97         call z,Mov_left											;			"			"			"			"			"			"			"			"
1776  8D76
1777  8D76 3E F7        	ld a,$f7
1778  8D78 DB FE        	in a,($fe)
1779  8D7A E6 01        	and $01
1780  8D7C C8           	ret z
1781  8D7D
1782  8D7D 3E F7        	ld a,$f7
1783  8D7F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1784  8D81 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1785  8D83 CC 71 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1786  8D86 C9           	ret
1787  8D87
1788  8D87              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1789  8D87              ;
1790  8D87              ;	Rutina provisional para que los malotes cagen balas.
1791  8D87
1792  8D87              Detecta_disparo_entidad
1793  8D87
1794  8D87 3A 11 8A     	ld a,(Disparo_entidad)
1795  8D8A A7           	and a
1796  8D8B C8           	ret z
1797  8D8C
1798  8D8C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1799  8D8C
1800  8D8C              ;	ld a,$7f				; Detecta SPACE.
1801  8D8C              ;	in a,($fe)
1802  8D8C              ;	and 1
1803  8D8C              ;	ret nz
1804  8D8C
1805  8D8C CD C1 9A     	call Genera_disparo
1806  8D8F C9           	ret
1807  8D90
1808  8D90              ; ----------------------------------------------------------------------
1809  8D90              ;
1810  8D90              ;	8/9/23
1811  8D90
1812  8D90 2A F4 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1813  8D93 2B            	dec hl
1814  8D94 7E           	ld a,(hl)
1815  8D95 A7           	and a
1816  8D96 C8           	ret z										; Salimos si es álbum está vacío.
1817  8D97
1818  8D97 11 A7 89     	ld de,Variables_de_borrado+5
1819  8D9A 01 06 00     	ld bc,6
1820  8D9D ED B8        	lddr
1821  8D9F C9           	ret
1822  8DA0
1823  8DA0              ; ----------------------------------------------------------------------
1824  8DA0              ;
1825  8DA0              ;	9/9/23
1826  8DA0
1827  8DA0              Repone_datos_de_borrado_Amadeus
1828  8DA0
1829  8DA0 21 A2 89     	ld hl,Variables_de_borrado
1830  8DA3 11 02 81     	ld de,Album_de_fotos_Amadeus
1831  8DA6 01 06 00     	ld bc,6
1832  8DA9 ED B0        	ldir
1833  8DAB
1834  8DAB EB           	ex de,hl
1835  8DAC 22 F4 89     	ld (End_Snapshot_Amadeus),hl
1836  8DAF
1837  8DAF C9           	ret
1838  8DB0
1839  8DB0              ; ----------------------------------------------------------------------
1840  8DB0              ;
1841  8DB0              ;	27/10/23
1842  8DB0              ;
1843  8DB0
1844  8DB0              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1845  8DB0              ;	_ Album_de_fotos correspondiente.
1846  8DB0
1847  8DB0              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1848  8DB0              ;	_ durante el proceso de escritura.
1849  8DB0
1850  8DB0              Repone_datos_de_borrado
1851  8DB0
1852  8DB0 ED 5B EA 89  	ld de,(Stack_snapshot)
1853  8DB4 21 A2 89     	ld hl,Variables_de_borrado
1854  8DB7 01 06 00     	ld bc,6
1855  8DBA ED B0        	ldir
1856  8DBC
1857  8DBC EB           	ex de,hl
1858  8DBD 22 EA 89     	ld (Stack_snapshot),hl
1859  8DC0
1860  8DC0 C9           	ret
1861  8DC1
1862  8DC1              ; --------------------------------------------------------------------------------------
1863  8DC1
1864  8DC1              Pinta_Amadeus
1865  8DC1
1866  8DC1 CD 63 8C        	call Calcula_malotes_Amadeus
1867  8DC4 CD 6C 93     	call Extrae_foto_Amadeus
1868  8DC7 CD 23 8C     	call Limpia_album_Amadeus
1869  8DCA
1870  8DCA C9           	ret
1871  8DCB
1872  8DCB              ; -----------------------------------------------------------------------------------
1873  8DCB              ;
1874  8DCB              ;	10/12/23
1875  8DCB              ;
1876  8DCB              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1877  8DCB
1878  8DCB              Actualiza_relojes
1879  8DCB
1880  8DCB 3A F6 89     	ld a,(Ctrl_3)
1881  8DCE CB 47        	bit 0,a
1882  8DD0 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1883  8DD1
1884  8DD1 21 09 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1885  8DD4 34           	inc (hl)
1886  8DD5
1887  8DD5 34           	inc (hl)
1888  8DD6 35           	dec (hl)
1889  8DD7 C0           	ret nz
1890  8DD8
1891  8DD8 21 0A 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1892  8DDB 34           	inc (hl)
1893  8DDC C9           	ret
1894  8DDD
1895  8DDD              ; ---------------------------------------------------------------
1896  8DDD
1897  8DDD              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DDD              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DDD              ;
   3+ 8DDD              ;   19/1/24
   4+ 8DDD              ;
   5+ 8DDD              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DDD              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DDD              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DDD              ;	_ de la 1ª entidad del Nivel.
   9+ 8DDD              ;
  10+ 8DDD              ;	MODIFICA: HL,DE y A.
  11+ 8DDD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DDD
  13+ 8DDD              Inicializa_Nivel
  14+ 8DDD
  15+ 8DDD 2A 15 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DE0 CD 97 8C     	call Extrae_address
  17+ 8DE3 7E           	ld a,(hl)
  18+ 8DE4 32 DC 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DE7 23           	inc hl
  20+ 8DE8 CD F5 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DEB 22 17 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DEE CD FE 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8DF1              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DF1 CD 0F 8E     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8DF4 C9           	ret
  26+ 8DF5
  27+ 8DF5              ; ----------------------
  28+ 8DF5
  29+ 8DF5 11 B5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8DF8 01 04 00     	ld bc,4
  31+ 8DFB ED B0        	ldir
  32+ 8DFD C9           	ret
  33+ 8DFE
  34+ 8DFE 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8DFF CD 4F 8F         call Calcula_salto_en_BC
  36+ 8E02 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8E05 A7               and a
  38+ 8E06 ED 4A            adc hl,bc
  39+ 8E08 CD 97 8C         call Extrae_address
  40+ 8E0B 22 C7 89         ld (Puntero_indice_mov),hl
  41+ 8E0E C9               ret
  42+ 8E0F
  43+ 8E0F 3A 8B 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8E12 CD 4F 8F     	call Calcula_salto_en_BC
  45+ 8E15 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8E18 A7               and a
  47+ 8E19 ED 4A            adc hl,bc
  48+ 8E1B CD 97 8C         call Extrae_address
  49+ 8E1E 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8E21 C9           	ret
  51+ 8E22
  52+ 8E22              ;---------------------------------------------------------------------------------------------------------------
  53+ 8E22              ;
  54+ 8E22              ;   5/1/24
  55+ 8E22              ;
  56+ 8E22              ;	Destruye A,BC,HL,DE
  57+ 8E22
  58+ 8E22              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8E22              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8E22
  61+ 8E22              Inicia_Entidades
  62+ 8E22
  63+ 8E22              ; Preparamos los punteros de las cajas de entidades:
  64+ 8E22
  65+ 8E22 CD FF 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8E25              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8E25 CD B6 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8E28
  69+ 8E28 2A 17 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8E2B
  71+ 8E2B 22 17 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8E2E
  73+ 8E2E CD FD 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E31
  75+ 8E31 2A 17 8A     	ld hl,(Datos_de_nivel)
  76+ 8E34
  77+ 8E34              ; En este punto:
  78+ 8E34              ;
  79+ 8E34              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E34              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E34
  82+ 8E34 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E35
  84+ 8E35 7E           	ld a,(hl)
  85+ 8E36 CD 72 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E39
  87+ 8E39 CD 61 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E3C
  89+ 8E3C              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E3C
  91+ 8E3C CD 1F 8F     	call Busca_mov_masticados_segun_tipo
  92+ 8E3F
  93+ 8E3F A7           	and a
  94+ 8E40 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E42
  96+ 8E42              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E42
  98+ 8E42              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E42              ;	_ de este tipo de entidad.
 100+ 8E42
 101+ 8E42 CD AB 9A     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E45 CD B8 9A     	call Transfiere_datos_de_contadores
 103+ 8E48
 104+ 8E48 18 06        	jr 4F
 105+ 8E4A
 106+ 8E4A CD BF 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E4D
 108+ 8E4D              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E4D              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E4D              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E4D              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E4D              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E4D
 114+ 8E4D CD DD 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E50              ;																; _ Mov_masticados ya generados.
 116+ 8E50 CD 8C 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E53
 118+ 8E53              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E53
 120+ 8E53 2A A8 89     	ld hl,(Puntero_de_impresion)
 121+ 8E56 CD C2 9F     	call Genera_coordenadas
 122+ 8E59 CD 88 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8E5C CD 96 8E     	call Limpiamos_bandeja_DRAW
 124+ 8E5F CD FE 8C     	call Incrementa_punteros_de_cajas
 125+ 8E62
 126+ 8E62              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8E62              ; _ entidad del Nivel.
 128+ 8E62
 129+ 8E62 3A F7 89     	ld a,(Ctrl_4)
 130+ 8E65 E6 F0        	and $f0
 131+ 8E67 32 F7 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8E6A
 133+ 8E6A              ; Siguiente entidad del Nivel.
 134+ 8E6A
 135+ 8E6A 2A 17 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8E6D 23           	inc hl 														; _ entidad del Nivel.
 137+ 8E6E
 138+ 8E6E C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8E6F
 140+ 8E6F 10 BA        	djnz 2B
 141+ 8E71
 142+ 8E71 C9           	ret
 143+ 8E72
 144+ 8E72              ; ---------------------------------------------------------------------
 145+ 8E72              ;
 146+ 8E72              ;	10/02/24
 147+ 8E72              ;
 148+ 8E72              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8E72              ;
 150+ 8E72              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8E72
 152+ 8E72              Definicion_segun_tipo
 153+ 8E72
 154+ 8E72 CD 4F 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8E75 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8E78 CD 57 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8E7B C9           	ret
 158+ 8E7C
 159+ 8E7C              ; ---------------------------------------------------------------------
 160+ 8E7C              ;
 161+ 8E7C              ;	30/01/24
 162+ 8E7C
 163+ 8E7C
 164+ 8E7C              Store_Restore_cajas
 165+ 8E7C
 166+ 8E7C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8E7C
 168+ 8E7C 2A A8 89     	ld hl,(Puntero_de_impresion)
 169+ 8E7F CD C2 9F     	call Genera_coordenadas
 170+ 8E82
 171+ 8E82 CD 88 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8E85 CD 96 8E     	call Limpiamos_bandeja_DRAW
 173+ 8E88
 174+ 8E88              ; 	Entidad_sospechosa. 20/4/23
 175+ 8E88
 176+ 8E88              ;	ld a,(Impacto)
 177+ 8E88              ;	and a
 178+ 8E88              ;	jr z,1F
 179+ 8E88
 180+ 8E88              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8E88              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8E88              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8E88              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8E88              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8E88
 186+ 8E88
 187+ 8E88              ;1 ld hl,(Puntero_restore_caja)
 188+ 8E88              ;	ld a,(hl)
 189+ 8E88              ;	and a
 190+ 8E88              ;	push af
 191+ 8E88              ;	jr z,2F
 192+ 8E88
 193+ 8E88              ;	di
 194+ 8E88              ;	ld de,Bandeja_DRAW
 195+ 8E88              ;	ld bc,42
 196+ 8E88              ;	ldir
 197+ 8E88              ;	ei
 198+ 8E88
 199+ 8E88 CD FE 8C     2 call Incrementa_punteros_de_cajas
 200+ 8E8B C9           	ret
 201+ 8E8C
 202+ 8E8C
 203+ 8E8C              ; ---------------------------------------------------------------------
 204+ 8E8C              ;
 205+ 8E8C              ;	29/01/24
 206+ 8E8C
 207+ 8E8C              Guarda_foto_de_mov_masticado
 208+ 8E8C
 209+ 8E8C CD AE 8B     	call Cargamos_registros_con_mov_masticado
 210+ 8E8F CD BF 80     	call Guarda_foto_registros
 211+ 8E92              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 212+ 8E92              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 213+ 8E92              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 214+ 8E92              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 8E92
 216+ 8E92 CD A1 8E     	call Decrementa_Contador_de_mov_masticados
 217+ 8E95 C9           	ret
 218+ 8E96
 219+ 8E96              ; ---------------------------------------------------------------------
 220+ 8E96              ;
 221+ 8E96              ;	25/01/24
 222+ 8E96
 223+ 8E96 21 8B 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 224+ 8E99 06 2A        	ld b,42
 225+ 8E9B AF           	xor a
 226+ 8E9C
 227+ 8E9C 77           1 ld (hl),a
 228+ 8E9D 23           	inc hl
 229+ 8E9E 10 FC        	djnz 1B
 230+ 8EA0
 231+ 8EA0 C9           	ret
 232+ 8EA1
 233+ 8EA1              ; ---------------------------------------------------------------------
 234+ 8EA1              ;
 235+ 8EA1              ;	22/01/24
 236+ 8EA1
 237+ 8EA1 2A AC 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 238+ 8EA4 2B           	dec hl
 239+ 8EA5
 240+ 8EA5 24           	inc h
 241+ 8EA6 25           	dec h
 242+ 8EA7
 243+ 8EA7 FC AE 8E     	call m,Reinicia_entidad_maliciosa
 244+ 8EAA
 245+ 8EAA              ;	jr nz,1F
 246+ 8EAA
 247+ 8EAA              ;	inc l
 248+ 8EAA              ;	dec l
 249+ 8EAA
 250+ 8EAA              ;	di
 251+ 8EAA              ;	jr z,$
 252+ 8EAA              ;	ei
 253+ 8EAA
 254+ 8EAA 22 AC 89     1 ld (Contador_de_mov_masticados),hl
 255+ 8EAD C9           	ret
 256+ 8EAE
 257+ 8EAE              ; ---------------------------------------------------------------------
 258+ 8EAE              ;
 259+ 8EAE              ;	10/2/24
 260+ 8EAE
 261+ 8EAE              Reinicia_entidad_maliciosa
 262+ 8EAE
 263+ 8EAE              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 264+ 8EAE
 265+ 8EAE CD AB 9A     	call Situa_en_contador_general_de_mov_masticados
 266+ 8EB1 CD B8 9A     	call Transfiere_datos_de_contadores
 267+ 8EB4
 268+ 8EB4              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 269+ 8EB4
 270+ 8EB4 3A 8B 89     	ld a,(Tipo)
 271+ 8EB7 CD 72 8E     	call Definicion_segun_tipo
 272+ 8EBA
 273+ 8EBA E5           	push hl
 274+ 8EBB DD E1        	pop ix
 275+ 8EBD
 276+ 8EBD DD 6E 0B     	ld l,(ix+11)
 277+ 8EC0 DD 66 0C     	ld h,(ix+12)
 278+ 8EC3
 279+ 8EC3 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 280+ 8EC6
 281+ 8EC6              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 282+ 8EC6              ;	Queremos pintar la entidad en su posición de inicio.
 283+ 8EC6
 284+ 8EC6 2A EA 89     	ld hl,(Stack_snapshot)
 285+ 8EC9 01 06 00     	ld bc,6
 286+ 8ECC A7           	and a
 287+ 8ECD ED 42        	sbc hl,bc
 288+ 8ECF 22 EA 89     	ld (Stack_snapshot),hl
 289+ 8ED2
 290+ 8ED2 CD AE 8B     	call Cargamos_registros_con_mov_masticado
 291+ 8ED5 CD BF 80     	call Guarda_foto_registros
 292+ 8ED8
 293+ 8ED8 2A AC 89     	ld hl,(Contador_de_mov_masticados)
 294+ 8EDB 2B           	dec hl
 295+ 8EDC
 296+ 8EDC C9           	ret
 297+ 8EDD
 298+ 8EDD
 299+ 8EDD
 300+ 8EDD
 301+ 8EDD              ; ---------------------------------------------------------------------
 302+ 8EDD              ;
 303+ 8EDD              ;	22/01/24
 304+ 8EDD
 305+ 8EDD 21 F7 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 306+ 8EE0 CB 46        	bit 0,(hl)
 307+ 8EE2 20 0D        	jr nz,1F
 308+ 8EE4 CB 4E        	bit 1,(hl)
 309+ 8EE6 20 0C        	jr nz,2F
 310+ 8EE8 CB 56        	bit 2,(hl)
 311+ 8EEA 20 0B        	jr nz,3F
 312+ 8EEC CB 5E        	bit 3,(hl)
 313+ 8EEE 20 0A        	jr nz,4F
 314+ 8EF0 C9           	ret
 315+ 8EF1
 316+ 8EF1 CB E6        1 set 4,(hl)
 317+ 8EF3 C9           	ret
 318+ 8EF4 CB EE        2 set 5,(hl)
 319+ 8EF6 C9           	ret
 320+ 8EF7 CB F6        3 set 6,(hl)
 321+ 8EF9 C9           	ret
 322+ 8EFA CB FE        4 set 7,(hl)
 323+ 8EFC C9           	ret
 324+ 8EFD
 325+ 8EFD              ; ---------------------------------------------------------------------
 326+ 8EFD              ;
 327+ 8EFD              ;	23/01/24
 328+ 8EFD              ;
 329+ 8EFD              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 330+ 8EFD              ;
 331+ 8EFD              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 332+ 8EFD              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 333+ 8EFD              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 334+ 8EFD              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 335+ 8EFD
 336+ 8EFD              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 337+ 8EFD
 338+ 8EFD 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 339+ 8EFE 3D           	dec a
 340+ 8EFF 20 06        	jr nz,1F
 341+ 8F01
 342+ 8F01              ; --- Tipo_1
 343+ 8F01
 344+ 8F01 21 F7 89     	ld hl,Ctrl_4
 345+ 8F04 CB C6        	set 0,(hl)
 346+ 8F06 C9           	ret
 347+ 8F07
 348+ 8F07 3D           1 dec a
 349+ 8F08 20 06        	jr nz,2F
 350+ 8F0A
 351+ 8F0A              ; --- Tipo_2
 352+ 8F0A
 353+ 8F0A 21 F7 89     	ld hl,Ctrl_4
 354+ 8F0D CB CE        	set 1,(hl)
 355+ 8F0F C9           	ret
 356+ 8F10
 357+ 8F10 3D           2 dec a
 358+ 8F11 20 06        	jr nz,3F
 359+ 8F13
 360+ 8F13              ; --- Tipo_3
 361+ 8F13
 362+ 8F13 21 F7 89     	ld hl,Ctrl_4
 363+ 8F16 CB D6        	set 2,(hl)
 364+ 8F18 C9           	ret
 365+ 8F19
 366+ 8F19              ; --- Tipo_3
 367+ 8F19
 368+ 8F19 21 F7 89     3 ld hl,Ctrl_4
 369+ 8F1C CB D6        	set 2,(hl)
 370+ 8F1E C9           	ret
 371+ 8F1F
 372+ 8F1F              ; ---------------------------------------------------------------------
 373+ 8F1F              ;
 374+ 8F1F              ;	22/01/24
 375+ 8F1F
 376+ 8F1F 21 F7 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 377+ 8F22 CB 46        	bit 0,(hl)
 378+ 8F24 20 0E        	jr nz,1F
 379+ 8F26
 380+ 8F26 CB 4E        	bit 1,(hl)
 381+ 8F28 20 10        	jr nz,2F
 382+ 8F2A
 383+ 8F2A CB 56        	bit 2,(hl)
 384+ 8F2C 20 12        	jr nz,3F
 385+ 8F2E
 386+ 8F2E CB 5E        	bit 3,(hl)
 387+ 8F30 20 14        	jr nz,4F
 388+ 8F32 18 19        	jr 6F
 389+ 8F34
 390+ 8F34              ; Entidad_de_Tipo_1.
 391+ 8F34
 392+ 8F34 CB 66        1 bit 4,(hl)
 393+ 8F36 28 15        	jr z,6F
 394+ 8F38 18 10        	jr 5F
 395+ 8F3A
 396+ 8F3A              ; Entidad_de_Tipo_2.
 397+ 8F3A
 398+ 8F3A CB 6E        2 bit 5,(hl)
 399+ 8F3C 28 0F        	jr z,6F
 400+ 8F3E 18 0A        	jr 5F
 401+ 8F40
 402+ 8F40              ; Entidad_de_Tipo_3.
 403+ 8F40
 404+ 8F40 CB 76        3 bit 6,(hl)
 405+ 8F42 28 09        	jr z,6F
 406+ 8F44 18 04        	jr 5F
 407+ 8F46
 408+ 8F46              ; Entidad_de_Tipo_4.
 409+ 8F46
 410+ 8F46 CB 7E        4 bit 7,(hl)
 411+ 8F48 28 03        	jr z,6F
 412+ 8F4A
 413+ 8F4A              ; Esta entidad TIENE MOV_MASTICADOS.
 414+ 8F4A
 415+ 8F4A AF           5 xor a
 416+ 8F4B 3C           	inc a
 417+ 8F4C C9           	ret
 418+ 8F4D
 419+ 8F4D              ; Esta entidad NO TIENE MOV_MASTICADOS.
 420+ 8F4D
 421+ 8F4D AF           6 xor a
 422+ 8F4E C9           	ret
 423+ 8F4F
 424+ 8F4F              ;	------------------------------------------------------------------------------------
 425+ 8F4F              ;
 426+ 8F4F              ;	12/01/24
 427+ 8F4F              ;
 428+ 8F4F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 8F4F              ;
 430+ 8F4F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 8F4F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 8F4F
 433+ 8F4F CB 27        Calcula_salto_en_BC sla a
 434+ 8F51 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 435+ 8F53 4F           	ld c,a
 436+ 8F54 06 00        	ld b,0
 437+ 8F56 C9           	ret
 438+ 8F57
 439+ 8F57              ; ------------------------------------------------------------------
 440+ 8F57              ;
 441+ 8F57              ;	19/1/24
 442+ 8F57              ;
 443+ 8F57              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 444+ 8F57              ;	Actualiza (Datos_de_entidad) con esa dirección.
 445+ 8F57
 446+ 8F57 A7           Situa_en_datos_de_definicion and a
 447+ 8F58 ED 4A        	adc hl,bc
 448+ 8F5A CD 97 8C     	call Extrae_address
 449+ 8F5D 22 E2 89         ld (Datos_de_entidad),hl
 450+ 8F60 C9           	ret
 451+ 8F61
 452+ 8F61              ; ------------------------------------------------------------------
 453+ 8F61
 454+ 8F61              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 455+ 8F61              ; 	inc de
 456+ 8F61              ; 	inc de
 457+ 8F61              ; 	ex de,hl
 458+ 8F61              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 459+ 8F61              ; 	ret
 460+ 8F61
 461+ 8F61              ; ----------------------------------------------------------------------------------------------------------
 462+ 8F61              ;
 463+ 8F61              ;	31/1/24
 464+ 8F61              ;
 465+ 8F61              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 466+ 8F61              ;	_ de entidad.
 467+ 8F61              ;
 468+ 8F61              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 469+ 8F61              ;
 470+ 8F61              ;
 471+ 8F61              ;	MODIFICA: HL,DE y BC
 472+ 8F61
 473+ 8F61
 474+ 8F61              Definicion_de_entidad_a_bandeja_DRAW
 475+ 8F61
 476+ 8F61 11 8B 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 477+ 8F64 01 03 00     	ld bc,3
 478+ 8F67 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 479+ 8F69              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 480+ 8F69 11 95 89     	ld de,Attr									; DE en (Attr).
 481+ 8F6C 01 05 00     	ld bc,5
 482+ 8F6F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 483+ 8F71              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 484+ 8F71 11 9E 89     	ld de,Posicion_inicio
 485+ 8F74 01 03 00     	ld bc,3
 486+ 8F77 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 8F79              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 488+ 8F79 11 AA 89     	ld de,Puntero_de_almacen_de_mov_masticados
 489+ 8F7C 01 02 00     	ld bc,2
 490+ 8F7F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 8F81
 492+ 8F81 11 B4 89     	ld de,Frames_explosion
 493+ 8F84 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 8F86 12           	ld (de),a 									; Vuelco (Frames_explosion).
 495+ 8F87
 496+ 8F87 C9           	ret
 497+ 8F88
 498+ 8F88              ; ----------------------------------------------------------------------------------------------------------
 499+ 8F88              ;
 500+ 8F88              ;	22/01/24
 501+ 8F88              ;
 502+ 8F88              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 503+ 8F88              ;
 504+ 8F88              ;	Las cajas contienen entidades iniciadas:
 505+ 8F88              ;
 506+ 8F88              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 507+ 8F88              ;
 508+ 8F88              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 509+ 8F88              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 510+ 8F88              ;
 511+ 8F88              ;	MODIFICA: HL,DE y BC
 512+ 8F88
 513+ 8F88 21 8B 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 514+ 8F8B ED 5B D6 89  	ld de,(Puntero_store_caja)
 515+ 8F8F 7E           	ld a,(hl)
 516+ 8F90 12           	ld (de),a
 517+ 8F91 13           	inc de 													; (Tipo).
 518+ 8F92
 519+ 8F92 21 92 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 520+ 8F95 01 02 00     	ld bc,2
 521+ 8F98 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 522+ 8F9A              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 523+ 8F9A 23           	inc hl
 524+ 8F9B 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 525+ 8F9C 12           	ld (de),a
 526+ 8F9D 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 527+ 8F9E
 528+ 8F9E 21 A1 89     	ld hl,Impacto
 529+ 8FA1 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 530+ 8FA2 12           	ld (de),a
 531+ 8FA3 13           	inc de 													; (Impacto), volcado a la caja.
 532+ 8FA4              ;															; DE situado ahora en (Variables_de_borrado).
 533+ 8FA4 23           	inc hl
 534+ 8FA5 01 06 00     	ld bc,6
 535+ 8FA8 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 536+ 8FAA              ; 															; DE situado ahora en (Puntero_de_impresión).
 537+ 8FAA 01 07 00     	ld bc,7
 538+ 8FAD ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 539+ 8FAF              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 540+ 8FAF              ;															; HL apunta ahora a (Columnas).
 541+ 8FAF 21 B3 89     	ld hl,Ctrl_2
 542+ 8FB2 7E           	ld a,(hl)
 543+ 8FB3 12           	ld (de),a 												; Volcamos (Ctrl_2).
 544+ 8FB4 13           	inc de
 545+ 8FB5
 546+ 8FB5 C9           	ret
 547+ 8FB6
 548+ 8FB6              ;---------------------------------------------------------------------------------------------------------------
 549+ 8FB6              ;
 550+ 8FB6              ;	5/1/24
 551+ 8FB6              ;
 552+ 8FB6              ;	INICIALIZA (Numero_parcial_de_entidades).
 553+ 8FB6              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 554+ 8FB6              ;
 555+ 8FB6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 556+ 8FB6              ;
 557+ 8FB6              ;	(Numero_parcial_de_entidades)="7".
 558+ 8FB6              ;
 559+ 8FB6              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 560+ 8FB6              ;
 561+ 8FB6              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 562+ 8FB6              ;
 563+ 8FB6              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 564+ 8FB6              ;	MODIFICA: A y B.
 565+ 8FB6              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 566+ 8FB6
 567+ 8FB6              Inicializa_Numero_parcial_de_entidades
 568+ 8FB6
 569+ 8FB6              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 570+ 8FB6
 571+ 8FB6 3A DC 89     	ld a,(Numero_de_entidades)
 572+ 8FB9 A7           	and a
 573+ 8FBA
 574+ 8FBA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8FBA              ;	jr z,$
 576+ 8FBA              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8FBA
 578+ 8FBA 20 03        	jr nz,3F
 579+ 8FBC
 580+ 8FBC              ; ---------- ---------- ----------
 581+ 8FBC
 582+ 8FBC              ;! RESET para pruebas. Omitir esta línea en modo normal.
 583+ 8FBC              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 584+ 8FBC
 585+ 8FBC CD DD 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 586+ 8FBF
 587+ 8FBF              ; ---------- ---------- ----------
 588+ 8FBF
 589+ 8FBF 3A DC 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 590+ 8FC2 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 591+ 8FC4 38 08        	jr c,1F
 592+ 8FC6
 593+ 8FC6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 594+ 8FC6              ; Actualizamos variables.
 595+ 8FC6
 596+ 8FC6 3E 07        	ld a,7
 597+ 8FC8 32 DD 89     	ld (Numero_parcial_de_entidades),a
 598+ 8FCB 47           	ld b,a
 599+ 8FCC 18 04        	jr 2F
 600+ 8FCE
 601+ 8FCE              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 602+ 8FCE              ; (Numero_de_entidades)="0".
 603+ 8FCE
 604+ 8FCE 32 DD 89     1 ld (Numero_parcial_de_entidades),a
 605+ 8FD1 47           	ld b,a
 606+ 8FD2 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1898  8FD3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FD3              ; ******************************************************************************************************************************************************************************************
   2+ 8FD3              ;
   3+ 8FD3              ; 26/06/23
   4+ 8FD3              ;
   5+ 8FD3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FD3
   7+ 8FD3              Draw
   8+ 8FD3
   9+ 8FD3 CD C0 92     	call Prepara_draw
  10+ 8FD6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FD7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FD8 28 05        	jr z,2F
  13+ 8FDA
  14+ 8FDA 3A A0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FDD 18 0C        	jr 1F
  16+ 8FDF
  17+ 8FDF 2A 9E 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FE2 22 8E 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FE5 CD 74 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FE8              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FE8
  22+ 8FE8 CD 0F 9A     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FEB
  24+ 8FEB 3A AE 89     1 ld a,(Ctrl_0)
  25+ 8FEE CB 6F        	bit 5,a
  26+ 8FF0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FF2
  28+ 8FF2 CD 0A 90     	call Comprueba_limite_horizontal
  29+ 8FF5 CD 9A 90     	call Comprueba_limite_vertical
  30+ 8FF8
  31+ 8FF8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FF8              ; -----------------------
  33+ 8FF8              ; -----------------------
  34+ 8FF8              ; -----------------------
  35+ 8FF8
  36+ 8FF8 CD F0 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FFB CD 27 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FFE CD 86 92     	call Define_rutina_de_impresion
  39+ 9001
  40+ 9001 3A AE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9004 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9006 32 AE 89     	ld (Ctrl_0),a
  43+ 9009
  44+ 9009 C9           	ret
  45+ 900A
  46+ 900A              ; *******************************************************************************************************************************************************************************************
  47+ 900A              ;	21/01/23
  48+ 900A              ;
  49+ 900A              ; 	Comprueba_limite_horizontal.
  50+ 900A              ;
  51+ 900A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 900A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 900A              ;
  54+ 900A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 900A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 900A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 900A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 900A
  59+ 900A
  60+ 900A
  61+ 900A 3A AE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 900D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 900F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9011 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9013 32 AE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9016 18 09            jr 6F
  67+ 9018 CB 5F        1 bit 3,a
  68+ 901A 28 0A            jr z,2F
  69+ 901C E6 F7            and $f7
  70+ 901E 32 AE 89         ld (Ctrl_0),a
  71+ 9021 CD 74 91     6 call Inicializacion
  72+ 9024 18 5B            jr 5F
  73+ 9026 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9027
  75+ 9027              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9027              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9027
  78+ 9027 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9028 2A B0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 902B CD A4 9F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 902E 67           	ld h,a
  82+ 902F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9030 CD A4 9F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9033 67           	ld h,a
  85+ 9034 A7           	and a
  86+ 9035 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9037 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9038 3A A0 89     	ld a,(Cuad_objeto)
  89+ 903B FE 02        	cp 2
  90+ 903D 38 1E        	jr c,3F
  91+ 903F 28 1C        	jr z,3F
  92+ 9041 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9042 28 23            jr z,7F
  94+ 9044 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9046 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9048 E1           	pop hl
  97+ 9049
  98+ 9049              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9049              ; _para indicar con E="2" en caso necesario.
 100+ 9049
 101+ 9049 E5               push hl
 102+ 904A C5               push bc
 103+ 904B CD A4 9F     	call calcula_tercio
 104+ 904E FE 01        	cp 1
 105+ 9050 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9052 CD 82 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9055 28 26            jr z,9F
 108+ 9057 38 24            jr c,9F
 109+ 9059 1E 00        11 ld e,0
 110+ 905B 18 22            jr 8F
 111+ 905D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 905E 28 07        	jr z, 7F
 113+ 9060 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9062 1E 00         	ld e,0
 115+ 9064 E1           	pop hl
 116+ 9065 18 04        	jr 4F
 117+ 9067 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9069 18 15            jr 10F
 119+ 906B
 120+ 906B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 906B              ; _para indicar con E="2" en caso necesario.
 122+ 906B
 123+ 906B E5           4 push hl
 124+ 906C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 906D CD A4 9F     	call calcula_tercio
 126+ 9070 FE 01        	cp 1
 127+ 9072 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9074 CD 82 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9077 28 04            jr z,9F
 130+ 9079 30 02            jr nc,9F
 131+ 907B 18 02        	jr 8F
 132+ 907D 1E 02        9 ld e,2
 133+ 907F C1           8 pop bc
 134+ 9080 E1           10 pop hl
 135+ 9081 C9           5 ret
 136+ 9082
 137+ 9082              ; --------------------
 138+ 9082              ;
 139+ 9082              ; 25/08/22
 140+ 9082
 141+ 9082 CD A4 9F     Comprueba_centro call calcula_tercio
 142+ 9085 67               ld h,a
 143+ 9086 08           	ex af,af
 144+ 9087 FE 02        	cp 2
 145+ 9089 38 07        	jr c,1F
 146+ 908B 28 05        	jr z,1F
 147+ 908D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9090 18 03        	jr 2F
 149+ 9092 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9095 08           2 ex af,af
 151+ 9096 A7               and a
 152+ 9097 ED 42            sbc hl,bc
 153+ 9099 C9               ret
 154+ 909A
 155+ 909A              ; *********************************************************************************************************************************************************************************************
 156+ 909A              ;
 157+ 909A              ;   16/8/22
 158+ 909A              ;
 159+ 909A              ;	Comprueba_limite_vertical
 160+ 909A              ;
 161+ 909A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 909A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 909A              ;
 164+ 909A
 165+ 909A 2A 8E 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 909D 7D           	ld a,l
 167+ 909E E6 1F        	and $1F
 168+ 90A0 57           	ld d,a
 169+ 90A1 3A B2 89     	ld a,(Limite_vertical)
 170+ 90A4 BA           	cp d 											; Límite - Posición.
 171+ 90A5 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 90A6 3A A0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 90A9 CB 47        	bit 0,a
 174+ 90AB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 90AD
 176+ 90AD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 90AD
 178+ 90AD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 90AE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 90B0
 181+ 90B0              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 90B0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 90B0
 184+ 90B0 3A 92 89         ld a,(Coordenada_X)
 185+ 90B3 16 0F            ld d,Centro_izquierda
 186+ 90B5 A7               and a
 187+ 90B6 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 90B7 28 1E            jr z,3F
 189+ 90B9 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 90BB              ;                                                    ; _salimos sin modificar nada.
 191+ 90BB 18 0E            jr 2F
 192+ 90BD 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 90BE 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 90C0
 195+ 90C0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 90C0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 90C0
 198+ 90C0 3A 92 89         ld a,(Coordenada_X)
 199+ 90C3 16 10            ld d,Centro_derecha
 200+ 90C5 A7               and a
 201+ 90C6 92               sub d
 202+ 90C7 28 0E            jr z,3F
 203+ 90C9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 90CB              ;                                                    ; _salimos sin modificar nada.
 205+ 90CB CB 43        2 bit 0,e
 206+ 90CD 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90CF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90D0 CD 64 91         call Modificaccionne
 209+ 90D3 C1           	pop bc
 210+ 90D4 CD 74 91         call Inicializacion
 211+ 90D7 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90D8
 213+ 90D8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90D8
 215+ 90D8 C5           4 push bc
 216+ 90D9 01 8D 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90DC 0A           	ld a,(bc)
 218+ 90DD 3D           	dec a
 219+ 90DE 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90DF 7D           	ld a,l
 221+ 90E0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90E1 CB 47        	bit 0,a
 223+ 90E3 28 03        	jr z,5F
 224+ 90E5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90E6 18 2E        	jr 7F
 226+ 90E8
 227+ 90E8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90E8
 229+ 90E8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90E9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90EA 3A AE 89     	ld a,(Ctrl_0)
 232+ 90ED CB 4F        	bit 1,a
 233+ 90EF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90F1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90F2
 236+ 90F2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90F2
 238+ 90F2 1C               inc e
 239+ 90F3 1D               dec e
 240+ 90F4 20 07            jr nz,12F
 241+ 90F6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90F7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90F8 22 8E 89     	ld (Posicion_actual),hl
 244+ 90FB 18 44        13 jr 9F
 245+ 90FD CB 43        12 bit 0,e
 246+ 90FF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9101              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9101 C1           	pop bc
 249+ 9102 18 D3        	jr 3B
 250+ 9104 80           14 add b
 251+ 9105 6F               ld l,a
 252+ 9106 22 8E 89     	ld (Posicion_actual),hl
 253+ 9109 CD 64 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 910C 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 910E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9110 32 AE 89         ld (Ctrl_0),a
 257+ 9113 F1           	pop af
 258+ 9114 18 2B        	jr 9F
 259+ 9116
 260+ 9116              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9116
 262+ 9116 F5           7 push af
 263+ 9117 3A AE 89     	ld a,(Ctrl_0)
 264+ 911A CB 47        	bit 0,a
 265+ 911C 20 1D        	jr nz,8F
 266+ 911E F1           	pop af
 267+ 911F
 268+ 911F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 911F
 270+ 911F 1C           	inc e
 271+ 9120 1D               dec e
 272+ 9121 20 07            jr nz,10F
 273+ 9123 90           	sub b
 274+ 9124 6F               ld l,a
 275+ 9125 22 8E 89     	ld (Posicion_actual),hl
 276+ 9128 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 912A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 912A CB 43        10 bit 0,e
 279+ 912C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 912E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 912E C1           	pop bc
 282+ 912F 18 A6        	jr 3B
 283+ 9131 90           16 sub b
 284+ 9132 6F               ld l,a
 285+ 9133 22 8E 89     	ld (Posicion_actual),hl
 286+ 9136 CD 64 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9139 18 06            jr 9F
 288+ 913B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 913D 32 AE 89         ld (Ctrl_0),a
 290+ 9140 F1           	pop af
 291+ 9141 C1           9 pop bc
 292+ 9142 1E 00        	ld e,0
 293+ 9144 CD 74 91         call Inicializacion
 294+ 9147 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9148 08           	ex af,af
 296+ 9149 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 914A 18 8B            jr 3B
 298+ 914C
 299+ 914C              ; --------------------
 300+ 914C
 301+ 914C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 914E CD DB 92     1 call PreviousScan
 303+ 9151 10 FB            djnz 1B
 304+ 9153 22 8E 89     	ld (Posicion_actual),hl
 305+ 9156 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9157 C9           	ret
 307+ 9158
 308+ 9158              ; --------------------
 309+ 9158
 310+ 9158 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 915A CD CC 92     1 call NextScan
 312+ 915D 10 FB            djnz 1B
 313+ 915F 22 8E 89     	ld (Posicion_actual),hl
 314+ 9162 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9163 C9           	ret
 316+ 9164
 317+ 9164              ; --------------------
 318+ 9164              ;
 319+ 9164              ;	22/01/23
 320+ 9164              ;
 321+ 9164              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9164              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9164              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9164
 325+ 9164
 326+ 9164              Modificaccionne
 327+ 9164
 328+ 9164 3A A0 89     	ld a,(Cuad_objeto)
 329+ 9167 FE 02        	cp 2
 330+ 9169 CC 4C 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 916C DC 4C 91         call c,Modifica_Pos_actual
 332+ 916F C8           	ret z
 333+ 9170 CD 58 91         call Modifica_Pos_actual2
 334+ 9173 C9               ret
 335+ 9174
 336+ 9174              ; *************************************************************************************************************************************************************************************************
 337+ 9174              ;
 338+ 9174              ;	13/8/22
 339+ 9174              ;
 340+ 9174              ;	Inicializacion
 341+ 9174              ;
 342+ 9174              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9174              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9174              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9174              ;
 346+ 9174              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9174              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9174              ;	_ desaparece/aparece.
 349+ 9174
 350+ 9174              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9174              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9174              ;
 353+ 9174              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9174              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9174              ; 		   [E] ="0"
 356+ 9174
 357+ 9174              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9174
 359+ 9174 CD A4 9F     Inicializacion call calcula_tercio
 360+ 9177 28 36        	jr z,primit
 361+ 9179 E6 02        	and 2
 362+ 917B 20 07        	jr nz,segmit
 363+ 917D 7D           	ld a,l
 364+ 917E FE 7F        	cp $7f
 365+ 9180 38 2D        	jr c,primit
 366+ 9182 28 2B        	jr z,primit
 367+ 9184 CD EA 91     segmit call column
 368+ 9187 38 13        	jr c,tercuad
 369+ 9189 3E 04        cuarcuad ld a,4
 370+ 918B 32 A0 89     	ld (Cuad_objeto),a
 371+ 918E 21 20 48     	ld hl,$4820
 372+ 9191 22 B0 89     	ld (Limite_horizontal),hl
 373+ 9194 21 B2 89     	ld hl,Limite_vertical
 374+ 9197 36 0D        	ld (hl),$0d
 375+ 9199 08           	ex af,af
 376+ 919A 18 3C        	jr 1F
 377+ 919C              tercuad
 378+ 919C 3E 03        	ld a,3
 379+ 919E 32 A0 89     	ld (Cuad_objeto),a
 380+ 91A1 21 20 48     	ld hl,$4820
 381+ 91A4 22 B0 89     	ld (Limite_horizontal),hl
 382+ 91A7 21 B2 89     	ld hl,Limite_vertical
 383+ 91AA 36 12        	ld (hl),$12
 384+ 91AC 08           	ex af,af
 385+ 91AD 18 29        	jr 1F
 386+ 91AF CD EA 91     primit call column
 387+ 91B2 38 13        	jr c, primcuad
 388+ 91B4              segcuad
 389+ 91B4 3E 02        	ld a,2
 390+ 91B6 32 A0 89     	ld (Cuad_objeto),a
 391+ 91B9 21 C0 4F     	ld hl,$4fc0
 392+ 91BC 22 B0 89     	ld (Limite_horizontal),hl
 393+ 91BF 21 B2 89     	ld hl,Limite_vertical
 394+ 91C2 36 0D        	ld (hl),$0d
 395+ 91C4 08           	ex af,af
 396+ 91C5 18 11        	jr 1F
 397+ 91C7              primcuad
 398+ 91C7 3E 01        	ld a,1
 399+ 91C9 32 A0 89     	ld (Cuad_objeto),a
 400+ 91CC 21 C0 4F     	ld hl,$4fc0
 401+ 91CF 22 B0 89     	ld (Limite_horizontal),hl
 402+ 91D2 21 B2 89     	ld hl,Limite_vertical
 403+ 91D5 36 12        	ld (hl),$12
 404+ 91D7 08           	ex af,af
 405+ 91D8
 406+ 91D8 C5           1 push bc
 407+ 91D9 E5           	push hl
 408+ 91DA D5           	push de
 409+ 91DB
 410+ 91DB 2A 8E 89     	ld hl,(Posicion_actual)
 411+ 91DE CD C2 9F     	call Genera_coordenadas
 412+ 91E1
 413+ 91E1 D1           	pop de
 414+ 91E2 E1           	pop hl
 415+ 91E3 C1           	pop bc
 416+ 91E4
 417+ 91E4 21 AE 89     	ld hl,Ctrl_0
 418+ 91E7 CB EE        	set 5,(hl)
 419+ 91E9 C9           	ret
 420+ 91EA
 421+ 91EA              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91EA
 423+ 91EA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91EA              ;
 425+ 91EA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91EA
 427+ 91EA 7D           column ld a,l
 428+ 91EB E6 1F        	and $1f
 429+ 91ED FE 10         	cp $10
 430+ 91EF C9            	ret
 431+ 91F0
 432+ 91F0              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91F0              ;
 434+ 91F0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91F0              ;
 436+ 91F0              ; 14/12/22
 437+ 91F0              ;
 438+ 91F0              ;	Modifica: A y BC.
 439+ 91F0
 440+ 91F0 3A A0 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91F3 E6 01        	and 1
 442+ 91F5 28 17        	jr z,1F
 443+ 91F7
 444+ 91F7              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91F7
 446+ 91F7 3A 92 89     	ld a,(Coordenada_X)
 447+ 91FA 47           	ld b,a
 448+ 91FB 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91FC 79           	ld a,c
 450+ 91FD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91FE 38 08        	jr c,2F
 452+ 9200 47           	ld b,a
 453+ 9201 79           	ld a,c
 454+ 9202 90           	sub b
 455+ 9203 32 AF 89     	ld (Columnas),a
 456+ 9206 18 1B        	jr 4F
 457+ 9208 79           2 ld a,c
 458+ 9209 32 AF 89     	ld (Columnas),a
 459+ 920C 18 15        	jr 4F
 460+ 920E
 461+ 920E              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 920E
 463+ 920E 3A 92 89     1 ld a,(Coordenada_X)
 464+ 9211 81           	add c
 465+ 9212 3D           	dec a
 466+ 9213 D6 1F        	sub $1f
 467+ 9215 38 08        	jr c,3F
 468+ 9217 47           	ld b,a
 469+ 9218 79           	ld a,c
 470+ 9219 90           	sub b
 471+ 921A 32 AF 89     	ld (Columnas),a
 472+ 921D 18 04        	jr 4F
 473+ 921F 79           3 ld a,c
 474+ 9220 32 AF 89     	ld (Columnas),a
 475+ 9223 D9           4 exx
 476+ 9224 4F           	ld c,a
 477+ 9225 D9           	exx
 478+ 9226 C9            ret
 479+ 9227
 480+ 9227              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9227              ;
 482+ 9227              ;   19/7/23
 483+ 9227              ;
 484+ 9227              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9227              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9227              ;
 487+ 9227              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9227              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9227              ;
 490+ 9227              ;	DESTRUYE: HL,B Y A.
 491+ 9227
 492+ 9227 3A A0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 922A FE 02        	cp 2
 494+ 922C 38 18        	jr c,1F
 495+ 922E 28 16        	jr z,1F
 496+ 9230 E6 01        	and 1
 497+ 9232 28 0D        	jr z,3F
 498+ 9234
 499+ 9234              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9234
 501+ 9234 CD 7A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9237
 503+ 9237 7D           9 ld a,l
 504+ 9238 E6 1F        	and $1f
 505+ 923A 28 2A        	jr z,7F
 506+ 923C 2B           	dec hl
 507+ 923D 10 F8        	djnz 9B
 508+ 923F 18 25        	jr 7F
 509+ 9241
 510+ 9241              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9241
 512+ 9241 2A 8E 89     3 ld hl,(Posicion_actual)
 513+ 9244 18 20        	jr 7F
 514+ 9246
 515+ 9246 28 14        1 jr z,2F
 516+ 9248
 517+ 9248              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9248
 519+ 9248 CD 7A 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 924B
 521+ 924B 7D           4 ld a,l
 522+ 924C E6 1F        	and $1f
 523+ 924E 28 03        	jr z,6F
 524+ 9250 2B           	dec hl
 525+ 9251 10 F8        	djnz 4B
 526+ 9253 06 0F        6 ld b,15
 527+ 9255 CD DB 92     5 call PreviousScan
 528+ 9258 10 FB        	djnz 5B
 529+ 925A 18 0A        	jr 7F
 530+ 925C
 531+ 925C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 925C
 533+ 925C CD 7A 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 925F 06 0F        	ld b,15
 535+ 9261 CD DB 92     8 call PreviousScan
 536+ 9264 10 FB        	djnz 8B
 537+ 9266
 538+ 9266 E5           7 push hl
 539+ 9267 DD E1        	pop ix
 540+ 9269
 541+ 9269 2A 90 89     	ld hl,(Puntero_objeto)
 542+ 926C E5           	push hl
 543+ 926D FD E1        	pop iy
 544+ 926F
 545+ 926F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 926F
 547+ 926F 3A AE 89     	ld a,(Ctrl_0)
 548+ 9272 CB 77        	bit 6,a
 549+ 9274 C8           	ret z
 550+ 9275
 551+ 9275              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9275              ; _ entidad / Amadeus´.
 553+ 9275
 554+ 9275 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 9279
 556+ 9279 C9           	ret
 557+ 927A
 558+ 927A              ; --------------------------------------------------------------------------------------------------------------------
 559+ 927A              ;
 560+ 927A              ;	2/1/23
 561+ 927A              ;
 562+ 927A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 927A              ;
 564+ 927A              ;	Tras esta rutina tenemos:
 565+ 927A              ;
 566+ 927A              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 927A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 927A              ;
 569+ 927A              ;	DESTRUYE!!!!! HL,B y A.
 570+ 927A
 571+ 927A 2A 8E 89     Operandos ld hl,(Posicion_actual)
 572+ 927D 3A AF 89     	ld a,(Columnas)
 573+ 9280 3D           	dec a
 574+ 9281 20 01        	jr nz,1F
 575+ 9283 3C           	inc a
 576+ 9284 47           1 ld b,a
 577+ 9285 C9           	ret
 578+ 9286
 579+ 9286              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9286              ;
 581+ 9286              ;	3/1/23
 582+ 9286              ;
 583+ 9286              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9286              ;
 585+ 9286              ;	Destruye: A,B,HL y DE.
 586+ 9286
 587+ 9286              Define_rutina_de_impresion
 588+ 9286
 589+ 9286 3A 8D 89     	ld a,(Columns)
 590+ 9289 47           	ld b,a
 591+ 928A 3A AF 89     	ld a,(Columnas)
 592+ 928D B8           	cp b
 593+ 928E 20 0D        	jr nz,2f
 594+ 9290
 595+ 9290              ;	La entidad se imprime entera.
 596+ 9290
 597+ 9290 21 AF 93     	ld hl, Indice_entidades_completas
 598+ 9293 E6 01        	and 1
 599+ 9295 28 02        	jr z,1F
 600+ 9297
 601+ 9297 23           	inc hl
 602+ 9298 23           	inc hl
 603+ 9299
 604+ 9299 CD 97 8C     1 call Extrae_address
 605+ 929C C9           	ret		;	ret
 606+ 929D
 607+ 929D              ;	La entidad no se imprime entera en pantalla.
 608+ 929D
 609+ 929D 3A A0 89     2 ld a,(Cuad_objeto)
 610+ 92A0 E6 01        	and 1
 611+ 92A2 28 17        	jr z,3F
 612+ 92A4
 613+ 92A4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 92A4
 615+ 92A4 21 B3 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 92A7 3A 8D 89     4 ld a,(Columns)
 617+ 92AA E6 01        	and 1
 618+ 92AC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 92AE
 620+ 92AE 23           	inc hl
 621+ 92AF 23           	inc hl
 622+ 92B0
 623+ 92B0 3A AF 89     	ld a,(Columnas)
 624+ 92B3 E6 01        	and 1
 625+ 92B5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 92B7
 627+ 92B7 23           	inc hl
 628+ 92B8 23           	inc hl
 629+ 92B9
 630+ 92B9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 92BB
 632+ 92BB 21 B9 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 92BE 18 E7        	jr 4B
 634+ 92C0
 635+ 92C0              ; --------------------------------------------------------------------------------------------------------------------
 636+ 92C0              ;
 637+ 92C0              ;	Prepara_draw
 638+ 92C0              ;
 639+ 92C0              ;	Es una rutina de carga.
 640+ 92C0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 92C0              ;
 642+ 92C0              ;	FUNCIONAMIENTO:
 643+ 92C0              ;
 644+ 92C0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 92C0              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 92C0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 92C0              ;
 648+ 92C0              ;	DESTRUYE:
 649+ 92C0              ;
 650+ 92C0              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 92C0
 652+ 92C0 21 8C 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 92C3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 92C4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 92C5 4E           	ld c,(hl)
 656+ 92C6 2A 8E 89     	ld hl,(Posicion_actual)
 657+ 92C9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 92CB C9           	ret
 659+ 92CC
 660+ 92CC              ;----------------------------------------------------------------------------------------------------------------
 661+ 92CC              ;
 662+ 92CC              ;	5/08/22
 663+ 92CC              ;
 664+ 92CC              ;   NextScan.
 665+ 92CC              ;
 666+ 92CC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 92CC              ;
 668+ 92CC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 92CC              ;
 670+ 92CC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 92CC              ;
 672+ 92CC              ;       DESTRUIDOS: AF y HL !!!
 673+ 92CC              ;
 674+ 92CC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 92CC              ;
 676+ 92CC
 677+ 92CC 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 92CD 7C               ld a,h
 679+ 92CE E6 07            and 7
 680+ 92D0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92D1
 682+ 92D1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92D2 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92D4 6F               ld l,a
 685+ 92D5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92D6
 687+ 92D6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92D7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92D9 67               ld h,a
 690+ 92DA C9               ret
 691+ 92DB
 692+ 92DB              ;----------------------------------------------------------------------------------------------------------------
 693+ 92DB              ;
 694+ 92DB              ;	5/08/22
 695+ 92DB              ;
 696+ 92DB              ;   PreviousScan.
 697+ 92DB              ;
 698+ 92DB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92DB              ;
 700+ 92DB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92DB              ;
 702+ 92DB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92DB              ;
 704+ 92DB              ;       DESTRUIDOS: AF y HL !!!
 705+ 92DB              ;
 706+ 92DB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92DB              ;
 708+ 92DB
 709+ 92DB 7C           PreviousScan ld a,h
 710+ 92DC 25               dec h               ; Dec H.
 711+ 92DD E6 07            and 7
 712+ 92DF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92E0
 714+ 92E0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92E1 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92E3 6F               ld l,a
 717+ 92E4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92E5
 719+ 92E5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92E6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92E8 67               ld h,a
 722+ 92E9 C9               ret
 723+ 92EA
 724+ 92EA              ; -----------------------------------------------------------------------------------
 725+ 92EA              ;
 726+ 92EA              ;	31/7/23
 727+ 92EA              ;
 728+ 92EA              ;	Rutina principal de pintado de entidades.
 729+ 92EA              ;	Extrae la foto del frame, (entidades).
 730+ 92EA
 731+ 92EA              Extrae_Album_de_fotos
 732+ 92EA
 733+ 92EA 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92ED 7E           	ld a,(hl)
 735+ 92EE A7           	and a
 736+ 92EF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 92F0
 738+ 92F0              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92F0
 740+ 92F0 3A DF 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92F3 A7           	and a
 742+ 92F4 C8           	ret z
 743+ 92F5
 744+ 92F5              ; -----------------------------------
 745+ 92F5
 746+ 92F5 ED 73 E4 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 92F9 31 00 80     	ld sp,Album_de_fotos
 748+ 92FC
 749+ 92FC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92FE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92FF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9300
 753+ 9300 ED 73 E6 89  	ld (Stack_2),sp
 754+ 9304 ED 7B E4 89  	ld sp,(Stack)
 755+ 9308
 756+ 9308              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9308
 758+ 9308 3E CD        	ld a,$cd
 759+ 930A 32 12 93     	ld (Imprime),a
 760+ 930D EB           	ex de,hl
 761+ 930E 22 13 93     	ld (Imprime+1),hl
 762+ 9311 EB           	ex de,hl
 763+ 9312
 764+ 9312              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9312
 766+ 9312 00 00 00     Imprime db 0,0,0
 767+ 9315
 768+ 9315 ED 73 E4 89  	ld (Stack),sp
 769+ 9319
 770+ 9319 3A DF 89     	ld a,(Numero_de_malotes)
 771+ 931C 3D           	dec a
 772+ 931D 28 09        	jr z,1F
 773+ 931F 32 DF 89      	ld (Numero_de_malotes),a
 774+ 9322
 775+ 9322 ED 7B E6 89  	ld sp,(Stack_2)
 776+ 9326 18 D4        	jr 2B
 777+ 9328
 778+ 9328 AF           1 xor a
 779+ 9329 32 E6 89     	ld (Stack_2),a
 780+ 932C
 781+ 932C C9           	ret
 782+ 932D
 783+ 932D              ; -----------------------------------------------------------------------------------
 784+ 932D              ;
 785+ 932D              ;	28/2/23
 786+ 932D              ;
 787+ 932D              ;	Pinta los disparos generados.
 788+ 932D
 789+ 932D              Extrae_foto_disparos
 790+ 932D
 791+ 932D 21 AD 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9330 7E               ld a,(hl)
 793+ 9331 A7               and a
 794+ 9332 C8               ret z
 795+ 9333
 796+ 9333 3A F8 89     	ld a,(Numero_de_disparotes)
 797+ 9336 A7           	and a
 798+ 9337 C8           	ret z
 799+ 9338 ED 73 E4 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 933C 31 AC 80     	ld sp,Album_de_fotos_disparos
 801+ 933F
 802+ 933F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9341 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9342 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9343
 806+ 9343 ED 73 E6 89  	ld (Stack_2),sp
 807+ 9347 ED 7B E4 89  	ld sp,(Stack)
 808+ 934B
 809+ 934B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 934B
 811+ 934B 3E CD        	ld a,$cd
 812+ 934D 32 55 93     	ld (Imprime2),a
 813+ 9350 EB           	ex de,hl
 814+ 9351 22 56 93     	ld (Imprime2+1),hl
 815+ 9354 EB           	ex de,hl
 816+ 9355
 817+ 9355              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9355
 819+ 9355 00 00 00     Imprime2 db 0,0,0
 820+ 9358
 821+ 9358 3A F8 89     	ld a,(Numero_de_disparotes)
 822+ 935B 3D           	dec a
 823+ 935C 28 09        	jr z,1F
 824+ 935E 32 F8 89      	ld (Numero_de_disparotes),a
 825+ 9361
 826+ 9361 ED 7B E6 89  	ld sp,(Stack_2)
 827+ 9365 18 D8        	jr 2B
 828+ 9367
 829+ 9367 AF           1 xor a
 830+ 9368 32 E6 89     	ld (Stack_2),a
 831+ 936B C9           	ret
 832+ 936C
 833+ 936C              ; -----------------------------------------------------------------------------------
 834+ 936C              ;
 835+ 936C              ;	4/9/23
 836+ 936C              ;
 837+ 936C              ;	Rutina principal de pintado de Amadeus.
 838+ 936C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 936C
 840+ 936C 21 02 81     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 936F 7E           	ld a,(hl)
 842+ 9370 A7           	and a
 843+ 9371 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9372
 845+ 9372 3A DF 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9375 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9376 C8           	ret z
 848+ 9377
 849+ 9377              ; -----------------------------------
 850+ 9377
 851+ 9377 ED 73 E4 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 937B 31 02 81     	ld sp,Album_de_fotos_Amadeus
 853+ 937E
 854+ 937E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9380 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9381 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9382
 858+ 9382 ED 73 E6 89  	ld (Stack_2),sp
 859+ 9386 ED 7B E4 89  	ld sp,(Stack)
 860+ 938A
 861+ 938A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 938A
 863+ 938A 3E CD        	ld a,$cd
 864+ 938C 32 94 93     	ld (Imprime_Amadeus),a
 865+ 938F EB           	ex de,hl
 866+ 9390 22 95 93     	ld (Imprime_Amadeus+1),hl
 867+ 9393 EB           	ex de,hl
 868+ 9394
 869+ 9394              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9394
 871+ 9394 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9397
 873+ 9397 ED 73 E4 89  	ld (Stack),sp
 874+ 939B
 875+ 939B 3A DF 89     	ld a,(Numero_de_malotes)
 876+ 939E 3D           	dec a
 877+ 939F 28 09        	jr z,1F
 878+ 93A1 32 DF 89      	ld (Numero_de_malotes),a
 879+ 93A4
 880+ 93A4 ED 7B E6 89  	ld sp,(Stack_2)
 881+ 93A8 18 D4        	jr 2B
 882+ 93AA
 883+ 93AA AF           1 xor a
 884+ 93AB 32 E6 89     	ld (Stack_2),a
 885+ 93AE
 886+ 93AE C9           	ret
# file closed: Draw_XOR.asm
1899  93AF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 93AF              ;   índices de Rutinas de impresión.
   2+ 93AF
   3+ 93AF BF 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 93B1 D8 93            defw Pinta_Amadeus_3x2
   5+ 93B3
   6+ 93B3 30 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 93B5 D0 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 93B7 84 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 93B9
  10+ 93B9 5A 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 93BB 5E 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 93BD 12 95            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 93BF
  14+ 93BF
  15+ 93BF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 93BF              ;
  17+ 93BF              ;   28/2/24
  18+ 93BF              ;
  19+ 93BF              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 93BF              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 93BF              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 93BF              ;
  23+ 93BF              ;   Modifica: AF,HL,BC y DE.
  24+ 93BF
  25+ 93BF              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 93BF
  27+ 93BF FD E5            push iy
  28+ 93C1 D1               pop de
  29+ 93C2
  30+ 93C2 ED 73 E4 89      ld (Stack),sp
  31+ 93C6 F9           	ld sp,hl
  32+ 93C7 06 10            ld b,16
  33+ 93C9
  34+ 93C9 E1           1 pop hl
  35+ 93CA
  36+ 93CA 1A               ld a,(de)
  37+ 93CB 77               ld (hl),a
  38+ 93CC 1C           	inc e
  39+ 93CD 2C               inc l
  40+ 93CE 1A               ld a,(de)
  41+ 93CF 77               ld (hl),a
  42+ 93D0 1C               inc e
  43+ 93D1
  44+ 93D1 10 F6            djnz 1B
  45+ 93D3
  46+ 93D3 ED 7B E4 89      ld sp,(Stack)
  47+ 93D7
  48+ 93D7 C9           	ret
  49+ 93D8
  50+ 93D8              Pinta_Amadeus_3x2
  51+ 93D8
  52+ 93D8 18 FE            jr $
  53+ 93DA
  54+ 93DA
  55+ 93DA ED 73 E4 89      ld (Stack),sp
  56+ 93DE FD F9        	ld sp,iy
  57+ 93E0 06 08            ld b,8
  58+ 93E2 D1           1 pop de
  59+ 93E3 7B               ld a,e
  60+ 93E4 AE               xor (hl)
  61+ 93E5 77           	ld (hl),a
  62+ 93E6 23           	inc hl
  63+ 93E7 7A               ld a,d
  64+ 93E8 AE               xor (hl)
  65+ 93E9 77           	ld (hl),a
  66+ 93EA 23           	inc hl
  67+ 93EB D1           	pop de
  68+ 93EC 7B               ld a,e
  69+ 93ED AE               xor (hl)
  70+ 93EE 77           	ld (hl),a
  71+ 93EF 2B           	dec hl
  72+ 93F0 2B           	dec hl
  73+ 93F1 24           	inc h
  74+ 93F2 7C               ld a,h
  75+ 93F3 E6 07            and 7
  76+ 93F5 20 0A            jr nz,2F
  77+ 93F7 7D               ld a,l
  78+ 93F8 C6 20            add a,$20
  79+ 93FA 6F               ld l,a
  80+ 93FB 38 04            jr c,2F
  81+ 93FD 7C               ld a,h
  82+ 93FE D6 08            sub 8
  83+ 9400 67               ld h,a
  84+ 9401 7C           2 ld a,h
  85+ 9402 FE 58            cp $58
  86+ 9404 28 25            jr z,4F
  87+ 9406 7A               ld a,d
  88+ 9407 AE               xor (hl)
  89+ 9408 77               ld (hl),a
  90+ 9409 D1           	pop de
  91+ 940A 23           	inc hl
  92+ 940B 7B               ld a,e
  93+ 940C AE               xor (hl)
  94+ 940D 77           	ld (hl),a
  95+ 940E 23           	inc hl
  96+ 940F 7A               ld a,d
  97+ 9410 AE               xor (hl)
  98+ 9411 77           	ld (hl),a
  99+ 9412 2B           	dec hl
 100+ 9413 2B           	dec hl
 101+ 9414 24           	inc h
 102+ 9415 7C               ld a,h
 103+ 9416 E6 07            and 7
 104+ 9418 20 0A            jr nz,3F
 105+ 941A 7D               ld a,l
 106+ 941B C6 20            add a,$20
 107+ 941D 6F               ld l,a
 108+ 941E 38 04            jr c,3F
 109+ 9420 7C               ld a,h
 110+ 9421 D6 08            sub 8
 111+ 9423 67               ld h,a
 112+ 9424 7C           3 ld a,h
 113+ 9425 FE 58            cp $58
 114+ 9427 28 02            jr z,4F
 115+ 9429 10 B7            djnz 1B
 116+ 942B ED 7B E4 89  4 ld sp,(Stack)
 117+ 942F C9           	ret
 118+ 9430
 119+ 9430              ; ---------------------------------------------------
 120+ 9430
 121+ 9430 ED 73 E4 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 122+ 9434 FD F9        	ld sp,iy
 123+ 9436
 124+ 9436              ; >>>
 125+ 9436
 126+ 9436 06 10            ld b,16
 127+ 9438 D1           1 pop de
 128+ 9439 7A           	ld a,d
 129+ 943A AE           	xor (hl)
 130+ 943B 77           	ld (hl),a
 131+ 943C 24           	inc h
 132+ 943D 7C               ld a,h
 133+ 943E E6 07            and 7
 134+ 9440 20 0C            jr nz,2F
 135+ 9442 7D               ld a,l
 136+ 9443 C6 20            add a,$20
 137+ 9445 6F               ld l,a
 138+ 9446 38 06            jr c,2F
 139+ 9448 7C               ld a,h
 140+ 9449 D6 08            sub 8
 141+ 944B 67               ld h,a
 142+ 944C 18 00            jr 2F
 143+ 944E 7C           2 ld a,h
 144+ 944F FE 58            cp $58
 145+ 9451 28 02            jr z,3F
 146+ 9453 10 E3            djnz 1B
 147+ 9455 ED 7B E4 89  3 ld sp,(Stack)
 148+ 9459 C9           	ret
 149+ 945A
 150+ 945A ED 73 E4 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 151+ 945E FD F9        	ld sp,iy
 152+ 9460
 153+ 9460              ; >>>
 154+ 9460
 155+ 9460 06 10            ld b,16
 156+ 9462 D1           1 pop de
 157+ 9463 7B           	ld a,e
 158+ 9464 AE           	xor (hl)
 159+ 9465 77           	ld (hl),a
 160+ 9466 24           	inc h
 161+ 9467 7C               ld a,h
 162+ 9468 E6 07            and 7
 163+ 946A 20 0C            jr nz,2F
 164+ 946C 7D               ld a,l
 165+ 946D C6 20            add a,$20
 166+ 946F 6F               ld l,a
 167+ 9470 38 06            jr c,2F
 168+ 9472 7C               ld a,h
 169+ 9473 D6 08            sub 8
 170+ 9475 67               ld h,a
 171+ 9476 18 00            jr 2F
 172+ 9478 7C           2 ld a,h
 173+ 9479 FE 58            cp $58
 174+ 947B 28 02            jr z,3F
 175+ 947D 10 E3            djnz 1B
 176+ 947F ED 7B E4 89  3 ld sp,(Stack)
 177+ 9483 C9           	ret
 178+ 9484
 179+ 9484              ; ---------------------------------------------------
 180+ 9484
 181+ 9484 ED 73 E4 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 182+ 9488 FD F9        	ld sp,iy
 183+ 948A 06 08            ld b,8
 184+ 948C D1           1 pop de
 185+ 948D 7A           	ld a,d
 186+ 948E AE           	xor (hl)
 187+ 948F 77           	ld (hl),a
 188+ 9490 23           	inc hl
 189+ 9491 D1           	pop de
 190+ 9492 7B           	ld a,e
 191+ 9493 AE           	xor (hl)
 192+ 9494 77           	ld (hl),a
 193+ 9495 2B           	dec hl
 194+ 9496 24            	inc h
 195+ 9497 7C               ld a,h
 196+ 9498 E6 07            and 7
 197+ 949A 20 0A            jr nz,2F
 198+ 949C 7D               ld a,l
 199+ 949D C6 20            add a,$20
 200+ 949F 6F               ld l,a
 201+ 94A0 38 04            jr c,2F
 202+ 94A2 7C               ld a,h
 203+ 94A3 D6 08            sub 8
 204+ 94A5 67               ld h,a
 205+ 94A6 7C           2 ld a,h
 206+ 94A7 FE 58            cp $58
 207+ 94A9 28 20            jr z,4F
 208+ 94AB D1               pop de
 209+ 94AC 7B           	ld a,e
 210+ 94AD AE           	xor (hl)
 211+ 94AE 77           	ld (hl),a
 212+ 94AF 23           	inc hl
 213+ 94B0 7A           	ld a,d
 214+ 94B1 AE           	xor (hl)
 215+ 94B2 77           	ld (hl),a
 216+ 94B3 2B           	dec hl
 217+ 94B4 24           	inc h
 218+ 94B5 7C               ld a,h
 219+ 94B6 E6 07            and 7
 220+ 94B8 20 0A            jr nz,3F
 221+ 94BA 7D               ld a,l
 222+ 94BB C6 20            add a,$20
 223+ 94BD 6F               ld l,a
 224+ 94BE 38 04            jr c,3F
 225+ 94C0 7C               ld a,h
 226+ 94C1 D6 08            sub 8
 227+ 94C3 67               ld h,a
 228+ 94C4 7C           3 ld a,h
 229+ 94C5 FE 58            cp $58
 230+ 94C7 28 02            jr z,4F
 231+ 94C9 10 C1            djnz 1B
 232+ 94CB ED 7B E4 89  4 ld sp,(Stack)
 233+ 94CF C9           	ret
 234+ 94D0
 235+ 94D0 ED 73 E4 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 236+ 94D4 FD F9        	ld sp,iy
 237+ 94D6 06 08            ld b,8
 238+ 94D8 D1           1 pop de
 239+ 94D9 D1           	pop de
 240+ 94DA 7B           	ld a,e
 241+ 94DB AE           	xor (hl)
 242+ 94DC 77           	ld (hl),a
 243+ 94DD 24            	inc h
 244+ 94DE 7C               ld a,h
 245+ 94DF E6 07            and 7
 246+ 94E1 20 0A            jr nz,2F
 247+ 94E3 7D               ld a,l
 248+ 94E4 C6 20            add a,$20
 249+ 94E6 6F               ld l,a
 250+ 94E7 38 04            jr c,2F
 251+ 94E9 7C               ld a,h
 252+ 94EA D6 08            sub 8
 253+ 94EC 67               ld h,a
 254+ 94ED 7C           2 ld a,h
 255+ 94EE FE 58            cp $58
 256+ 94F0 28 1B            jr z,4F
 257+ 94F2 D1               pop de
 258+ 94F3 7A           	ld a,d
 259+ 94F4 AE           	xor (hl)
 260+ 94F5 77           	ld (hl),a
 261+ 94F6 24           	inc h
 262+ 94F7 7C               ld a,h
 263+ 94F8 E6 07            and 7
 264+ 94FA 20 0A            jr nz,3F
 265+ 94FC 7D               ld a,l
 266+ 94FD C6 20            add a,$20
 267+ 94FF 6F               ld l,a
 268+ 9500 38 04            jr c,3F
 269+ 9502 7C               ld a,h
 270+ 9503 D6 08            sub 8
 271+ 9505 67               ld h,a
 272+ 9506 7C           3 ld a,h
 273+ 9507 FE 58            cp $58
 274+ 9509 28 02            jr z,4F
 275+ 950B 10 CB            djnz 1B
 276+ 950D ED 7B E4 89  4 ld sp,(Stack)
 277+ 9511 C9           	ret
 278+ 9512
 279+ 9512 ED 73 E4 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 280+ 9516 FD F9        	ld sp,iy
 281+ 9518 06 08            ld b,8
 282+ 951A D1           1 pop de
 283+ 951B 7B           	ld a,e
 284+ 951C AE           	xor (hl)
 285+ 951D 77           	ld (hl),a
 286+ 951E 23           	inc hl
 287+ 951F 7A           	ld a,d
 288+ 9520 AE           	xor (hl)
 289+ 9521 77           	ld (hl),a
 290+ 9522 2B           	dec hl
 291+ 9523 24             	inc h
 292+ 9524 7C               ld a,h
 293+ 9525 E6 07            and 7
 294+ 9527 20 0A            jr nz,2F
 295+ 9529 7D               ld a,l
 296+ 952A C6 20            add a,$20
 297+ 952C 6F               ld l,a
 298+ 952D 38 04            jr c,2F
 299+ 952F 7C               ld a,h
 300+ 9530 D6 08            sub 8
 301+ 9532 67               ld h,a
 302+ 9533 7C           2 ld a,h
 303+ 9534 FE 58            cp $58
 304+ 9536 28 21            jr z,4F
 305+ 9538 D1               pop de
 306+ 9539 7A           	ld a,d
 307+ 953A AE           	xor (hl)
 308+ 953B 77           	ld (hl),a
 309+ 953C 23           	inc hl
 310+ 953D D1               pop de
 311+ 953E 7B           	ld a,e
 312+ 953F AE           	xor (hl)
 313+ 9540 77           	ld (hl),a
 314+ 9541 2B           	dec hl
 315+ 9542 24           	inc h
 316+ 9543 7C               ld a,h
 317+ 9544 E6 07            and 7
 318+ 9546 20 0A            jr nz,3F
 319+ 9548 7D               ld a,l
 320+ 9549 C6 20            add a,$20
 321+ 954B 6F               ld l,a
 322+ 954C 38 04            jr c,3F
 323+ 954E 7C               ld a,h
 324+ 954F D6 08            sub 8
 325+ 9551 67               ld h,a
 326+ 9552 7C           3 ld a,h
 327+ 9553 FE 58            cp $58
 328+ 9555 28 02            jr z,4F
 329+ 9557 10 C1            djnz 1B
 330+ 9559 ED 7B E4 89  4 ld sp,(Stack)
 331+ 955D C9           	ret
 332+ 955E
 333+ 955E ED 73 E4 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 334+ 9562 FD F9        	ld sp,iy
 335+ 9564 06 08            ld b,8
 336+ 9566 D1           1 pop de
 337+ 9567 7B           	ld a,e
 338+ 9568 AE           	xor (hl)
 339+ 9569 77           	ld (hl),a
 340+ 956A 24            	inc h
 341+ 956B 7C               ld a,h
 342+ 956C E6 07            and 7
 343+ 956E 20 0A            jr nz,2F
 344+ 9570 7D               ld a,l
 345+ 9571 C6 20            add a,$20
 346+ 9573 6F               ld l,a
 347+ 9574 38 04            jr c,2F
 348+ 9576 7C               ld a,h
 349+ 9577 D6 08            sub 8
 350+ 9579 67               ld h,a
 351+ 957A 7C           2 ld a,h
 352+ 957B FE 58            cp $58
 353+ 957D 28 1C            jr z,4F
 354+ 957F D1               pop de
 355+ 9580 7A           	ld a,d
 356+ 9581 AE           	xor (hl)
 357+ 9582 77           	ld (hl),a
 358+ 9583 24           	inc h
 359+ 9584 7C               ld a,h
 360+ 9585 E6 07            and 7
 361+ 9587 20 0A            jr nz,3F
 362+ 9589 7D               ld a,l
 363+ 958A C6 20            add a,$20
 364+ 958C 6F               ld l,a
 365+ 958D 38 04            jr c,3F
 366+ 958F 7C               ld a,h
 367+ 9590 D6 08            sub 8
 368+ 9592 67               ld h,a
 369+ 9593 7C           3 ld a,h
 370+ 9594 FE 58            cp $58
 371+ 9596 28 03            jr z,4F
 372+ 9598 D1               pop de
 373+ 9599 10 CB            djnz 1B
 374+ 959B ED 7B E4 89  4 ld sp,(Stack)
 375+ 959F C9           	ret
 376+ 95A0
 377+ 95A0              ; ---------------------------------------------------
 378+ 95A0              ;
 379+ 95A0              ;   27/02/23
 380+ 95A0              ;
 381+ 95A0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 382+ 95A0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 383+ 95A0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 384+ 95A0
 385+ 95A0 ED 73 E4 89  Pinta_Disparo ld (Stack),sp
 386+ 95A4 FD F9            ld sp,iy
 387+ 95A6 06 03            ld b,3
 388+ 95A8 D1           1 pop de
 389+ 95A9 7B               ld a,e
 390+ 95AA AE               xor (hl)
 391+ 95AB 77               ld (hl),a
 392+ 95AC 23               inc hl
 393+ 95AD 7A               ld a,d
 394+ 95AE AE               xor (hl)
 395+ 95AF 77               ld (hl),a
 396+ 95B0 2B               dec hl
 397+ 95B1
 398+ 95B1 24               inc h
 399+ 95B2 7C               ld a,h
 400+ 95B3 E6 07            and 7
 401+ 95B5 20 0A            jr nz,2F
 402+ 95B7 7D               ld a,l
 403+ 95B8 C6 20            add a,$20
 404+ 95BA 6F               ld l,a
 405+ 95BB 38 04            jr c,2F
 406+ 95BD 7C               ld a,h
 407+ 95BE D6 08            sub 8
 408+ 95C0 67               ld h,a
 409+ 95C1 7C           2 ld a,h
 410+ 95C2 FE 58            cp $58
 411+ 95C4 28 02            jr z,3F
 412+ 95C6
 413+ 95C6 10 E0            djnz 1B
 414+ 95C8 ED 7B E4 89  3 ld sp,(Stack)
 415+ 95CC C9               ret
 416+ 95CD
# file closed: Rutinas_de_impresion_sprites.asm
1900  95CD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 95CD
   2+ 95CD              ; ******************************************************************************************************************************************************************************************
   3+ 95CD              ;
   4+ 95CD              ;   20/05/23
   5+ 95CD              ;
   6+ 95CD              ;	Recompone_posicion_inicio
   7+ 95CD              ;
   8+ 95CD              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 95CD              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 95CD              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 95CD              ;	_ a una u otra rutina.
  12+ 95CD
  13+ 95CD              Recompone_posicion_inicio
  14+ 95CD
  15+ 95CD 2A 9E 89     	ld hl,(Posicion_inicio)
  16+ 95D0 7D           	ld a,l
  17+ 95D1 E6 1F        	and $1f
  18+ 95D3 28 16        	jr z,1F
  19+ 95D5
  20+ 95D5 FE 1F        	cp $1f
  21+ 95D7 28 0D        	jr z,3F
  22+ 95D9
  23+ 95D9 21 B3 89     	ld hl,Ctrl_2
  24+ 95DC CB C6        	set 0,(hl)
  25+ 95DE 2A 90 89     	ld hl,(Puntero_objeto)
  26+ 95E1 22 D4 89     	ld (Repone_puntero_objeto),hl
  27+ 95E4 18 08        	jr 2F
  28+ 95E6
  29+ 95E6 CD 94 97     3 call Mov_left
  30+ 95E9 18 03        	jr 2F
  31+ 95EB
  32+ 95EB CD 71 96     1 call Mov_right
  33+ 95EE 21 D0 EA     2 ld hl,Sprite_vacio
  34+ 95F1 22 90 89     	ld (Puntero_objeto),hl
  35+ 95F4 C9           	ret
  36+ 95F5
  37+ 95F5              ; ******************************************************************************************************************************************************************************************
  38+ 95F5              ;
  39+ 95F5              ;   27/05/23
  40+ 95F5              ;
  41+ 95F5              ;	Mov_down
  42+ 95F5              ;
  43+ 95F5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 95F5              ;
  45+ 95F5              ;
  46+ 95F5              Mov_down
  47+ 95F5
  48+ 95F5 CD 5F 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 95F8              ;																	; _ repone (Puntero_objeto).
  50+ 95F8 21 AE 89     	ld hl,Ctrl_0
  51+ 95FB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 95FD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 95FD              ; 																	; _ en el caso de que no lo haya.
  54+ 95FD 3A B8 89     	ld a,(Vel_down)
  55+ 9600 47           	ld b,a
  56+ 9601 2A 8E 89         ld hl,(Posicion_actual)
  57+ 9604 CD A4 9F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9607 E6 02        	and 2
  59+ 9609 28 17        	jr z,1F
  60+ 960B
  61+ 960B              ; Nos encontramos en el último tercio de pantalla.
  62+ 960B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 960B
  64+ 960B 7C           	ld a,h
  65+ 960C FE 57        	cp $57
  66+ 960E 20 12        	jr nz,1F
  67+ 9610
  68+ 9610 7D           	ld a,l
  69+ 9611 C6 20        	add $20
  70+ 9613 30 0D        	jr nc,1F
  71+ 9615
  72+ 9615              ; ------------------------------
  73+ 9615              ;
  74+ 9615              ;	12/01/24
  75+ 9615
  76+ 9615              ;	call Reaparece_arriba
  77+ 9615 CD 21 99     	call Reinicio
  78+ 9618
  79+ 9618              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9618
  81+ 9618 3A F6 89     	ld a,(Ctrl_3)
  82+ 961B CB CF        	set 1,a
  83+ 961D 32 F6 89     	ld (Ctrl_3),a
  84+ 9620
  85+ 9620 18 08        	jr 3F
  86+ 9622              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9622              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9622              ; ------------------------------
  89+ 9622
  90+ 9622 CD CC 92     1 call NextScan
  91+ 9625 22 8E 89     	ld (Posicion_actual),hl
  92+ 9628 10 DA            djnz 2B
  93+ 962A CD C2 9F     3 call Genera_coordenadas
  94+ 962D C9           	ret
  95+ 962E
  96+ 962E              ; ******************************************************************************************************************************************************************************************
  97+ 962E              ;
  98+ 962E              ;   27/05/23
  99+ 962E              ;
 100+ 962E              ;	Mov_up
 101+ 962E              ;
 102+ 962E              ; 	Mueve el Sprite hacia arriba.
 103+ 962E              ;
 104+ 962E              ;
 105+ 962E              Mov_up
 106+ 962E
 107+ 962E CD 5F 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9631              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9631 21 AE 89     	ld hl,Ctrl_0
 110+ 9634 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9636              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9636              ; 																		; _ en el caso de que no lo haya.
 113+ 9636 3A B7 89     	ld a,(Vel_up)
 114+ 9639 47           	ld b,a
 115+ 963A 2A 8E 89     	ld hl,(Posicion_actual)
 116+ 963D CD A4 9F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9640 A7           	and a
 118+ 9641 20 10        	jr nz,1F
 119+ 9643
 120+ 9643              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9643              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9643
 123+ 9643 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9644 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9646 20 0B            jr nz,1F
 126+ 9648 7D               ld a,l
 127+ 9649 D6 20            sub $20
 128+ 964B 30 06            jr nc,1F
 129+ 964D 25               dec h
 130+ 964E
 131+ 964E              ; -----------------------------
 132+ 964E CD 02 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9651              ;	call Reinicio
 134+ 9651              ; -----------------------------
 135+ 9651
 136+ 9651 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9653 CD DB 92     1 call PreviousScan
 138+ 9656 22 8E 89     	ld (Posicion_actual),hl
 139+ 9659 10 E2            djnz 3B
 140+ 965B CD C2 9F     2 call Genera_coordenadas
 141+ 965E C9           	ret
 142+ 965F
 143+ 965F              ; -----------------------------
 144+ 965F              ;
 145+ 965F              ;	27/5/23
 146+ 965F              ;
 147+ 965F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 965F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 965F              ;
 150+ 965F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 965F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 965F              ;
 153+ 965F              ;	Modifica: A y (Puntero_objeto).
 154+ 965F
 155+ 965F 3A B3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9662 CB 47        	bit 0,a
 157+ 9664 C8           	ret z
 158+ 9665 CB 87        	res 0,a
 159+ 9667 32 B3 89     	ld (Ctrl_2),a
 160+ 966A 2A D4 89     	ld hl,(Repone_puntero_objeto)
 161+ 966D 22 90 89     	ld (Puntero_objeto),hl
 162+ 9670 C9           	ret
 163+ 9671
 164+ 9671              ; ******************************************************************************************************************************************************************************************
 165+ 9671              ;
 166+ 9671              ;	19/10/22
 167+ 9671              ;
 168+ 9671              ;	Mov_right.
 169+ 9671              ;
 170+ 9671              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9671              ;
 172+ 9671
 173+ 9671 3A AE 89     Mov_right ld a,(Ctrl_0)
 174+ 9674 CB 77        	bit 6,a
 175+ 9676 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9678
 177+ 9678 CD B0 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 967B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 967C
 180+ 967C 21 AE 89     	ld hl,Ctrl_0
 181+ 967F CB E6        	set 4,(hl)
 182+ 9681 18 52        	jr 8F
 183+ 9683
 184+ 9683 21 AE 89     10 ld hl,Ctrl_0
 185+ 9686 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9688              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9688              ; 																	; _ en el caso de que no lo haya.
 188+ 9688 3A 92 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 968B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 968D 20 46        	jr nz,8F
 191+ 968F
 192+ 968F 3A 94 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9692 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9693 28 40        	jr z,8F
 195+ 9695
 196+ 9695              ; ---------- ---------- ----------
 197+ 9695              ;
 198+ 9695              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9695
 200+ 9695 3A B6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9698 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 969A 28 11        	jr z,1F
 203+ 969C 38 06        	jr c,6F
 204+ 969E FE 04        	cp 4
 205+ 96A0 28 14        	jr z,7F
 206+ 96A2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 96A4
 208+ 96A4              ; ---------- ---------- ----------
 209+ 96A4              ;
 210+ 96A4              ; Perfiles de velocidad
 211+ 96A4              ;
 212+ 96A4
 213+ 96A4 3A 94 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 96A7 FE FE        	cp $fe
 215+ 96A9 20 2A        	jr nz,8F
 216+ 96AB 18 10        	jr 3F
 217+ 96AD 3A 94 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 96B0 FE FD        	cp $fd
 219+ 96B2 20 21        	jr nz,8F
 220+ 96B4 18 07        	jr 3F
 221+ 96B6 3A 94 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 96B9 FE FB        	cp $fb
 223+ 96BB 20 18        	jr nz,8F
 224+ 96BD
 225+ 96BD              ; ---------- ---------- ----------
 226+ 96BD
 227+ 96BD              3
 228+ 96BD CD F0 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 96C0              ;	call Reinicio
 230+ 96C0
 231+ 96C0              ; ---------- ---------- ----------
 232+ 96C0              ;
 233+ 96C0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 96C0
 235+ 96C0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 96C2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 96C3 CD DC 96     	call DESPLZ_DER
 238+ 96C6 C1           	pop bc
 239+ 96C7 10 F9        	djnz 5B
 240+ 96C9 2A 8E 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 96CC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 96CD 22 8E 89     	ld (Posicion_actual),hl
 243+ 96D0 CD C2 9F     	call Genera_coordenadas
 244+ 96D3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 96D5
 246+ 96D5              ; ---------- ---------- ----------
 247+ 96D5
 248+ 96D5 2A 8E 89     8 ld hl,(Posicion_actual)
 249+ 96D8 CD DC 96     	call DESPLZ_DER
 250+ 96DB C9           2 ret
 251+ 96DC
 252+ 96DC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 96DC              ;
 254+ 96DC              ;	22/9/22
 255+ 96DC              ;
 256+ 96DC
 257+ 96DC CD EB 96     DESPLZ_DER call Desplaza_derecha
 258+ 96DF CD 37 97         call modifica_parametros_1er_DESPLZ_2
 259+ 96E2 CD 60 97         call Ciclo_completo
 260+ 96E5 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 96E8 CB FE        	set 7,(hl)
 262+ 96EA C9           	ret
 263+ 96EB
 264+ 96EB              ; ******************************************************************************************************************************************************************************************
 265+ 96EB              ;	15/02/23
 266+ 96EB              ;
 267+ 96EB
 268+ 96EB 3A B6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 96EE 47           	ld b,a
 270+ 96EF 2A 9A 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 96F2 23           1 inc hl
 272+ 96F3 23           	inc hl
 273+ 96F4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 96F6 22 9A 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 96F9 CD 97 8C     	call Extrae_address
 276+ 96FC 22 90 89     	ld (Puntero_objeto),hl
 277+ 96FF
 278+ 96FF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 96FF
 280+ 96FF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 96FF              ; Cuántos movimientos hemos hecho ??
 282+ 96FF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 96FF
 284+ 96FF 2A 96 89     7 ld hl,(Indice_Sprite_der)
 285+ 9702 EB           	ex de,hl
 286+ 9703 A7           	and a
 287+ 9704 ED 52        	sbc hl,de
 288+ 9706 CB 3D        	srl l
 289+ 9708 3E 08        6 ld a,8
 290+ 970A 95           	sub l
 291+ 970B 30 1E        	jr nc,3F
 292+ 970D
 293+ 970D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 970D              ; B="0".
 295+ 970D
 296+ 970D 04           4 inc b
 297+ 970E 3C           	inc a
 298+ 970F 20 FC        	jr nz,4B
 299+ 9711 78           	ld a,b
 300+ 9712 08           	ex af,af
 301+ 9713 2A 96 89     	ld hl,(Indice_Sprite_der)
 302+ 9716 23           5 inc hl
 303+ 9717 23           	inc hl
 304+ 9718 10 FC        	djnz 5B
 305+ 971A 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 306+ 971D CD 97 8C     	call Extrae_address
 307+ 9720 22 90 89     	ld (Puntero_objeto),hl
 308+ 9723
 309+ 9723              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9723              ; _(Posicion_actual).
 311+ 9723
 312+ 9723 21 8E 89     	ld hl,Posicion_actual
 313+ 9726 34           	inc (hl)
 314+ 9727 08               ex af,af
 315+ 9728 6F           	ld l,a
 316+ 9729 18 DD        	jr 6B
 317+ 972B
 318+ 972B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 972B
 320+ 972B 47           3 ld b,a
 321+ 972C 2A 98 89     	ld hl,(Indice_Sprite_izq)
 322+ 972F 23           2 inc hl
 323+ 9730 23           	inc hl
 324+ 9731 10 FC        	djnz 2B
 325+ 9733 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9736 C9           8 ret
 327+ 9737
 328+ 9737              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9737              ;
 330+ 9737              ;	24/7/22
 331+ 9737              ;
 332+ 9737              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9737              ;
 334+ 9737              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9737              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9737              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9737
 338+ 9737 3A 94 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 973A A7           	and a
 340+ 973B 20 1F        	jr nz,1F
 341+ 973D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 973F 32 94 89         ld (CTRL_DESPLZ),a
 343+ 9742
 344+ 9742 21 8D 89     	ld hl,Columns
 345+ 9745 34           	inc (hl)
 346+ 9746 3A A0 89     	ld a,(Cuad_objeto)
 347+ 9749 E6 01        	and 1
 348+ 974B 28 0F        	jr z,1F
 349+ 974D 2A 8E 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9750 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9751 22 8E 89     	ld (Posicion_actual),hl
 352+ 9754 CD C2 9F     	call Genera_coordenadas
 353+ 9757 CD BC 98     	call Inc_CTRL_DESPLZ
 354+ 975A 18 03        	jr 2F
 355+ 975C CD BC 98     1 call Inc_CTRL_DESPLZ
 356+ 975F C9           2 ret
 357+ 9760
 358+ 9760              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9760              ;
 360+ 9760              ;	24/7/22
 361+ 9760              ;
 362+ 9760              ;	Ciclo_completo.
 363+ 9760              ;
 364+ 9760              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9760              ;
 366+ 9760              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9760              ; 	Decrementamos (Columns).
 368+ 9760              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9760              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9760
 371+ 9760
 372+ 9760 3A 94 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9763 FE FF        	cp $ff
 374+ 9765 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9767 E6 F0        	and $f0
 376+ 9769 20 28        	jr nz,3F
 377+ 976B
 378+ 976B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 976B
 380+ 976B 3A 94 89     	ld a,(CTRL_DESPLZ)
 381+ 976E 47           	ld b,a
 382+ 976F 3E F8        	ld a,$f8
 383+ 9771 80           	add b
 384+ 9772 32 94 89     	ld (CTRL_DESPLZ),a
 385+ 9775 18 1C        	jr 3F
 386+ 9777 21 8D 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 977A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 977B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 977C 32 94 89     	ld (CTRL_DESPLZ),a
 390+ 977F 3A A0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9782 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9784 20 0A        	jr nz,2F
 393+ 9786 2A 8E 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9789 23           	inc hl
 395+ 978A 22 8E 89     	ld (Posicion_actual),hl
 396+ 978D CD C2 9F     	call Genera_coordenadas
 397+ 9790
 398+ 9790              ; Inicia el puntero de Sprite.
 399+ 9790
 400+ 9790 CD AC 8C     2 call Inicia_puntero_objeto_der
 401+ 9793 C9           3 ret
 402+ 9794
 403+ 9794              ; ******************************************************************************************************************************************************************************************
 404+ 9794              ;
 405+ 9794              ;	15/02/23
 406+ 9794              ;
 407+ 9794              ;	Mov_left.
 408+ 9794              ;
 409+ 9794              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9794              ;
 411+ 9794              Mov_left
 412+ 9794
 413+ 9794 21 AE 89     	ld hl,Ctrl_0
 414+ 9797 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9799              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9799              ; 																	; _ en el caso de que no lo haya.
 417+ 9799 3A AE 89     	ld a,(Ctrl_0)
 418+ 979C CB 77        	bit 6,a
 419+ 979E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 97A0
 421+ 97A0 CD B6 98     	call Stop_Amadeus_left
 422+ 97A3 C8           	ret z
 423+ 97A4 20 4A        	jr nz,8F
 424+ 97A6
 425+ 97A6 3A 92 89     11 ld a,(Coordenada_X)
 426+ 97A9 A7           	and a
 427+ 97AA 20 44        	jr nz,8F
 428+ 97AC
 429+ 97AC 3A 94 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 97AF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 97B0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 97B2
 433+ 97B2              ; ---------- ---------- ----------
 434+ 97B2
 435+ 97B2 3A B5 89     	ld a,(Vel_left)
 436+ 97B5 FE 02        	cp 2
 437+ 97B7 28 0F        	jr z,1F
 438+ 97B9 38 04        	jr c,6F
 439+ 97BB FE 04        	cp 4
 440+ 97BD 28 12        	jr z,7F
 441+ 97BF
 442+ 97BF              ; ---------- ---------- ----------
 443+ 97BF
 444+ 97BF 3A 94 89     6 ld a,(CTRL_DESPLZ)
 445+ 97C2 FE F8        	cp $f8
 446+ 97C4 20 2A        	jr nz,8F
 447+ 97C6 18 10        	jr 4F
 448+ 97C8 3A 94 89     1 ld a,(CTRL_DESPLZ)
 449+ 97CB FE F9        	cp $f9
 450+ 97CD 20 21        	jr nz,8F
 451+ 97CF 18 07        	jr 4F
 452+ 97D1 3A 94 89     7 ld a,(CTRL_DESPLZ)
 453+ 97D4 FE FB        	cp $fb
 454+ 97D6 20 18        	jr nz,8F
 455+ 97D8
 456+ 97D8              ; ---------- ---------- ----------
 457+ 97D8
 458+ 97D8              4
 459+ 97D8 CD DE 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 97DB              ;	call Reinicio
 461+ 97DB
 462+ 97DB              ; ---------- ---------- ----------
 463+ 97DB
 464+ 97DB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 97DD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 97DE
 467+ 97DE              ;	ld hl,(Indice_Sprite_izq)
 468+ 97DE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 97DE
 470+ 97DE CD F7 97     	call DESPLZ_IZQ
 471+ 97E1 C1           	pop bc
 472+ 97E2 10 F9        	djnz 5B
 473+ 97E4 2A 8E 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 97E7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 97E8 22 8E 89     	ld (Posicion_actual),hl
 476+ 97EB CD C2 9F     	call Genera_coordenadas
 477+ 97EE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 97F0
 479+ 97F0              ; ---------- ---------- ----------
 480+ 97F0
 481+ 97F0              ; Movemos, no hay recolocación.
 482+ 97F0
 483+ 97F0 2A 8E 89     8 ld hl,(Posicion_actual)
 484+ 97F3 CD F7 97     	call DESPLZ_IZQ
 485+ 97F6 C9           2 ret
 486+ 97F7
 487+ 97F7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 97F7              ;
 489+ 97F7              ;	22/9/22
 490+ 97F7
 491+ 97F7              DESPLZ_IZQ
 492+ 97F7
 493+ 97F7 CD 06 98     	call Desplaza_izquierda
 494+ 97FA CD 52 98         call modifica_parametros_1er_DESPLZ
 495+ 97FD CD 7A 98     	call Ciclo_completo_2
 496+ 9800 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9803 CB BE        	res 7,(hl)
 498+ 9805 C9           	ret
 499+ 9806
 500+ 9806              Desplaza_izquierda
 501+ 9806
 502+ 9806 3A B5 89     	ld a,(Vel_left)
 503+ 9809 47           	ld b,a
 504+ 980A 2A 9C 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 980D 23           1 inc hl
 506+ 980E 23           	inc hl
 507+ 980F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9811 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9814 CD 97 8C     	call Extrae_address
 510+ 9817 22 90 89     	ld (Puntero_objeto),hl
 511+ 981A
 512+ 981A              ; Modifica (Puntero_DESPLZ_der).
 513+ 981A
 514+ 981A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 981A              ; Cuántos movimientos hemos hecho ??
 516+ 981A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 981A
 518+ 981A 2A 98 89     7 ld hl,(Indice_Sprite_izq)
 519+ 981D EB           	ex de,hl
 520+ 981E A7           	and a
 521+ 981F ED 52        	sbc hl,de
 522+ 9821 CB 3D        	srl l
 523+ 9823 3E 08        6 ld a,8
 524+ 9825 95           	sub l
 525+ 9826 30 1E        	jr nc,3F
 526+ 9828
 527+ 9828              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9828              ; B="0".
 529+ 9828
 530+ 9828 04           4 inc b
 531+ 9829 3C           	inc a
 532+ 982A 20 FC        	jr nz,4B
 533+ 982C 78           	ld a,b
 534+ 982D 08           	ex af,af
 535+ 982E 2A 98 89     	ld hl,(Indice_Sprite_izq)
 536+ 9831 23           5 inc hl
 537+ 9832 23           	inc hl
 538+ 9833 10 FC        	djnz 5B
 539+ 9835 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9838 CD 97 8C     	call Extrae_address
 541+ 983B 22 90 89     	ld (Puntero_objeto),hl
 542+ 983E
 543+ 983E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 983E              ; _(Posicion_actual).
 545+ 983E
 546+ 983E 21 8E 89     	ld hl,Posicion_actual
 547+ 9841 35           	dec (hl)
 548+ 9842 08           	ex af,af
 549+ 9843 6F           	ld l,a
 550+ 9844 18 DD        	jr 6B
 551+ 9846
 552+ 9846              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9846
 554+ 9846 47           3 ld b,a
 555+ 9847 2A 96 89     	ld hl,(Indice_Sprite_der)
 556+ 984A 23           2 inc hl
 557+ 984B 23           	inc hl
 558+ 984C 10 FC        	djnz 2B
 559+ 984E 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9851 C9           8 ret
 561+ 9852
 562+ 9852              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9852              ;
 564+ 9852              ;	modifica_parametros_1er_DESPLZ
 565+ 9852              ;
 566+ 9852              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9852              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9852              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9852
 570+ 9852 3A 94 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9855 A7           	and a
 572+ 9856 20 1E        	jr nz,1F
 573+ 9858 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9859 32 94 89         ld (CTRL_DESPLZ),a
 575+ 985C 21 8D 89     	ld hl,Columns
 576+ 985F 34           	inc (hl)
 577+ 9860 3A A0 89     	ld a,(Cuad_objeto)
 578+ 9863 E6 01        	and 1
 579+ 9865 20 0F        	jr nz,1F
 580+ 9867 2A 8E 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 986A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 986B 22 8E 89     	ld (Posicion_actual),hl
 583+ 986E CD C2 9F     	call Genera_coordenadas
 584+ 9871 CD CD 98     	call Dec_CTRL_DESPLZ
 585+ 9874 18 03        	jr 2F
 586+ 9876 CD CD 98     1 call Dec_CTRL_DESPLZ
 587+ 9879 C9           2 ret
 588+ 987A
 589+ 987A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 987A
 591+ 987A 3A 94 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 987D FE F7        	cp $f7
 593+ 987F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9881 30 2C        	jr nc,3F
 595+ 9883
 596+ 9883              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9883
 598+ 9883 06 00        	ld b,0
 599+ 9885 04           4 inc b
 600+ 9886 3C           	inc a
 601+ 9887 FE F7        	cp $f7
 602+ 9889 20 FA        	jr nz,4B
 603+ 988B 3E FF        	ld a,$ff
 604+ 988D 90           	sub b
 605+ 988E 32 94 89     	ld (CTRL_DESPLZ),a
 606+ 9891 18 1C        	jr 3F
 607+ 9893
 608+ 9893              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9893
 610+ 9893 21 8D 89     1 ld hl,Columns
 611+ 9896 35           	dec (hl)
 612+ 9897 AF           	xor a
 613+ 9898 32 94 89     	ld (CTRL_DESPLZ),a
 614+ 989B 3A A0 89     	ld a,(Cuad_objeto)
 615+ 989E E6 01        	and 1
 616+ 98A0 28 0A        	jr z,2F
 617+ 98A2 2A 8E 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 98A5 2B           	dec hl
 619+ 98A6 22 8E 89     	ld (Posicion_actual),hl
 620+ 98A9 CD C2 9F     	call Genera_coordenadas
 621+ 98AC
 622+ 98AC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 98AC
 624+ 98AC CD BF 8C     2 call Inicia_puntero_objeto_izq
 625+ 98AF C9           3 ret
 626+ 98B0
 627+ 98B0              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 98B0              ;
 629+ 98B0              ;	19/10/22
 630+ 98B0              ;
 631+ 98B0              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 98B0              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 98B0
 634+ 98B0 3A 92 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 98B3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 98B5 C9           	ret
 637+ 98B6
 638+ 98B6              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 98B6              ;
 640+ 98B6              ;	19/10/22
 641+ 98B6              ;
 642+ 98B6              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 98B6              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 98B6
 645+ 98B6 3A 92 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 98B9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 98BB C9           	ret
 648+ 98BC
 649+ 98BC              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 98BC              ;
 651+ 98BC              ;	24/7/22
 652+ 98BC              ;
 653+ 98BC              ;	Inc_CTRL_DESPLZ
 654+ 98BC              ;
 655+ 98BC              ;
 656+ 98BC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 98BC
 658+ 98BC 21 94 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 98BF 3A B6 89     	ld a,(Vel_right)
 660+ 98C2 A7           	and a
 661+ 98C3 28 06        	jr z,1F
 662+ 98C5 47           	ld b,a
 663+ 98C6 34           3 inc (hl)
 664+ 98C7 10 FD        	djnz 3B
 665+ 98C9 18 01        	jr 2F
 666+ 98CB 34           1 inc (hl)
 667+ 98CC C9           2 ret
 668+ 98CD
 669+ 98CD              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 98CD              ;
 671+ 98CD              ;	5/2/23
 672+ 98CD              ;
 673+ 98CD              ;	Dec_CTRL_DESPLZ
 674+ 98CD              ;
 675+ 98CD              ;
 676+ 98CD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 98CD
 678+ 98CD 21 94 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 98D0 3A B5 89     	ld a,(Vel_left)
 680+ 98D3 A7           	and a
 681+ 98D4 28 06        	jr z,1F
 682+ 98D6 47           	ld b,a
 683+ 98D7 35           3 dec (hl)
 684+ 98D8 10 FD        	djnz 3B
 685+ 98DA 18 01        	jr 2F
 686+ 98DC 35           1 dec (hl)
 687+ 98DD C9           2 ret
 688+ 98DE
 689+ 98DE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 98DE
 691+ 98DE 2A 8E 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 98E1 01 1F 00     	ld bc,31
 693+ 98E4 A7           	and a
 694+ 98E5 ED 4A        	adc hl,bc
 695+ 98E7 22 8E 89     	ld (Posicion_actual),hl
 696+ 98EA 21 AE 89     	ld hl,Ctrl_0														; $xxx1
 697+ 98ED CB C6        	set 0,(hl)
 698+ 98EF C9           	ret
 699+ 98F0
 700+ 98F0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 98F0
 702+ 98F0 2A 8E 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 98F3 01 1F 00     	ld bc,31
 704+ 98F6 A7           	and a
 705+ 98F7 ED 42        	sbc hl,bc
 706+ 98F9 22 8E 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 98FC 21 AE 89     	ld hl,Ctrl_0
 708+ 98FF CB CE        	set 1,(hl)
 709+ 9901 C9           	ret
 710+ 9902
 711+ 9902              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9902
 713+ 9902 24           Reaparece_abajo inc h
 714+ 9903 01 E0 17     	ld bc,$17e0
 715+ 9906 A7           	and a
 716+ 9907 ED 4A        	adc hl,bc
 717+ 9909 22 8E 89     	ld (Posicion_actual),hl
 718+ 990C 21 AE 89     	ld hl,Ctrl_0
 719+ 990F CB D6        	set 2,(hl)
 720+ 9911 C9           	ret
 721+ 9912
 722+ 9912              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9912
 724+ 9912 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9915 A7           	and a
 726+ 9916 ED 42        	sbc hl,bc
 727+ 9918 22 8E 89     	ld (Posicion_actual),hl
 728+ 991B 21 AE 89     	ld hl,Ctrl_0
 729+ 991E CB DE        	set 3,(hl)
 730+ 9920 C9           	ret
 731+ 9921
 732+ 9921              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9921              ;
 734+ 9921              ;	15/07/23
 735+ 9921
 736+ 9921              Reinicio
 737+ 9921
 738+ 9921              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9921
 740+ 9921 AF           	xor a
 741+ 9922 21 CB 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9925 CD 43 99     	call Limpia_contenido_hl
 743+ 9928
 744+ 9928 21 8E 89     	ld hl,Posicion_actual
 745+ 992B CD 43 99     	call Limpia_contenido_hl
 746+ 992E
 747+ 992E CD FE 8D     	call Inicializa_Puntero_indice_mov
 748+ 9931 CD 0F 9A     	call Inicia_Puntero_mov
 749+ 9934
 750+ 9934 21 CD 89     	ld hl,Incrementa_puntero
 751+ 9937 06 05        	ld b,5
 752+ 9939 77           1 ld (hl),a
 753+ 993A 23           	inc hl
 754+ 993B 10 FC        	djnz 1B
 755+ 993D
 756+ 993D 21 B3 89     	ld hl,Ctrl_2
 757+ 9940 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9942
 759+ 9942 C9           	ret
 760+ 9943
 761+ 9943 77           Limpia_contenido_hl	ld (hl),a
 762+ 9944 23           	inc hl
 763+ 9945 77           	ld (hl),a
 764+ 9946 C9           	ret
 765+ 9947
 766+ 9947
# file closed: Direcciones.asm
1901  9947              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9947              ; ----- ----- ----- ----- -----
   2+ 9947              ;
   3+ 9947              ;   28/12/23
   4+ 9947
   5+ 9947              Movimiento
   6+ 9947
   7+ 9947              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9947
   9+ 9947 3A B3 89         ld a,(Ctrl_2)
  10+ 994A CB 57            bit 2,a
  11+ 994C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 994E
  13+ 994E 2A C9 89         ld hl,(Puntero_mov)
  14+ 9951 7E               ld a,(hl)
  15+ 9952
  16+ 9952              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9952
  18+ 9952              Inicia_desplazamiento.
  19+ 9952
  20+ 9952              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9952
  22+ 9952 CD 45 9A         call Ajusta_velocidad_desplazamiento
  23+ 9955
  24+ 9955              ; Iniciamos (Repetimos_mov).
  25+ 9955
  26+ 9955 7E               ld a,(hl)
  27+ 9956 E6 0F            and $0f
  28+ 9958 32 CF 89         ld (Repetimos_desplazamiento),a
  29+ 995B 32 D0 89         ld (Repetimos_desplazamiento_backup),a
  30+ 995E
  31+ 995E              ; Iniciamos (Cola_de_desplazamiento).
  32+ 995E
  33+ 995E 23               inc hl
  34+ 995F 7E               ld a,(hl)
  35+ 9960 32 D2 89         ld (Cola_de_desplazamiento),a
  36+ 9963 2B               dec hl
  37+ 9964
  38+ 9964 21 B3 89         ld hl,Ctrl_2
  39+ 9967 CB D6            set 2,(hl)
  40+ 9969
  41+ 9969              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9969              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9969
  44+ 9969              Desplazamiento_iniciado
  45+ 9969
  46+ 9969 CD 19 9A         call Aplica_desplazamiento
  47+ 996C
  48+ 996C              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 996C
  50+ 996C 3A F6 89         ld a,(Ctrl_3)
  51+ 996F CB 4F            bit 1,a
  52+ 9971 C0               ret nz
  53+ 9972
  54+ 9972 21 CF 89     3 ld hl,Repetimos_desplazamiento
  55+ 9975 35               dec (hl)
  56+ 9976 C0               ret nz
  57+ 9977
  58+ 9977              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9977              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9977              ; Analiza (Cola_de_desplazamiento).
  61+ 9977
  62+ 9977 3A D2 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 997A A7               and a
  64+ 997B CC 6E 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 997E 28 30            jr z,Reinicia_el_movimiento
  66+ 9980
  67+ 9980 FE FF            cp $ff
  68+ 9982 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9984
  70+ 9984 FE FE            cp $fe
  71+ 9986 CC F3 99         call z,Fijamos_bucle
  72+ 9989 28 25            jr z,Reinicia_el_movimiento
  73+ 998B
  74+ 998B FE FD            cp $fd
  75+ 998D 20 11            jr nz,1F
  76+ 998F
  77+ 998F              ; ---
  78+ 998F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 998F
  80+ 998F 3A B3 89         ld a,(Ctrl_2)
  81+ 9992 CB 5F            bit 3,a
  82+ 9994 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9996
  84+ 9996              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9996
  86+ 9996 21 B3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9999 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 999B
  89+ 999B CD 04 9A         call Inicia_Repetimos_movimiento
  90+ 999E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 99A0              ; ---
  92+ 99A0
  93+ 99A0 FE 01        1 cp 1
  94+ 99A2 CA DD 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 99A5
  96+ 99A5 3D               dec a
  97+ 99A6 32 D2 89         ld (Cola_de_desplazamiento),a
  98+ 99A9
  99+ 99A9 3A D0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 99AC 32 CF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 99AF              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 99AF C9               ret
 103+ 99B0
 104+ 99B0              Reinicia_el_movimiento
 105+ 99B0
 106+ 99B0 3A B3 89         ld a,(Ctrl_2)
 107+ 99B3 CB 5F            bit 3,a
 108+ 99B5 28 1B            jr z,2F
 109+ 99B7
 110+ 99B7              ; (Cola_de_desplazamiento)="254".
 111+ 99B7
 112+ 99B7 21 D1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 99BA 35               dec (hl)
 114+ 99BB 20 15            jr nz,2F
 115+ 99BD
 116+ 99BD              ; Fin de las repeticiones del último movimiento.
 117+ 99BD
 118+ 99BD 21 B3 89         ld hl,Ctrl_2
 119+ 99C0 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 99C2
 121+ 99C2 2A C9 89         ld hl,(Puntero_mov)
 122+ 99C5 23               inc hl
 123+ 99C6 23               inc hl
 124+ 99C7 23               inc hl
 125+ 99C8 22 C9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 99CB              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 99CB 7E               ld a,(hl)
 128+ 99CC 32 D2 89         ld (Cola_de_desplazamiento),a
 129+ 99CF
 130+ 99CF C3 77 99         jp Cola
 131+ 99D2
 132+ 99D2 CD 0F 9A     2 call Inicia_Puntero_mov
 133+ 99D5
 134+ 99D5 21 B3 89         ld hl,Ctrl_2
 135+ 99D8 CB 96            res 2,(hl)
 136+ 99DA
 137+ 99DA C3 47 99         jp Movimiento
 138+ 99DD
 139+ 99DD              Siguiente_desplazamiento
 140+ 99DD
 141+ 99DD              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 99DD              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 99DD
 144+ 99DD 21 B3 89         ld hl,Ctrl_2
 145+ 99E0 CB 96            res 2,(hl)
 146+ 99E2
 147+ 99E2 2A C9 89         ld hl,(Puntero_mov)
 148+ 99E5 23               inc hl
 149+ 99E6 23               inc hl
 150+ 99E7 22 C9 89         ld (Puntero_mov),hl
 151+ 99EA
 152+ 99EA 7E               ld a,(hl)
 153+ 99EB A7               and a
 154+ 99EC CC 6E 9A         call z,Incrementa_Puntero_indice_mov
 155+ 99EF CA B0 99         jp z,Reinicia_el_movimiento
 156+ 99F2
 157+ 99F2 C9               ret
 158+ 99F3
 159+ 99F3              ; Subrutinas -----------------------------------------
 160+ 99F3              ; ---------- --------- --------- ---------- ----------
 161+ 99F3              ;
 162+ 99F3              ;   24/07/23
 163+ 99F3              ;
 164+ 99F3              ;   Fijamos_bucle
 165+ 99F3              ;
 166+ 99F3              ;
 167+ 99F3
 168+ 99F3              Fijamos_bucle
 169+ 99F3
 170+ 99F3 3A CD 89         ld a,(Incrementa_puntero)
 171+ 99F6 3C               inc a
 172+ 99F7 32 CE 89         ld (Incrementa_puntero_backup),a
 173+ 99FA
 174+ 99FA CD 6E 9A         call Incrementa_Puntero_indice_mov
 175+ 99FD 2A C7 89         ld hl,(Puntero_indice_mov)
 176+ 9A00 22 CB 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9A03 C9               ret
 178+ 9A04
 179+ 9A04              ; ---------- --------- --------- ---------- ----------
 180+ 9A04              ;
 181+ 9A04              ;   07/7/23
 182+ 9A04              ;
 183+ 9A04              ;   Inicia_Repetimos_movimiento
 184+ 9A04              ;
 185+ 9A04              ;
 186+ 9A04
 187+ 9A04              Inicia_Repetimos_movimiento
 188+ 9A04
 189+ 9A04              ; Iniciamos (Repetimos_movimiento).
 190+ 9A04
 191+ 9A04 DD 2A C9 89      ld ix,(Puntero_mov)
 192+ 9A08 DD 7E 02         ld a,(ix+2)
 193+ 9A0B 32 D1 89         ld (Repetimos_movimiento),a
 194+ 9A0E
 195+ 9A0E C9               ret
 196+ 9A0F
 197+ 9A0F              ; ---------- --------- --------- ---------- ----------
 198+ 9A0F              ;
 199+ 9A0F              ;   26/6/23
 200+ 9A0F              ;
 201+ 9A0F              ;   Inicia_Puntero_mov
 202+ 9A0F              ;
 203+ 9A0F              ;
 204+ 9A0F
 205+ 9A0F 2A C7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9A12 CD 97 8C         call Extrae_address
 207+ 9A15 22 C9 89         ld (Puntero_mov),hl
 208+ 9A18 C9               ret
 209+ 9A19
 210+ 9A19              ; ---------- --------- --------- ---------- ----------
 211+ 9A19              ;
 212+ 9A19              ;   27/06/23
 213+ 9A19              ;
 214+ 9A19              ;   Aplica_movimiento.
 215+ 9A19
 216+ 9A19              Aplica_desplazamiento
 217+ 9A19
 218+ 9A19              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9A19
 220+ 9A19 2A C9 89         ld hl, (Puntero_mov)
 221+ 9A1C
 222+ 9A1C 7E               ld a,(hl)
 223+ 9A1D E6 F0            and $f0
 224+ 9A1F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9A20
 226+ 9A20 CB 7E            bit 7,(hl)
 227+ 9A22 28 03            jr z,1F
 228+ 9A24 CD 2E 96         call Mov_up
 229+ 9A27 2A C9 89     1 ld hl, (Puntero_mov)
 230+ 9A2A CB 76            bit 6,(hl)
 231+ 9A2C 28 03            jr z,2F
 232+ 9A2E CD F5 95         call Mov_down
 233+ 9A31
 234+ 9A31              ; Se ha aplicado reinicio ???
 235+ 9A31              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9A31
 237+ 9A31              ;    ld a,(Ctrl_3)
 238+ 9A31              ;    bit 1,a
 239+ 9A31              ;    ret nz
 240+ 9A31
 241+ 9A31 2A C9 89     2 ld hl, (Puntero_mov)
 242+ 9A34 CB 6E            bit 5,(hl)
 243+ 9A36 28 03            jr z,3F
 244+ 9A38 CD 94 97         call Mov_left
 245+ 9A3B 2A C9 89     3 ld hl, (Puntero_mov)
 246+ 9A3E CB 66            bit 4,(hl)
 247+ 9A40 C8               ret z
 248+ 9A41 CD 71 96         call Mov_right
 249+ 9A44 C9               ret
 250+ 9A45
 251+ 9A45              ; ---------- --------- --------- ---------- ----------
 252+ 9A45              ;
 253+ 9A45              ;   26/06/23
 254+ 9A45              ;
 255+ 9A45              ;   Ajusta_velocidad_desplazamiento.
 256+ 9A45
 257+ 9A45              Ajusta_velocidad_desplazamiento
 258+ 9A45
 259+ 9A45              ; 1er byte de la cadena de movimiento.
 260+ 9A45              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9A45
 262+ 9A45 CD 63 9A         call Extrae_nibble_alto
 263+ 9A48
 264+ 9A48 32 B7 89         ld (Vel_up),a
 265+ 9A4B 79               ld a,c
 266+ 9A4C E6 0F            and $0f
 267+ 9A4E 32 B8 89         ld (Vel_down),a
 268+ 9A51
 269+ 9A51              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9A51              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9A51
 272+ 9A51 23               inc hl
 273+ 9A52 CD 63 9A         call Extrae_nibble_alto
 274+ 9A55
 275+ 9A55 32 B5 89         ld (Vel_left),a
 276+ 9A58 79               ld a,c
 277+ 9A59 E6 0F            and $0f
 278+ 9A5B 32 B6 89         ld (Vel_right),a
 279+ 9A5E
 280+ 9A5E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9A5E
 282+ 9A5E 23               inc hl
 283+ 9A5F 22 C9 89         ld (Puntero_mov),hl
 284+ 9A62 C9               ret
 285+ 9A63
 286+ 9A63 06 04        Extrae_nibble_alto ld b,4
 287+ 9A65 7E               ld a,(hl)
 288+ 9A66 4F               ld c,a
 289+ 9A67 E6 F0            and $f0
 290+ 9A69 CB 3F        1 srl a
 291+ 9A6B 10 FC            djnz 1B
 292+ 9A6D C9               ret
 293+ 9A6E
 294+ 9A6E              ; ---------- --------- --------- ---------- ----------
 295+ 9A6E              ;
 296+ 9A6E              ;   5/7/23
 297+ 9A6E              ;
 298+ 9A6E              ;   Incrementa_Puntero_indice_mov
 299+ 9A6E
 300+ 9A6E              Incrementa_Puntero_indice_mov
 301+ 9A6E
 302+ 9A6E 21 CD 89         ld hl,Incrementa_puntero
 303+ 9A71 34               inc (hl)
 304+ 9A72
 305+ 9A72 2A C7 89         ld hl,(Puntero_indice_mov)
 306+ 9A75 01 02 00         ld bc,2
 307+ 9A78 A7               and a
 308+ 9A79 09               add hl,bc
 309+ 9A7A 22 C7 89         ld (Puntero_indice_mov),hl
 310+ 9A7D
 311+ 9A7D 7E               ld a,(hl)
 312+ 9A7E A7               and a
 313+ 9A7F
 314+ 9A7F              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9A7F
 316+ 9A7F              ;    jr z,$
 317+ 9A7F
 318+ 9A7F              ;! Reinicia el Patrón de movimiento.
 319+ 9A7F
 320+ 9A7F CC 84 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9A82
 322+ 9A82 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9A83
 324+ 9A83 C9               ret
 325+ 9A84
 326+ 9A84              ; ---------- --------- --------- ---------- ----------
 327+ 9A84              ;
 328+ 9A84              ;   15/01/24
 329+ 9A84              ;
 330+ 9A84              ;   Inicializa_Puntero_indice_mov
 331+ 9A84
 332+ 9A84              Inicializa_Puntero_indice_mov_2
 333+ 9A84
 334+ 9A84              ; Existe etiqueta de bucle principal???
 335+ 9A84
 336+ 9A84 2A CB 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9A87 24               inc h
 338+ 9A88 25               dec h
 339+ 9A89 28 05            jr z,2F
 340+ 9A8B
 341+ 9A8B 22 C7 89         ld (Puntero_indice_mov),hl
 342+ 9A8E 18 14            jr 3F
 343+ 9A90
 344+ 9A90              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A90
 346+ 9A90 3A CD 89     2 ld a,(Incrementa_puntero)
 347+ 9A93 47               ld b,a
 348+ 9A94
 349+ 9A94 2A C7 89         ld hl,(Puntero_indice_mov)
 350+ 9A97 2B           1 dec hl
 351+ 9A98 2B               dec hl
 352+ 9A99 10 FC            djnz 1B
 353+ 9A9B 22 C7 89         ld (Puntero_indice_mov),hl
 354+ 9A9E
 355+ 9A9E AF               xor a
 356+ 9A9F 32 CD 89         ld (Incrementa_puntero),a
 357+ 9AA2 18 06            jr 4F
 358+ 9AA4
 359+ 9AA4 3A CE 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9AA7 32 CD 89         ld (Incrementa_puntero),a
 361+ 9AAA C9           4 ret
 362+ 9AAB
 363+ 9AAB              ; ----------------------------------------------------------------------
 364+ 9AAB              ;
 365+ 9AAB              ;   30/01/24
 366+ 9AAB              ;
 367+ 9AAB              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9AAB
 369+ 9AAB 3A 8B 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9AAE CD 4F 8F         call Calcula_salto_en_BC
 371+ 9AB1 21 B9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9AB4 A7               and a
 373+ 9AB5 ED 4A            adc hl,bc
 374+ 9AB7 C9               ret
 375+ 9AB8
 376+ 9AB8              ; ----------------------------------------------------------------------
 377+ 9AB8              ;
 378+ 9AB8              ;   30/01/24
 379+ 9AB8              ;
 380+ 9AB8              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9AB8              ;
 382+ 9AB8              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9AB8
 384+ 9AB8 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9AB9 23               inc hl
 386+ 9ABA 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9ABB 69               ld l,c
 388+ 9ABC 60               ld h,b
 389+ 9ABD 22 AC 89         ld (Contador_de_mov_masticados),hl
 390+ 9AC0 C9               ret
 391+ 9AC1
# file closed: Movimiento.asm
1902  9AC1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9AC1              ; ******************************************************************************************************************************************************************************************
   2+ 9AC1              ;
   3+ 9AC1              ;   21/07/23
   4+ 9AC1              ;
   5+ 9AC1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9AC1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9AC1              ;
   8+ 9AC1              ;
   9+ 9AC1              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9AC1              ;
  11+ 9AC1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9AC1              ;               _ hacen las entidades hacia abajo.
  13+ 9AC1              ;
  14+ 9AC1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9AC1              ;
  16+ 9AC1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9AC1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9AC1              ;
  19+ 9AC1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9AC1              ;           _ la bala.
  21+ 9AC1              ;
  22+ 9AC1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9AC1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9AC1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9AC1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9AC1              ;           _ en el momento de generarse la bala)).
  27+ 9AC1
  28+ 9AC1              Genera_disparo
  29+ 9AC1
  30+ 9AC1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9AC1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9AC1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9AC1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9AC1              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9AC1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9AC1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9AC1
  38+ 9AC1              ; Exclusiones:
  39+ 9AC1
  40+ 9AC1 3A B8 89         ld a,(Vel_down)
  41+ 9AC4 47               ld b,a
  42+ 9AC5 3A 08 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9AC8 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9AC9 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9ACA 3A AF 89         ld a,(Columnas)
  46+ 9ACD 47               ld b,a
  47+ 9ACE 3A 8D 89         ld a,(Columns)
  48+ 9AD1 B8               cp b
  49+ 9AD2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9AD3
  51+ 9AD3              ; ----- ----- -----
  52+ 9AD3
  53+ 9AD3 3A AE 89         ld a,(Ctrl_0)
  54+ 9AD6 CB 77            bit 6,a
  55+ 9AD8 20 06            jr nz,14F
  56+ 9ADA
  57+ 9ADA 3A 93 89         ld a,(Coordenada_y)
  58+ 9ADD FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9ADF D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9AE0
  61+ 9AE0 21 31 81     14 ld hl,Indice_disparo
  62+ 9AE3 3A 94 89         ld a,(CTRL_DESPLZ)
  63+ 9AE6 4F               ld c,a
  64+ 9AE7 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9AE9              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9AE9              ;                                            ""        ""       "f9", B="1"
  67+ 9AE9              ;                                            ""        ""       "fb", B="2"
  68+ 9AE9              ;                                            ""        ""       "fb", B="3"
  69+ 9AE9 A7               and a
  70+ 9AEA 28 10            jr z,1F
  71+ 9AEC E6 01            and 1
  72+ 9AEE C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9AEF
  74+ 9AEF 79               ld a,c
  75+ 9AF0 16 F9            ld d,$f9
  76+ 9AF2 23           2 inc hl
  77+ 9AF3 23               inc hl
  78+ 9AF4 04               inc b
  79+ 9AF5 BA               cp d
  80+ 9AF6 28 04            jr z,1F
  81+ 9AF8 14               inc d
  82+ 9AF9 14               inc d
  83+ 9AFA 18 F6            jr 2B
  84+ 9AFC
  85+ 9AFC CD 97 8C     1 call Extrae_address
  86+ 9AFF E5               push hl
  87+ 9B00 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9B02 DD 21 A0 95  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9B06
  90+ 9B06              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9B06              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9B06
  93+ 9B06 3A AE 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9B09 CB 77            bit 6,a
  95+ 9B0B 20 04            jr nz,19F
  96+ 9B0D
  97+ 9B0D AF               xor a
  98+ 9B0E 32 11 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9B11
 100+ 9B11 3A A0 89     19 ld a,(Cuad_objeto)
 101+ 9B14 FE 02            cp 2
 102+ 9B16 38 66            jr c,3F
 103+ 9B18 28 64            jr z,3F
 104+ 9B1A
 105+ 9B1A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9B1A
 107+ 9B1A E6 01            and 1
 108+ 9B1C 28 30            jr z,4F
 109+ 9B1E
 110+ 9B1E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9B1E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9B1E              ;
 113+ 9B1E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9B1E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9B1E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9B1E
 117+ 9B1E 2A 8E 89     	ld hl,(Posicion_actual)
 118+ 9B21
 119+ 9B21              ;   Amadeus o entidad ???.
 120+ 9B21
 121+ 9B21 3A AE 89         ld a,(Ctrl_0)
 122+ 9B24 CB 77            bit 6,a
 123+ 9B26 28 0A            jr z,8F
 124+ 9B28
 125+ 9B28              ; 	Dispara Amadeus.
 126+ 9B28
 127+ 9B28 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9B2A CD DB 92         call PreviousScan
 129+ 9B2D CD DB 92         call PreviousScan
 130+ 9B30
 131+ 9B30              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9B30              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9B30              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9B30              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9B30
 136+ 9B30 18 11            jr 10F
 137+ 9B32
 138+ 9B32              ; 	Dispara Entidad.
 139+ 9B32
 140+ 9B32 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9B35              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9B35
 143+ 9B35              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9B35              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9B35
 146+ 9B35 C5               push bc
 147+ 9B36 06 10            ld b,16
 148+ 9B38 CD CC 92     9 call NextScan
 149+ 9B3B 10 FB            djnz 9B
 150+ 9B3D C1               pop bc
 151+ 9B3E CD A8 9B         call Ajusta_disparo_parte_izquierda
 152+ 9B41 18 06            jr 17F
 153+ 9B43
 154+ 9B43              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9B43              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9B43              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9B43              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9B43
 159+ 9B43 CD A8 9B     10 call Ajusta_disparo_parte_izquierda
 160+ 9B46 CD 1D 9C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9B49              ;                                                      ; _al generar el disparo.
 162+ 9B49
 163+ 9B49              ; 	LLegados a este punto tendremos:
 164+ 9B49              ;
 165+ 9B49              ;       Puntero_objeto_disparo en IY.
 166+ 9B49              ;       Rutinas_de_impresion en IX.
 167+ 9B49              ;       Puntero_de_impresion en HL.
 168+ 9B49              ;       Impacto/Dirección en BC.
 169+ 9B49
 170+ 9B49 CD B0 9B     17 call Almacena_disparo
 171+ 9B4C 18 52            jr 6F                                             ; RET.
 172+ 9B4E
 173+ 9B4E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9B4E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9B4E              ;
 176+ 9B4E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9B4E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9B4E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9B4E
 180+ 9B4E 2A 8E 89     4 ld hl,(Posicion_actual)
 181+ 9B51
 182+ 9B51              ;   Amadeus o entidad ???.
 183+ 9B51
 184+ 9B51 3A AE 89         ld a,(Ctrl_0)
 185+ 9B54 CB 77            bit 6,a
 186+ 9B56 28 0A            jr z,11F
 187+ 9B58
 188+ 9B58              ; 	Dispara Amadeus.
 189+ 9B58
 190+ 9B58 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9B5A CD DB 92         call PreviousScan
 192+ 9B5D CD DB 92         call PreviousScan
 193+ 9B60
 194+ 9B60              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9B60              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9B60              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9B60              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9B60
 199+ 9B60 18 11            jr 13F
 200+ 9B62
 201+ 9B62              ; 	Dispara Entidad.
 202+ 9B62
 203+ 9B62 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9B65              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9B65
 206+ 9B65              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9B65              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9B65
 209+ 9B65 C5               push bc
 210+ 9B66 06 10            ld b,16
 211+ 9B68 CD CC 92     12 call NextScan
 212+ 9B6B 10 FB            djnz 12B
 213+ 9B6D C1               pop bc
 214+ 9B6E
 215+ 9B6E CD A1 9B         call Ajusta_disparo_parte_derecha
 216+ 9B71 18 06            jr 18F
 217+ 9B73
 218+ 9B73              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9B73              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9B73              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9B73              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9B73
 223+ 9B73 CD A1 9B     13 call Ajusta_disparo_parte_derecha
 224+ 9B76 CD 1D 9C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9B79              ;                                                       ; _al generar el disparo.
 226+ 9B79
 227+ 9B79              ; LLegados a este punto tendremos:
 228+ 9B79              ;
 229+ 9B79              ;       Puntero_objeto_disparo en IY.
 230+ 9B79              ;       Rutinas_de_impresion en IX.
 231+ 9B79              ;       Puntero_de_impresion en HL.
 232+ 9B79              ;       Impacto/Dirección en BC.
 233+ 9B79
 234+ 9B79 CD B0 9B     18 call Almacena_disparo
 235+ 9B7C 18 22            jr 6F                                               ; RET.
 236+ 9B7E
 237+ 9B7E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9B7E
 239+ 9B7E 28 11        3 jr z,5F
 240+ 9B80
 241+ 9B80              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9B80              ;
 243+ 9B80              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9B80              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9B80              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9B80              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9B80
 248+ 9B80              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9B80              ;	   ""        ""       "f9", B="1"
 250+ 9B80              ;	   ""        ""       "fb", B="2"
 251+ 9B80              ; 	   ""        ""       "fb", B="3"
 252+ 9B80
 253+ 9B80 2A 8E 89     	ld hl,(Posicion_actual)
 254+ 9B83 CD CC 92     	call NextScan
 255+ 9B86
 256+ 9B86              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9B86              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9B86              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9B86              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9B86
 261+ 9B86 CD A8 9B         call Ajusta_disparo_parte_izquierda
 262+ 9B89
 263+ 9B89              ; 	No se produce impacto. B="$80"
 264+ 9B89              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9B89
 266+ 9B89 01 80 80         ld bc,$8080
 267+ 9B8C
 268+ 9B8C              ; 	LLegados a este punto tendremos:
 269+ 9B8C              ;
 270+ 9B8C              ;       Puntero_objeto_disparo en IY.
 271+ 9B8C              ;       Rutinas_de_impresion en IX.
 272+ 9B8C              ;       Puntero_de_impresion en HL.
 273+ 9B8C              ;       Impacto/Dirección en BC.
 274+ 9B8C
 275+ 9B8C CD B0 9B         call Almacena_disparo
 276+ 9B8F 18 0F            jr 6F                                           ; RET.
 277+ 9B91
 278+ 9B91              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9B91              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9B91              ;
 281+ 9B91              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9B91              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9B91              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9B91              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9B91
 286+ 9B91 2A 8E 89     5 ld hl,(Posicion_actual)
 287+ 9B94 CD CC 92     	call NextScan
 288+ 9B97
 289+ 9B97              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9B97              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9B97              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9B97              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9B97
 294+ 9B97 CD A1 9B         call Ajusta_disparo_parte_derecha
 295+ 9B9A
 296+ 9B9A              ; 	No se produce impacto. B="$80"
 297+ 9B9A              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9B9A
 299+ 9B9A 01 80 80     15 ld bc,$8080
 300+ 9B9D
 301+ 9B9D              ; 	LLegados a este punto tendremos:
 302+ 9B9D              ;
 303+ 9B9D              ;       Puntero_objeto_disparo en IY.
 304+ 9B9D              ;       Rutinas_de_impresion en IX.
 305+ 9B9D              ;       Puntero_de_impresion en HL.
 306+ 9B9D              ;       Impacto/Dirección en BC.
 307+ 9B9D
 308+ 9B9D CD B0 9B         call Almacena_disparo
 309+ 9BA0
 310+ 9BA0 C9           6 ret
 311+ 9BA1
 312+ 9BA1              ; ----------------------------------------------------------------
 313+ 9BA1              ;
 314+ 9BA1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9BA1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9BA1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9BA1
 318+ 9BA1 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9BA2 FE 02            cp 2
 320+ 9BA4 38 01            jr c,1F
 321+ 9BA6 23               inc hl
 322+ 9BA7 C9           1 ret
 323+ 9BA8
 324+ 9BA8 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9BA9 FE 01        	cp 1
 326+ 9BAB 20 01        	jr nz,1F
 327+ 9BAD 2B           	dec hl
 328+ 9BAE 2B           1 dec hl
 329+ 9BAF C9               ret
 330+ 9BB0
 331+ 9BB0              ; ----------------------------------------------------------------
 332+ 9BB0              ;
 333+ 9BB0              ;   25/02/23
 334+ 9BB0              ;
 335+ 9BB0              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9BB0              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9BB0              ;
 338+ 9BB0              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9BB0              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9BB0
 341+ 9BB0              Almacena_disparo
 342+ 9BB0
 343+ 9BB0 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9BB1 F1               pop af
 345+ 9BB2 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9BB3
 347+ 9BB3 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9BB4 E6 01            and 1
 349+ 9BB6 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9BB8              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9BB8              ; 	Dispara AMADEUS.
 352+ 9BB8
 353+ 9BB8              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9BB8              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9BB8              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9BB8              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9BB8
 358+ 9BB8 C5               push bc
 359+ 9BB9 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9BBC 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9BBF A7               and a
 362+ 9BC0 ED 42            sbc hl,bc
 363+ 9BC2 CC 1C 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9BC5 C1               pop bc
 365+ 9BC6 28 54            jr z,4F
 366+ 9BC8
 367+ 9BC8 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9BCB 23               inc hl
 369+ 9BCC 23               inc hl
 370+ 9BCD 22 FB 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9BD0              ;                                                   ; _ Disparo_(+1).
 372+ 9BD0 18 18            jr 2F
 373+ 9BD2
 374+ 9BD2              ; Dispara una entidad.
 375+ 9BD2
 376+ 9BD2 C5           1 push bc
 377+ 9BD3 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9BD6 2A F9 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9BD9 A7               and a
 380+ 9BDA ED 42            sbc hl,bc
 381+ 9BDC CC 15 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9BDF C1               pop bc
 383+ 9BE0 28 3A            jr z,4F
 384+ 9BE2
 385+ 9BE2 2A F9 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9BE5 23               inc hl
 387+ 9BE6 23               inc hl
 388+ 9BE7 22 F9 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9BEA              ;                                                   ; _ Disparo_(+1).
 390+ 9BEA CD 97 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9BED              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9BED              ;
 393+ 9BED              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9BED              ;                                                     Rutinas_de_impresion en IX.
 395+ 9BED              ;                                                     Puntero_de_impresion en HL.
 396+ 9BED              ;                                                     Impacto/Dirección en BC.
 397+ 9BED
 398+ 9BED 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9BEE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9BEF 23               inc hl                                          ; _ al siguiente.
 401+ 9BF0 A7               and a
 402+ 9BF1 20 C0            jr nz,3B
 403+ 9BF3
 404+ 9BF3 08               ex af,af
 405+ 9BF4 ED 73 E4 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9BF8 F9               ld sp,hl
 407+ 9BF9
 408+ 9BF9 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9BFB F5               push af                                         ; Puntero de impresión.
 410+ 9BFC FD E5            push iy                                         ; Puntero objeto.
 411+ 9BFE C5               push bc                                         ; Control.
 412+ 9BFF
 413+ 9BFF ED 7B E4 89      ld sp,(Stack)
 414+ 9C03
 415+ 9C03              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9C03
 417+ 9C03 21 D3 89     	ld hl,Ctrl_1
 418+ 9C06 CB C6        	set 0,(hl)
 419+ 9C08
 420+ 9C08 DD E5        	push ix
 421+ 9C0A E1               pop hl
 422+ 9C0B F5               push af
 423+ 9C0C DD E1            pop ix
 424+ 9C0E
 425+ 9C0E CD BF 80     	call Guarda_foto_registros
 426+ 9C11
 427+ 9C11 21 D3 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9C14 CB 86        	res 0,(hl)
 429+ 9C16
 430+ 9C16              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9C16              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9C16
 433+ 9C16 CD 1C 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9C19 CD 15 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9C1C
 436+ 9C1C C9           4 ret
 437+ 9C1D
 438+ 9C1D              ; ----------------------------------------------------------------
 439+ 9C1D              ;
 440+ 9C1D              ;   4/3/23
 441+ 9C1D              ;
 442+ 9C1D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9C1D              ;   _ al generarse el disparo.
 444+ 9C1D              ;
 445+ 9C1D              ;       "$80" ..... No se produce colisión.
 446+ 9C1D              ;       "$81" ..... Se produce colisión.
 447+ 9C1D              ;
 448+ 9C1D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9C1D              ;         _ que forman el disparo.
 450+ 9C1D
 451+ 9C1D
 452+ 9C1D              Comprueba_Colision
 453+ 9C1D
 454+ 9C1D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9C1D
 456+ 9C1D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9C1F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9C20
 459+ 9C20 CD 56 9C         call Modifica_H_Velocidad_disparo
 460+ 9C23
 461+ 9C23 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9C24 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9C26 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9C28
 465+ 9C28 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9C2A CD 46 9C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9C2D
 468+ 9C2D 7B               ld a,e
 469+ 9C2E E6 01            and 1
 470+ 9C30 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9C32              ;                                                  ; _ para activar IMPACTO.
 472+ 9C32 E1               pop hl
 473+ 9C33 E5               push hl
 474+ 9C34 CD CC 92         call NextScan
 475+ 9C37
 476+ 9C37 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9C38 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9C3A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9C3C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9C3C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9C3E CD 46 9C         call Bucle_2
 482+ 9C41
 483+ 9C41 43           1 ld b,e
 484+ 9C42 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9C43 FD E1            pop iy
 486+ 9C45 C9               ret
 487+ 9C46
 488+ 9C46              ; ---------- ----------
 489+ 9C46
 490+ 9C46 06 02        Bucle_2 ld b,2
 491+ 9C48 FD 7E 00     2 ld a,(iy)
 492+ 9C4B A6               and (hl)
 493+ 9C4C 28 02            jr z,1F
 494+ 9C4E 1E 81            ld e,$81
 495+ 9C50 23           1 inc hl
 496+ 9C51 FD 23            inc iy
 497+ 9C53 10 F3            djnz 2B
 498+ 9C55 C9               ret
 499+ 9C56
 500+ 9C56              ; ---------- ----------
 501+ 9C56              ;
 502+ 9C56              ;   21/7/23
 503+ 9C56
 504+ 9C56              Modifica_H_Velocidad_disparo
 505+ 9C56
 506+ 9C56 3A 08 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9C59 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9C5B D0               ret nc                                         ; _ incrementamos H.
 509+ 9C5C 24               inc h
 510+ 9C5D
 511+ 9C5D C9               ret
 512+ 9C5E
 513+ 9C5E              ; -------------------------------------------------------------------------------------------------------------
 514+ 9C5E              ;
 515+ 9C5E              ;   04/12/23
 516+ 9C5E              ;
 517+ 9C5E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9C5E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9C5E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9C5E              ;
 521+ 9C5E              ;   MODIFICA: HL,DE,B y A.
 522+ 9C5E
 523+ 9C5E              Genera_coordenadas_X
 524+ 9C5E
 525+ 9C5E              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9C5E              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9C5E
 528+ 9C5E              ;   Limpiamos almacenes.
 529+ 9C5E
 530+ 9C5E CD 8F 9C         call Limpia_Coordenadas_X
 531+ 9C61
 532+ 9C61              ;   Almacenamos coordenadas X.
 533+ 9C61
 534+ 9C61              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9C61
 536+ 9C61 2A A8 89         ld hl,(Puntero_de_impresion)
 537+ 9C64 11 05 8A         ld de,Coordenadas_X_Entidad
 538+ 9C67 06 02            ld b,2
 539+ 9C69
 540+ 9C69 3A 94 89         ld a,(CTRL_DESPLZ)
 541+ 9C6C A7               and a
 542+ 9C6D 28 01            jr z,1F
 543+ 9C6F 04               inc b
 544+ 9C70
 545+ 9C70 CD 86 9C     1 call Guarda_coordenadas_X
 546+ 9C73
 547+ 9C73              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9C73
 549+ 9C73 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9C76 11 02 8A         ld de,Coordenadas_X_Amadeus
 551+ 9C79 06 02            ld b,2
 552+ 9C7B
 553+ 9C7B 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9C7E A7               and a
 555+ 9C7F 28 01            jr z,2F
 556+ 9C81 04               inc b
 557+ 9C82
 558+ 9C82 CD 86 9C     2 call Guarda_coordenadas_X
 559+ 9C85
 560+ 9C85              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9C85
 562+ 9C85 C9               ret
 563+ 9C86
 564+ 9C86              ; ----- ----- ----- ----- -----
 565+ 9C86
 566+ 9C86 7D           Guarda_coordenadas_X  ld a,l
 567+ 9C87 E6 1F            and $1f
 568+ 9C89 12           1 ld (de),a
 569+ 9C8A 3C               inc a
 570+ 9C8B 13               inc de
 571+ 9C8C 10 FB            djnz 1B
 572+ 9C8E C9               ret
 573+ 9C8F
 574+ 9C8F AF           Limpia_Coordenadas_X xor a
 575+ 9C90 06 06            ld b,6
 576+ 9C92 21 02 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9C95 77           1 ld (hl),a
 578+ 9C96 23               inc hl
 579+ 9C97 10 FC            djnz 1B
 580+ 9C99 C9               ret
 581+ 9C9A
 582+ 9C9A              ; ----- ----- ----- ----- -----
 583+ 9C9A
 584+ 9C9A              Compara_coordenadas_X
 585+ 9C9A
 586+ 9C9A 06 03            ld b,3
 587+ 9C9C 11 07 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9C9F
 589+ 9C9F 1A               ld a,(de)
 590+ 9CA0 A7               and a
 591+ 9CA1 20 01            jr nz,2F
 592+ 9CA3 05               dec b
 593+ 9CA4
 594+ 9CA4 1B           2 dec de
 595+ 9CA5 1B               dec de
 596+ 9CA6 21 02 8A         ld hl,Coordenadas_X_Amadeus
 597+ 9CA9
 598+ 9CA9 D5           1 push de
 599+ 9CAA E5               push hl
 600+ 9CAB C5               push bc
 601+ 9CAC
 602+ 9CAC CD B6 9C         call Comparando
 603+ 9CAF
 604+ 9CAF C1               pop bc
 605+ 9CB0 E1               pop hl
 606+ 9CB1 D1               pop de
 607+ 9CB2
 608+ 9CB2 13               inc de
 609+ 9CB3 10 F4            djnz 1B
 610+ 9CB5
 611+ 9CB5 C9               ret
 612+ 9CB6
 613+ 9CB6              ; ----- ----- ----- ----- -----
 614+ 9CB6              ;
 615+ 9CB6              ;   4/12/23
 616+ 9CB6              ;
 617+ 9CB6              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9CB6
 619+ 9CB6 06 03        Comparando ld b,3
 620+ 9CB8 1A               ld a,(de)
 621+ 9CB9 4E           2 ld c,(hl)
 622+ 9CBA B9               cp c
 623+ 9CBB 28 04            jr z,1F
 624+ 9CBD 23               inc hl
 625+ 9CBE 10 F9            djnz 2B
 626+ 9CC0 C9               ret
 627+ 9CC1
 628+ 9CC1 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9CC3 32 A1 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9CC6 21 FD 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9CC9 CB D6            set 2,(hl)
 632+ 9CCB C9               ret
 633+ 9CCC
 634+ 9CCC              ; -----------------------------------------------------------------------
 635+ 9CCC              ;
 636+ 9CCC              ;   7/12/23
 637+ 9CCC              ;
 638+ 9CCC
 639+ 9CCC              Detecta_colision_nave_entidad
 640+ 9CCC
 641+ 9CCC              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9CCC
 643+ 9CCC FD 2A 90 89      ld iy,(Puntero_objeto)
 644+ 9CD0 2A A8 89         ld hl,(Puntero_de_impresion)
 645+ 9CD3
 646+ 9CD3 E5               push hl
 647+ 9CD4
 648+ 9CD4              ; ----- ----- -----
 649+ 9CD4 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9CD6 06 0A            ld b,10
 651+ 9CD8 CD 08 9D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9CDB 7B               ld a,e
 653+ 9CDC FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9CDE 38 0E            jr c,3F
 655+ 9CE0
 656+ 9CE0              ; LLegados a este punto:
 657+ 9CE0              ;
 658+ 9CE0              ;   HAY COLISIÓN !!!!!.
 659+ 9CE0              ;
 660+ 9CE0              ;   .db (Impacto) de Amadeus a "1".
 661+ 9CE0              ;   SET el bit3 de (Impacto2).
 662+ 9CE0              ;
 663+ 9CE0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9CE0
 665+ 9CE0 21 A1 89         ld hl,Impacto
 666+ 9CE3 36 01            ld (hl),1
 667+ 9CE5 21 FD 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9CE8 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9CEA CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9CEC
 671+ 9CEC 18 18            jr 1F
 672+ 9CEE
 673+ 9CEE              ; -----
 674+ 9CEE
 675+ 9CEE E1           3 pop hl
 676+ 9CEF CD CC 92         call NextScan
 677+ 9CF2 E5               push hl
 678+ 9CF3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9CF4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9CF6 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9CF8 30 0C            jr nc,1F
 682+ 9CFA              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9CFA 10 DC            djnz 2B
 684+ 9CFC
 685+ 9CFC              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9CFC
 687+ 9CFC              ; LLegados a este punto:
 688+ 9CFC              ;
 689+ 9CFC              ;   NO HAY COLISIÓN !!!!!.
 690+ 9CFC              ;
 691+ 9CFC              ;   .db (Impacto) de Amadeus a "0".
 692+ 9CFC              ;   RES el bit2 de (Impacto2).
 693+ 9CFC              ;
 694+ 9CFC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9CFC              ;   Lo colocamos a "0".
 696+ 9CFC
 697+ 9CFC 21 FD 89         ld hl,Impacto2
 698+ 9CFF CB 96            res 2,(hl)
 699+ 9D01 2A FE 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9D04 36 00            ld (hl),0
 701+ 9D06
 702+ 9D06 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9D07 C9               ret
 704+ 9D08
 705+ 9D08               ; ---------- ----------
 706+ 9D08
 707+ 9D08 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9D09 3A 8D 89         ld a,(Columns)
 709+ 9D0C 47               ld b,a
 710+ 9D0D FD 7E 00     2 ld a,(iy)
 711+ 9D10 BE               cp (hl)
 712+ 9D11 28 01            jr z,1F
 713+ 9D13
 714+ 9D13 1C               inc e
 715+ 9D14
 716+ 9D14 23           1 inc hl
 717+ 9D15 FD 23            inc iy
 718+ 9D17 10 F4            djnz 2B
 719+ 9D19 C1               pop bc
 720+ 9D1A C9               ret
 721+ 9D1B
 722+ 9D1B              ; -------------------------------------------------------------------------------------------------------------
 723+ 9D1B              ;
 724+ 9D1B              ;   13/03/23
 725+ 9D1B              ;
 726+ 9D1B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9D1B              ;
 728+ 9D1B              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9D1B
 730+ 9D1B 21 AC 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9D1E 7E               ld a,(hl)
 732+ 9D1F A7               and a
 733+ 9D20 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9D21
 735+ 9D21 44               ld b,h
 736+ 9D22 4D               ld c,l
 737+ 9D23 2A F0 89         ld hl,(Stack_snapshot_disparos)
 738+ 9D26 E5               push hl
 739+ 9D27 A7               and a
 740+ 9D28 ED 42            sbc hl,bc
 741+ 9D2A E5               push hl
 742+ 9D2B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9D2C
 744+ 9D2C E1               pop hl
 745+ 9D2D 54               ld d,h
 746+ 9D2E 5D               ld e,l
 747+ 9D2F 1B               dec de
 748+ 9D30 ED B8            lddr                                                ; Limpiamos.
 749+ 9D32
 750+ 9D32 21 AC 80         ld hl,Album_de_fotos_disparos
 751+ 9D35 22 F0 89         ld (Stack_snapshot_disparos),hl
 752+ 9D38
 753+ 9D38 C9               ret
 754+ 9D39
 755+ 9D39              ; -------------------------------------------------------------------------------------------------------------
 756+ 9D39              ;
 757+ 9D39              ;   18/07/23
 758+ 9D39              ;
 759+ 9D39
 760+ 9D39              Motor_de_disparos
 761+ 9D39
 762+ 9D39              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9D39
 764+ 9D39 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9D3C 2A FB 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9D3F
 767+ 9D3F CD 97 8C     2 call Extrae_address
 768+ 9D42 7E               ld a,(hl)
 769+ 9D43 A7               and a
 770+ 9D44 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9D46
 772+ 9D46              ; ----- ----- ----- ----- ----- -----
 773+ 9D46
 774+ 9D46 C5               push bc
 775+ 9D47 CD 0B 9E         call foto_disparo_a_borrar
 776+ 9D4A
 777+ 9D4A              ; Existe colisión con este disparo???
 778+ 9D4A
 779+ 9D4A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9D4B 7E               ld a,(hl)
 781+ 9D4C 2B               dec hl
 782+ 9D4D E6 01            and 1
 783+ 9D4F 28 1D            jr z,9F
 784+ 9D51
 785+ 9D51              ;   En este punto:
 786+ 9D51              ;
 787+ 9D51              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9D51              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9D51              ;   _con la entidad).
 790+ 9D51              ;
 791+ 9D51              ;   Disparo_2A defw 0                                ; Control.
 792+ 9D51              ;    defw 0                                          ; Puntero objeto.
 793+ 9D51              ;    defw 0                                          ; Puntero de impresión.
 794+ 9D51              ;    defw 0                                          ; Rutina de impresión.
 795+ 9D51
 796+ 9D51 E5               push hl
 797+ 9D52
 798+ 9D52 06 04            ld b,4
 799+ 9D54 23           19 inc hl
 800+ 9D55 10 FD            djnz 19B
 801+ 9D57
 802+ 9D57 CD 97 8C         call Extrae_address
 803+ 9D5A CD EE 9F         call Genera_coordenadas_disparo
 804+ 9D5D
 805+ 9D5D              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9D5D
 807+ 9D5D 21 00 8A         ld hl,Coordenadas_disparo_certero
 808+ 9D60 72               ld (hl),d
 809+ 9D61 23               inc hl
 810+ 9D62 73               ld (hl),e
 811+ 9D63
 812+ 9D63              ; Elimino el disparo de la base de datos.
 813+ 9D63
 814+ 9D63 E1               pop hl
 815+ 9D64 CD 8A 9E         call Elimina_disparo_de_base_de_datos
 816+ 9D67 21 FD 89         ld hl,Impacto2
 817+ 9D6A CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9D6C
 819+ 9D6C 18 06            jr 11F
 820+ 9D6E
 821+ 9D6E CD 34 9E     9 call Mueve_disparo
 822+ 9D71 CD 0B 9E         call foto_disparo_a_borrar
 823+ 9D74
 824+ 9D74 C1           11 pop bc
 825+ 9D75 18 04            jr 7F
 826+ 9D77
 827+ 9D77              ; ----- ----- ----- ----- ----- -----
 828+ 9D77
 829+ 9D77 ED 42        1 sbc hl,bc
 830+ 9D79 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9D7B
 832+ 9D7B 2A FB 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9D7E 23               inc hl
 834+ 9D7F 23               inc hl
 835+ 9D80 22 FB 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9D83 18 BA            jr 2B
 837+ 9D85
 838+ 9D85 CD 1C 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9D88              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9D88
 841+ 9D88              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9D88
 843+ 9D88 01 E2 86         ld bc,Disparo_11
 844+ 9D8B 2A F9 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9D8E
 846+ 9D8E CD 97 8C     5 call Extrae_address
 847+ 9D91 7E               ld a,(hl)
 848+ 9D92 A7               and a
 849+ 9D93 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9D95
 851+ 9D95              ; ----- ----- ----- ----- ----- -----
 852+ 9D95
 853+ 9D95 C5               push bc
 854+ 9D96 CD 0B 9E         call foto_disparo_a_borrar
 855+ 9D99
 856+ 9D99              ; Existe colisión con este disparo???
 857+ 9D99
 858+ 9D99 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9D9A 7E               ld a,(hl)
 860+ 9D9B 2B               dec hl
 861+ 9D9C E6 01            and 1
 862+ 9D9E 28 4D            jr z,10F
 863+ 9DA0
 864+ 9DA0              ;! La colisión se produce con Amadeus???
 865+ 9DA0              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9DA0
 867+ 9DA0 E5               push hl
 868+ 9DA1
 869+ 9DA1 06 04            ld b,4
 870+ 9DA3 23           16 inc hl
 871+ 9DA4 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9DA6
 873+ 9DA6 CD 97 8C         call Extrae_address
 874+ 9DA9 CD EE 9F         call Genera_coordenadas_disparo
 875+ 9DAC
 876+ 9DAC 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9DAD FE 16            cp $16
 878+ 9DAF 38 2A            jr c,15F
 879+ 9DB1
 880+ 9DB1
 881+ 9DB1              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9DB1
 883+ 9DB1 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9DB2
 885+ 9DB2              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9DB2
 887+ 9DB2 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9DB5
 889+ 9DB5              ; Coordenada X de Amadeus en D.
 890+ 9DB5
 891+ 9DB5 7D               ld a,l
 892+ 9DB6 E6 1F            and $1F
 893+ 9DB8 57               ld d,a
 894+ 9DB9
 895+ 9DB9 21 FE 86         ld hl,Amadeus_db+8
 896+ 9DBC 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9DBD
 898+ 9DBD 21 02 8A         ld hl,Coordenadas_X_Amadeus
 899+ 9DC0 CD 86 9C         call Guarda_coordenadas_X
 900+ 9DC3
 901+ 9DC3 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9DC4
 903+ 9DC4              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9DC4
 905+ 9DC4 06 02            ld b,2
 906+ 9DC6 C5           20 push bc
 907+ 9DC7
 908+ 9DC7 06 03            ld b,3
 909+ 9DC9 21 02 8A         ld hl,Coordenadas_X_Amadeus
 910+ 9DCC 7E           18 ld a,(hl)
 911+ 9DCD BA               cp d
 912+ 9DCE 20 04            jr nz,17F
 913+ 9DD0
 914+ 9DD0              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9DD0
 916+ 9DD0 C1               pop bc
 917+ 9DD1 E1               pop hl
 918+ 9DD2 18 0D            jr 14F
 919+ 9DD4
 920+ 9DD4 23           17 inc hl
 921+ 9DD5 10 F5            djnz 18B
 922+ 9DD7
 923+ 9DD7 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9DD8
 925+ 9DD8 C1               pop bc
 926+ 9DD9 10 EB            djnz 20B
 927+ 9DDB
 928+ 9DDB
 929+ 9DDB              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9DDB              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9DDB
 932+ 9DDB E1           15 pop hl
 933+ 9DDC 23               inc hl
 934+ 9DDD 35               dec (hl)
 935+ 9DDE 2B               dec hl
 936+ 9DDF 18 0C            jr 10F
 937+ 9DE1
 938+ 9DE1              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9DE1              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9DE1
 941+ 9DE1 E5           14 push hl
 942+ 9DE2 CD 8A 9E         call Elimina_disparo_de_base_de_datos
 943+ 9DE5 21 FD 89         ld hl,Impacto2
 944+ 9DE8 CB CE            set 1,(hl)
 945+ 9DEA E1               pop hl
 946+ 9DEB 18 06            jr 12F
 947+ 9DED
 948+ 9DED              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9DED
 950+ 9DED CD 34 9E     10 call Mueve_disparo
 951+ 9DF0 CD 0B 9E         call foto_disparo_a_borrar
 952+ 9DF3 C1           12 pop bc
 953+ 9DF4
 954+ 9DF4 18 04            jr 8F
 955+ 9DF6
 956+ 9DF6              ; ----- ----- ----- ----- ----- -----
 957+ 9DF6
 958+ 9DF6 ED 42        4 sbc hl,bc
 959+ 9DF8 28 0A            jr z,6F
 960+ 9DFA
 961+ 9DFA 2A F9 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9DFD 23               inc hl
 963+ 9DFE 23               inc hl
 964+ 9DFF 22 F9 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9E02 18 8A            jr 5B
 966+ 9E04
 967+ 9E04 CD 15 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9E07 CD 8F 9C         call Limpia_Coordenadas_X
 969+ 9E0A C9               ret
 970+ 9E0B
 971+ 9E0B              ; ------------------------------------------------------------------
 972+ 9E0B
 973+ 9E0B              foto_disparo_a_borrar
 974+ 9E0B
 975+ 9E0B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9E0C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9E0D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9E0E
 979+ 9E0E E5               push hl
 980+ 9E0F 23               inc hl
 981+ 9E10 23               inc hl
 982+ 9E11 ED 73 E4 89      ld (Stack),sp
 983+ 9E15 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9E16 FD E1            pop iy
 985+ 9E18 DD E1            pop ix
 986+ 9E1A E1               pop hl
 987+ 9E1B ED 7B E4 89      ld sp,(Stack)
 988+ 9E1F 3A D3 89         ld a,(Ctrl_1)
 989+ 9E22 CB C7            set 0,a
 990+ 9E24 32 D3 89         ld (Ctrl_1),a
 991+ 9E27 CD BF 80         call Guarda_foto_registros
 992+ 9E2A 3A D3 89         ld a,(Ctrl_1)
 993+ 9E2D CB 87            res 0,a
 994+ 9E2F 32 D3 89         ld (Ctrl_1),a
 995+ 9E32 E1               pop hl
 996+ 9E33 C9               ret
 997+ 9E34
 998+ 9E34              ;---------------------------------------------------
 999+ 9E34              ;
1000+ 9E34              ;   18/07/23
1001+ 9E34              ;
1002+ 9E34
1003+ 9E34              Mueve_disparo
1004+ 9E34
1005+ 9E34              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9E34              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9E34              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9E34
1009+ 9E34 E5               push hl
1010+ 9E35
1011+ 9E35 7E               ld a,(hl)
1012+ 9E36
1013+ 9E36 06 04            ld b,4
1014+ 9E38 23           1 inc hl
1015+ 9E39 10 FD            djnz 1B
1016+ 9E3B
1017+ 9E3B              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9E3B
1019+ 9E3B CD 97 8C         call Extrae_address
1020+ 9E3E
1021+ 9E3E E6 01            and 1
1022+ 9E40 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9E42
1024+ 9E42              ; Disparo hacia arriba, (Amadeus).
1025+ 9E42
1026+ 9E42              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9E42              ; _ de la dificultad.
1028+ 9E42
1029+ 9E42 CD DB 92         call PreviousScan
1030+ 9E45 CD DB 92         call PreviousScan
1031+ 9E48 CD DB 92         call PreviousScan
1032+ 9E4B CD DB 92         call PreviousScan
1033+ 9E4E
1034+ 9E4E              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9E4E
1036+ 9E4E 7C               ld a,h
1037+ 9E4F FE 40            cp $40
1038+ 9E51 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9E53
1040+ 9E53              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9E53
1042+ 9E53 EB               ex de,hl
1043+ 9E54 06 04            ld b,4
1044+ 9E56 2B           6 dec hl
1045+ 9E57 10 FD            djnz 6B
1046+ 9E59
1047+ 9E59 CD 8A 9E         call Elimina_disparo_de_base_de_datos
1048+ 9E5C E1               pop hl
1049+ 9E5D 18 10            jr 7F
1050+ 9E5F
1051+ 9E5F              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9E5F              ; HL contiene el puntero de impresión del disparo.
1053+ 9E5F              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9E5F
1055+ 9E5F D5           3 push de
1056+ 9E60 C5               push bc
1057+ 9E61
1058+ 9E61 CD 1D 9C         call Comprueba_Colision
1059+ 9E64
1060+ 9E64              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9E64
1062+ 9E64 78               ld a,b
1063+ 9E65
1064+ 9E65 C1               pop bc
1065+ 9E66 D1               pop de
1066+ 9E67
1067+ 9E67 EB               ex de,hl
1068+ 9E68
1069+ 9E68 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9E69 23               inc hl                                      ; _ movimiento.
1071+ 9E6A 72               ld (hl),d
1072+ 9E6B
1073+ 9E6B E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9E6C
1075+ 9E6C 23               inc hl                                      ; _ en curso.
1076+ 9E6D 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9E6E 2B               dec hl
1078+ 9E6F
1079+ 9E6F C9           7 ret
1080+ 9E70
1081+ 9E70              ; Disparo hacia abajo, (Entidad).
1082+ 9E70
1083+ 9E70 3A 08 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9E73 47               ld b,a
1085+ 9E74
1086+ 9E74 CD CC 92     4 call NextScan
1087+ 9E77 10 FB            djnz 4B
1088+ 9E79
1089+ 9E79              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9E79
1091+ 9E79 7C               ld a,h
1092+ 9E7A FE 58            cp $58
1093+ 9E7C 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9E7E
1095+ 9E7E EB               ex de,hl
1096+ 9E7F 06 04            ld b,4
1097+ 9E81 2B           5 dec hl
1098+ 9E82 10 FD            djnz 5B
1099+ 9E84
1100+ 9E84 CD 8A 9E         call Elimina_disparo_de_base_de_datos
1101+ 9E87 E1               pop hl
1102+ 9E88 18 E5            jr 7B
1103+ 9E8A
1104+ 9E8A              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9E8A
1106+ 9E8A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9E8D AF               xor a
1108+ 9E8E 77               ld (hl),a
1109+ 9E8F 54               ld d,h
1110+ 9E90 5D               ld e,l
1111+ 9E91 13               inc de
1112+ 9E92 ED B0            ldir
1113+ 9E94 C9               ret
1114+ 9E95
1115+ 9E95              ; -----------------------------------------------------------------
1116+ 9E95              ;
1117+ 9E95              ;   7/12/23
1118+ 9E95              ;
1119+ 9E95
1120+ 9E95 3A FD 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9E98 A7               and a
1122+ 9E99 C8               ret z
1123+ 9E9A
1124+ 9E9A              ; Analizamos si hay impacto por disparos.
1125+ 9E9A
1126+ 9E9A              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9E9A
1128+ 9E9A CB 4F            bit 1,a
1129+ 9E9C 28 07            jr z,1F
1130+ 9E9E
1131+ 9E9E 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9EA1 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9EA3 18 08            jr 2F
1134+ 9EA5
1135+ 9EA5 CB 47        1 bit 0,a
1136+ 9EA7 C8               ret z
1137+ 9EA8
1138+ 9EA8              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9EA8
1140+ 9EA8 21 D3 89         ld hl,Ctrl_1
1141+ 9EAB CB D6            set 2,(hl)
1142+ 9EAD
1143+ 9EAD C9           2 ret
1144+ 9EAE
1145+ 9EAE              ; -----------------------------------------------------------------
1146+ 9EAE              ;
1147+ 9EAE              ;   25/04/23
1148+ 9EAE              ;
1149+ 9EAE
1150+ 9EAE              Determina_resultado_comparativa
1151+ 9EAE
1152+ 9EAE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9EAE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9EAE              ;
1155+ 9EAE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9EAE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9EAE              ;
1158+ 9EAE              ;   SBC HL,DE
1159+ 9EAE
1160+ 9EAE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9EAE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9EAE
1163+ 9EAE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9EAE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9EAE
1166+ 9EAE
1167+ 9EAE 3A A0 89         ld a,(Cuad_objeto)
1168+ 9EB1 FE 02            cp 2
1169+ 9EB3 28 26            jr z,2F
1170+ 9EB5 38 24            jr c,2F
1171+ 9EB7
1172+ 9EB7              ; Cuadrantes 3º y 4º
1173+ 9EB7
1174+ 9EB7 E6 01            and 1
1175+ 9EB9 28 10            jr z,4F
1176+ 9EBB
1177+ 9EBB              ; Cuadrante 3º
1178+ 9EBB
1179+ 9EBB 7C               ld a,h
1180+ 9EBC 06 00            ld b,0
1181+ 9EBE
1182+ 9EBE CD 49 9F         call Compara_cositas_H3
1183+ 9EC1
1184+ 9EC1 04               inc b
1185+ 9EC2 05               dec b
1186+ 9EC3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9EC4
1188+ 9EC4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9EC5 06 00            ld b,0
1190+ 9EC7
1191+ 9EC7 CD 5B 9F         call Compara_cositas_L3
1192+ 9ECA C9               ret
1193+ 9ECB
1194+ 9ECB              ; Cuadrante 4º
1195+ 9ECB
1196+ 9ECB 7C           4 ld a,h
1197+ 9ECC 06 00            ld b,0
1198+ 9ECE
1199+ 9ECE CD 6D 9F         call Compara_cositas_H4
1200+ 9ED1
1201+ 9ED1 04               inc b
1202+ 9ED2 05               dec b
1203+ 9ED3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9ED4
1205+ 9ED4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9ED5 06 00            ld b,0
1207+ 9ED7
1208+ 9ED7 CD 83 9F         call Compara_cositas_L4
1209+ 9EDA C9               ret
1210+ 9EDB
1211+ 9EDB              ; Cuadrantes 1º y 2º.
1212+ 9EDB
1213+ 9EDB 28 10        2 jr z,3F
1214+ 9EDD
1215+ 9EDD              ; 1er Cuadrante
1216+ 9EDD
1217+ 9EDD 7C               ld a,h
1218+ 9EDE 06 00            ld b,0
1219+ 9EE0
1220+ 9EE0 CD 21 9F         call Compara_cositas_H1
1221+ 9EE3
1222+ 9EE3 04               inc b
1223+ 9EE4 05               dec b
1224+ 9EE5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9EE6
1226+ 9EE6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9EE7 06 00            ld b,0
1228+ 9EE9
1229+ 9EE9 CD 37 9F         call Compara_cositas_L1
1230+ 9EEC C9               ret
1231+ 9EED
1232+ 9EED
1233+ 9EED              ; 2º Cuadrante
1234+ 9EED
1235+ 9EED 7C           3 ld a,h
1236+ 9EEE 06 00            ld b,0
1237+ 9EF0
1238+ 9EF0 CD FD 9E         call Compara_cositas_H2
1239+ 9EF3
1240+ 9EF3 04               inc b
1241+ 9EF4 05               dec b
1242+ 9EF5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9EF6
1244+ 9EF6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9EF7 06 00            ld b,0
1246+ 9EF9
1247+ 9EF9 CD 0F 9F         call Compara_cositas_L2
1248+ 9EFC C9               ret
1249+ 9EFD
1250+ 9EFD A7           Compara_cositas_H2 and a
1251+ 9EFE 28 0D            jr z,1F
1252+ 9F00              ;    cp $fd
1253+ 9F00              ;    jr z,1F
1254+ 9F00              ;    cp $fe
1255+ 9F00              ;    jr z,1F
1256+ 9F00 FE FF            cp $ff
1257+ 9F02 28 09            jr z,1F
1258+ 9F04 FE 01            cp $01
1259+ 9F06 28 05            jr z,1F
1260+ 9F08 FE 02            cp $02
1261+ 9F0A 28 01            jr z,1F
1262+ 9F0C C0               ret nz
1263+ 9F0D 04           1 inc b
1264+ 9F0E C9               ret
1265+ 9F0F
1266+ 9F0F A7           Compara_cositas_L2 and a
1267+ 9F10 28 0D            jr z,1F
1268+ 9F12              ;    cp $fd
1269+ 9F12              ;    jr z,1F
1270+ 9F12 FE FE            cp $fe
1271+ 9F14 28 09            jr z,1F
1272+ 9F16 FE FF            cp $ff
1273+ 9F18 28 05            jr z,1F
1274+ 9F1A FE 01            cp $01
1275+ 9F1C 28 01            jr z,1F
1276+ 9F1E              ;    cp $02
1277+ 9F1E              ;    jr z,1F
1278+ 9F1E C0               ret nz
1279+ 9F1F 04           1 inc b
1280+ 9F20 C9               ret
1281+ 9F21
1282+ 9F21 A7           Compara_cositas_H1 and a
1283+ 9F22 28 11            jr z,1F
1284+ 9F24              ;    cp $fd
1285+ 9F24              ;    jr z,1F
1286+ 9F24              ;    cp $fe
1287+ 9F24              ;    jr z,1F
1288+ 9F24 FE FF            cp $ff
1289+ 9F26 28 0D            jr z,1F
1290+ 9F28 FE 01            cp $01
1291+ 9F2A 28 09            jr z,1F
1292+ 9F2C FE 02            cp $02
1293+ 9F2E 28 05            jr z,1F
1294+ 9F30 FE 03            cp $03
1295+ 9F32 28 01            jr z,1F
1296+ 9F34 C0               ret nz
1297+ 9F35 04           1 inc b
1298+ 9F36 C9               ret
1299+ 9F37
1300+ 9F37 A7           Compara_cositas_L1 and a
1301+ 9F38 28 0D            jr z,1F
1302+ 9F3A              ;    cp $fd
1303+ 9F3A              ;    jr z,1F
1304+ 9F3A              ;    cp $fe
1305+ 9F3A              ;    jr z,1F
1306+ 9F3A              ;    cp $ff
1307+ 9F3A              ;    jr z,1F
1308+ 9F3A FE 01            cp $01
1309+ 9F3C 28 09            jr z,1F
1310+ 9F3E FE 02            cp $02
1311+ 9F40 28 05            jr z,1F
1312+ 9F42 FE 03            cp $03
1313+ 9F44 28 01            jr z,1F
1314+ 9F46 C0               ret nz
1315+ 9F47 04           1 inc b
1316+ 9F48 C9               ret
1317+ 9F49
1318+ 9F49 A7           Compara_cositas_H3 and a
1319+ 9F4A 28 0D            jr z,1F
1320+ 9F4C              ;    cp $fd
1321+ 9F4C              ;    jr z,1F
1322+ 9F4C FE FE            cp $fe
1323+ 9F4E 28 09            jr z,1F
1324+ 9F50 FE FF            cp $ff
1325+ 9F52 28 05            jr z,1F
1326+ 9F54 FE 01            cp $01
1327+ 9F56 28 01            jr z,1F
1328+ 9F58              ;    cp $02
1329+ 9F58              ;    jr z,1F
1330+ 9F58              ;    cp $03
1331+ 9F58              ;    jr z,1F
1332+ 9F58 C0               ret nz
1333+ 9F59 04           1 inc b
1334+ 9F5A C9               ret
1335+ 9F5B
1336+ 9F5B A7           Compara_cositas_L3 and a
1337+ 9F5C 28 0D            jr z,1F
1338+ 9F5E              ;    cp $fd
1339+ 9F5E              ;    jr z,1F
1340+ 9F5E              ;    cp $fe
1341+ 9F5E              ;    jr z,1F
1342+ 9F5E              ;    cp $ff
1343+ 9F5E              ;    jr z,1F
1344+ 9F5E FE 01            cp $01
1345+ 9F60 28 09            jr z,1F
1346+ 9F62 FE 02            cp $02
1347+ 9F64 28 05            jr z,1F
1348+ 9F66 FE 03            cp $03
1349+ 9F68 28 01            jr z,1F
1350+ 9F6A C0               ret nz
1351+ 9F6B 04           1 inc b
1352+ 9F6C C9               ret
1353+ 9F6D
1354+ 9F6D A7           Compara_cositas_H4 and a
1355+ 9F6E 28 11            jr z,1F
1356+ 9F70 FE FD            cp $fd
1357+ 9F72 28 0D            jr z,1F
1358+ 9F74 FE FE            cp $fe
1359+ 9F76 28 09            jr z,1F
1360+ 9F78 FE FF            cp $ff
1361+ 9F7A 28 05            jr z,1F
1362+ 9F7C FE 01            cp $01
1363+ 9F7E 28 01            jr z,1F
1364+ 9F80              ;    cp $02
1365+ 9F80              ;    jr z,1F
1366+ 9F80              ;    cp $03
1367+ 9F80              ;    jr z,1F
1368+ 9F80 C0               ret nz
1369+ 9F81 04           1 inc b
1370+ 9F82 C9               ret
1371+ 9F83
1372+ 9F83 A7           Compara_cositas_L4 and a
1373+ 9F84 28 0D            jr z,1F
1374+ 9F86              ;    cp $fd
1375+ 9F86              ;    jr z,1F
1376+ 9F86 FE FE            cp $fe
1377+ 9F88 28 09            jr z,1F
1378+ 9F8A FE FF            cp $ff
1379+ 9F8C 28 05            jr z,1F
1380+ 9F8E FE 01            cp $01
1381+ 9F90 28 01            jr z,1F
1382+ 9F92              ;    cp $02
1383+ 9F92              ;    jr z,1F
1384+ 9F92              ;    cp $03
1385+ 9F92              ;    jr z,1F
1386+ 9F92 C0               ret nz
1387+ 9F93 04           1 inc b
1388+ 9F94 C9               ret
# file closed: Disparo.asm
1903  9F95              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F95              ; Relojes y temporizaciones.
   2+ 9F95
   3+ 9F95              ; ------------------------------------------------------
   4+ 9F95              ;
   5+ 9F95              ;	16/7/23
   6+ 9F95              ;
   7+ 9F95              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F95              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F95              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F95              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F95              ;
  12+ 9F95              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F95              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F95
  15+ 9F95              ; Disparo_entidad db 1
  16+ 9F95              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F95              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F95
  19+ 9F95              Habilita_disparos
  20+ 9F95
  21+ 9F95 7E           	ld a,(hl)
  22+ 9F96 A7           	and a
  23+ 9F97 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F98
  25+ 9F98 EB           	ex de,hl
  26+ 9F99
  27+ 9F99 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F9A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F9B
  30+ 9F9B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F9B
  32+ 9F9B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F9C 7E           	ld a,(hl)
  34+ 9F9D 23           	inc hl
  35+ 9F9E 77           	ld (hl),a
  36+ 9F9F
  37+ 9F9F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9FA0 3E 01        	ld a,1
  39+ 9FA2 77           	ld (hl),a
  40+ 9FA3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1904  9FA4              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9FA4              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9FA4              ;
   3+ 9FA4              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9FA4              ;
   5+ 9FA4              ; *****************************************************************************************************************************************************************************************
   6+ 9FA4              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9FA4
   8+ 9FA4 7C           calcula_tercio ld a,h
   9+ 9FA5 E6 18        	and $18
  10+ 9FA7 CB 2F        	sra a
  11+ 9FA9 CB 2F        	sra a
  12+ 9FAB CB 2F        	sra a
  13+ 9FAD C9           	ret
  14+ 9FAE
# file closed: calcula_tercio.asm
1905  9FAE              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9FAE              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9FAE              ;
   3+ 9FAE              ;
   4+ 9FAE              ;	CLS.
   5+ 9FAE              ;
   6+ 9FAE              ;	Limpia la pantalla y define sus atributos.
   7+ 9FAE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9FAE              ;
   9+ 9FAE              ;	COLORES: 0 ..... NEGRO
  10+ 9FAE              ;    		 1 ..... AZUL
  11+ 9FAE              ; 			 2 ..... ROJO
  12+ 9FAE              ;			 3 ..... MAGENTA
  13+ 9FAE              ; 			 4 ..... VERDE
  14+ 9FAE              ; 			 5 ..... CIAN
  15+ 9FAE              ;			 6 ..... AMARILLO
  16+ 9FAE              ; 			 7 ..... BLANCO
  17+ 9FAE              ;
  18+ 9FAE              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9FAE              ;
  20+ 9FAE              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9FAE
  22+ 9FAE
  23+ 9FAE 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9FB1 11 01 40     	LD DE,$4001
  25+ 9FB4 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9FB7 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9FB9 ED B0        	LDIR
  28+ 9FBB 01 FF 02     	LD BC,767
  29+ 9FBE 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9FBF ED B0        	LDIR
  31+ 9FC1 C9           	ret
  32+ 9FC2
# file closed: Cls.asm
1906  9FC2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9FC2              ; ------------------------------------------------------------------------
   2+ 9FC2              ;
   3+ 9FC2              ;	30/1/24
   4+ 9FC2              ;
   5+ 9FC2              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9FC2              ;	Fila superior "0", Columna izquierda "0".
   7+ 9FC2              ;
   8+ 9FC2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9FC2              ;
  10+ 9FC2              ;	Modifica: A,BC y DE.
  11+ 9FC2
  12+ 9FC2 7D           Genera_coordenadas ld a,l
  13+ 9FC3 E6 1F        	and $1f
  14+ 9FC5 32 92 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9FC8
  16+ 9FC8 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9FC9 FE 40        	cp $40
  18+ 9FCB 38 1C        	jr c,4F
  19+ 9FCD
  20+ 9FCD CD A4 9F     	call calcula_tercio
  21+ 9FD0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9FD1
  23+ 9FD1 1E 00        	ld e,0
  24+ 9FD3 7D           	ld a,l
  25+ 9FD4 E6 E0        	and $e0
  26+ 9FD6 28 01        	jr z,1F
  27+ 9FD8 04           	inc b
  28+ 9FD9
  29+ 9FD9 04           1 inc b
  30+ 9FDA 05           	dec b
  31+ 9FDB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9FDD              ;														; _ , salimos.
  33+ 9FDD 1C           3 inc e
  34+ 9FDE D6 20        	sub 32
  35+ 9FE0 20 FB        	jr nz,3B
  36+ 9FE2 10 F5        	djnz 1B
  37+ 9FE4
  38+ 9FE4 7B           2 ld a,e
  39+ 9FE5 32 93 89     	ld (Coordenada_y),a
  40+ 9FE8 C9           	ret
  41+ 9FE9
  42+ 9FE9 AF           4 xor a
  43+ 9FEA 32 93 89     	ld (Coordenada_y),a
  44+ 9FED C9           	ret
  45+ 9FEE
  46+ 9FEE              ; ------------------------------------------------------------------------
  47+ 9FEE              ;	28/05/23
  48+ 9FEE              ;
  49+ 9FEE              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9FEE              ;	Fila superior "0", Columna izquierda "0".
  51+ 9FEE              ;
  52+ 9FEE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9FEE              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9FEE              ;
  55+ 9FEE              ;		DE="$120d"
  56+ 9FEE              ;
  57+ 9FEE              ;		D, (Coordenada_X), Columnas, $12
  58+ 9FEE              ;		E, (Coordenada_y), Filas, $0d
  59+ 9FEE              ;
  60+ 9FEE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9FEE
  62+ 9FEE              ;	Modifica: A,BC y DE.
  63+ 9FEE
  64+ 9FEE
  65+ 9FEE              Genera_coordenadas_disparo
  66+ 9FEE
  67+ 9FEE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9FEE
  69+ 9FEE 7D           	ld a,l
  70+ 9FEF E6 1F        	and $1f
  71+ 9FF1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9FF2 CD A4 9F     	call calcula_tercio
  73+ 9FF5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9FF6 1E 00        	ld e,0
  75+ 9FF8 7D           	ld a,l
  76+ 9FF9 E6 E0        	and $e0
  77+ 9FFB 28 01        	jr z,1F
  78+ 9FFD 04           	inc b
  79+ 9FFE 1C           1 inc e
  80+ 9FFF D6 20        	sub 32
  81+ A001 20 FB        	jr nz,1B
  82+ A003 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ A005 C9           	ret
  84+ A006
# file closed: Genera_coordenadas.asm
1907  A006              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A006              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A006              ;
   3+ A006              ;	12/12/23
   4+ A006              ;
   5+ A006              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A006
   7+ A006              ;	ADC HL,SP	LD (addr),SP
   8+ A006              ;	ADD HL,SP	LD SP,(addr)
   9+ A006              ;	ADD IX,SP	LD SP,nn
  10+ A006              ; 	ADD IY,SP	LD SP,HL
  11+ A006              ;				LD SP,IX
  12+ A006              ;	DEC SP		LD SP,IY
  13+ A006
  14+ A006              ;	EX (SP),HL
  15+ A006              ;	EX (SP),IX
  16+ A006              ;	EX (SP),IY
  17+ A006
  18+ A006              ;	INC SP
  19+ A006
  20+ A006                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF ED 73 E4 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 80C3
  33+ 80C3              ; Guardamos la dirección de la rutina de impresión, ... , Sprite_vacio en el Album_de_fotos_de_borrado.
  34+ 80C3
  35+ 80C3 ED 7B EC 89      ld sp,(Stack_snapshot_borrado)
  36+ 80C7 E5               push hl
  37+ 80C8 3B               dec sp
  38+ 80C9 3B               dec sp
  39+ 80CA 11 D0 EA         ld de,Sprite_vacio
  40+ 80CD D5               push de
  41+ 80CE
  42+ 80CE              ;   Actualizamos (Stack_snapshot_borrado).
  43+ 80CE
  44+ 80CE ED 7B EC 89      ld sp,(Stack_snapshot_borrado)
  45+ 80D2 D9               exx
  46+ 80D3 21 06 00         ld hl,6
  47+ 80D6 A7               and a
  48+ 80D7 ED 7A            adc hl,sp
  49+ 80D9 F9               ld sp,hl
  50+ 80DA D9               exx
  51+ 80DB ED 73 EC 89      ld (Stack_snapshot_borrado),sp
  52+ 80DF
  53+ 80DF 31 AA 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  54+ 80E2 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  55+ 80E4              ;                                                 ; _ con las coordenadas_X de Amadeus.
  56+ 80E4 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  57+ 80E7
  58+ 80E7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  59+ 80E8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  60+ 80EA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  61+ 80EC
  62+ 80EC              ; Disparo o entidad?
  63+ 80EC
  64+ 80EC 3A D3 89         ld a,(Ctrl_1)
  65+ 80EF CB 47            bit 0,a
  66+ 80F1 28 05            jr z,2F
  67+ 80F3
  68+ 80F3 2A F0 89         ld hl,(Stack_snapshot_disparos)
  69+ 80F6 18 0F            jr 4F
  70+ 80F8
  71+ 80F8              ; No es disparo. Entidad/Amadeus ????
  72+ 80F8
  73+ 80F8 3A AE 89     2 ld a,(Ctrl_0)
  74+ 80FB CB 77            bit 6,a
  75+ 80FD 28 05            jr z,7F
  76+ 80FF
  77+ 80FF              ; Guardamos foto de Amadeus.
  78+ 80FF
  79+ 80FF 2A F4 89         ld hl,(End_Snapshot_Amadeus)
  80+ 8102 18 03            jr 4F
  81+ 8104
  82+ 8104 2A EA 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  83+ 8107
  84+ 8107 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  85+ 8109
  86+ 8109 D1           1 pop de
  87+ 810A 73               ld (hl),e
  88+ 810B 23               inc hl
  89+ 810C 72               ld (hl),d
  90+ 810D 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  91+ 810E 10 F9            djnz 1B
  92+ 8110
  93+ 8110              ; Disparo o entidad ?
  94+ 8110
  95+ 8110 3A D3 89         ld a,(Ctrl_1)
  96+ 8113 CB 47            bit 0,a
  97+ 8115 28 05            jr z,5F
  98+ 8117
  99+ 8117 22 F0 89         ld (Stack_snapshot_disparos),hl
 100+ 811A 18 12            jr 6F
 101+ 811C
 102+ 811C              ; Entidad o Amadeus ?
 103+ 811C
 104+ 811C 3A AE 89     5 ld a,(Ctrl_0)
 105+ 811F CB 77            bit 6,a
 106+ 8121 28 08            jr z,8F
 107+ 8123
 108+ 8123 22 F4 89         ld (End_Snapshot_Amadeus),hl
 109+ 8126 ED 7B E4 89      ld sp,(Stack)
 110+ 812A C9               ret
 111+ 812B
 112+ 812B 22 EA 89     8 ld (Stack_snapshot),hl
 113+ 812E ED 7B E4 89  6 ld sp,(Stack)
 114+ 8132
 115+ 8132 C9               ret
 116+ 8133
 117+ 8133              ; -----------------------------------------------------------------------------
 118+ 8133              ;
 119+ 8133              ;   21/11/23
 120+ 8133
 121+ 8133              Limpia_y_reinicia_Stack_Snapshot
 122+ 8133
 123+ 8133              ;   Limpia Album_de_fotos.
 124+ 8133
 125+ 8133 2A EA 89         ld hl,(Stack_snapshot)
 126+ 8136 7D               ld a,l
 127+ 8137 A7               and a
 128+ 8138 C8               ret z   ;   Salimos si el álbum está vacío.
 129+ 8139
 130+ 8139 47               ld b,a
 131+ 813A 04               inc b
 132+ 813B
 133+ 813B 36 00        1 ld (hl),0
 134+ 813D 2D               dec l
 135+ 813E 10 FB            djnz 1B
 136+ 8140
 137+ 8140              ;   Reinicializa (Stack_snapshot).
 138+ 8140
 139+ 8140 21 00 80         ld hl,Album_de_fotos
 140+ 8143 22 EA 89         ld (Stack_snapshot),hl
 141+ 8146
 142+ 8146 C9               ret
# file closed: Guarda_foto_registros.asm
1908  8147
1909  8147              	SAVESNA "Pruebas.sna", START
1910  8147
1911  8147
1912  8147
1913  8147
# file closed: Banco_de_pruebas.asm
