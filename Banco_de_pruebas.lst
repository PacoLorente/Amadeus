# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 CB 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A DE 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24
  44  AA24              ;! Debugggggggggggg
  45  AA24
  46  AA24              	; $5e ok
  47  AA24              	; $5f mal
  48  AA24
  49  AA24              ;	ld a,(Contador_de_frames)
  50  AA24              ;	cp $5e 	; 	$5a
  51  AA24              ;	jr nz,Borrando
  52  AA24              ;	ld a,(Contador_de_frames_2)
  53  AA24              ;	cp $05
  54  AA24              ;	jr z,$
  55  AA24
  56  AA24
  57  AA24              Borrando
  58  AA24
  59  AA24 2A D8 89     	ld hl,(Scanlines_album_SP)
  60  AA27 CD 6E 8C     	call Extrae_address
  61  AA2A
  62  AA2A 24           	inc h
  63  AA2B 25           	dec h
  64  AA2C 28 05        	jr z,Pintando
  65  AA2E
  66  AA2E CD 19 91     	call Pinta_Sprites
  67  AA31
  68  AA31 18 F1        	jr Borrando
  69  AA33
  70  AA33
  71  AA33              Pintando
  72  AA33
  73  AA33 2A DA 89     	ld hl,(India_SP)
  74  AA36 2C           	inc l
  75  AA37 CD 6E 8C     	call Extrae_address
  76  AA3A
  77  AA3A 24           	inc h
  78  AA3B 25           	dec h
  79  AA3C 28 0E        	jr z,1F
  80  AA3E
  81  AA3E 1C           	inc e
  82  AA3F 1C           	inc e
  83  AA40
  84  AA40 ED 53 DA 89  	ld (India_SP),de
  85  AA44
  86  AA44 CD 6E 8C     	call Extrae_address
  87  AA47
  88  AA47
  89  AA47 CD 19 91     	call Pinta_Sprites
  90  AA4A
  91  AA4A 18 E7        	jr Pintando
  92  AA4C
  93  AA4C              ; Posible colisión Entidad-Amadeus ???
  94  AA4C
  95  AA4C              ;	ld a,(Impacto2)
  96  AA4C              ;	bit 2,a
  97  AA4C              ;	jr z,1F
  98  AA4C
  99  AA4C              ;	call Detecta_colision_nave_entidad
 100  AA4C
 101  AA4C              ;1 ld a,4
 102  AA4C              ;	out ($fe),a
 103  AA4C              ;	call Gestiona_Amadeus
 104  AA4C
 105  AA4C              ;	ld a,7
 106  AA4C              ;	out ($fe),a											; Borde blanco.
 107  AA4C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 108  AA4C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 109  AA4C
 110  AA4C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
 111  AA4C
 112  AA4C              ;	call Recupera_parametros_DRAW
 113  AA4C
 114  AA4C CD F9 8C     1 call Actualiza_relojes
 115  AA4F
 116  AA4F 21 DE 89     	ld hl,Ctrl_3
 117  AA52 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 118  AA54 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 119  AA56
 120  AA56 FD E1        	pop iy
 121  AA58 DD E1        	pop ix
 122  AA5A F1           	pop af
 123  AA5B C1           	pop bc
 124  AA5C D1           	pop de
 125  AA5D E1           	pop hl
 126  AA5E D9           	exx
 127  AA5F C1           	pop bc
 128  AA60 D1           	pop de
 129  AA61 E1           	pop hl
 130  AA62 08           	ex af,af'
 131  AA63 F1           	pop af
 132  AA64 08           	ex af,af'
 133  AA65 D9           	exx
 134  AA66
 135  AA66 ED 7B CB 89  	ld sp,(Stack_3)
 136  AA6A
 137  AA6A FB           	ei
 138  AA6B
 139  AA6B 3E 01        	ld a,1												; Borde azul.
 140  AA6D D3 FE        	out ($fe),a
 141  AA6F
 142  AA6F C9           	ret
 143  AA70
 144  AA70              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 145  AA70
 146  AA70              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA70              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA70              ;
   3+ AA70              ;	17/02/23
   4+ AA70              ;
   5+ AA70              ;	Sprites e índices.
   6+ AA70
   7+ AA70              	org $8119
   8+ 8119
   9+ 8119              ; Disparo.
  10+ 8119
  11+ 8119 21 81        Indice_disparo defw Disparo_0
  12+ 811B 27 81        	defw Disparo_f9
  13+ 811D 2D 81        	defw Disparo_fb
  14+ 811F 33 81        	defw Disparo_fd
  15+ 8121
  16+ 8121              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8121 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8125 01 80
  18+ 8127              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8127 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 812B 00 60
  20+ 812D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 812D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8131 18 00
  22+ 8133              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8133 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8137 06 00
  24+ 8139
  25+ 8139              ; ----------------------------------------------------------------------------------------
  26+ 8139
  27+ 8139              ; Badsat_izq. 2x2.
  28+ 8139
  29+ 8139 49 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 813B C0 82        	defw Badsat_izq_fe
  31+ 813D 90 82        	defw Badsat_izq_fd
  32+ 813F 60 82        	defw Badsat_izq_fc
  33+ 8141 30 82        	defw Badsat_izq_fb
  34+ 8143 00 82        	defw Badsat_izq_fa
  35+ 8145 A9 81        	defw Badsat_izq_f9
  36+ 8147 79 81        	defw Badsat_izq_f8
  37+ 8149
  38+ 8149 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 814C 02 14 00     	DEFB 	$02,$14,$00
  40+ 814F 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8152 02 55 00     	DEFB 	$02,$55,$00
  42+ 8155 02 AA 00     	DEFB	$02,$AA,$00
  43+ 8158 02 54 00     	DEFB 	$02,$54,$00
  44+ 815B 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 815E 03 60 00     	DEFB 	$03,$60,$00
  46+ 8161 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 8164 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 8167 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 816A 54 40 00     	DEFB 	$54,$40,$00
  50+ 816D AA 60 00     	DEFB	$AA,$60,$00
  51+ 8170 54 00 00     	DEFB 	$54,$00,$00
  52+ 8173 28 00 00     	DEFB 	$28,$00,$00
  53+ 8176 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8179
  55+ 8179 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 817D 0A 00 01 15
  56+ 8181 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 8185 01 55 00 01
  57+ 8189 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 818D 00 01 B0 00
  58+ 8191 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 8195 FC 00 15 F4
  59+ 8199 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 819D 55 30 00 2A
  60+ 81A1 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81A5 00 08 00 00
  61+ 81A9
  62+ 81A9 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81AD 85 00 00 8A
  63+ 81B1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81B5 00 AA 80 00
  64+ 81B9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81BD 00 00 D8 00
  65+ 81C1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81C5 FE 00 0A FA
  66+ 81C9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81CD 2A 98 00 15
  67+ 81D1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81D5 00 04 00 00
  68+ 81D9
  69+ 81D9
  70+ 81D9              ;! 39 bytes libres aquí !!!!!
  71+ 81D9
  72+ 81D9              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 84B4 26 64 24 24
 214+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 84BC 6F F6 67 E6
 215+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 84C4 F7 EF FF FF
 216+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 84CC 8B D1 71 8E
 217+ 84D0
 218+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 84D4 F1 00 09 99
 219+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 84DC 0B 0D 00 1B
 220+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 84E4 80 19 F9 80
 221+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 84EC F3 C0 3D FB
 222+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 84F4 3E F7 C0 3E
 223+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 84FC 40 1C 63 80
 224+ 8500
 225+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 8504 3C 40 02 66
 226+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 850C 02 C3 40 06
 227+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 8514 60 06 7E 60
 228+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 851C 3C F0 0F 7E
 229+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 8524 0F BD F0 0F
 230+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 852C 10 07 18 E0
 231+ 8530
 232+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 8534 8F 10 00 99
 233+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 853C 00 B0 D0 01
 234+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 8544 D8 01 9F 98
 235+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 854C CF 3C 03 DF
 236+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 8554 03 EF 7C 03
 237+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 855C 44 01 C6 38
 238+ 8560
 239+ 8560              ; ----------------------------------------------------------------------------------------
 240+ 8560
 241+ 8560              ;	org $8690
 242+ 8560
 243+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8562 96 85        	defw Explosion_2x3_2
 245+ 8564 C6 85        	defw Explosion_2x3_3
 246+ 8566
 247+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 856A 10 00 04 38
 248+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 8572 02 E6 80 01
 249+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 857A 00 03 DD 80
 250+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 8582 3B 80 01 9D
 251+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 858A 02 FD 80 03
 252+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 8592 00 08 00 00
 253+ 8596
 254+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 859A 38 10 03 BC
 255+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 85A2 04 06 C0 00
 256+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 85AA 00 03 DD 80
 257+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 85B2 3A 70 01 9C
 258+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 85BA 04 F8 80 06
 259+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 85C2 00 00 00 00
 260+ 85C6
 261+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 85CA 00 20 08 00
 262+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 85D2 00 06 00 00
 263+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 85DA 00 00 14 30
 264+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 85E2 38 00 01 08
 265+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 85EA 00 80 00 04
 266+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 85F2 10 08 00 20
 267+ 85F6
 268+ 85F6              ; ------------------------------------------
 269+ 85F6
 270+ 85F6 FC 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 85F8 1C 86        	defw Explosion_2x2_2
 272+ 85FA 3C 86        	defw Explosion_2x2_3
 273+ 85FC
 274+ 85FC 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8600 43 84 37 D8
 275+ 8604 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8608 17 F0 3D D8
 276+ 860C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8610 19 D0 1F 60
 277+ 8614 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8618 40 00 80 00
 278+ 861C
 279+ 861C
 280+ 861C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8620 3B C2 60 0C
 281+ 8624 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8628 07 F0 3D D8
 282+ 862C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8630 19 C6 1F 64
 283+ 8634 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8638 80 00 00 00
 284+ 863C
 285+ 863C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8640 88 04 10 0C
 286+ 8644 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8648 81 E0 01 43
 287+ 864C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8650 10 80 18 00
 288+ 8654 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8658 60 01 80 02
 289+ 865C
 290+ 865C
 291+ 865C
 292+ 865C
 293+ 865C
# file closed: Sprites_e_indices.asm
 147  865C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 865C              ; ---------------------------------------------------------------------
   2+ 865C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 865C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 865C              ; ---------------------------------------------------------------------
   5+ 865C
   6+ 865C              ; 27/03/24
   7+ 865C              ;
   8+ 865C              ;	En esta tabla iremos almacenando:
   9+ 865C              ;
  10+ 865C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 865C
  12+ 865C 00 00 00...  Tabla_de_pintado ds 24
  13+ 8674
  14+ 8674              ;	db 0, defw 0
  15+ 8674              ;	db 0, defw 0
  16+ 8674              ;	db 0, defw 0
  17+ 8674              ;	db 0, defw 0
  18+ 8674              ;	db 0, defw 0
  19+ 8674              ;	db 0, defw 0
  20+ 8674              ;	db 0, defw 0
  21+ 8674
  22+ 8674 B9 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  23+ 8676              ;	defw ...
  24+ 8676              ; 	defw ...
  25+ 8676 00 00        	defw 0
  26+ 8678
  27+ 8678              ; Control. %00000001 00000001
  28+ 8678              ;
  29+ 8678              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  30+ 8678              ;                    _ hacen las entidades hacia abajo.
  31+ 8678              ;
  32+ 8678              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  33+ 8678
  34+ 8678 7E 86        Indice_de_disparos_Amadeus defw Disparo_1A
  35+ 867A 86 86        	defw Disparo_2A
  36+ 867C 8E 86        	defw Disparo_3A
  37+ 867E
  38+ 867E 00 00        Disparo_1A defw 0									; Control.
  39+ 8680 00 00        	defw 0											; Puntero objeto.
  40+ 8682 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  41+ 8684 00 00        	defw 0											; Rutina de impresión.
  42+ 8686
  43+ 8686 00 00        Disparo_2A defw 0									; Control.
  44+ 8688 00 00        	defw 0											; Puntero objeto.
  45+ 868A 00 00        	defw 0											; Puntero de impresión.
  46+ 868C 00 00        	defw 0											; Rutina de impresión.
  47+ 868E
  48+ 868E 00 00        Disparo_3A defw 0
  49+ 8690
  50+ 8690 A6 86        Indice_de_disparos_entidades defw Disparo_1
  51+ 8692 AE 86        	defw Disparo_2
  52+ 8694 B6 86        	defw Disparo_3
  53+ 8696 BE 86        	defw Disparo_4
  54+ 8698 C6 86        	defw Disparo_5
  55+ 869A CE 86        	defw Disparo_6
  56+ 869C D6 86        	defw Disparo_7
  57+ 869E DE 86        	defw Disparo_8
  58+ 86A0 E6 86        	defw Disparo_9
  59+ 86A2 EE 86        	defw Disparo_10
  60+ 86A4 F6 86        	defw Disparo_11
  61+ 86A6
  62+ 86A6 00 00        Disparo_1 defw 0									; Control.
  63+ 86A8 00 00        	defw 0											; Puntero objeto.
  64+ 86AA 00 00        	defw 0											; Puntero de impresión.
  65+ 86AC 00 00        	defw 0											; Rutina de impresión.
  66+ 86AE
  67+ 86AE 00 00        Disparo_2 defw 0									; Control.
  68+ 86B0 00 00        	defw 0											; Puntero objeto.
  69+ 86B2 00 00        	defw 0											; Puntero de impresión.
  70+ 86B4 00 00        	defw 0											; Rutina de impresión.
  71+ 86B6
  72+ 86B6 00 00        Disparo_3 defw 0									; Control.
  73+ 86B8 00 00        	defw 0											; Puntero objeto.
  74+ 86BA 00 00        	defw 0											; Puntero de impresión.
  75+ 86BC 00 00        	defw 0											; Rutina de impresión.
  76+ 86BE
  77+ 86BE 00 00        Disparo_4 defw 0									; Control.
  78+ 86C0 00 00        	defw 0											; Puntero objeto.
  79+ 86C2 00 00        	defw 0											; Puntero de impresión.
  80+ 86C4 00 00        	defw 0											; Rutina de impresión.
  81+ 86C6
  82+ 86C6 00 00        Disparo_5 defw 0									; Control.
  83+ 86C8 00 00        	defw 0											; Puntero objeto.
  84+ 86CA 00 00        	defw 0											; Puntero de impresión.
  85+ 86CC 00 00        	defw 0											; Rutina de impresión.
  86+ 86CE
  87+ 86CE 00 00        Disparo_6 defw 0									; Control.
  88+ 86D0 00 00        	defw 0											; Puntero objeto.
  89+ 86D2 00 00        	defw 0											; Puntero de impresión.
  90+ 86D4 00 00        	defw 0											; Rutina de impresión.
  91+ 86D6
  92+ 86D6 00 00        Disparo_7 defw 0									; Control.
  93+ 86D8 00 00        	defw 0											; Puntero objeto.
  94+ 86DA 00 00        	defw 0											; Puntero de impresión.
  95+ 86DC 00 00        	defw 0											; Rutina de impresión.
  96+ 86DE
  97+ 86DE 00 00        Disparo_8 defw 0									; Control.
  98+ 86E0 00 00        	defw 0											; Puntero objeto.
  99+ 86E2 00 00        	defw 0											; Puntero de impresión.
 100+ 86E4 00 00        	defw 0											; Rutina de impresión.
 101+ 86E6
 102+ 86E6 00 00        Disparo_9 defw 0									; Control.
 103+ 86E8 00 00        	defw 0											; Puntero objeto.
 104+ 86EA 00 00        	defw 0											; Puntero de impresión.
 105+ 86EC 00 00        	defw 0											; Rutina de impresión.
 106+ 86EE
 107+ 86EE 00 00        Disparo_10 defw 0									; Control.
 108+ 86F0 00 00        	defw 0											; Puntero objeto.
 109+ 86F2 00 00        	defw 0											; Puntero de impresión.
 110+ 86F4 00 00        	defw 0											; Rutina de impresión.
 111+ 86F6
 112+ 86F6 00 00        Disparo_11 defw 0
 113+ 86F8
 114+ 86F8              ; -------------------------------------------------------------------------------------
 115+ 86F8              ;
 116+ 86F8              ;	Índice de cajas de entidades.
 117+ 86F8              ;
 118+ 86F8              ;	18/1/24
 119+ 86F8              ;
 120+ 86F8
 121+ 86F8              Indice_de_cajas_de_entidades
 122+ 86F8
 123+ 86F8 40 87        	defw Caja_1
 124+ 86FA 4D 87        	defw Caja_2
 125+ 86FC 5A 87        	defw Caja_3
 126+ 86FE 67 87        	defw Caja_4
 127+ 8700 74 87        	defw Caja_5
 128+ 8702 81 87        	defw Caja_6
 129+ 8704 8E 87        	defw Caja_7
 130+ 8706
 131+ 8706 00 00        	defw 0
 132+ 8708 00 00        	defw 0
 133+ 870A
 134+ 870A              ; ---------- ---------- ---------- ---------- ----------
 135+ 870A
 136+ 870A 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 137+ 870D 00 00        	defw 0		 										; (Posicion_actual).
 138+ 870F 00 00        	defw 0	 											; (Puntero_objeto).
 139+ 8711 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 140+ 8713
 141+ 8713 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 142+ 8714 05           	db %00000101										; (Attr).
 143+ 8715 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 144+ 8717 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 145+ 8719 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 146+ 871B 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 147+ 871D C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 148+ 871F 04           	db 4 												; (Cuad_objeto).
 149+ 8720 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 150+ 8721 00 00 00...  	ds 6												; Variables_de_borrado
 151+ 8727
 152+ 8727 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 153+ 8729
 154+ 8729              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 155+ 8729 00 00        	defw 0
 156+ 872B 00 00        	defw 0 												; Contador_de_mov_masticados
 157+ 872D 40           	db $40												; (Ctrl_0).
 158+ 872E 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 158+ 8732 00 00
 159+ 8734 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 160+ 8737 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 161+ 8739 00           	db 0												; (Cola_de_desplazamiento).
 162+ 873A 00           	db 0 												; (Columnas).
 163+ 873B 00 00        	defw 0												; (Limite_horizontal).
 164+ 873D 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 165+ 8740
 166+ 8740              ; ---------- ---------- ---------- ---------- ----------
 167+ 8740              ;
 168+ 8740              ;	22/01/24
 169+ 8740              ;
 170+ 8740              ; 	Cada caja tiene 13 bytes !!!
 171+ 8740
 172+ 8740 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 8743 00           	db %00000000										; (Attr).
 174+ 8744 00           	db 0												; (Impacto).
 175+ 8745 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 8747 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 8749 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 874B 00           	db 0												; (Ctrl_0).
 179+ 874C 00           	db 0												; (Ctrl_2).
 180+ 874D
 181+ 874D              ; ---------- ---------- ---------- ---------- ----------
 182+ 874D
 183+ 874D 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 184+ 8750 00           	db %00000000										; (Attr).
 185+ 8751 00           	db 0												; (Impacto).
 186+ 8752 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 8754 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 8756 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 8758 00           	db 0												; (Ctrl_0).
 190+ 8759 00           	db 0												; (Ctrl_2).
 191+ 875A
 192+ 875A              ; ---------- ---------- ---------- ---------- ----------
 193+ 875A
 194+ 875A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 195+ 875D 00           	db %00000000										; (Attr).
 196+ 875E 00           	db 0												; (Impacto).
 197+ 875F 00 00        	defw 0												; (Puntero_de_impresion).
 198+ 8761 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 199+ 8763 00 00        	defw 0 												; (Contador_de_mov_masticados).
 200+ 8765 00           	db 0												; (Ctrl_0).
 201+ 8766 00           	db 0												; (Ctrl_2).
 202+ 8767
 203+ 8767              ; ---------- ---------- ---------- ---------- ----------
 204+ 8767
 205+ 8767 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 206+ 876A 00           	db %00000000										; (Attr).
 207+ 876B 00           	db 0												; (Impacto).
 208+ 876C 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 876E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 8770 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 8772 00           	db 0												; (Ctrl_0).
 212+ 8773 00           	db 0												; (Ctrl_2).
 213+ 8774
 214+ 8774              ; ---------- ---------- ---------- ---------- ----------
 215+ 8774
 216+ 8774 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 8777 00           	db %00000000										; (Attr).
 218+ 8778 00           	db 0												; (Impacto).
 219+ 8779 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 877B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 877D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 877F 00           	db 0												; (Ctrl_0).
 223+ 8780 00           	db 0												; (Ctrl_2).
 224+ 8781
 225+ 8781              ; ---------- ---------- ---------- ---------- ----------
 226+ 8781
 227+ 8781 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 228+ 8784 00           	db %00000000										; (Attr).
 229+ 8785 00           	db 0												; (Impacto).
 230+ 8786 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 8788 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 878A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 878C 00           	db 0												; (Ctrl_0).
 234+ 878D 00           	db 0												; (Ctrl_2).
 235+ 878E
 236+ 878E              ; ---------- ---------- ---------- ---------- ----------
 237+ 878E
 238+ 878E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 239+ 8791 00           	db %00000000										; (Attr).
 240+ 8792 00           	db 0												; (Impacto).
 241+ 8793 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 8795 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 8797 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 8799 00           	db 0												; (Ctrl_0).
 245+ 879A 00           	db 0												; (Ctrl_2).
 246+ 879B
 247+ 879B              ; -------------------------------------------------------------------------------------
 248+ 879B              ;
 249+ 879B              ;	11/1/24
 250+ 879B              ;
 251+ 879B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 879B              ;
 253+ 879B              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 879B              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 879B              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 879B              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 879B
 258+ 879B              Indice_de_definiciones_de_entidades
 259+ 879B
 260+ 879B 9F 87        	defw Entidad_1
 261+ 879D AC 87        	defw Entidad_2
 262+ 879F
 263+ 879F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 879F
 265+ 879F              ;	BADSAT, (Satélite malvado).
 266+ 879F
 267+ 879F 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87A2 04           	db %00000100										; (Attr).
 269+ 87A3 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87A5 39 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87A7 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 87A9 01           	db 1												; (Cuad_objeto).
 273+ 87AA 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87AC
 275+ 87AC 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87AF 02           	db %00000010										; (Attr).
 277+ 87B0 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87B2 39 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87B4 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87B6 01           	db 1												; (Cuad_objeto).
 281+ 87B7 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87B9
# file closed: Cajas_y_disparos.asm
 148  87B9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87B9
   2+ 87B9
   3+ 87B9              ;   07/07/23
   4+ 87B9              ;
   5+ 87B9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87B9              ;
   7+ 87B9              ;   Codificación:
   8+ 87B9              ;
   9+ 87B9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87B9              ;
  11+ 87B9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87B9              ;
  13+ 87B9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87B9              ;
  15+ 87B9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87B9              ;
  17+ 87B9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87B9              ;                               ..... %01000010 Vel_up 4
  19+ 87B9              ;                                               Vel_down 2
  20+ 87B9              ;                               ..... $42
  21+ 87B9              ;
  22+ 87B9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87B9              ;
  24+ 87B9              ;                               ..... %01000010 Vel_left 4
  25+ 87B9              ;                                               Vel_right 2
  26+ 87B9              ;                               ..... $42
  27+ 87B9              ;
  28+ 87B9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87B9              ;
  30+ 87B9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87B9              ;
  32+ 87B9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87B9              ;
  34+ 87B9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87B9              ;                                     $53
  36+ 87B9              ;
  37+ 87B9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87B9              ;
  39+ 87B9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87B9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87B9              ;
  42+ 87B9              ;                       Arriba ..... $81
  43+ 87B9              ;                       Arriba - izquierda ..... $a1
  44+ 87B9              ;                       Arriba - derecha ..... $91
  45+ 87B9              ;
  46+ 87B9              ;                       Abajo ..... $41
  47+ 87B9              ;                       Abajo - izquierda ..... $61
  48+ 87B9              ;                       Abajo - derecha ..... $51
  49+ 87B9              ;
  50+ 87B9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87B9              ;
  52+ 87B9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87B9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87B9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87B9              ;
  56+ 87B9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87B9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87B9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87B9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87B9              ;
  61+ 87B9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87B9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87B9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87B9              ;
  65+ 87B9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87B9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87B9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87B9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87B9
  70+ 87B9              ; ----- ----- ----- ----- -----
  71+ 87B9
  72+ 87B9 E5 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87BB ED 87            defw F_1
  74+ 87BD F7 87            defw F_2
  75+ 87BF 01 88            defw Codo_abajo_derecha
  76+ 87C1 35 88            defw Derecha_y_subiendo
  77+ 87C3 3F 88            defw Derecha_y_subiendo_1
  78+ 87C5 49 88            defw F_3
  79+ 87C7 53 88            defw F_4
  80+ 87C9 5D 88            defw Derecha_y_bajando
  81+ 87CB 67 88            defw Derecha_y_bajando_1
  82+ 87CD 71 88            defw Derecha_y_bajando_2
  83+ 87CF 7B 88            defw Codo_derecha_abajo
  84+ 87D1 AB 88            defw Codo_abajo_izq.
  85+ 87D3 DF 88            defw Izquierda_y_subiendo
  86+ 87D5 E9 88            defw Izquierda_y_subiendo_1
  87+ 87D7 F3 88            defw F_5
  88+ 87D9 FD 88            defw F_6
  89+ 87DB 07 89            defw Izquierda_y_bajando
  90+ 87DD 11 89            defw Izquierda_y_bajando_1
  91+ 87DF 1B 89            defw Izquierda_y_bajando_2
  92+ 87E1 25 89            defw Codo_izquierda_abajo
  93+ 87E3 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87E5
  95+ 87E5 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87E9 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87ED
  98+ 87ED 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87F1 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87F5 08 00
 100+ 87F7
 101+ 87F7 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87FB 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87FF 0F FE
 103+ 8801
 104+ 8801 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8805 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8809 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 880D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8811 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8815 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8819 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 881D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8821 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8825 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8829 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 882D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8831 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8835
 118+ 8835 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8839 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 883D 06 00
 120+ 883F
 121+ 883F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8843 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8847 02 00
 123+ 8849
 124+ 8849 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 884D 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8851 04 00
 126+ 8853
 127+ 8853 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8857 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 885B 08 00
 129+ 885D
 130+ 885D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8861 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8865 02 00
 132+ 8867
 133+ 8867 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 886B 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 886F 06 00
 135+ 8871
 136+ 8871 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8875 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8879 06 00
 138+ 887B
 139+ 887B              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 887B
 141+ 887B 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 887F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8883 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8887 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 888B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 888F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8893 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8897 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 889B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 889F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88A3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88A7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88AB
 154+ 88AB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88AF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88B3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88B7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88BB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88BF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88C3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88C7 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88CB 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88CF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88D3 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88D7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88DB 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88DF
 168+ 88DF 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88E3 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88E7 06 00
 170+ 88E9
 171+ 88E9 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88ED 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88F1 02 00
 173+ 88F3
 174+ 88F3 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88F7 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88FB 04 00
 176+ 88FD
 177+ 88FD 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8901 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8905 08 00
 179+ 8907
 180+ 8907 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 890B 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 890F 02 00
 182+ 8911
 183+ 8911 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8915 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8919 06 00
 185+ 891B
 186+ 891B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 891F 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8923 06 00
 188+ 8925
 189+ 8925 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8929 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 892D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8931 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8935 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8939 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 893D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8941 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8945 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8949 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 894D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8951 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8955
 202+ 8955
 203+ 8955
 204+ 8955
 205+ 8955
 206+ 8955
 207+ 8955
 208+ 8955
 209+ 8955
 210+ 8955
# file closed: Patrones_de_mov.asm
 149  8955              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8955              ; 19/1/24
   2+ 8955
   3+ 8955              Indice_de_niveles
   4+ 8955
   5+ 8955 5D 89        	defw Nivel_1
   6+ 8957 69 89        	defw Nivel_2
   7+ 8959
   8+ 8959              ;	...
   9+ 8959              ;	...
  10+ 8959              ;	+ Niveles ...
  11+ 8959
  12+ 8959 00 00        	defw 0
  13+ 895B 00 00        	defw 0
  14+ 895D
  15+ 895D 07           Nivel_1 db 7									; Nº de entidades.
  16+ 895E 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8962 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8966 01 01 01
  18+ 8969
  19+ 8969 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 896A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 896E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8972 01 02
  22+ 8974 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8978 01 02
  23+ 897A
# file closed: Niveles.asm
 150  897A
 151  897A              ; ******************************************************************************************************************************************************************************************
 152  897A              ; Constantes.
 153  897A              ; ******************************************************************************************************************************************************************************************
 154  897A              ;
 155  897A              ; 09/03/24
 156  897A
 157  897A              ;
 158  897A              ; Constantes.
 159  897A              ;
 160  897A
 161  897A              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 162  897A
 163  897A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 164  897A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 165  897A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 166  897A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 167  897A
 168  897A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb00 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 169  897A
 170  897A              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 171  897A
 172  897A              ;                                                       ; 35 bytes por entidad.
 173  897A              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 174  897A              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 175  897A              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 176  897A              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 177  897A
 178  897A              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 179  897A
 180  897A
 181  897A              ; ******************************************************************************************************************************************************************************************
 182  897A              ; Variables.
 183  897A              ; ******************************************************************************************************************************************************************************************
 184  897A              ;
 185  897A              ; 18/01/24
 186  897A              ;
 187  897A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 188  897A              ;
 189  897A
 190  897A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 191  897A
 192  897A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 193  897B              ;															- Patrón de movimiento.
 194  897B              ;															- Aspecto
 195  897B 00           Filas db 0												; Filas. [DRAW]
 196  897C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 197  897D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 198  897F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 199  8981 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 200  8982 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 201  8983
 202  8983              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 203  8983
 204  8983 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 205  8984              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 206  8984              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 207  8984 00           Attr db 0												; Atributos de la entidad:
 208  8985
 209  8985              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 210  8985              ;
 211  8985              ;	COLORES: 0 ..... NEGRO
 212  8985              ;    		 1 ..... AZUL
 213  8985              ; 			 2 ..... ROJO
 214  8985              ;			 3 ..... MAGENTA
 215  8985              ; 			 4 ..... VERDE
 216  8985              ; 			 5 ..... CIAN
 217  8985              ;			 6 ..... AMARILLO
 218  8985              ; 			 7 ..... BLANCO
 219  8985
 220  8985 00 00        Indice_Sprite_der defw 0
 221  8987 00 00        Indice_Sprite_izq defw 0
 222  8989 00 00        Puntero_DESPLZ_der defw 0
 223  898B 00 00        Puntero_DESPLZ_izq defw 0
 224  898D
 225  898D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 226  898F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 227  8990
 228  8990              ; Variables de objeto. (Características).
 229  8990
 230  8990 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 231  8991              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 232  8991              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 233  8991              ; Variables_de_borrado ds 6
 234  8991
 235  8991 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 236  8993              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 237  8993
 238  8993 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 239  8995
 240  8995              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 241  8995              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 242  8995
 243  8995 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 244  8997              ;														; _palabras que componen el "movimiento_masticado".
 245  8997
 246  8997              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 247  8997
 248  8997 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 249  8998              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 250  8998              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 251  8998              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 252  8998              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 253  8998              ;
 254  8998              ; 														DESCRIPCIÖN:
 255  8998              ;
 256  8998              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 257  8998              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 258  8998              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 259  8998              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 260  8998              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 261  8998              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 262  8998              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 263  8998              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 264  8998              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 265  8998              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 266  8998              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 267  8998              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 268  8998              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 269  8998              ;
 270  8998              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 271  8998              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 272  8998              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 273  8998
 274  8998              ; Variables de funcionamiento. [DRAW].
 275  8998
 276  8998 00           Columnas db 0
 277  8999 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  899B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  899B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  899C
 281  899C              ; variables de control general.
 282  899C
 283  899C 00           Ctrl_2 db 0
 284  899D              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 285  899D              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 286  899D              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 287  899D              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 288  899D              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 289  899D              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 290  899D              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 291  899D              ;
 292  899D              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 293  899D              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 294  899D              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 295  899D              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 296  899D              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 297  899D              ;														BIT 4, ???
 298  899D              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 299  899D
 300  899D 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 301  899E
 302  899E              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 303  899E
 304  899E              ;					         		---------;      ;---------
 305  899E
 306  899E              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 307  899E
 308  899E              Perfiles_de_velocidad
 309  899E
 310  899E 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 311  899F 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 312  89A0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 313  89A1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 314  89A2
 315  89A2              ; Contadores de 16 bits.
 316  89A2
 317  89A2 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 318  89A4 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 319  89A6 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 320  89A8 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 321  89AA
 322  89AA              ; Movimiento. ------------------------------------------------------------------------------------------------------
 323  89AA
 324  89AA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 325  89AC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 326  89AE 00 00        Puntero_indice_mov_bucle defw 0							;
 327  89B0              ;
 328  89B0              ;
 329  89B0 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 330  89B1              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 331  89B1              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 332  89B1 00           Incrementa_puntero_backup db 0
 333  89B2 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 334  89B3              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 335  89B3 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 336  89B4 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 337  89B5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 338  89B6              ;
 339  89B6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 340  89B6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 341  89B6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 342  89B6              ;
 343  89B6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 344  89B6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 345  89B6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 346  89B6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 347  89B6              ;
 348  89B6              ;														;	"$ff" ..... Bucle infinito de repetición.
 349  89B6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 350  89B6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 351  89B6              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 352  89B6
 353  89B6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 354  89B7
 355  89B7              ;														DESCRIPCIÓN:
 356  89B7              ;
 357  89B7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 358  89B7              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 359  89B7              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 360  89B7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 361  89B7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 362  89B7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 363  89B7
 364  89B7              ;														BIT 3, Recarga de nueva oleada.
 365  89B7              ;														BIT 4, Recarga de nueva oleada.
 366  89B7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 367  89B7              ;														BIT 6, **** Frame completo.
 368  89B7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 369  89B7
 370  89B7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 371  89B9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 372  89B9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 373  89B9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 374  89B9
 375  89B9              ; Gestión de ENTIDADES y CAJAS.
 376  89B9
 377  89B9 00 00        Puntero_store_caja defw 0
 378  89BB 00 00        Puntero_restore_caja defw 0
 379  89BD 00 00        Indice_restore_caja defw 0
 380  89BF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 381  89C0 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 382  89C1 00           Entidades_en_curso db 0									; ..... ..... .....
 383  89C2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 384  89C3              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 385  89C3              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 386  89C3              ;														; _ (Numero_de_malotes)="0".
 387  89C3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 388  89C5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 389  89C7              ;														; _ puntero (Indice_entidades).
 390  89C7
 391  89C7              ;---------------------------------------------------------------------------------------------------------------
 392  89C7              ;
 393  89C7              ;	11/01/24
 394  89C7              ;
 395  89C7              ;	Álbumes.
 396  89C7
 397  89C7 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 398  89C9              ;														; _variable para almacenar lo posición del puntero_
 399  89C9              ; 														; _de pila, SP.
 400  89C9 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 401  89CB              ;														; La utiliza la rutina [Extrae_foto_registros].
 402  89CB 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 403  89CD
 404  89CD
 405  89CD              ; Impresión. ----------------------------------------------------------------------------------------------------
 406  89CD
 407  89CD 00 00        Album_de_pintado defw 0
 408  89CF 00 00        Album_de_borrado defw 0
 409  89D1 00 00        Techo_Scanlines_album defw 0
 410  89D3 00 00        Techo_Scanlines_album_2 defw 0
 411  89D5 00           Switch db 0
 412  89D6 00 00        Techo defw 0
 413  89D8 00 00        Scanlines_album_SP defw 0
 414  89DA 5C 86        India_SP defw Tabla_de_pintado
 415  89DC 5F 86        India_2_SP defw Tabla_de_pintado+3
 416  89DE
 417  89DE 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 418  89DF              ;
 419  89DF              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 420  89DF              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 421  89DF              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 422  89DF              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 423  89DF              ;																Habilita el borrado/pintado de sprites.
 424  89DF              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 425  89DF              ;																_ a la baja.
 426  89DF              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 427  89DF
 428  89DF
 429  89DF
 430  89DF 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 431  89E0              ;
 432  89E0              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 433  89E0              ;
 434  89E0              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 435  89E0              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 436  89E0              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 437  89E0              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 438  89E0              ;
 439  89E0              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 440  89E0              ;															_ masticados ya generados.
 441  89E0              ;
 442  89E0              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 443  89E0              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 444  89E0              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 445  89E0              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 446  89E0
 447  89E0
 448  89E0              ; Gestión de Disparos.
 449  89E0
 450  89E0              ;;Numero_de_disparotes db 0
 451  89E0              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 452  89E0              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 453  89E0              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 454  89E0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 455  89E0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 456  89E0              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  89E0              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  89E0              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 459  89E0              ;														; _produzca colisión.
 460  89E0              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 461  89E0              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  89E0              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  89E0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  89E0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  89E3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 466  89E3              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 467  89E3
 468  89E3              ;---------------------------------------------------------------------------------------------------------------
 469  89E3
 470  89E3              ; Relojes y temporizaciones.
 471  89E3
 472  89E3 00           Contador_de_frames db 0
 473  89E4 00           Contador_de_frames_2 db 0
 474  89E5
 475  89E5              ;Clock_explosion db 4
 476  89E5 14           Clock_Entidades_en_curso db 20
 477  89E6 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  89E7              ;														; Repite la oleada de entidades.
 479  89E7              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 480  89E7              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 481  89E7              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 482  89E7
 483  89E7              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 484  89E7              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 485  89E7              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 486  89E7
 487  89E7              ;---------------------------------------------------------------------------------------------------------------
 488  89E7
 489  89E7              ; Gestión de NIVELES.
 490  89E7
 491  89E7 00           Nivel db 0												; Nivel actual del juego.
 492  89E8 00 00        Puntero_indice_NIVELES defw 0
 493  89EA 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 494  89EC              ; 														; _ que definen el NIVEL.
 495  89EC              ; Y todo comienza aquí .....
 496  89EC              ;
 497  89EC              ; 	INICIO  *************************************************************************************************************************************************************************
 498  89EC              ;
 499  89EC              ;	5/1/24
 500  89EC
 501  89EC              START
 502  89EC
 503  89EC 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 504  89EF 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 505  89F1 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 506  89F3 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 507  89F5 F3           	DI
 508  89F6
 509  89F6              ;	ld a,%00000111
 510  89F6              ;	call Cls
 511  89F6 CD E5 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 512  89F9
 513  89F9              ; INICIALIZACIÓN.
 514  89F9
 515  89F9              ;	Inicializa 1er Nivel.
 516  89F9
 517  89F9 21 55 89     	ld hl,Indice_de_niveles
 518  89FC 22 E8 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 519  89FF CD 7F AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 520  8A02              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 521  8A02              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 522  8A02              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 523  8A02
 524  8A02              ;	Provisional, (para desarrollo).
 525  8A02              	;-
 526  8A02              ;	ld hl,Numero_parcial_de_entidades
 527  8A02              ;	ld b,(hl)
 528  8A02              ;	inc b
 529  8A02              ;	dec b
 530  8A02              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 531  8A02
 532  8A02 CD 48 8C     	call Inicia_albumes_de_lineas
 533  8A05
 534  8A05 CD C4 AA     4 call Inicia_Entidades
 535  8A08
 536  8A08 CD 58 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 537  8A0B              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 538  8A0B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 539  8A0B              ; (Esto se dá cuando se inicia una nueva oleada).
 540  8A0B
 541  8A0B              ;	ld a,(Ctrl_1)
 542  8A0B              ;	bit 3,a
 543  8A0B              ;	jr nz,5F											 ; Loop
 544  8A0B
 545  8A0B              ; 	INICIA AMADEUS !!!!!
 546  8A0B
 547  8A0B              ;3 call Restore_Amadeus
 548  8A0B              ;	call Inicia_Puntero_objeto
 549  8A0B              ;	call Draw
 550  8A0B
 551  8A0B              ;	call Guarda_movimiento_masticado	;! Provisional
 552  8A0B
 553  8A0B              ;	call Genera_datos_de_impresion
 554  8A0B              ;	call Guarda_datos_de_borrado_Amadeus
 555  8A0B
 556  8A0B              ;	ld de,Amadeus_db
 557  8A0B              ;	call Store_Amadeus
 558  8A0B
 559  8A0B              ; 	INICIA DISPAROS !!!!!
 560  8A0B
 561  8A0B              ;	call Inicia_Puntero_Disparo_Entidades
 562  8A0B              ;	call Inicia_Puntero_Disparo_Amadeus
 563  8A0B
 564  8A0B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 565  8A0B
 566  8A0B              ;5 call Inicia_punteros_de_cajas
 567  8A0B              ;	call Restore_entidad
 568  8A0B
 569  8A0B              ;	ld a,(Ctrl_1)
 570  8A0B              ;	bit 3,a
 571  8A0B              ;	jr z,6F
 572  8A0B
 573  8A0B              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 574  8A0B
 575  8A0B              ;	ld hl,Ctrl_1
 576  8A0B              ;	res 3,(hl)
 577  8A0B              ;	jr Main
 578  8A0B
 579  8A0B              ; Damos por concluida la construcción del FRAME.
 580  8A0B              ;
 581  8A0B
 582  8A0B 2A D8 89     6 ld hl,(Scanlines_album_SP)
 583  8A0E 22 D1 89     	ld (Techo_Scanlines_album),hl
 584  8A11
 585  8A11 2A CF 89     	ld hl,(Album_de_borrado)
 586  8A14 22 D8 89     	ld (Scanlines_album_SP),hl
 587  8A17
 588  8A17 21 5C 86     	ld hl,Tabla_de_pintado
 589  8A1A 22 DA 89     	ld (India_SP),hl
 590  8A1D
 591  8A1D 21 DE 89     	ld hl,Ctrl_3
 592  8A20 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 593  8A22 CB D6        	set 2,(hl)
 594  8A24
 595  8A24 FB           	ei
 596  8A25 76           	halt
 597  8A26
 598  8A26              ; ------------------------------------
 599  8A26
 600  8A26              Main
 601  8A26              ;
 602  8A26              ;	11/12/23
 603  8A26
 604  8A26              ; Aparece nueva entidad ???
 605  8A26
 606  8A26              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 607  8A26              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 608  8A26              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 609  8A26              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 610  8A26              ;														; _un 2º bloque.
 611  8A26
 612  8A26              ;	call Genera_scanlines_masticados_a_borrar
 613  8A26              ;	call Limpia_Almacen_de_scanlines_masticados
 614  8A26
 615  8A26              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 616  8A26              ; 													 	; _(Scanlines_album_SP).
 617  8A26
 618  8A26 3A E5 89     	ld a,(Clock_Entidades_en_curso)
 619  8A29 47           	ld b,a
 620  8A2A 3A E3 89     	ld a,(Contador_de_frames)
 621  8A2D B8           	cp b
 622  8A2E 20 18        	jr nz,13F
 623  8A30
 624  8A30              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 625  8A30              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 626  8A30
 627  8A30 3A C0 89     21 ld a,(Numero_parcial_de_entidades)
 628  8A33 47           	ld b,a
 629  8A34 3A C1 89     	ld a,(Entidades_en_curso)
 630  8A37 B8           	cp b
 631  8A38 28 0E        	jr z,13F
 632  8A3A 30 0C        	jr nc,13F
 633  8A3C
 634  8A3C 3C           	inc a
 635  8A3D 32 C1 89     	ld (Entidades_en_curso),a
 636  8A40
 637  8A40              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8A40
 639  8A40 3A E5 89     	ld a,(Clock_Entidades_en_curso)
 640  8A43              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 641  8A43              ;! _ IMPREDECIBLE !!!!
 642  8A43 C6 64        	add 100
 643  8A45 32 E5 89     	ld (Clock_Entidades_en_curso),a
 644  8A48
 645  8A48              ; -------------------------------------------------------------------------------------------------------------
 646  8A48
 647  8A48              ; Habilita disparos.
 648  8A48
 649  8A48              13
 650  8A48
 651  8A48              ;	ld hl,Disparo_Amadeus
 652  8A48              ;	ld de,CLOCK_repone_disparo_Amadeus
 653  8A48              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 654  8A48
 655  8A48              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 656  8A48              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 657  8A48              ;	call Habilita_disparos
 658  8A48
 659  8A48              ; COLISIONES.
 660  8A48
 661  8A48              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 662  8A48
 663  8A48              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 664  8A48              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 665  8A48              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 666  8A48
 667  8A48              ;	xor a
 668  8A48              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 669  8A48
 670  8A48              ;	call Inicia_punteros_de_cajas
 671  8A48              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 672  8A48              ; 														; _ en DRAW.
 673  8A48
 674  8A48              ;	ld a,(Filas)
 675  8A48              ;	and a
 676  8A48              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 677  8A48              ;	call Incrementa_punteros_de_cajas
 678  8A48              ;	jr 12B
 679  8A48
 680  8A48              ; ---------------------------------------------------------------------------------------
 681  8A48
 682  8A48 3A C0 89     10 ld a,(Numero_parcial_de_entidades)
 683  8A4B 47               ld b,a
 684  8A4C A7           	and a
 685  8A4D 20 00        	jr nz,11F
 686  8A4F
 687  8A4F              ;	ld hl,Ctrl_1;
 688  8A4F              ;	bit 4,(hl)
 689  8A4F              ;	jp nz,16F
 690  8A4F
 691  8A4F              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 692  8A4F
 693  8A4F              ;	ld hl,Ctrl_1
 694  8A4F              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 695  8A4F
 696  8A4F              ;	ld a,(Contador_de_frames)
 697  8A4F              ;	inc a
 698  8A4F              ;	ld (Activa_recarga_cajas),a
 699  8A4F
 700  8A4F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 701  8A4F
 702  8A4F 3A C1 89     11 ld a,(Entidades_en_curso)
 703  8A52 A7           	and a
 704  8A53 28 50        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 705  8A55 47           	ld b,a												; No hay entidades que gestionar.
 706  8A56
 707  8A56              ; ( Código que ejecutamos con cada entidad: ).
 708  8A56
 709  8A56              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 710  8A56              ;
 711  8A56              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 712  8A56
 713  8A56
 714  8A56 3A E3 89     	ld a,(Contador_de_frames)
 715  8A59 FE 5F        	cp $5f 	; 	$5f
 716  8A5B 20 07        	jr nz,chuli
 717  8A5D 3A E4 89     	ld a,(Contador_de_frames_2)
 718  8A60 FE 05        	cp $05
 719  8A62 28 FE        	jr z,$
 720  8A64
 721  8A64 21 5C 86     chuli ld hl,Tabla_de_pintado
 722  8A67 22 DA 89     	ld (India_SP),hl
 723  8A6A
 724  8A6A 21 DE 89     	ld hl,Ctrl_3
 725  8A6D CB D6        	set 2,(hl)
 726  8A6F CD BC 8A     	call Change
 727  8A72
 728  8A72 C5           15 push bc 												; Nº de entidades en curso.
 729  8A73
 730  8A73 CD A9 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 731  8A76
 732  8A76 CD 06 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 733  8A79
 734  8A79
 735  8A79              ; Existe "Entidad_guía" ???.
 736  8A79              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 737  8A79
 738  8A79              ;	ld a,(Ctrl_3)
 739  8A79              ;	bit 1,a
 740  8A79              ;	jr nz,22F
 741  8A79
 742  8A79              ; Almacén de "Movimientos_masticados" lleno ???
 743  8A79              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 744  8A79              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 745  8A79
 746  8A79              ;;	ld a,(Ctrl_3)
 747  8A79              ;;	bit 3,a
 748  8A79              ;;	jr nz,22F
 749  8A79
 750  8A79              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 751  8A79
 752  8A79              ;	ld hl,Ctrl_2
 753  8A79              ;	set 5,(hl)
 754  8A79              ;	ld hl,Ctrl_3
 755  8A79              ;	set 1,(hl)
 756  8A79
 757  8A79              ; Impacto ???
 758  8A79
 759  8A79              ;22 ld a,(Impacto)
 760  8A79              ;	and a
 761  8A79              ;	jr z,8F
 762  8A79
 763  8A79              ; Hay Impacto en esta entidad.
 764  8A79
 765  8A79              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 766  8A79              ;	dec (hl)
 767  8A79              ;	jp nz,17F
 768  8A79
 769  8A79              ;! Velocidad de la animación de la explosión.
 770  8A79
 771  8A79              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 772  8A79              ;														; _,(velocidad de la explosión).
 773  8A79              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 774  8A79
 775  8A79              ;	call Repone_datos_de_borrado
 776  8A79              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 777  8A79
 778  8A79              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 779  8A79
 780  8A79              ;	ld a,(Ctrl_2)
 781  8A79              ;	bit 1,a
 782  8A79              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 783  8A79
 784  8A79              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 785  8A79
 786  8A79              ;	ld a,(CTRL_DESPLZ)
 787  8A79              ;	and a
 788  8A79              ;	jr nz,18F
 789  8A79
 790  8A79              ;	ld hl,Indice_Explosion_2x2-2
 791  8A79              ;	ld (Puntero_DESPLZ_der),hl
 792  8A79              ;	jr 19F
 793  8A79
 794  8A79              ;18 ld hl,Indice_Explosion_2x3-2
 795  8A79              ;	ld (Puntero_DESPLZ_der),hl
 796  8A79
 797  8A79              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 798  8A79              ;	set 1,(hl)
 799  8A79              ;	jr 7F
 800  8A79
 801  8A79              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 802  8A79              ; _con las coordenadas de la entidad almacenada en DRAW.
 803  8A79
 804  8A79              ;8 ld a,(Ctrl_1)
 805  8A79              ;	bit 2,a
 806  8A79              ;	jr z,7F
 807  8A79
 808  8A79              ;	ld hl,(Coordenadas_disparo_certero)
 809  8A79              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 810  8A79              ;														; E contiene la coordenada_X del disparo.
 811  8A79              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 812  8A79              ;														; H FILA, (Coordenada_y de la entidad).
 813  8A79              ;	and a
 814  8A79              ;	sbc hl,de
 815  8A79
 816  8A79              ;	call Determina_resultado_comparativa
 817  8A79
 818  8A79              ;	ld a,b
 819  8A79              ;	and a
 820  8A79              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 821  8A79
 822  8A79              ; ----- ----- -----
 823  8A79
 824  8A79              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 825  8A79              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 826  8A79
 827  8A79              ;	ld hl,Ctrl_1
 828  8A79              ;	res 2,(hl)
 829  8A79
 830  8A79              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 831  8A79
 832  8A79              ;	ld a,(Ctrl_0)
 833  8A79              ;	bit 4,a
 834  8A79              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 835  8A79
 836  8A79              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 837  8A79              ; [[[
 838  8A79              ;	call Detecta_disparo_entidad
 839  8A79              ; ]]]
 840  8A79
 841  8A79              ; -------------------------------------------
 842  8A79
 843  8A79 CD F4 8B      	call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 844  8A7C CD C6 AC     	call Genera_datos_de_impresion
 845  8A7F              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 846  8A7F              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 847  8A7F              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 848  8A7F              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 849  8A7F
 850  8A7F CD 3E AB     	call Decrementa_Contador_de_mov_masticados
 851  8A82
 852  8A82              ; -------------------------------------------
 853  8A82
 854  8A82              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 855  8A82
 856  8A82 2A 91 89     	ld hl,(Puntero_de_impresion)
 857  8A85 CD 73 AC     	call Genera_coordenadas
 858  8A88
 859  8A88              ;	ld hl,Ctrl_0
 860  8A88              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 861  8A88
 862  8A88 CD 29 AB     17 call Store_Restore_cajas
 863  8A8B
 864  8A8B C1           	pop bc
 865  8A8C
 866  8A8C 10 E4        	djnz 15B
 867  8A8E
 868  8A8E              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 869  8A8E
 870  8A8E CD 1A 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 871  8A91 CD 31 8B     	call Ordena_tabla_de_impresion
 872  8A94 CD 58 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 873  8A97
 874  8A97              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 875  8A97              ; Hemos gestionado todas las unidades.
 876  8A97              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 877  8A97
 878  8A97              ;	ld hl,Ctrl_1
 879  8A97              ;	res 2,(hl)
 880  8A97
 881  8A97
 882  8A97 CD D7 8A     	call Borra_diferencia
 883  8A9A
 884  8A9A 3A DE 89     	ld a,(Ctrl_3)
 885  8A9D CB 5F        	bit 3,a
 886  8A9F 20 04        	jr nz,16F
 887  8AA1
 888  8AA1 EB           	ex de,hl
 889  8AA2 71           	ld (hl),c
 890  8AA3 2C           	inc l
 891  8AA4 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 892  8AA5
 893  8AA5              ; Aquí situaremos la rutina que ordena el índice Masa.
 894  8AA5
 895  8AA5 2A CF 89     16 ld hl,(Album_de_borrado)
 896  8AA8 22 D8 89     	ld (Scanlines_album_SP),hl
 897  8AAB
 898  8AAB 21 DE 89     	ld hl,Ctrl_3
 899  8AAE CB C6        	set 0,(hl) 											; Indica Frame completo.
 900  8AB0
 901  8AB0 CB 9E        	res 3,(hl)
 902  8AB2 CB A6        	res 4,(hl)
 903  8AB4
 904  8AB4 AF           	xor a
 905  8AB5 D3 FE        	out ($fe),a
 906  8AB7 76           	halt
 907  8AB8
 908  8AB8              ; ----------------------------------------
 909  8AB8
 910  8AB8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 911  8AB8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 912  8AB8 CA 26 8A     	jp z,Main
 913  8ABB
 914  8ABB              ; RECARGA DE NUEVA OLEADA.
 915  8ABB
 916  8ABB              ;	ld a,(Contador_de_frames)
 917  8ABB              ;	ld b,a
 918  8ABB              ;	ld a,(Activa_recarga_cajas)
 919  8ABB              ;	cp b
 920  8ABB              ;	jr z,20F
 921  8ABB
 922  8ABB              ;	ld hl,Ctrl_1
 923  8ABB              ;	set 4,(hl)
 924  8ABB              ;	jp Main
 925  8ABB
 926  8ABB              ;20 ld hl,Ctrl_1
 927  8ABB              ;	res 4,(hl)
 928  8ABB
 929  8ABB              ;	ld a,(Contador_de_frames)
 930  8ABB
 931  8ABB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 932  8ABB              ;! _ IMPREDECIBLE !!!!
 933  8ABB
 934  8ABB              ;	add 10
 935  8ABB              ;	ld (Clock_Entidades_en_curso),a
 936  8ABB
 937  8ABB              ;	jp 4B
 938  8ABB
 939  8ABB C9           	ret
 940  8ABC
 941  8ABC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 942  8ABC              ;
 943  8ABC              ;	16/11/23
 944  8ABC
 945  8ABC              ;;Gestiona_Amadeus
 946  8ABC
 947  8ABC              ;! Activa/desactiva impacto con Amadeus.
 948  8ABC
 949  8ABC              ;	ld a,(Impacto)
 950  8ABC              ;	and a
 951  8ABC              ;	jr nz,2F
 952  8ABC
 953  8ABC              ;;	call Mov_Amadeus
 954  8ABC
 955  8ABC              ;;2 ld a,(Ctrl_0)
 956  8ABC              ;;	bit 4,a
 957  8ABC              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 958  8ABC
 959  8ABC              ;;	call Guarda_foto_entidad_a_pintar
 960  8ABC              ;;	call Guarda_datos_de_borrado_Amadeus
 961  8ABC
 962  8ABC              ;;1 ld hl,Ctrl_0
 963  8ABC              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 964  8ABC
 965  8ABC              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 966  8ABC
 967  8ABC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 968  8ABC
 969  8ABC              ;	call Calcula_numero_de_disparotes
 970  8ABC
 971  8ABC              ;;	ret
 972  8ABC
 973  8ABC              ; -----------------------------
 974  8ABC              ;
 975  8ABC              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 976  8ABC              ;
 977  8ABC              ;	INPUTS: B a de estar a "0".
 978  8ABC
 979  8ABC              ;Prepara_Borra_sprites
 980  8ABC
 981  8ABC              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 982  8ABC              ;	ld a,l
 983  8ABC              ;	ret z
 984  8ABC
 985  8ABC              ;	srl a
 986  8ABC
 987  8ABC              ;2 sub 16
 988  8ABC              ;	jr z,1F
 989  8ABC              ;	inc b
 990  8ABC              ;	jr 2B
 991  8ABC
 992  8ABC              ;1 inc b
 993  8ABC
 994  8ABC              ;	exx
 995  8ABC              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 996  8ABC              ;	exx
 997  8ABC
 998  8ABC              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 999  8ABC              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1000  8ABC
1001  8ABC              ;	ret
1002  8ABC
1003  8ABC              ; --------------------------------------------------------------------------------------------------------------
1004  8ABC              ;
1005  8ABC              ;	15/12/23
1006  8ABC
1007  8ABC              ;Mov_obj
1008  8ABC
1009  8ABC              ;	ld a,(Ctrl_2)
1010  8ABC              ;	bit 1,a
1011  8ABC              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1012  8ABC
1013  8ABC              ; Explosión:
1014  8ABC
1015  8ABC              ;	ld a,(Frames_explosion)
1016  8ABC              ;	and a
1017  8ABC              ;	jr nz,4F
1018  8ABC
1019  8ABC              ;!  Una alimaña menos!!!!!!!!!1
1020  8ABC
1021  8ABC              ; Se trataba de una Entidad_guía ???
1022  8ABC
1023  8ABC              ;	ld a,(Ctrl_2)
1024  8ABC              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1025  8ABC              ;	jr z,5F
1026  8ABC
1027  8ABC              ;	ld hl,Ctrl_3
1028  8ABC              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1029  8ABC
1030  8ABC              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1031  8ABC              ;!! _generado puede ser distinto, (aletoriedad).
1032  8ABC
1033  8ABC              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1034  8ABC              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1035  8ABC              ;	dec (hl)
1036  8ABC              ;	ld hl,Entidades_en_curso
1037  8ABC              ;	dec (hl)
1038  8ABC              ;	ld hl,Numero_de_entidades
1039  8ABC              ;	dec (hl)
1040  8ABC              ;	jr 3F
1041  8ABC
1042  8ABC              ; -----
1043  8ABC
1044  8ABC              ;	`Movemos´ la explosión.
1045  8ABC
1046  8ABC              ;4 ld hl,(Puntero_DESPLZ_der)
1047  8ABC              ;	inc hl
1048  8ABC              ;	inc hl
1049  8ABC              ;	call Extrae_address
1050  8ABC              ;;	ld (Puntero_objeto),hl
1051  8ABC
1052  8ABC              ;;	ld hl,Frames_explosion
1053  8ABC              ;;	dec (hl)
1054  8ABC
1055  8ABC              ;;	ld hl,Ctrl_0
1056  8ABC              ;;	set 4,(hl);;
1057  8ABC
1058  8ABC              ;;	jr 3F
1059  8ABC
1060  8ABC              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1061  8ABC
1062  8ABC              ;2 xor a
1063  8ABC              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1064  8ABC
1065  8ABC              ; Movemos Entidades malignas.
1066  8ABC              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1067  8ABC
1068  8ABC              ;	ld a,(Ctrl_2)
1069  8ABC              ;	bit 5,a
1070  8ABC              ;	jr nz,8F
1071  8ABC
1072  8ABC              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1073  8ABC              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1074  8ABC              ;	jr 7F
1075  8ABC
1076  8ABC              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1077  8ABC
1078  8ABC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1079  8ABC              ;	bit 4,a
1080  8ABC              ;	ret z
1081  8ABC
1082  8ABC              ; Ha habido desplazamiento de la entidad maligna.
1083  8ABC              ; Ha llegado a zona de AMADEUS ???
1084  8ABC
1085  8ABC              ;7 ld a,(Coordenada_y)
1086  8ABC              ;	cp $14
1087  8ABC              ;	jr c,1F
1088  8ABC
1089  8ABC              ; ---------
1090  8ABC
1091  8ABC              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1092  8ABC              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1093  8ABC
1094  8ABC              ;	di
1095  8ABC              ;	call Genera_coordenadas_X
1096  8ABC              ;	call Compara_coordenadas_X
1097  8ABC              ;	ei
1098  8ABC
1099  8ABC              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1100  8ABC
1101  8ABC              ; ---------
1102  8ABC
1103  8ABC              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1104  8ABC              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1105  8ABC              ;	call Limpia_Variables_de_borrado
1106  8ABC
1107  8ABC              ;3 ret
1108  8ABC
1109  8ABC              ; --------------------------------------------------------------------------------------------------------------
1110  8ABC              ;
1111  8ABC              ;	29/1/23
1112  8ABC
1113  8ABC              ;Mov_Amadeus
1114  8ABC
1115  8ABC              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1116  8ABC
1117  8ABC              ;	call Mov_right
1118  8ABC
1119  8ABC              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1120  8ABC              ;	bit 4,a
1121  8ABC              ;	ret z
1122  8ABC
1123  8ABC              ; ---------
1124  8ABC
1125  8ABC              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1126  8ABC              ;	call Repone_datos_de_borrado_Amadeus
1127  8ABC              ;	call Limpia_Variables_de_borrado
1128  8ABC
1129  8ABC              ;	ret
1130  8ABC
1131  8ABC              ; --------------------------------------------------------------------------------------------------------------
1132  8ABC              ;
1133  8ABC              ;	17/3/24
1134  8ABC
1135  8ABC              Change
1136  8ABC
1137  8ABC 3A D5 89     	ld a,(Switch)
1138  8ABF EE 01        	xor 1
1139  8AC1 32 D5 89     	ld (Switch),a
1140  8AC4
1141  8AC4 2A CD 89     	ld hl,(Album_de_pintado)
1142  8AC7 ED 5B CF 89  	ld de,(Album_de_borrado)
1143  8ACB EB           	ex de,hl
1144  8ACC 22 CD 89     	ld (Album_de_pintado),hl
1145  8ACF 22 D8 89     	ld (Scanlines_album_SP),hl
1146  8AD2
1147  8AD2 ED 53 CF 89  	ld (Album_de_borrado),de
1148  8AD6
1149  8AD6 C9           	ret
1150  8AD7
1151  8AD7              ; ------------------------------------
1152  8AD7              ;
1153  8AD7              ; 18/03/24
1154  8AD7
1155  8AD7              Borra_diferencia
1156  8AD7
1157  8AD7 ED 4B D8 89  	ld bc,(Scanlines_album_SP)
1158  8ADB
1159  8ADB 3A D5 89     	ld a,(Switch)
1160  8ADE A7           	and a
1161  8ADF 28 08        	jr z,2F
1162  8AE1
1163  8AE1 2A D3 89     	ld hl,(Techo_Scanlines_album_2)
1164  8AE4 11 D3 89     	ld de,Techo_Scanlines_album_2
1165  8AE7 18 06        	jr 3F
1166  8AE9
1167  8AE9 2A D1 89     2 ld hl,(Techo_Scanlines_album)
1168  8AEC 11 D1 89     	ld de,Techo_Scanlines_album
1169  8AEF
1170  8AEF              ; Diferencia.
1171  8AEF
1172  8AEF ED 42        3 sbc hl,bc
1173  8AF1
1174  8AF1 C8           	ret z
1175  8AF2 D8           	ret c
1176  8AF3
1177  8AF3              ; Nuevo techo, (más bajo que el anterior).
1178  8AF3              ; Fijamos nuevo techo y borramos bytes sobrantes.
1179  8AF3
1180  8AF3 EB           	ex de,hl
1181  8AF4
1182  8AF4 71           	ld (hl),c
1183  8AF5 2C           	inc l
1184  8AF6 70           	ld (hl),b
1185  8AF7
1186  8AF7 AF           	xor a
1187  8AF8 43           	ld b,e
1188  8AF9
1189  8AF9 2A D8 89     	ld hl,(Scanlines_album_SP)
1190  8AFC
1191  8AFC 77           1 ld (hl),a
1192  8AFD 2C           	inc l
1193  8AFE 10 FC        	djnz 1B
1194  8B00
1195  8B00              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1196  8B00
1197  8B00 21 DE 89     	ld hl,Ctrl_3
1198  8B03 CB DE        	set 3,(hl)
1199  8B05
1200  8B05 C9           	ret
1201  8B06
1202  8B06              ; --------------------------------------------------------------------------------------------------------------
1203  8B06              ;
1204  8B06              ;	26/3/24
1205  8B06
1206  8B06              Recauda_informacion_de_entidad_en_curso
1207  8B06
1208  8B06              ; Almacena la Coordenada Y de la entidad en curso.
1209  8B06
1210  8B06              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1211  8B06
1212  8B06 3A 82 89     	ld a,(Coordenada_y)
1213  8B09 2A DA 89     	ld hl,(India_SP)
1214  8B0C 77           	ld (hl),a
1215  8B0D 2C           	inc l
1216  8B0E
1217  8B0E              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1218  8B0E
1219  8B0E ED 5B D8 89  	ld de,(Scanlines_album_SP)
1220  8B12
1221  8B12 73           	ld (hl),e
1222  8B13 2C           	inc l
1223  8B14 72           	ld (hl),d
1224  8B15 2C           	inc l
1225  8B16
1226  8B16 22 DA 89     	ld (India_SP),hl
1227  8B19
1228  8B19 C9           	ret
1229  8B1A
1230  8B1A              ; --------------------------------------------------------------------------------------------------------------
1231  8B1A              ;
1232  8B1A              ;	27/03/24
1233  8B1A              ;
1234  8B1A
1235  8B1A              Inicializa_India_y_limpia_Tabla_de_impresion
1236  8B1A
1237  8B1A 2A DA 89     	ld hl,(India_SP)
1238  8B1D 01 73 86     	ld bc,Tabla_de_pintado+23							; Bytes de (Tabla_de_pintado)-1.
1239  8B20
1240  8B20 79           	ld a,c
1241  8B21 95           	sub l
1242  8B22 28 06        	jr z,2F
1243  8B24 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1244  8B25              ;														; _ y pasamos a inicializar (India_SP).
1245  8B25 AF           	xor a
1246  8B26
1247  8B26 77           1 ld (hl),a
1248  8B27 2C           	inc l
1249  8B28 10 FC        	djnz 1B												; Limpia Tabla.
1250  8B2A
1251  8B2A 21 5C 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1252  8B2D 22 DA 89     	ld (India_SP),hl
1253  8B30
1254  8B30 C9           	ret
1255  8B31
1256  8B31              ; --------------------------------------------------------------------------------------------------------------
1257  8B31              ;
1258  8B31              ;	31/3/24
1259  8B31
1260  8B31              Ordena_tabla_de_impresion
1261  8B31
1262  8B31              ; 5794 T/states.
1263  8B31              ; 6278 T/states.
1264  8B31              ; 5310 T/states.
1265  8B31
1266  8B31              ; Inicializamos punteros (India_SP) e (India_2_SP).
1267  8B31              ; Inicializamos contador de comparaciones, [C].
1268  8B31              ; Cargamos los registros A y B para efectuar comparación.
1269  8B31
1270  8B31 DD 2E 00     	ld ixl,0
1271  8B34
1272  8B34 3A C1 89     	ld a,(Entidades_en_curso)
1273  8B37 FE 04        	cp 4 	;	4
1274  8B39 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1275  8B3A
1276  8B3A 3D           	dec a
1277  8B3B 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1278  8B3C 51           	ld d,c 										; Copia de respaldo.
1279  8B3D
1280  8B3D 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1281  8B3E
1282  8B3E 21 5F 86     	ld hl,Tabla_de_pintado+3
1283  8B41 46           	ld b,(hl)
1284  8B42 22 DC 89     	ld (India_2_SP),hl
1285  8B45
1286  8B45 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1287  8B46 DC 6E 8B     	call c, Avanza_India_2_SP
1288  8B49 CC 6E 8B     	call z, Avanza_India_2_SP
1289  8B4C
1290  8B4C DD 2D        	dec ixl
1291  8B4E 28 18        	jr z,2F
1292  8B50
1293  8B50
1294  8B50              ; --------------------------------------------------------------------------------------------------------------
1295  8B50              ;
1296  8B50              ;	7/4/24
1297  8B50
1298  8B50              Trueque
1299  8B50
1300  8B50              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1301  8B50              ;  			A contiene en nº de fila de (India_SP).
1302  8B50              ;			HL contiene (India_2_SP).
1303  8B50
1304  8B50 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1305  8B51 E5           	push hl										; Preservo (India_2_SP).
1306  8B52
1307  8B52 ED 5B DA 89  	ld de,(India_SP)
1308  8B56 EB           	ex de,hl
1309  8B57 70           	ld (hl),b
1310  8B58 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1311  8B59
1312  8B59 CD 98 8B     	call Intercambia_1_byte
1313  8B5C CD 98 8B     	call Intercambia_1_byte
1314  8B5F
1315  8B5F
1316  8B5F              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1317  8B5F              ; Recuperamos (India_2_SP) en HL.
1318  8B5F
1319  8B5F 2A DA 89     	ld hl,(India_SP)
1320  8B62 7E           	ld a,(hl)
1321  8B63
1322  8B63 E1           	pop hl
1323  8B64 D1           	pop de
1324  8B65
1325  8B65              ; --------------------------------------------------------------------------------------------------------------
1326  8B65
1327  8B65 CD 6E 8B     	call Avanza_India_2_SP
1328  8B68
1329  8B68 14           2 inc d
1330  8B69 15           	dec d
1331  8B6A C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1332  8B6B
1333  8B6B              ;	ld ixl,0
1334  8B6B 18 D8        	jr 1B
1335  8B6D
1336  8B6D C9           	ret
1337  8B6E
1338  8B6E              ; ----- ----- ----- ----- -----
1339  8B6E
1340  8B6E              Avanza_India_2_SP
1341  8B6E
1342  8B6E DD 2C        	inc ixl
1343  8B70
1344  8B70 2C           	inc l
1345  8B71 2C           	inc l
1346  8B72 2C           	inc l
1347  8B73
1348  8B73 22 DC 89     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1349  8B76
1350  8B76 46           	ld b,(hl)
1351  8B77
1352  8B77 0D           	dec c
1353  8B78 28 01        	jr z,Avanza_punteros_indios
1354  8B7A C9           	ret
1355  8B7B
1356  8B7B              ; ----- ----- ----- ----- -----
1357  8B7B
1358  8B7B              Avanza_punteros_indios
1359  8B7B
1360  8B7B 15           	dec d
1361  8B7C
1362  8B7C 28 13        	jr z,Prepara_salida
1363  8B7E
1364  8B7E 4A           	ld c,d
1365  8B7F
1366  8B7F 2A DA 89     	ld hl,(India_SP)
1367  8B82 2C           	inc l
1368  8B83 2C           	inc l
1369  8B84 2C           	inc l
1370  8B85 22 DA 89     	ld (India_SP),hl
1371  8B88 7E           	ld a,(hl)
1372  8B89
1373  8B89 2C           	inc l
1374  8B8A 2C           	inc l
1375  8B8B 2C           	inc l
1376  8B8C 22 DC 89     	ld (India_2_SP),hl
1377  8B8F 46           	ld b,(hl)
1378  8B90
1379  8B90 C9           	ret
1380  8B91
1381  8B91              Prepara_salida
1382  8B91
1383  8B91 21 5C 86     	ld hl,Tabla_de_pintado
1384  8B94 22 DA 89     	ld (India_SP),hl
1385  8B97 C9           	ret
1386  8B98
1387  8B98
1388  8B98 2C           Intercambia_1_byte inc l
1389  8B99 1C           	inc e
1390  8B9A 46           	ld b,(hl)
1391  8B9B 1A           	ld a,(de)
1392  8B9C EB           	ex de,hl
1393  8B9D 70           	ld (hl),b
1394  8B9E 12           	ld (de),a									; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1395  8B9F C9           	ret
1396  8BA0
1397  8BA0              ; -----------------------------------------------------------------------------------
1398  8BA0              ;
1399  8BA0              ;	20/01/24
1400  8BA0              ;
1401  8BA0              ;
1402  8BA0
1403  8BA0              Construye_movimientos_masticados_entidad
1404  8BA0
1405  8BA0 2A 93 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1406  8BA3 E5           	push hl
1407  8BA4 CD E7 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1408  8BA7              ;															; _ el (Contador_de_mov_masticados).
1409  8BA7 CD 74 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1410  8BAA              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1411  8BAA CD 16 95     	call Recompone_posicion_inicio
1412  8BAD
1413  8BAD CD 3C 92     1 call Draw
1414  8BB0 CD CC 8B     	call Guarda_movimiento_masticado
1415  8BB3
1416  8BB3 CD 90 98     	call Movimiento
1417  8BB6
1418  8BB6 3A DE 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1419  8BB9 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1420  8BBB 28 F0        	jr z,1B
1421  8BBD
1422  8BBD              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1423  8BBD              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1424  8BBD
1425  8BBD E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1426  8BBE 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1427  8BC1
1428  8BC1              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1429  8BC1
1430  8BC1 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
1431  8BC4
1432  8BC4              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1433  8BC4              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1434  8BC4
1435  8BC4 ED 4B 95 89  	ld bc,(Contador_de_mov_masticados)
1436  8BC8
1437  8BC8 71           	ld (hl),c
1438  8BC9 23           	inc hl
1439  8BCA 70           	ld (hl),b
1440  8BCB
1441  8BCB C9           	ret
1442  8BCC
1443  8BCC              ; -----------------------------------------------------------------------------------
1444  8BCC              ;
1445  8BCC              ;	28/12/23
1446  8BCC              ;
1447  8BCC              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1448  8BCC              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1449  8BCC
1450  8BCC              Guarda_movimiento_masticado
1451  8BCC
1452  8BCC ED 73 C7 89  	ld (Stack),sp
1453  8BD0 ED 7B 93 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1454  8BD4
1455  8BD4              ;	push hl
1456  8BD4 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1457  8BD6 FD E5            push iy 												; Pushea Puntero_objeto.
1458  8BD8
1459  8BD8 ED 7B C7 89      ld sp,(Stack)
1460  8BDC
1461  8BDC 2A 95 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1462  8BDF 23           	inc hl
1463  8BE0 22 95 89     	ld (Contador_de_mov_masticados),hl
1464  8BE3
1465  8BE3 CD E7 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1466  8BE6              ;															; _ el (Contador_de_mov_masticados).
1467  8BE6 C9               ret
1468  8BE7
1469  8BE7              ; --------------------------------------------------------------------------------------------------------------
1470  8BE7              ;
1471  8BE7              ;	12/1/24
1472  8BE7              ;
1473  8BE7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1474  8BE7
1475  8BE7              Actualiza_Puntero_de_almacen_de_mov_masticados
1476  8BE7
1477  8BE7 2A 93 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1478  8BEA 01 04 00     	ld bc,4
1479  8BED A7           	and a
1480  8BEE ED 4A        	adc hl,bc
1481  8BF0 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1482  8BF3 C9           	ret
1483  8BF4
1484  8BF4              ; --------------------------------------------------------------------------------------------------------------
1485  8BF4              ;
1486  8BF4              ;	24/03/24
1487  8BF4              ;
1488  8BF4              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1489  8BF4              ;
1490  8BF4              ;	IX contiene el puntero de impresión.
1491  8BF4              ;	DE contiene (Puntero_objeto).
1492  8BF4
1493  8BF4
1494  8BF4 ED 73 C7 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1495  8BF8 ED 7B 93 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1496  8BFC
1497  8BFC D1           	pop de 															; DE contiene Puntero_objeto
1498  8BFD DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1499  8BFF
1500  8BFF ED 73 93 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1501  8C03 ED 7B C7 89  	ld sp,(Stack)
1502  8C07
1503  8C07 7B           	ld a,e
1504  8C08 82           	add d															; Comprueba si ya no hay datos en el almacén.
1505  8C09
1506  8C09 CC 46 AB     	call z,Reinicia_entidad_maliciosa
1507  8C0C
1508  8C0C C9           	ret
1509  8C0D
1510  8C0D              ; --------------------------------------------------------------------------------------------------------------
1511  8C0D              ;
1512  8C0D              ;	28/12/23
1513  8C0D              ;
1514  8C0D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1515  8C0D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1516  8C0D
1517  8C0D              Guarda_foto_entidad_a_pintar
1518  8C0D
1519  8C0D 3A 97 89     	ld a,(Ctrl_0)
1520  8C10 CB 77        	bit 6,a
1521  8C12 28 04        	jr z,5F
1522  8C14
1523  8C14              ;	Guarda la foto de Amadeus.
1524  8C14
1525  8C14              ;	call Draw
1526  8C14              ;	call Guarda_movimiento_masticado	;! Provisional
1527  8C14 CD C6 AC     	call Genera_datos_de_impresion
1528  8C17 C9           	ret
1529  8C18
1530  8C18              ; ENTIDADES!
1531  8C18              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1532  8C18
1533  8C18 3A DE 89     5 ld a,(Ctrl_3)
1534  8C1B CB 5F        	bit 3,a
1535  8C1D 28 01        	jr z,1F
1536  8C1F
1537  8C1F              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1538  8C1F
1539  8C1F              4
1540  8C1F              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1541  8C1F C9           	ret
1542  8C20
1543  8C20              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1544  8C20
1545  8C20 3A DE 89     1 ld a,(Ctrl_3)
1546  8C23 CB 57        	bit 2,a
1547  8C25 20 10        	jr nz,6F
1548  8C27
1549  8C27              ; Entidad guía o fantasma ???
1550  8C27
1551  8C27 3A 9C 89     	ld a,(Ctrl_2)
1552  8C2A CB 6F        	bit 5,a
1553  8C2C 20 10        	jr nz,3F
1554  8C2E
1555  8C2E              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1556  8C2E
1557  8C2E 18 EF        	jr 4B
1558  8C30
1559  8C30              ; ENTIDAD_GUÍA:
1560  8C30              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1561  8C30              ; _guardando "movimientos_masticados".
1562  8C30
1563  8C30 3A DE 89     2 ld a,(Ctrl_3)
1564  8C33 CB 57        	bit 2,a
1565  8C35 28 07        	jr z,3F
1566  8C37
1567  8C37              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1568  8C37              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1569  8C37
1570  8C37 CB 97        6 res 2,a
1571  8C39 CB DF        	set 3,a
1572  8C3B 32 DE 89     	ld (Ctrl_3),a
1573  8C3E
1574  8C3E
1575  8C3E              ;	Esto sólo lo ejecuta una entidad guía.
1576  8C3E
1577  8C3E CD 3C 92     3 	call Draw
1578  8C41 CD CC 8B     	call Guarda_movimiento_masticado
1579  8C44 CD C6 AC     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1580  8C47
1581  8C47              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1582  8C47              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1583  8C47
1584  8C47              ;	call Convierte_guia_en_fantasma
1585  8C47 C9           	ret
1586  8C48
1587  8C48              ; ---------------------------------------------------------------------------------------------------------------------
1588  8C48              ;
1589  8C48              ;	13/03/24
1590  8C48              ;
1591  8C48
1592  8C48              Inicia_albumes_de_lineas
1593  8C48
1594  8C48 21 00 80     	ld hl,Scanlines_album
1595  8C4B 22 CD 89     	ld (Album_de_pintado),hl
1596  8C4E 22 D8 89     	ld (Scanlines_album_SP),hl
1597  8C51
1598  8C51 21 00 90     	ld hl,Scanlines_album_2
1599  8C54 22 CF 89     	ld (Album_de_borrado),hl
1600  8C57
1601  8C57 C9           	ret
1602  8C58
1603  8C58
1604  8C58
1605  8C58              ; ---------------------------------------------------------------------------------------------------------------------
1606  8C58              ;
1607  8C58              ; 8/1/23
1608  8C58              ;
1609  8C58              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1610  8C58              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1611  8C58              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1612  8C58
1613  8C58              ; Destruye HL y DE !!!!!
1614  8C58
1615  8C58              Inicia_punteros_de_cajas
1616  8C58
1617  8C58 21 F8 86     	ld hl,Indice_de_cajas_de_entidades
1618  8C5B CD 6E 8C         call Extrae_address
1619  8C5E 22 B9 89         ld (Puntero_store_caja),hl
1620  8C61 21 FA 86     	ld hl,Indice_de_cajas_de_entidades+2
1621  8C64 22 BD 89     	ld (Indice_restore_caja),hl
1622  8C67 CD 6E 8C     	call Extrae_address
1623  8C6A 22 BB 89     	ld (Puntero_restore_caja),hl
1624  8C6D C9               ret
1625  8C6E
1626  8C6E              ; *************************************************************************************************************************************************************
1627  8C6E              ;
1628  8C6E              ; 8/1/23
1629  8C6E              ;
1630  8C6E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1631  8C6E
1632  8C6E              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1633  8C6E              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1634  8C6E              ;	ret
1635  8C6E              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1636  8C6E              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1637  8C6E              ;	ret
1638  8C6E
1639  8C6E              ; -------------------------------------------------------------------------------------------------------------
1640  8C6E              ;
1641  8C6E              ; 21/9/23
1642  8C6E              ;
1643  8C6E
1644  8C6E              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1645  8C6E
1646  8C6E              ;;Limpia_album_Amadeus
1647  8C6E              ;
1648  8C6E              ;;	ld hl,Scanlines_album_Amadeus
1649  8C6E              ;;	ld a,(hl)
1650  8C6E              ;;	and a
1651  8C6E              ;;	ret z
1652  8C6E
1653  8C6E              ;;	ld hl,Scanlines_album_Amadeus;
1654  8C6E              ;;	ld de,Scanlines_album_Amadeus+1
1655  8C6E              ;;	ld bc,11
1656  8C6E              ;;	xor a
1657  8C6E              ;;	ld (hl),a
1658  8C6E              ;;	ldir
1659  8C6E
1660  8C6E              ;;	ld hl,Scanlines_album_Amadeus
1661  8C6E              ;;	ld (End_Snapshot_Amadeus),hl
1662  8C6E
1663  8C6E              ;;	ret
1664  8C6E
1665  8C6E              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1666  8C6E              ;	ld de,Variables_de_borrado+1
1667  8C6E              ;	ld bc,5
1668  8C6E              ;	xor a
1669  8C6E              ;	ld (hl),a
1670  8C6E              ;	ldir
1671  8C6E              ;	ret
1672  8C6E
1673  8C6E              ; *************************************************************************************************************************************************************
1674  8C6E              ;
1675  8C6E              ; 20/10/22
1676  8C6E              ;
1677  8C6E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1678  8C6E              ;
1679  8C6E              ; Destruye el puntero y DE !!!!!
1680  8C6E
1681  8C6E 5E           Extrae_address ld e,(hl)
1682  8C6F 23           	inc hl
1683  8C70 56           	ld d,(hl)
1684  8C71 2B           	dec hl
1685  8C72 EB           	ex de,hl
1686  8C73 C9           	ret
1687  8C74
1688  8C74              ; *************************************************************************************************************************************************************
1689  8C74              ;
1690  8C74              ;	20/1/24
1691  8C74              ;
1692  8C74              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1693  8C74              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1694  8C74              ;
1695  8C74              ;   Destruye HL y BC !!!!!,
1696  8C74              ;
1697  8C74              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1698  8C74              ;					"0" ..... Izquierda.
1699  8C74
1700  8C74              Inicia_Puntero_objeto
1701  8C74
1702  8C74 3A 8F 89     	ld a,(Cuad_objeto)
1703  8C77 E6 01        	and 1
1704  8C79 F5           	push af
1705  8C7A CC 96 8C     	call z,Inicia_puntero_objeto_izq
1706  8C7D F1           	pop af
1707  8C7E C8           	ret z
1708  8C7F CD 83 8C     	call Inicia_puntero_objeto_der
1709  8C82 C9           	ret
1710  8C83
1711  8C83              ; Arrancamos desde la parte izquierda de la pantalla.
1712  8C83              ; Iniciamos (Indice_Sprite_der).
1713  8C83
1714  8C83 2A 85 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1715  8C86 22 89 89     	ld (Puntero_DESPLZ_der),hl
1716  8C89 CD 6E 8C     	call Extrae_address
1717  8C8C 22 7F 89     	ld (Puntero_objeto),hl
1718  8C8F
1719  8C8F 2A 87 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1720  8C92 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
1721  8C95 C9           	ret
1722  8C96
1723  8C96              ; Arrancamos desde la parte derecha de la pantalla.
1724  8C96              ; Iniciamos (Indice_Sprite_izq).
1725  8C96
1726  8C96 2A 87 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1727  8C99 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
1728  8C9C CD 6E 8C     	call Extrae_address
1729  8C9F 22 7F 89     	ld (Puntero_objeto),hl
1730  8CA2
1731  8CA2 2A 85 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1732  8CA5 22 89 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1733  8CA8 C9           	ret
1734  8CA9
1735  8CA9              ; **************************************************************************************************
1736  8CA9              ;
1737  8CA9              ;	31/01/24
1738  8CA9              ;
1739  8CA9              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1740  8CA9
1741  8CA9              Restore_entidad
1742  8CA9
1743  8CA9 2A B9 89     	ld hl,(Puntero_store_caja)
1744  8CAC 11 7A 89     	ld de,Bandeja_DRAW
1745  8CAF 7E           	ld a,(hl)
1746  8CB0 12           	ld (de),a
1747  8CB1 23           	inc hl 											; (Tipo).
1748  8CB2
1749  8CB2 11 81 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1750  8CB5 01 02 00     	ld bc,2
1751  8CB8 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1752  8CBA
1753  8CBA 13           	inc de
1754  8CBB 7E           	ld a,(hl)
1755  8CBC 12           	ld (de),a 										; Transferimos (Attr).
1756  8CBD 23           	inc hl
1757  8CBE
1758  8CBE 11 90 89     	ld de,Impacto
1759  8CC1
1760  8CC1 7E           	ld a,(hl)
1761  8CC2 12           	ld (de),a 										; Transferimos (Impacto).
1762  8CC3 23           	inc hl
1763  8CC4
1764  8CC4 13           	inc de
1765  8CC5 01 07 00     	ld bc,7
1766  8CC8 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1767  8CCA              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1768  8CCA 11 9C 89     	ld de,Ctrl_2
1769  8CCD
1770  8CCD 7E           	ld a,(hl)
1771  8CCE 12           	ld (de),a 										; Transferimos (Ctrl_2).
1772  8CCF
1773  8CCF C9           	ret
1774  8CD0
1775  8CD0              ; **************************************************************************************************
1776  8CD0              ;
1777  8CD0              ;	08/05/23
1778  8CD0              ;
1779  8CD0              ;	Incrementamos los dos punteros de entidades. (+1).
1780  8CD0
1781  8CD0              Incrementa_punteros_de_cajas
1782  8CD0
1783  8CD0 2A BB 89     	ld hl,(Puntero_restore_caja)
1784  8CD3 22 B9 89     	ld (Puntero_store_caja),hl
1785  8CD6 2A BD 89     	ld hl,(Indice_restore_caja)
1786  8CD9 23           	inc hl
1787  8CDA 23           	inc hl
1788  8CDB 22 BD 89     	ld (Indice_restore_caja),hl
1789  8CDE CD 6E 8C         call Extrae_address
1790  8CE1 22 BB 89         ld (Puntero_restore_caja),hl
1791  8CE4 C9               ret
1792  8CE5
1793  8CE5              ; **************************************************************************************************
1794  8CE5              ;
1795  8CE5              ;	21/12/23
1796  8CE5              ;
1797  8CE5              ;	Restore_Amadeus
1798  8CE5              ;
1799  8CE5              ;	Cargamos en DRAW los parámetros de Amadeus.
1800  8CE5              ;
1801  8CE5
1802  8CE5              ;Restore_Amadeus	push hl
1803  8CE5              ;	push de
1804  8CE5              ; 	push bc
1805  8CE5              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1806  8CE5              ;	ld de,Bandeja_DRAW
1807  8CE5              ;	ld bc,42
1808  8CE5              ;	ldir
1809  8CE5              ;	pop bc
1810  8CE5              ;	pop de
1811  8CE5              ;	pop hl
1812  8CE5              ;	ret
1813  8CE5
1814  8CE5              ; *************************************************************************************************************************************************************
1815  8CE5              ;
1816  8CE5              ;	21/12/23
1817  8CE5              ;
1818  8CE5              ;	Store_Amadeus
1819  8CE5              ;
1820  8CE5              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1821  8CE5              ;
1822  8CE5              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1823  8CE5              ;
1824  8CE5              ;	DESTRUYE: HL y BC y DE.
1825  8CE5
1826  8CE5              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1827  8CE5              ;	ld bc,42
1828  8CE5              ;	ldir
1829  8CE5              ;	ret
1830  8CE5
1831  8CE5              ; -----------------------------------------------------------
1832  8CE5              ;
1833  8CE5              ;	21/12/23
1834  8CE5              ;
1835  8CE5              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1836  8CE5              ;
1837  8CE5              ;	Destruye: HL,BC,DE,A
1838  8CE5
1839  8CE5              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1840  8CE5              ;	ld bc,41
1841  8CE5              ;	xor a
1842  8CE5              ;	ld (hl),a;
1843  8CE5              ;	ld de,Bandeja_DRAW+1
1844  8CE5              ;	ldir
1845  8CE5              ;	ret
1846  8CE5
1847  8CE5              ; -----------------------------------------------------------
1848  8CE5
1849  8CE5              ; Teclado.
1850  8CE5
1851  8CE5 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1852  8CE7 DB FE        	in a,($fe)
1853  8CE9 E6 01        	and $01
1854  8CEB 28 02        	jr z,1f
1855  8CED 18 F6        	jr Pulsa_ENTER
1856  8CEF C9           1 ret
1857  8CF0
1858  8CF0              ; **************************************************************************************************
1859  8CF0              ;
1860  8CF0              ; Temporización.
1861  8CF0
1862  8CF0              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1863  8CF0              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1864  8CF0              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1865  8CF0              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1866  8CF0
1867  8CF0              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1868  8CF0              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1869  8CF0              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1870  8CF0
1871  8CF0              ; A partir de $4f61 no hace falta DELAY.
1872  8CF0
1873  8CF0              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1874  8CF0
1875  8CF0 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1876  8CF3 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1877  8CF4 78           	LD A,B
1878  8CF5 A7           	AND A
1879  8CF6 20 FB        	JR NZ,wait
1880  8CF8 C9           	RET
1881  8CF9
1882  8CF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1883  8CF9              ;
1884  8CF9              ;	5/3/23
1885  8CF9              ;
1886  8CF9              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1887  8CF9
1888  8CF9              ;Movimiento_Amadeus
1889  8CF9
1890  8CF9              ; Disparo.
1891  8CF9
1892  8CF9              ;	ld a,(Disparo_Amadeus)
1893  8CF9              ;	and a
1894  8CF9              ;	jr nz,1F
1895  8CF9              ;	jr 2F
1896  8CF9
1897  8CF9              ;1 ld a,$f7													; "5" para disparar.
1898  8CF9              ;	in a,($fe)
1899  8CF9              ;	and $10
1900  8CF9
1901  8CF9              ;	push af
1902  8CF9              ;	call z,Genera_disparo
1903  8CF9              ;	pop af
1904  8CF9              ;	jr nz,2F
1905  8CF9
1906  8CF9              ;	ld a,(Disparo_Amadeus)
1907  8CF9              ;	xor 1
1908  8CF9              ;	ld (Disparo_Amadeus),a
1909  8CF9              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1910  8CF9              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1911  8CF9              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1912  8CF9              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1913  8CF9
1914  8CF9              ;	ld a,$f7
1915  8CF9              ;	in a,($fe)
1916  8CF9              ;	and $01
1917  8CF9              ;	ret z
1918  8CF9
1919  8CF9              ;	ld a,$f7
1920  8CF9              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1921  8CF9              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1922  8CF9              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1923  8CF9              ;	ret
1924  8CF9
1925  8CF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1926  8CF9              ;
1927  8CF9              ;	Rutina provisional para que los malotes cagen balas.
1928  8CF9
1929  8CF9              ;Detecta_disparo_entidad
1930  8CF9
1931  8CF9              ;	ld a,(Disparo_entidad)
1932  8CF9              ;	and a
1933  8CF9              ;	ret z
1934  8CF9
1935  8CF9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1936  8CF9
1937  8CF9              ;	ld a,$7f				; Detecta SPACE.
1938  8CF9              ;	in a,($fe)
1939  8CF9              ;	and 1
1940  8CF9              ;	ret nz
1941  8CF9
1942  8CF9              ;	call Genera_disparo
1943  8CF9              ;	ret
1944  8CF9
1945  8CF9              ; ----------------------------------------------------------------------
1946  8CF9              ;
1947  8CF9              ;	8/9/23
1948  8CF9
1949  8CF9              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1950  8CF9              ; 	dec hl
1951  8CF9              ;	ld a,(hl)
1952  8CF9              ;	and a
1953  8CF9              ;	ret z										; Salimos si es álbum está vacío.
1954  8CF9
1955  8CF9              ;	ld de,Variables_de_borrado+5
1956  8CF9              ;	ld bc,6
1957  8CF9              ;	lddr
1958  8CF9              ;	ret
1959  8CF9
1960  8CF9              ; ----------------------------------------------------------------------
1961  8CF9              ;
1962  8CF9              ;	9/9/23
1963  8CF9
1964  8CF9              ;Repone_datos_de_borrado_Amadeus
1965  8CF9
1966  8CF9              ;	ld hl,Variables_de_borrado
1967  8CF9              ;	ld de,Scanlines_album_Amadeus
1968  8CF9              ;	ld bc,6
1969  8CF9              ;	ldir
1970  8CF9
1971  8CF9              ;	ex de,hl
1972  8CF9              ;	ld (End_Snapshot_Amadeus),hl
1973  8CF9
1974  8CF9              ;	ret
1975  8CF9
1976  8CF9              ; ----------------------------------------------------------------------
1977  8CF9              ;
1978  8CF9              ;	27/10/23
1979  8CF9              ;
1980  8CF9
1981  8CF9              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1982  8CF9              ;	_ Scanlines_album correspondiente.
1983  8CF9
1984  8CF9              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1985  8CF9              ;	_ durante el proceso de escritura.
1986  8CF9
1987  8CF9              ;Repone_datos_de_borrado
1988  8CF9
1989  8CF9              ;	ld de,(Scanlines_album_SP)
1990  8CF9              ;	ld hl,Variables_de_borrado
1991  8CF9              ;	ld bc,6
1992  8CF9              ;	ldir
1993  8CF9
1994  8CF9              ;	ex de,hl
1995  8CF9              ;	ld (Scanlines_album_SP),hl
1996  8CF9
1997  8CF9              ;	ret
1998  8CF9
1999  8CF9              ; --------------------------------------------------------------------------------------
2000  8CF9
2001  8CF9              ;Pinta_Amadeus
2002  8CF9
2003  8CF9              ;   	call Calcula_malotes_Amadeus
2004  8CF9              ;	call Extrae_foto_Amadeus
2005  8CF9              ;	call Limpia_album_Amadeus
2006  8CF9
2007  8CF9              ;	ret
2008  8CF9
2009  8CF9              ; -----------------------------------------------------------------------------------
2010  8CF9              ;
2011  8CF9              ;	10/12/23
2012  8CF9              ;
2013  8CF9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
2014  8CF9
2015  8CF9              Actualiza_relojes
2016  8CF9
2017  8CF9 3A DE 89     	ld a,(Ctrl_3)
2018  8CFC CB 47        	bit 0,a
2019  8CFE C8           	ret z 						;	Salimos si no hemos pintado unidades.
2020  8CFF
2021  8CFF 21 E3 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
2022  8D02 34           	inc (hl)
2023  8D03
2024  8D03 34           	inc (hl)
2025  8D04 35           	dec (hl)
2026  8D05 C0           	ret nz
2027  8D06
2028  8D06 21 E4 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
2029  8D09 34           	inc (hl)
2030  8D0A C9           	ret
2031  8D0B
2032  8D0B              ; ---------------------------------------------------------------
2033  8D0B
2034  8D0B              	org $aa7f
2035  AA7F
2036  AA7F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AA7F              ;---------------------------------------------------------------------------------------------------------------
   2+ AA7F              ;
   3+ AA7F              ;   8/3/24
   4+ AA7F              ;
   5+ AA7F              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AA7F              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AA7F              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AA7F              ;	_ de la 1ª entidad del Nivel.
   9+ AA7F              ;
  10+ AA7F              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AA7F
  12+ AA7F              ;	MODIFICA: HL,DE y A.
  13+ AA7F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AA7F
  15+ AA7F              Inicializa_Nivel
  16+ AA7F
  17+ AA7F 2A E8 89     	ld hl,(Puntero_indice_NIVELES)
  18+ AA82 CD 6E 8C     	call Extrae_address
  19+ AA85 7E           	ld a,(hl)
  20+ AA86 32 BF 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AA89 23           	inc hl
  22+ AA8A CD 97 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AA8D 22 EA 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AA90 CD A0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AA93
  26+ AA93 CD B1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AA96 C9           	ret
  28+ AA97
  29+ AA97              ; ----------------------
  30+ AA97
  31+ AA97 11 9E 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AA9A 01 04 00     	ld bc,4
  33+ AA9D ED B0        	ldir
  34+ AA9F C9           	ret
  35+ AAA0
  36+ AAA0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAA1 CD D4 AB         call Calcula_salto_en_BC
  38+ AAA4 21 74 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAA7 A7               and a
  40+ AAA8 ED 4A            adc hl,bc
  41+ AAAA CD 6E 8C         call Extrae_address
  42+ AAAD 22 AA 89         ld (Puntero_indice_mov),hl
  43+ AAB0 C9               ret
  44+ AAB1
  45+ AAB1 3A 7A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAB4 CD D4 AB     	call Calcula_salto_en_BC
  47+ AAB7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AABA A7               and a
  49+ AABB ED 4A            adc hl,bc
  50+ AABD CD 6E 8C         call Extrae_address
  51+ AAC0 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAC3 C9           	ret
  53+ AAC4
  54+ AAC4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAC4              ;
  56+ AAC4              ;   5/1/24
  57+ AAC4              ;
  58+ AAC4              ;	Destruye A,BC,HL,DE
  59+ AAC4
  60+ AAC4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAC4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAC4
  63+ AAC4              Inicia_Entidades
  64+ AAC4
  65+ AAC4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAC4
  67+ AAC4 CD 58 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAC7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAC7 CD 38 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AACA
  71+ AACA 2A EA 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AACD
  73+ AACD 22 EA 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AAD0
  75+ AAD0 CD 82 AB     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AAD3
  77+ AAD3 2A EA 89     	ld hl,(Datos_de_nivel)
  78+ AAD6
  79+ AAD6              ; En este punto:
  80+ AAD6              ;
  81+ AAD6              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AAD6              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AAD6
  84+ AAD6 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AAD7
  86+ AAD7 7E           	ld a,(hl)
  87+ AAD8 CD 1F AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AADB
  89+ AADB CD E6 AB     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AADE
  91+ AADE              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AADE
  93+ AADE CD A4 AB     	call Busca_mov_masticados_segun_tipo
  94+ AAE1
  95+ AAE1 A7           	and a
  96+ AAE2 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AAE4
  98+ AAE4              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AAE4
 100+ AAE4              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AAE4              ;	_ de este tipo de entidad.
 102+ AAE4
 103+ AAE4 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 104+ AAE7 CD 01 9A     	call Transfiere_datos_de_contadores
 105+ AAEA
 106+ AAEA 18 06        	jr 4F
 107+ AAEC
 108+ AAEC CD A0 8B     3 call Construye_movimientos_masticados_entidad
 109+ AAEF
 110+ AAEF              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AAEF              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AAEF              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AAEF              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AAEF              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AAEF
 116+ AAEF CD 62 AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AAF2              ;																; _ Mov_masticados ya generados.
 118+ AAF2
 119+ AAF2 CD F4 8B     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AAF5
 121+ AAF5 DD E5        	push ix
 122+ AAF7 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AAF8
 124+ AAF8 D5           	push de
 125+ AAF9 CD 73 AC     	call Genera_coordenadas
 126+ AAFC CD 06 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ AAFF D1           	pop de
 128+ AB00
 129+ AB00 CD C6 AC     	call Genera_datos_de_impresion
 130+ AB03              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ AB03              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ AB03              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ AB03              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ AB03
 135+ AB03 CD 3E AB     	call Decrementa_Contador_de_mov_masticados
 136+ AB06
 137+ AB06              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ AB06
 139+ AB06 CD 0D AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 140+ AB09 CD 33 AB     	call Limpiamos_bandeja_DRAW
 141+ AB0C CD D0 8C     	call Incrementa_punteros_de_cajas
 142+ AB0F
 143+ AB0F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 144+ AB0F              ; _ entidad del Nivel.
 145+ AB0F
 146+ AB0F 3A DF 89     	ld a,(Ctrl_4)
 147+ AB12 E6 F0        	and $f0
 148+ AB14 32 DF 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 149+ AB17
 150+ AB17              ; Siguiente entidad del Nivel.
 151+ AB17
 152+ AB17 2A EA 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 153+ AB1A 23           	inc hl 														; _ entidad del Nivel.
 154+ AB1B
 155+ AB1B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 156+ AB1C
 157+ AB1C 10 AF        	djnz 2B
 158+ AB1E
 159+ AB1E C9           	ret
 160+ AB1F
 161+ AB1F              ; ---------------------------------------------------------------------
 162+ AB1F              ;
 163+ AB1F              ;	10/02/24
 164+ AB1F              ;
 165+ AB1F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 166+ AB1F              ;
 167+ AB1F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 168+ AB1F
 169+ AB1F              Definicion_segun_tipo
 170+ AB1F
 171+ AB1F CD D4 AB     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 172+ AB22 21 9B 87     	ld hl,Indice_de_definiciones_de_entidades
 173+ AB25 CD DC AB     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 174+ AB28 C9           	ret
 175+ AB29
 176+ AB29              ; ---------------------------------------------------------------------
 177+ AB29              ;
 178+ AB29              ;	27/03/24
 179+ AB29
 180+ AB29
 181+ AB29              Store_Restore_cajas
 182+ AB29
 183+ AB29 CD 0D AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 184+ AB2C CD 33 AB     	call Limpiamos_bandeja_DRAW
 185+ AB2F
 186+ AB2F              ; 	Entidad_sospechosa. 20/4/23
 187+ AB2F
 188+ AB2F              ;	ld a,(Impacto)
 189+ AB2F              ;	and a
 190+ AB2F              ;	jr z,1F
 191+ AB2F
 192+ AB2F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 193+ AB2F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 194+ AB2F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 195+ AB2F              ;	adc hl,bc 											; _ "0" más adelante.
 196+ AB2F              ;	ld (Entidad_sospechosa_de_colision),hl
 197+ AB2F
 198+ AB2F
 199+ AB2F              ;1 ld hl,(Puntero_restore_caja)
 200+ AB2F              ;	ld a,(hl)
 201+ AB2F              ;	and a
 202+ AB2F              ;	push af
 203+ AB2F              ;	jr z,2F
 204+ AB2F
 205+ AB2F              ;	di
 206+ AB2F              ;	ld de,Bandeja_DRAW
 207+ AB2F              ;	ld bc,42
 208+ AB2F              ;	ldir
 209+ AB2F              ;	ei
 210+ AB2F
 211+ AB2F CD D0 8C     2 call Incrementa_punteros_de_cajas
 212+ AB32 C9           	ret
 213+ AB33
 214+ AB33              ; ---------------------------------------------------------------------
 215+ AB33              ;
 216+ AB33              ;	26/03/24
 217+ AB33
 218+ AB33 21 7A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 219+ AB36 06 24        	ld b,36
 220+ AB38 AF           	xor a
 221+ AB39 77           1 ld (hl),a
 222+ AB3A 23           	inc hl
 223+ AB3B 10 FC        	djnz 1B
 224+ AB3D C9           	ret
 225+ AB3E
 226+ AB3E              ; ---------------------------------------------------------------------
 227+ AB3E              ;
 228+ AB3E              ;	24/03/24
 229+ AB3E
 230+ AB3E 2A 95 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 231+ AB41 2B           	dec hl
 232+ AB42 22 95 89     	ld (Contador_de_mov_masticados),hl
 233+ AB45 C9           	ret
 234+ AB46
 235+ AB46              ; ---------------------------------------------------------------------
 236+ AB46              ;
 237+ AB46              ;	10/2/24
 238+ AB46
 239+ AB46              Reinicia_entidad_maliciosa
 240+ AB46
 241+ AB46              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 242+ AB46
 243+ AB46 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 244+ AB49 CD 01 9A     	call Transfiere_datos_de_contadores
 245+ AB4C
 246+ AB4C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 247+ AB4C
 248+ AB4C 3A 7A 89     	ld a,(Tipo)
 249+ AB4F CD 1F AB     	call Definicion_segun_tipo
 250+ AB52
 251+ AB52 E5           	push hl
 252+ AB53 DD E1        	pop ix
 253+ AB55
 254+ AB55 DD 6E 0B     	ld l,(ix+11)
 255+ AB58 DD 66 0C     	ld h,(ix+12)
 256+ AB5B
 257+ AB5B 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 258+ AB5E
 259+ AB5E CD F4 8B     	call Cargamos_registros_con_mov_masticado
 260+ AB61
 261+ AB61 C9           	ret
 262+ AB62
 263+ AB62              ; ---------------------------------------------------------------------
 264+ AB62              ;
 265+ AB62              ;	22/01/24
 266+ AB62
 267+ AB62 21 DF 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 268+ AB65 CB 46        	bit 0,(hl)
 269+ AB67 20 0D        	jr nz,1F
 270+ AB69 CB 4E        	bit 1,(hl)
 271+ AB6B 20 0C        	jr nz,2F
 272+ AB6D CB 56        	bit 2,(hl)
 273+ AB6F 20 0B        	jr nz,3F
 274+ AB71 CB 5E        	bit 3,(hl)
 275+ AB73 20 0A        	jr nz,4F
 276+ AB75 C9           	ret
 277+ AB76
 278+ AB76 CB E6        1 set 4,(hl)
 279+ AB78 C9           	ret
 280+ AB79 CB EE        2 set 5,(hl)
 281+ AB7B C9           	ret
 282+ AB7C CB F6        3 set 6,(hl)
 283+ AB7E C9           	ret
 284+ AB7F CB FE        4 set 7,(hl)
 285+ AB81 C9           	ret
 286+ AB82
 287+ AB82              ; ---------------------------------------------------------------------
 288+ AB82              ;
 289+ AB82              ;	23/01/24
 290+ AB82              ;
 291+ AB82              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 292+ AB82              ;
 293+ AB82              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 294+ AB82              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 295+ AB82              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 296+ AB82              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 297+ AB82
 298+ AB82              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 299+ AB82
 300+ AB82 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 301+ AB83 3D           	dec a
 302+ AB84 20 06        	jr nz,1F
 303+ AB86
 304+ AB86              ; --- Tipo_1
 305+ AB86
 306+ AB86 21 DF 89     	ld hl,Ctrl_4
 307+ AB89 CB C6        	set 0,(hl)
 308+ AB8B C9           	ret
 309+ AB8C
 310+ AB8C 3D           1 dec a
 311+ AB8D 20 06        	jr nz,2F
 312+ AB8F
 313+ AB8F              ; --- Tipo_2
 314+ AB8F
 315+ AB8F 21 DF 89     	ld hl,Ctrl_4
 316+ AB92 CB CE        	set 1,(hl)
 317+ AB94 C9           	ret
 318+ AB95
 319+ AB95 3D           2 dec a
 320+ AB96 20 06        	jr nz,3F
 321+ AB98
 322+ AB98              ; --- Tipo_3
 323+ AB98
 324+ AB98 21 DF 89     	ld hl,Ctrl_4
 325+ AB9B CB D6        	set 2,(hl)
 326+ AB9D C9           	ret
 327+ AB9E
 328+ AB9E              ; --- Tipo_3
 329+ AB9E
 330+ AB9E 21 DF 89     3 ld hl,Ctrl_4
 331+ ABA1 CB D6        	set 2,(hl)
 332+ ABA3 C9           	ret
 333+ ABA4
 334+ ABA4              ; ---------------------------------------------------------------------
 335+ ABA4              ;
 336+ ABA4              ;	22/01/24
 337+ ABA4
 338+ ABA4 21 DF 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 339+ ABA7 CB 46        	bit 0,(hl)
 340+ ABA9 20 0E        	jr nz,1F
 341+ ABAB
 342+ ABAB CB 4E        	bit 1,(hl)
 343+ ABAD 20 10        	jr nz,2F
 344+ ABAF
 345+ ABAF CB 56        	bit 2,(hl)
 346+ ABB1 20 12        	jr nz,3F
 347+ ABB3
 348+ ABB3 CB 5E        	bit 3,(hl)
 349+ ABB5 20 14        	jr nz,4F
 350+ ABB7 18 19        	jr 6F
 351+ ABB9
 352+ ABB9              ; Entidad_de_Tipo_1.
 353+ ABB9
 354+ ABB9 CB 66        1 bit 4,(hl)
 355+ ABBB 28 15        	jr z,6F
 356+ ABBD 18 10        	jr 5F
 357+ ABBF
 358+ ABBF              ; Entidad_de_Tipo_2.
 359+ ABBF
 360+ ABBF CB 6E        2 bit 5,(hl)
 361+ ABC1 28 0F        	jr z,6F
 362+ ABC3 18 0A        	jr 5F
 363+ ABC5
 364+ ABC5              ; Entidad_de_Tipo_3.
 365+ ABC5
 366+ ABC5 CB 76        3 bit 6,(hl)
 367+ ABC7 28 09        	jr z,6F
 368+ ABC9 18 04        	jr 5F
 369+ ABCB
 370+ ABCB              ; Entidad_de_Tipo_4.
 371+ ABCB
 372+ ABCB CB 7E        4 bit 7,(hl)
 373+ ABCD 28 03        	jr z,6F
 374+ ABCF
 375+ ABCF              ; Esta entidad TIENE MOV_MASTICADOS.
 376+ ABCF
 377+ ABCF AF           5 xor a
 378+ ABD0 3C           	inc a
 379+ ABD1 C9           	ret
 380+ ABD2
 381+ ABD2              ; Esta entidad NO TIENE MOV_MASTICADOS.
 382+ ABD2
 383+ ABD2 AF           6 xor a
 384+ ABD3 C9           	ret
 385+ ABD4
 386+ ABD4              ;	------------------------------------------------------------------------------------
 387+ ABD4              ;
 388+ ABD4              ;	12/01/24
 389+ ABD4              ;
 390+ ABD4              ;	INPUTS:	A contiene el (Tipo) de entidad.
 391+ ABD4              ;
 392+ ABD4              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 393+ ABD4              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 394+ ABD4
 395+ ABD4 CB 27        Calcula_salto_en_BC sla a
 396+ ABD6 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 397+ ABD8 4F           	ld c,a
 398+ ABD9 06 00        	ld b,0
 399+ ABDB C9           	ret
 400+ ABDC
 401+ ABDC              ; ------------------------------------------------------------------
 402+ ABDC              ;
 403+ ABDC              ;	19/1/24
 404+ ABDC              ;
 405+ ABDC              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 406+ ABDC              ;	Actualiza (Datos_de_entidad) con esa dirección.
 407+ ABDC
 408+ ABDC A7           Situa_en_datos_de_definicion and a
 409+ ABDD ED 4A        	adc hl,bc
 410+ ABDF CD 6E 8C     	call Extrae_address
 411+ ABE2 22 C5 89         ld (Datos_de_entidad),hl
 412+ ABE5 C9           	ret
 413+ ABE6
 414+ ABE6              ; ------------------------------------------------------------------
 415+ ABE6
 416+ ABE6              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 417+ ABE6              ; 	inc de
 418+ ABE6              ; 	inc de
 419+ ABE6              ; 	ex de,hl
 420+ ABE6              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 421+ ABE6              ; 	ret
 422+ ABE6
 423+ ABE6              ; ----------------------------------------------------------------------------------------------------------
 424+ ABE6              ;
 425+ ABE6              ;	31/1/24
 426+ ABE6              ;
 427+ ABE6              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 428+ ABE6              ;	_ de entidad.
 429+ ABE6              ;
 430+ ABE6              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 431+ ABE6              ;
 432+ ABE6              ;
 433+ ABE6              ;	MODIFICA: HL,DE y BC
 434+ ABE6
 435+ ABE6
 436+ ABE6              Definicion_de_entidad_a_bandeja_DRAW
 437+ ABE6
 438+ ABE6 11 7A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 439+ ABE9 01 03 00     	ld bc,3
 440+ ABEC ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 441+ ABEE              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 442+ ABEE 11 84 89     	ld de,Attr									; DE en (Attr).
 443+ ABF1 01 05 00     	ld bc,5
 444+ ABF4 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 445+ ABF6              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 446+ ABF6 11 8D 89     	ld de,Posicion_inicio
 447+ ABF9 01 03 00     	ld bc,3
 448+ ABFC ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 449+ ABFE              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 450+ ABFE 11 93 89     	ld de,Puntero_de_almacen_de_mov_masticados
 451+ AC01 01 02 00     	ld bc,2
 452+ AC04 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 453+ AC06
 454+ AC06 11 9D 89     	ld de,Frames_explosion
 455+ AC09 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 456+ AC0B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 457+ AC0C
 458+ AC0C C9           	ret
 459+ AC0D
 460+ AC0D              ; ----------------------------------------------------------------------------------------------------------
 461+ AC0D              ;
 462+ AC0D              ;	22/01/24
 463+ AC0D              ;
 464+ AC0D              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 465+ AC0D              ;
 466+ AC0D              ;	Las cajas contienen entidades iniciadas:
 467+ AC0D              ;
 468+ AC0D              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 469+ AC0D              ;
 470+ AC0D              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 471+ AC0D              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 472+ AC0D              ;
 473+ AC0D              ;	MODIFICA: HL,DE y BC
 474+ AC0D
 475+ AC0D              Parametros_de_bandeja_DRAW_a_caja
 476+ AC0D
 477+ AC0D 21 7A 89     	ld hl,Bandeja_DRAW
 478+ AC10 ED 5B B9 89  	ld de,(Puntero_store_caja)
 479+ AC14 7E           	ld a,(hl)
 480+ AC15 12           	ld (de),a
 481+ AC16 13           	inc de 													; (Tipo).
 482+ AC17
 483+ AC17 21 81 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 484+ AC1A 01 02 00     	ld bc,2
 485+ AC1D ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 486+ AC1F              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 487+ AC1F 23           	inc hl
 488+ AC20 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 489+ AC21 12           	ld (de),a
 490+ AC22 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 491+ AC23
 492+ AC23 21 90 89     	ld hl,Impacto
 493+ AC26 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 494+ AC27 12           	ld (de),a
 495+ AC28 13           	inc de 													; (Impacto), volcado a la caja.
 496+ AC29
 497+ AC29 21 91 89     	ld hl,Puntero_de_impresion								; DE situado ahora en (Puntero_de_impresión).
 498+ AC2C 01 07 00     	ld bc,7
 499+ AC2F ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 500+ AC31              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 501+ AC31              ;															; HL apunta ahora a (Columnas).
 502+ AC31 21 9C 89     	ld hl,Ctrl_2
 503+ AC34 7E           	ld a,(hl)
 504+ AC35 12           	ld (de),a 												; Volcamos (Ctrl_2).
 505+ AC36 13           	inc de
 506+ AC37
 507+ AC37 C9           	ret
 508+ AC38
 509+ AC38              ;---------------------------------------------------------------------------------------------------------------
 510+ AC38              ;
 511+ AC38              ;	5/1/24
 512+ AC38              ;
 513+ AC38              ;	INICIALIZA (Numero_parcial_de_entidades).
 514+ AC38              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 515+ AC38              ;
 516+ AC38              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 517+ AC38              ;
 518+ AC38              ;	(Numero_parcial_de_entidades)="7".
 519+ AC38              ;
 520+ AC38              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 521+ AC38              ;
 522+ AC38              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 523+ AC38              ;
 524+ AC38              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 525+ AC38              ;	MODIFICA: A y B.
 526+ AC38              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 527+ AC38
 528+ AC38              Inicializa_Numero_parcial_de_entidades
 529+ AC38
 530+ AC38              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 531+ AC38
 532+ AC38 3A BF 89     	ld a,(Numero_de_entidades)
 533+ AC3B A7           	and a
 534+ AC3C
 535+ AC3C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 536+ AC3C              ;	jr z,$
 537+ AC3C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 538+ AC3C
 539+ AC3C 20 03        	jr nz,3F
 540+ AC3E
 541+ AC3E              ; ---------- ---------- ----------
 542+ AC3E
 543+ AC3E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 544+ AC3E              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 545+ AC3E
 546+ AC3E CD 7F AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 547+ AC41
 548+ AC41              ; ---------- ---------- ----------
 549+ AC41
 550+ AC41 3A BF 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 551+ AC44 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 552+ AC46 38 08        	jr c,1F
 553+ AC48
 554+ AC48              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 555+ AC48              ; Actualizamos variables.
 556+ AC48
 557+ AC48 3E 07        	ld a,7
 558+ AC4A 32 C0 89     	ld (Numero_parcial_de_entidades),a
 559+ AC4D 47           	ld b,a
 560+ AC4E 18 04        	jr 2F
 561+ AC50
 562+ AC50              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 563+ AC50              ; (Numero_de_entidades)="0".
 564+ AC50
 565+ AC50 32 C0 89     1 ld (Numero_parcial_de_entidades),a
 566+ AC53 47           	ld b,a
 567+ AC54 C9           2 ret
 568+ AC55
# file closed: Rutinas_de_inicio_y_niveles.asm
2037  AC55              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ AC55              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ AC55              ;
   3+ AC55              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ AC55              ;
   5+ AC55              ; *****************************************************************************************************************************************************************************************
   6+ AC55              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ AC55
   8+ AC55 7C           calcula_tercio ld a,h
   9+ AC56 E6 18        	and $18
  10+ AC58 CB 2F        	sra a
  11+ AC5A CB 2F        	sra a
  12+ AC5C CB 2F        	sra a
  13+ AC5E C9           	ret
  14+ AC5F
# file closed: calcula_tercio.asm
2038  AC5F              	include "Cls.asm"
# file opened: Cls.asm
   1+ AC5F              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ AC5F              ;
   3+ AC5F              ;
   4+ AC5F              ;	CLS.
   5+ AC5F              ;
   6+ AC5F              ;	Limpia la pantalla y define sus atributos.
   7+ AC5F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ AC5F              ;
   9+ AC5F              ;	COLORES: 0 ..... NEGRO
  10+ AC5F              ;    		 1 ..... AZUL
  11+ AC5F              ; 			 2 ..... ROJO
  12+ AC5F              ;			 3 ..... MAGENTA
  13+ AC5F              ; 			 4 ..... VERDE
  14+ AC5F              ; 			 5 ..... CIAN
  15+ AC5F              ;			 6 ..... AMARILLO
  16+ AC5F              ; 			 7 ..... BLANCO
  17+ AC5F              ;
  18+ AC5F              ;	INPUT: A contiene los atributos de pantalla.
  19+ AC5F              ;
  20+ AC5F              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ AC5F
  22+ AC5F
  23+ AC5F 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ AC62 11 01 40     	LD DE,$4001
  25+ AC65 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ AC68 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ AC6A ED B0        	LDIR
  28+ AC6C 01 FF 02     	LD BC,767
  29+ AC6F 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ AC70 ED B0        	LDIR
  31+ AC72 C9           	ret
  32+ AC73
# file closed: Cls.asm
2039  AC73              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ AC73              ; ------------------------------------------------------------------------
   2+ AC73              ;
   3+ AC73              ;	30/1/24
   4+ AC73              ;
   5+ AC73              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ AC73              ;	Fila superior "0", Columna izquierda "0".
   7+ AC73              ;
   8+ AC73              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ AC73              ;
  10+ AC73              ;	Modifica: A,BC y DE.
  11+ AC73
  12+ AC73 7D           Genera_coordenadas ld a,l
  13+ AC74 E6 1F        	and $1f
  14+ AC76 32 81 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ AC79
  16+ AC79 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ AC7A FE 40        	cp $40
  18+ AC7C 38 1C        	jr c,4F
  19+ AC7E
  20+ AC7E CD 55 AC     	call calcula_tercio
  21+ AC81 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ AC82
  23+ AC82 1E 00        	ld e,0
  24+ AC84 7D           	ld a,l
  25+ AC85 E6 E0        	and $e0
  26+ AC87 28 01        	jr z,1F
  27+ AC89 04           	inc b
  28+ AC8A
  29+ AC8A 04           1 inc b
  30+ AC8B 05           	dec b
  31+ AC8C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AC8E              ;														; _ , salimos.
  33+ AC8E 1C           3 inc e
  34+ AC8F D6 20        	sub 32
  35+ AC91 20 FB        	jr nz,3B
  36+ AC93 10 F5        	djnz 1B
  37+ AC95
  38+ AC95 7B           2 ld a,e
  39+ AC96 32 82 89     	ld (Coordenada_y),a
  40+ AC99 C9           	ret
  41+ AC9A
  42+ AC9A AF           4 xor a
  43+ AC9B 32 82 89     	ld (Coordenada_y),a
  44+ AC9E C9           	ret
  45+ AC9F
  46+ AC9F              ; ------------------------------------------------------------------------
  47+ AC9F              ;	28/05/23
  48+ AC9F              ;
  49+ AC9F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AC9F              ;	Fila superior "0", Columna izquierda "0".
  51+ AC9F              ;
  52+ AC9F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AC9F              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AC9F              ;
  55+ AC9F              ;		DE="$120d"
  56+ AC9F              ;
  57+ AC9F              ;		D, (Coordenada_X), Columnas, $12
  58+ AC9F              ;		E, (Coordenada_y), Filas, $0d
  59+ AC9F              ;
  60+ AC9F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AC9F
  62+ AC9F              ;	Modifica: A,BC y DE.
  63+ AC9F
  64+ AC9F
  65+ AC9F              Genera_coordenadas_disparo
  66+ AC9F
  67+ AC9F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AC9F
  69+ AC9F 7D           	ld a,l
  70+ ACA0 E6 1F        	and $1f
  71+ ACA2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ ACA3 CD 55 AC     	call calcula_tercio
  73+ ACA6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ ACA7 1E 00        	ld e,0
  75+ ACA9 7D           	ld a,l
  76+ ACAA E6 E0        	and $e0
  77+ ACAC 28 01        	jr z,1F
  78+ ACAE 04           	inc b
  79+ ACAF 1C           1 inc e
  80+ ACB0 D6 20        	sub 32
  81+ ACB2 20 FB        	jr nz,1B
  82+ ACB4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ ACB6 C9           	ret
  84+ ACB7
# file closed: Genera_coordenadas.asm
2040  ACB7              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ ACB7              ; Relojes y temporizaciones.
   2+ ACB7
   3+ ACB7              ; ------------------------------------------------------
   4+ ACB7              ;
   5+ ACB7              ;	16/7/23
   6+ ACB7              ;
   7+ ACB7              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ ACB7              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ ACB7              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ ACB7              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ ACB7              ;
  12+ ACB7              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ ACB7              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ ACB7
  15+ ACB7              ; Disparo_entidad db 1
  16+ ACB7              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ ACB7              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ ACB7
  19+ ACB7              Habilita_disparos
  20+ ACB7
  21+ ACB7 7E           	ld a,(hl)
  22+ ACB8 A7           	and a
  23+ ACB9 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ ACBA
  25+ ACBA EB           	ex de,hl
  26+ ACBB
  27+ ACBB 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ ACBC C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ ACBD
  30+ ACBD              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ ACBD
  32+ ACBD 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ ACBE 7E           	ld a,(hl)
  34+ ACBF 23           	inc hl
  35+ ACC0 77           	ld (hl),a
  36+ ACC1
  37+ ACC1 EB           	ex de,hl						; Habilitamos disparo.
  38+ ACC2 3E 01        	ld a,1
  39+ ACC4 77           	ld (hl),a
  40+ ACC5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2041  ACC6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ ACC6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ ACC6              ;
   3+ ACC6              ;	11/03/24
   4+ ACC6              ;
   5+ ACC6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ ACC6              ;   DE contiene Puntero_objeto.
   7+ ACC6              ;   IX contiene el Puntero de impresión.
   8+ ACC6
   9+ ACC6              Genera_datos_de_impresion
  10+ ACC6
  11+ ACC6 ED 73 C7 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ ACCA 31 93 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ ACCD DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ ACCF
  15+ ACCF 2A D8 89         ld hl,(Scanlines_album_SP)
  16+ ACD2
  17+ ACD2 3E 05            ld a,5
  18+ ACD4 85               add l
  19+ ACD5 6F               ld l,a
  20+ ACD6
  21+ ACD6 F9               ld sp,hl
  22+ ACD7 22 D8 89         ld (Scanlines_album_SP),hl
  23+ ACDA
  24+ ACDA 21 00 00         ld hl,0
  25+ ACDD
  26+ ACDD DD E5            push ix
  27+ ACDF 3B               dec sp
  28+ ACE0 ED 7A            adc hl,sp
  29+ ACE2 D5               push de
  30+ ACE3
  31+ ACE3              ; Recuperamos SP.
  32+ ACE3
  33+ ACE3 ED 7B C7 89      ld sp,(Stack)
  34+ ACE7
  35+ ACE7 E5               push hl
  36+ ACE8 F1               pop af
  37+ ACE9 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ ACEA
  39+ ACEA              ; Tenemos el encabezado listo.
  40+ ACEA              ; Preparamos registros para generar los scanlines.
  41+ ACEA
  42+ ACEA DD E5            push ix
  43+ ACEC E1               pop hl                                          ; 1er scanline en HL.
  44+ ACED
  45+ ACED ED 5B D8 89      ld de,(Scanlines_album_SP)
  46+ ACF1
  47+ ACF1              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ ACF1              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ ACF1
  50+ ACF1 7C               ld a,h
  51+ ACF2 FE 50            cp $50
  52+ ACF4 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ ACF6
  54+ ACF6 20 05            jr nz,2F
  55+ ACF8
  56+ ACF8 7D               ld a,l
  57+ ACF9 FE E0            cp $e0
  58+ ACFB 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ ACFD
  60+ ACFD 7D           2 ld a,l
  61+ ACFE FE C0            cp $c0
  62+ AD00 D2 92 AD         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD03
  64+ AD03              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD03
  66+ AD03 CD F8 94         call NextScan
  67+ AD06 EB               ex de,hl
  68+ AD07
  69+ AD07 73               ld (hl),e
  70+ AD08 23               inc hl
  71+ AD09 72               ld (hl),d
  72+ AD0A 23               inc hl
  73+ AD0B
  74+ AD0B EB               ex de,hl
  75+ AD0C
  76+ AD0C CD F8 94         call NextScan
  77+ AD0F EB               ex de,hl
  78+ AD10
  79+ AD10 73               ld (hl),e
  80+ AD11 23               inc hl
  81+ AD12 72               ld (hl),d
  82+ AD13 23               inc hl
  83+ AD14
  84+ AD14 EB               ex de,hl
  85+ AD15
  86+ AD15 CD F8 94         call NextScan
  87+ AD18 EB               ex de,hl
  88+ AD19
  89+ AD19 73               ld (hl),e
  90+ AD1A 23               inc hl
  91+ AD1B 72               ld (hl),d
  92+ AD1C 23               inc hl
  93+ AD1D
  94+ AD1D EB               ex de,hl
  95+ AD1E
  96+ AD1E CD F8 94         call NextScan
  97+ AD21 EB               ex de,hl
  98+ AD22
  99+ AD22 73               ld (hl),e
 100+ AD23 23               inc hl
 101+ AD24 72               ld (hl),d
 102+ AD25 23               inc hl
 103+ AD26
 104+ AD26 EB               ex de,hl
 105+ AD27
 106+ AD27 CD F8 94         call NextScan
 107+ AD2A EB               ex de,hl
 108+ AD2B
 109+ AD2B 73               ld (hl),e
 110+ AD2C 23               inc hl
 111+ AD2D 72               ld (hl),d
 112+ AD2E 23               inc hl
 113+ AD2F
 114+ AD2F EB               ex de,hl
 115+ AD30
 116+ AD30 CD F8 94         call NextScan
 117+ AD33 EB               ex de,hl
 118+ AD34
 119+ AD34 73               ld (hl),e
 120+ AD35 23               inc hl
 121+ AD36 72               ld (hl),d
 122+ AD37 23               inc hl
 123+ AD38
 124+ AD38 EB               ex de,hl
 125+ AD39
 126+ AD39 CD F8 94         call NextScan
 127+ AD3C EB               ex de,hl
 128+ AD3D
 129+ AD3D 73               ld (hl),e
 130+ AD3E 23               inc hl
 131+ AD3F 72               ld (hl),d
 132+ AD40 23               inc hl
 133+ AD41
 134+ AD41 EB               ex de,hl
 135+ AD42
 136+ AD42 CD F8 94         call NextScan
 137+ AD45 EB               ex de,hl
 138+ AD46
 139+ AD46 73               ld (hl),e
 140+ AD47 23               inc hl
 141+ AD48 72               ld (hl),d
 142+ AD49 23               inc hl
 143+ AD4A
 144+ AD4A EB               ex de,hl
 145+ AD4B
 146+ AD4B CD F8 94         call NextScan
 147+ AD4E EB               ex de,hl
 148+ AD4F
 149+ AD4F 73               ld (hl),e
 150+ AD50 23               inc hl
 151+ AD51 72               ld (hl),d
 152+ AD52 23               inc hl
 153+ AD53
 154+ AD53 EB               ex de,hl
 155+ AD54
 156+ AD54 CD F8 94         call NextScan
 157+ AD57 EB               ex de,hl
 158+ AD58
 159+ AD58 73               ld (hl),e
 160+ AD59 23               inc hl
 161+ AD5A 72               ld (hl),d
 162+ AD5B 23               inc hl
 163+ AD5C
 164+ AD5C EB               ex de,hl
 165+ AD5D
 166+ AD5D CD F8 94         call NextScan
 167+ AD60 EB               ex de,hl
 168+ AD61
 169+ AD61 73               ld (hl),e
 170+ AD62 23               inc hl
 171+ AD63 72               ld (hl),d
 172+ AD64 23               inc hl
 173+ AD65
 174+ AD65 EB               ex de,hl
 175+ AD66
 176+ AD66 CD F8 94         call NextScan
 177+ AD69 EB               ex de,hl
 178+ AD6A
 179+ AD6A 73               ld (hl),e
 180+ AD6B 23               inc hl
 181+ AD6C 72               ld (hl),d
 182+ AD6D 23               inc hl
 183+ AD6E
 184+ AD6E EB               ex de,hl
 185+ AD6F
 186+ AD6F CD F8 94         call NextScan
 187+ AD72 EB               ex de,hl
 188+ AD73
 189+ AD73 73               ld (hl),e
 190+ AD74 23               inc hl
 191+ AD75 72               ld (hl),d
 192+ AD76 23               inc hl
 193+ AD77
 194+ AD77 EB               ex de,hl
 195+ AD78
 196+ AD78 CD F8 94         call NextScan
 197+ AD7B EB               ex de,hl
 198+ AD7C
 199+ AD7C 73               ld (hl),e
 200+ AD7D 23               inc hl
 201+ AD7E 72               ld (hl),d
 202+ AD7F 23               inc hl
 203+ AD80
 204+ AD80 EB               ex de,hl
 205+ AD81
 206+ AD81 CD F8 94         call NextScan
 207+ AD84 EB               ex de,hl
 208+ AD85
 209+ AD85 73               ld (hl),e
 210+ AD86 23               inc hl
 211+ AD87 72               ld (hl),d
 212+ AD88 23               inc hl
 213+ AD89
 214+ AD89              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ AD89
 216+ AD89 22 D8 89         ld (Scanlines_album_SP),hl
 217+ AD8C
 218+ AD8C              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ AD8C
 220+ AD8C 08               ex af,af
 221+ AD8D
 222+ AD8D F5               push af
 223+ AD8E E1               pop hl
 224+ AD8F
 225+ AD8F 36 10            ld (hl),16
 226+ AD91
 227+ AD91 C9               ret
 228+ AD92
 229+ AD92              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ AD92
 231+ AD92              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ AD92
 233+ AD92 3E 57            ld a,$57
 234+ AD94 94               sub h
 235+ AD95 47               ld b,a
 236+ AD96
 237+ AD96 3E DF            ld a,$df
 238+ AD98 BD               cp l
 239+ AD99 38 04            jr c,1F
 240+ AD9B
 241+ AD9B 3E 08            ld a,8
 242+ AD9D 80               add b
 243+ AD9E 47               ld b,a
 244+ AD9F
 245+ AD9F              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ AD9F              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ AD9F
 248+ AD9F 48           1 ld c,b
 249+ ADA0 0C               inc c
 250+ ADA1
 251+ ADA1 04               inc b
 252+ ADA2 05               dec b
 253+ ADA3 20 02            jr nz,3F
 254+ ADA5
 255+ ADA5 18 0B            jr 6F
 256+ ADA7
 257+ ADA7 CD F8 94     3 call NextScan
 258+ ADAA EB               ex de,hl
 259+ ADAB
 260+ ADAB 73               ld (hl),e
 261+ ADAC 23               inc hl
 262+ ADAD 72               ld (hl),d
 263+ ADAE 23               inc hl
 264+ ADAF
 265+ ADAF EB               ex de,hl
 266+ ADB0 10 F5            djnz 3B
 267+ ADB2
 268+ ADB2 ED 53 D8 89  6 ld (Scanlines_album_SP),de
 269+ ADB6
 270+ ADB6 08           5 ex af,af
 271+ ADB7 F5               push af
 272+ ADB8 E1               pop hl
 273+ ADB9
 274+ ADB9 71               ld (hl),c
 275+ ADBA
 276+ ADBA C9               ret
 277+ ADBB
# file closed: Genera_datos_de_impresion.asm
2042  ADBB
2043  ADBB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ ADBB              ; -----------------------------------------------------------------------------
   2+ ADBB              ;
   3+ ADBB              ;   11/03/24
   4+ ADBB              ;
   5+ ADBB
   6+ ADBB                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 C7 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 D8 89      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B C7 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 D8 89      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B C7 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2044  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD EC 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A 8F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A 8D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 7D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 58 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A 97 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A 97 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 97 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A 97 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 97 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 97 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A 99 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD 55 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD 55 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A 8F 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD 55 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD 55 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD 55 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A 7D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A 9B 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A 8F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A 81 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A 81 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 7C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A 97 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 7D 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 7D 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 97 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A 97 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 7D 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 7D 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 97 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD 07 95     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 7D 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD F8 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 7D 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A 8F 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD 55 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 8F 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 99 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 9B 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 8F 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 99 89     	ld (Limite_horizontal),hl
 381+ 940D 21 9B 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 8F 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 99 89     	ld (Limite_horizontal),hl
 392+ 9425 21 9B 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 8F 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 99 89     	ld (Limite_horizontal),hl
 401+ 9438 21 9B 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A 7D 89     	ld hl,(Posicion_actual)
 410+ 9444 CD 73 AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 97 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A 8F 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A 81 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 98 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 98 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A 81 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 98 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 98 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A 8F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A 7D 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD 07 95     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD E0 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD 07 95     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A 7F 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D5
 546+ 94D5 3A 97 89     	ld a,(Ctrl_0)
 547+ 94D8 CB 77        	bit 6,a
 548+ 94DA C8           	ret z
 549+ 94DB
 550+ 94DB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DB              ; _ entidad / Amadeus´.
 552+ 94DB
 553+ 94DB DD 22 27 87  	ld (p.imp.amadeus),ix
 554+ 94DF
 555+ 94DF C9           	ret
 556+ 94E0
 557+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E0              ;
 559+ 94E0              ;	2/1/23
 560+ 94E0              ;
 561+ 94E0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E0              ;
 563+ 94E0              ;	Tras esta rutina tenemos:
 564+ 94E0              ;
 565+ 94E0              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E0              ;
 568+ 94E0              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E0
 570+ 94E0 2A 7D 89     Operandos ld hl,(Posicion_actual)
 571+ 94E3 3A 98 89     	ld a,(Columnas)
 572+ 94E6 3D           	dec a
 573+ 94E7 20 01        	jr nz,1F
 574+ 94E9 3C           	inc a
 575+ 94EA 47           1 ld b,a
 576+ 94EB C9           	ret
 577+ 94EC
 578+ 94EC              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94EC              ;
 580+ 94EC              ;	Prepara_draw
 581+ 94EC              ;
 582+ 94EC              ;	Es una rutina de carga.
 583+ 94EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94EC              ;
 585+ 94EC              ;	FUNCIONAMIENTO:
 586+ 94EC              ;
 587+ 94EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94EC              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94EC              ;
 591+ 94EC              ;	DESTRUYE:
 592+ 94EC              ;
 593+ 94EC              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94EC
 595+ 94EC 21 7B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F1 4E           	ld c,(hl)
 599+ 94F2 2A 7D 89     	ld hl,(Posicion_actual)
 600+ 94F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94F7 C9           	ret
 602+ 94F8
 603+ 94F8              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F8              ;
 605+ 94F8              ;	5/08/22
 606+ 94F8              ;
 607+ 94F8              ;   NextScan.
 608+ 94F8              ;
 609+ 94F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F8              ;
 611+ 94F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F8              ;
 613+ 94F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F8              ;
 615+ 94F8              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F8              ;
 617+ 94F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F8              ;
 619+ 94F8
 620+ 94F8 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F9 7C               ld a,h
 622+ 94FA E6 07            and 7
 623+ 94FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94FD
 625+ 94FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94FE C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9500 6F               ld l,a
 628+ 9501 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9502
 630+ 9502 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9503 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9505 67               ld h,a
 633+ 9506 C9               ret
 634+ 9507
 635+ 9507              ;----------------------------------------------------------------------------------------------------------------
 636+ 9507              ;
 637+ 9507              ;	5/08/22
 638+ 9507              ;
 639+ 9507              ;   PreviousScan.
 640+ 9507              ;
 641+ 9507              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 9507              ;
 643+ 9507              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 9507              ;
 645+ 9507              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 9507              ;
 647+ 9507              ;       DESTRUIDOS: AF y HL !!!
 648+ 9507              ;
 649+ 9507              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 9507              ;
 651+ 9507
 652+ 9507 7C           PreviousScan ld a,h
 653+ 9508 25               dec h               ; Dec H.
 654+ 9509 E6 07            and 7
 655+ 950B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 950C
 657+ 950C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 950D D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 950F 6F               ld l,a
 660+ 9510 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9511
 662+ 9511 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9512 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9514 67               ld h,a
 665+ 9515 C9               ret
 666+ 9516
 667+ 9516
 668+ 9516
 669+ 9516
 670+ 9516
 671+ 9516
 672+ 9516
 673+ 9516
 674+ 9516
 675+ 9516
 676+ 9516
 677+ 9516
# file closed: Draw_XOR.asm
2045  9516              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9516
   2+ 9516              ; ******************************************************************************************************************************************************************************************
   3+ 9516              ;
   4+ 9516              ;   20/05/23
   5+ 9516              ;
   6+ 9516              ;	Recompone_posicion_inicio
   7+ 9516              ;
   8+ 9516              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9516              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9516              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9516              ;	_ a una u otra rutina.
  12+ 9516
  13+ 9516              Recompone_posicion_inicio
  14+ 9516
  15+ 9516 2A 8D 89     	ld hl,(Posicion_inicio)
  16+ 9519 7D           	ld a,l
  17+ 951A E6 1F        	and $1f
  18+ 951C 28 16        	jr z,1F
  19+ 951E
  20+ 951E FE 1F        	cp $1f
  21+ 9520 28 0D        	jr z,3F
  22+ 9522
  23+ 9522 21 9C 89     	ld hl,Ctrl_2
  24+ 9525 CB C6        	set 0,(hl)
  25+ 9527 2A 7F 89     	ld hl,(Puntero_objeto)
  26+ 952A 22 B7 89     	ld (Repone_puntero_objeto),hl
  27+ 952D 18 08        	jr 2F
  28+ 952F
  29+ 952F CD DD 96     3 call Mov_left
  30+ 9532 18 03        	jr 2F
  31+ 9534
  32+ 9534 CD BA 95     1 call Mov_right
  33+ 9537 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953A 22 7F 89     	ld (Puntero_objeto),hl
  35+ 953D C9           	ret
  36+ 953E
  37+ 953E              ; ******************************************************************************************************************************************************************************************
  38+ 953E              ;
  39+ 953E              ;   27/05/23
  40+ 953E              ;
  41+ 953E              ;	Mov_down
  42+ 953E              ;
  43+ 953E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953E              ;
  45+ 953E              ;
  46+ 953E              Mov_down
  47+ 953E
  48+ 953E CD A8 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9541              ;																	; _ repone (Puntero_objeto).
  50+ 9541 21 97 89     	ld hl,Ctrl_0
  51+ 9544 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9546              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9546              ; 																	; _ en el caso de que no lo haya.
  54+ 9546 3A A1 89     	ld a,(Vel_down)
  55+ 9549 47           	ld b,a
  56+ 954A 2A 7D 89         ld hl,(Posicion_actual)
  57+ 954D CD 55 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9550 E6 02        	and 2
  59+ 9552 28 17        	jr z,1F
  60+ 9554
  61+ 9554              ; Nos encontramos en el último tercio de pantalla.
  62+ 9554              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9554
  64+ 9554 7C           	ld a,h
  65+ 9555 FE 57        	cp $57
  66+ 9557 20 12        	jr nz,1F
  67+ 9559
  68+ 9559 7D           	ld a,l
  69+ 955A C6 20        	add $20
  70+ 955C 30 0D        	jr nc,1F
  71+ 955E
  72+ 955E              ; ------------------------------
  73+ 955E              ;
  74+ 955E              ;	12/01/24
  75+ 955E
  76+ 955E              ;	call Reaparece_arriba
  77+ 955E CD 6A 98     	call Reinicio
  78+ 9561
  79+ 9561              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9561
  81+ 9561 3A DE 89     	ld a,(Ctrl_3)
  82+ 9564 CB CF        	set 1,a
  83+ 9566 32 DE 89     	ld (Ctrl_3),a
  84+ 9569
  85+ 9569 18 08        	jr 3F
  86+ 956B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956B              ; ------------------------------
  89+ 956B
  90+ 956B CD F8 94     1 call NextScan
  91+ 956E 22 7D 89     	ld (Posicion_actual),hl
  92+ 9571 10 DA            djnz 2B
  93+ 9573 CD 73 AC     3 call Genera_coordenadas
  94+ 9576 C9           	ret
  95+ 9577
  96+ 9577              ; ******************************************************************************************************************************************************************************************
  97+ 9577              ;
  98+ 9577              ;   27/05/23
  99+ 9577              ;
 100+ 9577              ;	Mov_up
 101+ 9577              ;
 102+ 9577              ; 	Mueve el Sprite hacia arriba.
 103+ 9577              ;
 104+ 9577              ;
 105+ 9577              Mov_up
 106+ 9577
 107+ 9577 CD A8 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957A 21 97 89     	ld hl,Ctrl_0
 110+ 957D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957F              ; 																		; _ en el caso de que no lo haya.
 113+ 957F 3A A0 89     	ld a,(Vel_up)
 114+ 9582 47           	ld b,a
 115+ 9583 2A 7D 89     	ld hl,(Posicion_actual)
 116+ 9586 CD 55 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9589 A7           	and a
 118+ 958A 20 10        	jr nz,1F
 119+ 958C
 120+ 958C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958C
 123+ 958C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958F 20 0B            jr nz,1F
 126+ 9591 7D               ld a,l
 127+ 9592 D6 20            sub $20
 128+ 9594 30 06            jr nc,1F
 129+ 9596 25               dec h
 130+ 9597
 131+ 9597              ; -----------------------------
 132+ 9597 CD 4B 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959A              ;	call Reinicio
 134+ 959A              ; -----------------------------
 135+ 959A
 136+ 959A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959C CD 07 95     1 call PreviousScan
 138+ 959F 22 7D 89     	ld (Posicion_actual),hl
 139+ 95A2 10 E2            djnz 3B
 140+ 95A4 CD 73 AC     2 call Genera_coordenadas
 141+ 95A7 C9           	ret
 142+ 95A8
 143+ 95A8              ; -----------------------------
 144+ 95A8              ;
 145+ 95A8              ;	27/5/23
 146+ 95A8              ;
 147+ 95A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A8              ;
 150+ 95A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A8              ;
 153+ 95A8              ;	Modifica: A y (Puntero_objeto).
 154+ 95A8
 155+ 95A8 3A 9C 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AB CB 47        	bit 0,a
 157+ 95AD C8           	ret z
 158+ 95AE CB 87        	res 0,a
 159+ 95B0 32 9C 89     	ld (Ctrl_2),a
 160+ 95B3 2A B7 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B6 22 7F 89     	ld (Puntero_objeto),hl
 162+ 95B9 C9           	ret
 163+ 95BA
 164+ 95BA              ; ******************************************************************************************************************************************************************************************
 165+ 95BA              ;
 166+ 95BA              ;	19/10/22
 167+ 95BA              ;
 168+ 95BA              ;	Mov_right.
 169+ 95BA              ;
 170+ 95BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BA              ;
 172+ 95BA
 173+ 95BA 3A 97 89     Mov_right ld a,(Ctrl_0)
 174+ 95BD CB 77        	bit 6,a
 175+ 95BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C1
 177+ 95C1 CD F9 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C5
 180+ 95C5 21 97 89     	ld hl,Ctrl_0
 181+ 95C8 CB E6        	set 4,(hl)
 182+ 95CA 18 52        	jr 8F
 183+ 95CC
 184+ 95CC 21 97 89     10 ld hl,Ctrl_0
 185+ 95CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D1              ; 																	; _ en el caso de que no lo haya.
 188+ 95D1 3A 81 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D6 20 46        	jr nz,8F
 191+ 95D8
 192+ 95D8 3A 83 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DC 28 40        	jr z,8F
 195+ 95DE
 196+ 95DE              ; ---------- ---------- ----------
 197+ 95DE              ;
 198+ 95DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DE
 200+ 95DE 3A 9F 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E3 28 11        	jr z,1F
 203+ 95E5 38 06        	jr c,6F
 204+ 95E7 FE 04        	cp 4
 205+ 95E9 28 14        	jr z,7F
 206+ 95EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95ED
 208+ 95ED              ; ---------- ---------- ----------
 209+ 95ED              ;
 210+ 95ED              ; Perfiles de velocidad
 211+ 95ED              ;
 212+ 95ED
 213+ 95ED 3A 83 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F0 FE FE        	cp $fe
 215+ 95F2 20 2A        	jr nz,8F
 216+ 95F4 18 10        	jr 3F
 217+ 95F6 3A 83 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F9 FE FD        	cp $fd
 219+ 95FB 20 21        	jr nz,8F
 220+ 95FD 18 07        	jr 3F
 221+ 95FF 3A 83 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9602 FE FB        	cp $fb
 223+ 9604 20 18        	jr nz,8F
 224+ 9606
 225+ 9606              ; ---------- ---------- ----------
 226+ 9606
 227+ 9606              3
 228+ 9606 CD 39 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9609              ;	call Reinicio
 230+ 9609
 231+ 9609              ; ---------- ---------- ----------
 232+ 9609              ;
 233+ 9609              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9609
 235+ 9609 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960C CD 25 96     	call DESPLZ_DER
 238+ 960F C1           	pop bc
 239+ 9610 10 F9        	djnz 5B
 240+ 9612 2A 7D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9615 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9616 22 7D 89     	ld (Posicion_actual),hl
 243+ 9619 CD 73 AC     	call Genera_coordenadas
 244+ 961C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961E
 246+ 961E              ; ---------- ---------- ----------
 247+ 961E
 248+ 961E 2A 7D 89     8 ld hl,(Posicion_actual)
 249+ 9621 CD 25 96     	call DESPLZ_DER
 250+ 9624 C9           2 ret
 251+ 9625
 252+ 9625              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9625              ;
 254+ 9625              ;	22/9/22
 255+ 9625              ;
 256+ 9625
 257+ 9625 CD 34 96     DESPLZ_DER call Desplaza_derecha
 258+ 9628 CD 80 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962B CD A9 96         call Ciclo_completo
 260+ 962E 21 97 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9631 CB FE        	set 7,(hl)
 262+ 9633 C9           	ret
 263+ 9634
 264+ 9634              ; ******************************************************************************************************************************************************************************************
 265+ 9634              ;	15/02/23
 266+ 9634              ;
 267+ 9634
 268+ 9634 3A 9F 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9637 47           	ld b,a
 270+ 9638 2A 89 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963B 23           1 inc hl
 272+ 963C 23           	inc hl
 273+ 963D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963F 22 89 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9642 CD 6E 8C     	call Extrae_address
 276+ 9645 22 7F 89     	ld (Puntero_objeto),hl
 277+ 9648
 278+ 9648              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9648
 280+ 9648              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9648              ; Cuántos movimientos hemos hecho ??
 282+ 9648              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9648
 284+ 9648 2A 85 89     7 ld hl,(Indice_Sprite_der)
 285+ 964B EB           	ex de,hl
 286+ 964C A7           	and a
 287+ 964D ED 52        	sbc hl,de
 288+ 964F CB 3D        	srl l
 289+ 9651 3E 08        6 ld a,8
 290+ 9653 95           	sub l
 291+ 9654 30 1E        	jr nc,3F
 292+ 9656
 293+ 9656              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9656              ; B="0".
 295+ 9656
 296+ 9656 04           4 inc b
 297+ 9657 3C           	inc a
 298+ 9658 20 FC        	jr nz,4B
 299+ 965A 78           	ld a,b
 300+ 965B 08           	ex af,af
 301+ 965C 2A 85 89     	ld hl,(Indice_Sprite_der)
 302+ 965F 23           5 inc hl
 303+ 9660 23           	inc hl
 304+ 9661 10 FC        	djnz 5B
 305+ 9663 22 89 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9666 CD 6E 8C     	call Extrae_address
 307+ 9669 22 7F 89     	ld (Puntero_objeto),hl
 308+ 966C
 309+ 966C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966C              ; _(Posicion_actual).
 311+ 966C
 312+ 966C 21 7D 89     	ld hl,Posicion_actual
 313+ 966F 34           	inc (hl)
 314+ 9670 08               ex af,af
 315+ 9671 6F           	ld l,a
 316+ 9672 18 DD        	jr 6B
 317+ 9674
 318+ 9674              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9674
 320+ 9674 47           3 ld b,a
 321+ 9675 2A 87 89     	ld hl,(Indice_Sprite_izq)
 322+ 9678 23           2 inc hl
 323+ 9679 23           	inc hl
 324+ 967A 10 FC        	djnz 2B
 325+ 967C 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967F C9           8 ret
 327+ 9680
 328+ 9680              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9680              ;
 330+ 9680              ;	24/7/22
 331+ 9680              ;
 332+ 9680              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9680              ;
 334+ 9680              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9680              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9680              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9680
 338+ 9680 3A 83 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9683 A7           	and a
 340+ 9684 20 1F        	jr nz,1F
 341+ 9686 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9688 32 83 89         ld (CTRL_DESPLZ),a
 343+ 968B
 344+ 968B 21 7C 89     	ld hl,Columns
 345+ 968E 34           	inc (hl)
 346+ 968F 3A 8F 89     	ld a,(Cuad_objeto)
 347+ 9692 E6 01        	and 1
 348+ 9694 28 0F        	jr z,1F
 349+ 9696 2A 7D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9699 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969A 22 7D 89     	ld (Posicion_actual),hl
 352+ 969D CD 73 AC     	call Genera_coordenadas
 353+ 96A0 CD 05 98     	call Inc_CTRL_DESPLZ
 354+ 96A3 18 03        	jr 2F
 355+ 96A5 CD 05 98     1 call Inc_CTRL_DESPLZ
 356+ 96A8 C9           2 ret
 357+ 96A9
 358+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A9              ;
 360+ 96A9              ;	24/7/22
 361+ 96A9              ;
 362+ 96A9              ;	Ciclo_completo.
 363+ 96A9              ;
 364+ 96A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A9              ;
 366+ 96A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A9              ; 	Decrementamos (Columns).
 368+ 96A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A9
 371+ 96A9
 372+ 96A9 3A 83 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AC FE FF        	cp $ff
 374+ 96AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B0 E6 F0        	and $f0
 376+ 96B2 20 28        	jr nz,3F
 377+ 96B4
 378+ 96B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B4
 380+ 96B4 3A 83 89     	ld a,(CTRL_DESPLZ)
 381+ 96B7 47           	ld b,a
 382+ 96B8 3E F8        	ld a,$f8
 383+ 96BA 80           	add b
 384+ 96BB 32 83 89     	ld (CTRL_DESPLZ),a
 385+ 96BE 18 1C        	jr 3F
 386+ 96C0 21 7C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C5 32 83 89     	ld (CTRL_DESPLZ),a
 390+ 96C8 3A 8F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CD 20 0A        	jr nz,2F
 393+ 96CF 2A 7D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D2 23           	inc hl
 395+ 96D3 22 7D 89     	ld (Posicion_actual),hl
 396+ 96D6 CD 73 AC     	call Genera_coordenadas
 397+ 96D9
 398+ 96D9              ; Inicia el puntero de Sprite.
 399+ 96D9
 400+ 96D9 CD 83 8C     2 call Inicia_puntero_objeto_der
 401+ 96DC C9           3 ret
 402+ 96DD
 403+ 96DD              ; ******************************************************************************************************************************************************************************************
 404+ 96DD              ;
 405+ 96DD              ;	15/02/23
 406+ 96DD              ;
 407+ 96DD              ;	Mov_left.
 408+ 96DD              ;
 409+ 96DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DD              ;
 411+ 96DD              Mov_left
 412+ 96DD
 413+ 96DD 21 97 89     	ld hl,Ctrl_0
 414+ 96E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E2              ; 																	; _ en el caso de que no lo haya.
 417+ 96E2 3A 97 89     	ld a,(Ctrl_0)
 418+ 96E5 CB 77        	bit 6,a
 419+ 96E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E9
 421+ 96E9 CD FF 97     	call Stop_Amadeus_left
 422+ 96EC C8           	ret z
 423+ 96ED 20 4A        	jr nz,8F
 424+ 96EF
 425+ 96EF 3A 81 89     11 ld a,(Coordenada_X)
 426+ 96F2 A7           	and a
 427+ 96F3 20 44        	jr nz,8F
 428+ 96F5
 429+ 96F5 3A 83 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FB
 433+ 96FB              ; ---------- ---------- ----------
 434+ 96FB
 435+ 96FB 3A 9E 89     	ld a,(Vel_left)
 436+ 96FE FE 02        	cp 2
 437+ 9700 28 0F        	jr z,1F
 438+ 9702 38 04        	jr c,6F
 439+ 9704 FE 04        	cp 4
 440+ 9706 28 12        	jr z,7F
 441+ 9708
 442+ 9708              ; ---------- ---------- ----------
 443+ 9708
 444+ 9708 3A 83 89     6 ld a,(CTRL_DESPLZ)
 445+ 970B FE F8        	cp $f8
 446+ 970D 20 2A        	jr nz,8F
 447+ 970F 18 10        	jr 4F
 448+ 9711 3A 83 89     1 ld a,(CTRL_DESPLZ)
 449+ 9714 FE F9        	cp $f9
 450+ 9716 20 21        	jr nz,8F
 451+ 9718 18 07        	jr 4F
 452+ 971A 3A 83 89     7 ld a,(CTRL_DESPLZ)
 453+ 971D FE FB        	cp $fb
 454+ 971F 20 18        	jr nz,8F
 455+ 9721
 456+ 9721              ; ---------- ---------- ----------
 457+ 9721
 458+ 9721              4
 459+ 9721 CD 27 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9724              ;	call Reinicio
 461+ 9724
 462+ 9724              ; ---------- ---------- ----------
 463+ 9724
 464+ 9724 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9726 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9727
 467+ 9727              ;	ld hl,(Indice_Sprite_izq)
 468+ 9727              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9727
 470+ 9727 CD 40 97     	call DESPLZ_IZQ
 471+ 972A C1           	pop bc
 472+ 972B 10 F9        	djnz 5B
 473+ 972D 2A 7D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9730 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9731 22 7D 89     	ld (Posicion_actual),hl
 476+ 9734 CD 73 AC     	call Genera_coordenadas
 477+ 9737 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9739
 479+ 9739              ; ---------- ---------- ----------
 480+ 9739
 481+ 9739              ; Movemos, no hay recolocación.
 482+ 9739
 483+ 9739 2A 7D 89     8 ld hl,(Posicion_actual)
 484+ 973C CD 40 97     	call DESPLZ_IZQ
 485+ 973F C9           2 ret
 486+ 9740
 487+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9740              ;
 489+ 9740              ;	22/9/22
 490+ 9740
 491+ 9740              DESPLZ_IZQ
 492+ 9740
 493+ 9740 CD 4F 97     	call Desplaza_izquierda
 494+ 9743 CD 9B 97         call modifica_parametros_1er_DESPLZ
 495+ 9746 CD C3 97     	call Ciclo_completo_2
 496+ 9749 21 97 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974C CB BE        	res 7,(hl)
 498+ 974E C9           	ret
 499+ 974F
 500+ 974F              Desplaza_izquierda
 501+ 974F
 502+ 974F 3A 9E 89     	ld a,(Vel_left)
 503+ 9752 47           	ld b,a
 504+ 9753 2A 8B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9756 23           1 inc hl
 506+ 9757 23           	inc hl
 507+ 9758 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975A 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975D CD 6E 8C     	call Extrae_address
 510+ 9760 22 7F 89     	ld (Puntero_objeto),hl
 511+ 9763
 512+ 9763              ; Modifica (Puntero_DESPLZ_der).
 513+ 9763
 514+ 9763              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9763              ; Cuántos movimientos hemos hecho ??
 516+ 9763              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9763
 518+ 9763 2A 87 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9766 EB           	ex de,hl
 520+ 9767 A7           	and a
 521+ 9768 ED 52        	sbc hl,de
 522+ 976A CB 3D        	srl l
 523+ 976C 3E 08        6 ld a,8
 524+ 976E 95           	sub l
 525+ 976F 30 1E        	jr nc,3F
 526+ 9771
 527+ 9771              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9771              ; B="0".
 529+ 9771
 530+ 9771 04           4 inc b
 531+ 9772 3C           	inc a
 532+ 9773 20 FC        	jr nz,4B
 533+ 9775 78           	ld a,b
 534+ 9776 08           	ex af,af
 535+ 9777 2A 87 89     	ld hl,(Indice_Sprite_izq)
 536+ 977A 23           5 inc hl
 537+ 977B 23           	inc hl
 538+ 977C 10 FC        	djnz 5B
 539+ 977E 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9781 CD 6E 8C     	call Extrae_address
 541+ 9784 22 7F 89     	ld (Puntero_objeto),hl
 542+ 9787
 543+ 9787              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9787              ; _(Posicion_actual).
 545+ 9787
 546+ 9787 21 7D 89     	ld hl,Posicion_actual
 547+ 978A 35           	dec (hl)
 548+ 978B 08           	ex af,af
 549+ 978C 6F           	ld l,a
 550+ 978D 18 DD        	jr 6B
 551+ 978F
 552+ 978F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978F
 554+ 978F 47           3 ld b,a
 555+ 9790 2A 85 89     	ld hl,(Indice_Sprite_der)
 556+ 9793 23           2 inc hl
 557+ 9794 23           	inc hl
 558+ 9795 10 FC        	djnz 2B
 559+ 9797 22 89 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979A C9           8 ret
 561+ 979B
 562+ 979B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979B              ;
 564+ 979B              ;	modifica_parametros_1er_DESPLZ
 565+ 979B              ;
 566+ 979B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979B
 570+ 979B 3A 83 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979E A7           	and a
 572+ 979F 20 1E        	jr nz,1F
 573+ 97A1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A2 32 83 89         ld (CTRL_DESPLZ),a
 575+ 97A5 21 7C 89     	ld hl,Columns
 576+ 97A8 34           	inc (hl)
 577+ 97A9 3A 8F 89     	ld a,(Cuad_objeto)
 578+ 97AC E6 01        	and 1
 579+ 97AE 20 0F        	jr nz,1F
 580+ 97B0 2A 7D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B4 22 7D 89     	ld (Posicion_actual),hl
 583+ 97B7 CD 73 AC     	call Genera_coordenadas
 584+ 97BA CD 16 98     	call Dec_CTRL_DESPLZ
 585+ 97BD 18 03        	jr 2F
 586+ 97BF CD 16 98     1 call Dec_CTRL_DESPLZ
 587+ 97C2 C9           2 ret
 588+ 97C3
 589+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C3
 591+ 97C3 3A 83 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C6 FE F7        	cp $f7
 593+ 97C8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CA 30 2C        	jr nc,3F
 595+ 97CC
 596+ 97CC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CC
 598+ 97CC 06 00        	ld b,0
 599+ 97CE 04           4 inc b
 600+ 97CF 3C           	inc a
 601+ 97D0 FE F7        	cp $f7
 602+ 97D2 20 FA        	jr nz,4B
 603+ 97D4 3E FF        	ld a,$ff
 604+ 97D6 90           	sub b
 605+ 97D7 32 83 89     	ld (CTRL_DESPLZ),a
 606+ 97DA 18 1C        	jr 3F
 607+ 97DC
 608+ 97DC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DC
 610+ 97DC 21 7C 89     1 ld hl,Columns
 611+ 97DF 35           	dec (hl)
 612+ 97E0 AF           	xor a
 613+ 97E1 32 83 89     	ld (CTRL_DESPLZ),a
 614+ 97E4 3A 8F 89     	ld a,(Cuad_objeto)
 615+ 97E7 E6 01        	and 1
 616+ 97E9 28 0A        	jr z,2F
 617+ 97EB 2A 7D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EE 2B           	dec hl
 619+ 97EF 22 7D 89     	ld (Posicion_actual),hl
 620+ 97F2 CD 73 AC     	call Genera_coordenadas
 621+ 97F5
 622+ 97F5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F5
 624+ 97F5 CD 96 8C     2 call Inicia_puntero_objeto_izq
 625+ 97F8 C9           3 ret
 626+ 97F9
 627+ 97F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F9              ;
 629+ 97F9              ;	19/10/22
 630+ 97F9              ;
 631+ 97F9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F9
 634+ 97F9 3A 81 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FE C9           	ret
 637+ 97FF
 638+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FF              ;
 640+ 97FF              ;	19/10/22
 641+ 97FF              ;
 642+ 97FF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FF
 645+ 97FF 3A 81 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9802 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9804 C9           	ret
 648+ 9805
 649+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9805              ;
 651+ 9805              ;	24/7/22
 652+ 9805              ;
 653+ 9805              ;	Inc_CTRL_DESPLZ
 654+ 9805              ;
 655+ 9805              ;
 656+ 9805              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9805
 658+ 9805 21 83 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9808 3A 9F 89     	ld a,(Vel_right)
 660+ 980B A7           	and a
 661+ 980C 28 06        	jr z,1F
 662+ 980E 47           	ld b,a
 663+ 980F 34           3 inc (hl)
 664+ 9810 10 FD        	djnz 3B
 665+ 9812 18 01        	jr 2F
 666+ 9814 34           1 inc (hl)
 667+ 9815 C9           2 ret
 668+ 9816
 669+ 9816              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9816              ;
 671+ 9816              ;	5/2/23
 672+ 9816              ;
 673+ 9816              ;	Dec_CTRL_DESPLZ
 674+ 9816              ;
 675+ 9816              ;
 676+ 9816              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9816
 678+ 9816 21 83 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9819 3A 9E 89     	ld a,(Vel_left)
 680+ 981C A7           	and a
 681+ 981D 28 06        	jr z,1F
 682+ 981F 47           	ld b,a
 683+ 9820 35           3 dec (hl)
 684+ 9821 10 FD        	djnz 3B
 685+ 9823 18 01        	jr 2F
 686+ 9825 35           1 dec (hl)
 687+ 9826 C9           2 ret
 688+ 9827
 689+ 9827              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9827
 691+ 9827 2A 7D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982A 01 1F 00     	ld bc,31
 693+ 982D A7           	and a
 694+ 982E ED 4A        	adc hl,bc
 695+ 9830 22 7D 89     	ld (Posicion_actual),hl
 696+ 9833 21 97 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9836 CB C6        	set 0,(hl)
 698+ 9838 C9           	ret
 699+ 9839
 700+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9839
 702+ 9839 2A 7D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983C 01 1F 00     	ld bc,31
 704+ 983F A7           	and a
 705+ 9840 ED 42        	sbc hl,bc
 706+ 9842 22 7D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9845 21 97 89     	ld hl,Ctrl_0
 708+ 9848 CB CE        	set 1,(hl)
 709+ 984A C9           	ret
 710+ 984B
 711+ 984B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984B
 713+ 984B 24           Reaparece_abajo inc h
 714+ 984C 01 E0 17     	ld bc,$17e0
 715+ 984F A7           	and a
 716+ 9850 ED 4A        	adc hl,bc
 717+ 9852 22 7D 89     	ld (Posicion_actual),hl
 718+ 9855 21 97 89     	ld hl,Ctrl_0
 719+ 9858 CB D6        	set 2,(hl)
 720+ 985A C9           	ret
 721+ 985B
 722+ 985B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985B
 724+ 985B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985E A7           	and a
 726+ 985F ED 42        	sbc hl,bc
 727+ 9861 22 7D 89     	ld (Posicion_actual),hl
 728+ 9864 21 97 89     	ld hl,Ctrl_0
 729+ 9867 CB DE        	set 3,(hl)
 730+ 9869 C9           	ret
 731+ 986A
 732+ 986A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986A              ;
 734+ 986A              ;	15/07/23
 735+ 986A
 736+ 986A              Reinicio
 737+ 986A
 738+ 986A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986A
 740+ 986A AF           	xor a
 741+ 986B 21 AE 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986E CD 8C 98     	call Limpia_contenido_hl
 743+ 9871
 744+ 9871 21 7D 89     	ld hl,Posicion_actual
 745+ 9874 CD 8C 98     	call Limpia_contenido_hl
 746+ 9877
 747+ 9877 CD A0 AA     	call Inicializa_Puntero_indice_mov
 748+ 987A CD 58 99     	call Inicia_Puntero_mov
 749+ 987D
 750+ 987D 21 B0 89     	ld hl,Incrementa_puntero
 751+ 9880 06 05        	ld b,5
 752+ 9882 77           1 ld (hl),a
 753+ 9883 23           	inc hl
 754+ 9884 10 FC        	djnz 1B
 755+ 9886
 756+ 9886 21 9C 89     	ld hl,Ctrl_2
 757+ 9889 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988B
 759+ 988B C9           	ret
 760+ 988C
 761+ 988C 77           Limpia_contenido_hl	ld (hl),a
 762+ 988D 23           	inc hl
 763+ 988E 77           	ld (hl),a
 764+ 988F C9           	ret
 765+ 9890
 766+ 9890
# file closed: Direcciones.asm
2046  9890              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9890              ; ----- ----- ----- ----- -----
   2+ 9890              ;
   3+ 9890              ;   28/12/23
   4+ 9890
   5+ 9890              Movimiento
   6+ 9890
   7+ 9890              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9890
   9+ 9890 3A 9C 89         ld a,(Ctrl_2)
  10+ 9893 CB 57            bit 2,a
  11+ 9895 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9897
  13+ 9897 2A AC 89         ld hl,(Puntero_mov)
  14+ 989A 7E               ld a,(hl)
  15+ 989B
  16+ 989B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989B
  18+ 989B              Inicia_desplazamiento.
  19+ 989B
  20+ 989B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989B
  22+ 989B CD 8E 99         call Ajusta_velocidad_desplazamiento
  23+ 989E
  24+ 989E              ; Iniciamos (Repetimos_mov).
  25+ 989E
  26+ 989E 7E               ld a,(hl)
  27+ 989F E6 0F            and $0f
  28+ 98A1 32 B2 89         ld (Repetimos_desplazamiento),a
  29+ 98A4 32 B3 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A7
  31+ 98A7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A7
  33+ 98A7 23               inc hl
  34+ 98A8 7E               ld a,(hl)
  35+ 98A9 32 B5 89         ld (Cola_de_desplazamiento),a
  36+ 98AC 2B               dec hl
  37+ 98AD
  38+ 98AD 21 9C 89         ld hl,Ctrl_2
  39+ 98B0 CB D6            set 2,(hl)
  40+ 98B2
  41+ 98B2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B2
  44+ 98B2              Desplazamiento_iniciado
  45+ 98B2
  46+ 98B2 CD 62 99         call Aplica_desplazamiento
  47+ 98B5
  48+ 98B5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B5
  50+ 98B5 3A DE 89         ld a,(Ctrl_3)
  51+ 98B8 CB 4F            bit 1,a
  52+ 98BA C0               ret nz
  53+ 98BB
  54+ 98BB 21 B2 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BE 35               dec (hl)
  56+ 98BF C0               ret nz
  57+ 98C0
  58+ 98C0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C0              ; Analiza (Cola_de_desplazamiento).
  61+ 98C0
  62+ 98C0 3A B5 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C3 A7               and a
  64+ 98C4 CC B7 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C7 28 30            jr z,Reinicia_el_movimiento
  66+ 98C9
  67+ 98C9 FE FF            cp $ff
  68+ 98CB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CD
  70+ 98CD FE FE            cp $fe
  71+ 98CF CC 3C 99         call z,Fijamos_bucle
  72+ 98D2 28 25            jr z,Reinicia_el_movimiento
  73+ 98D4
  74+ 98D4 FE FD            cp $fd
  75+ 98D6 20 11            jr nz,1F
  76+ 98D8
  77+ 98D8              ; ---
  78+ 98D8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D8
  80+ 98D8 3A 9C 89         ld a,(Ctrl_2)
  81+ 98DB CB 5F            bit 3,a
  82+ 98DD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DF
  84+ 98DF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DF
  86+ 98DF 21 9C 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E4
  89+ 98E4 CD 4D 99         call Inicia_Repetimos_movimiento
  90+ 98E7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E9              ; ---
  92+ 98E9
  93+ 98E9 FE 01        1 cp 1
  94+ 98EB CA 26 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98EE
  96+ 98EE 3D               dec a
  97+ 98EF 32 B5 89         ld (Cola_de_desplazamiento),a
  98+ 98F2
  99+ 98F2 3A B3 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F5 32 B2 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F8 C9               ret
 103+ 98F9
 104+ 98F9              Reinicia_el_movimiento
 105+ 98F9
 106+ 98F9 3A 9C 89         ld a,(Ctrl_2)
 107+ 98FC CB 5F            bit 3,a
 108+ 98FE 28 1B            jr z,2F
 109+ 9900
 110+ 9900              ; (Cola_de_desplazamiento)="254".
 111+ 9900
 112+ 9900 21 B4 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9903 35               dec (hl)
 114+ 9904 20 15            jr nz,2F
 115+ 9906
 116+ 9906              ; Fin de las repeticiones del último movimiento.
 117+ 9906
 118+ 9906 21 9C 89         ld hl,Ctrl_2
 119+ 9909 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990B
 121+ 990B 2A AC 89         ld hl,(Puntero_mov)
 122+ 990E 23               inc hl
 123+ 990F 23               inc hl
 124+ 9910 23               inc hl
 125+ 9911 22 AC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9914              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9914 7E               ld a,(hl)
 128+ 9915 32 B5 89         ld (Cola_de_desplazamiento),a
 129+ 9918
 130+ 9918 C3 C0 98         jp Cola
 131+ 991B
 132+ 991B CD 58 99     2 call Inicia_Puntero_mov
 133+ 991E
 134+ 991E 21 9C 89         ld hl,Ctrl_2
 135+ 9921 CB 96            res 2,(hl)
 136+ 9923
 137+ 9923 C3 90 98         jp Movimiento
 138+ 9926
 139+ 9926              Siguiente_desplazamiento
 140+ 9926
 141+ 9926              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9926              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9926
 144+ 9926 21 9C 89         ld hl,Ctrl_2
 145+ 9929 CB 96            res 2,(hl)
 146+ 992B
 147+ 992B 2A AC 89         ld hl,(Puntero_mov)
 148+ 992E 23               inc hl
 149+ 992F 23               inc hl
 150+ 9930 22 AC 89         ld (Puntero_mov),hl
 151+ 9933
 152+ 9933 7E               ld a,(hl)
 153+ 9934 A7               and a
 154+ 9935 CC B7 99         call z,Incrementa_Puntero_indice_mov
 155+ 9938 CA F9 98         jp z,Reinicia_el_movimiento
 156+ 993B
 157+ 993B C9               ret
 158+ 993C
 159+ 993C              ; Subrutinas -----------------------------------------
 160+ 993C              ; ---------- --------- --------- ---------- ----------
 161+ 993C              ;
 162+ 993C              ;   24/07/23
 163+ 993C              ;
 164+ 993C              ;   Fijamos_bucle
 165+ 993C              ;
 166+ 993C              ;
 167+ 993C
 168+ 993C              Fijamos_bucle
 169+ 993C
 170+ 993C 3A B0 89         ld a,(Incrementa_puntero)
 171+ 993F 3C               inc a
 172+ 9940 32 B1 89         ld (Incrementa_puntero_backup),a
 173+ 9943
 174+ 9943 CD B7 99         call Incrementa_Puntero_indice_mov
 175+ 9946 2A AA 89         ld hl,(Puntero_indice_mov)
 176+ 9949 22 AE 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994C C9               ret
 178+ 994D
 179+ 994D              ; ---------- --------- --------- ---------- ----------
 180+ 994D              ;
 181+ 994D              ;   07/7/23
 182+ 994D              ;
 183+ 994D              ;   Inicia_Repetimos_movimiento
 184+ 994D              ;
 185+ 994D              ;
 186+ 994D
 187+ 994D              Inicia_Repetimos_movimiento
 188+ 994D
 189+ 994D              ; Iniciamos (Repetimos_movimiento).
 190+ 994D
 191+ 994D DD 2A AC 89      ld ix,(Puntero_mov)
 192+ 9951 DD 7E 02         ld a,(ix+2)
 193+ 9954 32 B4 89         ld (Repetimos_movimiento),a
 194+ 9957
 195+ 9957 C9               ret
 196+ 9958
 197+ 9958              ; ---------- --------- --------- ---------- ----------
 198+ 9958              ;
 199+ 9958              ;   26/6/23
 200+ 9958              ;
 201+ 9958              ;   Inicia_Puntero_mov
 202+ 9958              ;
 203+ 9958              ;
 204+ 9958
 205+ 9958 2A AA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995B CD 6E 8C         call Extrae_address
 207+ 995E 22 AC 89         ld (Puntero_mov),hl
 208+ 9961 C9               ret
 209+ 9962
 210+ 9962              ; ---------- --------- --------- ---------- ----------
 211+ 9962              ;
 212+ 9962              ;   27/06/23
 213+ 9962              ;
 214+ 9962              ;   Aplica_movimiento.
 215+ 9962
 216+ 9962              Aplica_desplazamiento
 217+ 9962
 218+ 9962              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9962
 220+ 9962 2A AC 89         ld hl, (Puntero_mov)
 221+ 9965
 222+ 9965 7E               ld a,(hl)
 223+ 9966 E6 F0            and $f0
 224+ 9968 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9969
 226+ 9969 CB 7E            bit 7,(hl)
 227+ 996B 28 03            jr z,1F
 228+ 996D CD 77 95         call Mov_up
 229+ 9970 2A AC 89     1 ld hl, (Puntero_mov)
 230+ 9973 CB 76            bit 6,(hl)
 231+ 9975 28 03            jr z,2F
 232+ 9977 CD 3E 95         call Mov_down
 233+ 997A
 234+ 997A              ; Se ha aplicado reinicio ???
 235+ 997A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997A
 237+ 997A              ;    ld a,(Ctrl_3)
 238+ 997A              ;    bit 1,a
 239+ 997A              ;    ret nz
 240+ 997A
 241+ 997A 2A AC 89     2 ld hl, (Puntero_mov)
 242+ 997D CB 6E            bit 5,(hl)
 243+ 997F 28 03            jr z,3F
 244+ 9981 CD DD 96         call Mov_left
 245+ 9984 2A AC 89     3 ld hl, (Puntero_mov)
 246+ 9987 CB 66            bit 4,(hl)
 247+ 9989 C8               ret z
 248+ 998A CD BA 95         call Mov_right
 249+ 998D C9               ret
 250+ 998E
 251+ 998E              ; ---------- --------- --------- ---------- ----------
 252+ 998E              ;
 253+ 998E              ;   26/06/23
 254+ 998E              ;
 255+ 998E              ;   Ajusta_velocidad_desplazamiento.
 256+ 998E
 257+ 998E              Ajusta_velocidad_desplazamiento
 258+ 998E
 259+ 998E              ; 1er byte de la cadena de movimiento.
 260+ 998E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998E
 262+ 998E CD AC 99         call Extrae_nibble_alto
 263+ 9991
 264+ 9991 32 A0 89         ld (Vel_up),a
 265+ 9994 79               ld a,c
 266+ 9995 E6 0F            and $0f
 267+ 9997 32 A1 89         ld (Vel_down),a
 268+ 999A
 269+ 999A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999A
 272+ 999A 23               inc hl
 273+ 999B CD AC 99         call Extrae_nibble_alto
 274+ 999E
 275+ 999E 32 9E 89         ld (Vel_left),a
 276+ 99A1 79               ld a,c
 277+ 99A2 E6 0F            and $0f
 278+ 99A4 32 9F 89         ld (Vel_right),a
 279+ 99A7
 280+ 99A7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A7
 282+ 99A7 23               inc hl
 283+ 99A8 22 AC 89         ld (Puntero_mov),hl
 284+ 99AB C9               ret
 285+ 99AC
 286+ 99AC 06 04        Extrae_nibble_alto ld b,4
 287+ 99AE 7E               ld a,(hl)
 288+ 99AF 4F               ld c,a
 289+ 99B0 E6 F0            and $f0
 290+ 99B2 CB 3F        1 srl a
 291+ 99B4 10 FC            djnz 1B
 292+ 99B6 C9               ret
 293+ 99B7
 294+ 99B7              ; ---------- --------- --------- ---------- ----------
 295+ 99B7              ;
 296+ 99B7              ;   5/7/23
 297+ 99B7              ;
 298+ 99B7              ;   Incrementa_Puntero_indice_mov
 299+ 99B7
 300+ 99B7              Incrementa_Puntero_indice_mov
 301+ 99B7
 302+ 99B7 21 B0 89         ld hl,Incrementa_puntero
 303+ 99BA 34               inc (hl)
 304+ 99BB
 305+ 99BB 2A AA 89         ld hl,(Puntero_indice_mov)
 306+ 99BE 01 02 00         ld bc,2
 307+ 99C1 A7               and a
 308+ 99C2 09               add hl,bc
 309+ 99C3 22 AA 89         ld (Puntero_indice_mov),hl
 310+ 99C6
 311+ 99C6 7E               ld a,(hl)
 312+ 99C7 A7               and a
 313+ 99C8
 314+ 99C8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C8
 316+ 99C8              ;    jr z,$
 317+ 99C8
 318+ 99C8              ;! Reinicia el Patrón de movimiento.
 319+ 99C8
 320+ 99C8 CC CD 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CB
 322+ 99CB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CC
 324+ 99CC C9               ret
 325+ 99CD
 326+ 99CD              ; ---------- --------- --------- ---------- ----------
 327+ 99CD              ;
 328+ 99CD              ;   15/01/24
 329+ 99CD              ;
 330+ 99CD              ;   Inicializa_Puntero_indice_mov
 331+ 99CD
 332+ 99CD              Inicializa_Puntero_indice_mov_2
 333+ 99CD
 334+ 99CD              ; Existe etiqueta de bucle principal???
 335+ 99CD
 336+ 99CD 2A AE 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D0 24               inc h
 338+ 99D1 25               dec h
 339+ 99D2 28 05            jr z,2F
 340+ 99D4
 341+ 99D4 22 AA 89         ld (Puntero_indice_mov),hl
 342+ 99D7 18 14            jr 3F
 343+ 99D9
 344+ 99D9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D9
 346+ 99D9 3A B0 89     2 ld a,(Incrementa_puntero)
 347+ 99DC 47               ld b,a
 348+ 99DD
 349+ 99DD 2A AA 89         ld hl,(Puntero_indice_mov)
 350+ 99E0 2B           1 dec hl
 351+ 99E1 2B               dec hl
 352+ 99E2 10 FC            djnz 1B
 353+ 99E4 22 AA 89         ld (Puntero_indice_mov),hl
 354+ 99E7
 355+ 99E7 AF               xor a
 356+ 99E8 32 B0 89         ld (Incrementa_puntero),a
 357+ 99EB 18 06            jr 4F
 358+ 99ED
 359+ 99ED 3A B1 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F0 32 B0 89         ld (Incrementa_puntero),a
 361+ 99F3 C9           4 ret
 362+ 99F4
 363+ 99F4              ; ----------------------------------------------------------------------
 364+ 99F4              ;
 365+ 99F4              ;   30/01/24
 366+ 99F4              ;
 367+ 99F4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F4
 369+ 99F4 3A 7A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F7 CD D4 AB         call Calcula_salto_en_BC
 371+ 99FA 21 A2 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FD A7               and a
 373+ 99FE ED 4A            adc hl,bc
 374+ 9A00 C9               ret
 375+ 9A01
 376+ 9A01              ; ----------------------------------------------------------------------
 377+ 9A01              ;
 378+ 9A01              ;   30/01/24
 379+ 9A01              ;
 380+ 9A01              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A01              ;
 382+ 9A01              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A01
 384+ 9A01 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A02 23               inc hl
 386+ 9A03 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A04 69               ld l,c
 388+ 9A05 60               ld h,b
 389+ 9A06 22 95 89         ld (Contador_de_mov_masticados),hl
 390+ 9A09 C9               ret
 391+ 9A0A
# file closed: Movimiento.asm
2047  9A0A
2048  9A0A
2049  9A0A              ;	include "Disparo.asm"
2050  9A0A
2051  9A0A
2052  9A0A              	SAVESNA "Pruebas.sna", START
2053  9A0A
2054  9A0A
2055  9A0A
2056  9A0A
# file closed: Banco_de_pruebas.asm
