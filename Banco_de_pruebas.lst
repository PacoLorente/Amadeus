# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8284	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $828c	;	($828c - $82bd)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82c0	;	($82c0 - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82f4
  60  82F4
  61  82F4 F5           	push af
  62  82F5 E5           	push hl
  63  82F6
  64  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82F6 21 33 8C     	ld hl,Ctrl_3
  66  82F9 CB 46        	bit 0,(hl)
  67  82FB 28 FE        	jr z,$
  68  82FD              ;! -------------------
  69  82FD
  70  82FD              ; Disparos.
  71  82FD
  72  82FD CD 3D A1     	call Pinta_disparos_Amadeus
  73  8300
  74  8300              ; Shield -----------------------
  75  8300
  76  8300              Temporizacion_shield
  77  8300
  78  8300 21 5D 8C     	ld hl,Shield
  79  8303 7E           	ld a,(hl)
  80  8304 A7           	and a
  81  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  82  8307
  83  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  84  8308
  85  8308 23           	inc hl
  86  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  87  830A
  88  830A 20 17        	jr nz,Incrementa_FRAMES
  89  830C
  90  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  91  830C
  92  830C              Cambio_de_estado
  93  830C
  94  830C              ;	Indica cambio de estado.
  95  830C
  96  830C 23           	inc hl						;	Sitúa en (Shield_3).
  97  830D
  98  830D CB 5E        	bit 3,(hl)
  99  830F 28 05        	jr z,2F
 100  8311
 101  8311 CD 1A 91     	call Inicia_Shield
 102  8314
 103  8314 18 0D        	jr Incrementa_FRAMES
 104  8316
 105  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 106  8318
 107  8318              ;	Carga en (Shield_2) la siguiente temporización.
 108  8318
 109  8318 2A 5B 8C     	ld hl,(Puntero_datos_shield)
 110  831B 23           	inc hl
 111  831C 22 5B 8C     	ld (Puntero_datos_shield),hl
 112  831F 7E           	ld a,(hl)
 113  8320 32 5E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 114  8323
 115  8323              Incrementa_FRAMES
 116  8323
 117  8323 2A 78 5C     	ld hl,(FRAMES)
 118  8326 23           	inc hl
 119  8327 22 78 5C     	ld (FRAMES),hl
 120  832A
 121  832A 7C           	ld a,h
 122  832B B5           	or l
 123  832C 20 04        	jr nz,1F
 124  832E
 125  832E 21 7A 5C     	ld hl,FRAMES_3
 126  8331 34           	inc (hl)
 127  8332
 128  8332 D5           1 push de
 129  8333 C5           	push bc
 130  8334
 131  8334 CD 2A 91     	call Actualiza_pantalla
 132  8337
 133  8337 C1           	pop bc
 134  8338 D1           	pop de
 135  8339 E1           	pop hl
 136  833A F1           	pop af
 137  833B
 138  833B FB           	ei
 139  833C
 140  833C C9           	ret
 141  833D
 142  833D              ; --------------------------------------------------------------------------------
 143  833D
 144  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 145  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 146  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 147  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D AE 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BAC 01 01
  18+ 8BAE
  19+ 8BAE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAF 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB7 01 02
  22+ 8BB9 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BBD 01 02
  23+ 8BBF
# file closed: Niveles.asm
 148  8BBF
 149  8BBF              ; --------------------------------------------------------------------------------
 150  8BBF              ;
 151  8BBF              ; 12/05/24
 152  8BBF              ;
 153  8BBF              ; Parámetros DRAW.
 154  8BBF              ;
 155  8BBF
 156  8BBF              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 157  8BBF
 158  8BBF 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 159  8BC0              ;															- Patrón de movimiento.
 160  8BC0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 161  8BC1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 162  8BC2
 163  8BC2 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 164  8BC3              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 165  8BC3
 166  8BC3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 167  8BC3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 168  8BC3              ; Ejemplos.
 169  8BC3
 170  8BC3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 171  8BC3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 172  8BC3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 173  8BC3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 174  8BC3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 175  8BC3
 176  8BC3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 177  8BC4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 178  8BC4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 179  8BC4
 180  8BC4 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 181  8BC6              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 182  8BC6
 183  8BC6 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 184  8BC8
 185  8BC8              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 186  8BC8
 187  8BC8 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 188  8BCA              ;														; _palabras que componen el "movimiento_masticado".
 189  8BCA
 190  8BCA              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 191  8BCA
 192  8BCA 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 193  8BCB              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 194  8BCB              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 195  8BCB              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 196  8BCB              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 197  8BCB
 198  8BCB 00           Ctrl_2 db 0
 199  8BCC              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  8BCC              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 201  8BCC              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  8BCC              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  8BCC              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  8BCC              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  8BCC              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  8BCC              ;
 207  8BCC              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  8BCC              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  8BCC              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  8BCC              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  8BCC              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  8BCC              ;														BIT 4, ???
 213  8BCC              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 214  8BCC
 215  8BCC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 216  8BCD              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 217  8BCD              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 218  8BCD              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 219  8BCD              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 220  8BCD              ;
 221  8BCD              ; 														DESCRIPCIÖN:
 222  8BCD              ;
 223  8BCD              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 224  8BCD              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 225  8BCD              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 226  8BCD              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 227  8BCD              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 228  8BCD              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 229  8BCD              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 230  8BCD              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 231  8BCD              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 232  8BCD              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 233  8BCD              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 234  8BCD              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 235  8BCD              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 236  8BCD              ;
 237  8BCD              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 238  8BCD              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 239  8BCD              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 240  8BCD
 241  8BCD              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 242  8BCD
 243  8BCD 00           Filas db 0												; Filas. [DRAW]
 244  8BCE 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 245  8BCF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 246  8BD1 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 247  8BD3
 248  8BD3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 249  8BD3
 250  8BD3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 251  8BD4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 252  8BD4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 253  8BD4
 254  8BD4              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 255  8BD4
 256  8BD4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 257  8BD4              ;
 258  8BD4              ;	COLORES: 0 ..... NEGRO
 259  8BD4              ;    		 1 ..... AZUL
 260  8BD4              ; 			 2 ..... ROJO
 261  8BD4              ;			 3 ..... MAGENTA
 262  8BD4              ; 			 4 ..... VERDE
 263  8BD4              ; 			 5 ..... CIAN
 264  8BD4              ;			 6 ..... AMARILLO
 265  8BD4              ; 			 7 ..... BLANCO
 266  8BD4
 267  8BD4 00 00        Indice_Sprite_der defw 0
 268  8BD6 00 00        Indice_Sprite_izq defw 0
 269  8BD8 00 00        Puntero_DESPLZ_der defw 0
 270  8BDA 00 00        Puntero_DESPLZ_izq defw 0
 271  8BDC
 272  8BDC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 273  8BDE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 274  8BDF 00           Columnas db 0
 275  8BE0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 276  8BE2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 277  8BE2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE3
 279  8BE3              ; variables de control general.
 280  8BE3
 281  8BE3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 282  8BE4
 283  8BE4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  8BE4
 285  8BE4              Perfiles_de_velocidad
 286  8BE4
 287  8BE4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  8BE5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  8BE6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  8BE7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  8BE8
 292  8BE8              ; Contadores de 16 bits.
 293  8BE8
 294  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  8BEC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  8BEE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  8BF0
 299  8BF0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  8BF0
 301  8BF0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 302  8BF2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 303  8BF4 00 00        Puntero_indice_mov_bucle defw 0							;
 304  8BF6              ;
 305  8BF6              ;
 306  8BF6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 307  8BF7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 308  8BF7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 309  8BF7 00           Incrementa_puntero_backup db 0
 310  8BF8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 311  8BF9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 312  8BF9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 313  8BFA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 314  8BFB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 315  8BFC              ;
 316  8BFC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 317  8BFC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 318  8BFC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 319  8BFC              ;
 320  8BFC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 321  8BFC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 322  8BFC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 323  8BFC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 324  8BFC              ;
 325  8BFC              ;														;	"$ff" ..... Bucle infinito de repetición.
 326  8BFC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 327  8BFC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 328  8BFC
 329  8BFC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 330  8BFD
 331  8BFD              ;														DESCRIPCIÓN:
 332  8BFD              ;
 333  8BFD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 334  8BFD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 335  8BFD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 336  8BFD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 337  8BFD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 338  8BFD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 339  8BFD
 340  8BFD              ;														BIT 3, Recarga de nueva oleada.
 341  8BFD              ;														BIT 4, Recarga de nueva oleada.
 342  8BFD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 343  8BFD              ;														BIT 6, **** Frame completo.
 344  8BFD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 345  8BFD
 346  8BFD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 347  8BFF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 348  8BFF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 349  8BFF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 350  8BFF
 351  8BFF              ; Gestión de ENTIDADES y CAJAS.
 352  8BFF
 353  8BFF 00 00        Puntero_store_caja defw 0
 354  8C01 00 00        Puntero_restore_caja defw 0
 355  8C03 00 00        Indice_restore_caja defw 0
 356  8C05 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 357  8C06 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 358  8C07 00           Entidades_en_curso db 0									; ..... ..... .....
 359  8C08
 360  8C08 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C0A 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C0C              ;														; _ puntero (Indice_entidades).
 363  8C0C
 364  8C0C              ;---------------------------------------------------------------------------------------------------------------
 365  8C0C              ;
 366  8C0C              ;	13/10/24
 367  8C0C              ;
 368  8C0C              ;	Álbumes.
 369  8C0C
 370  8C0C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0E              ;														; _variable para almacenar lo posición del puntero_
 372  8C0E              ; 														; _de pila, SP.
 373  8C0E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C10              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C10
 376  8C10              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C10
 378  8C10 00 00        Album_de_pintado defw 0
 379  8C12 00 00        Album_de_borrado defw 0
 380  8C14 00 00        Album_de_pintado_Amadeus defw 0
 381  8C16 00 00        Album_de_borrado_Amadeus defw 0
 382  8C18
 383  8C18 00 00        Album_de_pintado_disparos_Amadeus defw 0
 384  8C1A 00 00        Album_de_borrado_disparos_Amadeus defw 0
 385  8C1C
 386  8C1C 00 00        Album_de_pintado_disparos_Entidades defw 0
 387  8C1E 00 00        Album_de_borrado_disparos_Entidades defw 0
 388  8C20
 389  8C20
 390  8C20 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 391  8C22 00           Num_de_bytes_album_de_disparos db 0
 392  8C23
 393  8C23 07           Numero_de_disparos_de_entidades db 7
 394  8C24
 395  8C24 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 396  8C25 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 397  8C26
 398  8C26 00 00        Techo_Scanlines_album defw 0
 399  8C28 00 00        Techo_Scanlines_album_2 defw 0
 400  8C2A 00           Switch db 0
 401  8C2B 00 00        Techo defw 0
 402  8C2D 00 00        Scanlines_album_SP defw 0
 403  8C2F 00 89        India_SP defw Tabla_de_pintado
 404  8C31 03 89        India_2_SP defw Tabla_de_pintado+3
 405  8C33
 406  8C33 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 407  8C34              ;
 408  8C34              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 409  8C34              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 410  8C34              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 411  8C34              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 412  8C34              ;																Habilita el borrado/pintado de sprites.
 413  8C34              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 414  8C34              ;																_ a la baja.
 415  8C34              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 416  8C34              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 417  8C34              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 418  8C34              ; 																_ el último frame de la explosión de nuestra nave.
 419  8C34              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 420  8C34              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 421  8C34
 422  8C34 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 423  8C35              ;
 424  8C35              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 425  8C35              ;
 426  8C35              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 427  8C35              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 428  8C35              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 429  8C35              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 430  8C35              ;
 431  8C35              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 432  8C35              ;															_ masticados ya generados.
 433  8C35              ;
 434  8C35              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 435  8C35              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 436  8C35              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 437  8C35              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 438  8C35
 439  8C35 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 440  8C36              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 441  8C36
 442  8C36
 443  8C36
 444  8C36
 445  8C36
 446  8C36              ; Gestión de Disparos.
 447  8C36
 448  8C36 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C38 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C3A 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C3B
 452  8C3B              ;
 453  8C3B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C3B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C3B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C3B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C3B
 458  8C3B
 459  8C3B
 460  8C3B
 461  8C3B
 462  8C3B
 463  8C3B
 464  8C3B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C3D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C3D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C3D
 468  8C3D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C3F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C3F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C42              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C42 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C45              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C45
 475  8C45              ;---------------------------------------------------------------------------------------------------------------
 476  8C45
 477  8C45              ; Relojes y temporizaciones.
 478  8C45
 479  8C45 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 480  8C46 05           Clock_explosion_Amadeus db 5
 481  8C47 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C48
 483  8C48 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C4A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C4C 00           Numero_rnd_disparos db 0
 486  8C4D
 487  8C4D 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 488  8C4F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C50              ;														; Repite la oleada de entidades.
 490  8C50 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 491  8C51 A0           CLOCK_disparos_de_entidades db $a0
 492  8C52
 493  8C52              ;---------------------------------------------------------------------------------------------------------------
 494  8C52
 495  8C52              ; Gestión de NIVELES.
 496  8C52
 497  8C52 00           Nivel db 0												; Nivel actual del juego.
 498  8C53 00 00        Puntero_indice_NIVELES defw 0
 499  8C55 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C57              ; 														; _ que definen el NIVEL.
 501  8C57
 502  8C57              ; ---------------------------------------------------------------------------------------------------------------
 503  8C57
 504  8C57              ; Temporizaciones Shield.
 505  8C57
 506  8C57 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C5B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C5D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C5E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C5F 00           Shield_3 db 0
 511  8C60
 512  8C60 06           Lives db 6
 513  8C61
 514  8C61              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C61              ;
 516  8C61              ;	5/1/24
 517  8C61
 518  8C61              START
 519  8C61
 520  8C61 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C64 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C66 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C68 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C6A F3           	DI
 525  8C6B
 526  8C6B              ; Limpiamos pantalla.
 527  8C6B
 528  8C6B 3E 07        	ld a,%00000111
 529  8C6D CD B7 94     	call Cls
 530  8C70 CD 0F 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C73
 532  8C73              ; INICIALIZACIÓN.
 533  8C73
 534  8C73 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C75 CD 5C 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C78
 537  8C78 CD A4 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C7B
 539  8C7B 6F           	ld l,a
 540  8C7C 26 00        	ld h,0
 541  8C7E 22 4D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C81
 543  8C81              ;	Inicializa 1er Nivel.
 544  8C81
 545  8C81 21 9B 8B     	ld hl,Indice_de_niveles
 546  8C84 22 53 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C87 CD 8C 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C8A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C8A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C8A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C8A
 552  8C8A              ;	Inicia los álbumes de líneas.
 553  8C8A
 554  8C8A CD 5D 90     	call Inicia_albumes_de_lineas
 555  8C8D              ;
 556  8C8D CD 6D 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C90 CD 7A 90     	call Inicia_albumes_de_disparos
 558  8C93
 559  8C93 CD D1 92     4 call Inicia_Entidades
 560  8C96 CD 34 93     	call Inicia_Amadeus
 561  8C99
 562  8C99              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C99              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C99              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C99
 566  8C99 11 74 89     	ld de,Amadeus_BOX
 567  8C9C CD 87 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C9F CD 77 93     	call Limpiamos_bandeja_DRAW
 569  8CA2
 570  8CA2              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8CA2
 572  8CA2 06 3C        	ld b,60
 573  8CA4 CD 5D 9D     2 call Amadeus_a_izquierda
 574  8CA7 10 FB        	djnz 2B
 575  8CA9
 576  8CA9 CD 3B 90     	call Genera_datos_de_impresion_Amadeus
 577  8CAC
 578  8CAC              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CAC
 580  8CAC CD 96 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CAF              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 582  8CAF
 583  8CAF              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 584  8CAF              ; (Esto se dá cuando se inicia una nueva oleada).
 585  8CAF
 586  8CAF              ;	ld a,(Ctrl_1)
 587  8CAF              ;	bit 3,a
 588  8CAF              ;	jr nz,5F											 ; Loop
 589  8CAF
 590  8CAF              ;	ld de,Amadeus_db
 591  8CAF              ;	call Store_Amadeus
 592  8CAF
 593  8CAF              ; 	INICIA DISPAROS !!!!!
 594  8CAF
 595  8CAF              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 596  8CAF
 597  8CAF              ;5 call Inicia_punteros_de_cajas
 598  8CAF              ;	call Restore_entidad
 599  8CAF
 600  8CAF              ;	ld a,(Ctrl_1)
 601  8CAF              ;	bit 3,a
 602  8CAF              ;	jr z,6F
 603  8CAF
 604  8CAF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 605  8CAF
 606  8CAF              ;	ld hl,Ctrl_1
 607  8CAF              ;	res 3,(hl)
 608  8CAF              ;	jr Main
 609  8CAF
 610  8CAF              ; Damos por concluida la construcción del FRAME.
 611  8CAF              ;
 612  8CAF
 613  8CAF CD 1A 91     	call Inicia_Shield
 614  8CB2
 615  8CB2
 616  8CB2 2A 2D 8C     6 ld hl,(Scanlines_album_SP)
 617  8CB5 22 26 8C     	ld (Techo_Scanlines_album),hl
 618  8CB8
 619  8CB8 2A 12 8C     	ld hl,(Album_de_borrado)
 620  8CBB 22 2D 8C     	ld (Scanlines_album_SP),hl
 621  8CBE
 622  8CBE 21 00 89     	ld hl,Tabla_de_pintado
 623  8CC1 22 2F 8C     	ld (India_SP),hl
 624  8CC4
 625  8CC4 21 33 8C     	ld hl,Ctrl_3
 626  8CC7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 627  8CC9 CB D6        	set 2,(hl)
 628  8CCB CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 629  8CCD
 630  8CCD FB           	ei 													; Ha de apuntar a $5c3a.
 631  8CCE
 632  8CCE 76           	halt
 633  8CCF
 634  8CCF              ; ------------------------------------
 635  8CCF
 636  8CCF              Main
 637  8CCF              ;
 638  8CCF              ; 20/09/24
 639  8CCF
 640  8CCF              ;    ld a,(Ctrl_5)
 641  8CCF              ;    bit 2,a
 642  8CCF              ;    di
 643  8CCF              ;    jr nz,$
 644  8CCF              ;    ei
 645  8CCF
 646  8CCF              ; Gestión de disparos.
 647  8CCF
 648  8CCF CD 7B 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 649  8CD2              ;	call Motor_de_disparos_entidades
 650  8CD2 CD E9 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 651  8CD5
 652  8CD5
 653  8CD5
 654  8CD5
 655  8CD5
 656  8CD5              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 657  8CD5              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 658  8CD5              ; Este hecho lo indica el bit2 de (Impacto2).
 659  8CD5
 660  8CD5 CD 86 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 661  8CD8
 662  8CD8              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 663  8CD8
 664  8CD8 21 51 8C     	ld hl,CLOCK_disparos_de_entidades
 665  8CDB 35           	dec (hl)
 666  8CDC CC C4 8D     	call z,Autoriza_disparo_de_entidades
 667  8CDF
 668  8CDF 2A 4D 8C     	ld hl,(Clock_next_entity)
 669  8CE2 ED 4B 78 5C  	ld bc,(FRAMES)
 670  8CE6 A7           	and a
 671  8CE7 ED 42        	sbc hl,bc
 672  8CE9 20 16        	jr nz,1F
 673  8CEB
 674  8CEB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 675  8CEB              ; _ (Clock_next_entity) para la siguiente entidad.
 676  8CEB
 677  8CEB 3A 06 8C     	ld a,(Numero_parcial_de_entidades)
 678  8CEE 47           	ld b,a
 679  8CEF 3A 07 8C     	ld a,(Entidades_en_curso)
 680  8CF2 B8           	cp b
 681  8CF3 28 0C        	jr z,1F
 682  8CF5 30 0A        	jr nc,1F
 683  8CF7
 684  8CF7 3C           	inc a
 685  8CF8 32 07 8C     	ld (Entidades_en_curso),a
 686  8CFB
 687  8CFB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 688  8CFB
 689  8CFB CD A4 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 690  8CFE CD C0 8E     	call Define_Clock_next_entity
 691  8D01
 692  8D01 3A 07 8C     1 ld a,(Entidades_en_curso)
 693  8D04 A7           	and a
 694  8D05 CA 78 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 695  8D08 47           	ld b,a												; No hay entidades que gestionar.
 696  8D09
 697  8D09              ; ( Código que ejecutamos con cada entidad: ).
 698  8D09
 699  8D09              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 700  8D09              ;
 701  8D09              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 702  8D09
 703  8D09 21 00 89     	ld hl,Tabla_de_pintado
 704  8D0C 22 2F 8C     	ld (India_SP),hl
 705  8D0F
 706  8D0F 21 33 8C     	ld hl,Ctrl_3
 707  8D12 CB D6        	set 2,(hl)
 708  8D14 CD 50 8E     	call Change
 709  8D17
 710  8D17 C5           2 push bc 												; Nº de entidades en curso.
 711  8D18
 712  8D18 CD E7 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 713  8D1B ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 714  8D1F
 715  8D1F              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 716  8D1F
 717  8D1F              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 718  8D1F              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 719  8D1F
 720  8D1F 3A 3A 8C     	ld a,(Impacto2)
 721  8D22 CB 5F        	bit 3,a
 722  8D24 C4 7E A0     	call nz,Compara_con_coordenadas_de_disparo
 723  8D27
 724  8D27 3A C3 8B     	ld a,(Impacto)
 725  8D2A CB 4F        	bit 1,a
 726  8D2C C4 F7 91     	call nz,Genera_explosion
 727  8D2F 20 2A        	jr nz,Gestiona_siguiente_entidad
 728  8D31
 729  8D31 3A C3 8B     	ld a,(Impacto)
 730  8D34 A7           	and a
 731  8D35 28 0C        	jr z,3F
 732  8D37
 733  8D37              ; IMPACTO en entidad por colisión con Amadeus.
 734  8D37
 735  8D37              ; 5/7/24
 736  8D37              ; Nota importante:
 737  8D37              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 738  8D37              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 739  8D37              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 740  8D37
 741  8D37 3A 78 89     	ld a,(Impacto_Amadeus)
 742  8D3A A7           	and a
 743  8D3B C4 F7 91     	call nz,Genera_explosion
 744  8D3E 20 1B        	jr nz,Gestiona_siguiente_entidad
 745  8D40
 746  8D40              ; Falsa colisión !!!
 747  8D40
 748  8D40 32 C3 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 749  8D43
 750  8D43              ; -------------------------------------------
 751  8D43
 752  8D43 CD 04 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 753  8D46 CD 30 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 754  8D49 CD F4 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 755  8D4C CD F7 94     	call Genera_datos_de_impresion
 756  8D4F CD 9A 93     	call Decrementa_Contador_de_mov_masticados
 757  8D52
 758  8D52              ; -------------------------------------------
 759  8D52
 760  8D52              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 761  8D52
 762  8D52 2A C4 8B     	ld hl,(Puntero_de_impresion)
 763  8D55 CD CB 94     	call Genera_coordenadas
 764  8D58
 765  8D58              ; TODO: Generamos disparo ???
 766  8D58
 767  8D58              ;	ld a,(Permiso_de_disparo_Entidades)
 768  8D58              ;	and a
 769  8D58              ;	call nz,Entidad_genera_disparo_si_procede
 770  8D58
 771  8D58 CD 04 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 772  8D5B
 773  8D5B              Gestiona_siguiente_entidad
 774  8D5B
 775  8D5B CD 6C 93      	call Store_Restore_cajas
 776  8D5E C1           	pop bc
 777  8D5F 10 B6        	djnz 2B
 778  8D61
 779  8D61              ; Hemos gestionado todas las entidades.
 780  8D61              ; ----- ----- -----
 781  8D61
 782  8D61 CD 18 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 783  8D64 CD 2F 8F     	call Ordena_tabla_de_impresion
 784  8D67 CD 96 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 785  8D6A
 786  8D6A CD D5 8E     	call Borra_diferencia
 787  8D6D
 788  8D6D 3A 33 8C     	ld a,(Ctrl_3)
 789  8D70 CB 5F        	bit 3,a
 790  8D72 20 04        	jr nz,Gestion_de_Amadeus
 791  8D74
 792  8D74 EB           	ex de,hl
 793  8D75 71           	ld (hl),c
 794  8D76 2C           	inc l
 795  8D77 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 796  8D78
 797  8D78              ;! GESTIONA AMADEUS !!!!!!!!!!
 798  8D78
 799  8D78              Gestion_de_Amadeus
 800  8D78
 801  8D78 21 33 8C     	ld hl,Ctrl_3
 802  8D7B CB 76        	bit 6,(hl)
 803  8D7D 28 13        	jr z,Amadeus_vivo
 804  8D7F
 805  8D7F              ; Amadeus ha sido destruido.
 806  8D7F              ; Decrementa (Temp_new_live).
 807  8D7F
 808  8D7F 21 47 8C     	ld hl,Temp_new_live
 809  8D82 35           	dec (hl)
 810  8D83 20 26        	jr nz,End_frame
 811  8D85
 812  8D85              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 813  8D85
 814  8D85 21 60 8C     	ld hl,Lives
 815  8D88 35           	dec (hl)
 816  8D89
 817  8D89              ;! Fin del juego
 818  8D89
 819  8D89 F3           	di
 820  8D8A 28 FE        	jr z,$
 821  8D8C FB           	ei
 822  8D8D
 823  8D8D              ; Nueva nave.
 824  8D8D
 825  8D8D CD F6 8D     	call Reinicia_Amadeus
 826  8D90 18 19        	jr End_frame
 827  8D92
 828  8D92              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 829  8D92
 830  8D92              Amadeus_vivo
 831  8D92
 832  8D92 3A 78 89     	ld a,(Impacto_Amadeus)
 833  8D95 A7           	and a
 834  8D96 C4 27 92     	call nz, Genera_explosion_Amadeus
 835  8D99 20 10        	jr nz, End_frame
 836  8D9B
 837  8D9B CD D4 91     	call Teclado
 838  8D9E
 839  8D9E 21 33 8C     	ld hl,Ctrl_3
 840  8DA1 CB 6E        	bit 5,(hl)
 841  8DA3 28 06        	jr z,End_frame
 842  8DA5
 843  8DA5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 844  8DA5
 845  8DA5 CD 6B 8E     	call Change_Amadeus
 846  8DA8 CD 3B 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 847  8DAB
 848  8DAB              End_frame
 849  8DAB
 850  8DAB              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 851  8DAB              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 852  8DAB
 853  8DAB              ;	call Genera_datos_de_impresion_disparos_Entidades
 854  8DAB CD 6F A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 855  8DAE              ;	call Calcula_bytes_pintado_disparos
 856  8DAE              ;	call Limpia_album_de_pintado_disparos_entidades
 857  8DAE
 858  8DAE              ; ------------ ------------- --------------
 859  8DAE
 860  8DAE              ;	xor a
 861  8DAE              ;	ld (Permiso_de_disparo_Entidades),a
 862  8DAE              ;	call Actuaiza_sp_de_disparos_de_entidades
 863  8DAE
 864  8DAE 2A 12 8C     	ld hl,(Album_de_borrado)
 865  8DB1 22 2D 8C     	ld (Scanlines_album_SP),hl
 866  8DB4
 867  8DB4 21 33 8C     	ld hl,Ctrl_3
 868  8DB7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 869  8DB9 CB 9E        	res 3,(hl)
 870  8DBB CB A6        	res 4,(hl)
 871  8DBD
 872  8DBD AF           	xor a
 873  8DBE D3 FE        	out ($fe),a
 874  8DC0
 875  8DC0 76           	halt
 876  8DC1
 877  8DC1              ; ----------------------------------------
 878  8DC1
 879  8DC1              ;	ld a,(Ctrl_1) 										; Existe Loop?
 880  8DC1              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 881  8DC1 CA CF 8C     	jp z,Main
 882  8DC4
 883  8DC4              ;------------------------------------------
 884  8DC4              ;
 885  8DC4              ;	2/10/24
 886  8DC4
 887  8DC4              Autoriza_disparo_de_entidades
 888  8DC4
 889  8DC4 3E 01        	ld a,1
 890  8DC6 32 25 8C     	ld (Permiso_de_disparo_Entidades),a
 891  8DC9
 892  8DC9 3A 50 8C     	ld a,(Repone_CLOCK_disparos)
 893  8DCC FE 19        	cp 25
 894  8DCE 38 02        	jr c,1F
 895  8DD0
 896  8DD0 D6 05        	sub 5
 897  8DD2
 898  8DD2 32 50 8C     1 ld (Repone_CLOCK_disparos),a
 899  8DD5 32 51 8C     	ld (CLOCK_disparos_de_entidades),a
 900  8DD8
 901  8DD8 C9           	ret
 902  8DD9
 903  8DD9              ;------------------------------------------
 904  8DD9              ;
 905  8DD9              ;	14/09/24
 906  8DD9              ;
 907  8DD9              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 908  8DD9
 909  8DD9              Entidad_genera_disparo_si_procede
 910  8DD9
 911  8DD9 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 912  8DDC CB 06        	rlc (hl)
 913  8DDE
 914  8DDE DC F4 9F     	call c,Genera_disparo_de_entidad_maldosa
 915  8DE1
 916  8DE1 C9           	ret
 917  8DE2
 918  8DE2              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 919  8DE2              ;
 920  8DE2              ;	30/09/24
 921  8DE2
 922  8DE2              Actuaiza_sp_de_disparos_de_entidades
 923  8DE2
 924  8DE2 2A 4A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 925  8DE5 23           	inc hl
 926  8DE6 22 4A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 927  8DE9
 928  8DE9 11 FD 88     	ld de,Numeros_aleatorios+7
 929  8DEC 7B           	ld a,e
 930  8DED 95           	sub l
 931  8DEE C0           	ret nz
 932  8DEF
 933  8DEF 21 F6 88     1 ld hl,Numeros_aleatorios
 934  8DF2 22 4A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 935  8DF5 C9           	ret
 936  8DF6
 937  8DF6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 938  8DF6              ;
 939  8DF6              ;	24/07/24
 940  8DF6
 941  8DF6              Reinicia_Amadeus
 942  8DF6
 943  8DF6              ;	Reinicia posición y estado.
 944  8DF6
 945  8DF6 21 CF 50     	ld hl,$50cf
 946  8DF9 22 79 89     	ld (p.imp.amadeus),hl
 947  8DFC 21 F0 E0     	ld hl,$e0f0
 948  8DFF 22 7B 89     	ld (Pamm_Amadeus),hl
 949  8E02 21 3D 00     	ld hl,$003d
 950  8E05 22 7D 89     	ld (Comm_Amadeus),hl
 951  8E08
 952  8E08              ;	limpiamos el álbum de borrado.
 953  8E08
 954  8E08 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
 955  8E0B
 956  8E0B AF           	xor a
 957  8E0C 77           	ld (hl),a
 958  8E0D
 959  8E0D E5           	push hl
 960  8E0E D1           	pop de
 961  8E0F 13           	inc de
 962  8E10
 963  8E10 01 23 00     	ld bc,35
 964  8E13 ED B0        	ldir
 965  8E15
 966  8E15 CD 3B 90     	call Genera_datos_de_impresion_Amadeus
 967  8E18
 968  8E18              ;	Reinicia temporizaciones.
 969  8E18
 970  8E18 CD 1A 91     	call Inicia_Shield
 971  8E1B
 972  8E1B 3E 5A        	ld a,90
 973  8E1D 32 5D 8C     	ld (Shield),a
 974  8E20
 975  8E20 3E 64        	ld a,100
 976  8E22 32 47 8C     	ld (Temp_new_live),a
 977  8E25
 978  8E25              ; 	Restauramos el FLAG: Amadeus vivo.
 979  8E25
 980  8E25 21 33 8C     	ld hl,Ctrl_3
 981  8E28 CB B6        	res 6,(hl)
 982  8E2A
 983  8E2A              ;	Fuerza la impresión de la nave en el siguiente frame.
 984  8E2A
 985  8E2A 21 33 8C      	ld hl,Ctrl_3
 986  8E2D CB EE        	set 5,(hl)
 987  8E2F
 988  8E2F C9           	ret
 989  8E30
 990  8E30              ; --------------------------------------------------------------------------------------------------------------
 991  8E30              ;
 992  8E30              ;	12/05/24
 993  8E30
 994  8E30 3A CA 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 995  8E33 CB 27        	sla a
 996  8E35 32 CA 8B     	ld (Velocidad),a
 997  8E38 E6 10        	and $10
 998  8E3A C8           	ret z
 999  8E3B
1000  8E3B              ; Restaura (Velocidad) a razón del nº de vueltas.
1001  8E3B
1002  8E3B 3A C2 8B     	ld a,(Contador_de_vueltas)
1003  8E3E CB 2F        	sra a
1004  8E40 CB 2F        	sra a
1005  8E42 32 CA 8B     	ld (Velocidad),a
1006  8E45
1007  8E45 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1008  8E48 23           	inc hl
1009  8E49 23           	inc hl
1010  8E4A 23           	inc hl
1011  8E4B 23           	inc hl
1012  8E4C 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1013  8E4F
1014  8E4F C9           	ret
1015  8E50
1016  8E50              ; --------------------------------------------------------------------------------------------------------------
1017  8E50              ;
1018  8E50              ;	25/08/24
1019  8E50
1020  8E50              Change
1021  8E50
1022  8E50 3A 2A 8C     	ld a,(Switch)
1023  8E53 EE 01        	xor 1
1024  8E55 32 2A 8C     	ld (Switch),a
1025  8E58 2A 10 8C     	ld hl,(Album_de_pintado)
1026  8E5B ED 5B 12 8C  	ld de,(Album_de_borrado)
1027  8E5F EB           	ex de,hl
1028  8E60 22 10 8C     	ld (Album_de_pintado),hl
1029  8E63 22 2D 8C     	ld (Scanlines_album_SP),hl
1030  8E66 ED 53 12 8C  	ld (Album_de_borrado),de
1031  8E6A C9           	ret
1032  8E6B
1033  8E6B              Change_Amadeus
1034  8E6B
1035  8E6B 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1036  8E6E ED 5B 16 8C  	ld de,(Album_de_borrado_Amadeus)
1037  8E72 EB           	ex de,hl
1038  8E73 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1039  8E76 ED 53 16 8C  	ld (Album_de_borrado_Amadeus),de
1040  8E7A C9           	ret
1041  8E7B
1042  8E7B              Change_Disparos
1043  8E7B
1044  8E7B              ; Álbumes de Amadeus.
1045  8E7B
1046  8E7B 2A 18 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1047  8E7E ED 5B 1A 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1048  8E82 EB           	ex de,hl
1049  8E83 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1050  8E86 ED 53 1A 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1051  8E8A CD B8 A0     	call Limpia_album_de_pintado_disparos_Amadeus
1052  8E8D
1053  8E8D              ; Álbumes de entidades.
1054  8E8D
1055  8E8D 2A 1C 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1056  8E90 ED 5B 1E 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1057  8E94 EB           	ex de,hl
1058  8E95 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1059  8E98 ED 53 1E 8C  	ld (Album_de_borrado_disparos_Entidades),de
1060  8E9C 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1061  8E9F
1062  8E9F AF           	xor a
1063  8EA0 32 22 8C     	ld (Num_de_bytes_album_de_disparos),a
1064  8EA3
1065  8EA3 C9           	ret
1066  8EA4
1067  8EA4              ; ------------------------------------
1068  8EA4              ;
1069  8EA4              ; 1/05/24
1070  8EA4
1071  8EA4              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1072  8EA4              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1073  8EA4
1074  8EA4              ;	DESTRUYE: HL,DE,A
1075  8EA4              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1076  8EA4
1077  8EA4              ;	Variables implicadas: (RND_SP).
1078  8EA4
1079  8EA4              Extrae_numero_aleatorio_y_avanza
1080  8EA4
1081  8EA4 21 00 89     	ld hl,Tabla_de_pintado
1082  8EA7 EB           	ex de,hl
1083  8EA8 2A 48 8C     	ld hl,(RND_SP)
1084  8EAB EB           	ex de,hl
1085  8EAC A7           	and a
1086  8EAD ED 52        	sbc hl,de
1087  8EAF
1088  8EAF 2A 48 8C     	ld hl,(RND_SP)
1089  8EB2 20 06        	jr nz,1F
1090  8EB4
1091  8EB4              ; Sitúa HL al principio de la tabla de nº aleatorios.
1092  8EB4
1093  8EB4 21 F6 88     	ld hl,Numeros_aleatorios
1094  8EB7 22 48 8C     	ld (RND_SP),HL
1095  8EBA
1096  8EBA              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1097  8EBA
1098  8EBA 7E           1 ld a,(hl)
1099  8EBB 23           	inc hl
1100  8EBC 22 48 8C     	ld (RND_SP),hl
1101  8EBF C9           	ret
1102  8EC0
1103  8EC0              ; ------------------------------------
1104  8EC0              ;
1105  8EC0              ; 1/05/24
1106  8EC0
1107  8EC0              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1108  8EC0              ; (1 a 4 segundos).
1109  8EC0              ; Actualizamos (Clock_next_entity) con A.
1110  8EC0
1111  8EC0              ;	DESTRUYE: A y B.
1112  8EC0              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1113  8EC0              ;			 Actualiza (Clock_next_entity) con A.
1114  8EC0
1115  8EC0              ;	Variables implicadas: (Clock_next_entity).
1116  8EC0
1117  8EC0              ; Notas:
1118  8EC0
1119  8EC0              ; 	$32 1 seg.
1120  8EC0              ; 	$64 2 seg.
1121  8EC0              ; 	$96 3 seg.
1122  8EC0              ; 	$c8 4 seg.
1123  8EC0              ; 	$fa 5 seg.
1124  8EC0
1125  8EC0              ; $ffff 1310,7 seg, 22 minutos.
1126  8EC0
1127  8EC0              ;	$0100  5 seg. aproximadamente.
1128  8EC0              ;	$0200 10 seg. aproximadamente.
1129  8EC0              ;	$0300 15 seg. aproximadamente.
1130  8EC0              ;	$0400 20 seg. aproximadamente.
1131  8EC0              ;	$0500 25 seg. aproximadamente.
1132  8EC0              ;	$0600 30 seg. aproximadamente.
1133  8EC0
1134  8EC0              Define_Clock_next_entity
1135  8EC0
1136  8EC0 FE 34        	cp $34
1137  8EC2 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1138  8EC4
1139  8EC4              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1140  8EC4
1141  8EC4 4F           3 ld c,a
1142  8EC5 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1143  8EC7 2A 78 5C     	ld hl,(FRAMES)
1144  8ECA A7           	and a
1145  8ECB ED 4A        	adc hl,bc
1146  8ECD 22 4D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1147  8ED0 C9           	ret
1148  8ED1
1149  8ED1 3E 34        1 ld a,$34
1150  8ED3 18 EF        	jr 3B
1151  8ED5
1152  8ED5              ; ------------------------------------
1153  8ED5              ;
1154  8ED5              ; 18/03/24
1155  8ED5
1156  8ED5              Borra_diferencia
1157  8ED5
1158  8ED5 ED 4B 2D 8C  	ld bc,(Scanlines_album_SP)
1159  8ED9
1160  8ED9 3A 2A 8C     	ld a,(Switch)
1161  8EDC A7           	and a
1162  8EDD 28 08        	jr z,2F
1163  8EDF
1164  8EDF 2A 28 8C     	ld hl,(Techo_Scanlines_album_2)
1165  8EE2 11 28 8C     	ld de,Techo_Scanlines_album_2
1166  8EE5 18 06        	jr 3F
1167  8EE7
1168  8EE7 2A 26 8C     2 ld hl,(Techo_Scanlines_album)
1169  8EEA 11 26 8C     	ld de,Techo_Scanlines_album
1170  8EED
1171  8EED              ; Diferencia.
1172  8EED
1173  8EED ED 42        3 sbc hl,bc
1174  8EEF
1175  8EEF C8           	ret z
1176  8EF0 D8           	ret c
1177  8EF1
1178  8EF1              ; Nuevo techo, (más bajo que el anterior).
1179  8EF1              ; Fijamos nuevo techo y borramos bytes sobrantes.
1180  8EF1
1181  8EF1 EB           	ex de,hl
1182  8EF2
1183  8EF2 71           	ld (hl),c
1184  8EF3 2C           	inc l
1185  8EF4 70           	ld (hl),b
1186  8EF5
1187  8EF5 AF           	xor a
1188  8EF6 43           	ld b,e
1189  8EF7
1190  8EF7 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1191  8EFA
1192  8EFA 77           1 ld (hl),a
1193  8EFB 23           	inc hl
1194  8EFC 10 FC        	djnz 1B
1195  8EFE
1196  8EFE              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1197  8EFE
1198  8EFE 21 33 8C     	ld hl,Ctrl_3
1199  8F01 CB DE        	set 3,(hl)
1200  8F03
1201  8F03 C9           	ret
1202  8F04
1203  8F04              ; --------------------------------------------------------------------------------------------------------------
1204  8F04              ;
1205  8F04              ;	26/3/24
1206  8F04
1207  8F04              Recauda_informacion_de_entidad_en_curso
1208  8F04
1209  8F04              ; Almacena la Coordenada Y de la entidad en curso.
1210  8F04
1211  8F04              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1212  8F04
1213  8F04 3A C1 8B     	ld a,(Coordenada_y)
1214  8F07 2A 2F 8C     	ld hl,(India_SP)
1215  8F0A 77           	ld (hl),a
1216  8F0B 2C           	inc l
1217  8F0C
1218  8F0C              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1219  8F0C
1220  8F0C ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
1221  8F10
1222  8F10 73           	ld (hl),e
1223  8F11 2C           	inc l
1224  8F12 72           	ld (hl),d
1225  8F13 2C           	inc l
1226  8F14
1227  8F14 22 2F 8C     	ld (India_SP),hl
1228  8F17
1229  8F17 C9           	ret
1230  8F18
1231  8F18              ; --------------------------------------------------------------------------------------------------------------
1232  8F18              ;
1233  8F18              ;	27/03/24
1234  8F18              ;
1235  8F18
1236  8F18              Inicializa_India_y_limpia_Tabla_de_impresion
1237  8F18
1238  8F18 2A 2F 8C     	ld hl,(India_SP)
1239  8F1B 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1240  8F1E
1241  8F1E 79           	ld a,c
1242  8F1F 95           	sub l
1243  8F20 28 06        	jr z,2F
1244  8F22 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1245  8F23              ;														; _ y pasamos a inicializar (India_SP).
1246  8F23 AF           	xor a
1247  8F24
1248  8F24 77           1 ld (hl),a
1249  8F25 2C           	inc l
1250  8F26 10 FC        	djnz 1B												; Limpia Tabla.
1251  8F28
1252  8F28 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1253  8F2B 22 2F 8C     	ld (India_SP),hl
1254  8F2E
1255  8F2E C9           	ret
1256  8F2F
1257  8F2F              ; --------------------------------------------------------------------------------------------------------------
1258  8F2F              ;
1259  8F2F              ;	31/3/24
1260  8F2F
1261  8F2F              Ordena_tabla_de_impresion
1262  8F2F
1263  8F2F              ; 5794 T/states.
1264  8F2F              ; 6278 T/states.
1265  8F2F              ; 5310 T/states.
1266  8F2F
1267  8F2F              ; Inicializamos punteros (India_SP) e (India_2_SP).
1268  8F2F              ; Inicializamos contador de comparaciones, [C].
1269  8F2F              ; Cargamos los registros A y B para efectuar comparación.
1270  8F2F
1271  8F2F FD 2E 00     	ld iyl,0
1272  8F32
1273  8F32 3A 07 8C     	ld a,(Entidades_en_curso)
1274  8F35 FE 04        	cp 4 	;	4
1275  8F37 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1276  8F38
1277  8F38 3D           	dec a
1278  8F39 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1279  8F3A 51           	ld d,c 										; Copia de respaldo.
1280  8F3B
1281  8F3B 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1282  8F3C
1283  8F3C 21 03 89     	ld hl,Tabla_de_pintado+3
1284  8F3F 46           	ld b,(hl)
1285  8F40 22 31 8C     	ld (India_2_SP),hl
1286  8F43
1287  8F43 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1288  8F44 DC 6C 8F     	call c, Avanza_India_2_SP
1289  8F47 CC 6C 8F     	call z, Avanza_India_2_SP
1290  8F4A
1291  8F4A FD 2D        	dec iyl
1292  8F4C 28 18        	jr z,2F
1293  8F4E
1294  8F4E
1295  8F4E              ; --------------------------------------------------------------------------------------------------------------
1296  8F4E              ;
1297  8F4E              ;	7/4/24
1298  8F4E
1299  8F4E              Trueque
1300  8F4E
1301  8F4E              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1302  8F4E              ;  			A contiene en nº de fila de (India_SP).
1303  8F4E              ;			HL contiene (India_2_SP).
1304  8F4E
1305  8F4E D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1306  8F4F E5           	push hl										; Preservo (India_2_SP).
1307  8F50
1308  8F50 ED 5B 2F 8C  	ld de,(India_SP)
1309  8F54 EB           	ex de,hl
1310  8F55 70           	ld (hl),b
1311  8F56 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1312  8F57
1313  8F57 CD 98 8F     	call Intercambia_1_byte
1314  8F5A CD 98 8F     	call Intercambia_1_byte
1315  8F5D
1316  8F5D
1317  8F5D              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1318  8F5D              ; Recuperamos (India_2_SP) en HL.
1319  8F5D
1320  8F5D 2A 2F 8C     	ld hl,(India_SP)
1321  8F60 7E           	ld a,(hl)
1322  8F61
1323  8F61 E1           	pop hl
1324  8F62 D1           	pop de
1325  8F63
1326  8F63              ; --------------------------------------------------------------------------------------------------------------
1327  8F63
1328  8F63 CD 6C 8F     	call Avanza_India_2_SP
1329  8F66
1330  8F66 14           2 inc d
1331  8F67 15           	dec d
1332  8F68 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1333  8F69 18 D8        	jr 1B
1334  8F6B
1335  8F6B C9           	ret
1336  8F6C
1337  8F6C              ; ----- ----- ----- ----- -----
1338  8F6C
1339  8F6C              Avanza_India_2_SP
1340  8F6C
1341  8F6C 0D           	dec c
1342  8F6D 28 0A        	jr z,Avanza_punteros_indios
1343  8F6F
1344  8F6F FD 2C        	inc iyl
1345  8F71
1346  8F71 2C           	inc l
1347  8F72 2C           	inc l
1348  8F73 2C           	inc l
1349  8F74
1350  8F74 46           	ld b,(hl)
1351  8F75 22 31 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1352  8F78
1353  8F78 C9           	ret
1354  8F79
1355  8F79              ; ----- ----- ----- ----- -----
1356  8F79
1357  8F79              Avanza_punteros_indios
1358  8F79
1359  8F79 15           	dec d
1360  8F7A 28 15        	jr z,Prepara_salida
1361  8F7C
1362  8F7C 4A           	ld c,d
1363  8F7D
1364  8F7D 2A 2F 8C     	ld hl,(India_SP)
1365  8F80 2C           	inc l
1366  8F81 2C           	inc l
1367  8F82 2C           	inc l
1368  8F83 7E           	ld a,(hl)
1369  8F84 22 2F 8C     	ld (India_SP),hl
1370  8F87
1371  8F87 2C           	inc l
1372  8F88 2C           	inc l
1373  8F89 2C           	inc l
1374  8F8A 46           	ld b,(hl)
1375  8F8B 22 31 8C     	ld (India_2_SP),hl
1376  8F8E
1377  8F8E FD 2C        	inc iyl
1378  8F90
1379  8F90 C9           	ret
1380  8F91
1381  8F91              Prepara_salida
1382  8F91
1383  8F91 21 00 89     	ld hl,Tabla_de_pintado
1384  8F94 22 2F 8C     	ld (India_SP),hl
1385  8F97 C9           	ret
1386  8F98
1387  8F98
1388  8F98 2C           Intercambia_1_byte inc l
1389  8F99 1C           	inc e
1390  8F9A 46           	ld b,(hl)
1391  8F9B 1A           	ld a,(de)
1392  8F9C EB           	ex de,hl
1393  8F9D 70           	ld (hl),b
1394  8F9E 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1395  8F9F C9           	ret
1396  8FA0
1397  8FA0              ; -----------------------------------------------------------------------------------
1398  8FA0              ;
1399  8FA0              ;	20/01/24
1400  8FA0              ;
1401  8FA0              ;
1402  8FA0
1403  8FA0              Construye_movimientos_masticados_entidad
1404  8FA0
1405  8FA0 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1406  8FA3 E5           	push hl
1407  8FA4 CD E7 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1408  8FA7              ;															; _ el (Contador_de_mov_masticados).
1409  8FA7 CD B2 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1410  8FAA              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1411  8FAA CD E3 99     	call Recompone_posicion_inicio
1412  8FAD
1413  8FAD CD 13 97     1 call Draw
1414  8FB0 CD CC 8F     	call Guarda_movimiento_masticado
1415  8FB3
1416  8FB3 CD 90 9D     	call Movimiento
1417  8FB6
1418  8FB6 3A 33 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1419  8FB9 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1420  8FBB 28 F0        	jr z,1B
1421  8FBD
1422  8FBD              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1423  8FBD              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1424  8FBD
1425  8FBD E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1426  8FBE 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1427  8FC1
1428  8FC1              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1429  8FC1
1430  8FC1 CD F4 9E     	call Situa_en_contador_general_de_mov_masticados
1431  8FC4
1432  8FC4              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1433  8FC4              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1434  8FC4
1435  8FC4 ED 4B C8 8B  	ld bc,(Contador_de_mov_masticados)
1436  8FC8
1437  8FC8 71           	ld (hl),c
1438  8FC9 23           	inc hl
1439  8FCA 70           	ld (hl),b
1440  8FCB
1441  8FCB C9           	ret
1442  8FCC
1443  8FCC              ; -----------------------------------------------------------------------------------
1444  8FCC              ;
1445  8FCC              ;	28/12/23
1446  8FCC              ;
1447  8FCC              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1448  8FCC              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1449  8FCC
1450  8FCC              Guarda_movimiento_masticado
1451  8FCC
1452  8FCC ED 73 0C 8C  	ld (Stack),sp
1453  8FD0 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1454  8FD4
1455  8FD4 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1456  8FD6 FD E5            push iy 												; Pushea Puntero_objeto.
1457  8FD8
1458  8FD8 ED 7B 0C 8C      ld sp,(Stack)
1459  8FDC
1460  8FDC 2A C8 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1461  8FDF 23           	inc hl
1462  8FE0 22 C8 8B     	ld (Contador_de_mov_masticados),hl
1463  8FE3
1464  8FE3 CD E7 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1465  8FE6              ;															; _ el (Contador_de_mov_masticados).
1466  8FE6 C9               ret
1467  8FE7
1468  8FE7              ; --------------------------------------------------------------------------------------------------------------
1469  8FE7              ;
1470  8FE7              ;	12/1/24
1471  8FE7              ;
1472  8FE7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1473  8FE7
1474  8FE7              Actualiza_Puntero_de_almacen_de_mov_masticados
1475  8FE7
1476  8FE7 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1477  8FEA 01 04 00     	ld bc,4
1478  8FED A7           	and a
1479  8FEE ED 4A        	adc hl,bc
1480  8FF0 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1481  8FF3 C9           	ret
1482  8FF4
1483  8FF4              ; --------------------------------------------------------------------------------------------------------------
1484  8FF4              ;
1485  8FF4              ;	24/03/24
1486  8FF4              ;
1487  8FF4              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1488  8FF4              ;
1489  8FF4              ;	IX contiene el puntero de impresión.
1490  8FF4              ;	DE contiene (Puntero_objeto).
1491  8FF4
1492  8FF4
1493  8FF4              Cargamos_registros_con_mov_masticado
1494  8FF4
1495  8FF4 ED 73 0C 8C  	ld (Stack),sp
1496  8FF8 ED 7B C6 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1497  8FFC
1498  8FFC D1           	pop de 															; DE contiene Puntero_objeto
1499  8FFD DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1500  8FFF
1501  8FFF ED 73 C6 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  9003 ED 7B 0C 8C  	ld sp,(Stack)
1503  9007
1504  9007 7B           	ld a,e
1505  9008 82           	add d															; Comprueba si ya no hay datos en el almacén.
1506  9009
1507  9009 CC A2 93     	call z,Reinicia_entidad_maliciosa
1508  900C
1509  900C C9           	ret
1510  900D
1511  900D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1512  900D              ;
1513  900D              ;	22/7/24
1514  900D
1515  900D              Cargamos_registros_con_explosion
1516  900D
1517  900D
1518  900D 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1519  9010 CD AC 90     	call Extrae_address
1520  9013
1521  9013 5D           	ld e,l
1522  9014 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1523  9015
1524  9015 DD 2A C4 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1525  9019
1526  9019 C9           	ret
1527  901A
1528  901A
1529  901A              Cargamos_registros_con_explosion_Amadeus
1530  901A
1531  901A 2A 7B 89     	ld hl,(Pamm_Amadeus)
1532  901D CD AC 90     	call Extrae_address
1533  9020
1534  9020 5D           	ld e,l
1535  9021 54           	ld d,h
1536  9022
1537  9022 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1538  9026
1539  9026 C9           	ret
1540  9027
1541  9027              ; --------------------------------------------------------------------------------------------------------------
1542  9027              ;
1543  9027              ;	17/06/24
1544  9027              ;
1545  9027              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1546  9027              ;
1547  9027              ;	IX contiene el puntero de impresión.
1548  9027              ;	DE contiene (Puntero_objeto).
1549  9027
1550  9027
1551  9027              Cargamos_registros_con_mov_masticado_Amadeus
1552  9027
1553  9027 ED 73 0C 8C  	ld (Stack),sp
1554  902B ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1555  902F D1           	pop de 															; DE contiene Puntero_objeto
1556  9030 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1557  9032 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1558  9036 ED 7B 0C 8C  	ld sp,(Stack)
1559  903A C9           	ret
1560  903B
1561  903B              ; ---------------------------------------------------------------------------------------------------------------------
1562  903B              ;
1563  903B              ;	18/6/24
1564  903B              ;
1565  903B              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1566  903B
1567  903B              Genera_datos_de_impresion_Amadeus
1568  903B
1569  903B 3A 78 89     	ld a,(Impacto_Amadeus)
1570  903E A7           	and a
1571  903F 20 03        	jr nz,1F
1572  9041
1573  9041              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1574  9041              ; _apuntando a la correspondiente explosión.
1575  9041
1576  9041 CD 27 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1577  9044
1578  9044 DD 7D        1 ld a,ixl
1579  9046 E6 1F        	and $1f
1580  9048 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1581  904B
1582  904B 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1583  904E E5           	push hl
1584  904F
1585  904F 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1586  9052 22 2D 8C     	ld (Scanlines_album_SP),hl
1587  9055
1588  9055 CD F7 94     	call Genera_datos_de_impresion
1589  9058
1590  9058 E1           	pop hl
1591  9059 22 2D 8C     	ld (Scanlines_album_SP),hl
1592  905C
1593  905C C9           	ret
1594  905D
1595  905D              ; ---------------------------------------------------------------------------------------------------------------------
1596  905D              ;
1597  905D              ;	13/03/24
1598  905D              ;
1599  905D              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1600  905D
1601  905D              Inicia_albumes_de_lineas
1602  905D
1603  905D 21 00 80     	ld hl,Scanlines_album
1604  9060 22 10 8C     	ld (Album_de_pintado),hl
1605  9063 22 2D 8C     	ld (Scanlines_album_SP),hl
1606  9066
1607  9066 21 1A 81     	ld hl,Scanlines_album_2
1608  9069 22 12 8C     	ld (Album_de_borrado),hl
1609  906C
1610  906C C9           	ret
1611  906D
1612  906D              Inicia_albumes_de_lineas_Amadeus
1613  906D
1614  906D 21 34 82     	ld hl,Amadeus_scanlines_album
1615  9070 22 14 8C     	ld (Album_de_pintado_Amadeus),hl
1616  9073 21 58 82     	ld hl,Amadeus_scanlines_album_2
1617  9076 22 16 8C     	ld (Album_de_borrado_Amadeus),hl
1618  9079
1619  9079 C9           	ret
1620  907A
1621  907A              Inicia_albumes_de_disparos
1622  907A
1623  907A 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1624  907D 22 18 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1625  9080 21 84 82     	ld hl,Amadeus_disparos_scanlines_album_2
1626  9083 22 1A 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1627  9086
1628  9086 21 8C 82     	ld hl,Entidades_disparos_scanlines_album
1629  9089 22 1C 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1630  908C 22 20 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1631  908F
1632  908F 21 C0 82     	ld hl,Entidades_disparos_scanlines_album_2
1633  9092 22 1E 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1634  9095
1635  9095 C9           	ret
1636  9096
1637  9096              ; ---------------------------------------------------------------------------------------------------------------------
1638  9096              ;
1639  9096              ; 8/1/23
1640  9096              ;
1641  9096              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1642  9096              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1643  9096              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1644  9096
1645  9096              ; Destruye HL y DE !!!!!
1646  9096
1647  9096              Inicia_punteros_de_cajas
1648  9096
1649  9096 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1650  9099 CD AC 90         call Extrae_address
1651  909C 22 FF 8B         ld (Puntero_store_caja),hl
1652  909F 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1653  90A2 22 03 8C     	ld (Indice_restore_caja),hl
1654  90A5 CD AC 90     	call Extrae_address
1655  90A8 22 01 8C     	ld (Puntero_restore_caja),hl
1656  90AB C9               ret
1657  90AC
1658  90AC              ; *************************************************************************************************************************************************************
1659  90AC
1660  90AC              ;
1661  90AC              ; 20/10/22
1662  90AC              ;
1663  90AC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1664  90AC              ;
1665  90AC              ; Destruye el puntero y DE !!!!!
1666  90AC
1667  90AC 5E           Extrae_address ld e,(hl)
1668  90AD 23           	inc hl
1669  90AE 56           	ld d,(hl)
1670  90AF 2B           	dec hl
1671  90B0 EB           	ex de,hl
1672  90B1 C9           	ret
1673  90B2
1674  90B2              ; *************************************************************************************************************************************************************
1675  90B2              ;
1676  90B2              ;	20/1/24
1677  90B2              ;
1678  90B2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1679  90B2              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1680  90B2              ;
1681  90B2              ;   Destruye HL y BC !!!!!,
1682  90B2              ;
1683  90B2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1684  90B2              ;					"0" ..... Izquierda.
1685  90B2
1686  90B2              Inicia_Puntero_objeto
1687  90B2
1688  90B2 3A DE 8B     	ld a,(Cuad_objeto)
1689  90B5 E6 01        	and 1
1690  90B7 F5           	push af
1691  90B8 CC D4 90     	call z,Inicia_puntero_objeto_izq
1692  90BB F1           	pop af
1693  90BC C8           	ret z
1694  90BD CD C1 90     	call Inicia_puntero_objeto_der
1695  90C0 C9           	ret
1696  90C1
1697  90C1              ; Arrancamos desde la parte izquierda de la pantalla.
1698  90C1              ; Iniciamos (Indice_Sprite_der).
1699  90C1
1700  90C1 2A D4 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1701  90C4 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
1702  90C7 CD AC 90     	call Extrae_address
1703  90CA 22 D1 8B     	ld (Puntero_objeto),hl
1704  90CD
1705  90CD 2A D6 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1706  90D0 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1707  90D3 C9           	ret
1708  90D4
1709  90D4              ; Arrancamos desde la parte derecha de la pantalla.
1710  90D4              ; Iniciamos (Indice_Sprite_izq).
1711  90D4
1712  90D4 2A D6 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1713  90D7 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
1714  90DA CD AC 90     	call Extrae_address
1715  90DD 22 D1 8B     	ld (Puntero_objeto),hl
1716  90E0
1717  90E0 2A D4 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1718  90E3 22 D8 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1719  90E6 C9           	ret
1720  90E7
1721  90E7              ; **************************************************************************************************
1722  90E7              ;
1723  90E7              ;	06/07/24
1724  90E7              ;
1725  90E7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1726  90E7
1727  90E7              Restore_entidad
1728  90E7
1729  90E7 2A FF 8B     	ld hl,(Puntero_store_caja)
1730  90EA 7E           	ld a,(hl)
1731  90EB A7           	and a
1732  90EC CC FA 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1733  90EF 28 F6        	jr z,Restore_entidad
1734  90F1
1735  90F1 11 BF 8B     	ld de,Bandeja_DRAW
1736  90F4 01 0C 00     	ld bc,12
1737  90F7 ED B0        	ldir
1738  90F9 C9           	ret
1739  90FA
1740  90FA              ; **************************************************************************************************
1741  90FA              ;
1742  90FA              ;	08/05/23
1743  90FA              ;
1744  90FA              ;	Incrementamos los dos punteros de entidades. (+1).
1745  90FA
1746  90FA              Incrementa_punteros_de_cajas
1747  90FA
1748  90FA 2A 01 8C     	ld hl,(Puntero_restore_caja)
1749  90FD 22 FF 8B     	ld (Puntero_store_caja),hl
1750  9100 2A 03 8C     	ld hl,(Indice_restore_caja)
1751  9103 23           	inc hl
1752  9104 23           	inc hl
1753  9105 22 03 8C     	ld (Indice_restore_caja),hl
1754  9108 CD AC 90         call Extrae_address
1755  910B 22 01 8C         ld (Puntero_restore_caja),hl
1756  910E C9               ret
1757  910F
1758  910F              ; -----------------------------------------------------------
1759  910F
1760  910F              ; Teclado.
1761  910F
1762  910F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1763  9111 DB FE        	in a,($fe)
1764  9113 E6 01        	and $01
1765  9115 28 02        	jr z,1f
1766  9117 18 F6        	jr Pulsa_ENTER
1767  9119 C9           1 ret
1768  911A
1769  911A              ; **************************************************************************************************
1770  911A              ;
1771  911A              ; Temporización.
1772  911A
1773  911A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1774  911A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1775  911A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1776  911A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1777  911A
1778  911A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1779  911A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1780  911A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1781  911A
1782  911A              ; A partir de $4f61 no hace falta DELAY.
1783  911A
1784  911A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1785  911A
1786  911A              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1787  911A              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1788  911A              ;	LD A,B
1789  911A              ;	AND A
1790  911A              ;	JR NZ,wait
1791  911A              ;	RET
1792  911A
1793  911A              ; ---------------------------------------------------------------------------------------------------------------
1794  911A              ;
1795  911A              ;	13/07/24
1796  911A              ;
1797  911A
1798  911A              Inicia_Shield
1799  911A
1800  911A 21 57 8C     	ld hl,Datos_Shield
1801  911D 22 5B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1802  9120
1803  9120 7E           	ld a,(hl)
1804  9121 32 5E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1805  9124
1806  9124 3E 01        	ld a,1
1807  9126 32 5F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1808  9129
1809  9129 C9           	ret
1810  912A
1811  912A              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1812  912A              ;
1813  912A              ;	4/6/24
1814  912A              ;
1815  912A              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1816  912A              ;
1817  912A              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1818  912A              ;
1819  912A
1820  912A              Actualiza_pantalla
1821  912A
1822  912A 3E 02        	ld a,2
1823  912C D3 FE        	out ($fe),a
1824  912E
1825  912E 3A 33 8C     	ld a,(Ctrl_3)
1826  9131 CB 57        	bit 2,a
1827  9133 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1828  9135
1829  9135              Borrando_entidades
1830  9135
1831  9135 2A 2D 8C     	ld hl,(Scanlines_album_SP)
1832  9138 CD AC 90     	call Extrae_address
1833  913B 24           	inc h
1834  913C 25           	dec h
1835  913D 28 05        	jr z,Pintando_entidades
1836  913F CD F0 95     	call Pinta_Sprites
1837  9142 18 F1        	jr Borrando_entidades
1838  9144
1839  9144              Pintando_entidades
1840  9144
1841  9144 2A 2F 8C     	ld hl,(India_SP)
1842  9147 2C           	inc l
1843  9148 CD AC 90     	call Extrae_address
1844  914B 24           	inc h
1845  914C 25           	dec h
1846  914D 28 0E        	jr z,Ejecuta_escudo
1847  914F 1C           	inc e
1848  9150 1C           	inc e
1849  9151 ED 53 2F 8C  	ld (India_SP),de
1850  9155 CD AC 90     	call Extrae_address
1851  9158 CD F0 95     	call Pinta_Sprites
1852  915B 18 E7        	jr Pintando_entidades
1853  915D
1854  915D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1855  915D
1856  915D              Ejecuta_escudo
1857  915D
1858  915D 3A 5D 8C     	ld a,(Shield)
1859  9160 A7           	and a
1860  9161 20 2F        	jr nz,Aplica_Shield
1861  9163
1862  9163              Borrando_Amadeus
1863  9163
1864  9163 21 33 8C     	ld hl,Ctrl_3
1865  9166 CB 6E        	bit 5,(hl)
1866  9168 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1867  916A
1868  916A 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1869  916D CD AC 90     	call Extrae_address
1870  9170 24           	inc h
1871  9171 25           	dec h
1872  9172 28 03        	jr z,Pintando_Amadeus
1873  9174 CD F0 95     	call Pinta_Sprites
1874  9177
1875  9177              Pintando_Amadeus
1876  9177
1877  9177 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1878  917A CD AC 90     	call Extrae_address
1879  917D 24           	inc h
1880  917E 25           	dec h
1881  917F 28 03        	jr z,1F
1882  9181 CD F0 95     	call Pinta_Sprites
1883  9184
1884  9184              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1885  9184
1886  9184 21 33 8C     1 ld hl,Ctrl_3
1887  9187 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1888  9189 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1889  918B CB AE        	res 5,(hl)
1890  918D
1891  918D 3E 01        	ld a,1												; Borde azul.
1892  918F D3 FE        	out ($fe),a
1893  9191
1894  9191 C9           	ret
1895  9192
1896  9192              Aplica_Shield
1897  9192
1898  9192              ;	Bit 1 "1" (Shield_3) Sólo borra.
1899  9192              ;		  "0"     ""     Borra/Pinta.
1900  9192              ;	Bit 2    ""  RET.	 No borra, no pinta.
1901  9192
1902  9192 21 5F 8C     	ld hl,Shield_3
1903  9195
1904  9195 CB 5E        	bit 3,(hl)
1905  9197 20 DE        	jr nz,Pintando_Amadeus
1906  9199
1907  9199 CB 56        	bit 2,(hl)
1908  919B 20 E7        	jr nz,1B
1909  919D
1910  919D CB 4E        	bit 1,(hl)
1911  919F C4 A6 91     	call nz,Borra_Amadeus_shield
1912  91A2
1913  91A2 28 BF        	jr z,Borrando_Amadeus
1914  91A4 18 DE        	jr 1B
1915  91A6
1916  91A6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1917  91A6
1918  91A6              Borra_Amadeus_shield
1919  91A6
1920  91A6 3A 33 8C     	ld a,(Ctrl_3)
1921  91A9 CB 6F        	bit 5,a
1922  91AB 28 08        	jr z,1F
1923  91AD
1924  91AD 2A 16 8C     	ld hl,(Album_de_borrado_Amadeus)
1925  91B0 CD AC 90     	call Extrae_address
1926  91B3 18 06        	jr 2F
1927  91B5
1928  91B5 2A 14 8C     1 ld hl,(Album_de_pintado_Amadeus)
1929  91B8 CD AC 90     	call Extrae_address
1930  91BB
1931  91BB CD F0 95     2 call Pinta_Sprites
1932  91BE
1933  91BE AF           	xor a
1934  91BF 3C           	inc a											; Asegura NZ en la salida de la rutina.
1935  91C0
1936  91C0 C9           	ret
1937  91C1
1938  91C1              Pinta_Amadeus_shield
1939  91C1
1940  91C1 2A 14 8C     	ld hl,(Album_de_pintado_Amadeus)
1941  91C4 CD AC 90     	call Extrae_address
1942  91C7 CD F0 95     	call Pinta_Sprites
1943  91CA
1944  91CA AF           	xor a
1945  91CB 3C           	inc a											; Asegura NZ en la salida de la rutina.
1946  91CC
1947  91CC C9           	ret
1948  91CD
1949  91CD              Borra_Pinta_Amadeus_shield
1950  91CD
1951  91CD CD A6 91     	call Borra_Amadeus_shield
1952  91D0 CD C1 91     	call Pinta_Amadeus_shield
1953  91D3 C9           	ret
1954  91D4
1955  91D4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1956  91D4              ;
1957  91D4              ;	19/6/24
1958  91D4              ;
1959  91D4
1960  91D4              Teclado
1961  91D4
1962  91D4              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1963  91D4
1964  91D4 3E F7        	ld a,$f7												; "5" para disparar.
1965  91D6 DB FE        	in a,($fe)
1966  91D8 E6 10        	and $10
1967  91DA
1968  91DA CC 8E A1     	call z,Genera_disparo_Amadeus
1969  91DD
1970  91DD 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1971  91DF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1972  91E1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1973  91E3 CC 5D 9D         call z,Amadeus_a_izquierda
1974  91E6
1975  91E6 3E F7        	ld a,$f7
1976  91E8 DB FE        	in a,($fe)
1977  91EA E6 01        	and $01
1978  91EC C8           	ret z
1979  91ED
1980  91ED 3E F7        	ld a,$f7
1981  91EF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1982  91F1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1983  91F3 CC 75 9D     	call z,Amadeus_a_derecha
1984  91F6
1985  91F6 C9           	ret
1986  91F7
1987  91F7              ; ------------------------------------------------------------------------------------------------------------------------
1988  91F7              ;
1989  91F7              ;	06/07/24
1990  91F7              ;
1991  91F7
1992  91F7              Genera_explosion
1993  91F7
1994  91F7 21 45 8C     	ld hl,Clock_explosion
1995  91FA 35           	dec (hl)
1996  91FB 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1997  91FD
1998  91FD              Borra_entidad_colisionada
1999  91FD
2000  91FD CD 04 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2001  9200 CD 0D 90     	call Cargamos_registros_con_explosion
2002  9203 CD F7 94     	call Genera_datos_de_impresion
2003  9206
2004  9206 AF           	xor a
2005  9207 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2006  9208
2007  9208 C9           	ret
2008  9209
2009  9209              Siguiente_frame_explosion
2010  9209
2011  9209 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2012  920B
2013  920B              ; Avanza Frame de explosión.
2014  920B
2015  920B 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2016  920E 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2017  9211
2018  9211 79           	ld a,c
2019  9212 95           	sub l
2020  9213 20 0B        	jr nz,1F
2021  9215
2022  9215              ; Fín de la entidad !!!!!!!!!!!!!
2023  9215
2024  9215 21 06 8C     	ld hl,Numero_parcial_de_entidades
2025  9218 35           	dec (hl)
2026  9219 23           	inc hl
2027  921A 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2028  921B
2029  921B CD 77 93     	call Limpiamos_bandeja_DRAW
2030  921E 18 DD        	jr Borra_entidad_colisionada
2031  9220
2032  9220 23           1 inc hl
2033  9221 23           	inc hl
2034  9222 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2035  9225 18 D6        	jr Borra_entidad_colisionada
2036  9227
2037  9227              ; ----- ----- ----- ----- -----
2038  9227
2039  9227              Genera_explosion_Amadeus
2040  9227
2041  9227 21 46 8C     	ld hl,Clock_explosion_Amadeus
2042  922A 35           	dec (hl)
2043  922B 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2044  922D
2045  922D              Borra_Amadeus_impactado
2046  922D
2047  922D CD 6B 8E     	call Change_Amadeus
2048  9230 CD 1A 90     	call Cargamos_registros_con_explosion_Amadeus
2049  9233 CD 3B 90     	call Genera_datos_de_impresion_Amadeus
2050  9236
2051  9236 21 33 8C     	ld hl,Ctrl_3
2052  9239 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2053  923B
2054  923B AF           	xor a
2055  923C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2056  923D
2057  923D C9           	ret
2058  923E
2059  923E              Siguiente_frame_explosion_Amadeus
2060  923E
2061  923E 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2062  9240
2063  9240              ; Avanza Frame de explosión.
2064  9240
2065  9240 2A 7B 89     	ld hl,(Pamm_Amadeus)
2066  9243 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2067  9246
2068  9246 79           	ld a,c
2069  9247 95           	sub l
2070  9248 20 0B        	jr nz,1F
2071  924A
2072  924A              ; Fín de Amadeus !!!!!!!!!!!!!
2073  924A              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2074  924A
2075  924A AF           	xor a
2076  924B 32 78 89     	ld (Impacto_Amadeus),a
2077  924E 21 33 8C     	ld hl,Ctrl_3
2078  9251 CB F6        	set 6,(hl)
2079  9253
2080  9253 18 D8        	jr Borra_Amadeus_impactado
2081  9255
2082  9255 23           1 inc hl
2083  9256 23           	inc hl
2084  9257 22 7B 89     	ld (Pamm_Amadeus),hl
2085  925A 18 D1        	jr Borra_Amadeus_impactado
2086  925C
2087  925C              ; ---------------------------------------------------------------
2088  925C
2089  925C              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 925C              ; ******************************************************************************************************************************************************************************************
   2+ 925C              ;
   3+ 925C              ;   21/04/24
   4+ 925C              ;
   5+ 925C              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 925C              ;   (XOR) bit a bit.
   7+ 925C              ;
   8+ 925C              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 925C
  10+ 925C              Derivando_RND
  11+ 925C
  12+ 925C 21 F6 88         ld hl,Numeros_aleatorios
  13+ 925F
  14+ 925F ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9261 C5               push bc
  16+ 9262              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9262 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9265              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9265
  20+ 9265 A7           6 and a                                 ; Carry a "0".
  21+ 9266 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9268 30 02            jr nc,1F
  23+ 926A
  24+ 926A CB C1            set 0,c
  25+ 926C
  26+ 926C 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 926D E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 926F 5F               ld e,a
  29+ 9270
  30+ 9270 7A               ld a,d
  31+ 9271 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9273 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9275
  34+ 9275 CB 3F            srl a
  35+ 9277
  36+ 9277 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9278
  38+ 9278 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9279 28 04            jr z,4F
  40+ 927B
  41+ 927B CB FF            set 7,a
  42+ 927D 18 02            jr 5F
  43+ 927F
  44+ 927F CB BF        4 res 7,a
  45+ 9281
  46+ 9281 CB 21        5 sla c
  47+ 9283 10 E0            djnz 6B
  48+ 9285
  49+ 9285 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9286
  51+ 9286 77               ld (hl),a
  52+ 9287 23               inc hl
  53+ 9288 C1               pop bc
  54+ 9289 10 D4            djnz 3B
  55+ 928B
  56+ 928B C9               ret
  57+ 928C
  58+ 928C
  59+ 928C
# file closed: RND_Derivando.asm
2090  928C              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 928C              ;---------------------------------------------------------------------------------------------------------------
   2+ 928C              ;
   3+ 928C              ;   8/3/24
   4+ 928C              ;
   5+ 928C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 928C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 928C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 928C              ;	_ de la 1ª entidad del Nivel.
   9+ 928C              ;
  10+ 928C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 928C
  12+ 928C              ;	MODIFICA: HL,DE y A.
  13+ 928C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 928C
  15+ 928C              Inicializa_Nivel
  16+ 928C
  17+ 928C 2A 53 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 928F CD AC 90     	call Extrae_address
  19+ 9292 7E           	ld a,(hl)
  20+ 9293 32 05 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9296 23           	inc hl
  22+ 9297 CD A4 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 929A 22 55 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 929D CD AD 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A0
  26+ 92A0 CD BE 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A3 C9           	ret
  28+ 92A4
  29+ 92A4              ; ----------------------
  30+ 92A4
  31+ 92A4 11 E4 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A7 01 04 00     	ld bc,4
  33+ 92AA ED B0        	ldir
  34+ 92AC C9           	ret
  35+ 92AD
  36+ 92AD 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92AE CD 48 94         call Calcula_salto_en_BC
  38+ 92B1 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B4 A7               and a
  40+ 92B5 ED 4A            adc hl,bc
  41+ 92B7 CD AC 90         call Extrae_address
  42+ 92BA 22 F0 8B         ld (Puntero_indice_mov),hl
  43+ 92BD C9               ret
  44+ 92BE
  45+ 92BE 3A BF 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C1 CD 48 94     	call Calcula_salto_en_BC
  47+ 92C4 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C7 A7               and a
  49+ 92C8 ED 4A            adc hl,bc
  50+ 92CA CD AC 90         call Extrae_address
  51+ 92CD 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D0 C9           	ret
  53+ 92D1
  54+ 92D1              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D1              ;
  56+ 92D1              ;   5/1/24
  57+ 92D1              ;
  58+ 92D1              ;	Destruye A,BC,HL,DE
  59+ 92D1
  60+ 92D1              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D1              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D1
  63+ 92D1              Inicia_Entidades
  64+ 92D1
  65+ 92D1              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D1
  67+ 92D1 CD 96 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D4              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D4 CD 90 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D7
  71+ 92D7 2A 55 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92DA
  73+ 92DA 22 55 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92DD
  75+ 92DD CD F6 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E0
  77+ 92E0 2A 55 8C     	ld hl,(Datos_de_nivel)
  78+ 92E3
  79+ 92E3              ; En este punto:
  80+ 92E3              ;
  81+ 92E3              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E3              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E3
  84+ 92E3 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E4
  86+ 92E4 7E           	ld a,(hl)
  87+ 92E5 CD 62 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E8
  89+ 92E8 CD 5A 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92EB
  91+ 92EB              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92EB
  93+ 92EB CD 18 94     	call Busca_mov_masticados_segun_tipo
  94+ 92EE
  95+ 92EE A7           	and a
  96+ 92EF 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F1
  98+ 92F1              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F1
 100+ 92F1              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F1              ;	_ de este tipo de entidad.
 102+ 92F1
 103+ 92F1 CD F4 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F4 CD 01 9F     	call Transfiere_datos_de_contadores
 105+ 92F7
 106+ 92F7 18 06        	jr 4F
 107+ 92F9
 108+ 92F9 CD A0 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92FC
 110+ 92FC              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92FC              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92FC              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92FC              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92FC              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92FC
 116+ 92FC CD D6 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92FF              ;																; _ Mov_masticados ya generados.
 118+ 92FF
 119+ 92FF CD F4 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9302
 121+ 9302 DD E5        	push ix
 122+ 9304 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9305
 124+ 9305 D5           	push de
 125+ 9306 CD CB 94     	call Genera_coordenadas
 126+ 9309
 127+ 9309 ED 5B 2D 8C  	ld de,(Scanlines_album_SP)
 128+ 930D CD 04 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9310 D1           	pop de
 130+ 9311
 131+ 9311 CD F7 94     	call Genera_datos_de_impresion
 132+ 9314              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9314              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9314              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9314              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9314
 137+ 9314 CD 9A 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9317
 139+ 9317              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9317
 141+ 9317 ED 5B FF 8B  	ld de,(Puntero_store_caja)
 142+ 931B CD 87 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 931E
 144+ 931E CD 77 93     	call Limpiamos_bandeja_DRAW
 145+ 9321 CD FA 90     	call Incrementa_punteros_de_cajas
 146+ 9324
 147+ 9324              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9324              ; _ entidad del Nivel.
 149+ 9324
 150+ 9324 3A 34 8C     	ld a,(Ctrl_4)
 151+ 9327 E6 F0        	and $f0
 152+ 9329 32 34 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 932C
 154+ 932C              ; Siguiente entidad del Nivel.
 155+ 932C
 156+ 932C 2A 55 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 932F 23           	inc hl 														; _ entidad del Nivel.
 158+ 9330
 159+ 9330 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9331
 161+ 9331 10 A7        	djnz 2B
 162+ 9333
 163+ 9333 C9           	ret
 164+ 9334
 165+ 9334              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9334              ;
 167+ 9334              ;	27/5/24
 168+ 9334              ;
 169+ 9334              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9334              ;
 171+ 9334
 172+ 9334              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9334              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9334
 175+ 9334 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9337 CD 5A 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 933A
 178+ 933A
 179+ 933A              Construye_movimientos_masticados_Amadeus
 180+ 933A
 181+ 933A 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 933D CD E7 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9340              ;															; _ el (Contador_de_mov_masticados).
 184+ 9340 CD B2 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9343              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9343
 187+ 9343              ; Generamos movimientos masticados de Amadeus.
 188+ 9343
 189+ 9343 06 79        	ld b,121												; $0079, 121d.
 190+ 9345
 191+ 9345 C5           1 push bc
 192+ 9346 CD 13 97     	call Draw
 193+ 9349 CD CC 8F     	call Guarda_movimiento_masticado
 194+ 934C
 195+ 934C CD 87 9A     	call Mov_right
 196+ 934F CD 87 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9352
 198+ 9352 C1           	pop bc
 199+ 9353 10 F0        	djnz 1B
 200+ 9355
 201+ 9355              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9355
 203+ 9355              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9355              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9355
 206+ 9355 2A C6 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9358 01 08 00     	ld bc,8
 208+ 935B A7           	and a
 209+ 935C ED 42        	sbc hl,bc
 210+ 935E 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9361
 212+ 9361 C9           	ret
 213+ 9362
 214+ 9362              ; ---------------------------------------------------------------------
 215+ 9362              ;
 216+ 9362              ;	10/02/24
 217+ 9362              ;
 218+ 9362              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9362              ;
 220+ 9362              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9362
 222+ 9362              Definicion_segun_tipo
 223+ 9362
 224+ 9362 CD 48 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9365 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9368 CD 50 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 936B C9           	ret
 228+ 936C
 229+ 936C              ; ---------------------------------------------------------------------
 230+ 936C              ;
 231+ 936C              ;	6/7/24
 232+ 936C
 233+ 936C
 234+ 936C              Store_Restore_cajas
 235+ 936C
 236+ 936C ED 5B FF 8B  	ld de,(Puntero_store_caja)
 237+ 9370 CD 87 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9373 CD FA 90     	call Incrementa_punteros_de_cajas
 239+ 9376 C9           	ret
 240+ 9377
 241+ 9377              ; ---------------------------------------------------------------------
 242+ 9377              ;
 243+ 9377              ;	23/6/24
 244+ 9377              ;
 245+ 9377              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9377              ;
 247+ 9377              ;	MODIFY: HL
 248+ 9377
 249+ 9377              Limpiamos_bandeja_DRAW
 250+ 9377
 251+ 9377 ED 73 0C 8C  	ld (Stack),sp
 252+ 937B 31 E4 8B     	ld sp,Vel_left
 253+ 937E
 254+ 937E AF           	xor a
 255+ 937F 67           	ld h,a
 256+ 9380 6F           	ld l,a
 257+ 9381
 258+ 9381 E5           	push hl
 259+ 9382 E5           	push hl
 260+ 9383 E5           	push hl
 261+ 9384 E5           	push hl
 262+ 9385 E5           	push hl
 263+ 9386 E5           	push hl
 264+ 9387 E5           	push hl
 265+ 9388 E5           	push hl
 266+ 9389 E5           	push hl
 267+ 938A E5           	push hl
 268+ 938B E5           	push hl
 269+ 938C E5           	push hl
 270+ 938D E5           	push hl
 271+ 938E E5           	push hl
 272+ 938F E5           	push hl
 273+ 9390 E5           	push hl
 274+ 9391 E5           	push hl
 275+ 9392 E5           	push hl
 276+ 9393
 277+ 9393 33           	inc sp
 278+ 9394
 279+ 9394 E5           	push hl
 280+ 9395 ED 7B 0C 8C  	ld sp,(Stack)
 281+ 9399
 282+ 9399 C9           	ret
 283+ 939A
 284+ 939A              ; ---------------------------------------------------------------------
 285+ 939A              ;
 286+ 939A              ;	24/03/24
 287+ 939A
 288+ 939A 2A C8 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 939D 2B           	dec hl
 290+ 939E 22 C8 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93A1 C9           	ret
 292+ 93A2
 293+ 93A2              ; ---------------------------------------------------------------------
 294+ 93A2              ;
 295+ 93A2              ;	8/5/24
 296+ 93A2
 297+ 93A2              Reinicia_entidad_maliciosa
 298+ 93A2
 299+ 93A2              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A2
 301+ 93A2 CD F4 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A5 CD 01 9F     	call Transfiere_datos_de_contadores
 303+ 93A8
 304+ 93A8              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A8
 306+ 93A8 3A BF 8B     	ld a,(Tipo)
 307+ 93AB CD 62 93     	call Definicion_segun_tipo
 308+ 93AE
 309+ 93AE E5           	push hl
 310+ 93AF DD E1        	pop ix
 311+ 93B1
 312+ 93B1 DD 6E 0B     	ld l,(ix+11)
 313+ 93B4 DD 66 0C     	ld h,(ix+12)
 314+ 93B7
 315+ 93B7 22 C6 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93BA
 317+ 93BA CD F4 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93BD
 319+ 93BD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93BD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93BD              ; Ejemplos.
 322+ 93BD
 323+ 93BD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93BD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93BD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93BD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93BD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93BD
 329+ 93BD 21 C2 8B     	ld hl,Contador_de_vueltas
 330+ 93C0 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C2
 332+ 93C2 7E           	ld a,(hl)
 333+ 93C3 CB 2F        	sra a
 334+ 93C5 CB 2F        	sra a
 335+ 93C7
 336+ 93C7 32 CA 8B     	ld (Velocidad),a
 337+ 93CA
 338+ 93CA 3E 40        	ld a,$40
 339+ 93CC BE           	cp (hl)
 340+ 93CD C0           	ret nz
 341+ 93CE
 342+ 93CE              ; Límitador.
 343+ 93CE
 344+ 93CE              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93CE
 346+ 93CE CB 2E        	sra (hl)
 347+ 93D0 21 CA 8B     	ld hl,Velocidad
 348+ 93D3 CB 2E        	sra (hl)
 349+ 93D5
 350+ 93D5 C9           	ret
 351+ 93D6
 352+ 93D6              ; ---------------------------------------------------------------------
 353+ 93D6              ;
 354+ 93D6              ;	22/01/24
 355+ 93D6
 356+ 93D6 21 34 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93D9 CB 46        	bit 0,(hl)
 358+ 93DB 20 0D        	jr nz,1F
 359+ 93DD CB 4E        	bit 1,(hl)
 360+ 93DF 20 0C        	jr nz,2F
 361+ 93E1 CB 56        	bit 2,(hl)
 362+ 93E3 20 0B        	jr nz,3F
 363+ 93E5 CB 5E        	bit 3,(hl)
 364+ 93E7 20 0A        	jr nz,4F
 365+ 93E9 C9           	ret
 366+ 93EA
 367+ 93EA CB E6        1 set 4,(hl)
 368+ 93EC C9           	ret
 369+ 93ED CB EE        2 set 5,(hl)
 370+ 93EF C9           	ret
 371+ 93F0 CB F6        3 set 6,(hl)
 372+ 93F2 C9           	ret
 373+ 93F3 CB FE        4 set 7,(hl)
 374+ 93F5 C9           	ret
 375+ 93F6
 376+ 93F6              ; ---------------------------------------------------------------------
 377+ 93F6              ;
 378+ 93F6              ;	23/01/24
 379+ 93F6              ;
 380+ 93F6              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F6              ;
 382+ 93F6              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F6              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F6              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F6              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F6
 387+ 93F6              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F6
 389+ 93F6 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F7 3D           	dec a
 391+ 93F8 20 06        	jr nz,1F
 392+ 93FA
 393+ 93FA              ; --- Tipo_1
 394+ 93FA
 395+ 93FA 21 34 8C     	ld hl,Ctrl_4
 396+ 93FD CB C6        	set 0,(hl)
 397+ 93FF C9           	ret
 398+ 9400
 399+ 9400 3D           1 dec a
 400+ 9401 20 06        	jr nz,2F
 401+ 9403
 402+ 9403              ; --- Tipo_2
 403+ 9403
 404+ 9403 21 34 8C     	ld hl,Ctrl_4
 405+ 9406 CB CE        	set 1,(hl)
 406+ 9408 C9           	ret
 407+ 9409
 408+ 9409 3D           2 dec a
 409+ 940A 20 06        	jr nz,3F
 410+ 940C
 411+ 940C              ; --- Tipo_3
 412+ 940C
 413+ 940C 21 34 8C     	ld hl,Ctrl_4
 414+ 940F CB D6        	set 2,(hl)
 415+ 9411 C9           	ret
 416+ 9412
 417+ 9412              ; --- Tipo_3
 418+ 9412
 419+ 9412 21 34 8C     3 ld hl,Ctrl_4
 420+ 9415 CB D6        	set 2,(hl)
 421+ 9417 C9           	ret
 422+ 9418
 423+ 9418              ; ---------------------------------------------------------------------
 424+ 9418              ;
 425+ 9418              ;	22/01/24
 426+ 9418
 427+ 9418 21 34 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 941B CB 46        	bit 0,(hl)
 429+ 941D 20 0E        	jr nz,1F
 430+ 941F
 431+ 941F CB 4E        	bit 1,(hl)
 432+ 9421 20 10        	jr nz,2F
 433+ 9423
 434+ 9423 CB 56        	bit 2,(hl)
 435+ 9425 20 12        	jr nz,3F
 436+ 9427
 437+ 9427 CB 5E        	bit 3,(hl)
 438+ 9429 20 14        	jr nz,4F
 439+ 942B 18 19        	jr 6F
 440+ 942D
 441+ 942D              ; Entidad_de_Tipo_1.
 442+ 942D
 443+ 942D CB 66        1 bit 4,(hl)
 444+ 942F 28 15        	jr z,6F
 445+ 9431 18 10        	jr 5F
 446+ 9433
 447+ 9433              ; Entidad_de_Tipo_2.
 448+ 9433
 449+ 9433 CB 6E        2 bit 5,(hl)
 450+ 9435 28 0F        	jr z,6F
 451+ 9437 18 0A        	jr 5F
 452+ 9439
 453+ 9439              ; Entidad_de_Tipo_3.
 454+ 9439
 455+ 9439 CB 76        3 bit 6,(hl)
 456+ 943B 28 09        	jr z,6F
 457+ 943D 18 04        	jr 5F
 458+ 943F
 459+ 943F              ; Entidad_de_Tipo_4.
 460+ 943F
 461+ 943F CB 7E        4 bit 7,(hl)
 462+ 9441 28 03        	jr z,6F
 463+ 9443
 464+ 9443              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9443
 466+ 9443 AF           5 xor a
 467+ 9444 3C           	inc a
 468+ 9445 C9           	ret
 469+ 9446
 470+ 9446              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9446
 472+ 9446 AF           6 xor a
 473+ 9447 C9           	ret
 474+ 9448
 475+ 9448              ;	------------------------------------------------------------------------------------
 476+ 9448              ;
 477+ 9448              ;	12/01/24
 478+ 9448              ;
 479+ 9448              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9448              ;
 481+ 9448              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9448              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9448
 484+ 9448 CB 27        Calcula_salto_en_BC sla a
 485+ 944A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 944C 4F           	ld c,a
 487+ 944D 06 00        	ld b,0
 488+ 944F C9           	ret
 489+ 9450
 490+ 9450              ; ------------------------------------------------------------------
 491+ 9450              ;
 492+ 9450              ;	19/1/24
 493+ 9450              ;
 494+ 9450              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9450              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9450
 497+ 9450 A7           Situa_en_datos_de_definicion and a
 498+ 9451 ED 4A        	adc hl,bc
 499+ 9453 CD AC 90     	call Extrae_address
 500+ 9456 22 0A 8C         ld (Datos_de_entidad),hl
 501+ 9459 C9           	ret
 502+ 945A
 503+ 945A              ; ------------------------------------------------------------------
 504+ 945A
 505+ 945A              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 945A              ; 	inc de
 507+ 945A              ; 	inc de
 508+ 945A              ; 	ex de,hl
 509+ 945A              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 945A              ; 	ret
 511+ 945A
 512+ 945A              ; ----------------------------------------------------------------------------------------------------------
 513+ 945A              ;
 514+ 945A              ;	24/6/24
 515+ 945A              ;
 516+ 945A              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 945A              ;	_ de entidad.
 518+ 945A              ;
 519+ 945A              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 945A              ;
 521+ 945A              ;
 522+ 945A              ;	MODIFICA: HL,DE y BC
 523+ 945A
 524+ 945A
 525+ 945A              Definicion_de_entidad_a_bandeja_DRAW
 526+ 945A
 527+ 945A 11 BF 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 945D 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 945E 12           	ld (de),a
 530+ 945F 23           	inc hl
 531+ 9460              ;
 532+ 9460 11 CD 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9463 01 02 00     	ld bc,2
 534+ 9466 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9468              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9468 11 C2 8B     	ld de,Contador_de_vueltas
 537+ 946B 7E           	ld a,(hl)
 538+ 946C 12           	ld (de),a
 539+ 946D 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 946E
 541+ 946E 11 D4 8B     	ld de,Indice_Sprite_der
 542+ 9471 01 04 00     	ld bc,4
 543+ 9474 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9476
 545+ 9476 11 DC 8B     	ld de,Posicion_inicio
 546+ 9479 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 947C ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 947E
 549+ 947E 11 C6 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9481 01 02 00     	ld bc,2
 551+ 9484 ED B0        	ldir
 552+ 9486
 553+ 9486 C9           	ret
 554+ 9487
 555+ 9487              ; ----------------------------------------------------------------------------------------------------------
 556+ 9487              ;
 557+ 9487              ;	1/8/24
 558+ 9487              ;
 559+ 9487
 560+ 9487              Parametros_de_bandeja_DRAW_a_caja
 561+ 9487
 562+ 9487 21 BF 8B     	ld hl,Bandeja_DRAW
 563+ 948A 01 0C 00     	ld bc,12
 564+ 948D ED B0        	ldir
 565+ 948F C9           	ret
 566+ 9490
 567+ 9490              ;---------------------------------------------------------------------------------------------------------------
 568+ 9490              ;
 569+ 9490              ;	5/1/24
 570+ 9490              ;
 571+ 9490              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9490              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9490              ;
 574+ 9490              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9490              ;
 576+ 9490              ;	(Numero_parcial_de_entidades)="7".
 577+ 9490              ;
 578+ 9490              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9490              ;
 580+ 9490              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9490              ;
 582+ 9490              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9490              ;	MODIFICA: A y B.
 584+ 9490              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9490
 586+ 9490              Inicializa_Numero_parcial_de_entidades
 587+ 9490
 588+ 9490              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9490
 590+ 9490 3A 05 8C     	ld a,(Numero_de_entidades)
 591+ 9493 A7           	and a
 592+ 9494
 593+ 9494              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9494              ;	jr z,$
 595+ 9494              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9494
 597+ 9494 20 03        	jr nz,3F
 598+ 9496
 599+ 9496              ; ---------- ---------- ----------
 600+ 9496
 601+ 9496              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9496              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9496
 604+ 9496 CD 8C 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9499
 606+ 9499              ; ---------- ---------- ----------
 607+ 9499
 608+ 9499 3A 05 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 949C FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 949E 38 08        	jr c,1F
 611+ 94A0
 612+ 94A0              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A0              ; Actualizamos variables.
 614+ 94A0
 615+ 94A0 3E 07        	ld a,7
 616+ 94A2 32 06 8C     	ld (Numero_parcial_de_entidades),a
 617+ 94A5 47           	ld b,a
 618+ 94A6 18 04        	jr 2F
 619+ 94A8
 620+ 94A8              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A8              ; (Numero_de_entidades)="0".
 622+ 94A8
 623+ 94A8 32 06 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 94AB 47           	ld b,a
 625+ 94AC C9           2 ret
 626+ 94AD
# file closed: Rutinas_de_inicio_y_niveles.asm
2091  94AD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94AD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94AD              ;
   3+ 94AD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94AD              ;
   5+ 94AD              ; *****************************************************************************************************************************************************************************************
   6+ 94AD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94AD
   8+ 94AD 7C           calcula_tercio ld a,h
   9+ 94AE E6 18        	and $18
  10+ 94B0 CB 2F        	sra a
  11+ 94B2 CB 2F        	sra a
  12+ 94B4 CB 2F        	sra a
  13+ 94B6 C9           	ret
  14+ 94B7
# file closed: calcula_tercio.asm
2092  94B7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B7              ;
   3+ 94B7              ;
   4+ 94B7              ;	CLS.
   5+ 94B7              ;
   6+ 94B7              ;	Limpia la pantalla y define sus atributos.
   7+ 94B7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B7              ;
   9+ 94B7              ;	COLORES: 0 ..... NEGRO
  10+ 94B7              ;    		 1 ..... AZUL
  11+ 94B7              ; 			 2 ..... ROJO
  12+ 94B7              ;			 3 ..... MAGENTA
  13+ 94B7              ; 			 4 ..... VERDE
  14+ 94B7              ; 			 5 ..... CIAN
  15+ 94B7              ;			 6 ..... AMARILLO
  16+ 94B7              ; 			 7 ..... BLANCO
  17+ 94B7              ;
  18+ 94B7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B7              ;
  20+ 94B7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B7
  22+ 94B7
  23+ 94B7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94BA 11 01 40     	LD DE,$4001
  25+ 94BD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C2 ED B0        	LDIR
  28+ 94C4 01 FF 02     	LD BC,767
  29+ 94C7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C8 ED B0        	LDIR
  31+ 94CA C9           	ret
  32+ 94CB
# file closed: Cls.asm
2093  94CB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94CB              ; ------------------------------------------------------------------------
   2+ 94CB              ;
   3+ 94CB              ;	30/1/24
   4+ 94CB              ;
   5+ 94CB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94CB              ;	Fila superior "0", Columna izquierda "0".
   7+ 94CB              ;
   8+ 94CB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94CB              ;
  10+ 94CB              ;	Modifica: A,BC y DE.
  11+ 94CB
  12+ 94CB 7D           Genera_coordenadas ld a,l
  13+ 94CC E6 1F        	and $1f
  14+ 94CE 32 C0 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D1
  16+ 94D1 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D2 FE 40        	cp $40
  18+ 94D4 38 1C        	jr c,4F
  19+ 94D6
  20+ 94D6 CD AD 94     	call calcula_tercio
  21+ 94D9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94DA
  23+ 94DA 1E 00        	ld e,0
  24+ 94DC 7D           	ld a,l
  25+ 94DD E6 E0        	and $e0
  26+ 94DF 28 01        	jr z,1F
  27+ 94E1 04           	inc b
  28+ 94E2
  29+ 94E2 04           1 inc b
  30+ 94E3 05           	dec b
  31+ 94E4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E6              ;														; _ , salimos.
  33+ 94E6 1C           3 inc e
  34+ 94E7 D6 20        	sub 32
  35+ 94E9 20 FB        	jr nz,3B
  36+ 94EB 10 F5        	djnz 1B
  37+ 94ED
  38+ 94ED 7B           2 ld a,e
  39+ 94EE 32 C1 8B     	ld (Coordenada_y),a
  40+ 94F1 C9           	ret
  41+ 94F2
  42+ 94F2 AF           4 xor a
  43+ 94F3 32 C1 8B     	ld (Coordenada_y),a
  44+ 94F6 C9           	ret
  45+ 94F7
# file closed: Genera_coordenadas.asm
2094  94F7              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F7              ;
   3+ 94F7              ;	20/09/24
   4+ 94F7              ;
   5+ 94F7              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F7              ;   DE contiene Puntero_objeto.
   7+ 94F7              ;   IX contiene el Puntero de impresión.
   8+ 94F7
   9+ 94F7              Genera_datos_de_impresion
  10+ 94F7
  11+ 94F7 ED 73 0C 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94FB
  13+ 94FB 31 C6 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94FE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9500
  16+ 9500 2A 2D 8C         ld hl,(Scanlines_album_SP)
  17+ 9503
  18+ 9503 3E 05            ld a,5
  19+ 9505 85               add l
  20+ 9506 6F               ld l,a
  21+ 9507
  22+ 9507 F9               ld sp,hl
  23+ 9508 22 2D 8C         ld (Scanlines_album_SP),hl
  24+ 950B
  25+ 950B 21 00 00         ld hl,0
  26+ 950E
  27+ 950E DD E5            push ix
  28+ 9510 3B               dec sp
  29+ 9511 ED 7A            adc hl,sp
  30+ 9513 D5               push de
  31+ 9514
  32+ 9514              ; Recuperamos SP.
  33+ 9514
  34+ 9514 ED 7B 0C 8C      ld sp,(Stack)
  35+ 9518
  36+ 9518 E5               push hl
  37+ 9519 F1               pop af
  38+ 951A 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 951B
  40+ 951B              ; Tenemos el encabezado listo.
  41+ 951B              ; Preparamos registros para generar los scanlines.
  42+ 951B
  43+ 951B DD E5            push ix
  44+ 951D E1               pop hl                                          ; 1er scanline en HL.
  45+ 951E
  46+ 951E ED 5B 2D 8C      ld de,(Scanlines_album_SP)
  47+ 9522
  48+ 9522              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9522              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9522
  51+ 9522 7C               ld a,h
  52+ 9523 FE 50            cp $50
  53+ 9525 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9527
  55+ 9527 20 05            jr nz,2F
  56+ 9529
  57+ 9529 7D               ld a,l
  58+ 952A FE E0            cp $e0
  59+ 952C 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 952E
  61+ 952E 7D           2 ld a,l
  62+ 952F FE C0            cp $c0
  63+ 9531 D2 C7 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9534
  65+ 9534              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9534
  67+ 9534 CD C5 99         call NextScan
  68+ 9537 EB               ex de,hl
  69+ 9538
  70+ 9538 73               ld (hl),e
  71+ 9539 23               inc hl
  72+ 953A 72               ld (hl),d
  73+ 953B 23               inc hl
  74+ 953C
  75+ 953C EB               ex de,hl
  76+ 953D
  77+ 953D CD C5 99         call NextScan
  78+ 9540 EB               ex de,hl
  79+ 9541
  80+ 9541 73               ld (hl),e
  81+ 9542 23               inc hl
  82+ 9543 72               ld (hl),d
  83+ 9544 23               inc hl
  84+ 9545
  85+ 9545 EB               ex de,hl
  86+ 9546
  87+ 9546 CD C5 99         call NextScan
  88+ 9549 EB               ex de,hl
  89+ 954A
  90+ 954A 73               ld (hl),e
  91+ 954B 23               inc hl
  92+ 954C 72               ld (hl),d
  93+ 954D 23               inc hl
  94+ 954E
  95+ 954E EB               ex de,hl
  96+ 954F
  97+ 954F CD C5 99         call NextScan
  98+ 9552 EB               ex de,hl
  99+ 9553
 100+ 9553 73               ld (hl),e
 101+ 9554 23               inc hl
 102+ 9555 72               ld (hl),d
 103+ 9556 23               inc hl
 104+ 9557
 105+ 9557 EB               ex de,hl
 106+ 9558
 107+ 9558 CD C5 99         call NextScan
 108+ 955B EB               ex de,hl
 109+ 955C
 110+ 955C 73               ld (hl),e
 111+ 955D 23               inc hl
 112+ 955E 72               ld (hl),d
 113+ 955F 23               inc hl
 114+ 9560
 115+ 9560 EB               ex de,hl
 116+ 9561
 117+ 9561 CD C5 99         call NextScan
 118+ 9564 EB               ex de,hl
 119+ 9565
 120+ 9565 73               ld (hl),e
 121+ 9566 23               inc hl
 122+ 9567 72               ld (hl),d
 123+ 9568 23               inc hl
 124+ 9569
 125+ 9569 EB               ex de,hl
 126+ 956A
 127+ 956A CD C5 99         call NextScan
 128+ 956D EB               ex de,hl
 129+ 956E
 130+ 956E 73               ld (hl),e
 131+ 956F 23               inc hl
 132+ 9570 72               ld (hl),d
 133+ 9571 23               inc hl
 134+ 9572
 135+ 9572 EB               ex de,hl
 136+ 9573
 137+ 9573 CD C5 99         call NextScan
 138+ 9576 EB               ex de,hl
 139+ 9577
 140+ 9577 73               ld (hl),e
 141+ 9578 23               inc hl
 142+ 9579 72               ld (hl),d
 143+ 957A 23               inc hl
 144+ 957B
 145+ 957B EB               ex de,hl
 146+ 957C
 147+ 957C CD C5 99         call NextScan
 148+ 957F EB               ex de,hl
 149+ 9580
 150+ 9580 73               ld (hl),e
 151+ 9581 23               inc hl
 152+ 9582 72               ld (hl),d
 153+ 9583 23               inc hl
 154+ 9584
 155+ 9584 EB               ex de,hl
 156+ 9585
 157+ 9585 CD C5 99         call NextScan
 158+ 9588 EB               ex de,hl
 159+ 9589
 160+ 9589 73               ld (hl),e
 161+ 958A 23               inc hl
 162+ 958B 72               ld (hl),d
 163+ 958C 23               inc hl
 164+ 958D
 165+ 958D EB               ex de,hl
 166+ 958E
 167+ 958E CD C5 99         call NextScan
 168+ 9591 EB               ex de,hl
 169+ 9592
 170+ 9592 73               ld (hl),e
 171+ 9593 23               inc hl
 172+ 9594 72               ld (hl),d
 173+ 9595 23               inc hl
 174+ 9596
 175+ 9596 EB               ex de,hl
 176+ 9597
 177+ 9597 CD C5 99         call NextScan
 178+ 959A EB               ex de,hl
 179+ 959B
 180+ 959B 73               ld (hl),e
 181+ 959C 23               inc hl
 182+ 959D 72               ld (hl),d
 183+ 959E 23               inc hl
 184+ 959F
 185+ 959F EB               ex de,hl
 186+ 95A0
 187+ 95A0 CD C5 99         call NextScan
 188+ 95A3 EB               ex de,hl
 189+ 95A4
 190+ 95A4 73               ld (hl),e
 191+ 95A5 23               inc hl
 192+ 95A6 72               ld (hl),d
 193+ 95A7 23               inc hl
 194+ 95A8
 195+ 95A8 EB               ex de,hl
 196+ 95A9
 197+ 95A9 CD C5 99         call NextScan
 198+ 95AC EB               ex de,hl
 199+ 95AD
 200+ 95AD 73               ld (hl),e
 201+ 95AE 23               inc hl
 202+ 95AF 72               ld (hl),d
 203+ 95B0 23               inc hl
 204+ 95B1
 205+ 95B1 EB               ex de,hl
 206+ 95B2
 207+ 95B2 CD C5 99         call NextScan
 208+ 95B5 EB               ex de,hl
 209+ 95B6
 210+ 95B6              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95B6              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95B6              ;   _ generar sus scanlines.
 213+ 95B6
 214+ 95B6              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95B6
 216+ 95B6 73               ld (hl),e
 217+ 95B7 23               inc hl
 218+ 95B8 72               ld (hl),d
 219+ 95B9 23               inc hl
 220+ 95BA
 221+ 95BA              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95BA
 223+ 95BA 22 2D 8C         ld (Scanlines_album_SP),hl
 224+ 95BD
 225+ 95BD EB               ex de,hl
 226+ 95BE
 227+ 95BE              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95BE
 229+ 95BE              ;    call NextScan
 230+ 95BE              ;    call NextScan
 231+ 95BE
 232+ 95BE 22 38 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95C1
 234+ 95C1              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95C1
 236+ 95C1 08               ex af,af
 237+ 95C2
 238+ 95C2 F5               push af
 239+ 95C3 E1               pop hl
 240+ 95C4
 241+ 95C4 36 10            ld (hl),16
 242+ 95C6
 243+ 95C6 C9               ret
 244+ 95C7
 245+ 95C7              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95C7
 247+ 95C7              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95C7
 249+ 95C7 3E 57            ld a,$57
 250+ 95C9 94               sub h
 251+ 95CA 47               ld b,a
 252+ 95CB
 253+ 95CB 3E DF            ld a,$df
 254+ 95CD BD               cp l
 255+ 95CE 38 04            jr c,1F
 256+ 95D0
 257+ 95D0 3E 08            ld a,8
 258+ 95D2 80               add b
 259+ 95D3 47               ld b,a
 260+ 95D4
 261+ 95D4              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95D4              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95D4
 264+ 95D4 48           1 ld c,b
 265+ 95D5 0C               inc c
 266+ 95D6
 267+ 95D6 04               inc b
 268+ 95D7 05               dec b
 269+ 95D8 20 02            jr nz,3F
 270+ 95DA
 271+ 95DA 18 0B            jr 6F
 272+ 95DC
 273+ 95DC CD C5 99     3 call NextScan
 274+ 95DF EB               ex de,hl
 275+ 95E0
 276+ 95E0 73               ld (hl),e
 277+ 95E1 23               inc hl
 278+ 95E2 72               ld (hl),d
 279+ 95E3 23               inc hl
 280+ 95E4
 281+ 95E4 EB               ex de,hl
 282+ 95E5 10 F5            djnz 3B
 283+ 95E7
 284+ 95E7 ED 53 2D 8C  6 ld (Scanlines_album_SP),de
 285+ 95EB
 286+ 95EB 08           5 ex af,af
 287+ 95EC F5               push af
 288+ 95ED E1               pop hl
 289+ 95EE
 290+ 95EE 71               ld (hl),c
 291+ 95EF
 292+ 95EF C9               ret
 293+ 95F0
# file closed: Genera_datos_de_impresion.asm
2095  95F0              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F0              ; -----------------------------------------------------------------------------
   2+ 95F0              ;
   3+ 95F0              ;   11/03/24
   4+ 95F0              ;
   5+ 95F0
   6+ 95F0              Pinta_Sprites
   7+ 95F0
   8+ 95F0              ;    ld hl,(Scanlines_album_SP)
   9+ 95F0              ;    call Extrae_address
  10+ 95F0
  11+ 95F0              ;    inc h
  12+ 95F0              ;    dec h
  13+ 95F0              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F0
  15+ 95F0 ED 73 0C 8C      ld (Stack),sp
  16+ 95F4
  17+ 95F4 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F5              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F5 2C               inc l
  20+ 95F6 2C               inc l
  21+ 95F7
  22+ 95F7 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F8
  24+ 95F8 2C               inc l
  25+ 95F9 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95FA
  27+ 95FA              ;   Seleccionamos rutina de impresión:
  28+ 95FA
  29+ 95FA 3E 10            ld a,16
  30+ 95FC B8               cp b
  31+ 95FD C2 F9 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9600
  33+ 9600              ;   Rutinas:
  34+ 9600
  35+ 9600              Pinta_rapido    ;   1520 t/states.
  36+ 9600
  37+ 9600 E1               pop hl
  38+ 9601
  39+ 9601 1A               ld a,(de)
  40+ 9602 AE               xor (hl)
  41+ 9603 77               ld (hl),a
  42+ 9604 2C               inc l
  43+ 9605 1C               inc e
  44+ 9606 1A               ld a,(de)
  45+ 9607 AE               xor (hl)
  46+ 9608 77               ld (hl),a
  47+ 9609 2C               inc l
  48+ 960A 1C               inc e
  49+ 960B 1A               ld a,(de)
  50+ 960C AE               xor (hl)
  51+ 960D 77               ld (hl),a
  52+ 960E 13               inc de
  53+ 960F
  54+ 960F E1               pop hl
  55+ 9610
  56+ 9610 1A               ld a,(de)
  57+ 9611 AE               xor (hl)
  58+ 9612 77               ld (hl),a
  59+ 9613 2C               inc l
  60+ 9614 1C               inc e
  61+ 9615 1A               ld a,(de)
  62+ 9616 AE               xor (hl)
  63+ 9617 77               ld (hl),a
  64+ 9618 2C               inc l
  65+ 9619 1C               inc e
  66+ 961A 1A               ld a,(de)
  67+ 961B AE               xor (hl)
  68+ 961C 77               ld (hl),a
  69+ 961D 13               inc de
  70+ 961E
  71+ 961E E1               pop hl
  72+ 961F
  73+ 961F 1A               ld a,(de)
  74+ 9620 AE               xor (hl)
  75+ 9621 77               ld (hl),a
  76+ 9622 2C               inc l
  77+ 9623 1C               inc e
  78+ 9624 1A               ld a,(de)
  79+ 9625 AE               xor (hl)
  80+ 9626 77               ld (hl),a
  81+ 9627 2C               inc l
  82+ 9628 1C               inc e
  83+ 9629 1A               ld a,(de)
  84+ 962A AE               xor (hl)
  85+ 962B 77               ld (hl),a
  86+ 962C 13               inc de
  87+ 962D
  88+ 962D E1               pop hl
  89+ 962E
  90+ 962E 1A               ld a,(de)
  91+ 962F AE               xor (hl)
  92+ 9630 77               ld (hl),a
  93+ 9631 2C               inc l
  94+ 9632 1C               inc e
  95+ 9633 1A               ld a,(de)
  96+ 9634 AE               xor (hl)
  97+ 9635 77               ld (hl),a
  98+ 9636 2C               inc l
  99+ 9637 1C               inc e
 100+ 9638 1A               ld a,(de)
 101+ 9639 AE               xor (hl)
 102+ 963A 77               ld (hl),a
 103+ 963B 13               inc de
 104+ 963C
 105+ 963C E1               pop hl
 106+ 963D
 107+ 963D 1A               ld a,(de)
 108+ 963E AE               xor (hl)
 109+ 963F 77               ld (hl),a
 110+ 9640 2C               inc l
 111+ 9641 1C               inc e
 112+ 9642 1A               ld a,(de)
 113+ 9643 AE               xor (hl)
 114+ 9644 77               ld (hl),a
 115+ 9645 2C               inc l
 116+ 9646 1C               inc e
 117+ 9647 1A               ld a,(de)
 118+ 9648 AE               xor (hl)
 119+ 9649 77               ld (hl),a
 120+ 964A 13               inc de
 121+ 964B
 122+ 964B E1               pop hl
 123+ 964C
 124+ 964C 1A               ld a,(de)
 125+ 964D AE               xor (hl)
 126+ 964E 77               ld (hl),a
 127+ 964F 2C               inc l
 128+ 9650 1C               inc e
 129+ 9651 1A               ld a,(de)
 130+ 9652 AE               xor (hl)
 131+ 9653 77               ld (hl),a
 132+ 9654 2C               inc l
 133+ 9655 1C               inc e
 134+ 9656 1A               ld a,(de)
 135+ 9657 AE               xor (hl)
 136+ 9658 77               ld (hl),a
 137+ 9659 13               inc de
 138+ 965A
 139+ 965A E1               pop hl
 140+ 965B
 141+ 965B 1A               ld a,(de)
 142+ 965C AE               xor (hl)
 143+ 965D 77               ld (hl),a
 144+ 965E 2C               inc l
 145+ 965F 1C               inc e
 146+ 9660 1A               ld a,(de)
 147+ 9661 AE               xor (hl)
 148+ 9662 77               ld (hl),a
 149+ 9663 2C               inc l
 150+ 9664 1C               inc e
 151+ 9665 1A               ld a,(de)
 152+ 9666 AE               xor (hl)
 153+ 9667 77               ld (hl),a
 154+ 9668 13               inc de
 155+ 9669
 156+ 9669 E1               pop hl
 157+ 966A
 158+ 966A 1A               ld a,(de)
 159+ 966B AE               xor (hl)
 160+ 966C 77               ld (hl),a
 161+ 966D 2C               inc l
 162+ 966E 1C               inc e
 163+ 966F 1A               ld a,(de)
 164+ 9670 AE               xor (hl)
 165+ 9671 77               ld (hl),a
 166+ 9672 2C               inc l
 167+ 9673 1C               inc e
 168+ 9674 1A               ld a,(de)
 169+ 9675 AE               xor (hl)
 170+ 9676 77               ld (hl),a
 171+ 9677 13               inc de
 172+ 9678
 173+ 9678 E1               pop hl
 174+ 9679
 175+ 9679 1A               ld a,(de)
 176+ 967A AE               xor (hl)
 177+ 967B 77               ld (hl),a
 178+ 967C 2C               inc l
 179+ 967D 1C               inc e
 180+ 967E 1A               ld a,(de)
 181+ 967F AE               xor (hl)
 182+ 9680 77               ld (hl),a
 183+ 9681 2C               inc l
 184+ 9682 1C               inc e
 185+ 9683 1A               ld a,(de)
 186+ 9684 AE               xor (hl)
 187+ 9685 77               ld (hl),a
 188+ 9686 13               inc de
 189+ 9687
 190+ 9687 E1               pop hl
 191+ 9688
 192+ 9688 1A               ld a,(de)
 193+ 9689 AE               xor (hl)
 194+ 968A 77               ld (hl),a
 195+ 968B 2C               inc l
 196+ 968C 1C               inc e
 197+ 968D 1A               ld a,(de)
 198+ 968E AE               xor (hl)
 199+ 968F 77               ld (hl),a
 200+ 9690 2C               inc l
 201+ 9691 1C               inc e
 202+ 9692 1A               ld a,(de)
 203+ 9693 AE               xor (hl)
 204+ 9694 77               ld (hl),a
 205+ 9695 13               inc de
 206+ 9696
 207+ 9696 E1               pop hl
 208+ 9697
 209+ 9697 1A               ld a,(de)
 210+ 9698 AE               xor (hl)
 211+ 9699 77               ld (hl),a
 212+ 969A 2C               inc l
 213+ 969B 1C               inc e
 214+ 969C 1A               ld a,(de)
 215+ 969D AE               xor (hl)
 216+ 969E 77               ld (hl),a
 217+ 969F 2C               inc l
 218+ 96A0 1C               inc e
 219+ 96A1 1A               ld a,(de)
 220+ 96A2 AE               xor (hl)
 221+ 96A3 77               ld (hl),a
 222+ 96A4 13               inc de
 223+ 96A5
 224+ 96A5 E1               pop hl
 225+ 96A6
 226+ 96A6 1A               ld a,(de)
 227+ 96A7 AE               xor (hl)
 228+ 96A8 77               ld (hl),a
 229+ 96A9 2C               inc l
 230+ 96AA 1C               inc e
 231+ 96AB 1A               ld a,(de)
 232+ 96AC AE               xor (hl)
 233+ 96AD 77               ld (hl),a
 234+ 96AE 2C               inc l
 235+ 96AF 1C               inc e
 236+ 96B0 1A               ld a,(de)
 237+ 96B1 AE               xor (hl)
 238+ 96B2 77               ld (hl),a
 239+ 96B3 13               inc de
 240+ 96B4
 241+ 96B4 E1               pop hl
 242+ 96B5
 243+ 96B5 1A               ld a,(de)
 244+ 96B6 AE               xor (hl)
 245+ 96B7 77               ld (hl),a
 246+ 96B8 2C               inc l
 247+ 96B9 1C               inc e
 248+ 96BA 1A               ld a,(de)
 249+ 96BB AE               xor (hl)
 250+ 96BC 77               ld (hl),a
 251+ 96BD 2C               inc l
 252+ 96BE 1C               inc e
 253+ 96BF 1A               ld a,(de)
 254+ 96C0 AE               xor (hl)
 255+ 96C1 77               ld (hl),a
 256+ 96C2 13               inc de
 257+ 96C3
 258+ 96C3 E1               pop hl
 259+ 96C4
 260+ 96C4 1A               ld a,(de)
 261+ 96C5 AE               xor (hl)
 262+ 96C6 77               ld (hl),a
 263+ 96C7 2C               inc l
 264+ 96C8 1C               inc e
 265+ 96C9 1A               ld a,(de)
 266+ 96CA AE               xor (hl)
 267+ 96CB 77               ld (hl),a
 268+ 96CC 2C               inc l
 269+ 96CD 1C               inc e
 270+ 96CE 1A               ld a,(de)
 271+ 96CF AE               xor (hl)
 272+ 96D0 77               ld (hl),a
 273+ 96D1 13               inc de
 274+ 96D2
 275+ 96D2 E1               pop hl
 276+ 96D3
 277+ 96D3 1A               ld a,(de)
 278+ 96D4 AE               xor (hl)
 279+ 96D5 77               ld (hl),a
 280+ 96D6 2C               inc l
 281+ 96D7 1C               inc e
 282+ 96D8 1A               ld a,(de)
 283+ 96D9 AE               xor (hl)
 284+ 96DA 77               ld (hl),a
 285+ 96DB 2C               inc l
 286+ 96DC 1C               inc e
 287+ 96DD 1A               ld a,(de)
 288+ 96DE AE               xor (hl)
 289+ 96DF 77               ld (hl),a
 290+ 96E0 13               inc de
 291+ 96E1
 292+ 96E1 E1               pop hl
 293+ 96E2
 294+ 96E2 1A               ld a,(de)
 295+ 96E3 AE               xor (hl)
 296+ 96E4 77               ld (hl),a
 297+ 96E5 2C               inc l
 298+ 96E6 1C               inc e
 299+ 96E7 1A               ld a,(de)
 300+ 96E8 AE               xor (hl)
 301+ 96E9 77               ld (hl),a
 302+ 96EA 2C               inc l
 303+ 96EB 1C               inc e
 304+ 96EC 1A               ld a,(de)
 305+ 96ED AE               xor (hl)
 306+ 96EE 77               ld (hl),a
 307+ 96EF 13               inc de
 308+ 96F0
 309+ 96F0 ED 73 2D 8C      ld (Scanlines_album_SP),sp
 310+ 96F4 ED 7B 0C 8C      ld sp,(Stack)
 311+ 96F8 C9               ret
 312+ 96F9
 313+ 96F9              Pinta_lento
 314+ 96F9
 315+ 96F9 E1           1 pop hl
 316+ 96FA
 317+ 96FA 1A               ld a,(de)
 318+ 96FB AE               xor (hl)
 319+ 96FC 77               ld (hl),a
 320+ 96FD 2C               inc l
 321+ 96FE 1C               inc e
 322+ 96FF 1A               ld a,(de)
 323+ 9700 AE               xor (hl)
 324+ 9701 77               ld (hl),a
 325+ 9702 2C               inc l
 326+ 9703 1C               inc e
 327+ 9704 1A               ld a,(de)
 328+ 9705 AE               xor (hl)
 329+ 9706 77               ld (hl),a
 330+ 9707 13               inc de
 331+ 9708
 332+ 9708 10 EF            djnz 1B
 333+ 970A
 334+ 970A ED 73 2D 8C      ld (Scanlines_album_SP),sp
 335+ 970E ED 7B 0C 8C      ld sp,(Stack)
 336+ 9712 C9               ret
# file closed: Pinta_Sprites.asm
2096  9713              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9713              ; ******************************************************************************************************************************************************************************************
   2+ 9713              ;
   3+ 9713              ; 26/06/23
   4+ 9713              ;
   5+ 9713              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9713
   7+ 9713              Draw
   8+ 9713
   9+ 9713 CD B9 99     	call Prepara_draw
  10+ 9716 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9717 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9718 28 05        	jr z,2F
  13+ 971A
  14+ 971A 3A DE 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 971D 18 0C        	jr 1F
  16+ 971F
  17+ 971F 2A DC 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9722 22 CF 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9725 CD B1 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9728              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9728
  22+ 9728 CD 58 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 972B
  24+ 972B 3A CC 8B     1 ld a,(Ctrl_0)
  25+ 972E CB 6F        	bit 5,a
  26+ 9730 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9732
  28+ 9732 CD 47 97     	call Comprueba_limite_horizontal
  29+ 9735 CD D7 97     	call Comprueba_limite_vertical
  30+ 9738
  31+ 9738              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9738              ; -----------------------
  33+ 9738              ; -----------------------
  34+ 9738              ; -----------------------
  35+ 9738
  36+ 9738 CD 2D 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 973B CD 64 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 973E
  39+ 973E 3A CC 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9741 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9743 32 CC 8B     	ld (Ctrl_0),a
  42+ 9746
  43+ 9746 C9           	ret
  44+ 9747
  45+ 9747              ; *******************************************************************************************************************************************************************************************
  46+ 9747              ;	21/01/23
  47+ 9747              ;
  48+ 9747              ; 	Comprueba_limite_horizontal.
  49+ 9747              ;
  50+ 9747              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9747              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9747              ;
  53+ 9747              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9747              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9747              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9747              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9747
  58+ 9747
  59+ 9747
  60+ 9747 3A CC 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 974A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 974C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 974E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9750 32 CC 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9753 18 09            jr 6F
  66+ 9755 CB 5F        1 bit 3,a
  67+ 9757 28 0A            jr z,2F
  68+ 9759 E6 F7            and $f7
  69+ 975B 32 CC 8B         ld (Ctrl_0),a
  70+ 975E CD B1 98     6 call Inicializacion
  71+ 9761 18 5B            jr 5F
  72+ 9763 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9764
  74+ 9764              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9764              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9764
  77+ 9764 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9765 2A E0 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9768 CD AD 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 976B 67           	ld h,a
  81+ 976C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 976D CD AD 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9770 67           	ld h,a
  84+ 9771 A7           	and a
  85+ 9772 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9774 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9775 3A DE 8B     	ld a,(Cuad_objeto)
  88+ 9778 FE 02        	cp 2
  89+ 977A 38 1E        	jr c,3F
  90+ 977C 28 1C        	jr z,3F
  91+ 977E 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 977F 28 23            jr z,7F
  93+ 9781 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9783 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9785 E1           	pop hl
  96+ 9786
  97+ 9786              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9786              ; _para indicar con E="2" en caso necesario.
  99+ 9786
 100+ 9786 E5               push hl
 101+ 9787 C5               push bc
 102+ 9788 CD AD 94     	call calcula_tercio
 103+ 978B FE 01        	cp 1
 104+ 978D 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 978F CD BF 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9792 28 26            jr z,9F
 107+ 9794 38 24            jr c,9F
 108+ 9796 1E 00        11 ld e,0
 109+ 9798 18 22            jr 8F
 110+ 979A 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 979B 28 07        	jr z, 7F
 112+ 979D 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 979F 1E 00         	ld e,0
 114+ 97A1 E1           	pop hl
 115+ 97A2 18 04        	jr 4F
 116+ 97A4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A6 18 15            jr 10F
 118+ 97A8
 119+ 97A8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A8              ; _para indicar con E="2" en caso necesario.
 121+ 97A8
 122+ 97A8 E5           4 push hl
 123+ 97A9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97AA CD AD 94     	call calcula_tercio
 125+ 97AD FE 01        	cp 1
 126+ 97AF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97B1 CD BF 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B4 28 04            jr z,9F
 129+ 97B6 30 02            jr nc,9F
 130+ 97B8 18 02        	jr 8F
 131+ 97BA 1E 02        9 ld e,2
 132+ 97BC C1           8 pop bc
 133+ 97BD E1           10 pop hl
 134+ 97BE C9           5 ret
 135+ 97BF
 136+ 97BF              ; --------------------
 137+ 97BF              ;
 138+ 97BF              ; 25/08/22
 139+ 97BF
 140+ 97BF CD AD 94     Comprueba_centro call calcula_tercio
 141+ 97C2 67               ld h,a
 142+ 97C3 08           	ex af,af
 143+ 97C4 FE 02        	cp 2
 144+ 97C6 38 07        	jr c,1F
 145+ 97C8 28 05        	jr z,1F
 146+ 97CA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97CD 18 03        	jr 2F
 148+ 97CF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97D2 08           2 ex af,af
 150+ 97D3 A7               and a
 151+ 97D4 ED 42            sbc hl,bc
 152+ 97D6 C9               ret
 153+ 97D7
 154+ 97D7              ; *********************************************************************************************************************************************************************************************
 155+ 97D7              ;
 156+ 97D7              ;   16/8/22
 157+ 97D7              ;
 158+ 97D7              ;	Comprueba_limite_vertical
 159+ 97D7              ;
 160+ 97D7              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D7              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D7              ;
 163+ 97D7
 164+ 97D7 2A CF 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97DA 7D           	ld a,l
 166+ 97DB E6 1F        	and $1F
 167+ 97DD 57           	ld d,a
 168+ 97DE 3A E2 8B     	ld a,(Limite_vertical)
 169+ 97E1 BA           	cp d 											; Límite - Posición.
 170+ 97E2 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97E3 3A DE 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E6 CB 47        	bit 0,a
 173+ 97E8 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97EA
 175+ 97EA              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97EA
 177+ 97EA 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97EB 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97ED
 180+ 97ED              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97ED              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97ED
 183+ 97ED 3A C0 8B         ld a,(Coordenada_X)
 184+ 97F0 16 0F            ld d,Centro_izquierda
 185+ 97F2 A7               and a
 186+ 97F3 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F4 28 1E            jr z,3F
 188+ 97F6 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F8              ;                                                    ; _salimos sin modificar nada.
 190+ 97F8 18 0E            jr 2F
 191+ 97FA 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97FB 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97FD
 194+ 97FD              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97FD              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97FD
 197+ 97FD 3A C0 8B         ld a,(Coordenada_X)
 198+ 9800 16 10            ld d,Centro_derecha
 199+ 9802 A7               and a
 200+ 9803 92               sub d
 201+ 9804 28 0E            jr z,3F
 202+ 9806 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9808              ;                                                    ; _salimos sin modificar nada.
 204+ 9808 CB 43        2 bit 0,e
 205+ 980A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 980C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 980D CD A1 98         call Modificaccionne
 208+ 9810 C1           	pop bc
 209+ 9811 CD B1 98         call Inicializacion
 210+ 9814 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9815
 212+ 9815              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9815
 214+ 9815 C5           4 push bc
 215+ 9816 01 CE 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9819 0A           	ld a,(bc)
 217+ 981A 3D           	dec a
 218+ 981B 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 981C 7D           	ld a,l
 220+ 981D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 981E CB 47        	bit 0,a
 222+ 9820 28 03        	jr z,5F
 223+ 9822 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9823 18 2E        	jr 7F
 225+ 9825
 226+ 9825              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9825
 228+ 9825 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9826 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9827 3A CC 8B     	ld a,(Ctrl_0)
 231+ 982A CB 4F        	bit 1,a
 232+ 982C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 982E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 982F
 235+ 982F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 982F
 237+ 982F 1C               inc e
 238+ 9830 1D               dec e
 239+ 9831 20 07            jr nz,12F
 240+ 9833 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9834 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9835 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9838 18 44        13 jr 9F
 244+ 983A CB 43        12 bit 0,e
 245+ 983C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 983E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 983E C1           	pop bc
 248+ 983F 18 D3        	jr 3B
 249+ 9841 80           14 add b
 250+ 9842 6F               ld l,a
 251+ 9843 22 CF 8B     	ld (Posicion_actual),hl
 252+ 9846 CD A1 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9849 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 984B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 984D 32 CC 8B         ld (Ctrl_0),a
 256+ 9850 F1           	pop af
 257+ 9851 18 2B        	jr 9F
 258+ 9853
 259+ 9853              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9853
 261+ 9853 F5           7 push af
 262+ 9854 3A CC 8B     	ld a,(Ctrl_0)
 263+ 9857 CB 47        	bit 0,a
 264+ 9859 20 1D        	jr nz,8F
 265+ 985B F1           	pop af
 266+ 985C
 267+ 985C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 985C
 269+ 985C 1C           	inc e
 270+ 985D 1D               dec e
 271+ 985E 20 07            jr nz,10F
 272+ 9860 90           	sub b
 273+ 9861 6F               ld l,a
 274+ 9862 22 CF 8B     	ld (Posicion_actual),hl
 275+ 9865 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9867              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9867 CB 43        10 bit 0,e
 278+ 9869 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 986B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 986B C1           	pop bc
 281+ 986C 18 A6        	jr 3B
 282+ 986E 90           16 sub b
 283+ 986F 6F               ld l,a
 284+ 9870 22 CF 8B     	ld (Posicion_actual),hl
 285+ 9873 CD A1 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9876 18 06            jr 9F
 287+ 9878 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 987A 32 CC 8B         ld (Ctrl_0),a
 289+ 987D F1           	pop af
 290+ 987E C1           9 pop bc
 291+ 987F 1E 00        	ld e,0
 292+ 9881 CD B1 98         call Inicializacion
 293+ 9884 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9885 08           	ex af,af
 295+ 9886 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9887 18 8B            jr 3B
 297+ 9889
 298+ 9889              ; --------------------
 299+ 9889
 300+ 9889 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 988B CD D4 99     1 call PreviousScan
 302+ 988E 10 FB            djnz 1B
 303+ 9890 22 CF 8B     	ld (Posicion_actual),hl
 304+ 9893 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9894 C9           	ret
 306+ 9895
 307+ 9895              ; --------------------
 308+ 9895
 309+ 9895 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9897 CD C5 99     1 call NextScan
 311+ 989A 10 FB            djnz 1B
 312+ 989C 22 CF 8B     	ld (Posicion_actual),hl
 313+ 989F AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A0 C9           	ret
 315+ 98A1
 316+ 98A1              ; --------------------
 317+ 98A1              ;
 318+ 98A1              ;	22/01/23
 319+ 98A1              ;
 320+ 98A1              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98A1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98A1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98A1
 324+ 98A1
 325+ 98A1              Modificaccionne
 326+ 98A1
 327+ 98A1 3A DE 8B     	ld a,(Cuad_objeto)
 328+ 98A4 FE 02        	cp 2
 329+ 98A6 CC 89 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A9 DC 89 98         call c,Modifica_Pos_actual
 331+ 98AC C8           	ret z
 332+ 98AD CD 95 98         call Modifica_Pos_actual2
 333+ 98B0 C9               ret
 334+ 98B1
 335+ 98B1              ; *************************************************************************************************************************************************************************************************
 336+ 98B1              ;
 337+ 98B1              ;	13/8/22
 338+ 98B1              ;
 339+ 98B1              ;	Inicializacion
 340+ 98B1              ;
 341+ 98B1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98B1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98B1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98B1              ;
 345+ 98B1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98B1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98B1              ;	_ desaparece/aparece.
 348+ 98B1
 349+ 98B1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98B1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98B1              ;
 352+ 98B1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98B1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98B1              ; 		   [E] ="0"
 355+ 98B1
 356+ 98B1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98B1
 358+ 98B1 CD AD 94     Inicializacion call calcula_tercio
 359+ 98B4 28 36        	jr z,primit
 360+ 98B6 E6 02        	and 2
 361+ 98B8 20 07        	jr nz,segmit
 362+ 98BA 7D           	ld a,l
 363+ 98BB FE 7F        	cp $7f
 364+ 98BD 38 2D        	jr c,primit
 365+ 98BF 28 2B        	jr z,primit
 366+ 98C1 CD 27 99     segmit call column
 367+ 98C4 38 13        	jr c,tercuad
 368+ 98C6 3E 04        cuarcuad ld a,4
 369+ 98C8 32 DE 8B     	ld (Cuad_objeto),a
 370+ 98CB 21 20 48     	ld hl,$4820
 371+ 98CE 22 E0 8B     	ld (Limite_horizontal),hl
 372+ 98D1 21 E2 8B     	ld hl,Limite_vertical
 373+ 98D4 36 0D        	ld (hl),$0d
 374+ 98D6 08           	ex af,af
 375+ 98D7 18 3C        	jr 1F
 376+ 98D9              tercuad
 377+ 98D9 3E 03        	ld a,3
 378+ 98DB 32 DE 8B     	ld (Cuad_objeto),a
 379+ 98DE 21 20 48     	ld hl,$4820
 380+ 98E1 22 E0 8B     	ld (Limite_horizontal),hl
 381+ 98E4 21 E2 8B     	ld hl,Limite_vertical
 382+ 98E7 36 12        	ld (hl),$12
 383+ 98E9 08           	ex af,af
 384+ 98EA 18 29        	jr 1F
 385+ 98EC CD 27 99     primit call column
 386+ 98EF 38 13        	jr c, primcuad
 387+ 98F1              segcuad
 388+ 98F1 3E 02        	ld a,2
 389+ 98F3 32 DE 8B     	ld (Cuad_objeto),a
 390+ 98F6 21 C0 4F     	ld hl,$4fc0
 391+ 98F9 22 E0 8B     	ld (Limite_horizontal),hl
 392+ 98FC 21 E2 8B     	ld hl,Limite_vertical
 393+ 98FF 36 0D        	ld (hl),$0d
 394+ 9901 08           	ex af,af
 395+ 9902 18 11        	jr 1F
 396+ 9904              primcuad
 397+ 9904 3E 01        	ld a,1
 398+ 9906 32 DE 8B     	ld (Cuad_objeto),a
 399+ 9909 21 C0 4F     	ld hl,$4fc0
 400+ 990C 22 E0 8B     	ld (Limite_horizontal),hl
 401+ 990F 21 E2 8B     	ld hl,Limite_vertical
 402+ 9912 36 12        	ld (hl),$12
 403+ 9914 08           	ex af,af
 404+ 9915
 405+ 9915 C5           1 push bc
 406+ 9916 E5           	push hl
 407+ 9917 D5           	push de
 408+ 9918
 409+ 9918 2A CF 8B     	ld hl,(Posicion_actual)
 410+ 991B CD CB 94     	call Genera_coordenadas
 411+ 991E
 412+ 991E D1           	pop de
 413+ 991F E1           	pop hl
 414+ 9920 C1           	pop bc
 415+ 9921
 416+ 9921 21 CC 8B     	ld hl,Ctrl_0
 417+ 9924 CB EE        	set 5,(hl)
 418+ 9926 C9           	ret
 419+ 9927
 420+ 9927              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9927
 422+ 9927              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9927              ;
 424+ 9927              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9927
 426+ 9927 7D           column ld a,l
 427+ 9928 E6 1F        	and $1f
 428+ 992A FE 10         	cp $10
 429+ 992C C9            	ret
 430+ 992D
 431+ 992D              ; --------------------------------------------------------------------------------------------------------------------
 432+ 992D              ;
 433+ 992D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 992D              ;
 435+ 992D              ; 14/12/22
 436+ 992D              ;
 437+ 992D              ;	Modifica: A y BC.
 438+ 992D
 439+ 992D 3A DE 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9930 E6 01        	and 1
 441+ 9932 28 17        	jr z,1F
 442+ 9934
 443+ 9934              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9934
 445+ 9934 3A C0 8B     	ld a,(Coordenada_X)
 446+ 9937 47           	ld b,a
 447+ 9938 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9939 79           	ld a,c
 449+ 993A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 993B 38 08        	jr c,2F
 451+ 993D 47           	ld b,a
 452+ 993E 79           	ld a,c
 453+ 993F 90           	sub b
 454+ 9940 32 DF 8B     	ld (Columnas),a
 455+ 9943 18 1B        	jr 4F
 456+ 9945 79           2 ld a,c
 457+ 9946 32 DF 8B     	ld (Columnas),a
 458+ 9949 18 15        	jr 4F
 459+ 994B
 460+ 994B              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 994B
 462+ 994B 3A C0 8B     1 ld a,(Coordenada_X)
 463+ 994E 81           	add c
 464+ 994F 3D           	dec a
 465+ 9950 D6 1F        	sub $1f
 466+ 9952 38 08        	jr c,3F
 467+ 9954 47           	ld b,a
 468+ 9955 79           	ld a,c
 469+ 9956 90           	sub b
 470+ 9957 32 DF 8B     	ld (Columnas),a
 471+ 995A 18 04        	jr 4F
 472+ 995C 79           3 ld a,c
 473+ 995D 32 DF 8B     	ld (Columnas),a
 474+ 9960 D9           4 exx
 475+ 9961 4F           	ld c,a
 476+ 9962 D9           	exx
 477+ 9963 C9            ret
 478+ 9964
 479+ 9964              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9964              ;
 481+ 9964              ;   19/7/23
 482+ 9964              ;
 483+ 9964              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9964              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9964              ;
 486+ 9964              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9964              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9964              ;
 489+ 9964              ;	DESTRUYE: HL,B Y A.
 490+ 9964
 491+ 9964 3A DE 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9967 FE 02        	cp 2
 493+ 9969 38 18        	jr c,1F
 494+ 996B 28 16        	jr z,1F
 495+ 996D E6 01        	and 1
 496+ 996F 28 0D        	jr z,3F
 497+ 9971
 498+ 9971              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9971
 500+ 9971 CD AD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9974
 502+ 9974 7D           9 ld a,l
 503+ 9975 E6 1F        	and $1f
 504+ 9977 28 2A        	jr z,7F
 505+ 9979 2B           	dec hl
 506+ 997A 10 F8        	djnz 9B
 507+ 997C 18 25        	jr 7F
 508+ 997E
 509+ 997E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 997E
 511+ 997E 2A CF 8B     3 ld hl,(Posicion_actual)
 512+ 9981 18 20        	jr 7F
 513+ 9983
 514+ 9983 28 14        1 jr z,2F
 515+ 9985
 516+ 9985              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9985
 518+ 9985 CD AD 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9988
 520+ 9988 7D           4 ld a,l
 521+ 9989 E6 1F        	and $1f
 522+ 998B 28 03        	jr z,6F
 523+ 998D 2B           	dec hl
 524+ 998E 10 F8        	djnz 4B
 525+ 9990 06 0F        6 ld b,15
 526+ 9992 CD D4 99     5 call PreviousScan
 527+ 9995 10 FB        	djnz 5B
 528+ 9997 18 0A        	jr 7F
 529+ 9999
 530+ 9999              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9999
 532+ 9999 CD AD 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 999C 06 0F        	ld b,15
 534+ 999E CD D4 99     8 call PreviousScan
 535+ 99A1 10 FB        	djnz 8B
 536+ 99A3
 537+ 99A3 E5           7 push hl
 538+ 99A4 DD E1        	pop ix
 539+ 99A6
 540+ 99A6 2A D1 8B     	ld hl,(Puntero_objeto)
 541+ 99A9 E5           	push hl
 542+ 99AA FD E1        	pop iy
 543+ 99AC
 544+ 99AC C9           	ret
 545+ 99AD
 546+ 99AD              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99AD              ;
 548+ 99AD              ;	2/1/23
 549+ 99AD              ;
 550+ 99AD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99AD              ;
 552+ 99AD              ;	Tras esta rutina tenemos:
 553+ 99AD              ;
 554+ 99AD              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99AD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99AD              ;
 557+ 99AD              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99AD
 559+ 99AD 2A CF 8B     Operandos ld hl,(Posicion_actual)
 560+ 99B0 3A DF 8B     	ld a,(Columnas)
 561+ 99B3 3D           	dec a
 562+ 99B4 20 01        	jr nz,1F
 563+ 99B6 3C           	inc a
 564+ 99B7 47           1 ld b,a
 565+ 99B8 C9           	ret
 566+ 99B9
 567+ 99B9              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B9              ;
 569+ 99B9              ;	Prepara_draw
 570+ 99B9              ;
 571+ 99B9              ;	Es una rutina de carga.
 572+ 99B9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B9              ;
 574+ 99B9              ;	FUNCIONAMIENTO:
 575+ 99B9              ;
 576+ 99B9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B9              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B9              ;
 580+ 99B9              ;	DESTRUYE:
 581+ 99B9              ;
 582+ 99B9              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B9
 584+ 99B9 21 CD 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99BC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99BD 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99BE 4E           	ld c,(hl)
 588+ 99BF 2A CF 8B     	ld hl,(Posicion_actual)
 589+ 99C2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C4 C9           	ret
 591+ 99C5
 592+ 99C5              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C5              ;
 594+ 99C5              ;	5/08/22
 595+ 99C5              ;
 596+ 99C5              ;   NextScan.
 597+ 99C5              ;
 598+ 99C5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C5              ;
 600+ 99C5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C5              ;
 602+ 99C5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C5              ;
 604+ 99C5              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C5              ;
 606+ 99C5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C5              ;
 608+ 99C5
 609+ 99C5 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C6 7C               ld a,h
 611+ 99C7 E6 07            and 7
 612+ 99C9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99CA
 614+ 99CA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99CB C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99CD 6F               ld l,a
 617+ 99CE D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99CF
 619+ 99CF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99D2 67               ld h,a
 622+ 99D3 C9               ret
 623+ 99D4
 624+ 99D4              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D4              ;
 626+ 99D4              ;	5/08/22
 627+ 99D4              ;
 628+ 99D4              ;   PreviousScan.
 629+ 99D4              ;
 630+ 99D4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D4              ;
 632+ 99D4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D4              ;
 634+ 99D4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D4              ;
 636+ 99D4              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D4              ;
 638+ 99D4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D4              ;
 640+ 99D4
 641+ 99D4 7C           PreviousScan ld a,h
 642+ 99D5 25               dec h               ; Dec H.
 643+ 99D6 E6 07            and 7
 644+ 99D8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D9
 646+ 99D9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99DA D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99DC 6F               ld l,a
 649+ 99DD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99DE
 651+ 99DE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99DF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99E1 67               ld h,a
 654+ 99E2 C9               ret
 655+ 99E3
 656+ 99E3
 657+ 99E3
 658+ 99E3
 659+ 99E3
 660+ 99E3
 661+ 99E3
 662+ 99E3
 663+ 99E3
 664+ 99E3
 665+ 99E3
 666+ 99E3
# file closed: Draw_XOR.asm
2097  99E3              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E3
   2+ 99E3              ; ******************************************************************************************************************************************************************************************
   3+ 99E3              ;
   4+ 99E3              ;   20/05/23
   5+ 99E3              ;
   6+ 99E3              ;	Recompone_posicion_inicio
   7+ 99E3              ;
   8+ 99E3              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99E3              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99E3              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99E3              ;	_ a una u otra rutina.
  12+ 99E3
  13+ 99E3              Recompone_posicion_inicio
  14+ 99E3
  15+ 99E3 2A DC 8B     	ld hl,(Posicion_inicio)
  16+ 99E6 7D           	ld a,l
  17+ 99E7 E6 1F        	and $1f
  18+ 99E9 28 16        	jr z,1F
  19+ 99EB
  20+ 99EB FE 1F        	cp $1f
  21+ 99ED 28 0D        	jr z,3F
  22+ 99EF
  23+ 99EF 21 CB 8B     	ld hl,Ctrl_2
  24+ 99F2 CB C6        	set 0,(hl)
  25+ 99F4 2A D1 8B     	ld hl,(Puntero_objeto)
  26+ 99F7 22 FD 8B     	ld (Repone_puntero_objeto),hl
  27+ 99FA 18 08        	jr 2F
  28+ 99FC
  29+ 99FC CD AA 9B     3 call Mov_left
  30+ 99FF 18 03        	jr 2F
  31+ 9A01
  32+ 9A01 CD 87 9A     1 call Mov_right
  33+ 9A04 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A07 22 D1 8B     	ld (Puntero_objeto),hl
  35+ 9A0A C9           	ret
  36+ 9A0B
  37+ 9A0B              ; ******************************************************************************************************************************************************************************************
  38+ 9A0B              ;
  39+ 9A0B              ;   27/05/23
  40+ 9A0B              ;
  41+ 9A0B              ;	Mov_down
  42+ 9A0B              ;
  43+ 9A0B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A0B              ;
  45+ 9A0B              ;
  46+ 9A0B              Mov_down
  47+ 9A0B
  48+ 9A0B CD 75 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A0E              ;																	; _ repone (Puntero_objeto).
  50+ 9A0E 21 CC 8B     	ld hl,Ctrl_0
  51+ 9A11 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A13              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A13              ; 																	; _ en el caso de que no lo haya.
  54+ 9A13 3A E7 8B     	ld a,(Vel_down)
  55+ 9A16 47           	ld b,a
  56+ 9A17 2A CF 8B         ld hl,(Posicion_actual)
  57+ 9A1A CD AD 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A1D E6 02        	and 2
  59+ 9A1F 28 17        	jr z,1F
  60+ 9A21
  61+ 9A21              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A21              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A21
  64+ 9A21 7C           	ld a,h
  65+ 9A22 FE 57        	cp $57
  66+ 9A24 20 12        	jr nz,1F
  67+ 9A26
  68+ 9A26 7D           	ld a,l
  69+ 9A27 C6 20        	add $20
  70+ 9A29 30 0D        	jr nc,1F
  71+ 9A2B
  72+ 9A2B              ; ------------------------------
  73+ 9A2B              ;
  74+ 9A2B              ;	12/01/24
  75+ 9A2B
  76+ 9A2B              ;	call Reaparece_arriba
  77+ 9A2B CD 37 9D     	call Reinicio
  78+ 9A2E
  79+ 9A2E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A2E
  81+ 9A2E 3A 33 8C     	ld a,(Ctrl_3)
  82+ 9A31 CB CF        	set 1,a
  83+ 9A33 32 33 8C     	ld (Ctrl_3),a
  84+ 9A36
  85+ 9A36 18 08        	jr 3F
  86+ 9A38              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A38              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A38              ; ------------------------------
  89+ 9A38
  90+ 9A38 CD C5 99     1 call NextScan
  91+ 9A3B 22 CF 8B     	ld (Posicion_actual),hl
  92+ 9A3E 10 DA            djnz 2B
  93+ 9A40 CD CB 94     3 call Genera_coordenadas
  94+ 9A43 C9           	ret
  95+ 9A44
  96+ 9A44              ; ******************************************************************************************************************************************************************************************
  97+ 9A44              ;
  98+ 9A44              ;   27/05/23
  99+ 9A44              ;
 100+ 9A44              ;	Mov_up
 101+ 9A44              ;
 102+ 9A44              ; 	Mueve el Sprite hacia arriba.
 103+ 9A44              ;
 104+ 9A44              ;
 105+ 9A44              Mov_up
 106+ 9A44
 107+ 9A44 CD 75 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A47              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A47 21 CC 8B     	ld hl,Ctrl_0
 110+ 9A4A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A4C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A4C              ; 																		; _ en el caso de que no lo haya.
 113+ 9A4C 3A E6 8B     	ld a,(Vel_up)
 114+ 9A4F 47           	ld b,a
 115+ 9A50 2A CF 8B     	ld hl,(Posicion_actual)
 116+ 9A53 CD AD 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A56 A7           	and a
 118+ 9A57 20 10        	jr nz,1F
 119+ 9A59
 120+ 9A59              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A59              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A59
 123+ 9A59 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A5A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A5C 20 0B            jr nz,1F
 126+ 9A5E 7D               ld a,l
 127+ 9A5F D6 20            sub $20
 128+ 9A61 30 06            jr nc,1F
 129+ 9A63 25               dec h
 130+ 9A64
 131+ 9A64              ; -----------------------------
 132+ 9A64 CD 18 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A67              ;	call Reinicio
 134+ 9A67              ; -----------------------------
 135+ 9A67
 136+ 9A67 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A69 CD D4 99     1 call PreviousScan
 138+ 9A6C 22 CF 8B     	ld (Posicion_actual),hl
 139+ 9A6F 10 E2            djnz 3B
 140+ 9A71 CD CB 94     2 call Genera_coordenadas
 141+ 9A74 C9           	ret
 142+ 9A75
 143+ 9A75              ; -----------------------------
 144+ 9A75              ;
 145+ 9A75              ;	27/5/23
 146+ 9A75              ;
 147+ 9A75              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A75              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A75              ;
 150+ 9A75              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A75              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A75              ;
 153+ 9A75              ;	Modifica: A y (Puntero_objeto).
 154+ 9A75
 155+ 9A75 3A CB 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A78 CB 47        	bit 0,a
 157+ 9A7A C8           	ret z
 158+ 9A7B CB 87        	res 0,a
 159+ 9A7D 32 CB 8B     	ld (Ctrl_2),a
 160+ 9A80 2A FD 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A83 22 D1 8B     	ld (Puntero_objeto),hl
 162+ 9A86 C9           	ret
 163+ 9A87
 164+ 9A87              ; ******************************************************************************************************************************************************************************************
 165+ 9A87              ;
 166+ 9A87              ;	19/10/22
 167+ 9A87              ;
 168+ 9A87              ;	Mov_right.
 169+ 9A87              ;
 170+ 9A87              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A87              ;
 172+ 9A87
 173+ 9A87 3A CC 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A8A CB 77        	bit 6,a
 175+ 9A8C 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A8E
 177+ 9A8E CD C6 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A91 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A92
 180+ 9A92 21 CC 8B     	ld hl,Ctrl_0
 181+ 9A95 CB E6        	set 4,(hl)
 182+ 9A97 18 52        	jr 8F
 183+ 9A99
 184+ 9A99 21 CC 8B     10 ld hl,Ctrl_0
 185+ 9A9C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A9E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A9E              ; 																	; _ en el caso de que no lo haya.
 188+ 9A9E 3A C0 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AA1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AA3 20 46        	jr nz,8F
 191+ 9AA5
 192+ 9AA5 3A D3 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA9 28 40        	jr z,8F
 195+ 9AAB
 196+ 9AAB              ; ---------- ---------- ----------
 197+ 9AAB              ;
 198+ 9AAB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AAB
 200+ 9AAB 3A E5 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AAE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB0 28 11        	jr z,1F
 203+ 9AB2 38 06        	jr c,6F
 204+ 9AB4 FE 04        	cp 4
 205+ 9AB6 28 14        	jr z,7F
 206+ 9AB8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ABA
 208+ 9ABA              ; ---------- ---------- ----------
 209+ 9ABA              ;
 210+ 9ABA              ; Perfiles de velocidad
 211+ 9ABA              ;
 212+ 9ABA
 213+ 9ABA 3A D3 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ABD FE FE        	cp $fe
 215+ 9ABF 20 2A        	jr nz,8F
 216+ 9AC1 18 10        	jr 3F
 217+ 9AC3 3A D3 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC6 FE FD        	cp $fd
 219+ 9AC8 20 21        	jr nz,8F
 220+ 9ACA 18 07        	jr 3F
 221+ 9ACC 3A D3 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ACF FE FB        	cp $fb
 223+ 9AD1 20 18        	jr nz,8F
 224+ 9AD3
 225+ 9AD3              ; ---------- ---------- ----------
 226+ 9AD3
 227+ 9AD3              3
 228+ 9AD3 CD 06 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD6              ;	call Reinicio
 230+ 9AD6
 231+ 9AD6              ; ---------- ---------- ----------
 232+ 9AD6              ;
 233+ 9AD6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD6
 235+ 9AD6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD9 CD F2 9A     	call DESPLZ_DER
 238+ 9ADC C1           	pop bc
 239+ 9ADD 10 F9        	djnz 5B
 240+ 9ADF 2A CF 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AE2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AE3 22 CF 8B     	ld (Posicion_actual),hl
 243+ 9AE6 CD CB 94     	call Genera_coordenadas
 244+ 9AE9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AEB
 246+ 9AEB              ; ---------- ---------- ----------
 247+ 9AEB
 248+ 9AEB 2A CF 8B     8 ld hl,(Posicion_actual)
 249+ 9AEE CD F2 9A     	call DESPLZ_DER
 250+ 9AF1 C9           2 ret
 251+ 9AF2
 252+ 9AF2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AF2              ;
 254+ 9AF2              ;	22/9/22
 255+ 9AF2              ;
 256+ 9AF2
 257+ 9AF2 CD 01 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AF5 CD 4D 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF8 CD 76 9B         call Ciclo_completo
 260+ 9AFB 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AFE CB FE        	set 7,(hl)
 262+ 9B00 C9           	ret
 263+ 9B01
 264+ 9B01              ; ******************************************************************************************************************************************************************************************
 265+ 9B01              ;	15/02/23
 266+ 9B01              ;
 267+ 9B01
 268+ 9B01 3A E5 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B04 47           	ld b,a
 270+ 9B05 2A D8 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B08 23           1 inc hl
 272+ 9B09 23           	inc hl
 273+ 9B0A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B0C 22 D8 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B0F CD AC 90     	call Extrae_address
 276+ 9B12 22 D1 8B     	ld (Puntero_objeto),hl
 277+ 9B15
 278+ 9B15              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B15
 280+ 9B15              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B15              ; Cuántos movimientos hemos hecho ??
 282+ 9B15              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B15
 284+ 9B15 2A D4 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B18 EB           	ex de,hl
 286+ 9B19 A7           	and a
 287+ 9B1A ED 52        	sbc hl,de
 288+ 9B1C CB 3D        	srl l
 289+ 9B1E 3E 08        6 ld a,8
 290+ 9B20 95           	sub l
 291+ 9B21 30 1E        	jr nc,3F
 292+ 9B23
 293+ 9B23              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B23              ; B="0".
 295+ 9B23
 296+ 9B23 04           4 inc b
 297+ 9B24 3C           	inc a
 298+ 9B25 20 FC        	jr nz,4B
 299+ 9B27 78           	ld a,b
 300+ 9B28 08           	ex af,af
 301+ 9B29 2A D4 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B2C 23           5 inc hl
 303+ 9B2D 23           	inc hl
 304+ 9B2E 10 FC        	djnz 5B
 305+ 9B30 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B33 CD AC 90     	call Extrae_address
 307+ 9B36 22 D1 8B     	ld (Puntero_objeto),hl
 308+ 9B39
 309+ 9B39              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B39              ; _(Posicion_actual).
 311+ 9B39
 312+ 9B39 21 CF 8B     	ld hl,Posicion_actual
 313+ 9B3C 34           	inc (hl)
 314+ 9B3D 08               ex af,af
 315+ 9B3E 6F           	ld l,a
 316+ 9B3F 18 DD        	jr 6B
 317+ 9B41
 318+ 9B41              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B41
 320+ 9B41 47           3 ld b,a
 321+ 9B42 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B45 23           2 inc hl
 323+ 9B46 23           	inc hl
 324+ 9B47 10 FC        	djnz 2B
 325+ 9B49 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B4C C9           8 ret
 327+ 9B4D
 328+ 9B4D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B4D              ;
 330+ 9B4D              ;	24/7/22
 331+ 9B4D              ;
 332+ 9B4D              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B4D              ;
 334+ 9B4D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B4D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B4D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B4D
 338+ 9B4D 3A D3 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B50 A7           	and a
 340+ 9B51 20 1F        	jr nz,1F
 341+ 9B53 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B55 32 D3 8B         ld (CTRL_DESPLZ),a
 343+ 9B58
 344+ 9B58 21 CE 8B     	ld hl,Columns
 345+ 9B5B 34           	inc (hl)
 346+ 9B5C 3A DE 8B     	ld a,(Cuad_objeto)
 347+ 9B5F E6 01        	and 1
 348+ 9B61 28 0F        	jr z,1F
 349+ 9B63 2A CF 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B66 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B67 22 CF 8B     	ld (Posicion_actual),hl
 352+ 9B6A CD CB 94     	call Genera_coordenadas
 353+ 9B6D CD D2 9C     	call Inc_CTRL_DESPLZ
 354+ 9B70 18 03        	jr 2F
 355+ 9B72 CD D2 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B75 C9           2 ret
 357+ 9B76
 358+ 9B76              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B76              ;
 360+ 9B76              ;	24/7/22
 361+ 9B76              ;
 362+ 9B76              ;	Ciclo_completo.
 363+ 9B76              ;
 364+ 9B76              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B76              ;
 366+ 9B76              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B76              ; 	Decrementamos (Columns).
 368+ 9B76              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B76              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B76
 371+ 9B76
 372+ 9B76 3A D3 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B79 FE FF        	cp $ff
 374+ 9B7B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B7D E6 F0        	and $f0
 376+ 9B7F 20 28        	jr nz,3F
 377+ 9B81
 378+ 9B81              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B81
 380+ 9B81 3A D3 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B84 47           	ld b,a
 382+ 9B85 3E F8        	ld a,$f8
 383+ 9B87 80           	add b
 384+ 9B88 32 D3 8B     	ld (CTRL_DESPLZ),a
 385+ 9B8B 18 1C        	jr 3F
 386+ 9B8D 21 CE 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B90 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B91 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B92 32 D3 8B     	ld (CTRL_DESPLZ),a
 390+ 9B95 3A DE 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B98 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B9A 20 0A        	jr nz,2F
 393+ 9B9C 2A CF 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B9F 23           	inc hl
 395+ 9BA0 22 CF 8B     	ld (Posicion_actual),hl
 396+ 9BA3 CD CB 94     	call Genera_coordenadas
 397+ 9BA6
 398+ 9BA6              ; Inicia el puntero de Sprite.
 399+ 9BA6
 400+ 9BA6 CD C1 90     2 call Inicia_puntero_objeto_der
 401+ 9BA9 C9           3 ret
 402+ 9BAA
 403+ 9BAA              ; ******************************************************************************************************************************************************************************************
 404+ 9BAA              ;
 405+ 9BAA              ;	15/02/23
 406+ 9BAA              ;
 407+ 9BAA              ;	Mov_left.
 408+ 9BAA              ;
 409+ 9BAA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BAA              ;
 411+ 9BAA              Mov_left
 412+ 9BAA
 413+ 9BAA 21 CC 8B     	ld hl,Ctrl_0
 414+ 9BAD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BAF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BAF              ; 																	; _ en el caso de que no lo haya.
 417+ 9BAF 3A CC 8B     	ld a,(Ctrl_0)
 418+ 9BB2 CB 77        	bit 6,a
 419+ 9BB4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB6
 421+ 9BB6 CD CC 9C     	call Stop_Amadeus_left
 422+ 9BB9 C8           	ret z
 423+ 9BBA 20 4A        	jr nz,8F
 424+ 9BBC
 425+ 9BBC 3A C0 8B     11 ld a,(Coordenada_X)
 426+ 9BBF A7           	and a
 427+ 9BC0 20 44        	jr nz,8F
 428+ 9BC2
 429+ 9BC2 3A D3 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC8
 433+ 9BC8              ; ---------- ---------- ----------
 434+ 9BC8
 435+ 9BC8 3A E4 8B     	ld a,(Vel_left)
 436+ 9BCB FE 02        	cp 2
 437+ 9BCD 28 0F        	jr z,1F
 438+ 9BCF 38 04        	jr c,6F
 439+ 9BD1 FE 04        	cp 4
 440+ 9BD3 28 12        	jr z,7F
 441+ 9BD5
 442+ 9BD5              ; ---------- ---------- ----------
 443+ 9BD5
 444+ 9BD5 3A D3 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD8 FE F8        	cp $f8
 446+ 9BDA 20 2A        	jr nz,8F
 447+ 9BDC 18 10        	jr 4F
 448+ 9BDE 3A D3 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BE1 FE F9        	cp $f9
 450+ 9BE3 20 21        	jr nz,8F
 451+ 9BE5 18 07        	jr 4F
 452+ 9BE7 3A D3 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BEA FE FB        	cp $fb
 454+ 9BEC 20 18        	jr nz,8F
 455+ 9BEE
 456+ 9BEE              ; ---------- ---------- ----------
 457+ 9BEE
 458+ 9BEE              4
 459+ 9BEE CD F4 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BF1              ;	call Reinicio
 461+ 9BF1
 462+ 9BF1              ; ---------- ---------- ----------
 463+ 9BF1
 464+ 9BF1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BF3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF4
 467+ 9BF4              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF4              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF4
 470+ 9BF4 CD 0D 9C     	call DESPLZ_IZQ
 471+ 9BF7 C1           	pop bc
 472+ 9BF8 10 F9        	djnz 5B
 473+ 9BFA 2A CF 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BFD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BFE 22 CF 8B     	ld (Posicion_actual),hl
 476+ 9C01 CD CB 94     	call Genera_coordenadas
 477+ 9C04 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C06
 479+ 9C06              ; ---------- ---------- ----------
 480+ 9C06
 481+ 9C06              ; Movemos, no hay recolocación.
 482+ 9C06
 483+ 9C06 2A CF 8B     8 ld hl,(Posicion_actual)
 484+ 9C09 CD 0D 9C     	call DESPLZ_IZQ
 485+ 9C0C C9           2 ret
 486+ 9C0D
 487+ 9C0D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C0D              ;
 489+ 9C0D              ;	22/9/22
 490+ 9C0D
 491+ 9C0D              DESPLZ_IZQ
 492+ 9C0D
 493+ 9C0D CD 1C 9C     	call Desplaza_izquierda
 494+ 9C10 CD 68 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C13 CD 90 9C     	call Ciclo_completo_2
 496+ 9C16 21 CC 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C19 CB BE        	res 7,(hl)
 498+ 9C1B C9           	ret
 499+ 9C1C
 500+ 9C1C              Desplaza_izquierda
 501+ 9C1C
 502+ 9C1C 3A E4 8B     	ld a,(Vel_left)
 503+ 9C1F 47           	ld b,a
 504+ 9C20 2A DA 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C23 23           1 inc hl
 506+ 9C24 23           	inc hl
 507+ 9C25 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C27 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C2A CD AC 90     	call Extrae_address
 510+ 9C2D 22 D1 8B     	ld (Puntero_objeto),hl
 511+ 9C30
 512+ 9C30              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C30
 514+ 9C30              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C30              ; Cuántos movimientos hemos hecho ??
 516+ 9C30              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C30
 518+ 9C30 2A D6 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C33 EB           	ex de,hl
 520+ 9C34 A7           	and a
 521+ 9C35 ED 52        	sbc hl,de
 522+ 9C37 CB 3D        	srl l
 523+ 9C39 3E 08        6 ld a,8
 524+ 9C3B 95           	sub l
 525+ 9C3C 30 1E        	jr nc,3F
 526+ 9C3E
 527+ 9C3E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C3E              ; B="0".
 529+ 9C3E
 530+ 9C3E 04           4 inc b
 531+ 9C3F 3C           	inc a
 532+ 9C40 20 FC        	jr nz,4B
 533+ 9C42 78           	ld a,b
 534+ 9C43 08           	ex af,af
 535+ 9C44 2A D6 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C47 23           5 inc hl
 537+ 9C48 23           	inc hl
 538+ 9C49 10 FC        	djnz 5B
 539+ 9C4B 22 DA 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C4E CD AC 90     	call Extrae_address
 541+ 9C51 22 D1 8B     	ld (Puntero_objeto),hl
 542+ 9C54
 543+ 9C54              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C54              ; _(Posicion_actual).
 545+ 9C54
 546+ 9C54 21 CF 8B     	ld hl,Posicion_actual
 547+ 9C57 35           	dec (hl)
 548+ 9C58 08           	ex af,af
 549+ 9C59 6F           	ld l,a
 550+ 9C5A 18 DD        	jr 6B
 551+ 9C5C
 552+ 9C5C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C5C
 554+ 9C5C 47           3 ld b,a
 555+ 9C5D 2A D4 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C60 23           2 inc hl
 557+ 9C61 23           	inc hl
 558+ 9C62 10 FC        	djnz 2B
 559+ 9C64 22 D8 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C67 C9           8 ret
 561+ 9C68
 562+ 9C68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C68              ;
 564+ 9C68              ;	modifica_parametros_1er_DESPLZ
 565+ 9C68              ;
 566+ 9C68              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C68              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C68              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C68
 570+ 9C68 3A D3 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C6B A7           	and a
 572+ 9C6C 20 1E        	jr nz,1F
 573+ 9C6E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C6F 32 D3 8B         ld (CTRL_DESPLZ),a
 575+ 9C72 21 CE 8B     	ld hl,Columns
 576+ 9C75 34           	inc (hl)
 577+ 9C76 3A DE 8B     	ld a,(Cuad_objeto)
 578+ 9C79 E6 01        	and 1
 579+ 9C7B 20 0F        	jr nz,1F
 580+ 9C7D 2A CF 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C80 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C81 22 CF 8B     	ld (Posicion_actual),hl
 583+ 9C84 CD CB 94     	call Genera_coordenadas
 584+ 9C87 CD E3 9C     	call Dec_CTRL_DESPLZ
 585+ 9C8A 18 03        	jr 2F
 586+ 9C8C CD E3 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C8F C9           2 ret
 588+ 9C90
 589+ 9C90              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C90
 591+ 9C90 3A D3 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C93 FE F7        	cp $f7
 593+ 9C95 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C97 30 2C        	jr nc,3F
 595+ 9C99
 596+ 9C99              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C99
 598+ 9C99 06 00        	ld b,0
 599+ 9C9B 04           4 inc b
 600+ 9C9C 3C           	inc a
 601+ 9C9D FE F7        	cp $f7
 602+ 9C9F 20 FA        	jr nz,4B
 603+ 9CA1 3E FF        	ld a,$ff
 604+ 9CA3 90           	sub b
 605+ 9CA4 32 D3 8B     	ld (CTRL_DESPLZ),a
 606+ 9CA7 18 1C        	jr 3F
 607+ 9CA9
 608+ 9CA9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA9
 610+ 9CA9 21 CE 8B     1 ld hl,Columns
 611+ 9CAC 35           	dec (hl)
 612+ 9CAD AF           	xor a
 613+ 9CAE 32 D3 8B     	ld (CTRL_DESPLZ),a
 614+ 9CB1 3A DE 8B     	ld a,(Cuad_objeto)
 615+ 9CB4 E6 01        	and 1
 616+ 9CB6 28 0A        	jr z,2F
 617+ 9CB8 2A CF 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CBB 2B           	dec hl
 619+ 9CBC 22 CF 8B     	ld (Posicion_actual),hl
 620+ 9CBF CD CB 94     	call Genera_coordenadas
 621+ 9CC2
 622+ 9CC2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CC2
 624+ 9CC2 CD D4 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC5 C9           3 ret
 626+ 9CC6
 627+ 9CC6              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC6              ;
 629+ 9CC6              ;	19/10/22
 630+ 9CC6              ;
 631+ 9CC6              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC6              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC6
 634+ 9CC6 3A C0 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CCB C9           	ret
 637+ 9CCC
 638+ 9CCC              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CCC              ;
 640+ 9CCC              ;	19/10/22
 641+ 9CCC              ;
 642+ 9CCC              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CCC              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CCC
 645+ 9CCC 3A C0 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CCF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CD1 C9           	ret
 648+ 9CD2
 649+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CD2              ;
 651+ 9CD2              ;	24/7/22
 652+ 9CD2              ;
 653+ 9CD2              ;	Inc_CTRL_DESPLZ
 654+ 9CD2              ;
 655+ 9CD2              ;
 656+ 9CD2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CD2
 658+ 9CD2 21 D3 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD5 3A E5 8B     	ld a,(Vel_right)
 660+ 9CD8 A7           	and a
 661+ 9CD9 28 06        	jr z,1F
 662+ 9CDB 47           	ld b,a
 663+ 9CDC 34           3 inc (hl)
 664+ 9CDD 10 FD        	djnz 3B
 665+ 9CDF 18 01        	jr 2F
 666+ 9CE1 34           1 inc (hl)
 667+ 9CE2 C9           2 ret
 668+ 9CE3
 669+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CE3              ;
 671+ 9CE3              ;	5/2/23
 672+ 9CE3              ;
 673+ 9CE3              ;	Dec_CTRL_DESPLZ
 674+ 9CE3              ;
 675+ 9CE3              ;
 676+ 9CE3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CE3
 678+ 9CE3 21 D3 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE6 3A E4 8B     	ld a,(Vel_left)
 680+ 9CE9 A7           	and a
 681+ 9CEA 28 06        	jr z,1F
 682+ 9CEC 47           	ld b,a
 683+ 9CED 35           3 dec (hl)
 684+ 9CEE 10 FD        	djnz 3B
 685+ 9CF0 18 01        	jr 2F
 686+ 9CF2 35           1 dec (hl)
 687+ 9CF3 C9           2 ret
 688+ 9CF4
 689+ 9CF4              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF4
 691+ 9CF4 2A CF 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF7 01 1F 00     	ld bc,31
 693+ 9CFA A7           	and a
 694+ 9CFB ED 4A        	adc hl,bc
 695+ 9CFD 22 CF 8B     	ld (Posicion_actual),hl
 696+ 9D00 21 CC 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D03 CB C6        	set 0,(hl)
 698+ 9D05 C9           	ret
 699+ 9D06
 700+ 9D06              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D06
 702+ 9D06 2A CF 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D09 01 1F 00     	ld bc,31
 704+ 9D0C A7           	and a
 705+ 9D0D ED 42        	sbc hl,bc
 706+ 9D0F 22 CF 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D12 21 CC 8B     	ld hl,Ctrl_0
 708+ 9D15 CB CE        	set 1,(hl)
 709+ 9D17 C9           	ret
 710+ 9D18
 711+ 9D18              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D18
 713+ 9D18 24           Reaparece_abajo inc h
 714+ 9D19 01 E0 17     	ld bc,$17e0
 715+ 9D1C A7           	and a
 716+ 9D1D ED 4A        	adc hl,bc
 717+ 9D1F 22 CF 8B     	ld (Posicion_actual),hl
 718+ 9D22 21 CC 8B     	ld hl,Ctrl_0
 719+ 9D25 CB D6        	set 2,(hl)
 720+ 9D27 C9           	ret
 721+ 9D28
 722+ 9D28              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D28
 724+ 9D28 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D2B A7           	and a
 726+ 9D2C ED 42        	sbc hl,bc
 727+ 9D2E 22 CF 8B     	ld (Posicion_actual),hl
 728+ 9D31 21 CC 8B     	ld hl,Ctrl_0
 729+ 9D34 CB DE        	set 3,(hl)
 730+ 9D36 C9           	ret
 731+ 9D37
 732+ 9D37              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D37              ;
 734+ 9D37              ;	15/07/23
 735+ 9D37
 736+ 9D37              Reinicio
 737+ 9D37
 738+ 9D37              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D37
 740+ 9D37 AF           	xor a
 741+ 9D38 21 F4 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D3B CD 59 9D     	call Limpia_contenido_hl
 743+ 9D3E
 744+ 9D3E 21 CF 8B     	ld hl,Posicion_actual
 745+ 9D41 CD 59 9D     	call Limpia_contenido_hl
 746+ 9D44
 747+ 9D44 CD AD 92     	call Inicializa_Puntero_indice_mov
 748+ 9D47 CD 58 9E     	call Inicia_Puntero_mov
 749+ 9D4A
 750+ 9D4A 21 F6 8B     	ld hl,Incrementa_puntero
 751+ 9D4D 06 05        	ld b,5
 752+ 9D4F 77           1 ld (hl),a
 753+ 9D50 23           	inc hl
 754+ 9D51 10 FC        	djnz 1B
 755+ 9D53
 756+ 9D53 21 CB 8B     	ld hl,Ctrl_2
 757+ 9D56 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D58
 759+ 9D58 C9           	ret
 760+ 9D59
 761+ 9D59 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D5A 23           	inc hl
 763+ 9D5B 77           	ld (hl),a
 764+ 9D5C C9           	ret
 765+ 9D5D
 766+ 9D5D              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D5D              ;
 768+ 9D5D              ;	18/6/24
 769+ 9D5D              ;
 770+ 9D5D
 771+ 9D5D              Amadeus_a_izquierda
 772+ 9D5D
 773+ 9D5D              ;	Actualiza contador de movimientos.
 774+ 9D5D
 775+ 9D5D 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D60 35           	dec (hl)
 777+ 9D61 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D63
 779+ 9D63 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D66 2B           	dec hl
 781+ 9D67 2B           	dec hl
 782+ 9D68 2B           	dec hl
 783+ 9D69 2B           	dec hl
 784+ 9D6A 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D6D
 786+ 9D6D 21 33 8C     	ld hl,Ctrl_3
 787+ 9D70 CB EE        	set 5,(hl)
 788+ 9D72
 789+ 9D72 C9           	ret
 790+ 9D73
 791+ 9D73 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D74 C9           	ret
 793+ 9D75
 794+ 9D75
 795+ 9D75              Amadeus_a_derecha
 796+ 9D75
 797+ 9D75              ;	Actualiza contador de movimientos.
 798+ 9D75
 799+ 9D75 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D78 34           	inc (hl)
 801+ 9D79 3E 7A        	ld a,$7a
 802+ 9D7B BE           	cp (hl)
 803+ 9D7C 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D7E
 805+ 9D7E 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D81 23           	inc hl
 807+ 9D82 23           	inc hl
 808+ 9D83 23           	inc hl
 809+ 9D84 23           	inc hl
 810+ 9D85 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D88
 812+ 9D88 21 33 8C     	ld hl,Ctrl_3
 813+ 9D8B CB EE        	set 5,(hl)
 814+ 9D8D C9           	ret
 815+ 9D8E
 816+ 9D8E 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D8F C9           	ret
# file closed: Direcciones.asm
2098  9D90              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D90              ; ----- ----- ----- ----- -----
   2+ 9D90              ;
   3+ 9D90              ;   28/12/23
   4+ 9D90
   5+ 9D90              Movimiento
   6+ 9D90
   7+ 9D90              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D90
   9+ 9D90 3A CB 8B         ld a,(Ctrl_2)
  10+ 9D93 CB 57            bit 2,a
  11+ 9D95 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D97
  13+ 9D97 2A F2 8B         ld hl,(Puntero_mov)
  14+ 9D9A 7E               ld a,(hl)
  15+ 9D9B
  16+ 9D9B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D9B
  18+ 9D9B              Inicia_desplazamiento.
  19+ 9D9B
  20+ 9D9B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D9B
  22+ 9D9B CD 8E 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D9E
  24+ 9D9E              ; Iniciamos (Repetimos_mov).
  25+ 9D9E
  26+ 9D9E 7E               ld a,(hl)
  27+ 9D9F E6 0F            and $0f
  28+ 9DA1 32 F8 8B         ld (Repetimos_desplazamiento),a
  29+ 9DA4 32 F9 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA7
  31+ 9DA7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA7
  33+ 9DA7 23               inc hl
  34+ 9DA8 7E               ld a,(hl)
  35+ 9DA9 32 FB 8B         ld (Cola_de_desplazamiento),a
  36+ 9DAC 2B               dec hl
  37+ 9DAD
  38+ 9DAD 21 CB 8B         ld hl,Ctrl_2
  39+ 9DB0 CB D6            set 2,(hl)
  40+ 9DB2
  41+ 9DB2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DB2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DB2
  44+ 9DB2              Desplazamiento_iniciado
  45+ 9DB2
  46+ 9DB2 CD 62 9E         call Aplica_desplazamiento
  47+ 9DB5
  48+ 9DB5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB5
  50+ 9DB5 3A 33 8C         ld a,(Ctrl_3)
  51+ 9DB8 CB 4F            bit 1,a
  52+ 9DBA C0               ret nz
  53+ 9DBB
  54+ 9DBB 21 F8 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DBE 35               dec (hl)
  56+ 9DBF C0               ret nz
  57+ 9DC0
  58+ 9DC0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC0              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC0
  62+ 9DC0 3A FB 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DC3 A7               and a
  64+ 9DC4 CC B7 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC7 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC9
  67+ 9DC9 FE FF            cp $ff
  68+ 9DCB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DCD
  70+ 9DCD FE FE            cp $fe
  71+ 9DCF CC 3C 9E         call z,Fijamos_bucle
  72+ 9DD2 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD4
  74+ 9DD4 FE FD            cp $fd
  75+ 9DD6 20 11            jr nz,1F
  76+ 9DD8
  77+ 9DD8              ; ---
  78+ 9DD8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD8
  80+ 9DD8 3A CB 8B         ld a,(Ctrl_2)
  81+ 9DDB CB 5F            bit 3,a
  82+ 9DDD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DDF
  84+ 9DDF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DDF
  86+ 9DDF 21 CB 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DE2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE4
  89+ 9DE4 CD 4D 9E         call Inicia_Repetimos_movimiento
  90+ 9DE7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE9              ; ---
  92+ 9DE9
  93+ 9DE9 FE 01        1 cp 1
  94+ 9DEB CA 26 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DEE
  96+ 9DEE 3D               dec a
  97+ 9DEF 32 FB 8B         ld (Cola_de_desplazamiento),a
  98+ 9DF2
  99+ 9DF2 3A F9 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF5 32 F8 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF8 C9               ret
 103+ 9DF9
 104+ 9DF9              Reinicia_el_movimiento
 105+ 9DF9
 106+ 9DF9 3A CB 8B         ld a,(Ctrl_2)
 107+ 9DFC CB 5F            bit 3,a
 108+ 9DFE 28 1B            jr z,2F
 109+ 9E00
 110+ 9E00              ; (Cola_de_desplazamiento)="254".
 111+ 9E00
 112+ 9E00 21 FA 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E03 35               dec (hl)
 114+ 9E04 20 15            jr nz,2F
 115+ 9E06
 116+ 9E06              ; Fin de las repeticiones del último movimiento.
 117+ 9E06
 118+ 9E06 21 CB 8B         ld hl,Ctrl_2
 119+ 9E09 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E0B
 121+ 9E0B 2A F2 8B         ld hl,(Puntero_mov)
 122+ 9E0E 23               inc hl
 123+ 9E0F 23               inc hl
 124+ 9E10 23               inc hl
 125+ 9E11 22 F2 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E14              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E14 7E               ld a,(hl)
 128+ 9E15 32 FB 8B         ld (Cola_de_desplazamiento),a
 129+ 9E18
 130+ 9E18 C3 C0 9D         jp Cola
 131+ 9E1B
 132+ 9E1B CD 58 9E     2 call Inicia_Puntero_mov
 133+ 9E1E
 134+ 9E1E 21 CB 8B         ld hl,Ctrl_2
 135+ 9E21 CB 96            res 2,(hl)
 136+ 9E23
 137+ 9E23 C3 90 9D         jp Movimiento
 138+ 9E26
 139+ 9E26              Siguiente_desplazamiento
 140+ 9E26
 141+ 9E26              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E26              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E26
 144+ 9E26 21 CB 8B         ld hl,Ctrl_2
 145+ 9E29 CB 96            res 2,(hl)
 146+ 9E2B
 147+ 9E2B 2A F2 8B         ld hl,(Puntero_mov)
 148+ 9E2E 23               inc hl
 149+ 9E2F 23               inc hl
 150+ 9E30 22 F2 8B         ld (Puntero_mov),hl
 151+ 9E33
 152+ 9E33 7E               ld a,(hl)
 153+ 9E34 A7               and a
 154+ 9E35 CC B7 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E38 CA F9 9D         jp z,Reinicia_el_movimiento
 156+ 9E3B
 157+ 9E3B C9               ret
 158+ 9E3C
 159+ 9E3C              ; Subrutinas -----------------------------------------
 160+ 9E3C              ; ---------- --------- --------- ---------- ----------
 161+ 9E3C              ;
 162+ 9E3C              ;   24/07/23
 163+ 9E3C              ;
 164+ 9E3C              ;   Fijamos_bucle
 165+ 9E3C              ;
 166+ 9E3C              ;
 167+ 9E3C
 168+ 9E3C              Fijamos_bucle
 169+ 9E3C
 170+ 9E3C 3A F6 8B         ld a,(Incrementa_puntero)
 171+ 9E3F 3C               inc a
 172+ 9E40 32 F7 8B         ld (Incrementa_puntero_backup),a
 173+ 9E43
 174+ 9E43 CD B7 9E         call Incrementa_Puntero_indice_mov
 175+ 9E46 2A F0 8B         ld hl,(Puntero_indice_mov)
 176+ 9E49 22 F4 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E4C C9               ret
 178+ 9E4D
 179+ 9E4D              ; ---------- --------- --------- ---------- ----------
 180+ 9E4D              ;
 181+ 9E4D              ;   07/7/23
 182+ 9E4D              ;
 183+ 9E4D              ;   Inicia_Repetimos_movimiento
 184+ 9E4D              ;
 185+ 9E4D              ;
 186+ 9E4D
 187+ 9E4D              Inicia_Repetimos_movimiento
 188+ 9E4D
 189+ 9E4D              ; Iniciamos (Repetimos_movimiento).
 190+ 9E4D
 191+ 9E4D DD 2A F2 8B      ld ix,(Puntero_mov)
 192+ 9E51 DD 7E 02         ld a,(ix+2)
 193+ 9E54 32 FA 8B         ld (Repetimos_movimiento),a
 194+ 9E57
 195+ 9E57 C9               ret
 196+ 9E58
 197+ 9E58              ; ---------- --------- --------- ---------- ----------
 198+ 9E58              ;
 199+ 9E58              ;   26/6/23
 200+ 9E58              ;
 201+ 9E58              ;   Inicia_Puntero_mov
 202+ 9E58              ;
 203+ 9E58              ;
 204+ 9E58
 205+ 9E58 2A F0 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E5B CD AC 90         call Extrae_address
 207+ 9E5E 22 F2 8B         ld (Puntero_mov),hl
 208+ 9E61 C9               ret
 209+ 9E62
 210+ 9E62              ; ---------- --------- --------- ---------- ----------
 211+ 9E62              ;
 212+ 9E62              ;   27/06/23
 213+ 9E62              ;
 214+ 9E62              ;   Aplica_movimiento.
 215+ 9E62
 216+ 9E62              Aplica_desplazamiento
 217+ 9E62
 218+ 9E62              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E62
 220+ 9E62 2A F2 8B         ld hl, (Puntero_mov)
 221+ 9E65
 222+ 9E65 7E               ld a,(hl)
 223+ 9E66 E6 F0            and $f0
 224+ 9E68 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E69
 226+ 9E69 CB 7E            bit 7,(hl)
 227+ 9E6B 28 03            jr z,1F
 228+ 9E6D CD 44 9A         call Mov_up
 229+ 9E70 2A F2 8B     1 ld hl, (Puntero_mov)
 230+ 9E73 CB 76            bit 6,(hl)
 231+ 9E75 28 03            jr z,2F
 232+ 9E77 CD 0B 9A         call Mov_down
 233+ 9E7A
 234+ 9E7A              ; Se ha aplicado reinicio ???
 235+ 9E7A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E7A
 237+ 9E7A              ;    ld a,(Ctrl_3)
 238+ 9E7A              ;    bit 1,a
 239+ 9E7A              ;    ret nz
 240+ 9E7A
 241+ 9E7A 2A F2 8B     2 ld hl, (Puntero_mov)
 242+ 9E7D CB 6E            bit 5,(hl)
 243+ 9E7F 28 03            jr z,3F
 244+ 9E81 CD AA 9B         call Mov_left
 245+ 9E84 2A F2 8B     3 ld hl, (Puntero_mov)
 246+ 9E87 CB 66            bit 4,(hl)
 247+ 9E89 C8               ret z
 248+ 9E8A CD 87 9A         call Mov_right
 249+ 9E8D C9               ret
 250+ 9E8E
 251+ 9E8E              ; ---------- --------- --------- ---------- ----------
 252+ 9E8E              ;
 253+ 9E8E              ;   26/06/23
 254+ 9E8E              ;
 255+ 9E8E              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E8E
 257+ 9E8E              Ajusta_velocidad_desplazamiento
 258+ 9E8E
 259+ 9E8E              ; 1er byte de la cadena de movimiento.
 260+ 9E8E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E8E
 262+ 9E8E CD AC 9E         call Extrae_nibble_alto
 263+ 9E91
 264+ 9E91 32 E6 8B         ld (Vel_up),a
 265+ 9E94 79               ld a,c
 266+ 9E95 E6 0F            and $0f
 267+ 9E97 32 E7 8B         ld (Vel_down),a
 268+ 9E9A
 269+ 9E9A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E9A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E9A
 272+ 9E9A 23               inc hl
 273+ 9E9B CD AC 9E         call Extrae_nibble_alto
 274+ 9E9E
 275+ 9E9E 32 E4 8B         ld (Vel_left),a
 276+ 9EA1 79               ld a,c
 277+ 9EA2 E6 0F            and $0f
 278+ 9EA4 32 E5 8B         ld (Vel_right),a
 279+ 9EA7
 280+ 9EA7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA7
 282+ 9EA7 23               inc hl
 283+ 9EA8 22 F2 8B         ld (Puntero_mov),hl
 284+ 9EAB C9               ret
 285+ 9EAC
 286+ 9EAC 06 04        Extrae_nibble_alto ld b,4
 287+ 9EAE 7E               ld a,(hl)
 288+ 9EAF 4F               ld c,a
 289+ 9EB0 E6 F0            and $f0
 290+ 9EB2 CB 3F        1 srl a
 291+ 9EB4 10 FC            djnz 1B
 292+ 9EB6 C9               ret
 293+ 9EB7
 294+ 9EB7              ; ---------- --------- --------- ---------- ----------
 295+ 9EB7              ;
 296+ 9EB7              ;   5/7/23
 297+ 9EB7              ;
 298+ 9EB7              ;   Incrementa_Puntero_indice_mov
 299+ 9EB7
 300+ 9EB7              Incrementa_Puntero_indice_mov
 301+ 9EB7
 302+ 9EB7 21 F6 8B         ld hl,Incrementa_puntero
 303+ 9EBA 34               inc (hl)
 304+ 9EBB
 305+ 9EBB 2A F0 8B         ld hl,(Puntero_indice_mov)
 306+ 9EBE 01 02 00         ld bc,2
 307+ 9EC1 A7               and a
 308+ 9EC2 09               add hl,bc
 309+ 9EC3 22 F0 8B         ld (Puntero_indice_mov),hl
 310+ 9EC6
 311+ 9EC6 7E               ld a,(hl)
 312+ 9EC7 A7               and a
 313+ 9EC8
 314+ 9EC8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC8
 316+ 9EC8              ;    jr z,$
 317+ 9EC8
 318+ 9EC8              ;! Reinicia el Patrón de movimiento.
 319+ 9EC8
 320+ 9EC8 CC CD 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ECB
 322+ 9ECB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ECC
 324+ 9ECC C9               ret
 325+ 9ECD
 326+ 9ECD              ; ---------- --------- --------- ---------- ----------
 327+ 9ECD              ;
 328+ 9ECD              ;   15/01/24
 329+ 9ECD              ;
 330+ 9ECD              ;   Inicializa_Puntero_indice_mov
 331+ 9ECD
 332+ 9ECD              Inicializa_Puntero_indice_mov_2
 333+ 9ECD
 334+ 9ECD              ; Existe etiqueta de bucle principal???
 335+ 9ECD
 336+ 9ECD 2A F4 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED0 24               inc h
 338+ 9ED1 25               dec h
 339+ 9ED2 28 05            jr z,2F
 340+ 9ED4
 341+ 9ED4 22 F0 8B         ld (Puntero_indice_mov),hl
 342+ 9ED7 18 14            jr 3F
 343+ 9ED9
 344+ 9ED9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED9
 346+ 9ED9 3A F6 8B     2 ld a,(Incrementa_puntero)
 347+ 9EDC 47               ld b,a
 348+ 9EDD
 349+ 9EDD 2A F0 8B         ld hl,(Puntero_indice_mov)
 350+ 9EE0 2B           1 dec hl
 351+ 9EE1 2B               dec hl
 352+ 9EE2 10 FC            djnz 1B
 353+ 9EE4 22 F0 8B         ld (Puntero_indice_mov),hl
 354+ 9EE7
 355+ 9EE7 AF               xor a
 356+ 9EE8 32 F6 8B         ld (Incrementa_puntero),a
 357+ 9EEB 18 06            jr 4F
 358+ 9EED
 359+ 9EED 3A F7 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF0 32 F6 8B         ld (Incrementa_puntero),a
 361+ 9EF3 C9           4 ret
 362+ 9EF4
 363+ 9EF4              ; ----------------------------------------------------------------------
 364+ 9EF4              ;
 365+ 9EF4              ;   30/01/24
 366+ 9EF4              ;
 367+ 9EF4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF4
 369+ 9EF4 3A BF 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF7 CD 48 94         call Calcula_salto_en_BC
 371+ 9EFA 21 E8 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EFD A7               and a
 373+ 9EFE ED 4A            adc hl,bc
 374+ 9F00 C9               ret
 375+ 9F01
 376+ 9F01              ; ----------------------------------------------------------------------
 377+ 9F01              ;
 378+ 9F01              ;   30/01/24
 379+ 9F01              ;
 380+ 9F01              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F01              ;
 382+ 9F01              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F01
 384+ 9F01 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F02 23               inc hl
 386+ 9F03 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F04 69               ld l,c
 388+ 9F05 60               ld h,b
 389+ 9F06 22 C8 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F09 C9               ret
 391+ 9F0A
# file closed: Movimiento.asm
2099  9F0A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F0A              Motor_de_disparos_entidades
   2+ 9F0A
   3+ 9F0A 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9F0D FE 07            cp 7
   5+ 9F0F C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F10
   7+ 9F10 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F12 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F15
  10+ 9F15 CD AC 90     1 call Extrae_address
  11+ 9F18 1C               inc e
  12+ 9F19 1C               inc e
  13+ 9F1A ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F1E
  15+ 9F1E               ; Caja vacía ???
  16+ 9F1E
  17+ 9F1E 2C               inc l
  18+ 9F1F
  19+ 9F1F 7E               ld a,(hl)
  20+ 9F20 A7               and a
  21+ 9F21 28 19            jr z,3F                                                              ; Caja vacía.
  22+ 9F23
  23+ 9F23              ; --- Trabajamos con caja:
  24+ 9F23
  25+ 9F23              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  26+ 9F23
  27+ 9F23 CD 52 9F         call Rota_disparo_si_procede
  28+ 9F26
  29+ 9F26              ; ------------------------------------------------------------
  30+ 9F26
  31+ 9F26 2D               dec l
  32+ 9F27 2D               dec l
  33+ 9F28 2D               dec l
  34+ 9F29
  35+ 9F29 CD AC 90         call Extrae_address
  36+ 9F2C              ;   (Puntero_de_impresion) del disparo en HL.
  37+ 9F2C
  38+ 9F2C              ;! Velocidad del disparo de entidades.
  39+ 9F2C
  40+ 9F2C CD C5 99         call NextScan
  41+ 9F2F
  42+ 9F2F              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  43+ 9F2F
  44+ 9F2F CD 40 9F         call Fin_de_disparo_de_entidad
  45+ 9F32
  46+ 9F32 EB               ex de,hl
  47+ 9F33
  48+ 9F33 73               ld (hl),e
  49+ 9F34 23               inc hl
  50+ 9F35 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  51+ 9F36
  52+ 9F36 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  53+ 9F39 18 02            jr 2F
  54+ 9F3B
  55+ 9F3B C9               ret
  56+ 9F3C
  57+ 9F3C EB           3 ex de,hl
  58+ 9F3D 10 D6        2 djnz 1B
  59+ 9F3F
  60+ 9F3F C9               ret
  61+ 9F40
  62+ 9F40              ; ------------- ------------- ------------
  63+ 9F40              ;
  64+ 9F40              ;   25/9/24
  65+ 9F40
  66+ 9F40              Fin_de_disparo_de_entidad
  67+ 9F40
  68+ 9F40 7C               ld a,h
  69+ 9F41 FE 54            cp $54
  70+ 9F43 D8               ret c
  71+ 9F44
  72+ 9F44 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  73+ 9F45
  74+ 9F45 5D               ld e,l
  75+ 9F46 54               ld d,h
  76+ 9F47
  77+ 9F47 21 E0 57         ld hl,$57e0
  78+ 9F4A ED 52            sbc hl,de
  79+ 9F4C
  80+ 9F4C 38 39            jr c,Elimina_disparo_entidad
  81+ 9F4E
  82+ 9F4E 6B               ld l,e
  83+ 9F4F 62               ld h,d
  84+ 9F50
  85+ 9F50 D1               pop de
  86+ 9F51
  87+ 9F51 C9               ret
  88+ 9F52
  89+ 9F52              ; ----------------------------------------------------------
  90+ 9F52              ;
  91+ 9F52              ;   08/10/24
  92+ 9F52
  93+ 9F52              Rota_disparo_si_procede
  94+ 9F52
  95+ 9F52              ;   Nos situamos en el byte alto de (Control).
  96+ 9F52
  97+ 9F52 CB 76            bit 6,(hl)
  98+ 9F54 20 03            jr nz,Decrementa_contador_de_control_de_disparo
  99+ 9F56 CB 7E            bit 7,(hl)
 100+ 9F58 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 101+ 9F59
 102+ 9F59              Decrementa_contador_de_control_de_disparo
 103+ 9F59
 104+ 9F59 35               dec (hl)
 105+ 9F5A 7E               ld a,(hl)
 106+ 9F5B E6 07            and 7
 107+ 9F5D C0               ret nz
 108+ 9F5E
 109+ 9F5E              Rotamos_disparo_segun_proceda
 110+ 9F5E
 111+ 9F5E              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 112+ 9F5E
 113+ 9F5E 3E 07            ld a,7
 114+ 9F60 86               add (hl)
 115+ 9F61 77               ld (hl),a                                                           ; Contador reinicializado.
 116+ 9F62
 117+ 9F62 CD 7B 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 118+ 9F65
 119+ 9F65 CB 76            bit 6,(hl)
 120+ 9F67 20 05            jr nz,Rota_a_derecha
 121+ 9F69
 122+ 9F69
 123+ 9F69              Rota_a_izq
 124+ 9F69
 125+ 9F69 F3               di
 126+ 9F6A 18 FE            jr $
 127+ 9F6C FB               ei
 128+ 9F6D
 129+ 9F6D C9               ret
 130+ 9F6E
 131+ 9F6E              Rota_a_derecha
 132+ 9F6E
 133+ 9F6E FD CB 00 3E      srl (iy+0)
 134+ 9F72 FD CB 01 3E      srl (iy+1)
 135+ 9F76 FD CB 02 3E      srl (iy+2)
 136+ 9F7A
 137+ 9F7A              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 138+ 9F7A
 139+ 9F7A C9               ret
 140+ 9F7B
 141+ 9F7B              ; ------------ ----------- ------------
 142+ 9F7B              ;
 143+ 9F7B              ;   11/10/24
 144+ 9F7B
 145+ 9F7B              Puntero_objeto_en_IY
 146+ 9F7B
 147+ 9F7B E5               push hl
 148+ 9F7C
 149+ 9F7C 2D               dec l
 150+ 9F7D 2D               dec l
 151+ 9F7E 2D               dec l
 152+ 9F7F 2D               dec l
 153+ 9F80 2D               dec l
 154+ 9F81 2D               dec l
 155+ 9F82
 156+ 9F82 E5               push hl
 157+ 9F83 FD E1            pop iy
 158+ 9F85
 159+ 9F85 E1               pop hl
 160+ 9F86
 161+ 9F86 C9               ret
 162+ 9F87
 163+ 9F87              ; ------------ ----------- ------------
 164+ 9F87              ;
 165+ 9F87              ;   25/9/24
 166+ 9F87
 167+ 9F87              Elimina_disparo_entidad
 168+ 9F87
 169+ 9F87 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 170+ 9F8A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 171+ 9F8B
 172+ 9F8B E1               pop hl
 173+ 9F8C E5               push hl
 174+ 9F8D
 175+ 9F8D 2B               dec hl
 176+ 9F8E 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 177+ 9F8F
 178+ 9F8F 16 06            ld d,6                                                              ; Contador
 179+ 9F91 AF               xor a                                                               ; Borrador
 180+ 9F92
 181+ 9F92 77           1 ld (hl),a
 182+ 9F93 15               dec d
 183+ 9F94 23               inc hl
 184+ 9F95 20 FB            jr nz,1B
 185+ 9F97
 186+ 9F97 D1               pop de
 187+ 9F98
 188+ 9F98 21 00 00         ld hl,0
 189+ 9F9B
 190+ 9F9B C9               ret
 191+ 9F9C              ; --------------------------------------------------------------------------------------
 192+ 9F9C              ;
 193+ 9F9C              ;   12/10/24
 194+ 9F9C              ;
 195+ 9F9C
 196+ 9F9C              Genera_datos_de_impresion_disparos_Entidades
 197+ 9F9C
 198+ 9F9C 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 199+ 9F9F 47               ld b,a
 200+ 9FA0 3E 07            ld a,7
 201+ 9FA2 90               sub b
 202+ 9FA3 C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 203+ 9FA4
 204+ 9FA4 08               ex af,af
 205+ 9FA5
 206+ 9FA5              ; ---------------
 207+ 9FA5
 208+ 9FA5              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 209+ 9FA5
 210+ 9FA5 21 23 89         ld hl,Indice_de_disparos_entidades
 211+ 9FA8
 212+ 9FA8 CD AC 90     1 call Extrae_address
 213+ 9FAB
 214+ 9FAB 13               inc de
 215+ 9FAC 13               inc de
 216+ 9FAD
 217+ 9FAD ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 218+ 9FB1
 219+ 9FB1 2C               inc l
 220+ 9FB2
 221+ 9FB2 7E               ld a,(hl)
 222+ 9FB3 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 223+ 9FB4 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 224+ 9FB6
 225+ 9FB6              ; ----- ----- ----- -----
 226+ 9FB6
 227+ 9FB6 2D               dec l
 228+ 9FB7 2D               dec l
 229+ 9FB8 2D               dec l
 230+ 9FB9
 231+ 9FB9 CD AC 90         call Extrae_address
 232+ 9FBC E5               push hl
 233+ 9FBD
 234+ 9FBD 1D               dec e
 235+ 9FBE
 236+ 9FBE EB               ex de,hl
 237+ 9FBF
 238+ 9FBF 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 239+ 9FC0 2D               dec l
 240+ 9FC1 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 241+ 9FC2 2D               dec l
 242+ 9FC3 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 243+ 9FC4
 244+ 9FC4 E1               pop hl                                                    ;? Puntero de impresión en HL.
 245+ 9FC5
 246+ 9FC5              Genera_scanlines_de_los_disparos_de_entidades.
 247+ 9FC5
 248+ 9FC5 FD 2A 20 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 249+ 9FC9 FD 73 00         ld (iy+0),e
 250+ 9FCC FD 70 01         ld (iy+1),b
 251+ 9FCF FD 71 02         ld (iy+2),c
 252+ 9FD2
 253+ 9FD2 FD 75 03         ld (iy+3),l
 254+ 9FD5 FD 74 04         ld (iy+4),h
 255+ 9FD8
 256+ 9FD8 CD C5 99         call NextScan
 257+ 9FDB
 258+ 9FDB FD 75 05         ld (iy+5),l
 259+ 9FDE FD 74 06         ld (iy+6),h
 260+ 9FE1
 261+ 9FE1 FD E5            push iy
 262+ 9FE3 E1               pop hl
 263+ 9FE4
 264+ 9FE4 3E 07            ld a,7
 265+ 9FE6 85               add l
 266+ 9FE7 6F               ld l,a
 267+ 9FE8
 268+ 9FE8 22 20 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 269+ 9FEB
 270+ 9FEB              ; ----- ----- ----- -----
 271+ 9FEB
 272+ 9FEB 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 273+ 9FEC 3D               dec a
 274+ 9FED C8               ret z
 275+ 9FEE 08               ex af,af
 276+ 9FEF
 277+ 9FEF              Situa_en_siguiente_caja
 278+ 9FEF
 279+ 9FEF 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 280+ 9FF2 18 B4            jr 1B
 281+ 9FF4
 282+ 9FF4              ; --------------------------------------------------------------------------------------
 283+ 9FF4              ;
 284+ 9FF4              ;   12/10/24
 285+ 9FF4              ;
 286+ 9FF4
 287+ 9FF4              Genera_disparo_de_entidad_maldosa
 288+ 9FF4
 289+ 9FF4              ;   Estructura de un disparo de entidades.
 290+ 9FF4
 291+ 9FF4              ;   Disparo_1 defw 0								; Puntero objeto.
 292+ 9FF4              ; 	defw 0											; Puntero de impresión.
 293+ 9FF4              ;	defw 0											; Control.
 294+ 9FF4
 295+ 9FF4              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 296+ 9FF4              ;   _de la entidad en el momento de disparar.
 297+ 9FF4
 298+ 9FF4              ;   El byte alto muestra la siguiente información:
 299+ 9FF4              ;
 300+ 9FF4              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 301+ 9FF4              ;                        _antes de desplazarse a derecha/izquierda.
 302+ 9FF4              ;
 303+ 9FF4              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 304+ 9FF4              ;
 305+ 9FF4              ;                        10xx ..... Izquierda.
 306+ 9FF4              ;                        01xx ..... Derecha.
 307+ 9FF4              ;                        00xx ..... Recto.
 308+ 9FF4
 309+ 9FF4              ;*  Exclusiones.
 310+ 9FF4
 311+ 9FF4              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 312+ 9FF4              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 313+ 9FF4
 314+ 9FF4              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 315+ 9FF4
 316+ 9FF4 3A 23 8C         ld a,(Numero_de_disparos_de_entidades)
 317+ 9FF7 A7               and a
 318+ 9FF8 C8               ret z
 319+ 9FF9
 320+ 9FF9 3A C1 8B         ld a,(Coordenada_y)
 321+ 9FFC A7               and a
 322+ 9FFD C8               ret z
 323+ 9FFE
 324+ 9FFE 3D               dec a
 325+ 9FFF C8               ret z
 326+ A000
 327+ A000 FE 10            cp 16
 328+ A002 D0               ret nc
 329+ A003
 330+ A003              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 331+ A003              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 332+ A003              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 333+ A003
 334+ A003 21 35 8C         ld hl,Ctrl_5
 335+ A006 CB D6            set 2,(hl)
 336+ A008
 337+ A008 21 25 8C         ld hl,Permiso_de_disparo_Entidades
 338+ A00B 35               dec (hl)                                            ; No más disparos en este FRAME.
 339+ A00C
 340+ A00C              ;   Decrementa el numero de disparos de entidades.
 341+ A00C
 342+ A00C 21 23 8C         ld hl,Numero_de_disparos_de_entidades
 343+ A00F 35               dec (hl)
 344+ A010
 345+ A010 21 23 89         ld hl,Indice_de_disparos_entidades
 346+ A013
 347+ A013 CD AC 90     1 call Extrae_address
 348+ A016
 349+ A016 13               inc de
 350+ A017 13               inc de
 351+ A018
 352+ A018 ED 53 36 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 353+ A01C
 354+ A01C              ;   Comprobamos si la caja está vacía.
 355+ A01C
 356+ A01C 2C               inc l
 357+ A01D
 358+ A01D 7E               ld a,(hl)
 359+ A01E A7               and a
 360+ A01F 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 361+ A021
 362+ A021              ;   Caja vacía, vamos a generar un disparo.
 363+ A021              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 364+ A021
 365+ A021 CD 47 A0         call Genera_byte_inclinacion
 366+ A024
 367+ A024 7E               ld a,(hl)
 368+ A025 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 369+ A026
 370+ A026 2D               dec l
 371+ A027
 372+ A027              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 373+ A027
 374+ A027 3A CA 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 375+ A02A 77               ld (hl),a
 376+ A02B
 377+ A02B 2D               dec l
 378+ A02C
 379+ A02C CD 65 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 380+ A02F
 381+ A02F 70               ld (hl),b
 382+ A030 2D               dec l
 383+ A031 71               ld (hl),c
 384+ A032
 385+ A032 2D               dec l
 386+ A033
 387+ A033              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 388+ A033
 389+ A033 FD 7E 02         ld a,(iy+02)
 390+ A036 77               ld (hl),a
 391+ A037 2D               dec l
 392+ A038
 393+ A038 FD 7E 01         ld a,(iy+01)
 394+ A03B 77               ld (hl),a
 395+ A03C 2D               dec l
 396+ A03D
 397+ A03D FD 7E 00         ld a,(iy+00)
 398+ A040 77               ld (hl),a
 399+ A041
 400+ A041 C9               ret
 401+ A042
 402+ A042              ;   --- --- ---
 403+ A042
 404+ A042              Situa_en_siguiente_disparo
 405+ A042
 406+ A042 2A 36 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 407+ A045 18 CC            jr 1B
 408+ A047
 409+ A047              ; --------------------------------------------------------------------------------------
 410+ A047              ;
 411+ A047              ;   09/10/24
 412+ A047              ;
 413+ A047
 414+ A047              Genera_byte_inclinacion
 415+ A047
 416+ A047 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 417+ A049
 418+ A049              ; Determina tendencia del disparo.
 419+ A049
 420+ A049 3A 75 89         ld a,(CX_Amadeus)
 421+ A04C 47               ld b,a
 422+ A04D 3A C0 8B         ld a,(Coordenada_X)
 423+ A050 90               sub b
 424+ A051 38 07            jr c,Disparo_a_derecha
 425+ A053
 426+ A053 FE 04        Disparo_a_izquierda cp 4
 427+ A055
 428+ A055 D8               ret c
 429+ A056 C8               ret z
 430+ A057
 431+ A057 CB FE            set 7,(hl)
 432+ A059 C9               ret
 433+ A05A
 434+ A05A 47           Disparo_a_derecha ld b,a
 435+ A05B 3E FF            ld a,$ff
 436+ A05D 90               sub b
 437+ A05E
 438+ A05E FE 04            cp 4
 439+ A060
 440+ A060 D8               ret c
 441+ A061 C8               ret z
 442+ A062
 443+ A062 CB F6            set 6,(hl)
 444+ A064 C9               ret
 445+ A065
 446+ A065              ; --------------------------------------------------------------------------------------
 447+ A065              ;
 448+ A065              ;   09/10/24
 449+ A065              ;
 450+ A065
 451+ A065              Modifica_puntero_de_impresion
 452+ A065
 453+ A065              ;   Puntero de impresión del disparo en BC.
 454+ A065
 455+ A065 ED 4B 38 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 456+ A069
 457+ A069 08               ex af,af
 458+ A06A CB 77            bit 6,a
 459+ A06C 28 06            jr z,1F
 460+ A06E
 461+ A06E FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 462+ A072 0C               inc c
 463+ A073 C9               ret
 464+ A074
 465+ A074 CB 7F        1 bit 7,a
 466+ A076 28 F6            jr z,2B
 467+ A078
 468+ A078 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 469+ A07C 0D               dec c
 470+ A07D
 471+ A07D C9               ret
 472+ A07E
 473+ A07E              ; --------------------------------------------------------------------------------------
 474+ A07E              ;
 475+ A07E              ;   31/08/24
 476+ A07E              ;
 477+ A07E
 478+ A07E              Compara_con_coordenadas_de_disparo
 479+ A07E
 480+ A07E 3A C1 8B         ld a,(Coordenada_y)
 481+ A081 47               ld b,a
 482+ A082 3A 3D 8C         ld a,(Coordenadas_disparo_certero)
 483+ A085 90               sub b
 484+ A086
 485+ A086              ; A = "0" ok
 486+ A086              ; A = "1" ok
 487+ A086
 488+ A086 28 08            jr z,Comprueba_coordenada_X
 489+ A088 3D               dec a
 490+ A089 28 05            jr z,Comprueba_coordenada_X
 491+ A08B
 492+ A08B              ; A = "$ff" ok
 493+ A08B
 494+ A08B FE FE            cp $fe
 495+ A08D 28 01            jr z,Comprueba_coordenada_X
 496+ A08F
 497+ A08F C9               ret
 498+ A090
 499+ A090              Comprueba_coordenada_X
 500+ A090
 501+ A090 3A C0 8B         ld a,(Coordenada_X)
 502+ A093 47               ld b,a
 503+ A094 21 3E 8C         ld hl,Coordenadas_disparo_certero+1
 504+ A097 7E               ld a,(hl)
 505+ A098 90               sub b
 506+ A099
 507+ A099              ; A = "0" ok
 508+ A099              ; A = "1" ok
 509+ A099
 510+ A099 28 09            jr z,Activa_Impacto_en_entidad
 511+ A09B 3D               dec a
 512+ A09C 28 06            jr z,Activa_Impacto_en_entidad
 513+ A09E
 514+ A09E              ; A = "2" ok
 515+ A09E
 516+ A09E 3D               dec a
 517+ A09F 28 03            jr z,Activa_Impacto_en_entidad
 518+ A0A1
 519+ A0A1              ; A = "$ff"
 520+ A0A1
 521+ A0A1 FE FD            cp $fd
 522+ A0A3 C0               ret nz
 523+ A0A4
 524+ A0A4              Activa_Impacto_en_entidad
 525+ A0A4
 526+ A0A4              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 527+ A0A4
 528+ A0A4 3E 02            ld a,2
 529+ A0A6 32 C3 8B         ld (Impacto),a
 530+ A0A9
 531+ A0A9              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 532+ A0A9
 533+ A0A9 11 C0 87         ld de,Indice_Explosion_entidades
 534+ A0AC 21 C6 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 535+ A0AF
 536+ A0AF 73               ld (hl),e
 537+ A0B0 23               inc hl
 538+ A0B1 72               ld (hl),d
 539+ A0B2
 540+ A0B2              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 541+ A0B2
 542+ A0B2 21 3A 8C         ld hl,Impacto2
 543+ A0B5 CB 9E            res 3,(hl)
 544+ A0B7
 545+ A0B7 C9               ret
 546+ A0B8
 547+ A0B8              ; --------------------------------------------------------------------------------------
 548+ A0B8              ;
 549+ A0B8              ;   13/10/24
 550+ A0B8              ;
 551+ A0B8
 552+ A0B8              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 553+ A0B8
 554+ A0B8              Limpia_album_de_pintado_disparos_Amadeus
 555+ A0B8
 556+ A0B8 2A 18 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 557+ A0BB 06 06            ld b,6
 558+ A0BD AF               xor a
 559+ A0BE 77           1 ld (hl),a
 560+ A0BF 2C               inc l
 561+ A0C0 10 FC            djnz 1B
 562+ A0C2
 563+ A0C2 C9               ret
 564+ A0C3
 565+ A0C3              ; --------------------------------------------------------------------------------------
 566+ A0C3              ;
 567+ A0C3              ;   11/09/24
 568+ A0C3              ;
 569+ A0C3
 570+ A0C3              Limpia_album_de_borrado_disparos
 571+ A0C3
 572+ A0C3              ;    ld hl,Ctrl_5
 573+ A0C3              ;    bit 2,(hl)
 574+ A0C3              ;    ret z
 575+ A0C3
 576+ A0C3              ;    jr z,1F
 577+ A0C3
 578+ A0C3              ;    res 2,(hl)
 579+ A0C3
 580+ A0C3              ;    jr Limpiando
 581+ A0C3
 582+ A0C3              ;1 bit 0,(hl)
 583+ A0C3              ;    ret z
 584+ A0C3              ;    res 0,(hl)
 585+ A0C3
 586+ A0C3              Limpiando
 587+ A0C3
 588+ A0C3              ;    xor a
 589+ A0C3              ;    ld hl,(Album_de_pintado_disparos)
 590+ A0C3              ;    ld (hl),a
 591+ A0C3              ;    ld e,l
 592+ A0C3              ;    ld d,h
 593+ A0C3              ;    inc e                                           ; DE = HL+1
 594+ A0C3              ;    ld bc,$003a
 595+ A0C3              ;    ldir
 596+ A0C3
 597+ A0C3 C9               ret
 598+ A0C4
 599+ A0C4
 600+ A0C4              ; --------------------------------------------------------------------------------------
 601+ A0C4              ;
 602+ A0C4              ;   29/09/24
 603+ A0C4              ;
 604+ A0C4
 605+ A0C4              Calcula_bytes_pintado_disparos
 606+ A0C4
 607+ A0C4 2A 1C 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 608+ A0C7 45               ld b,l
 609+ A0C8 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 610+ A0CB 7D               ld a,l
 611+ A0CC
 612+ A0CC 90               sub b
 613+ A0CD 32 22 8C         ld (Num_de_bytes_album_de_disparos),a
 614+ A0D0
 615+ A0D0 C9               ret
 616+ A0D1
 617+ A0D1              ; --------------------------------------------------------------------------------------
 618+ A0D1              ;
 619+ A0D1              ;   29/09/24
 620+ A0D1              ;
 621+ A0D1              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 622+ A0D1              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 623+ A0D1              ;   _disparos que el álbum del FRAME actual).
 624+ A0D1
 625+ A0D1              Limpia_album_de_pintado_disparos_entidades
 626+ A0D1
 627+ A0D1 3A 22 8C         ld a,(Num_de_bytes_album_de_disparos)
 628+ A0D4 A7               and a
 629+ A0D5 28 0E            jr z,Clean_only_one
 630+ A0D7
 631+ A0D7 47               ld b,a
 632+ A0D8 3E 31            ld a,$31
 633+ A0DA 90               sub b
 634+ A0DB 47               ld b,a
 635+ A0DC AF           2 xor a
 636+ A0DD
 637+ A0DD 2A 20 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 638+ A0E0 77           1 ld (hl),a
 639+ A0E1 23               inc hl
 640+ A0E2 10 FC            djnz 1B
 641+ A0E4 C9               ret
 642+ A0E5
 643+ A0E5              Clean_only_one
 644+ A0E5
 645+ A0E5 06 07            ld b,7
 646+ A0E7 18 F3            jr 2B
 647+ A0E9
 648+ A0E9              ; --------------------------------------------------------------------------------------
 649+ A0E9              ;
 650+ A0E9              ;   29/09/24
 651+ A0E9              ;
 652+ A0E9
 653+ A0E9              Motor_Disparos_Amadeus
 654+ A0E9
 655+ A0E9 21 20 89         ld hl,Disparo_Amad+1
 656+ A0EC
 657+ A0EC 34               inc (hl)
 658+ A0ED 35               dec (hl)
 659+ A0EE
 660+ A0EE C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 661+ A0EF
 662+ A0EF              ;   Esta caja contiene un disparo.
 663+ A0EF
 664+ A0EF CD F6 A0         call Consulta_Impacto
 665+ A0F2 CC 0F A1         call z,Mueve_disparo_Amadeus
 666+ A0F5
 667+ A0F5 C9               ret
 668+ A0F6
 669+ A0F6              ; ----------------------
 670+ A0F6              ;
 671+ A0F6              ;
 672+ A0F6              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 673+ A0F6              ;
 674+ A0F6              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 675+ A0F6
 676+ A0F6
 677+ A0F6              Consulta_Impacto
 678+ A0F6
 679+ A0F6              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 680+ A0F6              ;   _sea lo más coherente posible.
 681+ A0F6
 682+ A0F6 E5               push hl
 683+ A0F7 2B               dec hl
 684+ A0F8 CD EB A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 685+ A0FB E1               pop hl
 686+ A0FC 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 687+ A0FD
 688+ A0FD C8               ret z
 689+ A0FE
 690+ A0FE 3A 3A 8C         ld a,(Impacto2)
 691+ A101 CB DF            set 3,a
 692+ A103 32 3A 8C         ld (Impacto2),a
 693+ A106
 694+ A106 E5               push hl
 695+ A107 CD D8 A1         call Genera_coordenadas_de_disparo_Amadeus
 696+ A10A E1               pop hl
 697+ A10B CD 28 A1         call Elimina_disparo_Amadeus
 698+ A10E
 699+ A10E C9               ret
 700+ A10F
 701+ A10F              ; ----------------------
 702+ A10F              ;
 703+ A10F              ;
 704+ A10F              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 705+ A10F
 706+ A10F              Mueve_disparo_Amadeus
 707+ A10F
 708+ A10F CD AC 90         call Extrae_address
 709+ A112
 710+ A112 CD D4 99         call PreviousScan
 711+ A115 CD D4 99         call PreviousScan
 712+ A118 CD D4 99         call PreviousScan
 713+ A11B CD D4 99         call PreviousScan
 714+ A11E
 715+ A11E              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 716+ A11E
 717+ A11E 7C               ld a,h
 718+ A11F D6 40            sub $40
 719+ A121 EB               ex de,hl
 720+ A122 38 04            jr c,Elimina_disparo_Amadeus
 721+ A124
 722+ A124               ; Introduce nuevo puntero_de_impresión en la caja.
 723+ A124
 724+ A124 73               ld (hl),e
 725+ A125 23               inc hl
 726+ A126 72               ld (hl),d
 727+ A127
 728+ A127 C9               ret
 729+ A128
 730+ A128              ; ----------------------
 731+ A128              ;
 732+ A128              ;   29/9/24
 733+ A128
 734+ A128              Elimina_disparo_Amadeus
 735+ A128
 736+ A128              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 737+ A128              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 738+ A128
 739+ A128              ;   Disparo_1A defw 0									; Puntero objeto.
 740+ A128              ;   	defw 0											; Puntero de impresión.
 741+ A128
 742+ A128 2B               dec hl
 743+ A129 2B               dec hl
 744+ A12A
 745+ A12A AF               xor a
 746+ A12B 77               ld (hl),a
 747+ A12C 23               inc hl
 748+ A12D 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 749+ A12E
 750+ A12E 23               inc hl
 751+ A12F 77               ld (hl),a
 752+ A130 23               inc hl
 753+ A131 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 754+ A132
 755+ A132 3E 01            ld a,1
 756+ A134 32 24 8C         ld (Permiso_de_disparo_Amadeus),a
 757+ A137
 758+ A137 CD B8 A0         call Limpia_album_de_pintado_disparos_Amadeus
 759+ A13A
 760+ A13A AF               xor a
 761+ A13B 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 762+ A13C
 763+ A13C C9               ret
 764+ A13D
 765+ A13D              ; --------------------------------------------------------------------------------------
 766+ A13D              ;
 767+ A13D              ;   13/10/24
 768+ A13D              ;
 769+ A13D
 770+ A13D              Pinta_disparos_Amadeus
 771+ A13D
 772+ A13D 06 02            ld b,2
 773+ A13F ED 73 0C 8C      ld (Stack),sp
 774+ A143 ED 7B 1A 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 775+ A147 D1           3 pop de
 776+ A148 14               inc d
 777+ A149 15               dec d
 778+ A14A 28 1C            jr z,1F
 779+ A14C E1               pop hl
 780+ A14D
 781+ A14D              Imprime_scanlines_en_pantalla
 782+ A14D
 783+ A14D              ; 1er scanline
 784+ A14D
 785+ A14D 1A               ld a,(de)
 786+ A14E AE               xor (hl)
 787+ A14F 77               ld (hl),a
 788+ A150
 789+ A150 1C               inc e
 790+ A151 2C               inc l
 791+ A152
 792+ A152 1A               ld a,(de)
 793+ A153 AE               xor (hl)
 794+ A154 77               ld (hl),a
 795+ A155
 796+ A155 1D               dec e
 797+ A156 E1               pop hl
 798+ A157
 799+ A157              ; 2º scanline
 800+ A157
 801+ A157 1A               ld a,(de)
 802+ A158 AE               xor (hl)
 803+ A159 77               ld (hl),a
 804+ A15A
 805+ A15A 1C               inc e
 806+ A15B 2C               inc l
 807+ A15C
 808+ A15C 1A               ld a,(de)
 809+ A15D AE               xor (hl)
 810+ A15E 77               ld (hl),a
 811+ A15F
 812+ A15F 1D               dec e
 813+ A160
 814+ A160 18 06            jr 1F
 815+ A162
 816+ A162 ED 7B 18 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
 817+ A166 18 DF            jr 3B
 818+ A168 10 F8        1 djnz 2B
 819+ A16A ED 7B 0C 8C      ld sp,(Stack)
 820+ A16E C9               ret
 821+ A16F
 822+ A16F              ; --------------------------------------------------------------------------------------
 823+ A16F              ;
 824+ A16F              ;   13/10/24
 825+ A16F              ;
 826+ A16F              ;   Modifica: HL,BC y DE.
 827+ A16F
 828+ A16F
 829+ A16F              Genera_datos_de_impresion_disparos_Amadeus
 830+ A16F
 831+ A16F ED 73 0C 8C      ld (Stack),sp
 832+ A173 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 833+ A176 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 834+ A177
 835+ A177 14               inc d                                                     ;? Salimos si no hay disparo.
 836+ A178 15               dec d
 837+ A179
 838+ A179 28 0E            jr z,Salida
 839+ A17B
 840+ A17B              Genera_scanlines_de_disparo_Amadeus
 841+ A17B
 842+ A17B E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 843+ A17C              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 844+ A17C ED 7B 18 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
 845+ A180
 846+ A180 C1               pop bc
 847+ A181 C1               pop bc
 848+ A182 C1               pop bc
 849+ A183
 850+ A183 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 851+ A184 CD D4 99         call PreviousScan
 852+ A187 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 853+ A188 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 854+ A189
 855+ A189              Salida
 856+ A189
 857+ A189 ED 7B 0C 8C      ld sp,(Stack)
 858+ A18D
 859+ A18D C9               ret
 860+ A18E
 861+ A18E              ; --------------------------------------------------------------------------------------
 862+ A18E              ;
 863+ A18E              ;   12/09/24
 864+ A18E              ;
 865+ A18E
 866+ A18E              Genera_disparo_Amadeus
 867+ A18E
 868+ A18E              ;*  Exclusiones.
 869+ A18E
 870+ A18E 3A 24 8C         ld a,(Permiso_de_disparo_Amadeus)
 871+ A191 A7               and a
 872+ A192 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 873+ A193
 874+ A193 3D               dec a
 875+ A194 32 24 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 876+ A197
 877+ A197              Define_puntero_objeto_disparo
 878+ A197
 879+ A197              ;   Inicializamos contador.
 880+ A197
 881+ A197 06 00            ld b,0
 882+ A199
 883+ A199 2A 79 89         ld hl,(p.imp.amadeus)
 884+ A19C 2C               inc l
 885+ A19D
 886+ A19D 3E 80            ld a,$80
 887+ A19F BE               cp (hl)
 888+ A1A0 28 0D            jr z,1F
 889+ A1A2
 890+ A1A2 04               inc b
 891+ A1A3
 892+ A1A3 3E 60            ld a,$60
 893+ A1A5 BE               cp (hl)
 894+ A1A6 28 07            jr z,1F
 895+ A1A8
 896+ A1A8
 897+ A1A8 04               inc b
 898+ A1A9
 899+ A1A9 3E 18            ld a,$18
 900+ A1AB BE               cp (hl)
 901+ A1AC 28 01            jr z,1F
 902+ A1AE
 903+ A1AE 04               inc b
 904+ A1AF
 905+ A1AF              ;   Calcula el Puntero_de_impresión del disparo.
 906+ A1AF
 907+ A1AF              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 908+ A1AF
 909+ A1AF CD D4 99     1 call PreviousScan
 910+ A1B2
 911+ A1B2 78               ld a,b
 912+ A1B3 CB 3F            srl a
 913+ A1B5 28 03            jr z,4F
 914+ A1B7
 915+ A1B7              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 916+ A1B7 E5               push hl
 917+ A1B8 18 02            jr 5F
 918+ A1BA 2D           4 dec l
 919+ A1BB E5               push hl
 920+ A1BC              ; ---
 921+ A1BC
 922+ A1BC              ;   Calcula el Puntero_objeto del disparo.
 923+ A1BC
 924+ A1BC 21 76 83     5 ld hl,Indice_disparo_Amadeus
 925+ A1BF 04               inc b
 926+ A1C0 05               dec b
 927+ A1C1 28 04            jr z,2F
 928+ A1C3
 929+ A1C3              ;   Nos desplazamos por el índice de disparos.
 930+ A1C3
 931+ A1C3 2C           3 inc l
 932+ A1C4 2C               inc l
 933+ A1C5 10 FC            djnz 3B
 934+ A1C7
 935+ A1C7              ; --- Guarda el Puntero_objeto del disparo en la pila.
 936+ A1C7 CD AC 90     2 call Extrae_address
 937+ A1CA E5               push hl
 938+ A1CB              ; ---
 939+ A1CB
 940+ A1CB              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 941+ A1CB              ; HL en el 1er .db de la caja.
 942+ A1CB
 943+ A1CB 21 1F 89         ld hl,Disparo_Amad
 944+ A1CE
 945+ A1CE 06 02            ld b,2
 946+ A1D0
 947+ A1D0 D1           6 pop de
 948+ A1D1 73               ld (hl),e
 949+ A1D2 23               inc hl
 950+ A1D3 72               ld (hl),d
 951+ A1D4 23               inc hl
 952+ A1D5
 953+ A1D5 10 F9            djnz 6B
 954+ A1D7
 955+ A1D7 C9               ret
 956+ A1D8
 957+ A1D8              Genera_coordenadas_de_disparo_Amadeus
 958+ A1D8
 959+ A1D8              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 960+ A1D8              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 961+ A1D8              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 962+ A1D8
 963+ A1D8 CD AC 90         call Extrae_address
 964+ A1DB CD CB 94         call Genera_coordenadas
 965+ A1DE
 966+ A1DE 3D               dec a
 967+ A1DF
 968+ A1DF 21 3D 8C         ld hl,Coordenadas_disparo_certero
 969+ A1E2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 970+ A1E3 23               inc hl
 971+ A1E4 3A C0 8B         ld a,(Coordenada_X)
 972+ A1E7 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 973+ A1E8
 974+ A1E8 AF               xor a
 975+ A1E9 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 976+ A1EA
 977+ A1EA C9               ret
 978+ A1EB
 979+ A1EB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 980+ A1EB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 981+ A1EB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 982+ A1EB
 983+ A1EB              ; ----------------------------------------------
 984+ A1EB              ;
 985+ A1EB              ;   27/08/24
 986+ A1EB              ;
 987+ A1EB              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 988+ A1EB              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 989+ A1EB
 990+ A1EB              Detecta_impacto_en_disparo_de_Amadeus
 991+ A1EB
 992+ A1EB              Extraccion_de_datos
 993+ A1EB
 994+ A1EB 13               inc de
 995+ A1EC 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
 996+ A1ED
 997+ A1ED 5E               ld e,(hl)
 998+ A1EE 23               inc hl
 999+ A1EF 56               ld d,(hl)
1000+ A1F0
1001+ A1F0 23               inc hl
1002+ A1F1
1003+ A1F1 4E               ld c,(hl)
1004+ A1F2 23               inc hl
1005+ A1F3 46               ld b,(hl)
1006+ A1F4
1007+ A1F4 C5               push bc
1008+ A1F5 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1009+ A1F6
1010+ A1F6              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1011+ A1F6
1012+ A1F6 CD D4 99         call PreviousScan
1013+ A1F9 CD D4 99         call PreviousScan
1014+ A1FC
1015+ A1FC              Detecta_impacto_
1016+ A1FC
1017+ A1FC 1A               ld a,(de)
1018+ A1FD A6               and (hl)
1019+ A1FE C0               ret nz
1020+ A1FF
1021+ A1FF 13               inc de
1022+ A200 23               inc hl
1023+ A201
1024+ A201 1A               ld a,(de)
1025+ A202 A6               and (hl)
1026+ A203 C9               ret
1027+ A204
1028+ A204              ; -------------------------------------------------------------------------------------------------------------
1029+ A204              ;
1030+ A204              ;   8/8/24
1031+ A204              ;
1032+ A204              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1033+ A204              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1034+ A204              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1035+ A204              ;
1036+ A204              ;   MODIFICA: HL,DE,BC y A.
1037+ A204              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1038+ A204              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1039+ A204
1040+ A204              Colision_Entidad_Amadeus
1041+ A204
1042+ A204              ; Posible contacto de entidad con Amadeus. ?????
1043+ A204
1044+ A204              ; Exclusiones:
1045+ A204
1046+ A204 3A 5D 8C         ld a,(Shield)
1047+ A207 A7               and a
1048+ A208 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1049+ A209
1050+ A209 21 33 8C         ld hl,Ctrl_3
1051+ A20C CB 76            bit 6,(hl)
1052+ A20E C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1053+ A20F
1054+ A20F 21 3A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1055+ A212 CB 56            bit 2,(hl)
1056+ A214 C0               ret nz
1057+ A215
1058+ A215 3A C1 8B     	ld a,(Coordenada_y)
1059+ A218 FE 14        	cp $14
1060+ A21A D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1061+ A21B
1062+ A21B 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1063+ A21E A7               and a
1064+ A21F C0               ret nz
1065+ A220
1066+ A220              Genera_coordenadas_X
1067+ A220
1068+ A220              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1069+ A220              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1070+ A220
1071+ A220              ;   Limpiamos almacenes.
1072+ A220
1073+ A220              ;    call Limpia_Coordenadas_X
1074+ A220
1075+ A220              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1076+ A220
1077+ A220 21 3F 8C         ld hl,Coordenadas_X_Entidad
1078+ A223 3A C0 8B         ld a,(Coordenada_X)
1079+ A226 CD 48 A2         call Guarda_coordenadas_X
1080+ A229
1081+ A229              ;   Almacenamos las coordenadas X de Amadeus.
1082+ A229
1083+ A229 3A 75 89         ld a,(CX_Amadeus)
1084+ A22C CD 48 A2         call Guarda_coordenadas_X
1085+ A22F CD 5C A2         call Compara_coordenadas_X
1086+ A232 C0               ret nz
1087+ A233
1088+ A233 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1089+ A235 32 C3 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1090+ A238
1091+ A238 2A FF 8B         ld hl,(Puntero_store_caja)
1092+ A23B 2C               inc l
1093+ A23C 2C               inc l
1094+ A23D 2C               inc l
1095+ A23E 2C               inc l
1096+ A23F 22 3B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1097+ A242
1098+ A242 21 3A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1099+ A245 CB D6            set 2,(hl)
1100+ A247
1101+ A247 C9               ret
1102+ A248
1103+ A248               ; ----- ----- ----- ----- -----
1104+ A248
1105+ A248 77           Guarda_coordenadas_X ld (hl),a
1106+ A249 3C               inc a
1107+ A24A 2C               inc l
1108+ A24B 77               ld (hl),a
1109+ A24C 3C               inc a
1110+ A24D 2C               inc l
1111+ A24E 77               ld (hl),a
1112+ A24F 2C               inc l
1113+ A250 C9               ret
1114+ A251
1115+ A251 AF           Limpia_Coordenadas_X xor a
1116+ A252 06 06            ld b,6
1117+ A254 21 42 8C         ld hl,Coordenadas_X_Amadeus
1118+ A257 77           1 ld (hl),a
1119+ A258 23               inc hl
1120+ A259 10 FC            djnz 1B
1121+ A25B C9               ret
1122+ A25C
1123+ A25C              ; ----- ----- ----- ----- -----
1124+ A25C
1125+ A25C              Compara_coordenadas_X
1126+ A25C
1127+ A25C DD 21 3F 8C      ld ix,Coordenadas_X_Entidad
1128+ A260 DD 7E 00         ld a,(ix+0)
1129+ A263 CD 71 A2         call Comparando
1130+ A266 C8               ret z
1131+ A267
1132+ A267 3C               inc a
1133+ A268 CD 80 A2         call Comparando_1
1134+ A26B C8               ret z
1135+ A26C
1136+ A26C 3C               inc a
1137+ A26D CD 80 A2         call Comparando_1
1138+ A270 C9               ret
1139+ A271
1140+ A271              ; ----- ----- ----- ----- -----
1141+ A271              ;
1142+ A271              ;   4/12/23
1143+ A271              ;
1144+ A271              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1145+ A271
1146+ A271              Comparando
1147+ A271
1148+ A271 DD 2C            inc ixl
1149+ A273 DD 2C            inc ixl
1150+ A275 DD 2C            inc ixl
1151+ A277
1152+ A277 DD 46 00         ld b,(ix+0)
1153+ A27A DD 4E 01         ld c,(ix+1)
1154+ A27D DD 56 02         ld d,(ix+2)
1155+ A280
1156+ A280 B8           Comparando_1 cp b
1157+ A281 C8               ret z
1158+ A282 B9               cp c
1159+ A283 C8               ret z
1160+ A284 BA               cp d
1161+ A285 C9               ret
1162+ A286
1163+ A286              ; -----------------------------------------------------------------------
1164+ A286              ;
1165+ A286              ;   04/7/24
1166+ A286              ;
1167+ A286
1168+ A286              Detecta_colision_nave_entidad
1169+ A286
1170+ A286              ; Exclusiones:
1171+ A286
1172+ A286              ; Salimos de la rutina si no hay advertencia de posible colisión.
1173+ A286
1174+ A286 21 3A 8C     	ld hl,Impacto2
1175+ A289 CB 56        	bit 2,(hl)
1176+ A28B C8           	ret z
1177+ A28C
1178+ A28C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1179+ A28C
1180+ A28C 2A 7B 89         ld hl,(Pamm_Amadeus)
1181+ A28F CD AC 90         call Extrae_address
1182+ A292 54               ld d,h
1183+ A293 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1184+ A294
1185+ A294 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1186+ A297 06 10            ld b,16                                        ; Contador de scanlines en B.
1187+ A299 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1188+ A29C
1189+ A29C C5           1 push bc
1190+ A29D 06 03            ld b,3
1191+ A29F E5               push hl
1192+ A2A0
1193+ A2A0              ; .db
1194+ A2A0
1195+ A2A0 1A           3 ld a,(de)
1196+ A2A1 A7               and a
1197+ A2A2 20 03            jr nz,4F
1198+ A2A4
1199+ A2A4 2C               inc l
1200+ A2A5 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1201+ A2A7
1202+ A2A7 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1203+ A2A9 28 04            jr z,2F
1204+ A2AB
1205+ A2AB              ; Impacto.
1206+ A2AB FD 2D            dec iyl
1207+ A2AD 28 22            jr z,5F
1208+ A2AF
1209+ A2AF 1C           2 inc e
1210+ A2B0 10 EE            djnz 3B
1211+ A2B2
1212+ A2B2 E1               pop hl
1213+ A2B3
1214+ A2B3              ; Hay salto de línea en el puntero de impresión ???
1215+ A2B3
1216+ A2B3 7C               ld a,h
1217+ A2B4 D6 57            sub $57
1218+ A2B6 20 0A            jr nz,6F
1219+ A2B8
1220+ A2B8              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1221+ A2B8
1222+ A2B8 2A 79 89         ld hl,(p.imp.amadeus)
1223+ A2BB 3E 20            ld a,$20
1224+ A2BD A7               and a
1225+ A2BE 85               add l
1226+ A2BF 6F               ld l,a
1227+ A2C0 18 01            jr 7F
1228+ A2C2
1229+ A2C2 24           6 inc h
1230+ A2C3
1231+ A2C3 C1           7 pop bc
1232+ A2C4 10 D6            djnz 1B
1233+ A2C6
1234+ A2C6              ;   Fin de la comparativa.
1235+ A2C6
1236+ A2C6              ;   NO HAY COLISIÓN !!!!!.
1237+ A2C6              ;
1238+ A2C6              ;   .db (Impacto) de Amadeus a "0".
1239+ A2C6              ;   RES el bit2 de (Impacto2).
1240+ A2C6              ;
1241+ A2C6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1242+ A2C6              ;   Lo colocamos a "0".
1243+ A2C6
1244+ A2C6 21 3A 8C         ld hl,Impacto2
1245+ A2C9 CB 96            res 2,(hl)
1246+ A2CB 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)
1247+ A2CE 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1248+ A2D0 C9               ret
1249+ A2D1
1250+ A2D1              ;   COLISIÓN !!!!!.
1251+ A2D1              ;
1252+ A2D1              ;   .db (Impacto) de Amadeus a "1".
1253+ A2D1              ;   SET el bit3 de (Impacto2).
1254+ A2D1              ;
1255+ A2D1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1256+ A2D1
1257+ A2D1 E1           5 pop hl
1258+ A2D2 C1               pop bc
1259+ A2D3
1260+ A2D3 21 78 89         ld hl,Impacto_Amadeus
1261+ A2D6 36 01            ld (hl),1
1262+ A2D8 21 3A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1263+ A2DB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1264+ A2DD
1265+ A2DD 11 C0 87         ld de,Indice_Explosion_entidades
1266+ A2E0 2A 3B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1267+ A2E3
1268+ A2E3 23               inc hl
1269+ A2E4 23               inc hl
1270+ A2E5 23               inc hl
1271+ A2E6
1272+ A2E6 73               ld (hl),e
1273+ A2E7 23               inc hl
1274+ A2E8 72               ld (hl),d
1275+ A2E9
1276+ A2E9              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1277+ A2E9
1278+ A2E9 11 60 88         ld de,Indice_Explosion_Amadeus
1279+ A2EC 21 7B 89         ld hl,Pamm_Amadeus
1280+ A2EF
1281+ A2EF 73               ld (hl),e
1282+ A2F0 23               inc hl
1283+ A2F1 72               ld (hl),d
1284+ A2F2
1285+ A2F2 C9               ret
1286+ A2F3
1287+ A2F3
1288+ A2F3
# file closed: Disparo.asm
2100  A2F3
2101  A2F3              	SAVESNA "Pruebas.sna", START
2102  A2F3
2103  A2F3
2104  A2F3
2105  A2F3
# file closed: Banco_de_pruebas.asm
