# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 61 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD C9 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 94 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8A 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD B4 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 88 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 88 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8B 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD D2 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	06/12/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 08 40        	defw $4008											; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63
  96+ 8A63              ; Notas de aleatoriedad.
  97+ 8A63
  98+ 8A63              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A63              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A63              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A63
 102+ 8A63
 103+ 8A63
 104+ 8A63
 105+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 106+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 107+ 8A6B
 108+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
 109+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 109+ 8A73 08 00
 110+ 8A75
 111+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 112+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 112+ 8A7D 0F FE
 113+ 8A7F
 114+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 115+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 116+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 118+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 119+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 120+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 122+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 123+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 124+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 125+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 126+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 127+ 8AB3
 128+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 129+ 8AB7 11 11 91 FD      db $11,$11,$91,253,3,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 129+ 8ABB 03 00
 130+ 8ABD
 131+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 132+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 132+ 8AC5 02 00
 133+ 8AC7
 134+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 135+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 135+ 8ACF 04 00
 136+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 137+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 137+ 8AD9 08 00
 138+ 8ADB
 139+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 140+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 140+ 8AE3 02 00
 141+ 8AE5
 142+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 143+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 143+ 8AED 06 00
 144+ 8AEF
 145+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 146+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 146+ 8AF7 06 00
 147+ 8AF9
 148+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 149+ 8AF9
 150+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 151+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 152+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 153+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 154+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 155+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 156+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 157+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 159+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 160+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 161+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 162+ 8B29
 163+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 164+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 165+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 166+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 167+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 168+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 169+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 170+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 171+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 172+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 173+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 174+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 175+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 176+ 8B5D
 177+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 178+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 178+ 8B65 07 00
 179+ 8B67
 180+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 181+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 181+ 8B6F 02 00
 182+ 8B71
 183+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 184+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 184+ 8B79 04 00
 185+ 8B7B
 186+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 187+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 187+ 8B83 08 00
 188+ 8B85
 189+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 190+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 190+ 8B8D 02 00
 191+ 8B8F
 192+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 193+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 193+ 8B97 06 00
 194+ 8B99
 195+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 196+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 196+ 8BA1 06 00
 197+ 8BA3
 198+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 199+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 200+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 201+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 202+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 203+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 204+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 205+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 206+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 207+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 208+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 209+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 210+ 8BD3
 211+ 8BD3
 212+ 8BD3
 213+ 8BD3
 214+ 8BD3
 215+ 8BD3
 216+ 8BD3
 217+ 8BD3
 218+ 8BD3
 219+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DD 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BDC 01           	db 1										; Tipo de entidad que vamos a introducir en las 6 cajas de DRAW.
  17+ 8BDD
  18+ 8BDD 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BDE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE2 01 02
  20+ 8BE4 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BE8 01 02
  21+ 8BEA
# file closed: Niveles.asm
 150  8BEA
 151  8BEA              ; --------------------------------------------------------------------------------
 152  8BEA              ;
 153  8BEA              ; 12/05/24
 154  8BEA              ;
 155  8BEA              ; Parámetros DRAW.
 156  8BEA              ;
 157  8BEA
 158  8BEA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEA
 160  8BEA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEB              ;															- Patrón de movimiento.
 162  8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BEC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BED
 165  8BED 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEE
 168  8BEE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEE              ; Ejemplos.
 171  8BEE
 172  8BEE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEE
 178  8BEE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BEF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BEF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BEF
 182  8BEF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF1
 185  8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF3
 187  8BF3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF3
 189  8BF3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF5              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF5
 192  8BF5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF5
 194  8BF5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF6
 200  8BF6 00           Ctrl_2 db 0
 201  8BF7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF7              ;
 209  8BF7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF7              ;														BIT 4, ???
 215  8BF7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF7
 217  8BF7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF8              ;
 223  8BF8              ; 														DESCRIPCIÖN:
 224  8BF8              ;
 225  8BF8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF8              ;
 239  8BF8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF8
 243  8BF8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF8
 245  8BF8 00           Filas db 0												; Filas. [DRAW]
 246  8BF9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFE
 250  8BFE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFE
 252  8BFE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8BFF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8BFF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8BFF
 256  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8BFF
 258  8BFF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8BFF              ;
 260  8BFF              ;	COLORES: 0 ..... NEGRO
 261  8BFF              ;    		 1 ..... AZUL
 262  8BFF              ; 			 2 ..... ROJO
 263  8BFF              ;			 3 ..... MAGENTA
 264  8BFF              ; 			 4 ..... VERDE
 265  8BFF              ; 			 5 ..... CIAN
 266  8BFF              ;			 6 ..... AMARILLO
 267  8BFF              ; 			 7 ..... BLANCO
 268  8BFF
 269  8BFF 00 00        Indice_Sprite_der defw 0
 270  8C01 00 00        Indice_Sprite_izq defw 0
 271  8C03 00 00        Puntero_DESPLZ_der defw 0
 272  8C05 00 00        Puntero_DESPLZ_izq defw 0
 273  8C07
 274  8C07 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C09 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0A 00           Columnas db 0
 277  8C0B 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C0D              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C0D 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C0E
 281  8C0E              ; variables de control general.
 282  8C0E
 283  8C0E 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C0F
 285  8C0F              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C0F
 287  8C0F              Perfiles_de_velocidad
 288  8C0F
 289  8C0F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C10 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C11 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C12 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C13
 294  8C13              ; Contadores de 16 bits.
 295  8C13
 296  8C13 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C15 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C17 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C19 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1B
 301  8C1B              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1B
 303  8C1B 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C1D 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C1F 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C21              ;
 307  8C21              ;
 308  8C21 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C22              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C22              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C22 00           Incrementa_puntero_backup db 0
 312  8C23 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C24              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C24 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C25 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C26 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C27              ;
 318  8C27              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C27              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C27              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C27              ;
 322  8C27              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C27              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C27              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C27              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C27              ;
 327  8C27              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C27              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C27              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C27
 331  8C27 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C28
 333  8C28              ;														DESCRIPCIÓN:
 334  8C28              ;
 335  8C28              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C28              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C28              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C28              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C28              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C28              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C28
 342  8C28              ;														BIT 3, Recarga de nueva oleada.
 343  8C28              ;														BIT 4, Recarga de nueva oleada.
 344  8C28              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C28              ;														BIT 6, **** Frame completo.
 346  8C28              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C28
 348  8C28 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2A
 353  8C2A              ; Gestión de ENTIDADES y CAJAS.
 354  8C2A
 355  8C2A 00 00        Puntero_store_caja defw 0
 356  8C2C 00 00        Puntero_restore_caja defw 0
 357  8C2E 00 00        Indice_restore_caja defw 0
 358  8C30 00 00        Puntero_indice_master defw 0
 359  8C32
 360  8C32 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C33 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C34 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C35
 364  8C35 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C37 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C39              ;														; _ puntero (Indice_entidades).
 367  8C39
 368  8C39              ;---------------------------------------------------------------------------------------------------------------
 369  8C39              ;
 370  8C39              ;	13/10/24
 371  8C39              ;
 372  8C39              ;	Álbumes.
 373  8C39
 374  8C39 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3B              ;														; _variable para almacenar lo posición del puntero_
 376  8C3B              ; 														; _de pila, SP.
 377  8C3B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C3D              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C3D
 380  8C3D              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C3D
 382  8C3D 00 00        Album_de_pintado defw 0
 383  8C3F 00 00        Album_de_borrado defw 0
 384  8C41 00 00        Album_de_pintado_Amadeus defw 0
 385  8C43 00 00        Album_de_borrado_Amadeus defw 0
 386  8C45
 387  8C45 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C47 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C49
 390  8C49 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4B 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C4D
 393  8C4D
 394  8C4D 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C4F
 396  8C4F 00           Num_de_bytes_album_de_disparos db 0
 397  8C50 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C51
 399  8C51 07           Numero_de_disparos_de_entidades db 7
 400  8C52
 401  8C52 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C53 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C54
 404  8C54 00 00        Techo_Scanlines_album defw 0
 405  8C56 00 00        Techo_Scanlines_album_2 defw 0
 406  8C58 00           Switch db 0
 407  8C59 00 00        Techo defw 0
 408  8C5B 00 00        Scanlines_album_SP defw 0
 409  8C5D 00 89        India_SP defw Tabla_de_pintado
 410  8C5F 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C61
 412  8C61 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C62              ;
 414  8C62              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C62              ;!															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C62              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C62              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C62              ;																Habilita el borrado/pintado de sprites.
 419  8C62              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C62              ;																_ a la baja.
 421  8C62              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C62              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C62              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C62              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C62              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C62              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C62
 428  8C62 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C63              ;
 430  8C63              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C63
 432  8C63 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C64              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C64              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C64
 436  8C64              ; Gestión de Disparos.
 437  8C64
 438  8C64 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C66 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C68 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C69
 442  8C69              ;
 443  8C69              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C69              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C69              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C69              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C69
 448  8C69
 449  8C69
 450  8C69
 451  8C69
 452  8C69
 453  8C69
 454  8C69 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C6B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C6B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C6B
 458  8C6B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C6D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C6D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C70              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C70 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C73              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C73
 465  8C73              ;---------------------------------------------------------------------------------------------------------------
 466  8C73
 467  8C73              ; Relojes y temporizaciones.
 468  8C73
 469  8C73 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C74 05           Clock_explosion_Amadeus db 5
 471  8C75 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C76
 473  8C76 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C78 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C7A 00           Numero_rnd_disparos db 0
 476  8C7B
 477  8C7B 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C7D A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C7E A0           CLOCK_disparos_de_entidades db $a0
 480  8C7F
 481  8C7F              ;---------------------------------------------------------------------------------------------------------------
 482  8C7F
 483  8C7F              ; Gestión de NIVELES.
 484  8C7F
 485  8C7F 00           Nivel db 0												; Nivel actual del juego.
 486  8C80 00 00        Puntero_indice_NIVELES defw 0
 487  8C82 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C84              ; 														; _ que definen el NIVEL.
 489  8C84
 490  8C84              ; ---------------------------------------------------------------------------------------------------------------
 491  8C84
 492  8C84              ; Temporizaciones Shield.
 493  8C84
 494  8C84 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C88 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C8A 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C8B 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C8C 00           Shield_3 db 0
 499  8C8D
 500  8C8D 07           Lives db 7
 501  8C8E
 502  8C8E              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8C8E              ;
 504  8C8E              ;	13/11/24
 505  8C8E
 506  8C8E              START
 507  8C8E
 508  8C8E 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8C91 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8C93 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8C95 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8C97 F3           	DI
 513  8C98
 514  8C98              ; Limpiamos pantalla.
 515  8C98
 516  8C98              ;	ld a,%00000111
 517  8C98              ;	call Cls
 518  8C98 CD A9 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8C9B
 520  8C9B              INICIALIZACION
 521  8C9B
 522  8C9B 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8C9D CD 44 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CA0 CD 20 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CA3 6F           	ld l,a
 526  8CA4 26 00        	ld h,0
 527  8CA6 22 7B 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CA9
 529  8CA9              ;	Inicia los álbumes de líneas.
 530  8CA9
 531  8CA9 CD FE 90     	call Inicia_albumes_de_lineas
 532  8CAC CD 0E 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CAF CD 1B 91     	call Inicia_albumes_de_disparos
 534  8CB2
 535  8CB2              ;	Inicia 1er Nivel.
 536  8CB2
 537  8CB2 CD A6 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CB5 CD 74 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CB8              ;														   _reponiendo entidades eliminadas.
 540  8CB8 CD DA 93     	call Prepara_Cajas_de_Entidades
 541  8CBB
 542  8CBB CD 2B 94     	call Inicia_Amadeus
 543  8CBE
 544  8CBE              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 545  8CBE              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 546  8CBE              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 547  8CBE 11 AE 89     	ld de,Amadeus_BOX
 548  8CC1 CD 1A 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CC4 CD 6E 94     	call Limpiamos_bandeja_DRAW
 550  8CC7
 551  8CC7              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CC7
 553  8CC7 06 3C        	ld b,60
 554  8CC9 CD EC 9D     2 call Amadeus_a_izquierda
 555  8CCC 10 FB        	djnz 2B
 556  8CCE
 557  8CCE CD DC 90     	call Genera_datos_de_impresion_Amadeus
 558  8CD1
 559  8CD1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CD1
 561  8CD1 CD 37 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CD4
 563  8CD4 CD B4 91     	call Inicia_Shield
 564  8CD7
 565  8CD7 2A 5B 8C     6 ld hl,(Scanlines_album_SP)
 566  8CDA 22 54 8C     	ld (Techo_Scanlines_album),hl
 567  8CDD
 568  8CDD 2A 3F 8C     	ld hl,(Album_de_borrado)
 569  8CE0 22 5B 8C     	ld (Scanlines_album_SP),hl
 570  8CE3
 571  8CE3 21 00 89     	ld hl,Tabla_de_pintado
 572  8CE6 22 5D 8C     	ld (India_SP),hl
 573  8CE9
 574  8CE9 21 61 8C     	ld hl,Ctrl_3
 575  8CEC CB C6        	set 0,(hl) 											; Indica Frame completo.
 576  8CEE CB D6        	set 2,(hl)
 577  8CF0 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 578  8CF2
 579  8CF2 FB           	ei 													; Ha de apuntar a $5c3a.
 580  8CF3
 581  8CF3 76           	halt
 582  8CF4
 583  8CF4              ; ------------------------------------
 584  8CF4
 585  8CF4              Main
 586  8CF4              ;
 587  8CF4              ; 07/11/24.
 588  8CF4
 589  8CF4              ; Gestión de disparos.
 590  8CF4
 591  8CF4 CD F5 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 592  8CF7 CD DA 9F     	call Motor_de_disparos_entidades
 593  8CFA CD 75 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 594  8CFD
 595  8CFD              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 596  8CFD              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 597  8CFD              ; Este hecho lo indica el bit2 de (Impacto2).
 598  8CFD
 599  8CFD CD 16 A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 600  8D00
 601  8D00              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 602  8D00
 603  8D00 21 7E 8C     	ld hl,CLOCK_disparos_de_entidades
 604  8D03 35           	dec (hl)
 605  8D04 CC 36 8E     	call z,Autoriza_disparo_de_entidades
 606  8D07
 607  8D07 2A 7B 8C     	ld hl,(Clock_next_entity)
 608  8D0A ED 4B 78 5C  	ld bc,(FRAMES)
 609  8D0E A7           	and a
 610  8D0F ED 42        	sbc hl,bc
 611  8D11 20 21        	jr nz,1F
 612  8D13
 613  8D13              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8D13
 615  8D13 CD 20 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 616  8D16 CD 37 8F     	call Define_Clock_next_entity
 617  8D19
 618  8D19              ; GESTIÓN DE ENTIDADES.
 619  8D19
 620  8D19              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8D19              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8D19
 623  8D19              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8D19              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8D19              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8D19
 627  8D19 21 33 8C     	ld hl,Numero_parcial_de_entidades
 628  8D1C 46           	ld b,(hl)
 629  8D1D
 630  8D1D 04           	inc b
 631  8D1E 05           	dec b
 632  8D1F
 633  8D1F F3           	di
 634  8D20 28 FE        	jr z,$													;! Nivel superado !!!!!
 635  8D22 FB           	ei
 636  8D23
 637  8D23 3A 34 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 638  8D26 B8           	cp b
 639  8D27 28 0B        	jr z,1F
 640  8D29 30 09        	jr nc,1F
 641  8D2B
 642  8D2B              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 643  8D2B
 644  8D2B 3C           	inc a
 645  8D2C 32 34 8C     	ld (Entidades_en_curso),a
 646  8D2F
 647  8D2F 21 62 8C     	ld hl,Ctrl_4
 648  8D32 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 649  8D34
 650  8D34              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D34
 652  8D34              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D34              ;	call Define_Clock_next_entity
 654  8D34
 655  8D34 3A 34 8C     1 ld a,(Entidades_en_curso)
 656  8D37 A7           	and a
 657  8D38 CA DC 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D3B 47           	ld b,a													; No hay entidades que gestionar.
 659  8D3C
 660  8D3C              ; ( Código que ejecutamos con cada entidad: ).
 661  8D3C
 662  8D3C              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D3C              ;
 664  8D3C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D3C
 666  8D3C 21 00 89     	ld hl,Tabla_de_pintado
 667  8D3F 22 5D 8C     	ld (India_SP),hl
 668  8D42
 669  8D42 21 61 8C     	ld hl,Ctrl_3
 670  8D45 CB D6        	set 2,(hl)
 671  8D47 CD CA 8E     	call Change
 672  8D4A
 673  8D4A C5           2 push bc 												; Nº de entidades en curso.
 674  8D4B
 675  8D4B DD 2A 2A 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 676  8D4F CD 85 91     	call Salta_caja_de_entidades_vacia
 677  8D52
 678  8D52              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 679  8D52
 680  8D52 DD 7E 00     	ld a,(ix+0)
 681  8D55 CB 7F        	bit 7,a
 682  8D57 28 11        	jr z,5F
 683  8D59
 684  8D59              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 685  8D59
 686  8D59 21 62 8C     	ld hl,Ctrl_4
 687  8D5C CB 46        	bit 0,(hl)
 688  8D5E CC 94 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 689  8D61 28 E8        	jr z,6B
 690  8D63
 691  8D63 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 692  8D65 CB BF        	res 7,a
 693  8D67 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 694  8D6A
 695  8D6A              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 696  8D6A              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 697  8D6A
 698  8D6A 3A 68 8C     5 ld a,(Impacto2)
 699  8D6D CB 5F        	bit 3,a
 700  8D6F C4 0C A2     	call nz,Compara_con_coordenadas_de_disparo
 701  8D72
 702  8D72              ; Existe colisión entre esta entidad y Amadeus ???
 703  8D72
 704  8D72 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 705  8D75 CB 4F        	bit 1,a
 706  8D77 C4 9F 92     	call nz,Genera_explosion
 707  8D7A 20 43        	jr nz,Gestiona_siguiente_entidad
 708  8D7C
 709  8D7C DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 710  8D7F A7           	and a
 711  8D80 28 0C        	jr z,3F
 712  8D82
 713  8D82              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D82
 715  8D82              ; 5/7/24
 716  8D82              ; Nota importante:
 717  8D82              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D82              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D82              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D82
 721  8D82 3A B2 89     	ld a,(Impacto_Amadeus)
 722  8D85 A7           	and a
 723  8D86 C4 9F 92     	call nz,Genera_explosion
 724  8D89 20 34        	jr nz,Gestiona_siguiente_entidad
 725  8D8B
 726  8D8B              ; Falsa colisión !!!
 727  8D8B
 728  8D8B 32 EE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D8E
 730  8D8E              ; -------------------------------------------
 731  8D8E
 732  8D8E CD 7B 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D91 CD A2 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D94 CD 7B 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 735  8D97
 736  8D97 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 737  8D99 DD 2A EF 8B  	ld ix,(Puntero_de_impresion)
 738  8D9D CD 8B 95     	call Genera_datos_de_impresion
 739  8DA0 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 740  8DA2
 741  8DA2 CD 91 94     	call Decrementa_Contador_de_mov_masticados
 742  8DA5
 743  8DA5              ; -------------------------------------------
 744  8DA5
 745  8DA5              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8DA5
 747  8DA5 2A EF 8B     	ld hl,(Puntero_de_impresion)
 748  8DA8 CD 5F 95     	call Genera_coordenadas
 749  8DAB
 750  8DAB ED 4B EB 8B  	ld bc,(Coordenada_X)
 751  8DAF
 752  8DAF DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 753  8DB2 DD 70 02     	ld (ix+2),b
 754  8DB5
 755  8DB5              ; TODO: Generamos disparo ???
 756  8DB5
 757  8DB5 3A 53 8C     	ld a,(Permiso_de_disparo_Entidades)
 758  8DB8 A7           	and a
 759  8DB9 C4 4B 8E     	call nz,Entidad_genera_disparo_si_procede
 760  8DBC
 761  8DBC CD 90 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8DBF
 763  8DBF              Gestiona_siguiente_entidad
 764  8DBF
 765  8DBF CD 94 91     	call Incrementa_punteros_de_cajas
 766  8DC2
 767  8DC2 C1           	pop bc
 768  8DC3 10 85        	djnz 2B
 769  8DC5
 770  8DC5              ; Hemos gestionado todas las entidades.
 771  8DC5              ; ----- ----- -----
 772  8DC5
 773  8DC5 CD 8F 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 774  8DC8 CD A6 8F     	call Ordena_tabla_de_impresion
 775  8DCB CD 37 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 776  8DCE
 777  8DCE CD 4C 8F     	call Borra_diferencia
 778  8DD1
 779  8DD1 3A 61 8C     	ld a,(Ctrl_3)
 780  8DD4 CB 5F        	bit 3,a
 781  8DD6 20 04        	jr nz,Gestion_de_Amadeus
 782  8DD8
 783  8DD8 EB           	ex de,hl
 784  8DD9 71           	ld (hl),c
 785  8DDA 2C           	inc l
 786  8DDB 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 787  8DDC
 788  8DDC              ;! GESTIONA AMADEUS !!!!!!!!!!
 789  8DDC
 790  8DDC              Gestion_de_Amadeus
 791  8DDC
 792  8DDC 21 61 8C     	ld hl,Ctrl_3
 793  8DDF CB 76        	bit 6,(hl)
 794  8DE1 28 13        	jr z,Amadeus_vivo
 795  8DE3
 796  8DE3              ; Amadeus ha sido destruido.
 797  8DE3              ; Decrementa (Temp_new_live).
 798  8DE3
 799  8DE3 21 75 8C     	ld hl,Temp_new_live
 800  8DE6 35           	dec (hl)
 801  8DE7 20 26        	jr nz,End_frame
 802  8DE9
 803  8DE9              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 804  8DE9
 805  8DE9 21 8D 8C     	ld hl,Lives
 806  8DEC 35           	dec (hl)
 807  8DED
 808  8DED              ;! Fin del juego
 809  8DED
 810  8DED F3           	di
 811  8DEE 28 FE        	jr z,$														;! GAME OVER !!!!!
 812  8DF0 FB           	ei
 813  8DF1
 814  8DF1              ; Nueva nave.
 815  8DF1
 816  8DF1 CD 68 8E     	call Reinicia_Amadeus
 817  8DF4 18 19        	jr End_frame
 818  8DF6
 819  8DF6              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 820  8DF6
 821  8DF6              Amadeus_vivo
 822  8DF6
 823  8DF6 3A B2 89     	ld a,(Impacto_Amadeus)
 824  8DF9 A7           	and a
 825  8DFA C4 0F 93     	call nz, Genera_explosion_Amadeus
 826  8DFD 20 10        	jr nz, End_frame
 827  8DFF
 828  8DFF CD 7C 92     	call Teclado
 829  8E02 21 61 8C     	ld hl,Ctrl_3
 830  8E05
 831  8E05 CB 6E        	bit 5,(hl)
 832  8E07 28 06        	jr z,End_frame
 833  8E09
 834  8E09              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 835  8E09
 836  8E09 CD E5 8E     	call Change_Amadeus
 837  8E0C CD DC 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 838  8E0F
 839  8E0F              End_frame
 840  8E0F
 841  8E0F              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 842  8E0F              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 843  8E0F
 844  8E0F CD 37 A1     	call Genera_datos_de_impresion_disparos_Entidades
 845  8E12 CD FB A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 846  8E15 CD 51 A2     	call Calcula_bytes_pintado_disparos
 847  8E18 CD 5E A2     	call Limpia_album_de_pintado_disparos_entidades
 848  8E1B
 849  8E1B              ; ------------ ------------- --------------
 850  8E1B
 851  8E1B 2A 3F 8C     	ld hl,(Album_de_borrado)
 852  8E1E 22 5B 8C     	ld (Scanlines_album_SP),hl
 853  8E21
 854  8E21 21 61 8C     	ld hl,Ctrl_3
 855  8E24 CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8E26 CB 9E        	res 3,(hl)
 857  8E28 CB A6        	res 4,(hl)
 858  8E2A
 859  8E2A 21 62 8C     	ld hl,Ctrl_4
 860  8E2D CB 86        	res 0,(hl)
 861  8E2F
 862  8E2F AF           	xor a
 863  8E30 D3 FE        	out ($fe),a
 864  8E32
 865  8E32 76           	halt
 866  8E33
 867  8E33 C3 F4 8C     	jp Main
 868  8E36
 869  8E36              ;------------------------------------------
 870  8E36              ;
 871  8E36              ;	07/11/24
 872  8E36
 873  8E36              Autoriza_disparo_de_entidades
 874  8E36
 875  8E36 3E 01        	ld a,1
 876  8E38 32 53 8C     	ld (Permiso_de_disparo_Entidades),a
 877  8E3B
 878  8E3B 3A 7D 8C     	ld a,(Repone_CLOCK_disparos)
 879  8E3E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 880  8E40 38 02        	jr c,1F
 881  8E42
 882  8E42              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 883  8E42              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 884  8E42              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 885  8E42
 886  8E42 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 887  8E44
 888  8E44 32 7D 8C     1 ld (Repone_CLOCK_disparos),a
 889  8E47 32 7E 8C     	ld (CLOCK_disparos_de_entidades),a
 890  8E4A
 891  8E4A C9           	ret
 892  8E4B
 893  8E4B              ;------------------------------------------
 894  8E4B              ;
 895  8E4B              ;	14/09/24
 896  8E4B              ;
 897  8E4B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 898  8E4B
 899  8E4B              Entidad_genera_disparo_si_procede
 900  8E4B
 901  8E4B 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 902  8E4E CB 06        	rlc (hl)
 903  8E50
 904  8E50 DC 87 A1     	call c,Genera_disparo_de_entidad_maldosa
 905  8E53
 906  8E53 C9           	ret
 907  8E54
 908  8E54              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 909  8E54              ;
 910  8E54              ;	30/09/24
 911  8E54
 912  8E54              Actuaiza_sp_de_disparos_de_entidades
 913  8E54
 914  8E54 2A 78 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 915  8E57 23           	inc hl
 916  8E58 22 78 8C     	ld (Puntero_num_aleatorios_disparos),hl
 917  8E5B
 918  8E5B 11 FD 88     	ld de,Numeros_aleatorios+7
 919  8E5E 7B           	ld a,e
 920  8E5F 95           	sub l
 921  8E60 C0           	ret nz
 922  8E61
 923  8E61 21 F6 88     1 ld hl,Numeros_aleatorios
 924  8E64 22 78 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 925  8E67 C9           	ret
 926  8E68
 927  8E68              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 928  8E68              ;
 929  8E68              ;	24/07/24
 930  8E68
 931  8E68              Reinicia_Amadeus
 932  8E68
 933  8E68              ;	Reinicia posición y estado.
 934  8E68
 935  8E68 21 CF 50     	ld hl,$50cf
 936  8E6B 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 937  8E6E 21 CC DC     	ld hl,$dccc
 938  8E71 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 939  8E74 21 3D 00     	ld hl,$003d
 940  8E77 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 941  8E7A
 942  8E7A              ;	limpiamos el álbum de borrado.
 943  8E7A
 944  8E7A 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
 945  8E7D
 946  8E7D AF           	xor a
 947  8E7E 77           	ld (hl),a
 948  8E7F
 949  8E7F E5           	push hl
 950  8E80 D1           	pop de
 951  8E81 13           	inc de
 952  8E82
 953  8E82 01 23 00     	ld bc,35
 954  8E85 ED B0        	ldir
 955  8E87
 956  8E87 CD DC 90     	call Genera_datos_de_impresion_Amadeus
 957  8E8A
 958  8E8A              ;	Reinicia temporizaciones.
 959  8E8A
 960  8E8A CD B4 91     	call Inicia_Shield
 961  8E8D
 962  8E8D 3E 5A        	ld a,90
 963  8E8F 32 8A 8C     	ld (Shield),a
 964  8E92
 965  8E92 3E 64        	ld a,100
 966  8E94 32 75 8C     	ld (Temp_new_live),a
 967  8E97
 968  8E97              ; 	Restauramos el FLAG: Amadeus vivo.
 969  8E97
 970  8E97 21 61 8C     	ld hl,Ctrl_3
 971  8E9A CB B6        	res 6,(hl)
 972  8E9C
 973  8E9C              ;	Fuerza la impresión de la nave en el siguiente frame.
 974  8E9C
 975  8E9C 21 61 8C      	ld hl,Ctrl_3
 976  8E9F CB EE        	set 5,(hl)
 977  8EA1
 978  8EA1 C9           	ret
 979  8EA2
 980  8EA2              ; --------------------------------------------------------------------------------------------------------------
 981  8EA2              ;
 982  8EA2              ;	23/11/24
 983  8EA2
 984  8EA2              Ajusta_velocidad_entidad
 985  8EA2
 986  8EA2 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 987  8EA5 A7           	and a
 988  8EA6 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 989  8EA7              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 990  8EA7              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 991  8EA7
 992  8EA7
 993  8EA7              ; Incrementa (Contador_de_vueltas)x2.
 994  8EA7              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 995  8EA7
 996  8EA7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 997  8EA7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 998  8EA7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 999  8EA7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1000  8EA7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1001  8EA7
1002  8EA7
1003  8EA7 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1004  8EA9 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1005  8EAC E6 10        	and $10
1006  8EAE C8           	ret z
1007  8EAF
1008  8EAF              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1009  8EAF
1010  8EAF DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1011  8EB2 CB 2F        	sra a
1012  8EB4 CB 2F        	sra a
1013  8EB6 DD 77 0B     	ld (ix+11),a
1014  8EB9
1015  8EB9 DD 6E 07     	ld l,(ix+7)
1016  8EBC DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1017  8EBF
1018  8EBF              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1019  8EBF 23           	inc hl
1020  8EC0 23           	inc hl
1021  8EC1 23           	inc hl
1022  8EC2 23           	inc hl
1023  8EC3              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8EC3
1025  8EC3 DD 75 07     	ld (ix+7),l
1026  8EC6 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1027  8EC9
1028  8EC9 C9           	ret
1029  8ECA
1030  8ECA              ; --------------------------------------------------------------------------------------------------------------
1031  8ECA              ;
1032  8ECA              ;	25/08/24
1033  8ECA
1034  8ECA              Change
1035  8ECA
1036  8ECA 3A 58 8C     	ld a,(Switch)
1037  8ECD EE 01        	xor 1
1038  8ECF 32 58 8C     	ld (Switch),a
1039  8ED2 2A 3D 8C     	ld hl,(Album_de_pintado)
1040  8ED5 ED 5B 3F 8C  	ld de,(Album_de_borrado)
1041  8ED9 EB           	ex de,hl
1042  8EDA 22 3D 8C     	ld (Album_de_pintado),hl
1043  8EDD 22 5B 8C     	ld (Scanlines_album_SP),hl
1044  8EE0 ED 53 3F 8C  	ld (Album_de_borrado),de
1045  8EE4 C9           	ret
1046  8EE5
1047  8EE5              Change_Amadeus
1048  8EE5
1049  8EE5 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1050  8EE8 ED 5B 43 8C  	ld de,(Album_de_borrado_Amadeus)
1051  8EEC EB           	ex de,hl
1052  8EED 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1053  8EF0 ED 53 43 8C  	ld (Album_de_borrado_Amadeus),de
1054  8EF4 C9           	ret
1055  8EF5
1056  8EF5              Change_Disparos
1057  8EF5
1058  8EF5              ; Álbumes de Amadeus.
1059  8EF5
1060  8EF5 2A 45 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1061  8EF8 ED 5B 47 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1062  8EFC EB           	ex de,hl
1063  8EFD 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1064  8F00 ED 53 47 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1065  8F04 CD 46 A2     	call Limpia_album_de_pintado_disparos_Amadeus
1066  8F07
1067  8F07              ; Álbumes de entidades.
1068  8F07
1069  8F07 2A 49 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1070  8F0A ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1071  8F0E EB           	ex de,hl
1072  8F0F 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1073  8F12 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Entidades),de
1074  8F16 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1075  8F19
1076  8F19 3A 4F 8C     	ld a,(Num_de_bytes_album_de_disparos)
1077  8F1C 32 50 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1078  8F1F
1079  8F1F C9           	ret
1080  8F20
1081  8F20              ; ------------------------------------
1082  8F20              ;
1083  8F20              ; 1/05/24
1084  8F20
1085  8F20              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1086  8F20              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1087  8F20
1088  8F20              ;	DESTRUYE: HL,DE,A
1089  8F20              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1090  8F20
1091  8F20              ;	Variables implicadas: (RND_SP).
1092  8F20
1093  8F20              Extrae_numero_aleatorio_y_avanza
1094  8F20
1095  8F20 21 FD 88     	ld hl,Numeros_aleatorios+7
1096  8F23 EB           	ex de,hl
1097  8F24 2A 76 8C     	ld hl,(RND_SP)
1098  8F27
1099  8F27 7B           	ld a,e
1100  8F28 95           	sub l
1101  8F29 20 06        	jr nz,1F
1102  8F2B
1103  8F2B              ; Sitúa HL al principio de la tabla de nº aleatorios.
1104  8F2B
1105  8F2B 21 F6 88     	ld hl,Numeros_aleatorios
1106  8F2E 22 76 8C     	ld (RND_SP),HL
1107  8F31
1108  8F31              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1109  8F31
1110  8F31 7E           1 ld a,(hl)
1111  8F32 23           	inc hl
1112  8F33 22 76 8C     	ld (RND_SP),hl
1113  8F36 C9           	ret
1114  8F37
1115  8F37              ; ------------------------------------
1116  8F37              ;
1117  8F37              ; 1/05/24
1118  8F37
1119  8F37              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1120  8F37              ; (1 a 4 segundos).
1121  8F37              ; Actualizamos (Clock_next_entity) con A.
1122  8F37
1123  8F37              ;	DESTRUYE: A y B.
1124  8F37              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1125  8F37              ;			 Actualiza (Clock_next_entity) con A.
1126  8F37
1127  8F37              ;	Variables implicadas: (Clock_next_entity).
1128  8F37
1129  8F37              ; Notas:
1130  8F37
1131  8F37              ; 	$32 1 seg.
1132  8F37              ; 	$64 2 seg.
1133  8F37              ; 	$96 3 seg.
1134  8F37              ; 	$c8 4 seg.
1135  8F37              ; 	$fa 5 seg.
1136  8F37
1137  8F37              ; $ffff 1310,7 seg, 22 minutos.
1138  8F37
1139  8F37              ;	$0100  5 seg. aproximadamente.
1140  8F37              ;	$0200 10 seg. aproximadamente.
1141  8F37              ;	$0300 15 seg. aproximadamente.
1142  8F37              ;	$0400 20 seg. aproximadamente.
1143  8F37              ;	$0500 25 seg. aproximadamente.
1144  8F37              ;	$0600 30 seg. aproximadamente.
1145  8F37
1146  8F37              Define_Clock_next_entity
1147  8F37
1148  8F37 FE 34        	cp $34
1149  8F39 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1150  8F3B
1151  8F3B              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1152  8F3B
1153  8F3B 4F           3 ld c,a
1154  8F3C 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1155  8F3E 2A 78 5C     	ld hl,(FRAMES)
1156  8F41 A7           	and a
1157  8F42 ED 4A        	adc hl,bc
1158  8F44 22 7B 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1159  8F47 C9           	ret
1160  8F48
1161  8F48 3E 34        1 ld a,$34
1162  8F4A 18 EF        	jr 3B
1163  8F4C
1164  8F4C              ; ------------------------------------
1165  8F4C              ;
1166  8F4C              ; 18/03/24
1167  8F4C
1168  8F4C              Borra_diferencia
1169  8F4C
1170  8F4C ED 4B 5B 8C  	ld bc,(Scanlines_album_SP)
1171  8F50
1172  8F50 3A 58 8C     	ld a,(Switch)
1173  8F53 A7           	and a
1174  8F54 28 08        	jr z,2F
1175  8F56
1176  8F56 2A 56 8C     	ld hl,(Techo_Scanlines_album_2)
1177  8F59 11 56 8C     	ld de,Techo_Scanlines_album_2
1178  8F5C 18 06        	jr 3F
1179  8F5E
1180  8F5E 2A 54 8C     2 ld hl,(Techo_Scanlines_album)
1181  8F61 11 54 8C     	ld de,Techo_Scanlines_album
1182  8F64
1183  8F64              ; Diferencia.
1184  8F64
1185  8F64 ED 42        3 sbc hl,bc
1186  8F66
1187  8F66 C8           	ret z
1188  8F67 D8           	ret c
1189  8F68
1190  8F68              ; Nuevo techo, (más bajo que el anterior).
1191  8F68              ; Fijamos nuevo techo y borramos bytes sobrantes.
1192  8F68
1193  8F68 EB           	ex de,hl
1194  8F69
1195  8F69 71           	ld (hl),c
1196  8F6A 2C           	inc l
1197  8F6B 70           	ld (hl),b
1198  8F6C
1199  8F6C AF           	xor a
1200  8F6D 43           	ld b,e
1201  8F6E
1202  8F6E 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1203  8F71
1204  8F71 77           1 ld (hl),a
1205  8F72 23           	inc hl
1206  8F73 10 FC        	djnz 1B
1207  8F75
1208  8F75              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1209  8F75
1210  8F75 21 61 8C     	ld hl,Ctrl_3
1211  8F78 CB DE        	set 3,(hl)
1212  8F7A
1213  8F7A C9           	ret
1214  8F7B
1215  8F7B              ; --------------------------------------------------------------------------------------------------------------
1216  8F7B              ;
1217  8F7B              ;	23/11/24
1218  8F7B              ;
1219  8F7B              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1220  8F7B
1221  8F7B              Entidad_a_Tabla_de_pintado
1222  8F7B
1223  8F7B              ; Almacena la Coordenada Y de la entidad en curso.
1224  8F7B
1225  8F7B              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1226  8F7B
1227  8F7B DD 7E 02     	ld a,(ix+2)
1228  8F7E 2A 5D 8C     	ld hl,(India_SP)
1229  8F81 77           	ld (hl),a
1230  8F82 2C           	inc l
1231  8F83
1232  8F83              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1233  8F83
1234  8F83 ED 5B 5B 8C  	ld de,(Scanlines_album_SP)
1235  8F87
1236  8F87 73           	ld (hl),e
1237  8F88 2C           	inc l
1238  8F89 72           	ld (hl),d
1239  8F8A 2C           	inc l
1240  8F8B
1241  8F8B 22 5D 8C     	ld (India_SP),hl
1242  8F8E
1243  8F8E C9           	ret
1244  8F8F
1245  8F8F              ; --------------------------------------------------------------------------------------------------------------
1246  8F8F              ;
1247  8F8F              ;	27/03/24
1248  8F8F              ;
1249  8F8F
1250  8F8F              Inicializa_India_y_limpia_Tabla_de_impresion
1251  8F8F
1252  8F8F 2A 5D 8C     	ld hl,(India_SP)
1253  8F92 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1254  8F95
1255  8F95 79           	ld a,c
1256  8F96 95           	sub l
1257  8F97 28 06        	jr z,2F
1258  8F99 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1259  8F9A              ;														; _ y pasamos a inicializar (India_SP).
1260  8F9A AF           	xor a
1261  8F9B
1262  8F9B 77           1 ld (hl),a
1263  8F9C 2C           	inc l
1264  8F9D 10 FC        	djnz 1B												; Limpia Tabla.
1265  8F9F
1266  8F9F 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1267  8FA2 22 5D 8C     	ld (India_SP),hl
1268  8FA5
1269  8FA5 C9           	ret
1270  8FA6
1271  8FA6              ; --------------------------------------------------------------------------------------------------------------
1272  8FA6              ;
1273  8FA6              ;	31/3/24
1274  8FA6
1275  8FA6              Ordena_tabla_de_impresion
1276  8FA6
1277  8FA6              ; 5794 T/states.
1278  8FA6              ; 6278 T/states.
1279  8FA6              ; 5310 T/states.
1280  8FA6
1281  8FA6              ; Inicializamos punteros (India_SP) e (India_2_SP).
1282  8FA6              ; Inicializamos contador de comparaciones, [C].
1283  8FA6              ; Cargamos los registros A y B para efectuar comparación.
1284  8FA6
1285  8FA6 FD 2E 00     	ld iyl,0
1286  8FA9
1287  8FA9 3A 34 8C     	ld a,(Entidades_en_curso)
1288  8FAC FE 04        	cp 4 	;	4
1289  8FAE D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1290  8FAF
1291  8FAF 3D           	dec a
1292  8FB0 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1293  8FB1 51           	ld d,c 										; Copia de respaldo.
1294  8FB2
1295  8FB2 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1296  8FB3
1297  8FB3 21 03 89     	ld hl,Tabla_de_pintado+3
1298  8FB6 46           	ld b,(hl)
1299  8FB7 22 5F 8C     	ld (India_2_SP),hl
1300  8FBA
1301  8FBA B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1302  8FBB DC E3 8F     	call c, Avanza_India_2_SP
1303  8FBE CC E3 8F     	call z, Avanza_India_2_SP
1304  8FC1
1305  8FC1 FD 2D        	dec iyl
1306  8FC3 28 18        	jr z,2F
1307  8FC5
1308  8FC5
1309  8FC5              ; --------------------------------------------------------------------------------------------------------------
1310  8FC5              ;
1311  8FC5              ;	7/4/24
1312  8FC5
1313  8FC5              Trueque
1314  8FC5
1315  8FC5              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1316  8FC5              ;  			A contiene en nº de fila de (India_SP).
1317  8FC5              ;			HL contiene (India_2_SP).
1318  8FC5
1319  8FC5 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1320  8FC6 E5           	push hl										; Preservo (India_2_SP).
1321  8FC7
1322  8FC7 ED 5B 5D 8C  	ld de,(India_SP)
1323  8FCB EB           	ex de,hl
1324  8FCC 70           	ld (hl),b
1325  8FCD 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1326  8FCE
1327  8FCE CD 0F 90     	call Intercambia_1_byte
1328  8FD1 CD 0F 90     	call Intercambia_1_byte
1329  8FD4
1330  8FD4
1331  8FD4              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1332  8FD4              ; Recuperamos (India_2_SP) en HL.
1333  8FD4
1334  8FD4 2A 5D 8C     	ld hl,(India_SP)
1335  8FD7 7E           	ld a,(hl)
1336  8FD8
1337  8FD8 E1           	pop hl
1338  8FD9 D1           	pop de
1339  8FDA
1340  8FDA              ; --------------------------------------------------------------------------------------------------------------
1341  8FDA
1342  8FDA CD E3 8F     	call Avanza_India_2_SP
1343  8FDD
1344  8FDD 14           2 inc d
1345  8FDE 15           	dec d
1346  8FDF C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1347  8FE0 18 D8        	jr 1B
1348  8FE2
1349  8FE2 C9           	ret
1350  8FE3
1351  8FE3              ; ----- ----- ----- ----- -----
1352  8FE3
1353  8FE3              Avanza_India_2_SP
1354  8FE3
1355  8FE3 0D           	dec c
1356  8FE4 28 0A        	jr z,Avanza_punteros_indios
1357  8FE6
1358  8FE6 FD 2C        	inc iyl
1359  8FE8
1360  8FE8 2C           	inc l
1361  8FE9 2C           	inc l
1362  8FEA 2C           	inc l
1363  8FEB
1364  8FEB 46           	ld b,(hl)
1365  8FEC 22 5F 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1366  8FEF
1367  8FEF C9           	ret
1368  8FF0
1369  8FF0              ; ----- ----- ----- ----- -----
1370  8FF0
1371  8FF0              Avanza_punteros_indios
1372  8FF0
1373  8FF0 15           	dec d
1374  8FF1 28 15        	jr z,Prepara_salida
1375  8FF3
1376  8FF3 4A           	ld c,d
1377  8FF4
1378  8FF4 2A 5D 8C     	ld hl,(India_SP)
1379  8FF7 2C           	inc l
1380  8FF8 2C           	inc l
1381  8FF9 2C           	inc l
1382  8FFA 7E           	ld a,(hl)
1383  8FFB 22 5D 8C     	ld (India_SP),hl
1384  8FFE
1385  8FFE 2C           	inc l
1386  8FFF 2C           	inc l
1387  9000 2C           	inc l
1388  9001 46           	ld b,(hl)
1389  9002 22 5F 8C     	ld (India_2_SP),hl
1390  9005
1391  9005 FD 2C        	inc iyl
1392  9007
1393  9007 C9           	ret
1394  9008
1395  9008              Prepara_salida
1396  9008
1397  9008 21 00 89     	ld hl,Tabla_de_pintado
1398  900B 22 5D 8C     	ld (India_SP),hl
1399  900E C9           	ret
1400  900F
1401  900F
1402  900F 2C           Intercambia_1_byte inc l
1403  9010 1C           	inc e
1404  9011 46           	ld b,(hl)
1405  9012 1A           	ld a,(de)
1406  9013 EB           	ex de,hl
1407  9014 70           	ld (hl),b
1408  9015 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1409  9016 C9           	ret
1410  9017
1411  9017              ; -----------------------------------------------------------------------------------
1412  9017              ;
1413  9017              ;	20/01/24
1414  9017              ;
1415  9017              ;
1416  9017
1417  9017              Construye_movimientos_masticados_entidad
1418  9017
1419  9017 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1420  901A E5           	push hl
1421  901B
1422  901B CD 6E 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1423  901E              ;															; _ el (Contador_de_mov_masticados).
1424  901E
1425  901E              ; Tenemos una posición de inicio aleatoria, ("$01 - $1f"). Necesitamos definir (Cuad_objeto) para [Inicia_Puntero_objeto].
1426  901E              ; A contiene la coordenada X de la posición de inicio de la entidad.
1427  901E
1428  901E CD 46 90     	call Cuad1_or_cuad2
1429  9021
1430  9021 CD 53 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1431  9024              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1432  9024 CD 72 9A     	call Recompone_posicion_inicio
1433  9027
1434  9027 CD A2 97     1 call Draw
1435  902A CD 53 90     	call Guarda_movimiento_masticado
1436  902D
1437  902D CD 1F 9E     	call Movimiento
1438  9030
1439  9030 3A 61 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1440  9033 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1441  9035 28 F0        	jr z,1B
1442  9037
1443  9037              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1444  9037              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1445  9037
1446  9037 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1447  9038 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1448  903B
1449  903B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1450  903B
1451  903B CD 7D 9F     	call Situa_en_contador_general_de_mov_masticados
1452  903E
1453  903E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1454  903E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1455  903E
1456  903E ED 4B F3 8B  	ld bc,(Contador_de_mov_masticados)
1457  9042
1458  9042 71           	ld (hl),c
1459  9043 23           	inc hl
1460  9044 70           	ld (hl),b
1461  9045
1462  9045 C9           	ret
1463  9046
1464  9046              ; -------------------------------------
1465  9046              ;
1466  9046              ;	07/12/24
1467  9046              ;
1468  9046              ;	(Cuad_objeto) contendrá "0" o "1" en función de la coordenada X de la posición de inicio.
1469  9046              ;
1470  9046              ;	INPUT: A contiene la Coordenada_X de la (Posicion_inicio) de la entidad.
1471  9046              ;
1472  9046              ;	MODIFY: A,(Cuad_objeto).
1473  9046              ;
1474  9046
1475  9046 FE 10        Cuad1_or_cuad2 cp $10
1476  9048 38 04        	jr c,1F
1477  904A 3E 01        	ld a,1
1478  904C 18 01        	jr 2F
1479  904E
1480  904E AF           1 xor a
1481  904F 32 09 8C     2 ld (Cuad_objeto),a
1482  9052 C9           	ret
1483  9053
1484  9053              ; -----------------------------------------------------------------------------------
1485  9053              ;
1486  9053              ;	28/12/23
1487  9053              ;
1488  9053              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1489  9053              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1490  9053
1491  9053              Guarda_movimiento_masticado
1492  9053
1493  9053 ED 73 39 8C  	ld (Stack),sp
1494  9057 ED 7B F1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1495  905B
1496  905B DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1497  905D FD E5            push iy 												; Pushea Puntero_objeto.
1498  905F
1499  905F ED 7B 39 8C      ld sp,(Stack)
1500  9063
1501  9063 2A F3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1502  9066 23           	inc hl
1503  9067 22 F3 8B     	ld (Contador_de_mov_masticados),hl
1504  906A
1505  906A CD 6E 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1506  906D              ;															; _ el (Contador_de_mov_masticados).
1507  906D C9               ret
1508  906E
1509  906E              ; --------------------------------------------------------------------------------------------------------------
1510  906E              ;
1511  906E              ;	12/1/24
1512  906E              ;
1513  906E              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1514  906E
1515  906E              Actualiza_Puntero_de_almacen_de_mov_masticados
1516  906E
1517  906E 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1518  9071 01 04 00     	ld bc,4
1519  9074 A7           	and a
1520  9075 ED 4A        	adc hl,bc
1521  9077 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1522  907A C9           	ret
1523  907B
1524  907B              ; ------------------------------------------
1525  907B              ;
1526  907B              ;	23/11/24
1527  907B              ;
1528  907B              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1529  907B
1530  907B
1531  907B              Obtenemos_puntero_de_impresion
1532  907B
1533  907B DD 6E 07     	ld l,(ix+7)
1534  907E DD 66 08     	ld h,(ix+8)
1535  9081
1536  9081              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1537  9081
1538  9081 ED 73 39 8C  	ld (Stack),sp
1539  9085 F9           	ld sp,hl
1540  9086
1541  9086 AF           	xor a
1542  9087 67           	ld h,a
1543  9088 6C           	ld l,h															; ld hl,"0"
1544  9089
1545  9089 D1           	pop de															; (Puntero_objeto) en DE.
1546  908A C1           	pop bc
1547  908B
1548  908B              ; 	Almacena (Puntero_de_impresion) en caja.
1549  908B
1550  908B DD 71 05     	ld (ix+5),c
1551  908E DD 70 06     	ld (ix+6),b
1552  9091
1553  9091 ED 43 EF 8B  	ld (Puntero_de_impresion),bc
1554  9095
1555  9095              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1556  9095
1557  9095 39           	add hl,sp
1558  9096 DD 75 07     	ld (ix+7),l
1559  9099 DD 74 08     	ld (ix+8),h
1560  909C
1561  909C C1           	pop bc
1562  909D
1563  909D 79           	ld a,c
1564  909E 80           	add b															; Comprueba si ya no hay datos en el almacén.
1565  909F
1566  909F ED 7B 39 8C  	ld sp,(Stack)
1567  90A3
1568  90A3 CC 9F 94     	call z,Reinicia_entidad_maliciosa
1569  90A6
1570  90A6 C9           	ret
1571  90A7
1572  90A7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1573  90A7              ;
1574  90A7              ;	25/11/24
1575  90A7
1576  90A7              Cargamos_registros_con_explosion
1577  90A7
1578  90A7 DD 6E 07     	ld l,(ix+7)
1579  90AA DD 66 08     	ld h,(ix+8)
1580  90AD CD 4D 91     	call Extrae_address
1581  90B0 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1582  90B1
1583  90B1 DD 6E 05     	ld l,(ix+5)
1584  90B4 DD 66 06     	ld h,(ix+6)
1585  90B7
1586  90B7 E5           	push hl
1587  90B8 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1588  90BA
1589  90BA C9           	ret
1590  90BB
1591  90BB
1592  90BB              Cargamos_registros_con_explosion_Amadeus
1593  90BB
1594  90BB 2A B5 89     	ld hl,(Pamm_Amadeus)
1595  90BE CD 4D 91     	call Extrae_address
1596  90C1
1597  90C1 5D           	ld e,l
1598  90C2 54           	ld d,h
1599  90C3
1600  90C3 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1601  90C7
1602  90C7 C9           	ret
1603  90C8
1604  90C8              ; --------------------------------------------------------------------------------------------------------------
1605  90C8              ;
1606  90C8              ;	17/06/24
1607  90C8              ;
1608  90C8              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1609  90C8              ;
1610  90C8              ;	IX contiene el puntero de impresión.
1611  90C8              ;	DE contiene (Puntero_objeto).
1612  90C8
1613  90C8
1614  90C8              Cargamos_registros_con_mov_masticado_Amadeus
1615  90C8
1616  90C8 ED 73 39 8C  	ld (Stack),sp
1617  90CC ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1618  90D0 D1           	pop de 															; DE contiene Puntero_objeto
1619  90D1 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1620  90D3 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1621  90D7 ED 7B 39 8C  	ld sp,(Stack)
1622  90DB C9           	ret
1623  90DC
1624  90DC              ; ---------------------------------------------------------------------------------------------------------------------
1625  90DC              ;
1626  90DC              ;	18/6/24
1627  90DC              ;
1628  90DC              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1629  90DC
1630  90DC              Genera_datos_de_impresion_Amadeus
1631  90DC
1632  90DC 3A B2 89     	ld a,(Impacto_Amadeus)
1633  90DF A7           	and a
1634  90E0 20 03        	jr nz,1F
1635  90E2
1636  90E2              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1637  90E2              ; _apuntando a la correspondiente explosión.
1638  90E2
1639  90E2 CD C8 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1640  90E5
1641  90E5 DD 7D        1 ld a,ixl
1642  90E7 E6 1F        	and $1f
1643  90E9 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1644  90EC
1645  90EC 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1646  90EF E5           	push hl
1647  90F0
1648  90F0 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1649  90F3 22 5B 8C     	ld (Scanlines_album_SP),hl
1650  90F6
1651  90F6 CD 8B 95     	call Genera_datos_de_impresion
1652  90F9
1653  90F9 E1           	pop hl
1654  90FA 22 5B 8C     	ld (Scanlines_album_SP),hl
1655  90FD
1656  90FD C9           	ret
1657  90FE
1658  90FE              ; ---------------------------------------------------------------------------------------------------------------------
1659  90FE              ;
1660  90FE              ;	13/03/24
1661  90FE              ;
1662  90FE              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1663  90FE
1664  90FE              Inicia_albumes_de_lineas
1665  90FE
1666  90FE 21 00 80     	ld hl,Scanlines_album
1667  9101 22 3D 8C     	ld (Album_de_pintado),hl
1668  9104 22 5B 8C     	ld (Scanlines_album_SP),hl
1669  9107
1670  9107 21 1A 81     	ld hl,Scanlines_album_2
1671  910A 22 3F 8C     	ld (Album_de_borrado),hl
1672  910D
1673  910D C9           	ret
1674  910E
1675  910E              Inicia_albumes_de_lineas_Amadeus
1676  910E
1677  910E 21 34 82     	ld hl,Amadeus_scanlines_album
1678  9111 22 41 8C     	ld (Album_de_pintado_Amadeus),hl
1679  9114 21 58 82     	ld hl,Amadeus_scanlines_album_2
1680  9117 22 43 8C     	ld (Album_de_borrado_Amadeus),hl
1681  911A
1682  911A C9           	ret
1683  911B
1684  911B              Inicia_albumes_de_disparos
1685  911B
1686  911B 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1687  911E 22 45 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1688  9121 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1689  9124 22 47 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1690  9127
1691  9127 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1692  912A 22 49 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1693  912D 22 4D 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1694  9130
1695  9130 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1696  9133 22 4B 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1697  9136
1698  9136 C9           	ret
1699  9137
1700  9137              ; ---------------------------------------------------------------------------------------------------------------------
1701  9137              ;
1702  9137              ; 8/1/23
1703  9137              ;
1704  9137              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1705  9137              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1706  9137              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1707  9137
1708  9137              ; Destruye HL y DE !!!!!
1709  9137
1710  9137              Inicia_punteros_de_cajas
1711  9137
1712  9137 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1713  913A CD 4D 91         call Extrae_address
1714  913D 22 2A 8C         ld (Puntero_store_caja),hl
1715  9140 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1716  9143 22 2E 8C     	ld (Indice_restore_caja),hl
1717  9146 CD 4D 91     	call Extrae_address
1718  9149 22 2C 8C     	ld (Puntero_restore_caja),hl
1719  914C C9               ret
1720  914D
1721  914D              ; *************************************************************************************************************************************************************
1722  914D
1723  914D              ;
1724  914D              ; 20/10/22
1725  914D              ;
1726  914D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1727  914D              ;
1728  914D              ; Destruye el puntero y DE !!!!!
1729  914D
1730  914D 5E           Extrae_address ld e,(hl)
1731  914E 23           	inc hl
1732  914F 56           	ld d,(hl)
1733  9150 2B           	dec hl
1734  9151 EB           	ex de,hl
1735  9152 C9           	ret
1736  9153
1737  9153              ; *************************************************************************************************************************************************************
1738  9153              ;
1739  9153              ;	7/12/24
1740  9153              ;
1741  9153              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1742  9153              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1743  9153              ;
1744  9153              ;   Destruye HL y BC !!!!!,
1745  9153              ;
1746  9153              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1747  9153              ;					"0" ..... Izquierda.
1748  9153
1749  9153              Inicia_Puntero_objeto
1750  9153
1751  9153 3A 09 8C     	ld a,(Cuad_objeto)
1752  9156 A7           	and a
1753  9157
1754  9157 CC 5F 91     	call z,Inicia_puntero_objeto_der
1755  915A C8           	ret z
1756  915B
1757  915B CD 72 91     	call Inicia_puntero_objeto_izq
1758  915E C9           	ret
1759  915F
1760  915F              ; Arrancamos desde la parte izquierda de la pantalla.
1761  915F              ; Iniciamos (Indice_Sprite_der).
1762  915F
1763  915F 2A FF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1764  9162 22 03 8C     	ld (Puntero_DESPLZ_der),hl
1765  9165 CD 4D 91     	call Extrae_address
1766  9168 22 FC 8B     	ld (Puntero_objeto),hl
1767  916B
1768  916B 2A 01 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1769  916E 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1770  9171 C9           	ret
1771  9172
1772  9172              ; Arrancamos desde la parte derecha de la pantalla.
1773  9172              ; Iniciamos (Indice_Sprite_izq).
1774  9172
1775  9172 2A 01 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1776  9175 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
1777  9178 CD 4D 91     	call Extrae_address
1778  917B 22 FC 8B     	ld (Puntero_objeto),hl
1779  917E
1780  917E 2A FF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1781  9181 22 03 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1782  9184 C9           	ret
1783  9185
1784  9185              ; **************************************************************************************************
1785  9185              ;
1786  9185              ;	27/11/24
1787  9185              ;
1788  9185              ;	INPUT: IX contiene (Puntero_store_caja).
1789  9185              ;
1790  9185              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1791  9185
1792  9185              Salta_caja_de_entidades_vacia
1793  9185
1794  9185 DD 7E 00     	ld a,(ix+0)
1795  9188 A7           	and a
1796  9189 C0           	ret nz
1797  918A
1798  918A CD 94 91     	call Incrementa_punteros_de_cajas
1799  918D DD 2A 2A 8C  	ld ix,(Puntero_store_caja)
1800  9191 18 F2        	jr Salta_caja_de_entidades_vacia
1801  9193
1802  9193 C9           	ret
1803  9194
1804  9194              ; **************************************************************************************************
1805  9194              ;
1806  9194              ;	08/05/23
1807  9194              ;
1808  9194              ;	Incrementamos los dos punteros de entidades. (+1).
1809  9194
1810  9194              Incrementa_punteros_de_cajas
1811  9194
1812  9194 2A 2C 8C     	ld hl,(Puntero_restore_caja)
1813  9197 22 2A 8C     	ld (Puntero_store_caja),hl
1814  919A 2A 2E 8C     	ld hl,(Indice_restore_caja)
1815  919D 23           	inc hl
1816  919E 23           	inc hl
1817  919F 22 2E 8C     	ld (Indice_restore_caja),hl
1818  91A2 CD 4D 91         call Extrae_address
1819  91A5 22 2C 8C         ld (Puntero_restore_caja),hl
1820  91A8 C9               ret
1821  91A9
1822  91A9              ; -----------------------------------------------------------
1823  91A9
1824  91A9              ; Teclado.
1825  91A9
1826  91A9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1827  91AB DB FE        	in a,($fe)
1828  91AD E6 01        	and $01
1829  91AF 28 02        	jr z,1f
1830  91B1 18 F6        	jr Pulsa_ENTER
1831  91B3 C9           1 ret
1832  91B4
1833  91B4              ; **************************************************************************************************
1834  91B4              ;
1835  91B4              ; Temporización.
1836  91B4
1837  91B4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1838  91B4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1839  91B4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1840  91B4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1841  91B4
1842  91B4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1843  91B4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1844  91B4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1845  91B4
1846  91B4              ; A partir de $4f61 no hace falta DELAY.
1847  91B4
1848  91B4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1849  91B4
1850  91B4              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1851  91B4              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1852  91B4              ;	LD A,B
1853  91B4              ;	AND A
1854  91B4              ;	JR NZ,wait
1855  91B4              ;	RET
1856  91B4
1857  91B4              ; ---------------------------------------------------------------------------------------------------------------
1858  91B4              ;
1859  91B4              ;	13/07/24
1860  91B4              ;
1861  91B4
1862  91B4              Inicia_Shield
1863  91B4
1864  91B4 21 84 8C     	ld hl,Datos_Shield
1865  91B7 22 88 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1866  91BA
1867  91BA 7E           	ld a,(hl)
1868  91BB 32 8B 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1869  91BE
1870  91BE 3E 01        	ld a,1
1871  91C0 32 8C 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1872  91C3
1873  91C3 C9           	ret
1874  91C4
1875  91C4              ; ---------- ---------- ---------- ---------- ----------
1876  91C4              ;
1877  91C4              ;	30/11/24
1878  91C4              ;
1879  91C4              ;	Limpia la caja de entidades de una entidad eliminada.
1880  91C4              ;
1881  91C4              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1882  91C4              ;	MODIFY: A,BC,DE y HL.
1883  91C4
1884  91C4              Limpia_caja_de_entidades
1885  91C4
1886  91C4 DD E5        	push ix
1887  91C6 E1           	pop hl
1888  91C7 AF           	xor a
1889  91C8 77           	ld (hl),a
1890  91C9 5D           	ld e,l
1891  91CA 54           	ld d,h
1892  91CB 1C           	inc e
1893  91CC 01 0B 00     	ld bc,11
1894  91CF ED B0        	ldir
1895  91D1 C9           	ret
1896  91D2
1897  91D2              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1898  91D2              ;
1899  91D2              ;	4/6/24
1900  91D2              ;
1901  91D2              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1902  91D2              ;
1903  91D2              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1904  91D2              ;
1905  91D2
1906  91D2              Actualiza_pantalla
1907  91D2
1908  91D2 3E 02        	ld a,2
1909  91D4 D3 FE        	out ($fe),a
1910  91D6
1911  91D6 3A 61 8C     	ld a,(Ctrl_3)
1912  91D9 CB 57        	bit 2,a
1913  91DB 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1914  91DD
1915  91DD              Borrando_entidades
1916  91DD
1917  91DD 2A 5B 8C     	ld hl,(Scanlines_album_SP)
1918  91E0 CD 4D 91     	call Extrae_address
1919  91E3 24           	inc h
1920  91E4 25           	dec h
1921  91E5 28 05        	jr z,Pintando_entidades
1922  91E7 CD 7F 96     	call Pinta_Sprites
1923  91EA 18 F1        	jr Borrando_entidades
1924  91EC
1925  91EC              Pintando_entidades
1926  91EC
1927  91EC 2A 5D 8C     	ld hl,(India_SP)
1928  91EF 2C           	inc l
1929  91F0 CD 4D 91     	call Extrae_address
1930  91F3 24           	inc h
1931  91F4 25           	dec h
1932  91F5 28 0E        	jr z,Ejecuta_escudo
1933  91F7 1C           	inc e
1934  91F8 1C           	inc e
1935  91F9 ED 53 5D 8C  	ld (India_SP),de
1936  91FD CD 4D 91     	call Extrae_address
1937  9200 CD 7F 96     	call Pinta_Sprites
1938  9203 18 E7        	jr Pintando_entidades
1939  9205
1940  9205              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1941  9205
1942  9205              Ejecuta_escudo
1943  9205
1944  9205 3A 8A 8C     	ld a,(Shield)
1945  9208 A7           	and a
1946  9209 20 2F        	jr nz,Aplica_Shield
1947  920B
1948  920B              Borrando_Amadeus
1949  920B
1950  920B 21 61 8C     	ld hl,Ctrl_3
1951  920E CB 6E        	bit 5,(hl)
1952  9210 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1953  9212
1954  9212 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
1955  9215 CD 4D 91     	call Extrae_address
1956  9218 24           	inc h
1957  9219 25           	dec h
1958  921A 28 03        	jr z,Pintando_Amadeus
1959  921C CD 7F 96     	call Pinta_Sprites
1960  921F
1961  921F              Pintando_Amadeus
1962  921F
1963  921F 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
1964  9222 CD 4D 91     	call Extrae_address
1965  9225 24           	inc h
1966  9226 25           	dec h
1967  9227 28 03        	jr z,1F
1968  9229 CD 7F 96     	call Pinta_Sprites
1969  922C
1970  922C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1971  922C
1972  922C 21 61 8C     1 ld hl,Ctrl_3
1973  922F CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1974  9231 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1975  9233 CB AE        	res 5,(hl)
1976  9235
1977  9235 3E 01        	ld a,1												; Borde azul.
1978  9237 D3 FE        	out ($fe),a
1979  9239
1980  9239 C9           	ret
1981  923A
1982  923A              Aplica_Shield
1983  923A
1984  923A              ;	Bit 1 "1" (Shield_3) Sólo borra.
1985  923A              ;		  "0"     ""     Borra/Pinta.
1986  923A              ;	Bit 2    ""  RET.	 No borra, no pinta.
1987  923A
1988  923A 21 8C 8C     	ld hl,Shield_3
1989  923D
1990  923D CB 5E        	bit 3,(hl)
1991  923F 20 DE        	jr nz,Pintando_Amadeus
1992  9241
1993  9241 CB 56        	bit 2,(hl)
1994  9243 20 E7        	jr nz,1B
1995  9245
1996  9245 CB 4E        	bit 1,(hl)
1997  9247 C4 4E 92     	call nz,Borra_Amadeus_shield
1998  924A
1999  924A 28 BF        	jr z,Borrando_Amadeus
2000  924C 18 DE        	jr 1B
2001  924E
2002  924E              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2003  924E
2004  924E              Borra_Amadeus_shield
2005  924E
2006  924E 3A 61 8C     	ld a,(Ctrl_3)
2007  9251 CB 6F        	bit 5,a
2008  9253 28 08        	jr z,1F
2009  9255
2010  9255 2A 43 8C     	ld hl,(Album_de_borrado_Amadeus)
2011  9258 CD 4D 91     	call Extrae_address
2012  925B 18 06        	jr 2F
2013  925D
2014  925D 2A 41 8C     1 ld hl,(Album_de_pintado_Amadeus)
2015  9260 CD 4D 91     	call Extrae_address
2016  9263
2017  9263 CD 7F 96     2 call Pinta_Sprites
2018  9266
2019  9266 AF           	xor a
2020  9267 3C           	inc a											; Asegura NZ en la salida de la rutina.
2021  9268
2022  9268 C9           	ret
2023  9269
2024  9269              Pinta_Amadeus_shield
2025  9269
2026  9269 2A 41 8C     	ld hl,(Album_de_pintado_Amadeus)
2027  926C CD 4D 91     	call Extrae_address
2028  926F CD 7F 96     	call Pinta_Sprites
2029  9272
2030  9272 AF           	xor a
2031  9273 3C           	inc a											; Asegura NZ en la salida de la rutina.
2032  9274
2033  9274 C9           	ret
2034  9275
2035  9275              Borra_Pinta_Amadeus_shield
2036  9275
2037  9275 CD 4E 92     	call Borra_Amadeus_shield
2038  9278 CD 69 92     	call Pinta_Amadeus_shield
2039  927B C9           	ret
2040  927C
2041  927C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2042  927C              ;
2043  927C              ;	19/6/24
2044  927C              ;
2045  927C
2046  927C              Teclado
2047  927C
2048  927C              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2049  927C
2050  927C 3E F7        	ld a,$f7												; "5" para disparar.
2051  927E DB FE        	in a,($fe)
2052  9280 E6 10        	and $10
2053  9282
2054  9282 CC 1A A3     	call z,Genera_disparo_Amadeus
2055  9285
2056  9285 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2057  9287 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2058  9289 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2059  928B CC EC 9D         call z,Amadeus_a_izquierda
2060  928E
2061  928E 3E F7        	ld a,$f7
2062  9290 DB FE        	in a,($fe)
2063  9292 E6 01        	and $01
2064  9294 C8           	ret z
2065  9295
2066  9295 3E F7        	ld a,$f7
2067  9297 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2068  9299 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2069  929B CC 04 9E     	call z,Amadeus_a_derecha
2070  929E
2071  929E C9           	ret
2072  929F
2073  929F              ; ------------------------------------------------------------------------------------------------------------------------
2074  929F              ;
2075  929F              ;	06/07/24
2076  929F              ;
2077  929F
2078  929F              Genera_explosion
2079  929F
2080  929F 21 73 8C     	ld hl,Clock_explosion
2081  92A2 35           	dec (hl)
2082  92A3 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2083  92A5
2084  92A5              Borra_entidad_colisionada
2085  92A5
2086  92A5 CD 7B 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2087  92A8
2088  92A8 DD E5        	push ix
2089  92AA CD A7 90     	call Cargamos_registros_con_explosion
2090  92AD CD 8B 95     	call Genera_datos_de_impresion
2091  92B0 DD E1        	pop ix
2092  92B2
2093  92B2 AF           	xor a
2094  92B3 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2095  92B4
2096  92B4 C9           	ret
2097  92B5
2098  92B5              Siguiente_frame_explosion
2099  92B5
2100  92B5 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2101  92B7
2102  92B7              ; Avanza Frame de explosión.
2103  92B7
2104  92B7 DD 6E 07     	ld l,(ix+7)
2105  92BA DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2106  92BD
2107  92BD 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2108  92C0
2109  92C0 79           	ld a,c
2110  92C1 95           	sub l
2111  92C2 20 41        	jr nz,1F
2112  92C4
2113  92C4
2114  92C4              ; Fín de la entidad !!!!!!!!!!!!!
2115  92C4              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2116  92C4
2117  92C4              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2118  92C4              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2119  92C4              ; Entidades_en_curso db 0								; Entidades en pantalla.
2120  92C4
2121  92C4              ; La entidad eliminada, es la última del nivel ?
2122  92C4
2123  92C4 3A 32 8C     	ld a,(Numero_de_entidades)
2124  92C7 A7           	and a
2125  92C8 28 30        	jr z,2F
2126  92CA
2127  92CA              ; Decrementa (Numero_de_entidades)
2128  92CA
2129  92CA 3D           	dec a
2130  92CB 32 32 8C     	ld (Numero_de_entidades),a
2131  92CE 21 34 8C     	ld hl,Entidades_en_curso
2132  92D1 35           	dec (hl)
2133  92D2
2134  92D2              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2135  92D2              ; IX apunta al 1er .db de la entidad eliminada.
2136  92D2
2137  92D2 2A 30 8C     	ld hl,(Puntero_indice_master)
2138  92D5 CD 4D 91     	call Extrae_address
2139  92D8
2140  92D8 DD E5        	push ix
2141  92DA D1           	pop de
2142  92DB
2143  92DB 01 0C 00     	ld bc,12
2144  92DE ED B0        	ldir
2145  92E0
2146  92E0              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2147  92E0
2148  92E0 CD 7B 90     	call Obtenemos_puntero_de_impresion
2149  92E3
2150  92E3 DD 6E 05     	ld l,(ix+5)
2151  92E6 2C           	inc l
2152  92E7 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2153  92EA
2154  92EA CD 5F 95     	call Genera_coordenadas
2155  92ED
2156  92ED ED 4B EB 8B  	ld bc,(Coordenada_X)
2157  92F1
2158  92F1 DD 71 01     	ld (ix+1),c
2159  92F4 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2160  92F7
2161  92F7 AF           	xor a
2162  92F8 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2163  92F9
2164  92F9 C9           	ret
2165  92FA
2166  92FA              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2167  92FA
2168  92FA 21 33 8C     2 ld hl,Numero_parcial_de_entidades
2169  92FD 35           	dec (hl)
2170  92FE 23           	inc hl
2171  92FF 35           	dec (hl)
2172  9300
2173  9300 CD C4 91     	call Limpia_caja_de_entidades
2174  9303 18 A0        	jr Borra_entidad_colisionada
2175  9305
2176  9305 23           1 inc hl
2177  9306 23           	inc hl
2178  9307
2179  9307 DD 75 07     	ld (ix+7),l
2180  930A DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2181  930D
2182  930D 18 96        	jr Borra_entidad_colisionada
2183  930F
2184  930F              ; ----- ----- ----- ----- -----
2185  930F
2186  930F              Genera_explosion_Amadeus
2187  930F
2188  930F 21 74 8C     	ld hl,Clock_explosion_Amadeus
2189  9312 35           	dec (hl)
2190  9313 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2191  9315
2192  9315              Borra_Amadeus_impactado
2193  9315
2194  9315 CD E5 8E     	call Change_Amadeus
2195  9318 CD BB 90     	call Cargamos_registros_con_explosion_Amadeus
2196  931B CD DC 90     	call Genera_datos_de_impresion_Amadeus
2197  931E
2198  931E 21 61 8C     	ld hl,Ctrl_3
2199  9321 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2200  9323
2201  9323 AF           	xor a
2202  9324 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2203  9325
2204  9325 C9           	ret
2205  9326
2206  9326              Siguiente_frame_explosion_Amadeus
2207  9326
2208  9326 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2209  9328
2210  9328              ; Avanza Frame de explosión.
2211  9328
2212  9328 2A B5 89     	ld hl,(Pamm_Amadeus)
2213  932B 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2214  932E
2215  932E 79           	ld a,c
2216  932F 95           	sub l
2217  9330 20 0B        	jr nz,1F
2218  9332
2219  9332              ; Fín de Amadeus !!!!!!!!!!!!!
2220  9332              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2221  9332
2222  9332 AF           	xor a
2223  9333 32 B2 89     	ld (Impacto_Amadeus),a
2224  9336 21 61 8C     	ld hl,Ctrl_3
2225  9339 CB F6        	set 6,(hl)
2226  933B
2227  933B 18 D8        	jr Borra_Amadeus_impactado
2228  933D
2229  933D 23           1 inc hl
2230  933E 23           	inc hl
2231  933F 22 B5 89     	ld (Pamm_Amadeus),hl
2232  9342 18 D1        	jr Borra_Amadeus_impactado
2233  9344
2234  9344              ; ---------------------------------------------------------------
2235  9344
2236  9344              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9344              ; ******************************************************************************************************************************************************************************************
   2+ 9344              ;
   3+ 9344              ;   21/04/24
   4+ 9344              ;
   5+ 9344              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9344              ;   (XOR) bit a bit.
   7+ 9344              ;
   8+ 9344              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9344
  10+ 9344              Derivando_RND
  11+ 9344
  12+ 9344 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9347
  14+ 9347 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9349 C5               push bc
  16+ 934A              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 934A 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 934D              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 934D
  20+ 934D A7           6 and a                                 ; Carry a "0".
  21+ 934E CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9350 30 02            jr nc,1F
  23+ 9352
  24+ 9352 CB C1            set 0,c
  25+ 9354
  26+ 9354 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9355 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9357 5F               ld e,a
  29+ 9358
  30+ 9358 7A               ld a,d
  31+ 9359 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 935B 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 935D
  34+ 935D CB 3F            srl a
  35+ 935F
  36+ 935F AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9360
  38+ 9360 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9361 28 04            jr z,4F
  40+ 9363
  41+ 9363 CB FF            set 7,a
  42+ 9365 18 02            jr 5F
  43+ 9367
  44+ 9367 CB BF        4 res 7,a
  45+ 9369
  46+ 9369 CB 21        5 sla c
  47+ 936B 10 E0            djnz 6B
  48+ 936D
  49+ 936D 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 936E
  51+ 936E 77               ld (hl),a
  52+ 936F 23               inc hl
  53+ 9370 C1               pop bc
  54+ 9371 10 D4            djnz 3B
  55+ 9373
  56+ 9373 C9               ret
  57+ 9374
  58+ 9374
  59+ 9374
# file closed: RND_Derivando.asm
2237  9374              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9374              ;---------------------------------------------------------------------------------------------------------------
   2+ 9374              ;
   3+ 9374              ;   13/11/24
   4+ 9374
   5+ 9374              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 9374
   7+ 9374              Genera_movimientos_masticados_del_nivel
   8+ 9374
   9+ 9374              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 9374
  11+ 9374              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 9374              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 9374              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 9374
  15+ 9374 2D           	dec l
  16+ 9375 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 9376 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9377 4E           	ld c,(hl)
  19+ 9378
  20+ 9378 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9379 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 937A
  23+ 937A              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 937A
  25+ 937A 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 937B
  27+ 937B CD B9 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 937E
  29+ 937E              ;	Caja Master inicializada ???
  30+ 937E
  31+ 937E 7E           	ld a,(hl)
  32+ 937F A7           	and a
  33+ 9380 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9382
  35+ 9382              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9382
  37+ 9382 C1           	pop bc
  38+ 9383 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9384 C5           	push bc
  40+ 9385
  41+ 9385 CD 59 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9388 CD ED 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 938B
  44+ 938B 3A EA 8B     	ld a,(Tipo)
  45+ 938E CD C9 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9391
  47+ 9391              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9391
  49+ 9391              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9391              ;	ld a,(hl)
  51+ 9391              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9391              ;	and a
  53+ 9391              ;	jr nz,2F													; No queremos que la entidad se inicie en la columna "0", en ese caso será "1".
  54+ 9391
  55+ 9391              ;	inc a														; (Posicion_inicio) $4001.
  56+ 9391
  57+ 9391              ;2 ld hl,Posicion_inicio
  58+ 9391              ;	ld (hl),a
  59+ 9391
  60+ 9391              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  61+ 9391              ;	Generamos "Movimientos masticados" de la entidad.
  62+ 9391
  63+ 9391 CD 17 90     	call Construye_movimientos_masticados_entidad
  64+ 9394
  65+ 9394 2A 30 8C     	ld hl,(Puntero_indice_master)
  66+ 9397 CD 4D 91     	call Extrae_address
  67+ 939A
  68+ 939A 5D           	ld e,l
  69+ 939B 54           	ld d,h
  70+ 939C
  71+ 939C CD 1A 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  72+ 939F
  73+ 939F              Movimientos_masticados_construidos
  74+ 939F
  75+ 939F C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  76+ 93A0
  77+ 93A0 E1           	pop hl														; Pop (Datos_de_nivel).
  78+ 93A1 2C           	inc l														; Datos_de_nivel +1 en HL.
  79+ 93A2
  80+ 93A2 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  81+ 93A3 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  82+ 93A5
  83+ 93A5 C9           	ret
  84+ 93A6
  85+ 93A6              ;---------------------------------------------------------------------------------------------------------------
  86+ 93A6              ;
  87+ 93A6              ;   9/11/24
  88+ 93A6              ;
  89+ 93A6              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  90+ 93A6              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  91+ 93A6              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  92+ 93A6              ;	_ de la 1ª entidad del Nivel.
  93+ 93A6              ;
  94+ 93A6              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  95+ 93A6
  96+ 93A6              ;	MODIFICA: HL,DE y A.
  97+ 93A6              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  98+ 93A6
  99+ 93A6              Inicializa_1er_Nivel
 100+ 93A6
 101+ 93A6              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 102+ 93A6
 103+ 93A6 21 D3 8B     	ld hl,Indice_de_niveles
 104+ 93A9 CD 4D 91     	call Extrae_address
 105+ 93AC ED 53 80 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 106+ 93B0
 107+ 93B0 7E           	ld a,(hl)
 108+ 93B1 32 32 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 109+ 93B4
 110+ 93B4 2C           	inc l
 111+ 93B5 22 82 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 112+ 93B8
 113+ 93B8 C9           	ret
 114+ 93B9
 115+ 93B9              ; ----------------------
 116+ 93B9              ;
 117+ 93B9              ;	13/11/24
 118+ 93B9              ;
 119+ 93B9
 120+ 93B9              Situa_en_Caja_Master
 121+ 93B9
 122+ 93B9 CD D8 94         call Calcula_salto_en_BC
 123+ 93BC 21 58 89         ld hl,Indice_de_cajas_master
 124+ 93BF A7               and a
 125+ 93C0 ED 4A            adc hl,bc
 126+ 93C2 22 30 8C       	ld (Puntero_indice_master),hl
 127+ 93C5 CD 4D 91     	call Extrae_address
 128+ 93C8 C9           	ret
 129+ 93C9
 130+ 93C9              ; ----------------------
 131+ 93C9
 132+ 93C9              ; Fija_velocidades ld de,Perfiles_de_velocidad
 133+ 93C9              ; 	ld bc,4
 134+ 93C9              ; 	ldir
 135+ 93C9              ; 	ret
 136+ 93C9
 137+ 93C9 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 138+ 93CA CD D8 94         call Calcula_salto_en_BC
 139+ 93CD 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 140+ 93D0 A7               and a
 141+ 93D1 ED 4A            adc hl,bc
 142+ 93D3 CD 4D 91         call Extrae_address
 143+ 93D6 22 1B 8C         ld (Puntero_indice_mov),hl
 144+ 93D9 C9               ret
 145+ 93DA
 146+ 93DA              ;---------------------------------------------------------------------------------------------------------------
 147+ 93DA              ;
 148+ 93DA              ;   13/11/24
 149+ 93DA              ;
 150+ 93DA              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 151+ 93DA
 152+ 93DA
 153+ 93DA              Prepara_Cajas_de_Entidades
 154+ 93DA
 155+ 93DA              ; Preparamos los punteros de las cajas de entidades:
 156+ 93DA
 157+ 93DA CD 37 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 93DD              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 93DD CD 23 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 93E0
 161+ 93E0 2A 82 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 93E3
 163+ 93E3              ; En este punto:
 164+ 93E3              ;
 165+ 93E3              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 166+ 93E3              ; B contiene (Numero_parcial_de_entidades).
 167+ 93E3
 168+ 93E3 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 169+ 93E4
 170+ 93E4 7E           	ld a,(hl)
 171+ 93E5
 172+ 93E5 CD B9 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 173+ 93E8
 174+ 93E8 ED 5B 2A 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 175+ 93EC
 176+ 93EC D5           	push de
 177+ 93ED DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 178+ 93EF
 179+ 93EF 01 0C 00     	ld bc,12
 180+ 93F2 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 181+ 93F4              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 182+ 93F4
 183+ 93F4              ; En este punto debemos generar coordenadas y puntero de impresión.:
 184+ 93F4              ;
 185+ 93F4              ;
 186+ 93F4              ; ------------------------------------------------------ IX
 187+ 93F4              ; ------------------------------------------------------ IX
 188+ 93F4              ; ------------------------------------------------------ IX
 189+ 93F4              ; ------------------------------------------------------ IX
 190+ 93F4
 191+ 93F4 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 192+ 93F6
 193+ 93F6 CD 7B 90     	call Obtenemos_puntero_de_impresion
 194+ 93F9
 195+ 93F9 DD 6E 05     	ld l,(ix+5)
 196+ 93FC 2C           	inc l
 197+ 93FD DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 198+ 9400
 199+ 9400 D5           	push de														; Push (Puntero_objeto).
 200+ 9401 E5           	push hl														; Push (Puntero_de_impresion).
 201+ 9402
 202+ 9402 CD 5F 95     	call Genera_coordenadas
 203+ 9405
 204+ 9405 ED 4B EB 8B  	ld bc,(Coordenada_X)
 205+ 9409
 206+ 9409 DD 71 01     	ld (ix+1),c
 207+ 940C DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 208+ 940F
 209+ 940F CD 7B 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 210+ 9412
 211+ 9412 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 212+ 9414 D1           	pop de														; Pop (Puntero_objeto) en DE.
 213+ 9415
 214+ 9415 CD 8B 95     	call Genera_datos_de_impresion
 215+ 9418
 216+ 9418 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 217+ 941A
 218+ 941A              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 219+ 941A
 220+ 941A CD 91 94     	call Decrementa_Contador_de_mov_masticados
 221+ 941D CD 6E 94     	call Limpiamos_bandeja_DRAW
 222+ 9420 CD 94 91     	call Incrementa_punteros_de_cajas
 223+ 9423
 224+ 9423              ; Siguiente entidad del Nivel.
 225+ 9423
 226+ 9423 2A 82 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 227+ 9426 23           	inc hl 														; _ entidad del Nivel.
 228+ 9427
 229+ 9427 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 230+ 9428
 231+ 9428 10 B9        	djnz 1B
 232+ 942A
 233+ 942A C9           	ret
 234+ 942B
 235+ 942B              ; -------------------------------------------------------------------------------------------------------------------
 236+ 942B              ;
 237+ 942B              ;	27/5/24
 238+ 942B              ;
 239+ 942B              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 240+ 942B              ;
 241+ 942B
 242+ 942B              ; 	Cargamos la definición de Amadeus en DRAW.
 243+ 942B              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 244+ 942B
 245+ 942B 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 246+ 942E CD ED 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 9431
 248+ 9431
 249+ 9431              Construye_movimientos_masticados_Amadeus
 250+ 9431
 251+ 9431 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 9434 CD 6E 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 9437              ;															; _ el (Contador_de_mov_masticados).
 254+ 9437 CD 53 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 255+ 943A              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 256+ 943A
 257+ 943A              ; Generamos movimientos masticados de Amadeus.
 258+ 943A
 259+ 943A 06 79        	ld b,121												; $0079, 121d.
 260+ 943C
 261+ 943C C5           1 push bc
 262+ 943D CD A2 97     	call Draw
 263+ 9440 CD 53 90     	call Guarda_movimiento_masticado
 264+ 9443
 265+ 9443 CD 16 9B     	call Mov_right
 266+ 9446 CD 16 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 267+ 9449
 268+ 9449 C1           	pop bc
 269+ 944A 10 F0        	djnz 1B
 270+ 944C
 271+ 944C              ; Todos los movimientos masticados de Amadeus se han creado.
 272+ 944C
 273+ 944C              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 274+ 944C              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 275+ 944C
 276+ 944C 2A F1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 277+ 944F 01 08 00     	ld bc,8
 278+ 9452 A7           	and a
 279+ 9453 ED 42        	sbc hl,bc
 280+ 9455 22 F1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 281+ 9458
 282+ 9458 C9           	ret
 283+ 9459
 284+ 9459              ; ---------------------------------------------------------------------
 285+ 9459              ;
 286+ 9459              ;	10/02/24
 287+ 9459              ;
 288+ 9459              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 289+ 9459              ;
 290+ 9459              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 291+ 9459
 292+ 9459              Definicion_segun_tipo
 293+ 9459
 294+ 9459 CD D8 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 295+ 945C 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 296+ 945F CD E3 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 297+ 9462 C9           	ret
 298+ 9463
 299+ 9463              ; ---------------------------------------------------------------------
 300+ 9463              ;
 301+ 9463              ;	6/7/24
 302+ 9463
 303+ 9463
 304+ 9463              Store_Restore_cajas
 305+ 9463
 306+ 9463 ED 5B 2A 8C  	ld de,(Puntero_store_caja)
 307+ 9467 CD 1A 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 308+ 946A CD 94 91     	call Incrementa_punteros_de_cajas
 309+ 946D C9           	ret
 310+ 946E
 311+ 946E              ; ---------------------------------------------------------------------
 312+ 946E              ;
 313+ 946E              ;	23/6/24
 314+ 946E              ;
 315+ 946E              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 316+ 946E              ;
 317+ 946E              ;	MODIFY: HL
 318+ 946E
 319+ 946E              Limpiamos_bandeja_DRAW
 320+ 946E
 321+ 946E ED 73 39 8C  	ld (Stack),sp
 322+ 9472 31 0F 8C     	ld sp,Vel_left
 323+ 9475
 324+ 9475 AF           	xor a
 325+ 9476 67           	ld h,a
 326+ 9477 6F           	ld l,a
 327+ 9478
 328+ 9478 E5           	push hl
 329+ 9479 E5           	push hl
 330+ 947A E5           	push hl
 331+ 947B E5           	push hl
 332+ 947C E5           	push hl
 333+ 947D E5           	push hl
 334+ 947E E5           	push hl
 335+ 947F E5           	push hl
 336+ 9480 E5           	push hl
 337+ 9481 E5           	push hl
 338+ 9482 E5           	push hl
 339+ 9483 E5           	push hl
 340+ 9484 E5           	push hl
 341+ 9485 E5           	push hl
 342+ 9486 E5           	push hl
 343+ 9487 E5           	push hl
 344+ 9488 E5           	push hl
 345+ 9489 E5           	push hl
 346+ 948A
 347+ 948A 33           	inc sp
 348+ 948B
 349+ 948B E5           	push hl
 350+ 948C ED 7B 39 8C  	ld sp,(Stack)
 351+ 9490
 352+ 9490 C9           	ret
 353+ 9491
 354+ 9491              ; ---------------------------------------------------------------------
 355+ 9491              ;
 356+ 9491              ;	23/11/24
 357+ 9491              ;
 358+ 9491              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 359+ 9491
 360+ 9491              Decrementa_Contador_de_mov_masticados
 361+ 9491
 362+ 9491 DD 6E 09     	ld l,(ix+9)
 363+ 9494 DD 66 0A     	ld h,(ix+10)
 364+ 9497
 365+ 9497 2B           	dec hl
 366+ 9498
 367+ 9498 DD 75 09     	ld (ix+9),l
 368+ 949B DD 74 0A     	ld (ix+10),h
 369+ 949E
 370+ 949E C9           	ret
 371+ 949F
 372+ 949F              ; ---------------------------------------------------------------------
 373+ 949F              ;
 374+ 949F              ;	24/11/24
 375+ 949F
 376+ 949F              Reinicia_entidad_maliciosa
 377+ 949F
 378+ 949F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 379+ 949F
 380+ 949F CD 7D 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 381+ 94A2 CD 8A 9F     	call Transfiere_datos_de_contadores
 382+ 94A5
 383+ 94A5              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 94A5
 385+ 94A5 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 386+ 94A8 CD 59 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 387+ 94AB
 388+ 94AB 7D           	ld a,l
 389+ 94AC C6 0B        	add 11
 390+ 94AE 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 391+ 94AF
 392+ 94AF CD 4D 91     	call Extrae_address
 393+ 94B2
 394+ 94B2 DD 75 07     	ld (ix+7),l
 395+ 94B5 DD 74 08     	ld (ix+8),h
 396+ 94B8
 397+ 94B8 CD 7B 90     	call Obtenemos_puntero_de_impresion
 398+ 94BB
 399+ 94BB              ; Incrementa (Contador_de_vueltas)x2.
 400+ 94BB              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 401+ 94BB
 402+ 94BB              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 403+ 94BB              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 404+ 94BB              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 405+ 94BB              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 406+ 94BB              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 407+ 94BB
 408+ 94BB DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 409+ 94BF
 410+ 94BF DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 411+ 94C2 CB 2F        	sra a
 412+ 94C4 CB 2F        	sra a
 413+ 94C6
 414+ 94C6 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 415+ 94C9
 416+ 94C9 3E 40        	ld a,$40
 417+ 94CB DD BE 03     	cp (ix+3)
 418+ 94CE C0           	ret nz
 419+ 94CF
 420+ 94CF              ; Límitador.
 421+ 94CF
 422+ 94CF              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 94CF
 424+ 94CF DD CB 03 2E  	sra (ix+3)
 425+ 94D3 DD CB 0B 2E  	sra (ix+11)
 426+ 94D7
 427+ 94D7 C9           	ret
 428+ 94D8
 429+ 94D8              ;	------------------------------------------------------------------------------------
 430+ 94D8              ;
 431+ 94D8              ;	09/11/24
 432+ 94D8              ;
 433+ 94D8              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 94D8              ;
 435+ 94D8              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 94D8              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 94D8
 438+ 94D8 A7           Calcula_salto_en_BC and a
 439+ 94D9 28 04        	jr z,1F
 440+ 94DB CB 27        	sla a
 441+ 94DD D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 94DF 4F           1 ld c,a
 443+ 94E0 06 00        	ld b,0
 444+ 94E2 C9           	ret
 445+ 94E3
 446+ 94E3              ; ------------------------------------------------------------------
 447+ 94E3              ;
 448+ 94E3              ;	19/1/24
 449+ 94E3              ;
 450+ 94E3              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 94E3              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 94E3
 453+ 94E3 A7           Situa_en_datos_de_definicion and a
 454+ 94E4 ED 4A        	adc hl,bc
 455+ 94E6 CD 4D 91     	call Extrae_address
 456+ 94E9 22 37 8C         ld (Datos_de_entidad),hl
 457+ 94EC C9           	ret
 458+ 94ED
 459+ 94ED              ; ----------------------------------------------------------------------------------------------------------
 460+ 94ED              ;
 461+ 94ED              ;	24/6/24
 462+ 94ED              ;
 463+ 94ED              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 464+ 94ED              ;	_ de entidad.
 465+ 94ED              ;
 466+ 94ED              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 467+ 94ED              ;
 468+ 94ED              ;
 469+ 94ED              ;	MODIFICA: HL,DE y BC
 470+ 94ED
 471+ 94ED
 472+ 94ED              Definicion_de_entidad_a_bandeja_DRAW
 473+ 94ED
 474+ 94ED 11 EA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 475+ 94F0 7E           	ld a,(hl) 									; Volcamos Tipo.
 476+ 94F1 12           	ld (de),a
 477+ 94F2 23           	inc hl
 478+ 94F3              ;
 479+ 94F3 11 F8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 480+ 94F6 01 02 00     	ld bc,2
 481+ 94F9 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 482+ 94FB              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 483+ 94FB 11 ED 8B     	ld de,Contador_de_vueltas
 484+ 94FE 7E           	ld a,(hl)
 485+ 94FF 12           	ld (de),a
 486+ 9500 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 9501
 488+ 9501 11 FF 8B     	ld de,Indice_Sprite_der
 489+ 9504 01 04 00     	ld bc,4
 490+ 9507 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 9509
 492+ 9509 11 07 8C     	ld de,Posicion_inicio
 493+ 950C 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 950F ED B0        	ldir 									; Vuelco (Frames_explosion).
 495+ 9511
 496+ 9511 11 F1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 497+ 9514 01 02 00     	ld bc,2
 498+ 9517 ED B0        	ldir
 499+ 9519
 500+ 9519 C9           	ret
 501+ 951A
 502+ 951A              ; ----------------------------------------------------------------------------------------------------------
 503+ 951A              ;
 504+ 951A              ;	1/8/24
 505+ 951A              ;
 506+ 951A
 507+ 951A              Parametros_de_bandeja_DRAW_a_caja
 508+ 951A
 509+ 951A 21 EA 8B     	ld hl,Bandeja_DRAW
 510+ 951D 01 0C 00     	ld bc,12
 511+ 9520 ED B0        	ldir
 512+ 9522 C9           	ret
 513+ 9523
 514+ 9523              ;---------------------------------------------------------------------------------------------------------------
 515+ 9523              ;
 516+ 9523              ;	13/11/24
 517+ 9523              ;
 518+ 9523              ;	INICIALIZA (Numero_parcial_de_entidades).
 519+ 9523              ;
 520+ 9523              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 521+ 9523              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 522+ 9523
 523+ 9523              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 524+ 9523              ;			- Actualiza (Numero_de_entidades).
 525+ 9523
 526+ 9523              ;	MODIFICA: A y B.
 527+ 9523
 528+ 9523
 529+ 9523              Inicializa_Numero_parcial_de_entidades
 530+ 9523
 531+ 9523 3A 32 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 532+ 9526 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 533+ 9528 38 0E        	jr c,1F
 534+ 952A 28 0C        	jr z,1F
 535+ 952C
 536+ 952C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 537+ 952C              ; Actualizamos variables.
 538+ 952C
 539+ 952C D6 06        	sub 6
 540+ 952E 32 32 8C     	ld (Numero_de_entidades),a
 541+ 9531 3E 06        	ld a,6
 542+ 9533 32 33 8C     	ld (Numero_parcial_de_entidades),a
 543+ 9536 47           	ld b,a
 544+ 9537 C9           	ret
 545+ 9538
 546+ 9538              ; El nº total de entidades no supera el nº de cajas de entidades.
 547+ 9538              ; (Numero_de_entidades)="0".
 548+ 9538
 549+ 9538 32 33 8C     1 ld (Numero_parcial_de_entidades),a
 550+ 953B 47           	ld b,a
 551+ 953C AF           	xor a
 552+ 953D 32 32 8C     	ld (Numero_de_entidades),a
 553+ 9540 C9           	ret
 554+ 9541
# file closed: Rutinas_de_inicio_y_niveles.asm
2238  9541              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9541              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9541              ;
   3+ 9541              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9541              ;
   5+ 9541              ; *****************************************************************************************************************************************************************************************
   6+ 9541              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9541
   8+ 9541 7C           calcula_tercio ld a,h
   9+ 9542 E6 18        	and $18
  10+ 9544 CB 2F        	sra a
  11+ 9546 CB 2F        	sra a
  12+ 9548 CB 2F        	sra a
  13+ 954A C9           	ret
  14+ 954B
# file closed: calcula_tercio.asm
2239  954B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 954B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 954B              ;
   3+ 954B              ;
   4+ 954B              ;	CLS.
   5+ 954B              ;
   6+ 954B              ;	Limpia la pantalla y define sus atributos.
   7+ 954B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 954B              ;
   9+ 954B              ;	COLORES: 0 ..... NEGRO
  10+ 954B              ;    		 1 ..... AZUL
  11+ 954B              ; 			 2 ..... ROJO
  12+ 954B              ;			 3 ..... MAGENTA
  13+ 954B              ; 			 4 ..... VERDE
  14+ 954B              ; 			 5 ..... CIAN
  15+ 954B              ;			 6 ..... AMARILLO
  16+ 954B              ; 			 7 ..... BLANCO
  17+ 954B              ;
  18+ 954B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 954B              ;
  20+ 954B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 954B
  22+ 954B
  23+ 954B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 954E 11 01 40     	LD DE,$4001
  25+ 9551 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9554 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9556 ED B0        	LDIR
  28+ 9558 01 FF 02     	LD BC,767
  29+ 955B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 955C ED B0        	LDIR
  31+ 955E C9           	ret
  32+ 955F
# file closed: Cls.asm
2240  955F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 955F              ; ------------------------------------------------------------------------
   2+ 955F              ;
   3+ 955F              ;	30/1/24
   4+ 955F              ;
   5+ 955F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 955F              ;	Fila superior "0", Columna izquierda "0".
   7+ 955F              ;
   8+ 955F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 955F              ;
  10+ 955F              ;	Modifica: A,BC y DE.
  11+ 955F
  12+ 955F              Genera_coordenadas
  13+ 955F
  14+ 955F 7D           	ld a,l
  15+ 9560 E6 1F        	and $1f
  16+ 9562
  17+ 9562 32 EB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 9565
  19+ 9565 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 9566 FE 40        	cp $40
  21+ 9568 38 1C        	jr c,4F
  22+ 956A
  23+ 956A CD 41 95     	call calcula_tercio
  24+ 956D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 956E
  26+ 956E 1E 00        	ld e,0
  27+ 9570 7D           	ld a,l
  28+ 9571 E6 E0        	and $e0
  29+ 9573 28 01        	jr z,1F
  30+ 9575 04           	inc b
  31+ 9576
  32+ 9576 04           1 inc b
  33+ 9577 05           	dec b
  34+ 9578 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 957A              ;														; _ , salimos.
  36+ 957A 1C           3 inc e
  37+ 957B D6 20        	sub 32
  38+ 957D 20 FB        	jr nz,3B
  39+ 957F 10 F5        	djnz 1B
  40+ 9581
  41+ 9581 7B           2 ld a,e
  42+ 9582 32 EC 8B     	ld (Coordenada_y),a
  43+ 9585 C9           	ret
  44+ 9586
  45+ 9586 AF           4 xor a
  46+ 9587 32 EC 8B     	ld (Coordenada_y),a
  47+ 958A C9           	ret
  48+ 958B
# file closed: Genera_coordenadas.asm
2241  958B              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 958B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 958B              ;
   3+ 958B              ;	20/09/24
   4+ 958B              ;
   5+ 958B              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 958B              ;   DE contiene Puntero_objeto.
   7+ 958B              ;   IX contiene el Puntero de impresión.
   8+ 958B
   9+ 958B              Genera_datos_de_impresion
  10+ 958B
  11+ 958B ED 73 39 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 958F
  13+ 958F 2A 5B 8C         ld hl,(Scanlines_album_SP)
  14+ 9592
  15+ 9592 3E 05            ld a,5
  16+ 9594 85               add l
  17+ 9595 6F               ld l,a
  18+ 9596
  19+ 9596 F9               ld sp,hl
  20+ 9597 22 5B 8C         ld (Scanlines_album_SP),hl
  21+ 959A
  22+ 959A 21 00 00         ld hl,0
  23+ 959D
  24+ 959D DD E5            push ix
  25+ 959F 3B               dec sp
  26+ 95A0 ED 7A            adc hl,sp
  27+ 95A2 D5               push de
  28+ 95A3
  29+ 95A3              ; Recuperamos SP.
  30+ 95A3
  31+ 95A3 ED 7B 39 8C      ld sp,(Stack)
  32+ 95A7
  33+ 95A7 E5               push hl
  34+ 95A8 F1               pop af
  35+ 95A9 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95AA
  37+ 95AA              ; Tenemos el encabezado listo.
  38+ 95AA              ; Preparamos registros para generar los scanlines.
  39+ 95AA
  40+ 95AA DD E5            push ix
  41+ 95AC E1               pop hl                                          ; 1er scanline en HL.
  42+ 95AD
  43+ 95AD ED 5B 5B 8C      ld de,(Scanlines_album_SP)
  44+ 95B1
  45+ 95B1              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95B1              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95B1
  48+ 95B1 7C               ld a,h
  49+ 95B2 FE 50            cp $50
  50+ 95B4 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95B6
  52+ 95B6 20 05            jr nz,2F
  53+ 95B8
  54+ 95B8 7D               ld a,l
  55+ 95B9 FE E0            cp $e0
  56+ 95BB 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95BD
  58+ 95BD 7D           2 ld a,l
  59+ 95BE FE C0            cp $c0
  60+ 95C0 D2 56 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95C3
  62+ 95C3              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95C3
  64+ 95C3 CD 54 9A         call NextScan
  65+ 95C6 EB               ex de,hl
  66+ 95C7
  67+ 95C7 73               ld (hl),e
  68+ 95C8 23               inc hl
  69+ 95C9 72               ld (hl),d
  70+ 95CA 23               inc hl
  71+ 95CB
  72+ 95CB EB               ex de,hl
  73+ 95CC
  74+ 95CC CD 54 9A         call NextScan
  75+ 95CF EB               ex de,hl
  76+ 95D0
  77+ 95D0 73               ld (hl),e
  78+ 95D1 23               inc hl
  79+ 95D2 72               ld (hl),d
  80+ 95D3 23               inc hl
  81+ 95D4
  82+ 95D4 EB               ex de,hl
  83+ 95D5
  84+ 95D5 CD 54 9A         call NextScan
  85+ 95D8 EB               ex de,hl
  86+ 95D9
  87+ 95D9 73               ld (hl),e
  88+ 95DA 23               inc hl
  89+ 95DB 72               ld (hl),d
  90+ 95DC 23               inc hl
  91+ 95DD
  92+ 95DD EB               ex de,hl
  93+ 95DE
  94+ 95DE CD 54 9A         call NextScan
  95+ 95E1 EB               ex de,hl
  96+ 95E2
  97+ 95E2 73               ld (hl),e
  98+ 95E3 23               inc hl
  99+ 95E4 72               ld (hl),d
 100+ 95E5 23               inc hl
 101+ 95E6
 102+ 95E6 EB               ex de,hl
 103+ 95E7
 104+ 95E7 CD 54 9A         call NextScan
 105+ 95EA EB               ex de,hl
 106+ 95EB
 107+ 95EB 73               ld (hl),e
 108+ 95EC 23               inc hl
 109+ 95ED 72               ld (hl),d
 110+ 95EE 23               inc hl
 111+ 95EF
 112+ 95EF EB               ex de,hl
 113+ 95F0
 114+ 95F0 CD 54 9A         call NextScan
 115+ 95F3 EB               ex de,hl
 116+ 95F4
 117+ 95F4 73               ld (hl),e
 118+ 95F5 23               inc hl
 119+ 95F6 72               ld (hl),d
 120+ 95F7 23               inc hl
 121+ 95F8
 122+ 95F8 EB               ex de,hl
 123+ 95F9
 124+ 95F9 CD 54 9A         call NextScan
 125+ 95FC EB               ex de,hl
 126+ 95FD
 127+ 95FD 73               ld (hl),e
 128+ 95FE 23               inc hl
 129+ 95FF 72               ld (hl),d
 130+ 9600 23               inc hl
 131+ 9601
 132+ 9601 EB               ex de,hl
 133+ 9602
 134+ 9602 CD 54 9A         call NextScan
 135+ 9605 EB               ex de,hl
 136+ 9606
 137+ 9606 73               ld (hl),e
 138+ 9607 23               inc hl
 139+ 9608 72               ld (hl),d
 140+ 9609 23               inc hl
 141+ 960A
 142+ 960A EB               ex de,hl
 143+ 960B
 144+ 960B CD 54 9A         call NextScan
 145+ 960E EB               ex de,hl
 146+ 960F
 147+ 960F 73               ld (hl),e
 148+ 9610 23               inc hl
 149+ 9611 72               ld (hl),d
 150+ 9612 23               inc hl
 151+ 9613
 152+ 9613 EB               ex de,hl
 153+ 9614
 154+ 9614 CD 54 9A         call NextScan
 155+ 9617 EB               ex de,hl
 156+ 9618
 157+ 9618 73               ld (hl),e
 158+ 9619 23               inc hl
 159+ 961A 72               ld (hl),d
 160+ 961B 23               inc hl
 161+ 961C
 162+ 961C EB               ex de,hl
 163+ 961D
 164+ 961D CD 54 9A         call NextScan
 165+ 9620 EB               ex de,hl
 166+ 9621
 167+ 9621 73               ld (hl),e
 168+ 9622 23               inc hl
 169+ 9623 72               ld (hl),d
 170+ 9624 23               inc hl
 171+ 9625
 172+ 9625 EB               ex de,hl
 173+ 9626
 174+ 9626 CD 54 9A         call NextScan
 175+ 9629 EB               ex de,hl
 176+ 962A
 177+ 962A 73               ld (hl),e
 178+ 962B 23               inc hl
 179+ 962C 72               ld (hl),d
 180+ 962D 23               inc hl
 181+ 962E
 182+ 962E EB               ex de,hl
 183+ 962F
 184+ 962F CD 54 9A         call NextScan
 185+ 9632 EB               ex de,hl
 186+ 9633
 187+ 9633 73               ld (hl),e
 188+ 9634 23               inc hl
 189+ 9635 72               ld (hl),d
 190+ 9636 23               inc hl
 191+ 9637
 192+ 9637 EB               ex de,hl
 193+ 9638
 194+ 9638 CD 54 9A         call NextScan
 195+ 963B EB               ex de,hl
 196+ 963C
 197+ 963C 73               ld (hl),e
 198+ 963D 23               inc hl
 199+ 963E 72               ld (hl),d
 200+ 963F 23               inc hl
 201+ 9640
 202+ 9640 EB               ex de,hl
 203+ 9641
 204+ 9641 CD 54 9A         call NextScan
 205+ 9644 EB               ex de,hl
 206+ 9645
 207+ 9645              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 9645              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 9645              ;   _ generar sus scanlines.
 210+ 9645
 211+ 9645              ;    ld (Puntero_de_impresion_disparo),de
 212+ 9645
 213+ 9645 73               ld (hl),e
 214+ 9646 23               inc hl
 215+ 9647 72               ld (hl),d
 216+ 9648 23               inc hl
 217+ 9649
 218+ 9649              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9649
 220+ 9649 22 5B 8C         ld (Scanlines_album_SP),hl
 221+ 964C
 222+ 964C EB               ex de,hl
 223+ 964D
 224+ 964D              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 964D
 226+ 964D              ;    call NextScan
 227+ 964D              ;    call NextScan
 228+ 964D
 229+ 964D 22 66 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9650
 231+ 9650              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9650
 233+ 9650 08               ex af,af
 234+ 9651
 235+ 9651 F5               push af
 236+ 9652 E1               pop hl
 237+ 9653
 238+ 9653 36 10            ld (hl),16
 239+ 9655
 240+ 9655 C9               ret
 241+ 9656
 242+ 9656              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 9656
 244+ 9656              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 9656
 246+ 9656 3E 57            ld a,$57
 247+ 9658 94               sub h
 248+ 9659 47               ld b,a
 249+ 965A
 250+ 965A 3E DF            ld a,$df
 251+ 965C BD               cp l
 252+ 965D 38 04            jr c,1F
 253+ 965F
 254+ 965F 3E 08            ld a,8
 255+ 9661 80               add b
 256+ 9662 47               ld b,a
 257+ 9663
 258+ 9663              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 9663              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 9663
 261+ 9663 48           1 ld c,b
 262+ 9664 0C               inc c
 263+ 9665
 264+ 9665 04               inc b
 265+ 9666 05               dec b
 266+ 9667 20 02            jr nz,3F
 267+ 9669
 268+ 9669 18 0B            jr 6F
 269+ 966B
 270+ 966B CD 54 9A     3 call NextScan
 271+ 966E EB               ex de,hl
 272+ 966F
 273+ 966F 73               ld (hl),e
 274+ 9670 23               inc hl
 275+ 9671 72               ld (hl),d
 276+ 9672 23               inc hl
 277+ 9673
 278+ 9673 EB               ex de,hl
 279+ 9674 10 F5            djnz 3B
 280+ 9676
 281+ 9676 ED 53 5B 8C  6 ld (Scanlines_album_SP),de
 282+ 967A
 283+ 967A 08           5 ex af,af
 284+ 967B F5               push af
 285+ 967C E1               pop hl
 286+ 967D
 287+ 967D 71               ld (hl),c
 288+ 967E
 289+ 967E C9               ret
 290+ 967F
# file closed: Genera_datos_de_impresion.asm
2242  967F              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 967F              ; -----------------------------------------------------------------------------
   2+ 967F              ;
   3+ 967F              ;   11/03/24
   4+ 967F              ;
   5+ 967F
   6+ 967F              Pinta_Sprites
   7+ 967F
   8+ 967F              ;    ld hl,(Scanlines_album_SP)
   9+ 967F              ;    call Extrae_address
  10+ 967F
  11+ 967F              ;    inc h
  12+ 967F              ;    dec h
  13+ 967F              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 967F
  15+ 967F ED 73 39 8C      ld (Stack),sp
  16+ 9683
  17+ 9683 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9684              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9684 2C               inc l
  20+ 9685 2C               inc l
  21+ 9686
  22+ 9686 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9687
  24+ 9687 2C               inc l
  25+ 9688 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9689
  27+ 9689              ;   Seleccionamos rutina de impresión:
  28+ 9689
  29+ 9689 3E 10            ld a,16
  30+ 968B B8               cp b
  31+ 968C C2 88 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 968F
  33+ 968F              ;   Rutinas:
  34+ 968F
  35+ 968F              Pinta_rapido    ;   1520 t/states.
  36+ 968F
  37+ 968F E1               pop hl
  38+ 9690
  39+ 9690 1A               ld a,(de)
  40+ 9691 AE               xor (hl)
  41+ 9692 77               ld (hl),a
  42+ 9693 2C               inc l
  43+ 9694 1C               inc e
  44+ 9695 1A               ld a,(de)
  45+ 9696 AE               xor (hl)
  46+ 9697 77               ld (hl),a
  47+ 9698 2C               inc l
  48+ 9699 1C               inc e
  49+ 969A 1A               ld a,(de)
  50+ 969B AE               xor (hl)
  51+ 969C 77               ld (hl),a
  52+ 969D 13               inc de
  53+ 969E
  54+ 969E E1               pop hl
  55+ 969F
  56+ 969F 1A               ld a,(de)
  57+ 96A0 AE               xor (hl)
  58+ 96A1 77               ld (hl),a
  59+ 96A2 2C               inc l
  60+ 96A3 1C               inc e
  61+ 96A4 1A               ld a,(de)
  62+ 96A5 AE               xor (hl)
  63+ 96A6 77               ld (hl),a
  64+ 96A7 2C               inc l
  65+ 96A8 1C               inc e
  66+ 96A9 1A               ld a,(de)
  67+ 96AA AE               xor (hl)
  68+ 96AB 77               ld (hl),a
  69+ 96AC 13               inc de
  70+ 96AD
  71+ 96AD E1               pop hl
  72+ 96AE
  73+ 96AE 1A               ld a,(de)
  74+ 96AF AE               xor (hl)
  75+ 96B0 77               ld (hl),a
  76+ 96B1 2C               inc l
  77+ 96B2 1C               inc e
  78+ 96B3 1A               ld a,(de)
  79+ 96B4 AE               xor (hl)
  80+ 96B5 77               ld (hl),a
  81+ 96B6 2C               inc l
  82+ 96B7 1C               inc e
  83+ 96B8 1A               ld a,(de)
  84+ 96B9 AE               xor (hl)
  85+ 96BA 77               ld (hl),a
  86+ 96BB 13               inc de
  87+ 96BC
  88+ 96BC E1               pop hl
  89+ 96BD
  90+ 96BD 1A               ld a,(de)
  91+ 96BE AE               xor (hl)
  92+ 96BF 77               ld (hl),a
  93+ 96C0 2C               inc l
  94+ 96C1 1C               inc e
  95+ 96C2 1A               ld a,(de)
  96+ 96C3 AE               xor (hl)
  97+ 96C4 77               ld (hl),a
  98+ 96C5 2C               inc l
  99+ 96C6 1C               inc e
 100+ 96C7 1A               ld a,(de)
 101+ 96C8 AE               xor (hl)
 102+ 96C9 77               ld (hl),a
 103+ 96CA 13               inc de
 104+ 96CB
 105+ 96CB E1               pop hl
 106+ 96CC
 107+ 96CC 1A               ld a,(de)
 108+ 96CD AE               xor (hl)
 109+ 96CE 77               ld (hl),a
 110+ 96CF 2C               inc l
 111+ 96D0 1C               inc e
 112+ 96D1 1A               ld a,(de)
 113+ 96D2 AE               xor (hl)
 114+ 96D3 77               ld (hl),a
 115+ 96D4 2C               inc l
 116+ 96D5 1C               inc e
 117+ 96D6 1A               ld a,(de)
 118+ 96D7 AE               xor (hl)
 119+ 96D8 77               ld (hl),a
 120+ 96D9 13               inc de
 121+ 96DA
 122+ 96DA E1               pop hl
 123+ 96DB
 124+ 96DB 1A               ld a,(de)
 125+ 96DC AE               xor (hl)
 126+ 96DD 77               ld (hl),a
 127+ 96DE 2C               inc l
 128+ 96DF 1C               inc e
 129+ 96E0 1A               ld a,(de)
 130+ 96E1 AE               xor (hl)
 131+ 96E2 77               ld (hl),a
 132+ 96E3 2C               inc l
 133+ 96E4 1C               inc e
 134+ 96E5 1A               ld a,(de)
 135+ 96E6 AE               xor (hl)
 136+ 96E7 77               ld (hl),a
 137+ 96E8 13               inc de
 138+ 96E9
 139+ 96E9 E1               pop hl
 140+ 96EA
 141+ 96EA 1A               ld a,(de)
 142+ 96EB AE               xor (hl)
 143+ 96EC 77               ld (hl),a
 144+ 96ED 2C               inc l
 145+ 96EE 1C               inc e
 146+ 96EF 1A               ld a,(de)
 147+ 96F0 AE               xor (hl)
 148+ 96F1 77               ld (hl),a
 149+ 96F2 2C               inc l
 150+ 96F3 1C               inc e
 151+ 96F4 1A               ld a,(de)
 152+ 96F5 AE               xor (hl)
 153+ 96F6 77               ld (hl),a
 154+ 96F7 13               inc de
 155+ 96F8
 156+ 96F8 E1               pop hl
 157+ 96F9
 158+ 96F9 1A               ld a,(de)
 159+ 96FA AE               xor (hl)
 160+ 96FB 77               ld (hl),a
 161+ 96FC 2C               inc l
 162+ 96FD 1C               inc e
 163+ 96FE 1A               ld a,(de)
 164+ 96FF AE               xor (hl)
 165+ 9700 77               ld (hl),a
 166+ 9701 2C               inc l
 167+ 9702 1C               inc e
 168+ 9703 1A               ld a,(de)
 169+ 9704 AE               xor (hl)
 170+ 9705 77               ld (hl),a
 171+ 9706 13               inc de
 172+ 9707
 173+ 9707 E1               pop hl
 174+ 9708
 175+ 9708 1A               ld a,(de)
 176+ 9709 AE               xor (hl)
 177+ 970A 77               ld (hl),a
 178+ 970B 2C               inc l
 179+ 970C 1C               inc e
 180+ 970D 1A               ld a,(de)
 181+ 970E AE               xor (hl)
 182+ 970F 77               ld (hl),a
 183+ 9710 2C               inc l
 184+ 9711 1C               inc e
 185+ 9712 1A               ld a,(de)
 186+ 9713 AE               xor (hl)
 187+ 9714 77               ld (hl),a
 188+ 9715 13               inc de
 189+ 9716
 190+ 9716 E1               pop hl
 191+ 9717
 192+ 9717 1A               ld a,(de)
 193+ 9718 AE               xor (hl)
 194+ 9719 77               ld (hl),a
 195+ 971A 2C               inc l
 196+ 971B 1C               inc e
 197+ 971C 1A               ld a,(de)
 198+ 971D AE               xor (hl)
 199+ 971E 77               ld (hl),a
 200+ 971F 2C               inc l
 201+ 9720 1C               inc e
 202+ 9721 1A               ld a,(de)
 203+ 9722 AE               xor (hl)
 204+ 9723 77               ld (hl),a
 205+ 9724 13               inc de
 206+ 9725
 207+ 9725 E1               pop hl
 208+ 9726
 209+ 9726 1A               ld a,(de)
 210+ 9727 AE               xor (hl)
 211+ 9728 77               ld (hl),a
 212+ 9729 2C               inc l
 213+ 972A 1C               inc e
 214+ 972B 1A               ld a,(de)
 215+ 972C AE               xor (hl)
 216+ 972D 77               ld (hl),a
 217+ 972E 2C               inc l
 218+ 972F 1C               inc e
 219+ 9730 1A               ld a,(de)
 220+ 9731 AE               xor (hl)
 221+ 9732 77               ld (hl),a
 222+ 9733 13               inc de
 223+ 9734
 224+ 9734 E1               pop hl
 225+ 9735
 226+ 9735 1A               ld a,(de)
 227+ 9736 AE               xor (hl)
 228+ 9737 77               ld (hl),a
 229+ 9738 2C               inc l
 230+ 9739 1C               inc e
 231+ 973A 1A               ld a,(de)
 232+ 973B AE               xor (hl)
 233+ 973C 77               ld (hl),a
 234+ 973D 2C               inc l
 235+ 973E 1C               inc e
 236+ 973F 1A               ld a,(de)
 237+ 9740 AE               xor (hl)
 238+ 9741 77               ld (hl),a
 239+ 9742 13               inc de
 240+ 9743
 241+ 9743 E1               pop hl
 242+ 9744
 243+ 9744 1A               ld a,(de)
 244+ 9745 AE               xor (hl)
 245+ 9746 77               ld (hl),a
 246+ 9747 2C               inc l
 247+ 9748 1C               inc e
 248+ 9749 1A               ld a,(de)
 249+ 974A AE               xor (hl)
 250+ 974B 77               ld (hl),a
 251+ 974C 2C               inc l
 252+ 974D 1C               inc e
 253+ 974E 1A               ld a,(de)
 254+ 974F AE               xor (hl)
 255+ 9750 77               ld (hl),a
 256+ 9751 13               inc de
 257+ 9752
 258+ 9752 E1               pop hl
 259+ 9753
 260+ 9753 1A               ld a,(de)
 261+ 9754 AE               xor (hl)
 262+ 9755 77               ld (hl),a
 263+ 9756 2C               inc l
 264+ 9757 1C               inc e
 265+ 9758 1A               ld a,(de)
 266+ 9759 AE               xor (hl)
 267+ 975A 77               ld (hl),a
 268+ 975B 2C               inc l
 269+ 975C 1C               inc e
 270+ 975D 1A               ld a,(de)
 271+ 975E AE               xor (hl)
 272+ 975F 77               ld (hl),a
 273+ 9760 13               inc de
 274+ 9761
 275+ 9761 E1               pop hl
 276+ 9762
 277+ 9762 1A               ld a,(de)
 278+ 9763 AE               xor (hl)
 279+ 9764 77               ld (hl),a
 280+ 9765 2C               inc l
 281+ 9766 1C               inc e
 282+ 9767 1A               ld a,(de)
 283+ 9768 AE               xor (hl)
 284+ 9769 77               ld (hl),a
 285+ 976A 2C               inc l
 286+ 976B 1C               inc e
 287+ 976C 1A               ld a,(de)
 288+ 976D AE               xor (hl)
 289+ 976E 77               ld (hl),a
 290+ 976F 13               inc de
 291+ 9770
 292+ 9770 E1               pop hl
 293+ 9771
 294+ 9771 1A               ld a,(de)
 295+ 9772 AE               xor (hl)
 296+ 9773 77               ld (hl),a
 297+ 9774 2C               inc l
 298+ 9775 1C               inc e
 299+ 9776 1A               ld a,(de)
 300+ 9777 AE               xor (hl)
 301+ 9778 77               ld (hl),a
 302+ 9779 2C               inc l
 303+ 977A 1C               inc e
 304+ 977B 1A               ld a,(de)
 305+ 977C AE               xor (hl)
 306+ 977D 77               ld (hl),a
 307+ 977E 13               inc de
 308+ 977F
 309+ 977F ED 73 5B 8C      ld (Scanlines_album_SP),sp
 310+ 9783 ED 7B 39 8C      ld sp,(Stack)
 311+ 9787 C9               ret
 312+ 9788
 313+ 9788              Pinta_lento
 314+ 9788
 315+ 9788 E1           1 pop hl
 316+ 9789
 317+ 9789 1A               ld a,(de)
 318+ 978A AE               xor (hl)
 319+ 978B 77               ld (hl),a
 320+ 978C 2C               inc l
 321+ 978D 1C               inc e
 322+ 978E 1A               ld a,(de)
 323+ 978F AE               xor (hl)
 324+ 9790 77               ld (hl),a
 325+ 9791 2C               inc l
 326+ 9792 1C               inc e
 327+ 9793 1A               ld a,(de)
 328+ 9794 AE               xor (hl)
 329+ 9795 77               ld (hl),a
 330+ 9796 13               inc de
 331+ 9797
 332+ 9797 10 EF            djnz 1B
 333+ 9799
 334+ 9799 ED 73 5B 8C      ld (Scanlines_album_SP),sp
 335+ 979D ED 7B 39 8C      ld sp,(Stack)
 336+ 97A1 C9               ret
# file closed: Pinta_Sprites.asm
2243  97A2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 97A2              ; ******************************************************************************************************************************************************************************************
   2+ 97A2              ;
   3+ 97A2              ; 26/06/23
   4+ 97A2              ;
   5+ 97A2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 97A2
   7+ 97A2              Draw
   8+ 97A2
   9+ 97A2 CD 48 9A     	call Prepara_draw
  10+ 97A5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 97A6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 97A7 28 05        	jr z,2F
  13+ 97A9
  14+ 97A9 3A 09 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 97AC 18 0C        	jr 1F
  16+ 97AE
  17+ 97AE 2A 07 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 97B1 22 FA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 97B4 CD 40 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 97B7              ;													; _la esquina superior izquierda de la pantalla.
  21+ 97B7
  22+ 97B7 CD E1 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 97BA
  24+ 97BA 3A F7 8B     1 ld a,(Ctrl_0)
  25+ 97BD CB 6F        	bit 5,a
  26+ 97BF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97C1
  28+ 97C1 CD D6 97     	call Comprueba_limite_horizontal
  29+ 97C4 CD 66 98     	call Comprueba_limite_vertical
  30+ 97C7
  31+ 97C7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97C7              ; -----------------------
  33+ 97C7              ; -----------------------
  34+ 97C7              ; -----------------------
  35+ 97C7
  36+ 97C7 CD BC 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97CA CD F3 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97CD
  39+ 97CD 3A F7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97D0 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97D2 32 F7 8B     	ld (Ctrl_0),a
  42+ 97D5
  43+ 97D5 C9           	ret
  44+ 97D6
  45+ 97D6              ; *******************************************************************************************************************************************************************************************
  46+ 97D6              ;	21/01/23
  47+ 97D6              ;
  48+ 97D6              ; 	Comprueba_limite_horizontal.
  49+ 97D6              ;
  50+ 97D6              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97D6              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97D6              ;
  53+ 97D6              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97D6              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97D6              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97D6              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97D6
  58+ 97D6
  59+ 97D6
  60+ 97D6 3A F7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97D9 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97DB 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97DD E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97DF 32 F7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97E2 18 09            jr 6F
  66+ 97E4 CB 5F        1 bit 3,a
  67+ 97E6 28 0A            jr z,2F
  68+ 97E8 E6 F7            and $f7
  69+ 97EA 32 F7 8B         ld (Ctrl_0),a
  70+ 97ED CD 40 99     6 call Inicializacion
  71+ 97F0 18 5B            jr 5F
  72+ 97F2 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97F3
  74+ 97F3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97F3              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97F3
  77+ 97F3 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97F4 2A 0B 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 97F7 CD 41 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 97FA 67           	ld h,a
  81+ 97FB EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 97FC CD 41 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 97FF 67           	ld h,a
  84+ 9800 A7           	and a
  85+ 9801 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9803 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9804 3A 09 8C     	ld a,(Cuad_objeto)
  88+ 9807 FE 02        	cp 2
  89+ 9809 38 1E        	jr c,3F
  90+ 980B 28 1C        	jr z,3F
  91+ 980D 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 980E 28 23            jr z,7F
  93+ 9810 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9812 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9814 E1           	pop hl
  96+ 9815
  97+ 9815              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9815              ; _para indicar con E="2" en caso necesario.
  99+ 9815
 100+ 9815 E5               push hl
 101+ 9816 C5               push bc
 102+ 9817 CD 41 95     	call calcula_tercio
 103+ 981A FE 01        	cp 1
 104+ 981C 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 981E CD 4E 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9821 28 26            jr z,9F
 107+ 9823 38 24            jr c,9F
 108+ 9825 1E 00        11 ld e,0
 109+ 9827 18 22            jr 8F
 110+ 9829 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 982A 28 07        	jr z, 7F
 112+ 982C 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 982E 1E 00         	ld e,0
 114+ 9830 E1           	pop hl
 115+ 9831 18 04        	jr 4F
 116+ 9833 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9835 18 15            jr 10F
 118+ 9837
 119+ 9837              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9837              ; _para indicar con E="2" en caso necesario.
 121+ 9837
 122+ 9837 E5           4 push hl
 123+ 9838 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9839 CD 41 95     	call calcula_tercio
 125+ 983C FE 01        	cp 1
 126+ 983E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9840 CD 4E 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9843 28 04            jr z,9F
 129+ 9845 30 02            jr nc,9F
 130+ 9847 18 02        	jr 8F
 131+ 9849 1E 02        9 ld e,2
 132+ 984B C1           8 pop bc
 133+ 984C E1           10 pop hl
 134+ 984D C9           5 ret
 135+ 984E
 136+ 984E              ; --------------------
 137+ 984E              ;
 138+ 984E              ; 25/08/22
 139+ 984E
 140+ 984E CD 41 95     Comprueba_centro call calcula_tercio
 141+ 9851 67               ld h,a
 142+ 9852 08           	ex af,af
 143+ 9853 FE 02        	cp 2
 144+ 9855 38 07        	jr c,1F
 145+ 9857 28 05        	jr z,1F
 146+ 9859 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 985C 18 03        	jr 2F
 148+ 985E 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9861 08           2 ex af,af
 150+ 9862 A7               and a
 151+ 9863 ED 42            sbc hl,bc
 152+ 9865 C9               ret
 153+ 9866
 154+ 9866              ; *********************************************************************************************************************************************************************************************
 155+ 9866              ;
 156+ 9866              ;   16/8/22
 157+ 9866              ;
 158+ 9866              ;	Comprueba_limite_vertical
 159+ 9866              ;
 160+ 9866              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9866              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9866              ;
 163+ 9866
 164+ 9866 2A FA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9869 7D           	ld a,l
 166+ 986A E6 1F        	and $1F
 167+ 986C 57           	ld d,a
 168+ 986D 3A 0D 8C     	ld a,(Limite_vertical)
 169+ 9870 BA           	cp d 											; Límite - Posición.
 170+ 9871 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9872 3A 09 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9875 CB 47        	bit 0,a
 173+ 9877 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9879
 175+ 9879              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9879
 177+ 9879 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 987A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 987C
 180+ 987C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 987C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 987C
 183+ 987C 3A EB 8B         ld a,(Coordenada_X)
 184+ 987F 16 0F            ld d,Centro_izquierda
 185+ 9881 A7               and a
 186+ 9882 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9883 28 1E            jr z,3F
 188+ 9885 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9887              ;                                                    ; _salimos sin modificar nada.
 190+ 9887 18 0E            jr 2F
 191+ 9889 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 988A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 988C
 194+ 988C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 988C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 988C
 197+ 988C 3A EB 8B         ld a,(Coordenada_X)
 198+ 988F 16 10            ld d,Centro_derecha
 199+ 9891 A7               and a
 200+ 9892 92               sub d
 201+ 9893 28 0E            jr z,3F
 202+ 9895 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9897              ;                                                    ; _salimos sin modificar nada.
 204+ 9897 CB 43        2 bit 0,e
 205+ 9899 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 989B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 989C CD 30 99         call Modificaccionne
 208+ 989F C1           	pop bc
 209+ 98A0 CD 40 99         call Inicializacion
 210+ 98A3 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 98A4
 212+ 98A4              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 98A4
 214+ 98A4 C5           4 push bc
 215+ 98A5 01 F9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 98A8 0A           	ld a,(bc)
 217+ 98A9 3D           	dec a
 218+ 98AA 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 98AB 7D           	ld a,l
 220+ 98AC 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 98AD CB 47        	bit 0,a
 222+ 98AF 28 03        	jr z,5F
 223+ 98B1 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 98B2 18 2E        	jr 7F
 225+ 98B4
 226+ 98B4              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 98B4
 228+ 98B4 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 98B5 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 98B6 3A F7 8B     	ld a,(Ctrl_0)
 231+ 98B9 CB 4F        	bit 1,a
 232+ 98BB 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98BD F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98BE
 235+ 98BE              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98BE
 237+ 98BE 1C               inc e
 238+ 98BF 1D               dec e
 239+ 98C0 20 07            jr nz,12F
 240+ 98C2 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98C3 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98C4 22 FA 8B     	ld (Posicion_actual),hl
 243+ 98C7 18 44        13 jr 9F
 244+ 98C9 CB 43        12 bit 0,e
 245+ 98CB 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98CD              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98CD C1           	pop bc
 248+ 98CE 18 D3        	jr 3B
 249+ 98D0 80           14 add b
 250+ 98D1 6F               ld l,a
 251+ 98D2 22 FA 8B     	ld (Posicion_actual),hl
 252+ 98D5 CD 30 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98D8 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98DA E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98DC 32 F7 8B         ld (Ctrl_0),a
 256+ 98DF F1           	pop af
 257+ 98E0 18 2B        	jr 9F
 258+ 98E2
 259+ 98E2              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98E2
 261+ 98E2 F5           7 push af
 262+ 98E3 3A F7 8B     	ld a,(Ctrl_0)
 263+ 98E6 CB 47        	bit 0,a
 264+ 98E8 20 1D        	jr nz,8F
 265+ 98EA F1           	pop af
 266+ 98EB
 267+ 98EB              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98EB
 269+ 98EB 1C           	inc e
 270+ 98EC 1D               dec e
 271+ 98ED 20 07            jr nz,10F
 272+ 98EF 90           	sub b
 273+ 98F0 6F               ld l,a
 274+ 98F1 22 FA 8B     	ld (Posicion_actual),hl
 275+ 98F4 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98F6              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98F6 CB 43        10 bit 0,e
 278+ 98F8 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 98FA              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 98FA C1           	pop bc
 281+ 98FB 18 A6        	jr 3B
 282+ 98FD 90           16 sub b
 283+ 98FE 6F               ld l,a
 284+ 98FF 22 FA 8B     	ld (Posicion_actual),hl
 285+ 9902 CD 30 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9905 18 06            jr 9F
 287+ 9907 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9909 32 F7 8B         ld (Ctrl_0),a
 289+ 990C F1           	pop af
 290+ 990D C1           9 pop bc
 291+ 990E 1E 00        	ld e,0
 292+ 9910 CD 40 99         call Inicializacion
 293+ 9913 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9914 08           	ex af,af
 295+ 9915 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9916 18 8B            jr 3B
 297+ 9918
 298+ 9918              ; --------------------
 299+ 9918
 300+ 9918 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 991A CD 63 9A     1 call PreviousScan
 302+ 991D 10 FB            djnz 1B
 303+ 991F 22 FA 8B     	ld (Posicion_actual),hl
 304+ 9922 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9923 C9           	ret
 306+ 9924
 307+ 9924              ; --------------------
 308+ 9924
 309+ 9924 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9926 CD 54 9A     1 call NextScan
 311+ 9929 10 FB            djnz 1B
 312+ 992B 22 FA 8B     	ld (Posicion_actual),hl
 313+ 992E AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 992F C9           	ret
 315+ 9930
 316+ 9930              ; --------------------
 317+ 9930              ;
 318+ 9930              ;	22/01/23
 319+ 9930              ;
 320+ 9930              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9930              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9930              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9930
 324+ 9930
 325+ 9930              Modificaccionne
 326+ 9930
 327+ 9930 3A 09 8C     	ld a,(Cuad_objeto)
 328+ 9933 FE 02        	cp 2
 329+ 9935 CC 18 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9938 DC 18 99         call c,Modifica_Pos_actual
 331+ 993B C8           	ret z
 332+ 993C CD 24 99         call Modifica_Pos_actual2
 333+ 993F C9               ret
 334+ 9940
 335+ 9940              ; *************************************************************************************************************************************************************************************************
 336+ 9940              ;
 337+ 9940              ;	13/8/22
 338+ 9940              ;
 339+ 9940              ;	Inicializacion
 340+ 9940              ;
 341+ 9940              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9940              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9940              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9940              ;
 345+ 9940              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9940              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9940              ;	_ desaparece/aparece.
 348+ 9940
 349+ 9940              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9940              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9940              ;
 352+ 9940              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9940              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9940              ; 		   [E] ="0"
 355+ 9940
 356+ 9940              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9940
 358+ 9940 CD 41 95     Inicializacion call calcula_tercio
 359+ 9943 28 36        	jr z,primit
 360+ 9945 E6 02        	and 2
 361+ 9947 20 07        	jr nz,segmit
 362+ 9949 7D           	ld a,l
 363+ 994A FE 7F        	cp $7f
 364+ 994C 38 2D        	jr c,primit
 365+ 994E 28 2B        	jr z,primit
 366+ 9950 CD B6 99     segmit call column
 367+ 9953 38 13        	jr c,tercuad
 368+ 9955 3E 04        cuarcuad ld a,4
 369+ 9957 32 09 8C     	ld (Cuad_objeto),a
 370+ 995A 21 20 48     	ld hl,$4820
 371+ 995D 22 0B 8C     	ld (Limite_horizontal),hl
 372+ 9960 21 0D 8C     	ld hl,Limite_vertical
 373+ 9963 36 0D        	ld (hl),$0d
 374+ 9965 08           	ex af,af
 375+ 9966 18 3C        	jr 1F
 376+ 9968              tercuad
 377+ 9968 3E 03        	ld a,3
 378+ 996A 32 09 8C     	ld (Cuad_objeto),a
 379+ 996D 21 20 48     	ld hl,$4820
 380+ 9970 22 0B 8C     	ld (Limite_horizontal),hl
 381+ 9973 21 0D 8C     	ld hl,Limite_vertical
 382+ 9976 36 12        	ld (hl),$12
 383+ 9978 08           	ex af,af
 384+ 9979 18 29        	jr 1F
 385+ 997B CD B6 99     primit call column
 386+ 997E 38 13        	jr c, primcuad
 387+ 9980              segcuad
 388+ 9980 3E 02        	ld a,2
 389+ 9982 32 09 8C     	ld (Cuad_objeto),a
 390+ 9985 21 C0 4F     	ld hl,$4fc0
 391+ 9988 22 0B 8C     	ld (Limite_horizontal),hl
 392+ 998B 21 0D 8C     	ld hl,Limite_vertical
 393+ 998E 36 0D        	ld (hl),$0d
 394+ 9990 08           	ex af,af
 395+ 9991 18 11        	jr 1F
 396+ 9993              primcuad
 397+ 9993 3E 01        	ld a,1
 398+ 9995 32 09 8C     	ld (Cuad_objeto),a
 399+ 9998 21 C0 4F     	ld hl,$4fc0
 400+ 999B 22 0B 8C     	ld (Limite_horizontal),hl
 401+ 999E 21 0D 8C     	ld hl,Limite_vertical
 402+ 99A1 36 12        	ld (hl),$12
 403+ 99A3 08           	ex af,af
 404+ 99A4
 405+ 99A4 C5           1 push bc
 406+ 99A5 E5           	push hl
 407+ 99A6 D5           	push de
 408+ 99A7
 409+ 99A7 2A FA 8B     	ld hl,(Posicion_actual)
 410+ 99AA CD 5F 95     	call Genera_coordenadas
 411+ 99AD
 412+ 99AD D1           	pop de
 413+ 99AE E1           	pop hl
 414+ 99AF C1           	pop bc
 415+ 99B0
 416+ 99B0 21 F7 8B     	ld hl,Ctrl_0
 417+ 99B3 CB EE        	set 5,(hl)
 418+ 99B5 C9           	ret
 419+ 99B6
 420+ 99B6              ; ------------------------------------------------------------------------------------------------------------------
 421+ 99B6
 422+ 99B6              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 99B6              ;
 424+ 99B6              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 99B6
 426+ 99B6 7D           column ld a,l
 427+ 99B7 E6 1F        	and $1f
 428+ 99B9 FE 10         	cp $10
 429+ 99BB C9            	ret
 430+ 99BC
 431+ 99BC              ; --------------------------------------------------------------------------------------------------------------------
 432+ 99BC              ;
 433+ 99BC              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 99BC              ;
 435+ 99BC              ; 14/12/22
 436+ 99BC              ;
 437+ 99BC              ;	Modifica: A y BC.
 438+ 99BC
 439+ 99BC 3A 09 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99BF E6 01        	and 1
 441+ 99C1 28 17        	jr z,1F
 442+ 99C3
 443+ 99C3              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99C3
 445+ 99C3 3A EB 8B     	ld a,(Coordenada_X)
 446+ 99C6 47           	ld b,a
 447+ 99C7 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99C8 79           	ld a,c
 449+ 99C9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99CA 38 08        	jr c,2F
 451+ 99CC 47           	ld b,a
 452+ 99CD 79           	ld a,c
 453+ 99CE 90           	sub b
 454+ 99CF 32 0A 8C     	ld (Columnas),a
 455+ 99D2 18 1B        	jr 4F
 456+ 99D4 79           2 ld a,c
 457+ 99D5 32 0A 8C     	ld (Columnas),a
 458+ 99D8 18 15        	jr 4F
 459+ 99DA
 460+ 99DA              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99DA
 462+ 99DA 3A EB 8B     1 ld a,(Coordenada_X)
 463+ 99DD 81           	add c
 464+ 99DE 3D           	dec a
 465+ 99DF D6 1F        	sub $1f
 466+ 99E1 38 08        	jr c,3F
 467+ 99E3 47           	ld b,a
 468+ 99E4 79           	ld a,c
 469+ 99E5 90           	sub b
 470+ 99E6 32 0A 8C     	ld (Columnas),a
 471+ 99E9 18 04        	jr 4F
 472+ 99EB 79           3 ld a,c
 473+ 99EC 32 0A 8C     	ld (Columnas),a
 474+ 99EF D9           4 exx
 475+ 99F0 4F           	ld c,a
 476+ 99F1 D9           	exx
 477+ 99F2 C9            ret
 478+ 99F3
 479+ 99F3              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99F3              ;
 481+ 99F3              ;   19/7/23
 482+ 99F3              ;
 483+ 99F3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99F3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99F3              ;
 486+ 99F3              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99F3              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99F3              ;
 489+ 99F3              ;	DESTRUYE: HL,B Y A.
 490+ 99F3
 491+ 99F3 3A 09 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99F6 FE 02        	cp 2
 493+ 99F8 38 18        	jr c,1F
 494+ 99FA 28 16        	jr z,1F
 495+ 99FC E6 01        	and 1
 496+ 99FE 28 0D        	jr z,3F
 497+ 9A00
 498+ 9A00              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A00
 500+ 9A00 CD 3C 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A03
 502+ 9A03 7D           9 ld a,l
 503+ 9A04 E6 1F        	and $1f
 504+ 9A06 28 2A        	jr z,7F
 505+ 9A08 2B           	dec hl
 506+ 9A09 10 F8        	djnz 9B
 507+ 9A0B 18 25        	jr 7F
 508+ 9A0D
 509+ 9A0D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A0D
 511+ 9A0D 2A FA 8B     3 ld hl,(Posicion_actual)
 512+ 9A10 18 20        	jr 7F
 513+ 9A12
 514+ 9A12 28 14        1 jr z,2F
 515+ 9A14
 516+ 9A14              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A14
 518+ 9A14 CD 3C 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A17
 520+ 9A17 7D           4 ld a,l
 521+ 9A18 E6 1F        	and $1f
 522+ 9A1A 28 03        	jr z,6F
 523+ 9A1C 2B           	dec hl
 524+ 9A1D 10 F8        	djnz 4B
 525+ 9A1F 06 0F        6 ld b,15
 526+ 9A21 CD 63 9A     5 call PreviousScan
 527+ 9A24 10 FB        	djnz 5B
 528+ 9A26 18 0A        	jr 7F
 529+ 9A28
 530+ 9A28              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A28
 532+ 9A28 CD 3C 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A2B 06 0F        	ld b,15
 534+ 9A2D CD 63 9A     8 call PreviousScan
 535+ 9A30 10 FB        	djnz 8B
 536+ 9A32
 537+ 9A32 E5           7 push hl
 538+ 9A33 DD E1        	pop ix
 539+ 9A35
 540+ 9A35 2A FC 8B     	ld hl,(Puntero_objeto)
 541+ 9A38 E5           	push hl
 542+ 9A39 FD E1        	pop iy
 543+ 9A3B
 544+ 9A3B C9           	ret
 545+ 9A3C
 546+ 9A3C              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A3C              ;
 548+ 9A3C              ;	2/1/23
 549+ 9A3C              ;
 550+ 9A3C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A3C              ;
 552+ 9A3C              ;	Tras esta rutina tenemos:
 553+ 9A3C              ;
 554+ 9A3C              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A3C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A3C              ;
 557+ 9A3C              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A3C
 559+ 9A3C 2A FA 8B     Operandos ld hl,(Posicion_actual)
 560+ 9A3F 3A 0A 8C     	ld a,(Columnas)
 561+ 9A42 3D           	dec a
 562+ 9A43 20 01        	jr nz,1F
 563+ 9A45 3C           	inc a
 564+ 9A46 47           1 ld b,a
 565+ 9A47 C9           	ret
 566+ 9A48
 567+ 9A48              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A48              ;
 569+ 9A48              ;	Prepara_draw
 570+ 9A48              ;
 571+ 9A48              ;	Es una rutina de carga.
 572+ 9A48              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A48              ;
 574+ 9A48              ;	FUNCIONAMIENTO:
 575+ 9A48              ;
 576+ 9A48              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A48              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A48              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A48              ;
 580+ 9A48              ;	DESTRUYE:
 581+ 9A48              ;
 582+ 9A48              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A48
 584+ 9A48 21 F8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A4B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A4C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A4D 4E           	ld c,(hl)
 588+ 9A4E 2A FA 8B     	ld hl,(Posicion_actual)
 589+ 9A51 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A53 C9           	ret
 591+ 9A54
 592+ 9A54              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A54              ;
 594+ 9A54              ;	5/08/22
 595+ 9A54              ;
 596+ 9A54              ;   NextScan.
 597+ 9A54              ;
 598+ 9A54              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A54              ;
 600+ 9A54              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A54              ;
 602+ 9A54              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A54              ;
 604+ 9A54              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A54              ;
 606+ 9A54              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A54              ;
 608+ 9A54
 609+ 9A54 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A55 7C               ld a,h
 611+ 9A56 E6 07            and 7
 612+ 9A58 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A59
 614+ 9A59 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A5A C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A5C 6F               ld l,a
 617+ 9A5D D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A5E
 619+ 9A5E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A5F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A61 67               ld h,a
 622+ 9A62 C9               ret
 623+ 9A63
 624+ 9A63              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A63              ;
 626+ 9A63              ;	5/08/22
 627+ 9A63              ;
 628+ 9A63              ;   PreviousScan.
 629+ 9A63              ;
 630+ 9A63              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A63              ;
 632+ 9A63              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A63              ;
 634+ 9A63              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A63              ;
 636+ 9A63              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A63              ;
 638+ 9A63              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A63              ;
 640+ 9A63
 641+ 9A63 7C           PreviousScan ld a,h
 642+ 9A64 25               dec h               ; Dec H.
 643+ 9A65 E6 07            and 7
 644+ 9A67 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A68
 646+ 9A68 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A69 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A6B 6F               ld l,a
 649+ 9A6C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A6D
 651+ 9A6D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A6E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A70 67               ld h,a
 654+ 9A71 C9               ret
 655+ 9A72
 656+ 9A72
 657+ 9A72
 658+ 9A72
 659+ 9A72
 660+ 9A72
 661+ 9A72
 662+ 9A72
 663+ 9A72
 664+ 9A72
 665+ 9A72
 666+ 9A72
# file closed: Draw_XOR.asm
2244  9A72              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A72
   2+ 9A72              ; ******************************************************************************************************************************************************************************************
   3+ 9A72              ;
   4+ 9A72              ;   20/05/23
   5+ 9A72              ;
   6+ 9A72              ;	Recompone_posicion_inicio
   7+ 9A72              ;
   8+ 9A72              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A72              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A72              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A72              ;	_ a una u otra rutina.
  12+ 9A72
  13+ 9A72              Recompone_posicion_inicio
  14+ 9A72
  15+ 9A72 2A 07 8C     	ld hl,(Posicion_inicio)
  16+ 9A75 7D           	ld a,l
  17+ 9A76 E6 1F        	and $1f
  18+ 9A78 28 16        	jr z,1F
  19+ 9A7A
  20+ 9A7A FE 1F        	cp $1f
  21+ 9A7C 28 0D        	jr z,3F
  22+ 9A7E
  23+ 9A7E 21 F6 8B     	ld hl,Ctrl_2
  24+ 9A81 CB C6        	set 0,(hl)
  25+ 9A83 2A FC 8B     	ld hl,(Puntero_objeto)
  26+ 9A86 22 28 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A89 18 08        	jr 2F
  28+ 9A8B
  29+ 9A8B CD 39 9C     3 call Mov_left
  30+ 9A8E 18 03        	jr 2F
  31+ 9A90
  32+ 9A90 CD 16 9B     1 call Mov_right
  33+ 9A93 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A96 22 FC 8B     	ld (Puntero_objeto),hl
  35+ 9A99 C9           	ret
  36+ 9A9A
  37+ 9A9A              ; ******************************************************************************************************************************************************************************************
  38+ 9A9A              ;
  39+ 9A9A              ;   27/05/23
  40+ 9A9A              ;
  41+ 9A9A              ;	Mov_down
  42+ 9A9A              ;
  43+ 9A9A              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A9A              ;
  45+ 9A9A              ;
  46+ 9A9A              Mov_down
  47+ 9A9A
  48+ 9A9A CD 04 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A9D              ;																	; _ repone (Puntero_objeto).
  50+ 9A9D 21 F7 8B     	ld hl,Ctrl_0
  51+ 9AA0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9AA2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9AA2              ; 																	; _ en el caso de que no lo haya.
  54+ 9AA2 3A 12 8C     	ld a,(Vel_down)
  55+ 9AA5 47           	ld b,a
  56+ 9AA6 2A FA 8B         ld hl,(Posicion_actual)
  57+ 9AA9 CD 41 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9AAC E6 02        	and 2
  59+ 9AAE 28 17        	jr z,1F
  60+ 9AB0
  61+ 9AB0              ; Nos encontramos en el último tercio de pantalla.
  62+ 9AB0              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9AB0
  64+ 9AB0 7C           	ld a,h
  65+ 9AB1 FE 57        	cp $57
  66+ 9AB3 20 12        	jr nz,1F
  67+ 9AB5
  68+ 9AB5 7D           	ld a,l
  69+ 9AB6 C6 20        	add $20
  70+ 9AB8 30 0D        	jr nc,1F
  71+ 9ABA
  72+ 9ABA              ; ------------------------------
  73+ 9ABA              ;
  74+ 9ABA              ;	12/01/24
  75+ 9ABA
  76+ 9ABA              ;	call Reaparece_arriba
  77+ 9ABA CD C6 9D     	call Reinicio
  78+ 9ABD
  79+ 9ABD              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9ABD
  81+ 9ABD 3A 61 8C     	ld a,(Ctrl_3)
  82+ 9AC0 CB CF        	set 1,a
  83+ 9AC2 32 61 8C     	ld (Ctrl_3),a
  84+ 9AC5
  85+ 9AC5 18 08        	jr 3F
  86+ 9AC7              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9AC7              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9AC7              ; ------------------------------
  89+ 9AC7
  90+ 9AC7 CD 54 9A     1 call NextScan
  91+ 9ACA 22 FA 8B     	ld (Posicion_actual),hl
  92+ 9ACD 10 DA            djnz 2B
  93+ 9ACF CD 5F 95     3 call Genera_coordenadas
  94+ 9AD2 C9           	ret
  95+ 9AD3
  96+ 9AD3              ; ******************************************************************************************************************************************************************************************
  97+ 9AD3              ;
  98+ 9AD3              ;   27/05/23
  99+ 9AD3              ;
 100+ 9AD3              ;	Mov_up
 101+ 9AD3              ;
 102+ 9AD3              ; 	Mueve el Sprite hacia arriba.
 103+ 9AD3              ;
 104+ 9AD3              ;
 105+ 9AD3              Mov_up
 106+ 9AD3
 107+ 9AD3 CD 04 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9AD6              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9AD6 21 F7 8B     	ld hl,Ctrl_0
 110+ 9AD9 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9ADB              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9ADB              ; 																		; _ en el caso de que no lo haya.
 113+ 9ADB 3A 11 8C     	ld a,(Vel_up)
 114+ 9ADE 47           	ld b,a
 115+ 9ADF 2A FA 8B     	ld hl,(Posicion_actual)
 116+ 9AE2 CD 41 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9AE5 A7           	and a
 118+ 9AE6 20 10        	jr nz,1F
 119+ 9AE8
 120+ 9AE8              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9AE8              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9AE8
 123+ 9AE8 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9AE9 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9AEB 20 0B            jr nz,1F
 126+ 9AED 7D               ld a,l
 127+ 9AEE D6 20            sub $20
 128+ 9AF0 30 06            jr nc,1F
 129+ 9AF2 25               dec h
 130+ 9AF3
 131+ 9AF3              ; -----------------------------
 132+ 9AF3 CD A7 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AF6              ;	call Reinicio
 134+ 9AF6              ; -----------------------------
 135+ 9AF6
 136+ 9AF6 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9AF8 CD 63 9A     1 call PreviousScan
 138+ 9AFB 22 FA 8B     	ld (Posicion_actual),hl
 139+ 9AFE 10 E2            djnz 3B
 140+ 9B00 CD 5F 95     2 call Genera_coordenadas
 141+ 9B03 C9           	ret
 142+ 9B04
 143+ 9B04              ; -----------------------------
 144+ 9B04              ;
 145+ 9B04              ;	27/5/23
 146+ 9B04              ;
 147+ 9B04              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B04              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B04              ;
 150+ 9B04              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B04              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B04              ;
 153+ 9B04              ;	Modifica: A y (Puntero_objeto).
 154+ 9B04
 155+ 9B04 3A F6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B07 CB 47        	bit 0,a
 157+ 9B09 C8           	ret z
 158+ 9B0A CB 87        	res 0,a
 159+ 9B0C 32 F6 8B     	ld (Ctrl_2),a
 160+ 9B0F 2A 28 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B12 22 FC 8B     	ld (Puntero_objeto),hl
 162+ 9B15 C9           	ret
 163+ 9B16
 164+ 9B16              ; ******************************************************************************************************************************************************************************************
 165+ 9B16              ;
 166+ 9B16              ;	19/10/22
 167+ 9B16              ;
 168+ 9B16              ;	Mov_right.
 169+ 9B16              ;
 170+ 9B16              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B16              ;
 172+ 9B16
 173+ 9B16 3A F7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9B19 CB 77        	bit 6,a
 175+ 9B1B 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B1D
 177+ 9B1D CD 55 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B20 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B21
 180+ 9B21 21 F7 8B     	ld hl,Ctrl_0
 181+ 9B24 CB E6        	set 4,(hl)
 182+ 9B26 18 52        	jr 8F
 183+ 9B28
 184+ 9B28 21 F7 8B     10 ld hl,Ctrl_0
 185+ 9B2B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B2D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B2D              ; 																	; _ en el caso de que no lo haya.
 188+ 9B2D 3A EB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B30 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B32 20 46        	jr nz,8F
 191+ 9B34
 192+ 9B34 3A FE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B37 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B38 28 40        	jr z,8F
 195+ 9B3A
 196+ 9B3A              ; ---------- ---------- ----------
 197+ 9B3A              ;
 198+ 9B3A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B3A
 200+ 9B3A 3A 10 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B3D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B3F 28 11        	jr z,1F
 203+ 9B41 38 06        	jr c,6F
 204+ 9B43 FE 04        	cp 4
 205+ 9B45 28 14        	jr z,7F
 206+ 9B47 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B49
 208+ 9B49              ; ---------- ---------- ----------
 209+ 9B49              ;
 210+ 9B49              ; Perfiles de velocidad
 211+ 9B49              ;
 212+ 9B49
 213+ 9B49 3A FE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B4C FE FE        	cp $fe
 215+ 9B4E 20 2A        	jr nz,8F
 216+ 9B50 18 10        	jr 3F
 217+ 9B52 3A FE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B55 FE FD        	cp $fd
 219+ 9B57 20 21        	jr nz,8F
 220+ 9B59 18 07        	jr 3F
 221+ 9B5B 3A FE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B5E FE FB        	cp $fb
 223+ 9B60 20 18        	jr nz,8F
 224+ 9B62
 225+ 9B62              ; ---------- ---------- ----------
 226+ 9B62
 227+ 9B62              3
 228+ 9B62 CD 95 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B65              ;	call Reinicio
 230+ 9B65
 231+ 9B65              ; ---------- ---------- ----------
 232+ 9B65              ;
 233+ 9B65              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B65
 235+ 9B65 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B67 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B68 CD 81 9B     	call DESPLZ_DER
 238+ 9B6B C1           	pop bc
 239+ 9B6C 10 F9        	djnz 5B
 240+ 9B6E 2A FA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B71 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B72 22 FA 8B     	ld (Posicion_actual),hl
 243+ 9B75 CD 5F 95     	call Genera_coordenadas
 244+ 9B78 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B7A
 246+ 9B7A              ; ---------- ---------- ----------
 247+ 9B7A
 248+ 9B7A 2A FA 8B     8 ld hl,(Posicion_actual)
 249+ 9B7D CD 81 9B     	call DESPLZ_DER
 250+ 9B80 C9           2 ret
 251+ 9B81
 252+ 9B81              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B81              ;
 254+ 9B81              ;	22/9/22
 255+ 9B81              ;
 256+ 9B81
 257+ 9B81 CD 90 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B84 CD DC 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B87 CD 05 9C         call Ciclo_completo
 260+ 9B8A 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B8D CB FE        	set 7,(hl)
 262+ 9B8F C9           	ret
 263+ 9B90
 264+ 9B90              ; ******************************************************************************************************************************************************************************************
 265+ 9B90              ;	15/02/23
 266+ 9B90              ;
 267+ 9B90
 268+ 9B90 3A 10 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B93 47           	ld b,a
 270+ 9B94 2A 03 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B97 23           1 inc hl
 272+ 9B98 23           	inc hl
 273+ 9B99 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B9B 22 03 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B9E CD 4D 91     	call Extrae_address
 276+ 9BA1 22 FC 8B     	ld (Puntero_objeto),hl
 277+ 9BA4
 278+ 9BA4              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9BA4
 280+ 9BA4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9BA4              ; Cuántos movimientos hemos hecho ??
 282+ 9BA4              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9BA4
 284+ 9BA4 2A FF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9BA7 EB           	ex de,hl
 286+ 9BA8 A7           	and a
 287+ 9BA9 ED 52        	sbc hl,de
 288+ 9BAB CB 3D        	srl l
 289+ 9BAD 3E 08        6 ld a,8
 290+ 9BAF 95           	sub l
 291+ 9BB0 30 1E        	jr nc,3F
 292+ 9BB2
 293+ 9BB2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9BB2              ; B="0".
 295+ 9BB2
 296+ 9BB2 04           4 inc b
 297+ 9BB3 3C           	inc a
 298+ 9BB4 20 FC        	jr nz,4B
 299+ 9BB6 78           	ld a,b
 300+ 9BB7 08           	ex af,af
 301+ 9BB8 2A FF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9BBB 23           5 inc hl
 303+ 9BBC 23           	inc hl
 304+ 9BBD 10 FC        	djnz 5B
 305+ 9BBF 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BC2 CD 4D 91     	call Extrae_address
 307+ 9BC5 22 FC 8B     	ld (Puntero_objeto),hl
 308+ 9BC8
 309+ 9BC8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BC8              ; _(Posicion_actual).
 311+ 9BC8
 312+ 9BC8 21 FA 8B     	ld hl,Posicion_actual
 313+ 9BCB 34           	inc (hl)
 314+ 9BCC 08               ex af,af
 315+ 9BCD 6F           	ld l,a
 316+ 9BCE 18 DD        	jr 6B
 317+ 9BD0
 318+ 9BD0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BD0
 320+ 9BD0 47           3 ld b,a
 321+ 9BD1 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BD4 23           2 inc hl
 323+ 9BD5 23           	inc hl
 324+ 9BD6 10 FC        	djnz 2B
 325+ 9BD8 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BDB C9           8 ret
 327+ 9BDC
 328+ 9BDC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BDC              ;
 330+ 9BDC              ;	24/7/22
 331+ 9BDC              ;
 332+ 9BDC              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BDC              ;
 334+ 9BDC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BDC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BDC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BDC
 338+ 9BDC 3A FE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BDF A7           	and a
 340+ 9BE0 20 1F        	jr nz,1F
 341+ 9BE2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BE4 32 FE 8B         ld (CTRL_DESPLZ),a
 343+ 9BE7
 344+ 9BE7 21 F9 8B     	ld hl,Columns
 345+ 9BEA 34           	inc (hl)
 346+ 9BEB 3A 09 8C     	ld a,(Cuad_objeto)
 347+ 9BEE E6 01        	and 1
 348+ 9BF0 28 0F        	jr z,1F
 349+ 9BF2 2A FA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BF5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BF6 22 FA 8B     	ld (Posicion_actual),hl
 352+ 9BF9 CD 5F 95     	call Genera_coordenadas
 353+ 9BFC CD 61 9D     	call Inc_CTRL_DESPLZ
 354+ 9BFF 18 03        	jr 2F
 355+ 9C01 CD 61 9D     1 call Inc_CTRL_DESPLZ
 356+ 9C04 C9           2 ret
 357+ 9C05
 358+ 9C05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9C05              ;
 360+ 9C05              ;	24/7/22
 361+ 9C05              ;
 362+ 9C05              ;	Ciclo_completo.
 363+ 9C05              ;
 364+ 9C05              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9C05              ;
 366+ 9C05              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9C05              ; 	Decrementamos (Columns).
 368+ 9C05              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9C05              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9C05
 371+ 9C05
 372+ 9C05 3A FE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9C08 FE FF        	cp $ff
 374+ 9C0A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9C0C E6 F0        	and $f0
 376+ 9C0E 20 28        	jr nz,3F
 377+ 9C10
 378+ 9C10              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9C10
 380+ 9C10 3A FE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9C13 47           	ld b,a
 382+ 9C14 3E F8        	ld a,$f8
 383+ 9C16 80           	add b
 384+ 9C17 32 FE 8B     	ld (CTRL_DESPLZ),a
 385+ 9C1A 18 1C        	jr 3F
 386+ 9C1C 21 F9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C1F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C20 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C21 32 FE 8B     	ld (CTRL_DESPLZ),a
 390+ 9C24 3A 09 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C27 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C29 20 0A        	jr nz,2F
 393+ 9C2B 2A FA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C2E 23           	inc hl
 395+ 9C2F 22 FA 8B     	ld (Posicion_actual),hl
 396+ 9C32 CD 5F 95     	call Genera_coordenadas
 397+ 9C35
 398+ 9C35              ; Inicia el puntero de Sprite.
 399+ 9C35
 400+ 9C35 CD 5F 91     2 call Inicia_puntero_objeto_der
 401+ 9C38 C9           3 ret
 402+ 9C39
 403+ 9C39              ; ******************************************************************************************************************************************************************************************
 404+ 9C39              ;
 405+ 9C39              ;	15/02/23
 406+ 9C39              ;
 407+ 9C39              ;	Mov_left.
 408+ 9C39              ;
 409+ 9C39              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C39              ;
 411+ 9C39              Mov_left
 412+ 9C39
 413+ 9C39 21 F7 8B     	ld hl,Ctrl_0
 414+ 9C3C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C3E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C3E              ; 																	; _ en el caso de que no lo haya.
 417+ 9C3E 3A F7 8B     	ld a,(Ctrl_0)
 418+ 9C41 CB 77        	bit 6,a
 419+ 9C43 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C45
 421+ 9C45 CD 5B 9D     	call Stop_Amadeus_left
 422+ 9C48 C8           	ret z
 423+ 9C49 20 4A        	jr nz,8F
 424+ 9C4B
 425+ 9C4B 3A EB 8B     11 ld a,(Coordenada_X)
 426+ 9C4E A7           	and a
 427+ 9C4F 20 44        	jr nz,8F
 428+ 9C51
 429+ 9C51 3A FE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C54 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C55 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C57
 433+ 9C57              ; ---------- ---------- ----------
 434+ 9C57
 435+ 9C57 3A 0F 8C     	ld a,(Vel_left)
 436+ 9C5A FE 02        	cp 2
 437+ 9C5C 28 0F        	jr z,1F
 438+ 9C5E 38 04        	jr c,6F
 439+ 9C60 FE 04        	cp 4
 440+ 9C62 28 12        	jr z,7F
 441+ 9C64
 442+ 9C64              ; ---------- ---------- ----------
 443+ 9C64
 444+ 9C64 3A FE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9C67 FE F8        	cp $f8
 446+ 9C69 20 2A        	jr nz,8F
 447+ 9C6B 18 10        	jr 4F
 448+ 9C6D 3A FE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9C70 FE F9        	cp $f9
 450+ 9C72 20 21        	jr nz,8F
 451+ 9C74 18 07        	jr 4F
 452+ 9C76 3A FE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C79 FE FB        	cp $fb
 454+ 9C7B 20 18        	jr nz,8F
 455+ 9C7D
 456+ 9C7D              ; ---------- ---------- ----------
 457+ 9C7D
 458+ 9C7D              4
 459+ 9C7D CD 83 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C80              ;	call Reinicio
 461+ 9C80
 462+ 9C80              ; ---------- ---------- ----------
 463+ 9C80
 464+ 9C80 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C82 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C83
 467+ 9C83              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C83              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C83
 470+ 9C83 CD 9C 9C     	call DESPLZ_IZQ
 471+ 9C86 C1           	pop bc
 472+ 9C87 10 F9        	djnz 5B
 473+ 9C89 2A FA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C8C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C8D 22 FA 8B     	ld (Posicion_actual),hl
 476+ 9C90 CD 5F 95     	call Genera_coordenadas
 477+ 9C93 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C95
 479+ 9C95              ; ---------- ---------- ----------
 480+ 9C95
 481+ 9C95              ; Movemos, no hay recolocación.
 482+ 9C95
 483+ 9C95 2A FA 8B     8 ld hl,(Posicion_actual)
 484+ 9C98 CD 9C 9C     	call DESPLZ_IZQ
 485+ 9C9B C9           2 ret
 486+ 9C9C
 487+ 9C9C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C9C              ;
 489+ 9C9C              ;	22/9/22
 490+ 9C9C
 491+ 9C9C              DESPLZ_IZQ
 492+ 9C9C
 493+ 9C9C CD AB 9C     	call Desplaza_izquierda
 494+ 9C9F CD F7 9C         call modifica_parametros_1er_DESPLZ
 495+ 9CA2 CD 1F 9D     	call Ciclo_completo_2
 496+ 9CA5 21 F7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9CA8 CB BE        	res 7,(hl)
 498+ 9CAA C9           	ret
 499+ 9CAB
 500+ 9CAB              Desplaza_izquierda
 501+ 9CAB
 502+ 9CAB 3A 0F 8C     	ld a,(Vel_left)
 503+ 9CAE 47           	ld b,a
 504+ 9CAF 2A 05 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9CB2 23           1 inc hl
 506+ 9CB3 23           	inc hl
 507+ 9CB4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9CB6 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9CB9 CD 4D 91     	call Extrae_address
 510+ 9CBC 22 FC 8B     	ld (Puntero_objeto),hl
 511+ 9CBF
 512+ 9CBF              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CBF
 514+ 9CBF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CBF              ; Cuántos movimientos hemos hecho ??
 516+ 9CBF              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CBF
 518+ 9CBF 2A 01 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CC2 EB           	ex de,hl
 520+ 9CC3 A7           	and a
 521+ 9CC4 ED 52        	sbc hl,de
 522+ 9CC6 CB 3D        	srl l
 523+ 9CC8 3E 08        6 ld a,8
 524+ 9CCA 95           	sub l
 525+ 9CCB 30 1E        	jr nc,3F
 526+ 9CCD
 527+ 9CCD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CCD              ; B="0".
 529+ 9CCD
 530+ 9CCD 04           4 inc b
 531+ 9CCE 3C           	inc a
 532+ 9CCF 20 FC        	jr nz,4B
 533+ 9CD1 78           	ld a,b
 534+ 9CD2 08           	ex af,af
 535+ 9CD3 2A 01 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CD6 23           5 inc hl
 537+ 9CD7 23           	inc hl
 538+ 9CD8 10 FC        	djnz 5B
 539+ 9CDA 22 05 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CDD CD 4D 91     	call Extrae_address
 541+ 9CE0 22 FC 8B     	ld (Puntero_objeto),hl
 542+ 9CE3
 543+ 9CE3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CE3              ; _(Posicion_actual).
 545+ 9CE3
 546+ 9CE3 21 FA 8B     	ld hl,Posicion_actual
 547+ 9CE6 35           	dec (hl)
 548+ 9CE7 08           	ex af,af
 549+ 9CE8 6F           	ld l,a
 550+ 9CE9 18 DD        	jr 6B
 551+ 9CEB
 552+ 9CEB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CEB
 554+ 9CEB 47           3 ld b,a
 555+ 9CEC 2A FF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9CEF 23           2 inc hl
 557+ 9CF0 23           	inc hl
 558+ 9CF1 10 FC        	djnz 2B
 559+ 9CF3 22 03 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CF6 C9           8 ret
 561+ 9CF7
 562+ 9CF7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9CF7              ;
 564+ 9CF7              ;	modifica_parametros_1er_DESPLZ
 565+ 9CF7              ;
 566+ 9CF7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9CF7              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9CF7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9CF7
 570+ 9CF7 3A FE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9CFA A7           	and a
 572+ 9CFB 20 1E        	jr nz,1F
 573+ 9CFD 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9CFE 32 FE 8B         ld (CTRL_DESPLZ),a
 575+ 9D01 21 F9 8B     	ld hl,Columns
 576+ 9D04 34           	inc (hl)
 577+ 9D05 3A 09 8C     	ld a,(Cuad_objeto)
 578+ 9D08 E6 01        	and 1
 579+ 9D0A 20 0F        	jr nz,1F
 580+ 9D0C 2A FA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9D0F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9D10 22 FA 8B     	ld (Posicion_actual),hl
 583+ 9D13 CD 5F 95     	call Genera_coordenadas
 584+ 9D16 CD 72 9D     	call Dec_CTRL_DESPLZ
 585+ 9D19 18 03        	jr 2F
 586+ 9D1B CD 72 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D1E C9           2 ret
 588+ 9D1F
 589+ 9D1F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D1F
 591+ 9D1F 3A FE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D22 FE F7        	cp $f7
 593+ 9D24 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D26 30 2C        	jr nc,3F
 595+ 9D28
 596+ 9D28              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D28
 598+ 9D28 06 00        	ld b,0
 599+ 9D2A 04           4 inc b
 600+ 9D2B 3C           	inc a
 601+ 9D2C FE F7        	cp $f7
 602+ 9D2E 20 FA        	jr nz,4B
 603+ 9D30 3E FF        	ld a,$ff
 604+ 9D32 90           	sub b
 605+ 9D33 32 FE 8B     	ld (CTRL_DESPLZ),a
 606+ 9D36 18 1C        	jr 3F
 607+ 9D38
 608+ 9D38              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D38
 610+ 9D38 21 F9 8B     1 ld hl,Columns
 611+ 9D3B 35           	dec (hl)
 612+ 9D3C AF           	xor a
 613+ 9D3D 32 FE 8B     	ld (CTRL_DESPLZ),a
 614+ 9D40 3A 09 8C     	ld a,(Cuad_objeto)
 615+ 9D43 E6 01        	and 1
 616+ 9D45 28 0A        	jr z,2F
 617+ 9D47 2A FA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D4A 2B           	dec hl
 619+ 9D4B 22 FA 8B     	ld (Posicion_actual),hl
 620+ 9D4E CD 5F 95     	call Genera_coordenadas
 621+ 9D51
 622+ 9D51              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D51
 624+ 9D51 CD 72 91     2 call Inicia_puntero_objeto_izq
 625+ 9D54 C9           3 ret
 626+ 9D55
 627+ 9D55              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D55              ;
 629+ 9D55              ;	19/10/22
 630+ 9D55              ;
 631+ 9D55              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D55              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D55
 634+ 9D55 3A EB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D58 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D5A C9           	ret
 637+ 9D5B
 638+ 9D5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D5B              ;
 640+ 9D5B              ;	19/10/22
 641+ 9D5B              ;
 642+ 9D5B              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D5B              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D5B
 645+ 9D5B 3A EB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D5E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D60 C9           	ret
 648+ 9D61
 649+ 9D61              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D61              ;
 651+ 9D61              ;	24/7/22
 652+ 9D61              ;
 653+ 9D61              ;	Inc_CTRL_DESPLZ
 654+ 9D61              ;
 655+ 9D61              ;
 656+ 9D61              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D61
 658+ 9D61 21 FE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D64 3A 10 8C     	ld a,(Vel_right)
 660+ 9D67 A7           	and a
 661+ 9D68 28 06        	jr z,1F
 662+ 9D6A 47           	ld b,a
 663+ 9D6B 34           3 inc (hl)
 664+ 9D6C 10 FD        	djnz 3B
 665+ 9D6E 18 01        	jr 2F
 666+ 9D70 34           1 inc (hl)
 667+ 9D71 C9           2 ret
 668+ 9D72
 669+ 9D72              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D72              ;
 671+ 9D72              ;	5/2/23
 672+ 9D72              ;
 673+ 9D72              ;	Dec_CTRL_DESPLZ
 674+ 9D72              ;
 675+ 9D72              ;
 676+ 9D72              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D72
 678+ 9D72 21 FE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D75 3A 0F 8C     	ld a,(Vel_left)
 680+ 9D78 A7           	and a
 681+ 9D79 28 06        	jr z,1F
 682+ 9D7B 47           	ld b,a
 683+ 9D7C 35           3 dec (hl)
 684+ 9D7D 10 FD        	djnz 3B
 685+ 9D7F 18 01        	jr 2F
 686+ 9D81 35           1 dec (hl)
 687+ 9D82 C9           2 ret
 688+ 9D83
 689+ 9D83              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D83
 691+ 9D83 2A FA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D86 01 1F 00     	ld bc,31
 693+ 9D89 A7           	and a
 694+ 9D8A ED 4A        	adc hl,bc
 695+ 9D8C 22 FA 8B     	ld (Posicion_actual),hl
 696+ 9D8F 21 F7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D92 CB C6        	set 0,(hl)
 698+ 9D94 C9           	ret
 699+ 9D95
 700+ 9D95              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D95
 702+ 9D95 2A FA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D98 01 1F 00     	ld bc,31
 704+ 9D9B A7           	and a
 705+ 9D9C ED 42        	sbc hl,bc
 706+ 9D9E 22 FA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9DA1 21 F7 8B     	ld hl,Ctrl_0
 708+ 9DA4 CB CE        	set 1,(hl)
 709+ 9DA6 C9           	ret
 710+ 9DA7
 711+ 9DA7              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9DA7
 713+ 9DA7 24           Reaparece_abajo inc h
 714+ 9DA8 01 E0 17     	ld bc,$17e0
 715+ 9DAB A7           	and a
 716+ 9DAC ED 4A        	adc hl,bc
 717+ 9DAE 22 FA 8B     	ld (Posicion_actual),hl
 718+ 9DB1 21 F7 8B     	ld hl,Ctrl_0
 719+ 9DB4 CB D6        	set 2,(hl)
 720+ 9DB6 C9           	ret
 721+ 9DB7
 722+ 9DB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9DB7
 724+ 9DB7 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9DBA A7           	and a
 726+ 9DBB ED 42        	sbc hl,bc
 727+ 9DBD 22 FA 8B     	ld (Posicion_actual),hl
 728+ 9DC0 21 F7 8B     	ld hl,Ctrl_0
 729+ 9DC3 CB DE        	set 3,(hl)
 730+ 9DC5 C9           	ret
 731+ 9DC6
 732+ 9DC6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DC6              ;
 734+ 9DC6              ;	15/07/23
 735+ 9DC6
 736+ 9DC6              Reinicio
 737+ 9DC6
 738+ 9DC6              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DC6
 740+ 9DC6 AF           	xor a
 741+ 9DC7 21 1F 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DCA CD E8 9D     	call Limpia_contenido_hl
 743+ 9DCD
 744+ 9DCD 21 FA 8B     	ld hl,Posicion_actual
 745+ 9DD0 CD E8 9D     	call Limpia_contenido_hl
 746+ 9DD3
 747+ 9DD3 CD C9 93     	call Situa_Puntero_indice_mov
 748+ 9DD6 CD E1 9E     	call Inicia_Puntero_mov
 749+ 9DD9
 750+ 9DD9 21 21 8C     	ld hl,Incrementa_puntero
 751+ 9DDC 06 05        	ld b,5
 752+ 9DDE 77           1 ld (hl),a
 753+ 9DDF 23           	inc hl
 754+ 9DE0 10 FC        	djnz 1B
 755+ 9DE2
 756+ 9DE2 21 F6 8B     	ld hl,Ctrl_2
 757+ 9DE5 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DE7
 759+ 9DE7 C9           	ret
 760+ 9DE8
 761+ 9DE8 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DE9 23           	inc hl
 763+ 9DEA 77           	ld (hl),a
 764+ 9DEB C9           	ret
 765+ 9DEC
 766+ 9DEC              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DEC              ;
 768+ 9DEC              ;	18/6/24
 769+ 9DEC              ;
 770+ 9DEC
 771+ 9DEC              Amadeus_a_izquierda
 772+ 9DEC
 773+ 9DEC              ;	Actualiza contador de movimientos.
 774+ 9DEC
 775+ 9DEC 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DEF 35           	dec (hl)
 777+ 9DF0 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DF2
 779+ 9DF2 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DF5 2B           	dec hl
 781+ 9DF6 2B           	dec hl
 782+ 9DF7 2B           	dec hl
 783+ 9DF8 2B           	dec hl
 784+ 9DF9 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9DFC
 786+ 9DFC 21 61 8C     	ld hl,Ctrl_3
 787+ 9DFF CB EE        	set 5,(hl)
 788+ 9E01
 789+ 9E01 C9           	ret
 790+ 9E02
 791+ 9E02 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9E03 C9           	ret
 793+ 9E04
 794+ 9E04
 795+ 9E04              Amadeus_a_derecha
 796+ 9E04
 797+ 9E04              ;	Actualiza contador de movimientos.
 798+ 9E04
 799+ 9E04 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9E07 34           	inc (hl)
 801+ 9E08 3E 7A        	ld a,$7a
 802+ 9E0A BE           	cp (hl)
 803+ 9E0B 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9E0D
 805+ 9E0D 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9E10 23           	inc hl
 807+ 9E11 23           	inc hl
 808+ 9E12 23           	inc hl
 809+ 9E13 23           	inc hl
 810+ 9E14 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9E17
 812+ 9E17 21 61 8C     	ld hl,Ctrl_3
 813+ 9E1A CB EE        	set 5,(hl)
 814+ 9E1C C9           	ret
 815+ 9E1D
 816+ 9E1D 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E1E C9           	ret
# file closed: Direcciones.asm
2245  9E1F              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E1F              ; ----- ----- ----- ----- -----
   2+ 9E1F              ;
   3+ 9E1F              ;   28/12/23
   4+ 9E1F
   5+ 9E1F              Movimiento
   6+ 9E1F
   7+ 9E1F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E1F
   9+ 9E1F 3A F6 8B         ld a,(Ctrl_2)
  10+ 9E22 CB 57            bit 2,a
  11+ 9E24 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E26
  13+ 9E26 2A 1D 8C         ld hl,(Puntero_mov)
  14+ 9E29 7E               ld a,(hl)
  15+ 9E2A
  16+ 9E2A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E2A
  18+ 9E2A              Inicia_desplazamiento.
  19+ 9E2A
  20+ 9E2A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E2A
  22+ 9E2A CD 17 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E2D
  24+ 9E2D              ; Hemos definido (Vel_left),(Vel_right),(Vel_up) y (Vel_down) en la bandeja DRAW. Ahora (Puntero_mov) está situado en el 3er byte del movimiento, (indica dirección y nº de veces que la ejecutamos).
  25+ 9E2D
  26+ 9E2D              ; Iniciamos (Repetimos_mov).
  27+ 9E2D
  28+ 9E2D 7E               ld a,(hl)
  29+ 9E2E E6 0F            and $0f
  30+ 9E30 32 23 8C         ld (Repetimos_desplazamiento),a
  31+ 9E33 32 24 8C         ld (Repetimos_desplazamiento_backup),a
  32+ 9E36
  33+ 9E36              ; Iniciamos (Cola_de_desplazamiento).
  34+ 9E36
  35+ 9E36 23               inc hl
  36+ 9E37 7E               ld a,(hl)
  37+ 9E38 32 26 8C         ld (Cola_de_desplazamiento),a
  38+ 9E3B 2B               dec hl
  39+ 9E3C
  40+ 9E3C 21 F6 8B         ld hl,Ctrl_2
  41+ 9E3F CB D6            set 2,(hl)
  42+ 9E41
  43+ 9E41              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  44+ 9E41              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  45+ 9E41
  46+ 9E41              Desplazamiento_iniciado
  47+ 9E41
  48+ 9E41              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  49+ 9E41
  50+ 9E41              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  51+ 9E41
  52+ 9E41              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  53+ 9E41              ;                               Izquierda_y_subiendo+8 (11)
  54+ 9E41              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  55+ 9E41              ;                               Izquierda_y_subiendo+8 (8)
  56+ 9E41              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  57+ 9E41              ;                               Izquierda_y_subiendo+8 (8)
  58+ 9E41              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  59+ 9E41              ;                               Izquierda_y_subiendo+8 (8)
  60+ 9E41              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  61+ 9E41              ;                               Izquierda_y_subiendo+8 (8)
  62+ 9E41              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  63+ 9E41              ;                               Izquierda_y_subiendo+8 (7)
  64+ 9E41              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  65+ 9E41              ;                               Izquierda_y_subiendo+8 (7)
  66+ 9E41              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  67+ 9E41              ;                               Izquierda_y_subiendo+8 (7)
  68+ 9E41
  69+ 9E41
  70+ 9E41
  71+ 9E41
  72+ 9E41
  73+ 9E41              ;    ld bc,Derecha_y_subiendo+2
  74+ 9E41              ;    ld hl,(Puntero_mov)
  75+ 9E41              ;    ld a,c
  76+ 9E41              ;    cp l
  77+ 9E41              ;    jr nz,3F
  78+ 9E41
  79+ 9E41              ;    jr $
  80+ 9E41
  81+ 9E41              ;    ld a,(Coordenada_X)
  82+ 9E41              ;    sub 4
  83+ 9E41              ;    jr z,4F
  84+ 9E41
  85+ 9E41              ;    ld a,(Coordenada_y)                 ; $08 - $0b
  86+ 9E41
  87+ 9E41              ;    ld b,a
  88+ 9E41              ;    ld hl,Derecha_y_subiendo+7
  89+ 9E41              ;    ld a,(hl)
  90+ 9E41              ;    sub b
  91+ 9E41              ;    ld (hl),a
  92+ 9E41
  93+ 9E41
  94+ 9E41 CD EB 9E         call Aplica_desplazamiento
  95+ 9E44
  96+ 9E44 21 23 8C         ld hl,Repetimos_desplazamiento
  97+ 9E47 35               dec (hl)
  98+ 9E48 C0               ret nz
  99+ 9E49
 100+ 9E49              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 101+ 9E49              ; Hay que volver a ejecutar este desplazamiento ???.
 102+ 9E49              ; Analiza (Cola_de_desplazamiento).
 103+ 9E49
 104+ 9E49 3A 26 8C     Cola ld a,(Cola_de_desplazamiento)
 105+ 9E4C A7               and a
 106+ 9E4D CC 40 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 107+ 9E50 28 30            jr z,Reinicia_el_movimiento
 108+ 9E52
 109+ 9E52 FE FF            cp $ff
 110+ 9E54 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 111+ 9E56
 112+ 9E56 FE FE            cp $fe
 113+ 9E58 CC C5 9E         call z,Fijamos_bucle
 114+ 9E5B 28 25            jr z,Reinicia_el_movimiento
 115+ 9E5D
 116+ 9E5D FE FD            cp $fd
 117+ 9E5F 20 11            jr nz,1F
 118+ 9E61
 119+ 9E61              ; ---
 120+ 9E61              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 121+ 9E61
 122+ 9E61 3A F6 8B         ld a,(Ctrl_2)
 123+ 9E64 CB 5F            bit 3,a
 124+ 9E66 20 1A            jr nz,Reinicia_el_movimiento
 125+ 9E68
 126+ 9E68              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 127+ 9E68
 128+ 9E68 21 F6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 129+ 9E6B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 130+ 9E6D
 131+ 9E6D CD D6 9E         call Inicia_Repetimos_movimiento
 132+ 9E70 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 133+ 9E72              ; ---
 134+ 9E72
 135+ 9E72 FE 01        1 cp 1
 136+ 9E74 CA AF 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 137+ 9E77
 138+ 9E77 3D               dec a
 139+ 9E78 32 26 8C         ld (Cola_de_desplazamiento),a
 140+ 9E7B
 141+ 9E7B 3A 24 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ 9E7E 32 23 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ 9E81              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ 9E81 C9               ret
 145+ 9E82
 146+ 9E82              Reinicia_el_movimiento
 147+ 9E82
 148+ 9E82 3A F6 8B         ld a,(Ctrl_2)
 149+ 9E85 CB 5F            bit 3,a
 150+ 9E87 28 1B            jr z,2F
 151+ 9E89
 152+ 9E89              ; (Cola_de_desplazamiento)="254".
 153+ 9E89
 154+ 9E89 21 25 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 155+ 9E8C 35               dec (hl)
 156+ 9E8D 20 15            jr nz,2F
 157+ 9E8F
 158+ 9E8F              ; Fin de las repeticiones del último movimiento.
 159+ 9E8F
 160+ 9E8F 21 F6 8B         ld hl,Ctrl_2
 161+ 9E92 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 162+ 9E94
 163+ 9E94 2A 1D 8C         ld hl,(Puntero_mov)
 164+ 9E97 23               inc hl
 165+ 9E98 23               inc hl
 166+ 9E99 23               inc hl
 167+ 9E9A 22 1D 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 168+ 9E9D              ;                                                               ; _ para ejecutar su mandato. :)
 169+ 9E9D 7E               ld a,(hl)
 170+ 9E9E 32 26 8C         ld (Cola_de_desplazamiento),a
 171+ 9EA1
 172+ 9EA1 C3 49 9E         jp Cola
 173+ 9EA4
 174+ 9EA4 CD E1 9E     2 call Inicia_Puntero_mov
 175+ 9EA7
 176+ 9EA7 21 F6 8B         ld hl,Ctrl_2
 177+ 9EAA CB 96            res 2,(hl)
 178+ 9EAC
 179+ 9EAC C3 1F 9E         jp Movimiento
 180+ 9EAF
 181+ 9EAF              Siguiente_desplazamiento
 182+ 9EAF
 183+ 9EAF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 184+ 9EAF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 185+ 9EAF
 186+ 9EAF 21 F6 8B         ld hl,Ctrl_2
 187+ 9EB2 CB 96            res 2,(hl)
 188+ 9EB4
 189+ 9EB4 2A 1D 8C         ld hl,(Puntero_mov)
 190+ 9EB7 23               inc hl
 191+ 9EB8 23               inc hl
 192+ 9EB9 22 1D 8C         ld (Puntero_mov),hl
 193+ 9EBC
 194+ 9EBC 7E               ld a,(hl)
 195+ 9EBD A7               and a
 196+ 9EBE CC 40 9F         call z,Incrementa_Puntero_indice_mov
 197+ 9EC1 CA 82 9E         jp z,Reinicia_el_movimiento
 198+ 9EC4
 199+ 9EC4 C9               ret
 200+ 9EC5
 201+ 9EC5              ; Subrutinas -----------------------------------------
 202+ 9EC5              ; ---------- --------- --------- ---------- ----------
 203+ 9EC5              ;
 204+ 9EC5              ;   24/07/23
 205+ 9EC5              ;
 206+ 9EC5              ;   Fijamos_bucle
 207+ 9EC5              ;
 208+ 9EC5              ;
 209+ 9EC5
 210+ 9EC5              Fijamos_bucle
 211+ 9EC5
 212+ 9EC5 3A 21 8C         ld a,(Incrementa_puntero)
 213+ 9EC8 3C               inc a
 214+ 9EC9 32 22 8C         ld (Incrementa_puntero_backup),a
 215+ 9ECC
 216+ 9ECC CD 40 9F         call Incrementa_Puntero_indice_mov
 217+ 9ECF 2A 1B 8C         ld hl,(Puntero_indice_mov)
 218+ 9ED2 22 1F 8C         ld (Puntero_indice_mov_bucle),hl
 219+ 9ED5 C9               ret
 220+ 9ED6
 221+ 9ED6              ; ---------- --------- --------- ---------- ----------
 222+ 9ED6              ;
 223+ 9ED6              ;   07/7/23
 224+ 9ED6              ;
 225+ 9ED6              ;   Inicia_Repetimos_movimiento
 226+ 9ED6              ;
 227+ 9ED6              ;
 228+ 9ED6
 229+ 9ED6              Inicia_Repetimos_movimiento
 230+ 9ED6
 231+ 9ED6              ; Iniciamos (Repetimos_movimiento).
 232+ 9ED6
 233+ 9ED6 DD 2A 1D 8C      ld ix,(Puntero_mov)
 234+ 9EDA DD 7E 02         ld a,(ix+2)
 235+ 9EDD 32 25 8C         ld (Repetimos_movimiento),a
 236+ 9EE0
 237+ 9EE0 C9               ret
 238+ 9EE1
 239+ 9EE1              ; ---------- --------- --------- ---------- ----------
 240+ 9EE1              ;
 241+ 9EE1              ;   26/6/23
 242+ 9EE1              ;
 243+ 9EE1              ;   Inicia_Puntero_mov
 244+ 9EE1              ;
 245+ 9EE1              ;
 246+ 9EE1
 247+ 9EE1 2A 1B 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 248+ 9EE4 CD 4D 91         call Extrae_address
 249+ 9EE7 22 1D 8C         ld (Puntero_mov),hl
 250+ 9EEA C9               ret
 251+ 9EEB
 252+ 9EEB              ; ---------- --------- --------- ---------- ----------
 253+ 9EEB              ;
 254+ 9EEB              ;   27/06/23
 255+ 9EEB              ;
 256+ 9EEB              ;   Aplica_movimiento.
 257+ 9EEB
 258+ 9EEB              Aplica_desplazamiento
 259+ 9EEB
 260+ 9EEB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 261+ 9EEB
 262+ 9EEB 2A 1D 8C         ld hl,(Puntero_mov)
 263+ 9EEE
 264+ 9EEE 7E               ld a,(hl)
 265+ 9EEF E6 F0            and $f0
 266+ 9EF1 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 267+ 9EF2
 268+ 9EF2 CB 7E            bit 7,(hl)
 269+ 9EF4 28 03            jr z,1F
 270+ 9EF6 CD D3 9A         call Mov_up
 271+ 9EF9
 272+ 9EF9 2A 1D 8C     1 ld hl,(Puntero_mov)
 273+ 9EFC CB 76            bit 6,(hl)
 274+ 9EFE 28 03            jr z,2F
 275+ 9F00 CD 9A 9A         call Mov_down
 276+ 9F03
 277+ 9F03 2A 1D 8C     2 ld hl,(Puntero_mov)
 278+ 9F06 CB 6E            bit 5,(hl)
 279+ 9F08 28 03            jr z,3F
 280+ 9F0A CD 39 9C         call Mov_left
 281+ 9F0D
 282+ 9F0D 2A 1D 8C     3 ld hl,(Puntero_mov)
 283+ 9F10 CB 66            bit 4,(hl)
 284+ 9F12 C8               ret z
 285+ 9F13 CD 16 9B         call Mov_right
 286+ 9F16
 287+ 9F16 C9               ret
 288+ 9F17
 289+ 9F17              ; ---------- --------- --------- ---------- ----------
 290+ 9F17              ;
 291+ 9F17              ;   26/06/23
 292+ 9F17              ;
 293+ 9F17              ;   Ajusta_velocidad_desplazamiento.
 294+ 9F17
 295+ 9F17              Ajusta_velocidad_desplazamiento
 296+ 9F17
 297+ 9F17              ; 1er byte de la cadena de movimiento.
 298+ 9F17              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 299+ 9F17
 300+ 9F17 CD 35 9F         call Extrae_nibble_alto
 301+ 9F1A
 302+ 9F1A 32 11 8C         ld (Vel_up),a
 303+ 9F1D 79               ld a,c
 304+ 9F1E E6 0F            and $0f
 305+ 9F20 32 12 8C         ld (Vel_down),a
 306+ 9F23
 307+ 9F23              ; Saltamos al 2º byte de la cadena de movimiento.
 308+ 9F23              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 309+ 9F23
 310+ 9F23 23               inc hl
 311+ 9F24 CD 35 9F         call Extrae_nibble_alto
 312+ 9F27
 313+ 9F27 32 0F 8C         ld (Vel_left),a
 314+ 9F2A 79               ld a,c
 315+ 9F2B E6 0F            and $0f
 316+ 9F2D 32 10 8C         ld (Vel_right),a
 317+ 9F30
 318+ 9F30              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 319+ 9F30
 320+ 9F30 23               inc hl
 321+ 9F31 22 1D 8C         ld (Puntero_mov),hl
 322+ 9F34 C9               ret
 323+ 9F35
 324+ 9F35 06 04        Extrae_nibble_alto ld b,4
 325+ 9F37 7E               ld a,(hl)
 326+ 9F38 4F               ld c,a
 327+ 9F39 E6 F0            and $f0
 328+ 9F3B CB 3F        1 srl a
 329+ 9F3D 10 FC            djnz 1B
 330+ 9F3F C9               ret
 331+ 9F40
 332+ 9F40              ; ---------- --------- --------- ---------- ----------
 333+ 9F40              ;
 334+ 9F40              ;   5/7/23
 335+ 9F40              ;
 336+ 9F40              ;   Incrementa_Puntero_indice_mov
 337+ 9F40
 338+ 9F40              Incrementa_Puntero_indice_mov
 339+ 9F40
 340+ 9F40 21 21 8C         ld hl,Incrementa_puntero
 341+ 9F43 34               inc (hl)
 342+ 9F44
 343+ 9F44 2A 1B 8C         ld hl,(Puntero_indice_mov)
 344+ 9F47 01 02 00         ld bc,2
 345+ 9F4A A7               and a
 346+ 9F4B 09               add hl,bc
 347+ 9F4C 22 1B 8C         ld (Puntero_indice_mov),hl
 348+ 9F4F
 349+ 9F4F 7E               ld a,(hl)
 350+ 9F50 A7               and a
 351+ 9F51
 352+ 9F51              ;! STOP. Fin del patrón de movimiento de la entidad.
 353+ 9F51
 354+ 9F51              ;    jr z,$
 355+ 9F51
 356+ 9F51              ;! Reinicia el Patrón de movimiento.
 357+ 9F51
 358+ 9F51 CC 56 9F         call z,Inicializa_Puntero_indice_mov_2
 359+ 9F54
 360+ 9F54 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 361+ 9F55
 362+ 9F55 C9               ret
 363+ 9F56
 364+ 9F56              ; ---------- --------- --------- ---------- ----------
 365+ 9F56              ;
 366+ 9F56              ;   15/01/24
 367+ 9F56              ;
 368+ 9F56              ;   Inicializa_Puntero_indice_mov
 369+ 9F56
 370+ 9F56              Inicializa_Puntero_indice_mov_2
 371+ 9F56
 372+ 9F56              ; Existe etiqueta de bucle principal???
 373+ 9F56
 374+ 9F56 2A 1F 8C         ld hl,(Puntero_indice_mov_bucle)
 375+ 9F59 24               inc h
 376+ 9F5A 25               dec h
 377+ 9F5B 28 05            jr z,2F
 378+ 9F5D
 379+ 9F5D 22 1B 8C         ld (Puntero_indice_mov),hl
 380+ 9F60 18 14            jr 3F
 381+ 9F62
 382+ 9F62              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 383+ 9F62
 384+ 9F62 3A 21 8C     2 ld a,(Incrementa_puntero)
 385+ 9F65 47               ld b,a
 386+ 9F66
 387+ 9F66 2A 1B 8C         ld hl,(Puntero_indice_mov)
 388+ 9F69 2B           1 dec hl
 389+ 9F6A 2B               dec hl
 390+ 9F6B 10 FC            djnz 1B
 391+ 9F6D 22 1B 8C         ld (Puntero_indice_mov),hl
 392+ 9F70
 393+ 9F70 AF               xor a
 394+ 9F71 32 21 8C         ld (Incrementa_puntero),a
 395+ 9F74 18 06            jr 4F
 396+ 9F76
 397+ 9F76 3A 22 8C     3 ld a,(Incrementa_puntero_backup)
 398+ 9F79 32 21 8C         ld (Incrementa_puntero),a
 399+ 9F7C C9           4 ret
 400+ 9F7D
 401+ 9F7D              ; ----------------------------------------------------------------------
 402+ 9F7D              ;
 403+ 9F7D              ;   24/11/24
 404+ 9F7D              ;
 405+ 9F7D              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 406+ 9F7D
 407+ 9F7D DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 408+ 9F80 CD D8 94         call Calcula_salto_en_BC
 409+ 9F83 21 13 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 410+ 9F86 A7               and a
 411+ 9F87 ED 4A            adc hl,bc
 412+ 9F89 C9               ret
 413+ 9F8A
 414+ 9F8A              ; ----------------------------------------------------------------------
 415+ 9F8A              ;
 416+ 9F8A              ;   24/11/24
 417+ 9F8A              ;
 418+ 9F8A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 419+ 9F8A              ;
 420+ 9F8A              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 421+ 9F8A
 422+ 9F8A 4E           Transfiere_datos_de_contadores ld c,(hl)
 423+ 9F8B 23               inc hl
 424+ 9F8C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 425+ 9F8D DD 71 09         ld (ix+9),c
 426+ 9F90 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 427+ 9F93 C9               ret
 428+ 9F94
# file closed: Movimiento.asm
2246  9F94              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F94              ; --------------------------------------------------------------------------------------
   2+ 9F94              ;
   3+ 9F94              ;   25/10/24
   4+ 9F94              ;
   5+ 9F94
   6+ 9F94              Pinta_disparos_Entidades
   7+ 9F94
   8+ 9F94 ED 73 39 8C      ld (Stack),sp
   9+ 9F98 ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F9C
  11+ 9F9C 3E 02            ld a,2
  12+ 9F9E 08               ex af,af
  13+ 9F9F
  14+ 9F9F 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9FA1              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9FA1              ;                                     _ No encontraría "0".
  17+ 9FA1 FD E1        4 pop iy
  18+ 9FA3 D1               pop de                          ; 1er .db IYL
  19+ 9FA4              ;                                   ; 2º  .db IYH
  20+ 9FA4              ;                                   ; 3er .db E.
  21+ 9FA4              ;   Album vacío ???
  22+ 9FA4
  23+ 9FA4 FD 7D            ld a,iyl
  24+ 9FA6 FD 84            add iyh
  25+ 9FA8 83               add e
  26+ 9FA9 28 1F            jr z,1F
  27+ 9FAB
  28+ 9FAB              ;   Imprime album, (contiene datos).
  29+ 9FAB
  30+ 9FAB 3B               dec sp
  31+ 9FAC
  32+ 9FAC E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9FAD
  34+ 9FAD              ; Imprime el 1er scanline del disparo.
  35+ 9FAD
  36+ 9FAD FD 7D            ld a,iyl
  37+ 9FAF AE               xor (hl)
  38+ 9FB0 77               ld (hl),a
  39+ 9FB1
  40+ 9FB1 2C               inc l
  41+ 9FB2
  42+ 9FB2 FD 7C            ld a,iyh
  43+ 9FB4 AE               xor (hl)
  44+ 9FB5 77               ld (hl),a
  45+ 9FB6
  46+ 9FB6 2C               inc l
  47+ 9FB7
  48+ 9FB7 7B               ld a,e
  49+ 9FB8 AE               xor (hl)
  50+ 9FB9 77               ld (hl),a
  51+ 9FBA
  52+ 9FBA              ; Imprime el 2º scanline del disparo.
  53+ 9FBA
  54+ 9FBA E1               pop hl
  55+ 9FBB
  56+ 9FBB FD 7D            ld a,iyl
  57+ 9FBD AE               xor (hl)
  58+ 9FBE 77               ld (hl),a
  59+ 9FBF
  60+ 9FBF 2C               inc l
  61+ 9FC0
  62+ 9FC0 FD 7C            ld a,iyh
  63+ 9FC2 AE               xor (hl)
  64+ 9FC3 77               ld (hl),a
  65+ 9FC4
  66+ 9FC4 2C               inc l
  67+ 9FC5
  68+ 9FC5 7B               ld a,e
  69+ 9FC6 AE               xor (hl)
  70+ 9FC7 77               ld (hl),a
  71+ 9FC8
  72+ 9FC8 10 D7            djnz 4B
  73+ 9FCA
  74+ 9FCA 08           1 ex af,af
  75+ 9FCB 3D               dec a
  76+ 9FCC 20 05            jr nz,2F
  77+ 9FCE
  78+ 9FCE ED 7B 39 8C      ld sp,(Stack)
  79+ 9FD2 C9               ret
  80+ 9FD3
  81+ 9FD3 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FD7 08               ex af,af
  83+ 9FD8 18 C5            jr 3B
  84+ 9FDA
  85+ 9FDA              ; --------------------------------------------------------------------------------------
  86+ 9FDA              ;
  87+ 9FDA              ;   2/12/24
  88+ 9FDA              ;
  89+ 9FDA
  90+ 9FDA              Motor_de_disparos_entidades
  91+ 9FDA
  92+ 9FDA 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FDD FE 07            cp 7
  94+ 9FDF C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FE0
  96+ 9FE0 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FE2 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FE5
  99+ 9FE5 CD 4D 91     1 call Extrae_address
 100+ 9FE8 1C               inc e
 101+ 9FE9 1C               inc e
 102+ 9FEA ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FEE
 104+ 9FEE               ; Caja vacía ???
 105+ 9FEE
 106+ 9FEE 2D               dec l
 107+ 9FEF 7E               ld a,(hl)
 108+ 9FF0 A7               and a
 109+ 9FF1 28 45            jr z,3F                                                              ; Caja vacía.
 110+ 9FF3
 111+ 9FF3              ; --- Trabajamos con caja:
 112+ 9FF3
 113+ 9FF3 2C               inc l
 114+ 9FF4
 115+ 9FF4              ; --- Existe posibilidad de impacto ???
 116+ 9FF4
 117+ 9FF4 3A 8A 8C         ld a,(Shield)
 118+ 9FF7 A7               and a
 119+ 9FF8 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ 9FFA
 121+ 9FFA CB 46            bit 0,(hl)
 122+ 9FFC C4 3C A0         call nz, Comprueba_impacto_con_Amadeus
 123+ 9FFF 20 37            jr nz,3F
 124+ A001
 125+ A001 CD C3 A0     6 call Rota_disparo_si_procede
 126+ A004
 127+ A004              ; ------------------------------------------------------------
 128+ A004
 129+ A004 2D               dec l
 130+ A005 2D               dec l
 131+ A006
 132+ A006 CD 4D 91         call Extrae_address
 133+ A009
 134+ A009              ;   (Puntero_de_impresion) del disparo en HL
 135+ A009              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A009
 137+ A009 3A 63 8C         ld a,(Ctrl_5)
 138+ A00C CB 57            bit 2,a
 139+ A00E 28 09            jr z,4F
 140+ A010
 141+ A010 CB 97            res 2,a
 142+ A012 32 63 8C         ld (Ctrl_5),a
 143+ A015 2C               inc l
 144+ A016 2C               inc l
 145+ A017 18 0C            jr 5F
 146+ A019
 147+ A019 CB 5F        4 bit 3,a
 148+ A01B 28 08            jr z,5F
 149+ A01D
 150+ A01D CB 9F            res 3,a
 151+ A01F 32 63 8C         ld (Ctrl_5),a
 152+ A022 2D               dec l
 153+ A023 2D               dec l
 154+ A024 2D               dec l
 155+ A025
 156+ A025              ; ---------------------------------------------------------------------
 157+ A025
 158+ A025              ;! Velocidad del disparo de entidades.
 159+ A025
 160+ A025 CD 54 9A     5 call NextScan
 161+ A028 CD 54 9A         call NextScan
 162+ A02B
 163+ A02B              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A02B
 165+ A02B CD A0 A0         call Fin_de_disparo_de_entidad
 166+ A02E
 167+ A02E EB               ex de,hl
 168+ A02F
 169+ A02F 73               ld (hl),e
 170+ A030 23               inc hl
 171+ A031 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A032
 173+ A032 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A035 18 02            jr 2F
 175+ A037
 176+ A037 C9               ret
 177+ A038
 178+ A038 EB           3 ex de,hl
 179+ A039 10 AA        2 djnz 1B
 180+ A03B
 181+ A03B C9               ret
 182+ A03C
 183+ A03C              ; ------------- ------------- ------------
 184+ A03C              ;
 185+ A03C              ;   1/11/24
 186+ A03C
 187+ A03C              Comprueba_impacto_con_Amadeus
 188+ A03C
 189+ A03C              ;   El disparo se encuentra en zona de Amadeus.
 190+ A03C              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A03C
 192+ A03C              ;   Modificamos registros, así que guardamos ...
 193+ A03C
 194+ A03C C5               push bc
 195+ A03D E5               push hl
 196+ A03E D5               push de
 197+ A03F
 198+ A03F 2D               dec l
 199+ A040 2D               dec l
 200+ A041
 201+ A041 CD 4D 91         call Extrae_address
 202+ A044
 203+ A044 3A AF 89         ld a,(CX_Amadeus)
 204+ A047 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A048
 206+ A048 7D               ld a,l
 207+ A049 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A04B
 209+ A04B 06 03            ld b,3
 210+ A04D
 211+ A04D B9           1 cp c
 212+ A04E 28 15            jr z,Coincidencia
 213+ A050 0C               inc c
 214+ A051 10 FA            djnz 1B
 215+ A053
 216+ A053 0D               dec c
 217+ A054 0D               dec c
 218+ A055 0D               dec c
 219+ A056
 220+ A056 3C               inc a
 221+ A057 B9               cp c
 222+ A058 28 0B            jr z,Coincidencia
 223+ A05A
 224+ A05A 3C               inc a
 225+ A05B B9               cp c
 226+ A05C 28 07            jr z,Coincidencia
 227+ A05E
 228+ A05E D1           2 pop de
 229+ A05F E1               pop hl
 230+ A060 C1               pop bc
 231+ A061
 232+ A061              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A061
 234+ A061 CB 86            res 0,(hl)
 235+ A063 AF               xor a                       ; Z before RET.
 236+ A064 C9               ret
 237+ A065
 238+ A065              Coincidencia
 239+ A065
 240+ A065              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A065              ;   Existe posibilidad de impacto.
 242+ A065              ;   Vamos a averiguarlo ...
 243+ A065
 244+ A065 1D               dec e
 245+ A066 1D               dec e
 246+ A067 1D               dec e
 247+ A068
 248+ A068              ; DE en Puntero_objeto del disparo.
 249+ A068              ; HL en Puntero_de_impresión del disparo.
 250+ A068
 251+ A068              ; Comparador:
 252+ A068
 253+ A068 06 03            ld b,3
 254+ A06A
 255+ A06A 1A           3 ld a,(de)
 256+ A06B 4F               ld c,a
 257+ A06C A6               and (hl)
 258+ A06D B9               cp c
 259+ A06E 20 06            jr nz,Amadeus_impactado
 260+ A070
 261+ A070 2C               inc l
 262+ A071 1C               inc e
 263+ A072
 264+ A072 10 F6            djnz 3B
 265+ A074
 266+ A074 18 E8            jr 2B
 267+ A076
 268+ A076              Amadeus_impactado
 269+ A076
 270+ A076              ; Borramos disparo.
 271+ A076
 272+ A076              ;   Exclusion.
 273+ A076
 274+ A076 D1               pop de
 275+ A077 E1               pop hl
 276+ A078
 277+ A078 E5               push hl
 278+ A079 D5               push de
 279+ A07A
 280+ A07A CD 2E A1         call Borra_6_bytes
 281+ A07D
 282+ A07D 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A080 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A081
 285+ A081              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A081
 287+ A081 21 B2 89         ld hl,Impacto_Amadeus
 288+ A084 36 01            ld (hl),1
 289+ A086
 290+ A086              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A086              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A086
 293+ A086 3A B3 89         ld a,(p.imp.amadeus)
 294+ A089 FE DE            cp $de
 295+ A08B 20 04            jr nz,1F
 296+ A08D
 297+ A08D 3D               dec a
 298+ A08E 32 B3 89         ld (p.imp.amadeus),a
 299+ A091
 300+ A091              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A091
 302+ A091 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A094 21 B5 89         ld hl,Pamm_Amadeus
 304+ A097
 305+ A097 73               ld (hl),e
 306+ A098 23               inc hl
 307+ A099 72               ld (hl),d
 308+ A09A
 309+ A09A D1               pop de
 310+ A09B E1               pop hl
 311+ A09C C1               pop bc
 312+ A09D
 313+ A09D AF               xor a
 314+ A09E 3C               inc a               ; NZ before RET.
 315+ A09F C9               ret
 316+ A0A0
 317+ A0A0              ; ------------- ------------- ------------
 318+ A0A0              ;
 319+ A0A0              ;   31/10/24
 320+ A0A0
 321+ A0A0              Fin_de_disparo_de_entidad
 322+ A0A0
 323+ A0A0              ; Estamos en zona de Amadeus ??
 324+ A0A0
 325+ A0A0 7C               ld a,h
 326+ A0A1 FE 54            cp $54
 327+ A0A3 38 0D            jr c,1F
 328+ A0A5
 329+ A0A5 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A0A6
 331+ A0A6 5D               ld e,l
 332+ A0A7 54               ld d,h
 333+ A0A8
 334+ A0A8 21 E0 57         ld hl,$57e0
 335+ A0AB ED 52            sbc hl,de
 336+ A0AD
 337+ A0AD 38 6F            jr c,Elimina_disparo_entidad
 338+ A0AF
 339+ A0AF 6B               ld l,e
 340+ A0B0 62               ld h,d
 341+ A0B1
 342+ A0B1 D1               pop de
 343+ A0B2
 344+ A0B2 7C           1 ld a,h
 345+ A0B3 FE 50            cp $50
 346+ A0B5 D8               ret c
 347+ A0B6
 348+ A0B6 7D               ld a,l
 349+ A0B7 FE C0            cp $c0
 350+ A0B9 D8               ret c
 351+ A0BA
 352+ A0BA              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A0BA              ; Así podremos comprobar si hay colisión más adelante.
 354+ A0BA
 355+ A0BA 1C               inc e
 356+ A0BB 1C               inc e
 357+ A0BC
 358+ A0BC EB               ex de,hl
 359+ A0BD CB C6            set 0,(hl)
 360+ A0BF EB               ex de,hl
 361+ A0C0
 362+ A0C0 1D               dec e
 363+ A0C1 1D               dec e
 364+ A0C2
 365+ A0C2 C9               ret
 366+ A0C3
 367+ A0C3              ; ----------------------------------------------------------
 368+ A0C3              ;
 369+ A0C3              ;   08/10/24
 370+ A0C3
 371+ A0C3              ;   Estructura de un disparo de entidades.
 372+ A0C3
 373+ A0C3              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A0C3              ; 	defw 0											; Puntero de impresión.
 375+ A0C3              ;	defw 0											; Control.
 376+ A0C3
 377+ A0C3              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A0C3              ;   _de la entidad en el momento de disparar.
 379+ A0C3
 380+ A0C3              ;   El byte alto muestra la siguiente información:
 381+ A0C3              ;
 382+ A0C3              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A0C3              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A0C3              ;
 385+ A0C3              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A0C3              ;
 387+ A0C3              ;                        10xx ..... Izquierda.
 388+ A0C3              ;                        01xx ..... Derecha.
 389+ A0C3              ;                        00xx ..... Recto.
 390+ A0C3
 391+ A0C3              Rota_disparo_si_procede
 392+ A0C3
 393+ A0C3              ;   Nos situamos en el byte alto de (Control).
 394+ A0C3
 395+ A0C3 CB 76            bit 6,(hl)
 396+ A0C5 20 2D            jr nz,Rota_a_derecha
 397+ A0C7 CB 7E            bit 7,(hl)
 398+ A0C9 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A0CA
 400+ A0CA              Rota_a_izq
 401+ A0CA
 402+ A0CA E5               push hl
 403+ A0CB
 404+ A0CB 7D               ld a,l
 405+ A0CC D6 05            sub 5
 406+ A0CE 6F               ld l,a
 407+ A0CF
 408+ A0CF E5               push hl
 409+ A0D0 FD E1            pop iy
 410+ A0D2
 411+ A0D2 A7               and a
 412+ A0D3
 413+ A0D3 FD CB 02 16      rl (iy+02)
 414+ A0D7 FD CB 01 16      rl (iy+01)
 415+ A0DB FD CB 00 16      rl (iy+00)
 416+ A0DF
 417+ A0DF 30 3B            jr nc,Exit
 418+ A0E1
 419+ A0E1              ; Desplazamiento completo hasta Carry.
 420+ A0E1              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A0E1
 422+ A0E1 FD 36 02 03      ld (iy+02),$03
 423+ A0E5 FD 36 01 00      ld (iy+01),$00
 424+ A0E9 FD 36 00 00      ld (iy+00),$00
 425+ A0ED
 426+ A0ED 21 63 8C         ld hl,Ctrl_5
 427+ A0F0 CB DE            set 3,(hl)
 428+ A0F2
 429+ A0F2 18 28            jr Exit
 430+ A0F4
 431+ A0F4              Rota_a_derecha
 432+ A0F4
 433+ A0F4 E5               push hl
 434+ A0F5
 435+ A0F5 7D               ld a,l
 436+ A0F6 D6 05            sub 5
 437+ A0F8 6F               ld l,a
 438+ A0F9
 439+ A0F9 E5               push hl
 440+ A0FA FD E1            pop iy
 441+ A0FC
 442+ A0FC A7               and a
 443+ A0FD
 444+ A0FD FD CB 00 1E      rr (iy+00)
 445+ A101 FD CB 01 1E      rr (iy+01)
 446+ A105 FD CB 02 1E      rr (iy+02)
 447+ A109
 448+ A109 30 11            jr nc,Exit
 449+ A10B
 450+ A10B              ; Desplazamiento completo hasta Carry.
 451+ A10B              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A10B
 453+ A10B FD 36 00 01      ld (iy+00),$01
 454+ A10F FD 36 01 80      ld (iy+01),$80
 455+ A113 FD 36 02 00      ld (iy+02),$00
 456+ A117
 457+ A117 21 63 8C         ld hl,Ctrl_5
 458+ A11A CB D6            set 2,(hl)
 459+ A11C
 460+ A11C E1           Exit pop hl
 461+ A11D C9               ret
 462+ A11E
 463+ A11E              ; ------------ ----------- ------------
 464+ A11E              ;
 465+ A11E              ;   25/9/24
 466+ A11E
 467+ A11E              Elimina_disparo_entidad
 468+ A11E
 469+ A11E 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A121 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A122
 472+ A122 E1               pop hl
 473+ A123 E5               push hl
 474+ A124
 475+ A124 2C               inc l
 476+ A125 2C               inc l
 477+ A126
 478+ A126 CD 2E A1         call Borra_6_bytes
 479+ A129
 480+ A129 D1               pop de
 481+ A12A
 482+ A12A 21 00 00         ld hl,0
 483+ A12D
 484+ A12D C9               ret
 485+ A12E
 486+ A12E              ; ----- ----- ----- ----- -----
 487+ A12E
 488+ A12E              Borra_6_bytes
 489+ A12E
 490+ A12E 16 06            ld d,6                                                    ; Contador
 491+ A130 AF               xor a                                                     ; Borrador
 492+ A131 77           1 ld (hl),a
 493+ A132 2D               dec l
 494+ A133 15               dec d
 495+ A134 20 FB            jr nz,1B
 496+ A136
 497+ A136 C9               ret
 498+ A137
 499+ A137              ; --------------------------------------------------------------------------------------
 500+ A137              ;
 501+ A137              ;   12/10/24
 502+ A137              ;
 503+ A137
 504+ A137              Genera_datos_de_impresion_disparos_Entidades
 505+ A137
 506+ A137 3E 07            ld a,7
 507+ A139 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A13A
 509+ A13A              ; ---------------
 510+ A13A
 511+ A13A              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A13A
 513+ A13A 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A13D
 515+ A13D CD 4D 91     1 call Extrae_address
 516+ A140
 517+ A140 13               inc de
 518+ A141 13               inc de
 519+ A142
 520+ A142 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A146
 522+ A146 2D               dec l
 523+ A147 7E               ld a,(hl)
 524+ A148 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A149 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A14B
 527+ A14B              ; ----- ----- ----- -----
 528+ A14B
 529+ A14B 2D               dec l
 530+ A14C CD 4D 91         call Extrae_address
 531+ A14F E5               push hl
 532+ A150
 533+ A150 1D               dec e
 534+ A151
 535+ A151 EB               ex de,hl
 536+ A152
 537+ A152 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A153 2D               dec l
 539+ A154 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A155 2D               dec l
 541+ A156 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A157
 543+ A157 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A158
 545+ A158              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A158
 547+ A158 FD 2A 4D 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A15C FD 73 00         ld (iy+0),e
 549+ A15F FD 70 01         ld (iy+1),b
 550+ A162 FD 71 02         ld (iy+2),c
 551+ A165
 552+ A165 FD 75 03         ld (iy+3),l
 553+ A168 FD 74 04         ld (iy+4),h
 554+ A16B
 555+ A16B CD 54 9A         call NextScan
 556+ A16E
 557+ A16E FD 75 05         ld (iy+5),l
 558+ A171 FD 74 06         ld (iy+6),h
 559+ A174
 560+ A174 FD E5            push iy
 561+ A176 E1               pop hl
 562+ A177
 563+ A177 3E 07            ld a,7
 564+ A179 85               add l
 565+ A17A 6F               ld l,a
 566+ A17B
 567+ A17B 22 4D 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A17E
 569+ A17E              ; ----- ----- ----- -----
 570+ A17E
 571+ A17E              Situa_en_siguiente_caja
 572+ A17E
 573+ A17E 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A17F 3D               dec a
 575+ A180 C8               ret z
 576+ A181
 577+ A181 08               ex af,af
 578+ A182 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A185 18 B6            jr 1B
 580+ A187
 581+ A187              ; --------------------------------------------------------------------------------------
 582+ A187              ;
 583+ A187              ;   12/10/24
 584+ A187              ;
 585+ A187
 586+ A187              Genera_disparo_de_entidad_maldosa
 587+ A187
 588+ A187              ;   Estructura de un disparo de entidades.
 589+ A187
 590+ A187              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A187              ; 	defw 0											; Puntero de impresión.
 592+ A187              ;	defw 0											; Control.
 593+ A187
 594+ A187              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A187              ;   _de la entidad en el momento de disparar.
 596+ A187
 597+ A187              ;   El byte de control muestra la siguiente información:
 598+ A187
 599+ A187              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A187              ;
 601+ A187              ;                        10xx ..... Izquierda.
 602+ A187              ;                        01xx ..... Derecha.
 603+ A187              ;                        00xx ..... Recto.
 604+ A187
 605+ A187              ;*  Exclusiones.
 606+ A187
 607+ A187              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A187              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A187
 610+ A187 3A 51 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A18A A7               and a
 612+ A18B C8               ret z
 613+ A18C
 614+ A18C 3A EC 8B         ld a,(Coordenada_y)
 615+ A18F A7               and a
 616+ A190 C8               ret z
 617+ A191
 618+ A191 3D               dec a
 619+ A192 C8               ret z
 620+ A193
 621+ A193 FE 10            cp 16
 622+ A195 D0               ret nc
 623+ A196
 624+ A196              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A196              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A196              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A196
 628+ A196 21 53 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A199 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A19A
 631+ A19A              ;   Decrementa el numero de disparos de entidades.
 632+ A19A
 633+ A19A 21 51 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A19D 35               dec (hl)
 635+ A19E
 636+ A19E 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A1A1
 638+ A1A1 CD 4D 91     1 call Extrae_address
 639+ A1A4
 640+ A1A4 13               inc de
 641+ A1A5 13               inc de
 642+ A1A6
 643+ A1A6 ED 53 64 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A1AA
 645+ A1AA              ;   Comprobamos si la caja está vacía.
 646+ A1AA
 647+ A1AA 2D               dec l
 648+ A1AB 7E               ld a,(hl)
 649+ A1AC A7               and a
 650+ A1AD 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A1AF 2C               inc l
 652+ A1B0
 653+ A1B0              ;   Caja vacía, vamos a generar un disparo.
 654+ A1B0              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A1B0
 656+ A1B0 CD D1 A1         call Genera_byte_inclinacion
 657+ A1B3
 658+ A1B3 7E               ld a,(hl)
 659+ A1B4 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A1B5
 661+ A1B5 2D               dec l
 662+ A1B6
 663+ A1B6 CD ED A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A1B9
 665+ A1B9 70               ld (hl),b
 666+ A1BA 2D               dec l
 667+ A1BB 71               ld (hl),c
 668+ A1BC
 669+ A1BC 2D               dec l
 670+ A1BD
 671+ A1BD              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A1BD
 673+ A1BD FD 7E 02         ld a,(iy+02)
 674+ A1C0 77               ld (hl),a
 675+ A1C1 2D               dec l
 676+ A1C2
 677+ A1C2 FD 7E 01         ld a,(iy+01)
 678+ A1C5 77               ld (hl),a
 679+ A1C6 2D               dec l
 680+ A1C7
 681+ A1C7 FD 7E 00         ld a,(iy+00)
 682+ A1CA 77               ld (hl),a
 683+ A1CB
 684+ A1CB C9               ret
 685+ A1CC
 686+ A1CC              ;   --- --- ---
 687+ A1CC
 688+ A1CC              Situa_en_siguiente_disparo
 689+ A1CC
 690+ A1CC 2A 64 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A1CF 18 D0            jr 1B
 692+ A1D1
 693+ A1D1              ; --------------------------------------------------------------------------------------
 694+ A1D1              ;
 695+ A1D1              ;   09/10/24
 696+ A1D1              ;
 697+ A1D1
 698+ A1D1              Genera_byte_inclinacion
 699+ A1D1
 700+ A1D1              ; Determina tendencia del disparo.
 701+ A1D1
 702+ A1D1 3A AF 89         ld a,(CX_Amadeus)
 703+ A1D4 47               ld b,a
 704+ A1D5 3A EB 8B         ld a,(Coordenada_X)
 705+ A1D8 90               sub b
 706+ A1D9 38 07            jr c,Disparo_a_derecha
 707+ A1DB
 708+ A1DB FE 06        Disparo_a_izquierda cp 6
 709+ A1DD
 710+ A1DD D8               ret c
 711+ A1DE C8               ret z
 712+ A1DF
 713+ A1DF CB FE            set 7,(hl)
 714+ A1E1 C9               ret
 715+ A1E2
 716+ A1E2 47           Disparo_a_derecha ld b,a
 717+ A1E3 3E FF            ld a,$ff
 718+ A1E5 90               sub b
 719+ A1E6
 720+ A1E6 FE 05            cp 5
 721+ A1E8
 722+ A1E8 D8               ret c
 723+ A1E9 C8               ret z
 724+ A1EA
 725+ A1EA CB F6            set 6,(hl)
 726+ A1EC C9               ret
 727+ A1ED
 728+ A1ED              ; --------------------------------------------------------------------------------------
 729+ A1ED              ;
 730+ A1ED              ;   09/10/24
 731+ A1ED              ;
 732+ A1ED
 733+ A1ED              Modifica_puntero_de_impresion
 734+ A1ED
 735+ A1ED              ;   Puntero de impresión del disparo en BC.
 736+ A1ED
 737+ A1ED E5               push hl
 738+ A1EE
 739+ A1EE 2A 66 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A1F1 CD 54 9A         call NextScan
 741+ A1F4
 742+ A1F4 4D               ld c,l
 743+ A1F5 44               ld b,h
 744+ A1F6
 745+ A1F6 E1               pop hl
 746+ A1F7
 747+ A1F7 08               ex af,af
 748+ A1F8 CB 77            bit 6,a
 749+ A1FA 28 06            jr z,1F
 750+ A1FC
 751+ A1FC FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A200 0C               inc c
 753+ A201 C9               ret
 754+ A202
 755+ A202 CB 7F        1 bit 7,a
 756+ A204 28 F6            jr z,2B
 757+ A206
 758+ A206 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A20A 0D               dec c
 760+ A20B
 761+ A20B C9               ret
 762+ A20C
 763+ A20C              ; --------------------------------------------------------------------------------------
 764+ A20C              ;
 765+ A20C              ;   28/11/24
 766+ A20C              ;
 767+ A20C
 768+ A20C              Compara_con_coordenadas_de_disparo
 769+ A20C
 770+ A20C DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A20F 47               ld b,a
 772+ A210 3A 6B 8C         ld a,(Coordenadas_disparo_certero)
 773+ A213 90               sub b
 774+ A214
 775+ A214              ; A = "0" ok
 776+ A214              ; A = "1" ok
 777+ A214
 778+ A214 28 08            jr z,Comprueba_coordenada_X
 779+ A216 3D               dec a
 780+ A217 28 05            jr z,Comprueba_coordenada_X
 781+ A219
 782+ A219              ; A = "$ff" ok
 783+ A219
 784+ A219 FE FE            cp $fe
 785+ A21B 28 01            jr z,Comprueba_coordenada_X
 786+ A21D
 787+ A21D C9               ret
 788+ A21E
 789+ A21E              Comprueba_coordenada_X
 790+ A21E
 791+ A21E DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A221 47               ld b,a
 793+ A222 21 6C 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A225 7E               ld a,(hl)
 795+ A226 90               sub b
 796+ A227
 797+ A227              ; A = "0" ok
 798+ A227              ; A = "1" ok
 799+ A227
 800+ A227 28 09            jr z,Activa_Impacto_en_entidad
 801+ A229 3D               dec a
 802+ A22A 28 06            jr z,Activa_Impacto_en_entidad
 803+ A22C
 804+ A22C              ; A = "2" ok
 805+ A22C
 806+ A22C 3D               dec a
 807+ A22D 28 03            jr z,Activa_Impacto_en_entidad
 808+ A22F
 809+ A22F              ; A = "$ff"
 810+ A22F
 811+ A22F FE FD            cp $fd
 812+ A231 C0               ret nz
 813+ A232
 814+ A232              Activa_Impacto_en_entidad
 815+ A232
 816+ A232              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A232
 818+ A232 3E 02            ld a,2
 819+ A234 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A237
 821+ A237              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A237
 823+ A237 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A23A
 825+ A23A DD 73 07         ld (ix+7),e
 826+ A23D DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A240
 828+ A240              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A240
 830+ A240 21 68 8C         ld hl,Impacto2
 831+ A243 CB 9E            res 3,(hl)
 832+ A245
 833+ A245 C9               ret
 834+ A246
 835+ A246              ; --------------------------------------------------------------------------------------
 836+ A246              ;
 837+ A246              ;   13/10/24
 838+ A246              ;
 839+ A246
 840+ A246              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A246
 842+ A246              Limpia_album_de_pintado_disparos_Amadeus
 843+ A246
 844+ A246 2A 45 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A249 06 06            ld b,6
 846+ A24B AF               xor a
 847+ A24C 77           1 ld (hl),a
 848+ A24D 2C               inc l
 849+ A24E 10 FC            djnz 1B
 850+ A250
 851+ A250 C9               ret
 852+ A251
 853+ A251              ; --------------------------------------------------------------------------------------
 854+ A251              ;
 855+ A251              ;   29/09/24
 856+ A251              ;
 857+ A251
 858+ A251              Calcula_bytes_pintado_disparos
 859+ A251
 860+ A251 2A 49 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A254 45               ld b,l
 862+ A255 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A258 7D               ld a,l
 864+ A259
 865+ A259 90               sub b
 866+ A25A 32 4F 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A25D
 868+ A25D C9               ret
 869+ A25E
 870+ A25E              ; --------------------------------------------------------------------------------------
 871+ A25E              ;
 872+ A25E              ;   26/10/24
 873+ A25E              ;
 874+ A25E              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A25E              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A25E              ;   _disparos que el álbum del FRAME actual).
 877+ A25E
 878+ A25E              Limpia_album_de_pintado_disparos_entidades
 879+ A25E
 880+ A25E 21 50 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A261 7E               ld a,(hl)
 882+ A262 2D               dec l
 883+ A263 46               ld b,(hl)
 884+ A264 90               sub b
 885+ A265
 886+ A265 D8               ret c
 887+ A266 C8               ret z
 888+ A267
 889+ A267 F5               push af
 890+ A268 80               add b
 891+ A269 77               ld (hl),a
 892+ A26A F1               pop af
 893+ A26B
 894+ A26B              ; Clean.
 895+ A26B
 896+ A26B 47           2 ld b,a
 897+ A26C AF               xor a
 898+ A26D 2A 4D 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A270 77           1 ld (hl),a
 900+ A271 23               inc hl
 901+ A272 10 FC            djnz 1B
 902+ A274
 903+ A274 C9               ret
 904+ A275
 905+ A275              ; --------------------------------------------------------------------------------------
 906+ A275              ;
 907+ A275              ;   29/09/24
 908+ A275              ;
 909+ A275
 910+ A275              Motor_Disparos_Amadeus
 911+ A275
 912+ A275 21 1D 89         ld hl,Disparo_Amad+1
 913+ A278
 914+ A278 34               inc (hl)
 915+ A279 35               dec (hl)
 916+ A27A
 917+ A27A C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A27B
 919+ A27B              ;   Esta caja contiene un disparo.
 920+ A27B
 921+ A27B CD 82 A2         call Consulta_Impacto
 922+ A27E CC 9B A2         call z,Mueve_disparo_Amadeus
 923+ A281
 924+ A281 C9               ret
 925+ A282
 926+ A282              ; ----------------------
 927+ A282              ;
 928+ A282              ;
 929+ A282              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A282              ;
 931+ A282              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A282
 933+ A282
 934+ A282              Consulta_Impacto
 935+ A282
 936+ A282              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A282              ;   _sea lo más coherente posible.
 938+ A282
 939+ A282 E5               push hl
 940+ A283 2B               dec hl
 941+ A284 CD 77 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A287 E1               pop hl
 943+ A288 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A289
 945+ A289 C8               ret z
 946+ A28A
 947+ A28A 3A 68 8C         ld a,(Impacto2)
 948+ A28D CB DF            set 3,a
 949+ A28F 32 68 8C         ld (Impacto2),a
 950+ A292
 951+ A292 E5               push hl
 952+ A293 CD 64 A3         call Genera_coordenadas_de_disparo_Amadeus
 953+ A296 E1               pop hl
 954+ A297 CD B4 A2         call Elimina_disparo_Amadeus
 955+ A29A
 956+ A29A C9               ret
 957+ A29B
 958+ A29B              ; ----------------------
 959+ A29B              ;
 960+ A29B              ;
 961+ A29B              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A29B
 963+ A29B              Mueve_disparo_Amadeus
 964+ A29B
 965+ A29B CD 4D 91         call Extrae_address
 966+ A29E
 967+ A29E CD 63 9A         call PreviousScan
 968+ A2A1 CD 63 9A         call PreviousScan
 969+ A2A4 CD 63 9A         call PreviousScan
 970+ A2A7 CD 63 9A         call PreviousScan
 971+ A2AA
 972+ A2AA              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A2AA
 974+ A2AA 7C               ld a,h
 975+ A2AB D6 40            sub $40
 976+ A2AD EB               ex de,hl
 977+ A2AE 38 04            jr c,Elimina_disparo_Amadeus
 978+ A2B0
 979+ A2B0               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A2B0
 981+ A2B0 73               ld (hl),e
 982+ A2B1 23               inc hl
 983+ A2B2 72               ld (hl),d
 984+ A2B3
 985+ A2B3 C9               ret
 986+ A2B4
 987+ A2B4              ; ----------------------
 988+ A2B4              ;
 989+ A2B4              ;   29/9/24
 990+ A2B4
 991+ A2B4              Elimina_disparo_Amadeus
 992+ A2B4
 993+ A2B4              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A2B4              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A2B4
 996+ A2B4              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A2B4              ;   	defw 0											; Puntero de impresión.
 998+ A2B4
 999+ A2B4 2B               dec hl
1000+ A2B5 2B               dec hl
1001+ A2B6
1002+ A2B6 AF               xor a
1003+ A2B7 77               ld (hl),a
1004+ A2B8 23               inc hl
1005+ A2B9 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A2BA
1007+ A2BA 23               inc hl
1008+ A2BB 77               ld (hl),a
1009+ A2BC 23               inc hl
1010+ A2BD 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A2BE
1012+ A2BE 3E 01            ld a,1
1013+ A2C0 32 52 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A2C3
1015+ A2C3 CD 46 A2         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A2C6
1017+ A2C6 AF               xor a
1018+ A2C7 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A2C8
1020+ A2C8 C9               ret
1021+ A2C9
1022+ A2C9              ; --------------------------------------------------------------------------------------
1023+ A2C9              ;
1024+ A2C9              ;   13/10/24
1025+ A2C9              ;
1026+ A2C9
1027+ A2C9              Pinta_disparos_Amadeus
1028+ A2C9
1029+ A2C9 06 02            ld b,2
1030+ A2CB ED 73 39 8C      ld (Stack),sp
1031+ A2CF ED 7B 47 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A2D3 D1           3 pop de
1033+ A2D4 14               inc d
1034+ A2D5 15               dec d
1035+ A2D6 28 1C            jr z,1F
1036+ A2D8 E1               pop hl
1037+ A2D9
1038+ A2D9              Imprime_scanlines_en_pantalla
1039+ A2D9
1040+ A2D9              ; 1er scanline
1041+ A2D9
1042+ A2D9 1A               ld a,(de)
1043+ A2DA AE               xor (hl)
1044+ A2DB 77               ld (hl),a
1045+ A2DC
1046+ A2DC 1C               inc e
1047+ A2DD 2C               inc l
1048+ A2DE
1049+ A2DE 1A               ld a,(de)
1050+ A2DF AE               xor (hl)
1051+ A2E0 77               ld (hl),a
1052+ A2E1
1053+ A2E1 1D               dec e
1054+ A2E2 E1               pop hl
1055+ A2E3
1056+ A2E3              ; 2º scanline
1057+ A2E3
1058+ A2E3 1A               ld a,(de)
1059+ A2E4 AE               xor (hl)
1060+ A2E5 77               ld (hl),a
1061+ A2E6
1062+ A2E6 1C               inc e
1063+ A2E7 2C               inc l
1064+ A2E8
1065+ A2E8 1A               ld a,(de)
1066+ A2E9 AE               xor (hl)
1067+ A2EA 77               ld (hl),a
1068+ A2EB
1069+ A2EB 1D               dec e
1070+ A2EC
1071+ A2EC 18 06            jr 1F
1072+ A2EE
1073+ A2EE ED 7B 45 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A2F2 18 DF            jr 3B
1075+ A2F4 10 F8        1 djnz 2B
1076+ A2F6 ED 7B 39 8C      ld sp,(Stack)
1077+ A2FA C9               ret
1078+ A2FB
1079+ A2FB              ; --------------------------------------------------------------------------------------
1080+ A2FB              ;
1081+ A2FB              ;   13/10/24
1082+ A2FB              ;
1083+ A2FB              ;   Modifica: HL,BC y DE.
1084+ A2FB
1085+ A2FB
1086+ A2FB              Genera_datos_de_impresion_disparos_Amadeus
1087+ A2FB
1088+ A2FB ED 73 39 8C      ld (Stack),sp
1089+ A2FF 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A302 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A303
1092+ A303 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A304 15               dec d
1094+ A305
1095+ A305 28 0E            jr z,Salida
1096+ A307
1097+ A307              Genera_scanlines_de_disparo_Amadeus
1098+ A307
1099+ A307 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A308              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A308 ED 7B 45 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A30C
1103+ A30C C1               pop bc
1104+ A30D C1               pop bc
1105+ A30E C1               pop bc
1106+ A30F
1107+ A30F E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A310 CD 63 9A         call PreviousScan
1109+ A313 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A314 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A315
1112+ A315              Salida
1113+ A315
1114+ A315 ED 7B 39 8C      ld sp,(Stack)
1115+ A319
1116+ A319 C9               ret
1117+ A31A
1118+ A31A              ; --------------------------------------------------------------------------------------
1119+ A31A              ;
1120+ A31A              ;   12/09/24
1121+ A31A              ;
1122+ A31A
1123+ A31A              Genera_disparo_Amadeus
1124+ A31A
1125+ A31A              ;*  Exclusiones.
1126+ A31A
1127+ A31A 3A 52 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A31D A7               and a
1129+ A31E C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A31F
1131+ A31F 3D               dec a
1132+ A320 32 52 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A323
1134+ A323              Define_puntero_objeto_disparo
1135+ A323
1136+ A323              ;   Inicializamos contador.
1137+ A323
1138+ A323 06 00            ld b,0
1139+ A325
1140+ A325 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A328 2C               inc l
1142+ A329
1143+ A329 3E 80            ld a,$80
1144+ A32B BE               cp (hl)
1145+ A32C 28 0D            jr z,1F
1146+ A32E
1147+ A32E 04               inc b
1148+ A32F
1149+ A32F 3E 60            ld a,$60
1150+ A331 BE               cp (hl)
1151+ A332 28 07            jr z,1F
1152+ A334
1153+ A334
1154+ A334 04               inc b
1155+ A335
1156+ A335 3E 18            ld a,$18
1157+ A337 BE               cp (hl)
1158+ A338 28 01            jr z,1F
1159+ A33A
1160+ A33A 04               inc b
1161+ A33B
1162+ A33B              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A33B
1164+ A33B              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A33B
1166+ A33B CD 63 9A     1 call PreviousScan
1167+ A33E
1168+ A33E 78               ld a,b
1169+ A33F CB 3F            srl a
1170+ A341 28 03            jr z,4F
1171+ A343
1172+ A343              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A343 E5               push hl
1174+ A344 18 02            jr 5F
1175+ A346 2D           4 dec l
1176+ A347 E5               push hl
1177+ A348              ; ---
1178+ A348
1179+ A348              ;   Calcula el Puntero_objeto del disparo.
1180+ A348
1181+ A348 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A34B 04               inc b
1183+ A34C 05               dec b
1184+ A34D 28 04            jr z,2F
1185+ A34F
1186+ A34F              ;   Nos desplazamos por el índice de disparos.
1187+ A34F
1188+ A34F 2C           3 inc l
1189+ A350 2C               inc l
1190+ A351 10 FC            djnz 3B
1191+ A353
1192+ A353              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A353 CD 4D 91     2 call Extrae_address
1194+ A356 E5               push hl
1195+ A357              ; ---
1196+ A357
1197+ A357              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A357              ; HL en el 1er .db de la caja.
1199+ A357
1200+ A357 21 1C 89         ld hl,Disparo_Amad
1201+ A35A
1202+ A35A 06 02            ld b,2
1203+ A35C
1204+ A35C D1           6 pop de
1205+ A35D 73               ld (hl),e
1206+ A35E 23               inc hl
1207+ A35F 72               ld (hl),d
1208+ A360 23               inc hl
1209+ A361
1210+ A361 10 F9            djnz 6B
1211+ A363
1212+ A363 C9               ret
1213+ A364
1214+ A364              Genera_coordenadas_de_disparo_Amadeus
1215+ A364
1216+ A364              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A364              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A364              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A364
1220+ A364 CD 4D 91         call Extrae_address
1221+ A367 CD 5F 95         call Genera_coordenadas
1222+ A36A
1223+ A36A 3D               dec a
1224+ A36B
1225+ A36B 21 6B 8C         ld hl,Coordenadas_disparo_certero
1226+ A36E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A36F 23               inc hl
1228+ A370 3A EB 8B         ld a,(Coordenada_X)
1229+ A373 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A374
1231+ A374 AF               xor a
1232+ A375 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A376
1234+ A376 C9               ret
1235+ A377
1236+ A377              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A377              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A377              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A377
1240+ A377              ; ----------------------------------------------
1241+ A377              ;
1242+ A377              ;   27/08/24
1243+ A377              ;
1244+ A377              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A377              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A377
1247+ A377              Detecta_impacto_en_disparo_de_Amadeus
1248+ A377
1249+ A377              Extraccion_de_datos
1250+ A377
1251+ A377 13               inc de
1252+ A378 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A379
1254+ A379 5E               ld e,(hl)
1255+ A37A 23               inc hl
1256+ A37B 56               ld d,(hl)
1257+ A37C
1258+ A37C 23               inc hl
1259+ A37D
1260+ A37D 4E               ld c,(hl)
1261+ A37E 23               inc hl
1262+ A37F 46               ld b,(hl)
1263+ A380
1264+ A380 C5               push bc
1265+ A381 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A382
1267+ A382              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A382
1269+ A382 CD 63 9A         call PreviousScan
1270+ A385 CD 63 9A         call PreviousScan
1271+ A388
1272+ A388              Detecta_impacto_
1273+ A388
1274+ A388 1A               ld a,(de)
1275+ A389 A6               and (hl)
1276+ A38A C0               ret nz
1277+ A38B
1278+ A38B 13               inc de
1279+ A38C 23               inc hl
1280+ A38D
1281+ A38D 1A               ld a,(de)
1282+ A38E A6               and (hl)
1283+ A38F C9               ret
1284+ A390
1285+ A390              ; -------------------------------------------------------------------------------------------------------------
1286+ A390              ;
1287+ A390              ;   25/11//24
1288+ A390              ;
1289+ A390              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A390              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A390              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A390              ;
1293+ A390              ;   MODIFICA: HL,DE,BC y A.
1294+ A390              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A390              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A390
1297+ A390              Colision_Entidad_Amadeus
1298+ A390
1299+ A390              ; Posible contacto de entidad con Amadeus. ?????
1300+ A390
1301+ A390              ; Exclusiones:
1302+ A390
1303+ A390 3A 8A 8C         ld a,(Shield)
1304+ A393 A7               and a
1305+ A394 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A395
1307+ A395 21 61 8C         ld hl,Ctrl_3
1308+ A398 CB 76            bit 6,(hl)
1309+ A39A C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A39B
1311+ A39B 21 68 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A39E CB 56            bit 2,(hl)
1313+ A3A0 C0               ret nz
1314+ A3A1
1315+ A3A1 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A3A4 FE 14        	cp $14
1317+ A3A6 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A3A7
1319+ A3A7 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A3AA A7               and a
1321+ A3AB C0               ret nz
1322+ A3AC
1323+ A3AC              Genera_coordenadas_X
1324+ A3AC
1325+ A3AC              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A3AC              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A3AC
1328+ A3AC              ;   Limpiamos almacenes.
1329+ A3AC
1330+ A3AC              ;    call Limpia_Coordenadas_X
1331+ A3AC
1332+ A3AC              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A3AC
1334+ A3AC 21 6D 8C         ld hl,Coordenadas_X_Entidad
1335+ A3AF DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A3B2 CD D8 A3         call Guarda_coordenadas_X
1337+ A3B5
1338+ A3B5              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A3B5
1340+ A3B5 3A AF 89         ld a,(CX_Amadeus)
1341+ A3B8 CD D8 A3         call Guarda_coordenadas_X
1342+ A3BB
1343+ A3BB DD E5            push ix
1344+ A3BD CD EC A3         call Compara_coordenadas_X
1345+ A3C0 DD E1            pop ix
1346+ A3C2
1347+ A3C2 C0               ret nz
1348+ A3C3
1349+ A3C3 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A3C5 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A3C8
1352+ A3C8 DD 7D            ld a,ixl
1353+ A3CA C6 04            add 4
1354+ A3CC DD 6F            ld ixl,a
1355+ A3CE
1356+ A3CE DD 22 69 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A3D2
1358+ A3D2 21 68 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A3D5 CB D6            set 2,(hl)
1360+ A3D7
1361+ A3D7 C9               ret
1362+ A3D8
1363+ A3D8               ; ----- ----- ----- ----- -----
1364+ A3D8
1365+ A3D8 77           Guarda_coordenadas_X ld (hl),a
1366+ A3D9 3C               inc a
1367+ A3DA 2C               inc l
1368+ A3DB 77               ld (hl),a
1369+ A3DC 3C               inc a
1370+ A3DD 2C               inc l
1371+ A3DE 77               ld (hl),a
1372+ A3DF 2C               inc l
1373+ A3E0 C9               ret
1374+ A3E1
1375+ A3E1 AF           Limpia_Coordenadas_X xor a
1376+ A3E2 06 06            ld b,6
1377+ A3E4 21 70 8C         ld hl,Coordenadas_X_Amadeus
1378+ A3E7 77           1 ld (hl),a
1379+ A3E8 23               inc hl
1380+ A3E9 10 FC            djnz 1B
1381+ A3EB C9               ret
1382+ A3EC
1383+ A3EC              ; ----- ----- ----- ----- -----
1384+ A3EC
1385+ A3EC              Compara_coordenadas_X
1386+ A3EC
1387+ A3EC DD 21 6D 8C      ld ix,Coordenadas_X_Entidad
1388+ A3F0 DD 7E 00         ld a,(ix+0)
1389+ A3F3 CD 01 A4         call Comparando
1390+ A3F6 C8               ret z
1391+ A3F7
1392+ A3F7 3C               inc a
1393+ A3F8 CD 10 A4         call Comparando_1
1394+ A3FB C8               ret z
1395+ A3FC
1396+ A3FC 3C               inc a
1397+ A3FD CD 10 A4         call Comparando_1
1398+ A400 C9               ret
1399+ A401
1400+ A401              ; ----- ----- ----- ----- -----
1401+ A401              ;
1402+ A401              ;   4/12/23
1403+ A401              ;
1404+ A401              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A401
1406+ A401              Comparando
1407+ A401
1408+ A401 DD 2C            inc ixl
1409+ A403 DD 2C            inc ixl
1410+ A405 DD 2C            inc ixl
1411+ A407
1412+ A407 DD 46 00         ld b,(ix+0)
1413+ A40A DD 4E 01         ld c,(ix+1)
1414+ A40D DD 56 02         ld d,(ix+2)
1415+ A410
1416+ A410 B8           Comparando_1 cp b
1417+ A411 C8               ret z
1418+ A412 B9               cp c
1419+ A413 C8               ret z
1420+ A414 BA               cp d
1421+ A415 C9               ret
1422+ A416
1423+ A416              ; -----------------------------------------------------------------------
1424+ A416              ;
1425+ A416              ;   04/7/24
1426+ A416              ;
1427+ A416
1428+ A416              Detecta_colision_nave_entidad
1429+ A416
1430+ A416              ; Exclusiones:
1431+ A416
1432+ A416              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A416
1434+ A416 21 68 8C     	ld hl,Impacto2
1435+ A419 CB 56        	bit 2,(hl)
1436+ A41B C8           	ret z
1437+ A41C
1438+ A41C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A41C
1440+ A41C 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A41F CD 4D 91         call Extrae_address
1442+ A422 54               ld d,h
1443+ A423 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A424
1445+ A424 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A427 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A429 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A42C
1449+ A42C C5           1 push bc
1450+ A42D 06 03            ld b,3
1451+ A42F E5               push hl
1452+ A430
1453+ A430              ; .db
1454+ A430
1455+ A430 1A           3 ld a,(de)
1456+ A431 A7               and a
1457+ A432 20 03            jr nz,4F
1458+ A434
1459+ A434 2C               inc l
1460+ A435 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A437
1462+ A437 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A439 28 04            jr z,2F
1464+ A43B
1465+ A43B              ; Impacto.
1466+ A43B FD 2D            dec iyl
1467+ A43D 28 22            jr z,5F
1468+ A43F
1469+ A43F 1C           2 inc e
1470+ A440 10 EE            djnz 3B
1471+ A442
1472+ A442 E1               pop hl
1473+ A443
1474+ A443              ; Hay salto de línea en el puntero de impresión ???
1475+ A443
1476+ A443 7C               ld a,h
1477+ A444 D6 57            sub $57
1478+ A446 20 0A            jr nz,6F
1479+ A448
1480+ A448              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A448
1482+ A448 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A44B 3E 20            ld a,$20
1484+ A44D A7               and a
1485+ A44E 85               add l
1486+ A44F 6F               ld l,a
1487+ A450 18 01            jr 7F
1488+ A452
1489+ A452 24           6 inc h
1490+ A453
1491+ A453 C1           7 pop bc
1492+ A454 10 D6            djnz 1B
1493+ A456
1494+ A456              ;   Fin de la comparativa.
1495+ A456
1496+ A456              ;   NO HAY COLISIÓN !!!!!.
1497+ A456              ;
1498+ A456              ;   .db (Impacto) de Amadeus a "0".
1499+ A456              ;   RES el bit2 de (Impacto2).
1500+ A456              ;
1501+ A456              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A456              ;   Lo colocamos a "0".
1503+ A456
1504+ A456 21 68 8C         ld hl,Impacto2
1505+ A459 CB 96            res 2,(hl)
1506+ A45B 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A45E 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A460 C9               ret
1509+ A461
1510+ A461              ;   COLISIÓN !!!!!.
1511+ A461              ;
1512+ A461              ;   .db (Impacto) de Amadeus a "1".
1513+ A461              ;   SET el bit3 de (Impacto2).
1514+ A461              ;
1515+ A461              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A461
1517+ A461 E1           5 pop hl
1518+ A462 C1               pop bc
1519+ A463
1520+ A463 21 B2 89         ld hl,Impacto_Amadeus
1521+ A466 36 01            ld (hl),1
1522+ A468 21 68 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A46B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A46D
1525+ A46D 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A470 2A 69 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A473
1528+ A473 23               inc hl
1529+ A474 23               inc hl
1530+ A475 23               inc hl
1531+ A476
1532+ A476 73               ld (hl),e
1533+ A477 23               inc hl
1534+ A478 72               ld (hl),d
1535+ A479
1536+ A479              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A479
1538+ A479 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A47C 21 B5 89         ld hl,Pamm_Amadeus
1540+ A47F
1541+ A47F 73               ld (hl),e
1542+ A480 23               inc hl
1543+ A481 72               ld (hl),d
1544+ A482
1545+ A482 C9               ret
1546+ A483
1547+ A483
1548+ A483
# file closed: Disparo.asm
2247  A483
2248  A483              	SAVESNA "Pruebas.sna", START
2249  A483
2250  A483
2251  A483
2252  A483
# file closed: Banco_de_pruebas.asm
