# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 33 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DE 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 44 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 19 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 40 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 40 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 83 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 83 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 83 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 83 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906 00           Ctrl_3 db 0												; Byte de control de propósito general.
 304  8907
 305  8907              ;														DESCRIPCIÓN:
 306  8907              ;
 307  8907              ;														BIT 0,
 308  8907
 309  8907              ; Gestión de ENTIDADES y CAJAS.
 310  8907
 311  8907 00 00        Puntero_store_caja defw 0
 312  8909 00 00        Puntero_restore_caja defw 0
 313  890B 00 00        Indice_restore_caja defw 0
 314  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890E 00           Numero_parcial_de_entidades db 0
 316  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8911              ;														; _ (Numero_de_malotes)="0".
 321  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8915              ;														; _ puntero (Indice_entidades).
 324  8915
 325  8915
 326  8915              ;---------------------------------------------------------------------------------------------------------------
 327  8915              ;
 328  8915              ;	2/9/23
 329  8915              ;
 330  8915              ;	Álbumes.
 331  8915
 332  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8917              ;														; _variable para almacenar lo posición del puntero_
 334  8917              ; 														; _de pila, SP.
 335  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891B 00 00        Stack_snapshot defw 0
 339  891D 00 00        Stack_snapshot_disparos defw 0
 340  891F
 341  891F 00 00        End_Snapshot defw 0
 342  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8923              ;														; _el snapshot de los registros del siguiente disparo.
 345  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8925 00 00        End_Snapshot_1 defw 0
 348  8927 00 00        End_Snapshot_disparos_1 defw 0
 349  8929 00 00        End_Snapshot_2 defw 0
 350  892B 00 00        End_Snapshot_disparos_2 defw 0
 351  892D 00 00        End_Snapshot_3 defw 0
 352  892F 00 00        End_Snapshot_disparos_3 defw 0
 353  8931
 354  8931 00 00        Puntero_indice_album_de_fotos defw 0
 355  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8935
 357  8935 00 00        Puntero_indice_End_Snapshot defw 0
 358  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8939 00 00        Puntero_de_End_Snapshot defw 0
 360  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893D
 362  893D 00           Semaforo db 0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893E              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893E
 365  893E              ;---------------------------------------------------------------------------------------------------------------
 366  893E
 367  893E              ; Gestión de Disparos.
 368  893E
 369  893E 00           Numero_de_disparotes db 0
 370  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 371  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 372  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 373  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 374  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 375  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 376  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 377  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 378  8946              ;														; _produzca colisión.
 379  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 380  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 381  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 382  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 383  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 384  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 385  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 386  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 387  8951
 388  8951              ;---------------------------------------------------------------------------------------------------------------
 389  8951
 390  8951              ; Relojes y temporizaciones.
 391  8951
 392  8951 00           Contador_de_frames db 0
 393  8952 00           Contador_de_frames_2 db 0
 394  8953
 395  8953 04           Clock_explosion db 4
 396  8954 1E           Clock_Entidades_en_curso db 30
 397  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 398  8956              ;														; Repite la oleada de entidades.
 399  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 400  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 401  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 402  8959
 403  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 404  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 405  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 406  895C
 407  895C              ;---------------------------------------------------------------------------------------------------------------
 408  895C
 409  895C              ; Gestión de NIVELES.
 410  895C
 411  895C 00           Nivel db 0												; Nivel actual del juego.
 412  895D 00 00        Puntero_indice_NIVELES defw 0
 413  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 414  8961              ; 														; _ que definen el NIVEL.
 415  8961              ; Y todo comienza aquí .....
 416  8961              ;
 417  8961              ; Rutina principal *************************************************************************************************************************************************************************
 418  8961              ;
 419  8961              ;	14/11/22
 420  8961
 421  8961              START
 422  8961
 423  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 424  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 425  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 426  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 427  896A F3           	DI
 428  896B
 429  896B 3E 07        	ld a,%00000111
 430  896D CD 6D 99     	call Cls
 431  8970
 432  8970 CD 5C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 433  8973
 434  8973              ; INICIALIZACIÓN.
 435  8973
 436  8973 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 437  8976
 438  8976 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 439  8979
 440  8979 CD 7F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 441  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 442  897C CD 95 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 443  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 444  897F              ; ----------
 445  897F
 446  897F CD 0C 8D     	call Restore_entidad
 447  8982
 448  8982 21 0E 89     	ld hl,Numero_parcial_de_entidades
 449  8985 46           	ld b,(hl)
 450  8986 04           	inc b
 451  8987 05           	dec b
 452  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 453  898A
 454  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 455  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 456  898A              ;	Pintamos el resto de entidades:
 457  898A
 458  898A              ;	INICIA ENTIDADES !!!!!
 459  898A
 460  898A C5           1 push bc  												; Guardo el contador de entidades.
 461  898B CD 50 8B     	call Inicia_entidad
 462  898E C1           	pop bc
 463  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 464  8991
 465  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 466  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 467  8991
 468  8991 3A 03 89     	ld a,(Ctrl_1)
 469  8994 CB 5F        	bit 3,a
 470  8996 20 00        	jr nz,5F											; Loop
 471  8998
 472  8998              ; 	INICIA AMADEUS !!!!!
 473  8998
 474  8998              3
 475  8998
 476  8998              ;	call Restore_Amadeus
 477  8998              ;	call Inicia_Puntero_objeto
 478  8998              ;	call Draw
 479  8998              ;	call Guarda_foto_registros
 480  8998              ;	call Guarda_datos_de_borrado_Amadeus
 481  8998
 482  8998              ;	ld de,Amadeus_db
 483  8998              ;	call Store_Amadeus
 484  8998
 485  8998              ; 	INICIA DISPAROS !!!!!
 486  8998
 487  8998              ;	call Inicia_Puntero_Disparo_Entidades
 488  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 489  8998
 490  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 491  8998
 492  8998 CD 7F 8B     5 call Inicia_punteros_de_cajas
 493  899B CD 0C 8D     	call Restore_entidad
 494  899E
 495  899E 3A 03 89     	ld a,(Ctrl_1)
 496  89A1 CB 5F        	bit 3,a
 497  89A3 28 07        	jr z,6F
 498  89A5
 499  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 500  89A5
 501  89A5 21 03 89     	ld hl,Ctrl_1
 502  89A8 CB 9E        	res 3,(hl)
 503  89AA 18 03        	jr Main
 504  89AC
 505  89AC
 506  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 507  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 508  89AC              ; _ para situarnos en el siguiente album.
 509  89AC
 510  89AC CD C6 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 511  89AF
 512  89AF
 513  89AF              ; ------------------------------------
 514  89AF
 515  89AF              Main
 516  89AF              ;
 517  89AF              ;	3/8/23
 518  89AF
 519  89AF FB            	ei
 520  89B0
 521  89B0 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 522  89B3 47           	ld b,a
 523  89B4 3A 51 89     	ld a,(Contador_de_frames)
 524  89B7 B8           	cp b
 525  89B8 20 18        	jr nz,13F
 526  89BA
 527  89BA 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 528  89BD 47           	ld b,a
 529  89BE 3A 0F 89     	ld a,(Entidades_en_curso)
 530  89C1 B8           	cp b
 531  89C2 28 0E        	jr z,13F
 532  89C4 30 0C        	jr nc,13F
 533  89C6
 534  89C6 3C           	inc a
 535  89C7 32 0F 89     	ld (Entidades_en_curso),a
 536  89CA
 537  89CA 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 538  89CD
 539  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 540  89CD              ;! _ IMPREDECIBLE !!!!
 541  89CD
 542  89CD C6 64        	add 100
 543  89CF 32 54 89     	ld (Clock_Entidades_en_curso),a
 544  89D2
 545  89D2              ; Habilita disparos.
 546  89D2
 547  89D2 21 56 89     13 ld hl,Disparo_Amadeus
 548  89D5 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 549  89D8 CD 31 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 550  89DB
 551  89DB 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 552  89DE 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 553  89E1 CD 31 9D     	call Habilita_disparos
 554  89E4
 555  89E4              ; COLISIONES.
 556  89E4
 557  89E4 CD 42 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 558  89E7
 559  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 560  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 561  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 562  89E7
 563  89E7 AF           	xor a
 564  89E8 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 565  89EB
 566  89EB CD 7F 8B     	call Inicia_punteros_de_cajas
 567  89EE CD 0C 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 568  89F1              ; 														; _ en DRAW.
 569  89F1 3A C6 88     	ld a,(Filas)
 570  89F4 A7           	and a
 571  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 572  89F7 CD 1E 8D     	call Incrementa_punteros_de_cajas
 573  89FA 18 F2        	jr 12B
 574  89FC
 575  89FC              ; ---------------------------------------------------------------------------------------
 576  89FC
 577  89FC 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 578  89FF 47               ld b,a
 579  8A00 A7           	and a
 580  8A01 20 14        	jr nz,11F
 581  8A03
 582  8A03 21 03 89     	ld hl,Ctrl_1
 583  8A06 CB 66        	bit 4,(hl)
 584  8A08 C2 95 8A     	jp nz,16F
 585  8A0B
 586  8A0B 21 03 89     	ld hl,Ctrl_1
 587  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 588  8A10
 589  8A10 3A 51 89     	ld a,(Contador_de_frames)
 590  8A13 3C           	inc a
 591  8A14 32 55 89     	ld (Activa_recarga_cajas),a
 592  8A17
 593  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 594  8A17
 595  8A17 3A 0F 89     11 ld a,(Entidades_en_curso)
 596  8A1A A7           	and a
 597  8A1B CA 95 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 598  8A1E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 599  8A1F
 600  8A1F              ; Código que ejecutamos con cada entidad:
 601  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 602  8A1F
 603  8A1F C5           15 push bc 												; Nº de entidades en curso.
 604  8A20
 605  8A20              ; Impacto ???
 606  8A20
 607  8A20 3A DF 88     	ld a,(Impacto)
 608  8A23 A7           	and a
 609  8A24 28 32        	jr z,8F
 610  8A26
 611  8A26              ; Hay Impacto en esta entidad.
 612  8A26
 613  8A26 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 614  8A29 35           	dec (hl)
 615  8A2A 20 63        	jr nz,17F
 616  8A2C
 617  8A2C              ;! Velocidad de la animación de la explosión.
 618  8A2C
 619  8A2C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 620  8A2E              ;														; _,(velocidad de la explosión).
 621  8A2E
 622  8A2E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 623  8A2E 18 FE        	jr $
 624  8A30
 625  8A30 CD CD 8D     	call Repone_datos_de_borrado
 626  8A33 CD 25 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 627  8A36
 628  8A36
 629  8A36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 630  8A36
 631  8A36 3A 01 89     	ld a,(Ctrl_2)
 632  8A39 CB 4F        	bit 1,a
 633  8A3B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 634  8A3D
 635  8A3D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 636  8A3D
 637  8A3D 3A CE 88     	ld a,(CTRL_DESPLZ)
 638  8A40 A7           	and a
 639  8A41 20 08        	jr nz,18F
 640  8A43
 641  8A43 21 84 84     	ld hl,Indice_Explosion_2x2-2
 642  8A46 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 643  8A49 18 06        	jr 19F
 644  8A4B
 645  8A4B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 646  8A4E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 647  8A51
 648  8A51 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 649  8A54 CB CE        	set 1,(hl)
 650  8A56 18 22        	jr 7F
 651  8A58
 652  8A58              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 653  8A58              ; _con las coordenadas de la entidad almacenada en DRAW.
 654  8A58
 655  8A58 3A 03 89     8 ld a,(Ctrl_1)
 656  8A5B CB 57        	bit 2,a
 657  8A5D 28 1B        	jr z,7F
 658  8A5F
 659  8A5F 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 660  8A62 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 661  8A63              ;														; E contiene la coordenada_X del disparo.
 662  8A63 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 663  8A66              ;														; H FILA, (Coordenada_y de la entidad).
 664  8A66 A7           	and a
 665  8A67 ED 52        	sbc hl,de
 666  8A69
 667  8A69 CD 79 92     	call Determina_resultado_comparativa
 668  8A6C
 669  8A6C 78           	ld a,b
 670  8A6D A7           	and a
 671  8A6E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 672  8A70
 673  8A70              ; ----- ----- -----
 674  8A70
 675  8A70 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 676  8A72 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 677  8A75
 678  8A75 21 03 89     	ld hl,Ctrl_1
 679  8A78 CB 96        	res 2,(hl)
 680  8A7A
 681  8A7A CD EC 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 682  8A7D
 683  8A7D 3A F0 88     	ld a,(Ctrl_0)
 684  8A80 CB 67        	bit 4,a
 685  8A82 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 686  8A84
 687  8A84              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 688  8A84              ; [[[
 689  8A84 CD A7 8D     	call Detecta_disparo_entidad
 690  8A87              ; ]]]
 691  8A87
 692  8A87 CD 60 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 693  8A8A              ;	call Guarda_datos_de_borrado
 694  8A8A
 695  8A8A 21 F0 88     	ld hl,Ctrl_0
 696  8A8D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 697  8A8F
 698  8A8F CD D1 8C     17 call Store_Restore_cajas
 699  8A92
 700  8A92 C1           	pop bc
 701  8A93 10 8A        	djnz 15B
 702  8A95
 703  8A95              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 704  8A95              ; Hemos gestionado todas las unidades.
 705  8A95              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 706  8A95
 707  8A95              ;	ld hl,Ctrl_1
 708  8A95              ;	res 2,(hl)
 709  8A95
 710  8A95 CD C6 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 711  8A98              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 712  8A98              ; ----------------------------------------
 713  8A98
 714  8A98 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 715  8A9B CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 716  8A9D CA AF 89     	jp z,Main
 717  8AA0
 718  8AA0 3A 51 89     	ld a,(Contador_de_frames)
 719  8AA3 47           	ld b,a
 720  8AA4 3A 55 89     	ld a,(Activa_recarga_cajas)
 721  8AA7 B8           	cp b
 722  8AA8 28 08        	jr z,20F
 723  8AAA
 724  8AAA 21 03 89     	ld hl,Ctrl_1
 725  8AAD CB E6        	set 4,(hl)
 726  8AAF C3 AF 89     	jp Main
 727  8AB2
 728  8AB2 21 03 89     20 ld hl,Ctrl_1
 729  8AB5 CB A6        	res 4,(hl)
 730  8AB7
 731  8AB7 3A 51 89     	ld a,(Contador_de_frames)
 732  8ABA
 733  8ABA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 734  8ABA              ;! _ IMPREDECIBLE !!!!
 735  8ABA
 736  8ABA C6 0A        	add 10
 737  8ABC 32 54 89     	ld (Clock_Entidades_en_curso),a
 738  8ABF
 739  8ABF C3 76 89     	jp 4B
 740  8AC2
 741  8AC2 C9           	ret
 742  8AC3
 743  8AC3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 744  8AC3
 745  8AC3              Gestiona_Amadeus
 746  8AC3
 747  8AC3 3E 04            ld a,4
 748  8AC5 D3 FE        	out ($fe),a											; Azul.
 749  8AC7
 750  8AC7 CD 33 8D     	call Restore_Amadeus
 751  8ACA
 752  8ACA              ;! Activa/desactiva impacto con Amadeus.
 753  8ACA
 754  8ACA 3A DF 88     	ld a,(Impacto)
 755  8ACD A7           	and a
 756  8ACE 20 FE        	jr nz,$
 757  8AD0
 758  8AD0 CD 3D 8B     	call Mov_Amadeus
 759  8AD3
 760  8AD3 3A F0 88     	ld a,(Ctrl_0)
 761  8AD6 CB 67        	bit 4,a
 762  8AD8 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 763  8ADA
 764  8ADA CD 60 8B     	call Guarda_foto_entidad_a_pintar
 765  8ADD CD AD 8D     	call Guarda_datos_de_borrado_Amadeus
 766  8AE0
 767  8AE0 21 F0 88     14 ld hl,Ctrl_0
 768  8AE3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 769  8AE5
 770  8AE5 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 771  8AE8 CD 45 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 772  8AEB
 773  8AEB              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 774  8AEB
 775  8AEB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 776  8AEB
 777  8AEB              ;	call Calcula_numero_de_disparotes
 778  8AEB
 779  8AEB C9           	ret
 780  8AEC
 781  8AEC              ; --------------------------------------------------------------------------------------------------------------
 782  8AEC              ;
 783  8AEC              ;	27/05/23
 784  8AEC
 785  8AEC              Mov_obj
 786  8AEC
 787  8AEC 3A 01 89     	ld a,(Ctrl_2)
 788  8AEF CB 4F        	bit 1,a
 789  8AF1 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 790  8AF3
 791  8AF3              ; Explosión:
 792  8AF3
 793  8AF3 3A 02 89     	ld a,(Frames_explosion)
 794  8AF6 A7           	and a
 795  8AF7 20 11        	jr nz,4F
 796  8AF9
 797  8AF9              ; Una alimaña menos!!!!!!!!!1
 798  8AF9
 799  8AF9 CD 4E 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 800  8AFC 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 801  8AFF 35           	dec (hl)
 802  8B00 21 0F 89     	ld hl,Entidades_en_curso
 803  8B03 35           	dec (hl)
 804  8B04 21 0D 89     	ld hl,Numero_de_entidades
 805  8B07 35           	dec (hl)
 806  8B08 18 32        	jr 3F
 807  8B0A
 808  8B0A              ; -----
 809  8B0A
 810  8B0A              ;	`Movemos´ la explosión.
 811  8B0A
 812  8B0A 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 813  8B0D 23           	inc hl
 814  8B0E 23           	inc hl
 815  8B0F 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 816  8B12 CD 83 8C     	call Extrae_address
 817  8B15 22 CA 88     	ld (Puntero_objeto),hl
 818  8B18
 819  8B18 21 02 89     	ld hl,Frames_explosion
 820  8B1B 35           	dec (hl)
 821  8B1C
 822  8B1C              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 823  8B1C 18 1E        	jr 3F
 824  8B1E
 825  8B1E AF           2 xor a
 826  8B1F 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 827  8B22
 828  8B22              ; Movemos Entidades malignas.
 829  8B22
 830  8B22 CD DC 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 831  8B25
 832  8B25 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 833  8B28 CB 67        	bit 4,a
 834  8B2A C8           	ret z
 835  8B2B
 836  8B2B              ; Ha habido desplazamiento de la entidad maligna.
 837  8B2B              ; Ha llegado a zona de AMADEUS ???
 838  8B2B
 839  8B2B 3A CD 88     	ld a,(Coordenada_y)
 840  8B2E FE 14        	cp $14
 841  8B30 D4 07 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 842  8B33              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 843  8B33              ; ---------
 844  8B33
 845  8B33 CD 67 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 846  8B36 CD CD 8D     	call Repone_datos_de_borrado
 847  8B39 CD 25 8C     	call Limpia_Variables_de_borrado
 848  8B3C
 849  8B3C C9           3 ret													; _de la misma.
 850  8B3D
 851  8B3D              ; --------------------------------------------------------------------------------------------------------------
 852  8B3D              ;
 853  8B3D              ;	29/1/23
 854  8B3D
 855  8B3D              Mov_Amadeus
 856  8B3D
 857  8B3D CD 70 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 858  8B40
 859  8B40 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 860  8B43 CB 67        	bit 4,a
 861  8B45 C8           	ret z
 862  8B46
 863  8B46              ; ---------
 864  8B46
 865  8B46 CD 67 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 866  8B49 CD BD 8D     	call Repone_datos_de_borrado_Amadeus
 867  8B4C CD 25 8C     	call Limpia_Variables_de_borrado
 868  8B4F
 869  8B4F C9           	ret
 870  8B50
 871  8B50              ; -----------------------------------------------------------------------------------
 872  8B50
 873  8B50 CD 89 8C     Inicia_entidad	call Inicia_Puntero_objeto
 874  8B53 CD 81 99     	call Recompone_posicion_inicio
 875  8B56 CD 60 93     	call Draw
 876  8B59 CD A0 7F     	call Guarda_foto_registros
 877  8B5C              ;	call Guarda_datos_de_borrado
 878  8B5C CD D1 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 879  8B5F C9           	ret
 880  8B60
 881  8B60              ; --------------------------------------------------------------------------------------------------------------
 882  8B60              ;
 883  8B60              ;	31/08/23
 884  8B60              ;
 885  8B60              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 886  8B60              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 887  8B60
 888  8B60              Guarda_foto_entidad_a_pintar
 889  8B60
 890  8B60              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 891  8B60
 892  8B60 CD 60 93     	call Draw
 893  8B63 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 894  8B66 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 895  8B67
 896  8B67              ; --------------------------------------------------------------------------------------------------------------
 897  8B67              ;
 898  8B67              ;	19/9/23
 899  8B67
 900  8B67 21 C6 88     Prepara_var_pintado ld hl,Filas
 901  8B6A 11 E6 88     	ld de,Variables_de_pintado
 902  8B6D 01 08 00     	ld bc,8
 903  8B70 ED B0        	ldir
 904  8B72 C9           	ret
 905  8B73
 906  8B73              ; --------------------------------------------------------------------------------------------------------------
 907  8B73
 908  8B73 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 909  8B76 11 C6 88     	ld de,Filas
 910  8B79 01 08 00     	ld bc,8
 911  8B7C ED B0        	ldir
 912  8B7E C9           	ret
 913  8B7F
 914  8B7F              ; *************************************************************************************************************************************************************
 915  8B7F              ;
 916  8B7F              ; 8/1/23
 917  8B7F              ;
 918  8B7F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 919  8B7F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 920  8B7F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 921  8B7F
 922  8B7F              ; Destruye HL y DE !!!!!
 923  8B7F
 924  8B7F              Inicia_punteros_de_cajas
 925  8B7F
 926  8B7F 21 8C 85     	ld hl,Indice_de_cajas
 927  8B82 CD 83 8C         call Extrae_address
 928  8B85 22 07 89         ld (Puntero_store_caja),hl
 929  8B88 21 8E 85     	ld hl,Indice_de_cajas+2
 930  8B8B 22 0B 89     	ld (Indice_restore_caja),hl
 931  8B8E CD 83 8C     	call Extrae_address
 932  8B91 22 09 89     	ld (Puntero_restore_caja),hl
 933  8B94 C9               ret
 934  8B95
 935  8B95              ; ---------------------------------------------------------------
 936  8B95              ;
 937  8B95              ;	9/8/23
 938  8B95              ;
 939  8B95              ;	Inicialización y gestión de álbumes de fotos y cajas.
 940  8B95
 941  8B95              Inicia_punteros_de_albumes_y_malotes
 942  8B95
 943  8B95 21 EC 84     	ld hl,Indice_album_de_fotos
 944  8B98 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 945  8B9B CD 83 8C     	call Extrae_address
 946  8B9E 22 1B 89     	ld (Stack_snapshot),hl
 947  8BA1
 948  8BA1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 949  8BA4 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 950  8BA7 CD 83 8C     	call Extrae_address
 951  8BAA 22 1D 89     	ld (Stack_snapshot_disparos),hl
 952  8BAD
 953  8BAD 21 FC 84     	ld hl,Indice_End_Snapshot
 954  8BB0 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 955  8BB3 CD 83 8C     	call Extrae_address
 956  8BB6 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 957  8BB9
 958  8BB9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 959  8BBC 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 960  8BBF CD 83 8C     	call Extrae_address
 961  8BC2 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 962  8BC5
 963  8BC5 C9           	ret
 964  8BC6
 965  8BC6              ;	23/9/23
 966  8BC6
 967  8BC6              Avanza_puntero_de_album_de_fotos_y_malotes
 968  8BC6
 969  8BC6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 970  8BC6
 971  8BC6              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 972  8BC6              ; Estamos en el último álbum del índice???.
 973  8BC6              ;
 974  8BC6
 975  8BC6 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 976  8BC9 01 F2 84     	ld bc,Indice_album_de_fotos+6
 977  8BCC A7           	and a
 978  8BCD ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 979  8BCF 20 0C        	jr nz,1F								 		; El buffer está lleno. HALT.
 980  8BD1
 981  8BD1              ; Estamos en Album_de_fotos_3.
 982  8BD1              ; Configuramos el semáforo de álbumes para indicar que todos están completos.
 983  8BD1
 984  8BD1 21 3D 89     	ld hl,Semaforo
 985  8BD4 CB DE        	set 3,(hl)
 986  8BD6
 987  8BD6 21 03 89     	ld hl,Ctrl_1
 988  8BD9 CB EE        	set 5,(hl)
 989  8BDB 76           	halt
 990  8BDC C9           	ret
 991  8BDD
 992  8BDD 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
 993  8BE0 23           	inc hl
 994  8BE1 23           	inc hl
 995  8BE2 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 996  8BE5 CD 83 8C     	call Extrae_address
 997  8BE8 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 998  8BEB
 999  8BEB 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1000  8BEE 23           	inc hl
1001  8BEF 23           	inc hl
1002  8BF0 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1003  8BF3 CD 83 8C     	call Extrae_address
1004  8BF6 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1005  8BF9
1006  8BF9 CD 9B 73     	call Actualiza_semaforo
1007  8BFC
1008  8BFC C9           	ret
1009  8BFD
1010  8BFD              ; *************************************************************************************************************************************************************
1011  8BFD              ;
1012  8BFD              ; 8/1/23
1013  8BFD              ;
1014  8BFD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1015  8BFD
1016  8BFD 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1017  8C00 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1018  8C03 C9           	ret
1019  8C04 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1020  8C07 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1021  8C0A C9           	ret
1022  8C0B
1023  8C0B              ; -------------------------------------------------------------------------------------------------------------
1024  8C0B              ;
1025  8C0B              ; 21/9/23
1026  8C0B              ;
1027  8C0B
1028  8C0B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1029  8C0B
1030  8C0B              Limpia_album_Amadeus
1031  8C0B
1032  8C0B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1033  8C0E 7E           	ld a,(hl)
1034  8C0F A7           	and a
1035  8C10 C8           	ret z
1036  8C11
1037  8C11 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1038  8C14 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1039  8C17 01 0B 00     	ld bc,11
1040  8C1A AF           	xor a
1041  8C1B 77           	ld (hl),a
1042  8C1C ED B0        	ldir
1043  8C1E
1044  8C1E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1045  8C21 22 23 89     	ld (End_Snapshot_Amadeus),hl
1046  8C24
1047  8C24 C9           	ret
1048  8C25
1049  8C25 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1050  8C28 11 E1 88     	ld de,Variables_de_borrado+1
1051  8C2B 01 05 00     	ld bc,5
1052  8C2E AF           	xor a
1053  8C2F 77           	ld (hl),a
1054  8C30 ED B0        	ldir
1055  8C32 C9           	ret
1056  8C33
1057  8C33              ; -------------------------------------------------------------------------------------------------------------
1058  8C33              ;
1059  8C33              ; 8/9/23
1060  8C33              ;
1061  8C33
1062  8C33              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1063  8C33              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1064  8C33
1065  8C33              Calcula_numero_de_malotes
1066  8C33
1067  8C33 21 00 70     	ld hl,Album_de_fotos
1068  8C36 EB           	ex de,hl
1069  8C37 2A 1F 89     	ld hl,(End_Snapshot)
1070  8C3A
1071  8C3A 7C           	ld a,h
1072  8C3B A7           	and a
1073  8C3C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1074  8C3E
1075  8C3E 06 00        4 ld b,0
1076  8C40 7D           	ld a,l
1077  8C41 93           	sub e
1078  8C42 28 07        	jr z,1F
1079  8C44
1080  8C44              ; Nº de malotes no es "0".
1081  8C44
1082  8C44 D6 06        2 sub 6
1083  8C46 04           	inc b
1084  8C47 A7           	and a
1085  8C48 20 FA        	jr nz,2B
1086  8C4A 78           	ld a,b
1087  8C4B
1088  8C4B 32 10 89     1 ld (Numero_de_malotes),a
1089  8C4E C9           	ret
1090  8C4F
1091  8C4F              ; -------------------------------------------------------------------------------------------------------------
1092  8C4F              ;
1093  8C4F              ; 8/9/23
1094  8C4F              ;
1095  8C4F
1096  8C4F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1097  8C4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1098  8C4F
1099  8C4F              Calcula_malotes_Amadeus
1100  8C4F
1101  8C4F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1102  8C52 EB           	ex de,hl
1103  8C53 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1104  8C56
1105  8C56 7C           	ld a,h
1106  8C57 A7           	and a
1107  8C58 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1108  8C5A
1109  8C5A 06 00        	ld b,0
1110  8C5C 7D           	ld a,l
1111  8C5D 93           	sub e
1112  8C5E 28 07        	jr z,1F
1113  8C60
1114  8C60              ; Nº de malotes no es "0".
1115  8C60
1116  8C60 D6 06        2 sub 6
1117  8C62 04           	inc b
1118  8C63 A7           	and a
1119  8C64 20 FA        	jr nz,2B
1120  8C66 78           	ld a,b
1121  8C67
1122  8C67 32 10 89     1 ld (Numero_de_malotes),a
1123  8C6A C9           	ret
1124  8C6B
1125  8C6B              ; -------------------------------------------------------------------------------------------------------------
1126  8C6B              ;
1127  8C6B              ; 28/2/23
1128  8C6B              ;
1129  8C6B
1130  8C6B              Calcula_numero_de_disparotes
1131  8C6B
1132  8C6B 21 50 71     	ld hl,Album_de_fotos_disparos
1133  8C6E EB           	ex de,hl
1134  8C6F 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1135  8C72
1136  8C72 06 00        	ld b,0
1137  8C74 7D           	ld a,l
1138  8C75 93           	sub e
1139  8C76 28 07        	jr z,1F
1140  8C78
1141  8C78              ; Nº de malotes no es "0".
1142  8C78
1143  8C78 D6 06        2 sub 6
1144  8C7A 04           	inc b
1145  8C7B A7           	and a
1146  8C7C 20 FA        	jr nz,2B
1147  8C7E 78           	ld a,b
1148  8C7F
1149  8C7F 32 3E 89     1 ld (Numero_de_disparotes),a
1150  8C82 C9           	ret
1151  8C83
1152  8C83              ; *************************************************************************************************************************************************************
1153  8C83              ;
1154  8C83              ; 20/10/22
1155  8C83              ;
1156  8C83              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1157  8C83              ;
1158  8C83              ; Destruye el puntero y DE !!!!!
1159  8C83
1160  8C83 5E           Extrae_address ld e,(hl)
1161  8C84 23           	inc hl
1162  8C85 56           	ld d,(hl)
1163  8C86 2B           	dec hl
1164  8C87 EB           	ex de,hl
1165  8C88 C9           	ret
1166  8C89
1167  8C89              ; *************************************************************************************************************************************************************
1168  8C89              ;
1169  8C89              ;	7/2/23
1170  8C89              ;
1171  8C89              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1172  8C89              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1173  8C89              ;
1174  8C89              ;   Destruye HL y BC !!!!!,
1175  8C89              ;
1176  8C89              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1177  8C89              ;					"0" ..... Izquierda.
1178  8C89
1179  8C89              Inicia_Puntero_objeto
1180  8C89
1181  8C89 3A DA 88     	ld a,(Cuad_objeto)
1182  8C8C E6 01        	and 1
1183  8C8E F5           	push af
1184  8C8F CC AD 8C     	call z,Inicia_puntero_objeto_izq
1185  8C92 F1           	pop af
1186  8C93 28 2B        	jr z,1F
1187  8C95 CD 9A 8C     	call Inicia_puntero_objeto_der
1188  8C98 18 26        	jr 1F
1189  8C9A
1190  8C9A              ; Arrancamos desde la parte izquierda de la pantalla.
1191  8C9A              ; Iniciamos (Indice_Sprite_der).
1192  8C9A
1193  8C9A 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1194  8C9D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1195  8CA0 CD 83 8C     	call Extrae_address
1196  8CA3 22 CA 88     	ld (Puntero_objeto),hl
1197  8CA6
1198  8CA6 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1199  8CA9 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1200  8CAC C9           	ret
1201  8CAD
1202  8CAD              ; Arrancamos desde la parte derecha de la pantalla.
1203  8CAD              ; Iniciamos (Indice_Sprite_izq).
1204  8CAD
1205  8CAD 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1206  8CB0 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1207  8CB3 CD 83 8C     	call Extrae_address
1208  8CB6 22 CA 88     	ld (Puntero_objeto),hl
1209  8CB9
1210  8CB9 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1211  8CBC 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1212  8CBF C9           	ret
1213  8CC0
1214  8CC0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1215  8CC0
1216  8CC0 21 40 83     1 ld hl,Amadeus
1217  8CC3 ED 4B CA 88  	ld bc,(Puntero_objeto)
1218  8CC7 B7 ED 42     	sub hl,bc
1219  8CCA C0           	ret nz
1220  8CCB 21 F0 88     	ld hl,Ctrl_0
1221  8CCE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1222  8CD0 C9           	ret 												; _de nuestra nave en los extremos.
1223  8CD1
1224  8CD1              ; *************************************************************************************************************************************************************
1225  8CD1              ;
1226  8CD1              ;	14/5/23
1227  8CD1              ;
1228  8CD1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1229  8CD1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1230  8CD1
1231  8CD1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1232  8CD1              ;	_de la 2ª y 3ª entidad respectivamente.
1233  8CD1
1234  8CD1              Store_Restore_cajas
1235  8CD1
1236  8CD1 E5           	push hl
1237  8CD2 D5           	push de
1238  8CD3 C5            	push bc
1239  8CD4
1240  8CD4              ;	STORE !!!!!
1241  8CD4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1242  8CD4
1243  8CD4 21 C6 88     	ld hl,Filas
1244  8CD7 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1245  8CDB 01 3D 00     	ld bc,61
1246  8CDE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1247  8CE0
1248  8CE0              ; 	Entidad_sospechosa. 20/4/23
1249  8CE0
1250  8CE0 3A DF 88     	ld a,(Impacto)
1251  8CE3 A7           	and a
1252  8CE4 28 0C        	jr z,1F
1253  8CE6
1254  8CE6 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1255  8CE9 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1256  8CEC A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1257  8CED ED 4A        	adc hl,bc 											; _ "0" más adelante.
1258  8CEF 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1259  8CF2
1260  8CF2              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1261  8CF2
1262  8CF2 2A 09 89     1 ld hl,(Puntero_restore_caja)
1263  8CF5 7E           	ld a,(hl)
1264  8CF6 A7           	and a
1265  8CF7 F5           	push af
1266  8CF8 28 08        	jr z,2F
1267  8CFA
1268  8CFA 11 C6 88     	ld de,Filas
1269  8CFD 01 3D 00     	ld bc,61
1270  8D00 ED B0        	ldir
1271  8D02
1272  8D02 CD 1E 8D     2 call Incrementa_punteros_de_cajas
1273  8D05
1274  8D05 F1           	pop af
1275  8D06 28 EA        	jr z,1B
1276  8D08
1277  8D08 C1           	pop bc
1278  8D09 D1           	pop de
1279  8D0A E1           	pop hl
1280  8D0B
1281  8D0B C9           	ret
1282  8D0C
1283  8D0C              ; **************************************************************************************************
1284  8D0C              ;
1285  8D0C              ;	12/05/23
1286  8D0C              ;
1287  8D0C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1288  8D0C
1289  8D0C E5           Restore_entidad push hl
1290  8D0D D5           	push de
1291  8D0E C5            	push bc
1292  8D0F
1293  8D0F 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1294  8D12 11 C6 88     	ld de,Filas
1295  8D15 01 3D 00     	ld bc,61
1296  8D18 ED B0        	ldir
1297  8D1A
1298  8D1A C1           	pop bc
1299  8D1B D1           	pop de
1300  8D1C E1           	pop hl
1301  8D1D C9           	ret
1302  8D1E
1303  8D1E              ; **************************************************************************************************
1304  8D1E              ;
1305  8D1E              ;	08/05/23
1306  8D1E              ;
1307  8D1E              ;	Incrementamos los dos punteros de entidades. (+1).
1308  8D1E
1309  8D1E              Incrementa_punteros_de_cajas
1310  8D1E
1311  8D1E 2A 09 89     	ld hl,(Puntero_restore_caja)
1312  8D21 22 07 89     	ld (Puntero_store_caja),hl
1313  8D24 2A 0B 89     	ld hl,(Indice_restore_caja)
1314  8D27 23           	inc hl
1315  8D28 23           	inc hl
1316  8D29 22 0B 89     	ld (Indice_restore_caja),hl
1317  8D2C CD 83 8C         call Extrae_address
1318  8D2F 22 09 89         ld (Puntero_restore_caja),hl
1319  8D32 C9               ret
1320  8D33
1321  8D33              ; **************************************************************************************************
1322  8D33              ;
1323  8D33              ;	25/01/23
1324  8D33              ;
1325  8D33              ;	Restore_Amadeus
1326  8D33              ;
1327  8D33              ;	Cargamos en DRAW los parámetros de Amadeus.
1328  8D33              ;
1329  8D33
1330  8D33 E5           Restore_Amadeus	push hl
1331  8D34 D5           	push de
1332  8D35 C5            	push bc
1333  8D36 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1334  8D39 11 C6 88     	ld de,Filas
1335  8D3C 01 3D 00     	ld bc,61
1336  8D3F ED B0        	ldir
1337  8D41 C1           	pop bc
1338  8D42 D1           	pop de
1339  8D43 E1           	pop hl
1340  8D44 C9           	ret
1341  8D45
1342  8D45              ; *************************************************************************************************************************************************************
1343  8D45              ;
1344  8D45              ;	29/04/23
1345  8D45              ;
1346  8D45              ;	Store_Amadeus
1347  8D45              ;
1348  8D45              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1349  8D45              ;
1350  8D45              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1351  8D45              ;
1352  8D45              ;	DESTRUYE: HL y BC y DE.
1353  8D45
1354  8D45 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1355  8D48 01 3D 00     	ld bc,61
1356  8D4B ED B0        	ldir
1357  8D4D C9           	ret
1358  8D4E
1359  8D4E              ; -----------------------------------------------------------
1360  8D4E              ;
1361  8D4E              ;	27/04/23
1362  8D4E              ;
1363  8D4E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1364  8D4E              ;
1365  8D4E              ;	Destruye: HL,BC,DE,A
1366  8D4E
1367  8D4E 21 C6 88     Borra_datos_entidad ld hl,Filas
1368  8D51 01 3C 00     	ld bc,60
1369  8D54 AF           	xor a
1370  8D55 77           	ld (hl),a
1371  8D56 11 C7 88     	ld de,Filas+1
1372  8D59 ED B0        	ldir
1373  8D5B C9           	ret
1374  8D5C
1375  8D5C              ; -----------------------------------------------------------
1376  8D5C
1377  8D5C              ; Teclado.
1378  8D5C
1379  8D5C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1380  8D5E DB FE        	in a,($fe)
1381  8D60 E6 01        	and $01
1382  8D62 28 02        	jr z,1f
1383  8D64 18 F6        	jr Pulsa_ENTER
1384  8D66 C9           1 ret
1385  8D67
1386  8D67              ; **************************************************************************************************
1387  8D67              ;
1388  8D67              ; Temporización.
1389  8D67
1390  8D67              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1391  8D67              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1392  8D67              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1393  8D67              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1394  8D67
1395  8D67              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1396  8D67              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1397  8D67              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1398  8D67
1399  8D67              ; A partir de $4f61 no hace falta DELAY.
1400  8D67
1401  8D67              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1402  8D67
1403  8D67 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1404  8D6A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1405  8D6B 78           	LD A,B
1406  8D6C A7           	AND A
1407  8D6D 20 FB        	JR NZ,wait
1408  8D6F C9           	RET
1409  8D70
1410  8D70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1411  8D70              ;
1412  8D70              ;	5/3/23
1413  8D70              ;
1414  8D70              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1415  8D70
1416  8D70              Movimiento_Amadeus
1417  8D70
1418  8D70              ; Disparo.
1419  8D70
1420  8D70 3A 56 89     	ld a,(Disparo_Amadeus)
1421  8D73 A7           	and a
1422  8D74 20 02        	jr nz,1F
1423  8D76 18 15        	jr 2F
1424  8D78
1425  8D78 3E F7        1 ld a,$f7													; "5" para disparar.
1426  8D7A DB FE        	in a,($fe)
1427  8D7C E6 10        	and $10
1428  8D7E
1429  8D7E F5           	push af
1430  8D7F CC 6A 8E     	call z,Genera_disparo
1431  8D82 F1           	pop af
1432  8D83 20 08        	jr nz,2F
1433  8D85
1434  8D85 3A 56 89     	ld a,(Disparo_Amadeus)
1435  8D88 EE 01        	xor 1
1436  8D8A 32 56 89     	ld (Disparo_Amadeus),a
1437  8D8D
1438  8D8D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1439  8D8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1440  8D91 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1441  8D93 CC 3B 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1442  8D96
1443  8D96 3E F7        	ld a,$f7
1444  8D98 DB FE        	in a,($fe)
1445  8D9A E6 01        	and $01
1446  8D9C C8           	ret z
1447  8D9D
1448  8D9D 3E F7        	ld a,$f7
1449  8D9F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1450  8DA1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1451  8DA3 CC 1D 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1452  8DA6 C9           	ret
1453  8DA7
1454  8DA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1455  8DA7              ;
1456  8DA7              ;	Rutina provisional para que los malotes cagen balas.
1457  8DA7
1458  8DA7              Detecta_disparo_entidad
1459  8DA7
1460  8DA7 3A 59 89     	ld a,(Disparo_entidad)
1461  8DAA A7           	and a
1462  8DAB C8           	ret z
1463  8DAC
1464  8DAC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1465  8DAC
1466  8DAC              ;	ld a,$7f				; Detecta SPACE.
1467  8DAC              ;	in a,($fe)
1468  8DAC              ;	and 1
1469  8DAC              ;	ret nz
1470  8DAC
1471  8DAC              ;	call Genera_disparo
1472  8DAC C9           	ret
1473  8DAD
1474  8DAD              ; ----------------------------------------------------------------------
1475  8DAD              ;
1476  8DAD              ;	8/9/23
1477  8DAD
1478  8DAD 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1479  8DB0 2B            	dec hl
1480  8DB1 7E           	ld a,(hl)
1481  8DB2 A7           	and a
1482  8DB3 C8           	ret z										; Salimos si es álbum está vacío.
1483  8DB4
1484  8DB4 11 E5 88     	ld de,Variables_de_borrado+5
1485  8DB7 01 06 00     	ld bc,6
1486  8DBA ED B8        	lddr
1487  8DBC C9           	ret
1488  8DBD
1489  8DBD              ; ----------------------------------------------------------------------
1490  8DBD              ;
1491  8DBD              ;	9/9/23
1492  8DBD
1493  8DBD              Repone_datos_de_borrado_Amadeus
1494  8DBD
1495  8DBD 21 E0 88     	ld hl,Variables_de_borrado
1496  8DC0 11 A0 72     	ld de,Album_de_fotos_Amadeus
1497  8DC3 01 06 00     	ld bc,6
1498  8DC6 ED B0        	ldir
1499  8DC8
1500  8DC8 EB           	ex de,hl
1501  8DC9 22 23 89     	ld (End_Snapshot_Amadeus),hl
1502  8DCC
1503  8DCC C9           	ret
1504  8DCD
1505  8DCD              ; ----------------------------------------------------------------------
1506  8DCD              ;
1507  8DCD              ;	18/9/23
1508  8DCD              ;
1509  8DCD
1510  8DCD              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1511  8DCD              ;	_ Album_de_fotos correspondiente.
1512  8DCD
1513  8DCD              ;	DI.
1514  8DCD
1515  8DCD              Repone_datos_de_borrado
1516  8DCD
1517  8DCD ED 5B 1B 89  	ld de,(Stack_snapshot)
1518  8DD1 21 E0 88     	ld hl,Variables_de_borrado
1519  8DD4 01 06 00     	ld bc,6
1520  8DD7 ED B0        	ldir
1521  8DD9
1522  8DD9 EB           	ex de,hl
1523  8DDA 22 1B 89     	ld (Stack_snapshot),hl
1524  8DDD
1525  8DDD C9           	ret
1526  8DDE
1527  8DDE              ; ----------------------------------------------------------------------
1528  8DDE              ;
1529  8DDE              ;	11/8/23
1530  8DDE
1531  8DDE              Gestiona_entidades
1532  8DDE
1533  8DDE              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1534  8DDE              ; _ , no gestionamos los álbumes de fotos.
1535  8DDE
1536  8DDE 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1537  8DE1 01 EC 84     	ld bc,Indice_album_de_fotos
1538  8DE4 A7           	and a
1539  8DE5 ED 42        	sbc hl,bc
1540  8DE7
1541  8DE7 28 FE        	jr z,$	;! STOP el buffer está vacío. Album_de_fotos no está completo.
1542  8DE9 C8           	ret z
1543  8DEA
1544  8DEA              ;	call Extrae_foto_disparos
1545  8DEA              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1546  8DEA
1547  8DEA CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1548  8DED
1549  8DED              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1550  8DED
1551  8DED 3A 03 89     	ld a,(Ctrl_1)
1552  8DF0 CB 6F        	bit 5,a
1553  8DF2 20 22        	jr nz,1F
1554  8DF4
1555  8DF4              ; No hemos terminado de guardar el último FRAME.
1556  8DF4
1557  8DF4 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1558  8DF7 2B           	dec hl
1559  8DF8 2B           	dec hl
1560  8DF9 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1561  8DFC
1562  8DFC 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1563  8DFF 2B           	dec hl
1564  8E00 2B           	dec hl
1565  8E01 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1566  8E04 CD 83 8C     	call Extrae_address
1567  8E07 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1568  8E0A
1569  8E0A CD 83 8C     	call Extrae_address
1570  8E0D
1571  8E0D              ; Esta vacío este album???
1572  8E0D
1573  8E0D 24           	inc h
1574  8E0E 25           	dec h
1575  8E0F 28 05        	jr z,1F
1576  8E11
1577  8E11              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1578  8E11
1579  8E11 22 1B 89     	ld (Stack_snapshot),hl
1580  8E14 18 09        	jr 2F
1581  8E16
1582  8E16              ; FRAME completo.
1583  8E16
1584  8E16 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1585  8E19 CD 83 8C     	call Extrae_address
1586  8E1C 22 1B 89     	ld (Stack_snapshot),hl
1587  8E1F
1588  8E1F              ;	En este punto:
1589  8E1F
1590  8E1F              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1591  8E1F              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1592  8E1F
1593  8E1F 21 03 89     2 ld hl,Ctrl_1
1594  8E22 CB AE        	res 5,(hl)
1595  8E24
1596  8E24 C9           	ret
1597  8E25
1598  8E25              ; -----------------------------------------------------------------------------------
1599  8E25
1600  8E25              Pinta_Amadeus
1601  8E25
1602  8E25 3E 06        	ld a,6
1603  8E27 D3 FE            out ($fe),a										; Amarillo
1604  8E29
1605  8E29 CD 4F 8C        	call Calcula_malotes_Amadeus
1606  8E2C CD F0 96     	call Extrae_foto_Amadeus
1607  8E2F CD 0B 8C     	call Limpia_album_Amadeus
1608  8E32
1609  8E32 C9           	ret
1610  8E33
1611  8E33              Pinta_entidades
1612  8E33
1613  8E33 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1614  8E36 01 EC 84     	ld bc,Indice_album_de_fotos
1615  8E39 A7           	and a
1616  8E3A ED 42        	sbc hl,bc
1617  8E3C
1618  8E3C              ;	jr z,$
1619  8E3C C8           	ret z
1620  8E3D
1621  8E3D              ; Pintamos siempre que esté completo Album_de_fotos.
1622  8E3D
1623  8E3D CD 33 8C     	call Calcula_numero_de_malotes
1624  8E40 CD 6E 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1625  8E43
1626  8E43 C9           	ret
1627  8E44
1628  8E44              ; -----------------------------------------------------------------------------------
1629  8E44
1630  8E44              Actualiza_relojes
1631  8E44
1632  8E44 21 51 89     	ld hl,Contador_de_frames
1633  8E47 7E           	ld a,(hl)
1634  8E48 FE FF        	cp $ff
1635  8E4A 20 04        	jr nz,1F
1636  8E4C 34           	inc (hl)
1637  8E4D 21 52 89     	ld hl,Contador_de_frames_2
1638  8E50 34           1 inc (hl)											; 0 - 255
1639  8E51 C9           	ret
1640  8E52
1641  8E52              ; ---------------------------------------------------------------
1642  8E52              ;
1643  8E52              ;	27/9/23
1644  8E52
1645  8E52              Guarda_parametros_DRAW
1646  8E52
1647  8E52 21 C6 88     	ld hl,Filas
1648  8E55 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1649  8E58 01 3D 00     	ld bc,61
1650  8E5B ED B0        	ldir
1651  8E5D C9           	ret
1652  8E5E
1653  8E5E              Recupera_parametros_DRAW
1654  8E5E
1655  8E5E 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1656  8E61 11 C6 88     	ld de,Filas
1657  8E64 01 3D 00     	ld bc,61
1658  8E67 ED B0        	ldir
1659  8E69 C9           	ret
1660  8E6A
1661  8E6A              ; ---------------------------------------------------------------
1662  8E6A
1663  8E6A
1664  8E6A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E6A              ; ******************************************************************************************************************************************************************************************
   2+ 8E6A              ;
   3+ 8E6A              ;   21/07/23
   4+ 8E6A              ;
   5+ 8E6A              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E6A              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E6A              ;
   8+ 8E6A              ;
   9+ 8E6A              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E6A              ;
  11+ 8E6A              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E6A              ;               _ hacen las entidades hacia abajo.
  13+ 8E6A              ;
  14+ 8E6A              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E6A              ;
  16+ 8E6A              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E6A              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E6A              ;
  19+ 8E6A              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E6A              ;           _ la bala.
  21+ 8E6A              ;
  22+ 8E6A              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E6A              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E6A              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E6A              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E6A              ;           _ en el momento de generarse la bala)).
  27+ 8E6A
  28+ 8E6A              Genera_disparo
  29+ 8E6A
  30+ 8E6A              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E6A              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E6A              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E6A              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E6A              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E6A              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E6A              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E6A
  38+ 8E6A              ; Exclusiones:
  39+ 8E6A
  40+ 8E6A 3A DE 88         ld a,(Vel_down)
  41+ 8E6D 47               ld b,a
  42+ 8E6E 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E71 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E72 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E73 3A FD 88         ld a,(Columnas)
  46+ 8E76 47               ld b,a
  47+ 8E77 3A C7 88         ld a,(Columns)
  48+ 8E7A B8               cp b
  49+ 8E7B C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E7C
  51+ 8E7C              ; ----- ----- -----
  52+ 8E7C
  53+ 8E7C 3A F0 88         ld a,(Ctrl_0)
  54+ 8E7F CB 77            bit 6,a
  55+ 8E81 20 06            jr nz,14F
  56+ 8E83
  57+ 8E83 3A CD 88         ld a,(Coordenada_y)
  58+ 8E86 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E88 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E89
  61+ 8E89 21 00 80     14 ld hl,Indice_disparo
  62+ 8E8C 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E8F 4F               ld c,a
  64+ 8E90 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E92              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E92              ;                                            ""        ""       "f9", B="1"
  67+ 8E92              ;                                            ""        ""       "fb", B="2"
  68+ 8E92              ;                                            ""        ""       "fb", B="3"
  69+ 8E92 A7               and a
  70+ 8E93 28 10            jr z,1F
  71+ 8E95 E6 01            and 1
  72+ 8E97 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E98
  74+ 8E98 79               ld a,c
  75+ 8E99 16 F9            ld d,$f9
  76+ 8E9B 23           2 inc hl
  77+ 8E9C 23               inc hl
  78+ 8E9D 04               inc b
  79+ 8E9E BA               cp d
  80+ 8E9F 28 04            jr z,1F
  81+ 8EA1 14               inc d
  82+ 8EA2 14               inc d
  83+ 8EA3 18 F6            jr 2B
  84+ 8EA5
  85+ 8EA5 CD 83 8C     1 call Extrae_address
  86+ 8EA8 E5               push hl
  87+ 8EA9 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EAB DD 21 36 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EAF
  90+ 8EAF              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EAF              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EAF
  93+ 8EAF 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EB2 CB 77            bit 6,a
  95+ 8EB4 20 04            jr nz,19F
  96+ 8EB6
  97+ 8EB6 AF               xor a
  98+ 8EB7 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EBA
 100+ 8EBA 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EBD FE 02            cp 2
 102+ 8EBF 38 66            jr c,3F
 103+ 8EC1 28 64            jr z,3F
 104+ 8EC3
 105+ 8EC3              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EC3
 107+ 8EC3 E6 01            and 1
 108+ 8EC5 28 30            jr z,4F
 109+ 8EC7
 110+ 8EC7              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EC7              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EC7              ;
 113+ 8EC7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EC7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EC7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EC7
 117+ 8EC7 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8ECA
 119+ 8ECA              ;   Amadeus o entidad ???.
 120+ 8ECA
 121+ 8ECA 3A F0 88         ld a,(Ctrl_0)
 122+ 8ECD CB 77            bit 6,a
 123+ 8ECF 28 0A            jr z,8F
 124+ 8ED1
 125+ 8ED1              ; 	Dispara Amadeus.
 126+ 8ED1
 127+ 8ED1 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ED3 CD 5F 96         call PreviousScan
 129+ 8ED6 CD 5F 96         call PreviousScan
 130+ 8ED9
 131+ 8ED9              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8ED9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8ED9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8ED9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8ED9
 136+ 8ED9 18 11            jr 10F
 137+ 8EDB
 138+ 8EDB              ; 	Dispara Entidad.
 139+ 8EDB
 140+ 8EDB 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EDE              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EDE
 143+ 8EDE              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EDE              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EDE
 146+ 8EDE C5               push bc
 147+ 8EDF 06 10            ld b,16
 148+ 8EE1 CD 50 96     9 call NextScan
 149+ 8EE4 10 FB            djnz 9B
 150+ 8EE6 C1               pop bc
 151+ 8EE7 CD 51 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EEA 18 06            jr 17F
 153+ 8EEC
 154+ 8EEC              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EEC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EEC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EEC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EEC
 159+ 8EEC CD 51 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EEF CD C6 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EF2              ;                                                      ; _al generar el disparo.
 162+ 8EF2
 163+ 8EF2              ; 	LLegados a este punto tendremos:
 164+ 8EF2              ;
 165+ 8EF2              ;       Puntero_objeto_disparo en IY.
 166+ 8EF2              ;       Rutinas_de_impresion en IX.
 167+ 8EF2              ;       Puntero_de_impresion en HL.
 168+ 8EF2              ;       Impacto/Dirección en BC.
 169+ 8EF2
 170+ 8EF2 CD 59 8F     17 call Almacena_disparo
 171+ 8EF5 18 52            jr 6F                                             ; RET.
 172+ 8EF7
 173+ 8EF7              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EF7              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EF7              ;
 176+ 8EF7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EF7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EF7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EF7
 180+ 8EF7 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8EFA
 182+ 8EFA              ;   Amadeus o entidad ???.
 183+ 8EFA
 184+ 8EFA 3A F0 88         ld a,(Ctrl_0)
 185+ 8EFD CB 77            bit 6,a
 186+ 8EFF 28 0A            jr z,11F
 187+ 8F01
 188+ 8F01              ; 	Dispara Amadeus.
 189+ 8F01
 190+ 8F01 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F03 CD 5F 96         call PreviousScan
 192+ 8F06 CD 5F 96         call PreviousScan
 193+ 8F09
 194+ 8F09              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F09              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F09              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F09
 199+ 8F09 18 11            jr 13F
 200+ 8F0B
 201+ 8F0B              ; 	Dispara Entidad.
 202+ 8F0B
 203+ 8F0B 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F0E              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F0E
 206+ 8F0E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F0E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F0E
 209+ 8F0E C5               push bc
 210+ 8F0F 06 10            ld b,16
 211+ 8F11 CD 50 96     12 call NextScan
 212+ 8F14 10 FB            djnz 12B
 213+ 8F16 C1               pop bc
 214+ 8F17
 215+ 8F17 CD 4A 8F         call Ajusta_disparo_parte_derecha
 216+ 8F1A 18 06            jr 18F
 217+ 8F1C
 218+ 8F1C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F1C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F1C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F1C
 223+ 8F1C CD 4A 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F1F CD C6 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F22              ;                                                       ; _al generar el disparo.
 226+ 8F22
 227+ 8F22              ; LLegados a este punto tendremos:
 228+ 8F22              ;
 229+ 8F22              ;       Puntero_objeto_disparo en IY.
 230+ 8F22              ;       Rutinas_de_impresion en IX.
 231+ 8F22              ;       Puntero_de_impresion en HL.
 232+ 8F22              ;       Impacto/Dirección en BC.
 233+ 8F22
 234+ 8F22 CD 59 8F     18 call Almacena_disparo
 235+ 8F25 18 22            jr 6F                                               ; RET.
 236+ 8F27
 237+ 8F27              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F27
 239+ 8F27 28 11        3 jr z,5F
 240+ 8F29
 241+ 8F29              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F29              ;
 243+ 8F29              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F29              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F29              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F29              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F29
 248+ 8F29              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F29              ;	   ""        ""       "f9", B="1"
 250+ 8F29              ;	   ""        ""       "fb", B="2"
 251+ 8F29              ; 	   ""        ""       "fb", B="3"
 252+ 8F29
 253+ 8F29 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F2C CD 50 96     	call NextScan
 255+ 8F2F
 256+ 8F2F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F2F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F2F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F2F
 261+ 8F2F CD 51 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F32
 263+ 8F32              ; 	No se produce impacto. B="$80"
 264+ 8F32              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F32
 266+ 8F32 01 80 80         ld bc,$8080
 267+ 8F35
 268+ 8F35              ; 	LLegados a este punto tendremos:
 269+ 8F35              ;
 270+ 8F35              ;       Puntero_objeto_disparo en IY.
 271+ 8F35              ;       Rutinas_de_impresion en IX.
 272+ 8F35              ;       Puntero_de_impresion en HL.
 273+ 8F35              ;       Impacto/Dirección en BC.
 274+ 8F35
 275+ 8F35 CD 59 8F         call Almacena_disparo
 276+ 8F38 18 0F            jr 6F                                           ; RET.
 277+ 8F3A
 278+ 8F3A              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F3A              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F3A              ;
 281+ 8F3A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F3A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F3A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F3A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F3A
 286+ 8F3A 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F3D CD 50 96     	call NextScan
 288+ 8F40
 289+ 8F40              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F40              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F40              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F40              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F40
 294+ 8F40 CD 4A 8F         call Ajusta_disparo_parte_derecha
 295+ 8F43
 296+ 8F43              ; 	No se produce impacto. B="$80"
 297+ 8F43              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F43
 299+ 8F43 01 80 80     15 ld bc,$8080
 300+ 8F46
 301+ 8F46              ; 	LLegados a este punto tendremos:
 302+ 8F46              ;
 303+ 8F46              ;       Puntero_objeto_disparo en IY.
 304+ 8F46              ;       Rutinas_de_impresion en IX.
 305+ 8F46              ;       Puntero_de_impresion en HL.
 306+ 8F46              ;       Impacto/Dirección en BC.
 307+ 8F46
 308+ 8F46 CD 59 8F         call Almacena_disparo
 309+ 8F49
 310+ 8F49 C9           6 ret
 311+ 8F4A
 312+ 8F4A              ; ----------------------------------------------------------------
 313+ 8F4A              ;
 314+ 8F4A              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F4A              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F4A              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F4A
 318+ 8F4A 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F4B FE 02            cp 2
 320+ 8F4D 38 01            jr c,1F
 321+ 8F4F 23               inc hl
 322+ 8F50 C9           1 ret
 323+ 8F51
 324+ 8F51 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F52 FE 01        	cp 1
 326+ 8F54 20 01        	jr nz,1F
 327+ 8F56 2B           	dec hl
 328+ 8F57 2B           1 dec hl
 329+ 8F58 C9               ret
 330+ 8F59
 331+ 8F59              ; ----------------------------------------------------------------
 332+ 8F59              ;
 333+ 8F59              ;   25/02/23
 334+ 8F59              ;
 335+ 8F59              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F59              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F59              ;
 338+ 8F59              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F59              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F59
 341+ 8F59              Almacena_disparo
 342+ 8F59
 343+ 8F59 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F5A F1               pop af
 345+ 8F5B 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F5C
 347+ 8F5C 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F5D E6 01            and 1
 349+ 8F5F 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F61              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F61              ; 	Dispara AMADEUS.
 352+ 8F61
 353+ 8F61              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F61              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F61              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F61              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F61
 358+ 8F61 C5               push bc
 359+ 8F62 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F65 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F68 A7               and a
 362+ 8F69 ED 42            sbc hl,bc
 363+ 8F6B CC 04 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F6E C1               pop bc
 365+ 8F6F 28 54            jr z,4F
 366+ 8F71
 367+ 8F71 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F74 23               inc hl
 369+ 8F75 23               inc hl
 370+ 8F76 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F79              ;                                                   ; _ Disparo_(+1).
 372+ 8F79 18 18            jr 2F
 373+ 8F7B
 374+ 8F7B              ; Dispara una entidad.
 375+ 8F7B
 376+ 8F7B C5           1 push bc
 377+ 8F7C 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F7F 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F82 A7               and a
 380+ 8F83 ED 42            sbc hl,bc
 381+ 8F85 CC FD 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F88 C1               pop bc
 383+ 8F89 28 3A            jr z,4F
 384+ 8F8B
 385+ 8F8B 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F8E 23               inc hl
 387+ 8F8F 23               inc hl
 388+ 8F90 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F93              ;                                                   ; _ Disparo_(+1).
 390+ 8F93 CD 83 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F96              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F96              ;
 393+ 8F96              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F96              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F96              ;                                                     Puntero_de_impresion en HL.
 396+ 8F96              ;                                                     Impacto/Dirección en BC.
 397+ 8F96
 398+ 8F96 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F97 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F98 23               inc hl                                          ; _ al siguiente.
 401+ 8F99 A7               and a
 402+ 8F9A 20 C0            jr nz,3B
 403+ 8F9C
 404+ 8F9C 08               ex af,af
 405+ 8F9D ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FA1 F9               ld sp,hl
 407+ 8FA2
 408+ 8FA2 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FA4 F5               push af                                         ; Puntero de impresión.
 410+ 8FA5 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FA7 C5               push bc                                         ; Control.
 412+ 8FA8
 413+ 8FA8 ED 7B 15 89      ld sp,(Stack)
 414+ 8FAC
 415+ 8FAC              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FAC
 417+ 8FAC 21 03 89     	ld hl,Ctrl_1
 418+ 8FAF CB C6        	set 0,(hl)
 419+ 8FB1
 420+ 8FB1 DD E5        	push ix
 421+ 8FB3 E1               pop hl
 422+ 8FB4 F5               push af
 423+ 8FB5 DD E1            pop ix
 424+ 8FB7
 425+ 8FB7 CD A0 7F     	call Guarda_foto_registros
 426+ 8FBA
 427+ 8FBA 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FBD CB 86        	res 0,(hl)
 429+ 8FBF
 430+ 8FBF              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FBF              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FBF
 433+ 8FBF CD 04 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FC2 CD FD 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FC5
 436+ 8FC5 C9           4 ret
 437+ 8FC6
 438+ 8FC6              ; ----------------------------------------------------------------
 439+ 8FC6              ;
 440+ 8FC6              ;   4/3/23
 441+ 8FC6              ;
 442+ 8FC6              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FC6              ;   _ al generarse el disparo.
 444+ 8FC6              ;
 445+ 8FC6              ;       "$80" ..... No se produce colisión.
 446+ 8FC6              ;       "$81" ..... Se produce colisión.
 447+ 8FC6              ;
 448+ 8FC6              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FC6              ;         _ que forman el disparo.
 450+ 8FC6
 451+ 8FC6
 452+ 8FC6              Comprueba_Colision
 453+ 8FC6
 454+ 8FC6              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FC6
 456+ 8FC6 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FC8 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FC9
 459+ 8FC9 CD FF 8F         call Modifica_H_Velocidad_disparo
 460+ 8FCC
 461+ 8FCC 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FCD FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FCF 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FD1
 465+ 8FD1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FD3 CD EF 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FD6
 468+ 8FD6 7B               ld a,e
 469+ 8FD7 E6 01            and 1
 470+ 8FD9 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FDB              ;                                                  ; _ para activar IMPACTO.
 472+ 8FDB E1               pop hl
 473+ 8FDC E5               push hl
 474+ 8FDD CD 50 96         call NextScan
 475+ 8FE0
 476+ 8FE0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FE1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FE3 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FE5              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FE5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FE7 CD EF 8F         call Bucle_2
 482+ 8FEA
 483+ 8FEA 43           1 ld b,e
 484+ 8FEB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FEC FD E1            pop iy
 486+ 8FEE C9               ret
 487+ 8FEF
 488+ 8FEF              ; ---------- ----------
 489+ 8FEF
 490+ 8FEF 06 02        Bucle_2 ld b,2
 491+ 8FF1 FD 7E 00     2 ld a,(iy)
 492+ 8FF4 A6               and (hl)
 493+ 8FF5 28 02            jr z,1F
 494+ 8FF7 1E 81            ld e,$81
 495+ 8FF9 23           1 inc hl
 496+ 8FFA FD 23            inc iy
 497+ 8FFC 10 F3            djnz 2B
 498+ 8FFE C9               ret
 499+ 8FFF
 500+ 8FFF              ; ---------- ----------
 501+ 8FFF              ;
 502+ 8FFF              ;   21/7/23
 503+ 8FFF
 504+ 8FFF              Modifica_H_Velocidad_disparo
 505+ 8FFF
 506+ 8FFF 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9002 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9004 D0               ret nc                                         ; _ incrementamos H.
 509+ 9005 24               inc h
 510+ 9006
 511+ 9006 C9               ret
 512+ 9007
 513+ 9007              ; -------------------------------------------------------------------------------------------------------------
 514+ 9007              ;
 515+ 9007              ;   11/04/23
 516+ 9007              ;
 517+ 9007              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9007              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9007              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9007              ;
 521+ 9007              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9007
 523+ 9007              Compara_coordenadas_X
 524+ 9007
 525+ 9007              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9007              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9007
 528+ 9007              ; Preparamos registros:
 529+ 9007
 530+ 9007 21 CC 88         ld hl,Filas+6
 531+ 900A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 900B 23               inc hl
 533+ 900C 23               inc hl
 534+ 900D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 900E 43               ld b,e
 536+ 900F
 537+ 900F 21 DA 88         ld hl,Filas+20
 538+ 9012 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9013 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 9016 CD 32 92         call Guarda_coordenadas_X
 541+ 9019
 542+ 9019              ; Preparamos registros:
 543+ 9019
 544+ 9019 21 A4 85         ld hl,Amadeus_db+6
 545+ 901C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 901D 23               inc hl
 547+ 901E 23               inc hl
 548+ 901F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9020 7B               ld a,e
 550+ 9021 08               ex af,af'
 551+ 9022 21 B2 85         ld hl,Amadeus_db+20
 552+ 9025 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9026 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 9029 CD 32 92         call Guarda_coordenadas_X
 555+ 902C
 556+ 902C              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 902C              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 902C
 559+ 902C 04               inc b
 560+ 902D 05               dec b
 561+ 902E 28 04            jr z,1F
 562+ 9030 06 03            ld b,3
 563+ 9032 18 02            jr 2F
 564+ 9034 06 02        1 ld b,2
 565+ 9036 08           2 ex af,af'
 566+ 9037 3C               inc a
 567+ 9038 3D               dec a
 568+ 9039 28 04            jr z,5F
 569+ 903B 0E 03            ld c,3
 570+ 903D 18 02            jr 6F
 571+ 903F 0E 02        5 ld c,2
 572+ 9041 79           6 ld a,c
 573+ 9042 08               ex af,af'
 574+ 9043 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 9046 1A           4 ld a,(de)
 576+ 9047 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 904A BE           3 cp (hl)
 578+ 904B 28 0E            jr z,7F
 579+ 904D 23               inc hl
 580+ 904E 0D               dec c
 581+ 904F 20 F9            jr nz,3B
 582+ 9051 13               inc de
 583+ 9052 08               ex af,af'
 584+ 9053 4F               ld c,a
 585+ 9054 08               ex af,af'
 586+ 9055 10 EF            djnz 4B
 587+ 9057
 588+ 9057              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9057
 590+ 9057 CD 6E 92     8 call Limpia_Coordenadas_X
 591+ 905A C9               ret
 592+ 905B
 593+ 905B 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 905D 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9060 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9063 CB D6            set 2,(hl)
 597+ 9065 18 F0            jr 8B
 598+ 9067
 599+ 9067              ; -----------------------------------------------------------------------
 600+ 9067              ;
 601+ 9067              ;   17/04/23
 602+ 9067              ;
 603+ 9067
 604+ 9067              Detecta_colision_nave_entidad
 605+ 9067
 606+ 9067              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9067
 608+ 9067 2A C8 88         ld hl,(Posicion_actual)
 609+ 906A CD AB 95         call Calcula_puntero_de_impresion
 610+ 906D
 611+ 906D              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 906D              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 906D
 614+ 906D DD E5            push ix
 615+ 906F E1               pop hl
 616+ 9070 E5               push hl
 617+ 9071
 618+ 9071              ; ----- ----- -----
 619+ 9071 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9073 06 0A            ld b,10
 621+ 9075 CD A5 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9078 7B               ld a,e
 623+ 9079 FE 05            cp 5
 624+ 907B 38 0E            jr c,3F
 625+ 907D
 626+ 907D              ; LLegados a este punto:
 627+ 907D              ;
 628+ 907D              ;   HAY COLISIÓN !!!!!.
 629+ 907D              ;
 630+ 907D              ;   .db (Impacto) de Amadeus a "1".
 631+ 907D              ;   SET el bit3 de (Impacto2).
 632+ 907D              ;
 633+ 907D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 907D
 635+ 907D 21 B7 85         ld hl,Amadeus_db+25
 636+ 9080 36 01            ld (hl),1
 637+ 9082 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9085 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9087 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9089 18 18            jr 1F
 641+ 908B
 642+ 908B              ; -----
 643+ 908B
 644+ 908B E1           3 pop hl
 645+ 908C CD 50 96         call NextScan
 646+ 908F E5               push hl
 647+ 9090 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9091 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9093 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9095 30 0C            jr nc,1F
 651+ 9097              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9097 10 DC            djnz 2B
 653+ 9099
 654+ 9099              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9099
 656+ 9099              ; LLegados a este punto:
 657+ 9099              ;
 658+ 9099              ;   NO HAY COLISIÓN !!!!!.
 659+ 9099              ;
 660+ 9099              ;   .db (Impacto) de Amadeus a "0".
 661+ 9099              ;   RES el bit2 de (Impacto2).
 662+ 9099              ;
 663+ 9099              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9099              ;   Lo colocamos a "0".
 665+ 9099
 666+ 9099 21 43 89         ld hl,Impacto2
 667+ 909C CB 96            res 2,(hl)
 668+ 909E 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90A1 36 00            ld (hl),0
 670+ 90A3
 671+ 90A3 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90A4 C9               ret
 673+ 90A5
 674+ 90A5               ; ---------- ----------
 675+ 90A5
 676+ 90A5 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90A6 3A C7 88         ld a,(Columns)
 678+ 90A9 47               ld b,a
 679+ 90AA FD 7E 00     2 ld a,(iy)
 680+ 90AD BE               cp (hl)
 681+ 90AE 28 01            jr z,1F
 682+ 90B0
 683+ 90B0 1C               inc e
 684+ 90B1
 685+ 90B1 23           1 inc hl
 686+ 90B2 FD 23            inc iy
 687+ 90B4 10 F4            djnz 2B
 688+ 90B6 C1               pop bc
 689+ 90B7 C9               ret
 690+ 90B8
 691+ 90B8              ; -------------------------------------------------------------------------------------------------------------
 692+ 90B8              ;
 693+ 90B8              ;   13/03/23
 694+ 90B8              ;
 695+ 90B8              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90B8              ;
 697+ 90B8              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90B8
 699+ 90B8 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90BB 7E               ld a,(hl)
 701+ 90BC A7               and a
 702+ 90BD C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90BE
 704+ 90BE 44               ld b,h
 705+ 90BF 4D               ld c,l
 706+ 90C0 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 90C3 E5               push hl
 708+ 90C4 A7               and a
 709+ 90C5 ED 42            sbc hl,bc
 710+ 90C7 E5               push hl
 711+ 90C8 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90C9
 713+ 90C9 E1               pop hl
 714+ 90CA 54               ld d,h
 715+ 90CB 5D               ld e,l
 716+ 90CC 1B               dec de
 717+ 90CD ED B8            lddr                                                ; Limpiamos.
 718+ 90CF
 719+ 90CF 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90D2 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 90D5
 722+ 90D5 C9               ret
 723+ 90D6
 724+ 90D6              ; -------------------------------------------------------------------------------------------------------------
 725+ 90D6              ;
 726+ 90D6              ;   18/07/23
 727+ 90D6              ;
 728+ 90D6
 729+ 90D6              Motor_de_disparos
 730+ 90D6
 731+ 90D6              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90D6
 733+ 90D6 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90D9 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90DC
 736+ 90DC CD 83 8C     2 call Extrae_address
 737+ 90DF 7E               ld a,(hl)
 738+ 90E0 A7               and a
 739+ 90E1 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90E3
 741+ 90E3              ; ----- ----- ----- ----- ----- -----
 742+ 90E3
 743+ 90E3 C5               push bc
 744+ 90E4 CD A8 91         call foto_disparo_a_borrar
 745+ 90E7
 746+ 90E7              ; Existe colisión con este disparo???
 747+ 90E7
 748+ 90E7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90E8 7E               ld a,(hl)
 750+ 90E9 2B               dec hl
 751+ 90EA E6 01            and 1
 752+ 90EC 28 1D            jr z,9F
 753+ 90EE
 754+ 90EE              ;   En este punto:
 755+ 90EE              ;
 756+ 90EE              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90EE              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90EE              ;   _con la entidad).
 759+ 90EE              ;
 760+ 90EE              ;   Disparo_2A defw 0                                ; Control.
 761+ 90EE              ;    defw 0                                          ; Puntero objeto.
 762+ 90EE              ;    defw 0                                          ; Puntero de impresión.
 763+ 90EE              ;    defw 0                                          ; Rutina de impresión.
 764+ 90EE
 765+ 90EE E5               push hl
 766+ 90EF
 767+ 90EF 06 04            ld b,4
 768+ 90F1 23           19 inc hl
 769+ 90F2 10 FD            djnz 19B
 770+ 90F4
 771+ 90F4 CD 83 8C         call Extrae_address
 772+ 90F7 CD 19 9D         call Genera_coordenadas_disparo
 773+ 90FA
 774+ 90FA              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90FA
 776+ 90FA 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90FD 72               ld (hl),d
 778+ 90FE 23               inc hl
 779+ 90FF 73               ld (hl),e
 780+ 9100
 781+ 9100              ; Elimino el disparo de la base de datos.
 782+ 9100
 783+ 9100 E1               pop hl
 784+ 9101 CD 27 92         call Elimina_disparo_de_base_de_datos
 785+ 9104 21 43 89         ld hl,Impacto2
 786+ 9107 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9109
 788+ 9109 18 06            jr 11F
 789+ 910B
 790+ 910B CD D1 91     9 call Mueve_disparo
 791+ 910E CD A8 91         call foto_disparo_a_borrar
 792+ 9111
 793+ 9111 C1           11 pop bc
 794+ 9112 18 04            jr 7F
 795+ 9114
 796+ 9114              ; ----- ----- ----- ----- ----- -----
 797+ 9114
 798+ 9114 ED 42        1 sbc hl,bc
 799+ 9116 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9118
 801+ 9118 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 911B 23               inc hl
 803+ 911C 23               inc hl
 804+ 911D 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9120 18 BA            jr 2B
 806+ 9122
 807+ 9122 CD 04 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9125              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9125
 810+ 9125              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9125
 812+ 9125 01 8A 85         ld bc,Disparo_11
 813+ 9128 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 912B
 815+ 912B CD 83 8C     5 call Extrae_address
 816+ 912E 7E               ld a,(hl)
 817+ 912F A7               and a
 818+ 9130 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9132
 820+ 9132              ; ----- ----- ----- ----- ----- -----
 821+ 9132
 822+ 9132 C5               push bc
 823+ 9133 CD A8 91         call foto_disparo_a_borrar
 824+ 9136
 825+ 9136              ; Existe colisión con este disparo???
 826+ 9136
 827+ 9136 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9137 7E               ld a,(hl)
 829+ 9138 2B               dec hl
 830+ 9139 E6 01            and 1
 831+ 913B 28 4D            jr z,10F
 832+ 913D
 833+ 913D              ;! La colisión se produce con Amadeus???
 834+ 913D              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 913D
 836+ 913D E5               push hl
 837+ 913E
 838+ 913E 06 04            ld b,4
 839+ 9140 23           16 inc hl
 840+ 9141 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9143
 842+ 9143 CD 83 8C         call Extrae_address
 843+ 9146 CD 19 9D         call Genera_coordenadas_disparo
 844+ 9149
 845+ 9149 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 914A FE 16            cp $16
 847+ 914C 38 2A            jr c,15F
 848+ 914E
 849+ 914E
 850+ 914E              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 914E
 852+ 914E D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 914F
 854+ 914F              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 914F
 856+ 914F
 857+ 914F 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9152
 859+ 9152              ; Coordenada X de Amadeus en D.
 860+ 9152
 861+ 9152 7D               ld a,l
 862+ 9153 E6 1F            and $1F
 863+ 9155 57               ld d,a
 864+ 9156
 865+ 9156 21 A6 85         ld hl,Amadeus_db+8
 866+ 9159 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 915A
 868+ 915A 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 915D CD 32 92         call Guarda_coordenadas_X
 870+ 9160
 871+ 9160 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9161
 873+ 9161              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9161
 875+ 9161 06 02            ld b,2
 876+ 9163 C5           20 push bc
 877+ 9164
 878+ 9164 06 03            ld b,3
 879+ 9166 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9169 7E           18 ld a,(hl)
 881+ 916A BA               cp d
 882+ 916B 20 04            jr nz,17F
 883+ 916D
 884+ 916D              ;! Colisión Amadeus !!!!!!!!!!
 885+ 916D
 886+ 916D C1               pop bc
 887+ 916E E1               pop hl
 888+ 916F 18 0D            jr 14F
 889+ 9171
 890+ 9171 23           17 inc hl
 891+ 9172 10 F5            djnz 18B
 892+ 9174
 893+ 9174 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9175
 895+ 9175 C1               pop bc
 896+ 9176 10 EB            djnz 20B
 897+ 9178
 898+ 9178
 899+ 9178              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9178              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9178
 902+ 9178 E1           15 pop hl
 903+ 9179 23               inc hl
 904+ 917A 35               dec (hl)
 905+ 917B 2B               dec hl
 906+ 917C 18 0C            jr 10F
 907+ 917E
 908+ 917E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 917E              ; _ almacén de coordenadas_X de Amadeus.
 910+ 917E
 911+ 917E E5           14 push hl
 912+ 917F CD 27 92         call Elimina_disparo_de_base_de_datos
 913+ 9182 21 43 89         ld hl,Impacto2
 914+ 9185 CB CE            set 1,(hl)
 915+ 9187 E1               pop hl
 916+ 9188 18 06            jr 12F
 917+ 918A
 918+ 918A              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 918A
 920+ 918A CD D1 91     10 call Mueve_disparo
 921+ 918D CD A8 91         call foto_disparo_a_borrar
 922+ 9190 C1           12 pop bc
 923+ 9191
 924+ 9191 18 04            jr 8F
 925+ 9193
 926+ 9193              ; ----- ----- ----- ----- ----- -----
 927+ 9193
 928+ 9193 ED 42        4 sbc hl,bc
 929+ 9195 28 0A            jr z,6F
 930+ 9197
 931+ 9197 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 919A 23               inc hl
 933+ 919B 23               inc hl
 934+ 919C 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 919F 18 8A            jr 5B
 936+ 91A1
 937+ 91A1 CD FD 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91A4 CD 6E 92         call Limpia_Coordenadas_X
 939+ 91A7 C9               ret
 940+ 91A8
 941+ 91A8              ; ------------------------------------------------------------------
 942+ 91A8
 943+ 91A8              foto_disparo_a_borrar
 944+ 91A8
 945+ 91A8 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91A9 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91AA C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91AB
 949+ 91AB E5               push hl
 950+ 91AC 23               inc hl
 951+ 91AD 23               inc hl
 952+ 91AE ED 73 15 89      ld (Stack),sp
 953+ 91B2 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91B3 FD E1            pop iy
 955+ 91B5 DD E1            pop ix
 956+ 91B7 E1               pop hl
 957+ 91B8 ED 7B 15 89      ld sp,(Stack)
 958+ 91BC 3A 03 89         ld a,(Ctrl_1)
 959+ 91BF CB C7            set 0,a
 960+ 91C1 32 03 89         ld (Ctrl_1),a
 961+ 91C4 CD A0 7F         call Guarda_foto_registros
 962+ 91C7 3A 03 89         ld a,(Ctrl_1)
 963+ 91CA CB 87            res 0,a
 964+ 91CC 32 03 89         ld (Ctrl_1),a
 965+ 91CF E1               pop hl
 966+ 91D0 C9               ret
 967+ 91D1
 968+ 91D1              ;---------------------------------------------------
 969+ 91D1              ;
 970+ 91D1              ;   18/07/23
 971+ 91D1              ;
 972+ 91D1
 973+ 91D1              Mueve_disparo
 974+ 91D1
 975+ 91D1              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91D1              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91D1              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91D1
 979+ 91D1 E5               push hl
 980+ 91D2
 981+ 91D2 7E               ld a,(hl)
 982+ 91D3
 983+ 91D3 06 04            ld b,4
 984+ 91D5 23           1 inc hl
 985+ 91D6 10 FD            djnz 1B
 986+ 91D8
 987+ 91D8              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91D8
 989+ 91D8 CD 83 8C         call Extrae_address
 990+ 91DB
 991+ 91DB E6 01            and 1
 992+ 91DD 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91DF
 994+ 91DF              ; Disparo hacia arriba, (Amadeus).
 995+ 91DF
 996+ 91DF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91DF              ; _ de la dificultad.
 998+ 91DF
 999+ 91DF CD 5F 96         call PreviousScan
1000+ 91E2 CD 5F 96         call PreviousScan
1001+ 91E5 CD 5F 96         call PreviousScan
1002+ 91E8 CD 5F 96         call PreviousScan
1003+ 91EB
1004+ 91EB              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91EB
1006+ 91EB 7C               ld a,h
1007+ 91EC FE 40            cp $40
1008+ 91EE 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91F0
1010+ 91F0              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91F0
1012+ 91F0 EB               ex de,hl
1013+ 91F1 06 04            ld b,4
1014+ 91F3 2B           6 dec hl
1015+ 91F4 10 FD            djnz 6B
1016+ 91F6
1017+ 91F6 CD 27 92         call Elimina_disparo_de_base_de_datos
1018+ 91F9 E1               pop hl
1019+ 91FA 18 10            jr 7F
1020+ 91FC
1021+ 91FC              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91FC              ; HL contiene el puntero de impresión del disparo.
1023+ 91FC              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91FC
1025+ 91FC D5           3 push de
1026+ 91FD C5               push bc
1027+ 91FE
1028+ 91FE CD C6 8F         call Comprueba_Colision
1029+ 9201
1030+ 9201              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9201
1032+ 9201 78               ld a,b
1033+ 9202
1034+ 9202 C1               pop bc
1035+ 9203 D1               pop de
1036+ 9204
1037+ 9204 EB               ex de,hl
1038+ 9205
1039+ 9205 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9206 23               inc hl                                      ; _ movimiento.
1041+ 9207 72               ld (hl),d
1042+ 9208
1043+ 9208 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9209
1045+ 9209 23               inc hl                                      ; _ en curso.
1046+ 920A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 920B 2B               dec hl
1048+ 920C
1049+ 920C C9           7 ret
1050+ 920D
1051+ 920D              ; Disparo hacia abajo, (Entidad).
1052+ 920D
1053+ 920D 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9210 47               ld b,a
1055+ 9211
1056+ 9211 CD 50 96     4 call NextScan
1057+ 9214 10 FB            djnz 4B
1058+ 9216
1059+ 9216              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9216
1061+ 9216 7C               ld a,h
1062+ 9217 FE 58            cp $58
1063+ 9219 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 921B
1065+ 921B EB               ex de,hl
1066+ 921C 06 04            ld b,4
1067+ 921E 2B           5 dec hl
1068+ 921F 10 FD            djnz 5B
1069+ 9221
1070+ 9221 CD 27 92         call Elimina_disparo_de_base_de_datos
1071+ 9224 E1               pop hl
1072+ 9225 18 E5            jr 7B
1073+ 9227
1074+ 9227              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9227
1076+ 9227 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 922A AF               xor a
1078+ 922B 77               ld (hl),a
1079+ 922C 54               ld d,h
1080+ 922D 5D               ld e,l
1081+ 922E 13               inc de
1082+ 922F ED B0            ldir
1083+ 9231 C9               ret
1084+ 9232
1085+ 9232              ; -----------------------------------------------------------------
1086+ 9232              ;
1087+ 9232              ;   19/7/23
1088+ 9232              ;
1089+ 9232              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9232              ;
1091+ 9232              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9232              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9232              ;
1094+ 9232              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9232              ;
1096+ 9232              ;   INPUTS:
1097+ 9232              ;
1098+ 9232              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9232              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9232
1101+ 9232              ;   MODIFICA: A, HL, BC y DE.
1102+ 9232
1103+ 9232              Guarda_coordenadas_X
1104+ 9232
1105+ 9232 7B               ld a,e
1106+ 9233 A7               and a
1107+ 9234 20 04            jr nz,1F
1108+ 9236
1109+ 9236 06 02            ld b,2
1110+ 9238 18 02            jr 2F
1111+ 923A
1112+ 923A 06 03        1 ld b,3
1113+ 923C 72           2 ld (hl),d
1114+ 923D 23               inc hl
1115+ 923E 14               inc d
1116+ 923F 10 FB            djnz 2B
1117+ 9241
1118+ 9241 C9               ret
1119+ 9242
1120+ 9242              ; -----------------------------------------------------------------
1121+ 9242              ;
1122+ 9242              ;   12/04/23
1123+ 9242              ;
1124+ 9242
1125+ 9242 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9245 A7               and a
1127+ 9246 C8               ret z
1128+ 9247
1129+ 9247 FE 04            cp 4
1130+ 9249 20 09            jr nz,1F
1131+ 924B
1132+ 924B
1133+ 924B              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 924B
1135+ 924B CD 67 90         call Detecta_colision_nave_entidad
1136+ 924E
1137+ 924E 21 43 89         ld hl,Impacto2
1138+ 9251 CB 5E            bit 3,(hl)
1139+ 9253 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9254
1141+ 9254              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9254              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9254
1144+ 9254 21 43 89     1 ld hl,Impacto2
1145+ 9257 CB 4E            bit 1,(hl)
1146+ 9259 28 07            jr z,2F
1147+ 925B
1148+ 925B 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 925E 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9260 18 0B            jr 3F
1151+ 9262
1152+ 9262 21 43 89     2 ld hl,Impacto2
1153+ 9265 CB 46            bit 0,(hl)
1154+ 9267 C8               ret z
1155+ 9268
1156+ 9268              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9268
1158+ 9268 21 03 89         ld hl,Ctrl_1
1159+ 926B CB D6            set 2,(hl)
1160+ 926D
1161+ 926D C9           3 ret
1162+ 926E
1163+ 926E              ; -----------------------------------------------------------------
1164+ 926E              ;
1165+ 926E              ;   19/7/23
1166+ 926E              ;
1167+ 926E              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 926E
1169+ 926E AF           Limpia_Coordenadas_X xor a
1170+ 926F 06 06            ld b,6
1171+ 9271 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 9274 77           1 ld (hl),a
1173+ 9275 23               inc hl
1174+ 9276 10 FC            djnz 1B
1175+ 9278 C9               ret
1176+ 9279
1177+ 9279              ; -----------------------------------------------------------------
1178+ 9279              ;
1179+ 9279              ;   25/04/23
1180+ 9279              ;
1181+ 9279
1182+ 9279              Determina_resultado_comparativa
1183+ 9279
1184+ 9279              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9279              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9279              ;
1187+ 9279              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9279              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9279              ;
1190+ 9279              ;   SBC HL,DE
1191+ 9279
1192+ 9279              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9279              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9279
1195+ 9279              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9279              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9279
1198+ 9279
1199+ 9279 3A DA 88         ld a,(Cuad_objeto)
1200+ 927C FE 02            cp 2
1201+ 927E 28 26            jr z,2F
1202+ 9280 38 24            jr c,2F
1203+ 9282
1204+ 9282              ; Cuadrantes 3º y 4º
1205+ 9282
1206+ 9282 E6 01            and 1
1207+ 9284 28 10            jr z,4F
1208+ 9286
1209+ 9286              ; Cuadrante 3º
1210+ 9286
1211+ 9286 7C               ld a,h
1212+ 9287 06 00            ld b,0
1213+ 9289
1214+ 9289 CD 14 93         call Compara_cositas_H3
1215+ 928C
1216+ 928C 04               inc b
1217+ 928D 05               dec b
1218+ 928E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 928F
1220+ 928F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9290 06 00            ld b,0
1222+ 9292
1223+ 9292 CD 26 93         call Compara_cositas_L3
1224+ 9295 C9               ret
1225+ 9296
1226+ 9296              ; Cuadrante 4º
1227+ 9296
1228+ 9296 7C           4 ld a,h
1229+ 9297 06 00            ld b,0
1230+ 9299
1231+ 9299 CD 38 93         call Compara_cositas_H4
1232+ 929C
1233+ 929C 04               inc b
1234+ 929D 05               dec b
1235+ 929E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 929F
1237+ 929F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92A0 06 00            ld b,0
1239+ 92A2
1240+ 92A2 CD 4E 93         call Compara_cositas_L4
1241+ 92A5 C9               ret
1242+ 92A6
1243+ 92A6              ; Cuadrantes 1º y 2º.
1244+ 92A6
1245+ 92A6 28 10        2 jr z,3F
1246+ 92A8
1247+ 92A8              ; 1er Cuadrante
1248+ 92A8
1249+ 92A8 7C               ld a,h
1250+ 92A9 06 00            ld b,0
1251+ 92AB
1252+ 92AB CD EC 92         call Compara_cositas_H1
1253+ 92AE
1254+ 92AE 04               inc b
1255+ 92AF 05               dec b
1256+ 92B0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92B1
1258+ 92B1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92B2 06 00            ld b,0
1260+ 92B4
1261+ 92B4 CD 02 93         call Compara_cositas_L1
1262+ 92B7 C9               ret
1263+ 92B8
1264+ 92B8
1265+ 92B8              ; 2º Cuadrante
1266+ 92B8
1267+ 92B8 7C           3 ld a,h
1268+ 92B9 06 00            ld b,0
1269+ 92BB
1270+ 92BB CD C8 92         call Compara_cositas_H2
1271+ 92BE
1272+ 92BE 04               inc b
1273+ 92BF 05               dec b
1274+ 92C0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92C1
1276+ 92C1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92C2 06 00            ld b,0
1278+ 92C4
1279+ 92C4 CD DA 92         call Compara_cositas_L2
1280+ 92C7 C9               ret
1281+ 92C8
1282+ 92C8 A7           Compara_cositas_H2 and a
1283+ 92C9 28 0D            jr z,1F
1284+ 92CB              ;    cp $fd
1285+ 92CB              ;    jr z,1F
1286+ 92CB              ;    cp $fe
1287+ 92CB              ;    jr z,1F
1288+ 92CB FE FF            cp $ff
1289+ 92CD 28 09            jr z,1F
1290+ 92CF FE 01            cp $01
1291+ 92D1 28 05            jr z,1F
1292+ 92D3 FE 02            cp $02
1293+ 92D5 28 01            jr z,1F
1294+ 92D7 C0               ret nz
1295+ 92D8 04           1 inc b
1296+ 92D9 C9               ret
1297+ 92DA
1298+ 92DA A7           Compara_cositas_L2 and a
1299+ 92DB 28 0D            jr z,1F
1300+ 92DD              ;    cp $fd
1301+ 92DD              ;    jr z,1F
1302+ 92DD FE FE            cp $fe
1303+ 92DF 28 09            jr z,1F
1304+ 92E1 FE FF            cp $ff
1305+ 92E3 28 05            jr z,1F
1306+ 92E5 FE 01            cp $01
1307+ 92E7 28 01            jr z,1F
1308+ 92E9              ;    cp $02
1309+ 92E9              ;    jr z,1F
1310+ 92E9 C0               ret nz
1311+ 92EA 04           1 inc b
1312+ 92EB C9               ret
1313+ 92EC
1314+ 92EC A7           Compara_cositas_H1 and a
1315+ 92ED 28 11            jr z,1F
1316+ 92EF              ;    cp $fd
1317+ 92EF              ;    jr z,1F
1318+ 92EF              ;    cp $fe
1319+ 92EF              ;    jr z,1F
1320+ 92EF FE FF            cp $ff
1321+ 92F1 28 0D            jr z,1F
1322+ 92F3 FE 01            cp $01
1323+ 92F5 28 09            jr z,1F
1324+ 92F7 FE 02            cp $02
1325+ 92F9 28 05            jr z,1F
1326+ 92FB FE 03            cp $03
1327+ 92FD 28 01            jr z,1F
1328+ 92FF C0               ret nz
1329+ 9300 04           1 inc b
1330+ 9301 C9               ret
1331+ 9302
1332+ 9302 A7           Compara_cositas_L1 and a
1333+ 9303 28 0D            jr z,1F
1334+ 9305              ;    cp $fd
1335+ 9305              ;    jr z,1F
1336+ 9305              ;    cp $fe
1337+ 9305              ;    jr z,1F
1338+ 9305              ;    cp $ff
1339+ 9305              ;    jr z,1F
1340+ 9305 FE 01            cp $01
1341+ 9307 28 09            jr z,1F
1342+ 9309 FE 02            cp $02
1343+ 930B 28 05            jr z,1F
1344+ 930D FE 03            cp $03
1345+ 930F 28 01            jr z,1F
1346+ 9311 C0               ret nz
1347+ 9312 04           1 inc b
1348+ 9313 C9               ret
1349+ 9314
1350+ 9314 A7           Compara_cositas_H3 and a
1351+ 9315 28 0D            jr z,1F
1352+ 9317              ;    cp $fd
1353+ 9317              ;    jr z,1F
1354+ 9317 FE FE            cp $fe
1355+ 9319 28 09            jr z,1F
1356+ 931B FE FF            cp $ff
1357+ 931D 28 05            jr z,1F
1358+ 931F FE 01            cp $01
1359+ 9321 28 01            jr z,1F
1360+ 9323              ;    cp $02
1361+ 9323              ;    jr z,1F
1362+ 9323              ;    cp $03
1363+ 9323              ;    jr z,1F
1364+ 9323 C0               ret nz
1365+ 9324 04           1 inc b
1366+ 9325 C9               ret
1367+ 9326
1368+ 9326 A7           Compara_cositas_L3 and a
1369+ 9327 28 0D            jr z,1F
1370+ 9329              ;    cp $fd
1371+ 9329              ;    jr z,1F
1372+ 9329              ;    cp $fe
1373+ 9329              ;    jr z,1F
1374+ 9329              ;    cp $ff
1375+ 9329              ;    jr z,1F
1376+ 9329 FE 01            cp $01
1377+ 932B 28 09            jr z,1F
1378+ 932D FE 02            cp $02
1379+ 932F 28 05            jr z,1F
1380+ 9331 FE 03            cp $03
1381+ 9333 28 01            jr z,1F
1382+ 9335 C0               ret nz
1383+ 9336 04           1 inc b
1384+ 9337 C9               ret
1385+ 9338
1386+ 9338 A7           Compara_cositas_H4 and a
1387+ 9339 28 11            jr z,1F
1388+ 933B FE FD            cp $fd
1389+ 933D 28 0D            jr z,1F
1390+ 933F FE FE            cp $fe
1391+ 9341 28 09            jr z,1F
1392+ 9343 FE FF            cp $ff
1393+ 9345 28 05            jr z,1F
1394+ 9347 FE 01            cp $01
1395+ 9349 28 01            jr z,1F
1396+ 934B              ;    cp $02
1397+ 934B              ;    jr z,1F
1398+ 934B              ;    cp $03
1399+ 934B              ;    jr z,1F
1400+ 934B C0               ret nz
1401+ 934C 04           1 inc b
1402+ 934D C9               ret
1403+ 934E
1404+ 934E A7           Compara_cositas_L4 and a
1405+ 934F 28 0D            jr z,1F
1406+ 9351              ;    cp $fd
1407+ 9351              ;    jr z,1F
1408+ 9351 FE FE            cp $fe
1409+ 9353 28 09            jr z,1F
1410+ 9355 FE FF            cp $ff
1411+ 9357 28 05            jr z,1F
1412+ 9359 FE 01            cp $01
1413+ 935B 28 01            jr z,1F
1414+ 935D              ;    cp $02
1415+ 935D              ;    jr z,1F
1416+ 935D              ;    cp $03
1417+ 935D              ;    jr z,1F
1418+ 935D C0               ret nz
1419+ 935E 04           1 inc b
1420+ 935F C9               ret
# file closed: Disparo.asm
1665  9360              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9360              ; ******************************************************************************************************************************************************************************************
   2+ 9360              ;
   3+ 9360              ; 26/06/23
   4+ 9360              ;
   5+ 9360              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9360
   7+ 9360 CD 44 96     Draw call Prepara_draw
   8+ 9363 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9364 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9365 28 05        	jr z,2F
  11+ 9367
  12+ 9367 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 936A 18 0C        	jr 1F
  14+ 936C
  15+ 936C 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 936F 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9372 CD 01 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9375              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9375 CD A4 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9378
  21+ 9378 3A F0 88     1 ld a,(Ctrl_0)
  22+ 937B CB 6F        	bit 5,a
  23+ 937D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 937F
  25+ 937F CD 97 93     	call Comprueba_limite_horizontal
  26+ 9382 CD 27 94     	call Comprueba_limite_vertical
  27+ 9385
  28+ 9385              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9385              ; -----------------------
  30+ 9385              ; -----------------------
  31+ 9385              ; -----------------------
  32+ 9385
  33+ 9385 CD 74 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9388 CD AB 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 938B CD 0A 96     	call Define_rutina_de_impresion
  36+ 938E
  37+ 938E 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9391 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9393 32 F0 88     	ld (Ctrl_0),a
  40+ 9396
  41+ 9396 C9           	ret
  42+ 9397
  43+ 9397              ; *******************************************************************************************************************************************************************************************
  44+ 9397              ;	21/01/23
  45+ 9397              ;
  46+ 9397              ; 	Comprueba_limite_horizontal.
  47+ 9397              ;
  48+ 9397              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9397              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9397              ;
  51+ 9397              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9397              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9397              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9397              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9397
  56+ 9397
  57+ 9397
  58+ 9397 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 939A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 939C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 939E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93A0 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93A3 18 09            jr 6F
  64+ 93A5 CB 5F        1 bit 3,a
  65+ 93A7 28 0A            jr z,2F
  66+ 93A9 E6 F7            and $f7
  67+ 93AB 32 F0 88         ld (Ctrl_0),a
  68+ 93AE CD 01 95     6 call Inicializacion
  69+ 93B1 18 5B            jr 5F
  70+ 93B3 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93B4
  72+ 93B4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93B4              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93B4
  75+ 93B4 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93B5 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93B8 CD 63 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93BB 67           	ld h,a
  79+ 93BC EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93BD CD 63 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93C0 67           	ld h,a
  82+ 93C1 A7           	and a
  83+ 93C2 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93C4 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93C5 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93C8 FE 02        	cp 2
  87+ 93CA 38 1E        	jr c,3F
  88+ 93CC 28 1C        	jr z,3F
  89+ 93CE 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93CF 28 23            jr z,7F
  91+ 93D1 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93D3 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93D5 E1           	pop hl
  94+ 93D6
  95+ 93D6              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93D6              ; _para indicar con E="2" en caso necesario.
  97+ 93D6
  98+ 93D6 E5               push hl
  99+ 93D7 C5               push bc
 100+ 93D8 CD 63 99     	call calcula_tercio
 101+ 93DB FE 01        	cp 1
 102+ 93DD 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93DF CD 0F 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93E2 28 26            jr z,9F
 105+ 93E4 38 24            jr c,9F
 106+ 93E6 1E 00        11 ld e,0
 107+ 93E8 18 22            jr 8F
 108+ 93EA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93EB 28 07        	jr z, 7F
 110+ 93ED 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93EF 1E 00         	ld e,0
 112+ 93F1 E1           	pop hl
 113+ 93F2 18 04        	jr 4F
 114+ 93F4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93F6 18 15            jr 10F
 116+ 93F8
 117+ 93F8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93F8              ; _para indicar con E="2" en caso necesario.
 119+ 93F8
 120+ 93F8 E5           4 push hl
 121+ 93F9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93FA CD 63 99     	call calcula_tercio
 123+ 93FD FE 01        	cp 1
 124+ 93FF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9401 CD 0F 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9404 28 04            jr z,9F
 127+ 9406 30 02            jr nc,9F
 128+ 9408 18 02        	jr 8F
 129+ 940A 1E 02        9 ld e,2
 130+ 940C C1           8 pop bc
 131+ 940D E1           10 pop hl
 132+ 940E C9           5 ret
 133+ 940F
 134+ 940F              ; --------------------
 135+ 940F              ;
 136+ 940F              ; 25/08/22
 137+ 940F
 138+ 940F CD 63 99     Comprueba_centro call calcula_tercio
 139+ 9412 67               ld h,a
 140+ 9413 08           	ex af,af
 141+ 9414 FE 02        	cp 2
 142+ 9416 38 07        	jr c,1F
 143+ 9418 28 05        	jr z,1F
 144+ 941A 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 941D 18 03        	jr 2F
 146+ 941F 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9422 08           2 ex af,af
 148+ 9423 A7               and a
 149+ 9424 ED 42            sbc hl,bc
 150+ 9426 C9               ret
 151+ 9427
 152+ 9427              ; *********************************************************************************************************************************************************************************************
 153+ 9427              ;
 154+ 9427              ;   16/8/22
 155+ 9427              ;
 156+ 9427              ;	Comprueba_limite_vertical
 157+ 9427              ;
 158+ 9427              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9427              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9427              ;
 161+ 9427
 162+ 9427 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 942A 7D           	ld a,l
 164+ 942B E6 1F        	and $1F
 165+ 942D 57           	ld d,a
 166+ 942E 3A 00 89     	ld a,(Limite_vertical)
 167+ 9431 BA           	cp d 											; Límite - Posición.
 168+ 9432 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9433 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9436 CB 47        	bit 0,a
 171+ 9438 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 943A
 173+ 943A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 943A
 175+ 943A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 943B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 943D
 178+ 943D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 943D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 943D
 181+ 943D 3A CC 88         ld a,(Coordenada_X)
 182+ 9440 16 0F            ld d,Centro_izquierda
 183+ 9442 A7               and a
 184+ 9443 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9444 28 1E            jr z,3F
 186+ 9446 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9448              ;                                                    ; _salimos sin modificar nada.
 188+ 9448 18 0E            jr 2F
 189+ 944A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 944B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 944D
 192+ 944D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 944D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 944D
 195+ 944D 3A CC 88         ld a,(Coordenada_X)
 196+ 9450 16 10            ld d,Centro_derecha
 197+ 9452 A7               and a
 198+ 9453 92               sub d
 199+ 9454 28 0E            jr z,3F
 200+ 9456 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9458              ;                                                    ; _salimos sin modificar nada.
 202+ 9458 CB 43        2 bit 0,e
 203+ 945A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 945C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 945D CD F1 94         call Modificaccionne
 206+ 9460 C1           	pop bc
 207+ 9461 CD 01 95         call Inicializacion
 208+ 9464 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9465
 210+ 9465              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9465
 212+ 9465 C5           4 push bc
 213+ 9466 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9469 0A           	ld a,(bc)
 215+ 946A 3D           	dec a
 216+ 946B 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 946C 7D           	ld a,l
 218+ 946D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 946E CB 47        	bit 0,a
 220+ 9470 28 03        	jr z,5F
 221+ 9472 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9473 18 2E        	jr 7F
 223+ 9475
 224+ 9475              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9475
 226+ 9475 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9476 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9477 3A F0 88     	ld a,(Ctrl_0)
 229+ 947A CB 4F        	bit 1,a
 230+ 947C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 947E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 947F
 233+ 947F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 947F
 235+ 947F 1C               inc e
 236+ 9480 1D               dec e
 237+ 9481 20 07            jr nz,12F
 238+ 9483 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9484 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9485 22 C8 88     	ld (Posicion_actual),hl
 241+ 9488 18 44        13 jr 9F
 242+ 948A CB 43        12 bit 0,e
 243+ 948C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 948E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 948E C1           	pop bc
 246+ 948F 18 D3        	jr 3B
 247+ 9491 80           14 add b
 248+ 9492 6F               ld l,a
 249+ 9493 22 C8 88     	ld (Posicion_actual),hl
 250+ 9496 CD F1 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9499 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 949B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 949D 32 F0 88         ld (Ctrl_0),a
 254+ 94A0 F1           	pop af
 255+ 94A1 18 2B        	jr 9F
 256+ 94A3
 257+ 94A3              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94A3
 259+ 94A3 F5           7 push af
 260+ 94A4 3A F0 88     	ld a,(Ctrl_0)
 261+ 94A7 CB 47        	bit 0,a
 262+ 94A9 20 1D        	jr nz,8F
 263+ 94AB F1           	pop af
 264+ 94AC
 265+ 94AC              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94AC
 267+ 94AC 1C           	inc e
 268+ 94AD 1D               dec e
 269+ 94AE 20 07            jr nz,10F
 270+ 94B0 90           	sub b
 271+ 94B1 6F               ld l,a
 272+ 94B2 22 C8 88     	ld (Posicion_actual),hl
 273+ 94B5 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94B7              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94B7 CB 43        10 bit 0,e
 276+ 94B9 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94BB              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94BB C1           	pop bc
 279+ 94BC 18 A6        	jr 3B
 280+ 94BE 90           16 sub b
 281+ 94BF 6F               ld l,a
 282+ 94C0 22 C8 88     	ld (Posicion_actual),hl
 283+ 94C3 CD F1 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94C6 18 06            jr 9F
 285+ 94C8 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94CA 32 F0 88         ld (Ctrl_0),a
 287+ 94CD F1           	pop af
 288+ 94CE C1           9 pop bc
 289+ 94CF 1E 00        	ld e,0
 290+ 94D1 CD 01 95         call Inicializacion
 291+ 94D4 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94D5 08           	ex af,af
 293+ 94D6 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94D7 18 8B            jr 3B
 295+ 94D9
 296+ 94D9              ; --------------------
 297+ 94D9
 298+ 94D9 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94DB CD 5F 96     1 call PreviousScan
 300+ 94DE 10 FB            djnz 1B
 301+ 94E0 22 C8 88     	ld (Posicion_actual),hl
 302+ 94E3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94E4 C9           	ret
 304+ 94E5
 305+ 94E5              ; --------------------
 306+ 94E5
 307+ 94E5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94E7 CD 50 96     1 call NextScan
 309+ 94EA 10 FB            djnz 1B
 310+ 94EC 22 C8 88     	ld (Posicion_actual),hl
 311+ 94EF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94F0 C9           	ret
 313+ 94F1
 314+ 94F1              ; --------------------
 315+ 94F1              ;
 316+ 94F1              ;	22/01/23
 317+ 94F1              ;
 318+ 94F1              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94F1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94F1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94F1
 322+ 94F1
 323+ 94F1              Modificaccionne
 324+ 94F1
 325+ 94F1 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94F4 FE 02        	cp 2
 327+ 94F6 CC D9 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94F9 DC D9 94         call c,Modifica_Pos_actual
 329+ 94FC C8           	ret z
 330+ 94FD CD E5 94         call Modifica_Pos_actual2
 331+ 9500 C9               ret
 332+ 9501
 333+ 9501              ; *************************************************************************************************************************************************************************************************
 334+ 9501              ;
 335+ 9501              ;	13/8/22
 336+ 9501              ;
 337+ 9501              ;	Inicializacion
 338+ 9501              ;
 339+ 9501              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9501              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9501              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9501              ;
 343+ 9501              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9501              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9501              ;	_ desaparece/aparece.
 346+ 9501
 347+ 9501              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9501              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9501              ;
 350+ 9501              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9501              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9501              ; 		   [E] ="0"
 353+ 9501
 354+ 9501              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9501
 356+ 9501 CD 63 99     Inicializacion call calcula_tercio
 357+ 9504 28 36        	jr z,primit
 358+ 9506 E6 02        	and 2
 359+ 9508 20 07        	jr nz,segmit
 360+ 950A 7D           	ld a,l
 361+ 950B FE 7F        	cp $7f
 362+ 950D 38 2D        	jr c,primit
 363+ 950F 28 2B        	jr z,primit
 364+ 9511 CD 6E 95     segmit call column
 365+ 9514 38 13        	jr c,tercuad
 366+ 9516 3E 04        cuarcuad ld a,4
 367+ 9518 32 DA 88     	ld (Cuad_objeto),a
 368+ 951B 21 20 48     	ld hl,$4820
 369+ 951E 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9521 21 00 89     	ld hl,Limite_vertical
 371+ 9524 36 0D        	ld (hl),$0d
 372+ 9526 08           	ex af,af
 373+ 9527 18 3C        	jr 1F
 374+ 9529              tercuad
 375+ 9529 3E 03        	ld a,3
 376+ 952B 32 DA 88     	ld (Cuad_objeto),a
 377+ 952E 21 20 48     	ld hl,$4820
 378+ 9531 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9534 21 00 89     	ld hl,Limite_vertical
 380+ 9537 36 12        	ld (hl),$12
 381+ 9539 08           	ex af,af
 382+ 953A 18 29        	jr 1F
 383+ 953C CD 6E 95     primit call column
 384+ 953F 38 13        	jr c, primcuad
 385+ 9541              segcuad
 386+ 9541 3E 02        	ld a,2
 387+ 9543 32 DA 88     	ld (Cuad_objeto),a
 388+ 9546 21 C0 4F     	ld hl,$4fc0
 389+ 9549 22 FE 88     	ld (Limite_horizontal),hl
 390+ 954C 21 00 89     	ld hl,Limite_vertical
 391+ 954F 36 0D        	ld (hl),$0d
 392+ 9551 08           	ex af,af
 393+ 9552 18 11        	jr 1F
 394+ 9554              primcuad
 395+ 9554 3E 01        	ld a,1
 396+ 9556 32 DA 88     	ld (Cuad_objeto),a
 397+ 9559 21 C0 4F     	ld hl,$4fc0
 398+ 955C 22 FE 88     	ld (Limite_horizontal),hl
 399+ 955F 21 00 89     	ld hl,Limite_vertical
 400+ 9562 36 12        	ld (hl),$12
 401+ 9564 08           	ex af,af
 402+ 9565 CD EE 9C     1 call Genera_coordenadas
 403+ 9568 21 F0 88     	ld hl,Ctrl_0
 404+ 956B CB EE        	set 5,(hl)
 405+ 956D C9           	ret
 406+ 956E
 407+ 956E              ; ------------------------------------------------------------------------------------------------------------------
 408+ 956E
 409+ 956E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 956E              ;
 411+ 956E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 956E
 413+ 956E 7D           column ld a,l
 414+ 956F E6 1F        	and $1f
 415+ 9571 FE 10         	cp $10
 416+ 9573 C9            	ret
 417+ 9574
 418+ 9574              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9574              ;
 420+ 9574              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9574              ;
 422+ 9574              ; 14/12/22
 423+ 9574              ;
 424+ 9574              ;	Modifica: A y BC.
 425+ 9574
 426+ 9574 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9577 E6 01        	and 1
 428+ 9579 28 17        	jr z,1F
 429+ 957B
 430+ 957B              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 957B
 432+ 957B 3A CC 88     	ld a,(Coordenada_X)
 433+ 957E 47           	ld b,a
 434+ 957F 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9580 79           	ld a,c
 436+ 9581 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9582 38 08        	jr c,2F
 438+ 9584 47           	ld b,a
 439+ 9585 79           	ld a,c
 440+ 9586 90           	sub b
 441+ 9587 32 FD 88     	ld (Columnas),a
 442+ 958A 18 1B        	jr 4F
 443+ 958C 79           2 ld a,c
 444+ 958D 32 FD 88     	ld (Columnas),a
 445+ 9590 18 15        	jr 4F
 446+ 9592
 447+ 9592              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9592
 449+ 9592 3A CC 88     1 ld a,(Coordenada_X)
 450+ 9595 81           	add c
 451+ 9596 3D           	dec a
 452+ 9597 D6 1F        	sub $1f
 453+ 9599 38 08        	jr c,3F
 454+ 959B 47           	ld b,a
 455+ 959C 79           	ld a,c
 456+ 959D 90           	sub b
 457+ 959E 32 FD 88     	ld (Columnas),a
 458+ 95A1 18 04        	jr 4F
 459+ 95A3 79           3 ld a,c
 460+ 95A4 32 FD 88     	ld (Columnas),a
 461+ 95A7 D9           4 exx
 462+ 95A8 4F           	ld c,a
 463+ 95A9 D9           	exx
 464+ 95AA C9            ret
 465+ 95AB
 466+ 95AB              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95AB              ;
 468+ 95AB              ;   19/7/23
 469+ 95AB              ;
 470+ 95AB              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95AB              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95AB              ;
 473+ 95AB              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95AB              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95AB              ;
 476+ 95AB              ;	DESTRUYE: HL,B Y A.
 477+ 95AB
 478+ 95AB 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95AE FE 02        	cp 2
 480+ 95B0 38 18        	jr c,1F
 481+ 95B2 28 16        	jr z,1F
 482+ 95B4 E6 01        	and 1
 483+ 95B6 28 0D        	jr z,3F
 484+ 95B8
 485+ 95B8              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95B8
 487+ 95B8 CD FE 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95BB
 489+ 95BB 7D           9 ld a,l
 490+ 95BC E6 1F        	and $1f
 491+ 95BE 28 2A        	jr z,7F
 492+ 95C0 2B           	dec hl
 493+ 95C1 10 F8        	djnz 9B
 494+ 95C3 18 25        	jr 7F
 495+ 95C5
 496+ 95C5              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95C5
 498+ 95C5 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95C8 18 20        	jr 7F
 500+ 95CA
 501+ 95CA 28 14        1 jr z,2F
 502+ 95CC
 503+ 95CC              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95CC
 505+ 95CC CD FE 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95CF
 507+ 95CF 7D           4 ld a,l
 508+ 95D0 E6 1F        	and $1f
 509+ 95D2 28 03        	jr z,6F
 510+ 95D4 2B           	dec hl
 511+ 95D5 10 F8        	djnz 4B
 512+ 95D7 06 0F        6 ld b,15
 513+ 95D9 CD 5F 96     5 call PreviousScan
 514+ 95DC 10 FB        	djnz 5B
 515+ 95DE 18 0A        	jr 7F
 516+ 95E0
 517+ 95E0              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95E0
 519+ 95E0 CD FE 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95E3 06 0F        	ld b,15
 521+ 95E5 CD 5F 96     8 call PreviousScan
 522+ 95E8 10 FB        	djnz 8B
 523+ 95EA
 524+ 95EA E5           7 push hl
 525+ 95EB DD E1        	pop ix
 526+ 95ED
 527+ 95ED 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95F0 E5           	push hl
 529+ 95F1 FD E1        	pop iy
 530+ 95F3
 531+ 95F3              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95F3
 533+ 95F3 3A F0 88     	ld a,(Ctrl_0)
 534+ 95F6 CB 77        	bit 6,a
 535+ 95F8 C8           	ret z
 536+ 95F9
 537+ 95F9              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95F9              ; _ entidad / Amadeus´.
 539+ 95F9
 540+ 95F9 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95FD
 542+ 95FD C9           	ret
 543+ 95FE
 544+ 95FE              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95FE              ;
 546+ 95FE              ;	2/1/23
 547+ 95FE              ;
 548+ 95FE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95FE              ;
 550+ 95FE              ;	Tras esta rutina tenemos:
 551+ 95FE              ;
 552+ 95FE              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95FE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95FE              ;
 555+ 95FE              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95FE
 557+ 95FE 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 9601 3A FD 88     	ld a,(Columnas)
 559+ 9604 3D           	dec a
 560+ 9605 20 01        	jr nz,1F
 561+ 9607 3C           	inc a
 562+ 9608 47           1 ld b,a
 563+ 9609 C9           	ret
 564+ 960A
 565+ 960A              ; --------------------------------------------------------------------------------------------------------------------
 566+ 960A              ;
 567+ 960A              ;	3/1/23
 568+ 960A              ;
 569+ 960A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 960A              ;
 571+ 960A              ;	Destruye: A,B,HL y DE.
 572+ 960A
 573+ 960A              Define_rutina_de_impresion
 574+ 960A
 575+ 960A 3A C7 88     	ld a,(Columns)
 576+ 960D 47           	ld b,a
 577+ 960E 3A FD 88     	ld a,(Columnas)
 578+ 9611 B8           	cp b
 579+ 9612 20 0D        	jr nz,2f
 580+ 9614
 581+ 9614              ;	La entidad se imprime entera.
 582+ 9614
 583+ 9614 21 33 97     	ld hl, Indice_entidades_completas
 584+ 9617 E6 01        	and 1
 585+ 9619 28 02        	jr z,1F
 586+ 961B
 587+ 961B 23           	inc hl
 588+ 961C 23           	inc hl
 589+ 961D
 590+ 961D CD 83 8C     1 call Extrae_address
 591+ 9620 C9           	ret		;	ret
 592+ 9621
 593+ 9621              ;	La entidad no se imprime entera en pantalla.
 594+ 9621
 595+ 9621 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 9624 E6 01        	and 1
 597+ 9626 28 17        	jr z,3F
 598+ 9628
 599+ 9628              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9628
 601+ 9628 21 37 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 962B 3A C7 88     4 ld a,(Columns)
 603+ 962E E6 01        	and 1
 604+ 9630 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9632
 606+ 9632 23           	inc hl
 607+ 9633 23           	inc hl
 608+ 9634
 609+ 9634 3A FD 88     	ld a,(Columnas)
 610+ 9637 E6 01        	and 1
 611+ 9639 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 963B
 613+ 963B 23           	inc hl
 614+ 963C 23           	inc hl
 615+ 963D
 616+ 963D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 963F
 618+ 963F 21 3D 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9642 18 E7        	jr 4B
 620+ 9644
 621+ 9644              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9644              ;
 623+ 9644              ;	Prepara_draw
 624+ 9644              ;
 625+ 9644              ;	Es una rutina de carga.
 626+ 9644              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9644              ;
 628+ 9644              ;	FUNCIONAMIENTO:
 629+ 9644              ;
 630+ 9644              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9644              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9644              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9644              ;
 634+ 9644              ;	DESTRUYE:
 635+ 9644              ;
 636+ 9644              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9644
 638+ 9644 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9647 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9648 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9649 4E           	ld c,(hl)
 642+ 964A 2A C8 88     	ld hl,(Posicion_actual)
 643+ 964D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 964F C9           	ret
 645+ 9650
 646+ 9650              ;----------------------------------------------------------------------------------------------------------------
 647+ 9650              ;
 648+ 9650              ;	5/08/22
 649+ 9650              ;
 650+ 9650              ;   NextScan.
 651+ 9650              ;
 652+ 9650              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9650              ;
 654+ 9650              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9650              ;
 656+ 9650              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9650              ;
 658+ 9650              ;       DESTRUIDOS: AF y HL !!!
 659+ 9650              ;
 660+ 9650              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9650              ;
 662+ 9650
 663+ 9650 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9651 7C               ld a,h
 665+ 9652 E6 07            and 7
 666+ 9654 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9655
 668+ 9655 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9656 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9658 6F               ld l,a
 671+ 9659 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 965A
 673+ 965A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 965B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 965D 67               ld h,a
 676+ 965E C9               ret
 677+ 965F
 678+ 965F              ;----------------------------------------------------------------------------------------------------------------
 679+ 965F              ;
 680+ 965F              ;	5/08/22
 681+ 965F              ;
 682+ 965F              ;   PreviousScan.
 683+ 965F              ;
 684+ 965F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 965F              ;
 686+ 965F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 965F              ;
 688+ 965F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 965F              ;
 690+ 965F              ;       DESTRUIDOS: AF y HL !!!
 691+ 965F              ;
 692+ 965F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 965F              ;
 694+ 965F
 695+ 965F 7C           PreviousScan ld a,h
 696+ 9660 25               dec h               ; Dec H.
 697+ 9661 E6 07            and 7
 698+ 9663 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9664
 700+ 9664 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9665 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9667 6F               ld l,a
 703+ 9668 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9669
 705+ 9669 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 966A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 966C 67               ld h,a
 708+ 966D C9               ret
 709+ 966E
 710+ 966E              ; -----------------------------------------------------------------------------------
 711+ 966E              ;
 712+ 966E              ;	31/7/23
 713+ 966E              ;
 714+ 966E              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 966E              ;	Extrae fotos de Album_de_fotos.
 716+ 966E
 717+ 966E              Extrae_foto_entidades
 718+ 966E
 719+ 966E 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9671 7E           	ld a,(hl)
 721+ 9672 A7           	and a
 722+ 9673 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9674
 724+ 9674 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9677 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9678 C8           	ret z
 727+ 9679
 728+ 9679              ; -----------------------------------
 729+ 9679
 730+ 9679 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 967D 31 00 70     	ld sp,Album_de_fotos
 732+ 9680
 733+ 9680 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9682 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9683 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9684
 737+ 9684 ED 73 17 89  	ld (Stack_2),sp
 738+ 9688 ED 7B 15 89  	ld sp,(Stack)
 739+ 968C
 740+ 968C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 968C
 742+ 968C 3E CD        	ld a,$cd
 743+ 968E 32 96 96     	ld (Imprime),a
 744+ 9691 EB           	ex de,hl
 745+ 9692 22 97 96     	ld (Imprime+1),hl
 746+ 9695 EB           	ex de,hl
 747+ 9696
 748+ 9696              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9696
 750+ 9696 00 00 00     Imprime db 0,0,0
 751+ 9699
 752+ 9699 ED 73 15 89  	ld (Stack),sp
 753+ 969D
 754+ 969D 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 96A0 3D           	dec a
 756+ 96A1 28 09        	jr z,1F
 757+ 96A3 32 10 89      	ld (Numero_de_malotes),a
 758+ 96A6
 759+ 96A6 ED 7B 17 89  	ld sp,(Stack_2)
 760+ 96AA 18 D4        	jr 2B
 761+ 96AC
 762+ 96AC AF           1 xor a
 763+ 96AD 32 17 89     	ld (Stack_2),a
 764+ 96B0
 765+ 96B0 C9           	ret
 766+ 96B1
 767+ 96B1              ; -----------------------------------------------------------------------------------
 768+ 96B1              ;
 769+ 96B1              ;	28/2/23
 770+ 96B1              ;
 771+ 96B1              ;	Pinta los disparos generados.
 772+ 96B1
 773+ 96B1              Extrae_foto_disparos
 774+ 96B1
 775+ 96B1 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96B4 7E               ld a,(hl)
 777+ 96B5 A7               and a
 778+ 96B6 C8               ret z
 779+ 96B7
 780+ 96B7 3A 3E 89     	ld a,(Numero_de_disparotes)
 781+ 96BA A7           	and a
 782+ 96BB C8           	ret z
 783+ 96BC ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96C0 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96C3
 786+ 96C3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96C5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96C6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96C7
 790+ 96C7 ED 73 17 89  	ld (Stack_2),sp
 791+ 96CB ED 7B 15 89  	ld sp,(Stack)
 792+ 96CF
 793+ 96CF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96CF
 795+ 96CF 3E CD        	ld a,$cd
 796+ 96D1 32 D9 96     	ld (Imprime2),a
 797+ 96D4 EB           	ex de,hl
 798+ 96D5 22 DA 96     	ld (Imprime2+1),hl
 799+ 96D8 EB           	ex de,hl
 800+ 96D9
 801+ 96D9              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96D9
 803+ 96D9 00 00 00     Imprime2 db 0,0,0
 804+ 96DC
 805+ 96DC 3A 3E 89     	ld a,(Numero_de_disparotes)
 806+ 96DF 3D           	dec a
 807+ 96E0 28 09        	jr z,1F
 808+ 96E2 32 3E 89      	ld (Numero_de_disparotes),a
 809+ 96E5
 810+ 96E5 ED 7B 17 89  	ld sp,(Stack_2)
 811+ 96E9 18 D8        	jr 2B
 812+ 96EB
 813+ 96EB AF           1 xor a
 814+ 96EC 32 17 89     	ld (Stack_2),a
 815+ 96EF C9           	ret
 816+ 96F0
 817+ 96F0              ; -----------------------------------------------------------------------------------
 818+ 96F0              ;
 819+ 96F0              ;	4/9/23
 820+ 96F0              ;
 821+ 96F0              ;	Rutina principal de pintado de Amadeus.
 822+ 96F0              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 96F0
 824+ 96F0 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 96F3 7E           	ld a,(hl)
 826+ 96F4 A7           	and a
 827+ 96F5 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 96F6
 829+ 96F6 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 96F9 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 96FA C8           	ret z
 832+ 96FB
 833+ 96FB              ; -----------------------------------
 834+ 96FB
 835+ 96FB ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 96FF 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9702
 838+ 9702 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9704 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9705 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9706
 842+ 9706 ED 73 17 89  	ld (Stack_2),sp
 843+ 970A ED 7B 15 89  	ld sp,(Stack)
 844+ 970E
 845+ 970E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 970E
 847+ 970E 3E CD        	ld a,$cd
 848+ 9710 32 18 97     	ld (Imprime_Amadeus),a
 849+ 9713 EB           	ex de,hl
 850+ 9714 22 19 97     	ld (Imprime_Amadeus+1),hl
 851+ 9717 EB           	ex de,hl
 852+ 9718
 853+ 9718              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9718
 855+ 9718 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 971B
 857+ 971B ED 73 15 89  	ld (Stack),sp
 858+ 971F
 859+ 971F 3A 10 89     	ld a,(Numero_de_malotes)
 860+ 9722 3D           	dec a
 861+ 9723 28 09        	jr z,1F
 862+ 9725 32 10 89      	ld (Numero_de_malotes),a
 863+ 9728
 864+ 9728 ED 7B 17 89  	ld sp,(Stack_2)
 865+ 972C 18 D4        	jr 2B
 866+ 972E
 867+ 972E AF           1 xor a
 868+ 972F 32 17 89     	ld (Stack_2),a
 869+ 9732
 870+ 9732 C9           	ret
# file closed: Draw_XOR.asm
1666  9733              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9733              ;   índices de Rutinas de impresión.
   2+ 9733
   3+ 9733 43 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9735 70 97            defw Pinta_Amadeus_3x2
   5+ 9737
   6+ 9737 C6 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9739 66 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 973B 1A 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 973D
  10+ 973D F0 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 973F F4 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9741 A8 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9743
  14+ 9743
  15+ 9743              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9743              ;
  17+ 9743              ;   12/12/22
  18+ 9743              ;
  19+ 9743              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9743              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9743              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9743              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9743              ;
  24+ 9743              ;   Modifica: DE y HL.
  25+ 9743
  26+ 9743 ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9747 FD F9        	ld sp,iy
  28+ 9749 06 10            ld b,16
  29+ 974B D1           1 pop de
  30+ 974C 7B               ld a,e
  31+ 974D AE               xor (hl)
  32+ 974E 77           	ld (hl),a
  33+ 974F 23           	inc hl
  34+ 9750 7A               ld a,d
  35+ 9751 AE               xor (hl)
  36+ 9752 77           	ld (hl),a
  37+ 9753 2B           	dec hl
  38+ 9754 24           	inc h
  39+ 9755 7C               ld a,h
  40+ 9756 E6 07            and 7
  41+ 9758 20 0A            jr nz,2F
  42+ 975A 7D               ld a,l
  43+ 975B C6 20            add a,$20
  44+ 975D 6F               ld l,a
  45+ 975E 38 04            jr c,2F
  46+ 9760 7C               ld a,h
  47+ 9761 D6 08            sub 8
  48+ 9763 67               ld h,a
  49+ 9764 7C           2 ld a,h
  50+ 9765 FE 58            cp $58
  51+ 9767 28 02            jr z,3F
  52+ 9769 10 E0            djnz 1B
  53+ 976B ED 7B 15 89  3 ld sp,(Stack)
  54+ 976F C9           	ret
  55+ 9770
  56+ 9770 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9774 FD F9        	ld sp,iy
  58+ 9776 06 08            ld b,8
  59+ 9778 D1           1 pop de
  60+ 9779 7B               ld a,e
  61+ 977A AE               xor (hl)
  62+ 977B 77           	ld (hl),a
  63+ 977C 23           	inc hl
  64+ 977D 7A               ld a,d
  65+ 977E AE               xor (hl)
  66+ 977F 77           	ld (hl),a
  67+ 9780 23           	inc hl
  68+ 9781 D1           	pop de
  69+ 9782 7B               ld a,e
  70+ 9783 AE               xor (hl)
  71+ 9784 77           	ld (hl),a
  72+ 9785 2B           	dec hl
  73+ 9786 2B           	dec hl
  74+ 9787 24           	inc h
  75+ 9788 7C               ld a,h
  76+ 9789 E6 07            and 7
  77+ 978B 20 0A            jr nz,2F
  78+ 978D 7D               ld a,l
  79+ 978E C6 20            add a,$20
  80+ 9790 6F               ld l,a
  81+ 9791 38 04            jr c,2F
  82+ 9793 7C               ld a,h
  83+ 9794 D6 08            sub 8
  84+ 9796 67               ld h,a
  85+ 9797 7C           2 ld a,h
  86+ 9798 FE 58            cp $58
  87+ 979A 28 25            jr z,4F
  88+ 979C 7A               ld a,d
  89+ 979D AE               xor (hl)
  90+ 979E 77               ld (hl),a
  91+ 979F D1           	pop de
  92+ 97A0 23           	inc hl
  93+ 97A1 7B               ld a,e
  94+ 97A2 AE               xor (hl)
  95+ 97A3 77           	ld (hl),a
  96+ 97A4 23           	inc hl
  97+ 97A5 7A               ld a,d
  98+ 97A6 AE               xor (hl)
  99+ 97A7 77           	ld (hl),a
 100+ 97A8 2B           	dec hl
 101+ 97A9 2B           	dec hl
 102+ 97AA 24           	inc h
 103+ 97AB 7C               ld a,h
 104+ 97AC E6 07            and 7
 105+ 97AE 20 0A            jr nz,3F
 106+ 97B0 7D               ld a,l
 107+ 97B1 C6 20            add a,$20
 108+ 97B3 6F               ld l,a
 109+ 97B4 38 04            jr c,3F
 110+ 97B6 7C               ld a,h
 111+ 97B7 D6 08            sub 8
 112+ 97B9 67               ld h,a
 113+ 97BA 7C           3 ld a,h
 114+ 97BB FE 58            cp $58
 115+ 97BD 28 02            jr z,4F
 116+ 97BF 10 B7            djnz 1B
 117+ 97C1 ED 7B 15 89  4 ld sp,(Stack)
 118+ 97C5 C9           	ret
 119+ 97C6
 120+ 97C6              ; ---------------------------------------------------
 121+ 97C6
 122+ 97C6 ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97CA FD F9        	ld sp,iy
 124+ 97CC
 125+ 97CC              ; >>>
 126+ 97CC
 127+ 97CC 06 10            ld b,16
 128+ 97CE D1           1 pop de
 129+ 97CF 7A           	ld a,d
 130+ 97D0 AE           	xor (hl)
 131+ 97D1 77           	ld (hl),a
 132+ 97D2 24           	inc h
 133+ 97D3 7C               ld a,h
 134+ 97D4 E6 07            and 7
 135+ 97D6 20 0C            jr nz,2F
 136+ 97D8 7D               ld a,l
 137+ 97D9 C6 20            add a,$20
 138+ 97DB 6F               ld l,a
 139+ 97DC 38 06            jr c,2F
 140+ 97DE 7C               ld a,h
 141+ 97DF D6 08            sub 8
 142+ 97E1 67               ld h,a
 143+ 97E2 18 00            jr 2F
 144+ 97E4 7C           2 ld a,h
 145+ 97E5 FE 58            cp $58
 146+ 97E7 28 02            jr z,3F
 147+ 97E9 10 E3            djnz 1B
 148+ 97EB ED 7B 15 89  3 ld sp,(Stack)
 149+ 97EF C9           	ret
 150+ 97F0
 151+ 97F0 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97F4 FD F9        	ld sp,iy
 153+ 97F6
 154+ 97F6              ; >>>
 155+ 97F6
 156+ 97F6 06 10            ld b,16
 157+ 97F8 D1           1 pop de
 158+ 97F9 7B           	ld a,e
 159+ 97FA AE           	xor (hl)
 160+ 97FB 77           	ld (hl),a
 161+ 97FC 24           	inc h
 162+ 97FD 7C               ld a,h
 163+ 97FE E6 07            and 7
 164+ 9800 20 0C            jr nz,2F
 165+ 9802 7D               ld a,l
 166+ 9803 C6 20            add a,$20
 167+ 9805 6F               ld l,a
 168+ 9806 38 06            jr c,2F
 169+ 9808 7C               ld a,h
 170+ 9809 D6 08            sub 8
 171+ 980B 67               ld h,a
 172+ 980C 18 00            jr 2F
 173+ 980E 7C           2 ld a,h
 174+ 980F FE 58            cp $58
 175+ 9811 28 02            jr z,3F
 176+ 9813 10 E3            djnz 1B
 177+ 9815 ED 7B 15 89  3 ld sp,(Stack)
 178+ 9819 C9           	ret
 179+ 981A
 180+ 981A              ; ---------------------------------------------------
 181+ 981A
 182+ 981A ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 981E FD F9        	ld sp,iy
 184+ 9820 06 08            ld b,8
 185+ 9822 D1           1 pop de
 186+ 9823 7A           	ld a,d
 187+ 9824 AE           	xor (hl)
 188+ 9825 77           	ld (hl),a
 189+ 9826 23           	inc hl
 190+ 9827 D1           	pop de
 191+ 9828 7B           	ld a,e
 192+ 9829 AE           	xor (hl)
 193+ 982A 77           	ld (hl),a
 194+ 982B 2B           	dec hl
 195+ 982C 24            	inc h
 196+ 982D 7C               ld a,h
 197+ 982E E6 07            and 7
 198+ 9830 20 0A            jr nz,2F
 199+ 9832 7D               ld a,l
 200+ 9833 C6 20            add a,$20
 201+ 9835 6F               ld l,a
 202+ 9836 38 04            jr c,2F
 203+ 9838 7C               ld a,h
 204+ 9839 D6 08            sub 8
 205+ 983B 67               ld h,a
 206+ 983C 7C           2 ld a,h
 207+ 983D FE 58            cp $58
 208+ 983F 28 20            jr z,4F
 209+ 9841 D1               pop de
 210+ 9842 7B           	ld a,e
 211+ 9843 AE           	xor (hl)
 212+ 9844 77           	ld (hl),a
 213+ 9845 23           	inc hl
 214+ 9846 7A           	ld a,d
 215+ 9847 AE           	xor (hl)
 216+ 9848 77           	ld (hl),a
 217+ 9849 2B           	dec hl
 218+ 984A 24           	inc h
 219+ 984B 7C               ld a,h
 220+ 984C E6 07            and 7
 221+ 984E 20 0A            jr nz,3F
 222+ 9850 7D               ld a,l
 223+ 9851 C6 20            add a,$20
 224+ 9853 6F               ld l,a
 225+ 9854 38 04            jr c,3F
 226+ 9856 7C               ld a,h
 227+ 9857 D6 08            sub 8
 228+ 9859 67               ld h,a
 229+ 985A 7C           3 ld a,h
 230+ 985B FE 58            cp $58
 231+ 985D 28 02            jr z,4F
 232+ 985F 10 C1            djnz 1B
 233+ 9861 ED 7B 15 89  4 ld sp,(Stack)
 234+ 9865 C9           	ret
 235+ 9866
 236+ 9866 ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 986A FD F9        	ld sp,iy
 238+ 986C 06 08            ld b,8
 239+ 986E D1           1 pop de
 240+ 986F D1           	pop de
 241+ 9870 7B           	ld a,e
 242+ 9871 AE           	xor (hl)
 243+ 9872 77           	ld (hl),a
 244+ 9873 24            	inc h
 245+ 9874 7C               ld a,h
 246+ 9875 E6 07            and 7
 247+ 9877 20 0A            jr nz,2F
 248+ 9879 7D               ld a,l
 249+ 987A C6 20            add a,$20
 250+ 987C 6F               ld l,a
 251+ 987D 38 04            jr c,2F
 252+ 987F 7C               ld a,h
 253+ 9880 D6 08            sub 8
 254+ 9882 67               ld h,a
 255+ 9883 7C           2 ld a,h
 256+ 9884 FE 58            cp $58
 257+ 9886 28 1B            jr z,4F
 258+ 9888 D1               pop de
 259+ 9889 7A           	ld a,d
 260+ 988A AE           	xor (hl)
 261+ 988B 77           	ld (hl),a
 262+ 988C 24           	inc h
 263+ 988D 7C               ld a,h
 264+ 988E E6 07            and 7
 265+ 9890 20 0A            jr nz,3F
 266+ 9892 7D               ld a,l
 267+ 9893 C6 20            add a,$20
 268+ 9895 6F               ld l,a
 269+ 9896 38 04            jr c,3F
 270+ 9898 7C               ld a,h
 271+ 9899 D6 08            sub 8
 272+ 989B 67               ld h,a
 273+ 989C 7C           3 ld a,h
 274+ 989D FE 58            cp $58
 275+ 989F 28 02            jr z,4F
 276+ 98A1 10 CB            djnz 1B
 277+ 98A3 ED 7B 15 89  4 ld sp,(Stack)
 278+ 98A7 C9           	ret
 279+ 98A8
 280+ 98A8 ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98AC FD F9        	ld sp,iy
 282+ 98AE 06 08            ld b,8
 283+ 98B0 D1           1 pop de
 284+ 98B1 7B           	ld a,e
 285+ 98B2 AE           	xor (hl)
 286+ 98B3 77           	ld (hl),a
 287+ 98B4 23           	inc hl
 288+ 98B5 7A           	ld a,d
 289+ 98B6 AE           	xor (hl)
 290+ 98B7 77           	ld (hl),a
 291+ 98B8 2B           	dec hl
 292+ 98B9 24             	inc h
 293+ 98BA 7C               ld a,h
 294+ 98BB E6 07            and 7
 295+ 98BD 20 0A            jr nz,2F
 296+ 98BF 7D               ld a,l
 297+ 98C0 C6 20            add a,$20
 298+ 98C2 6F               ld l,a
 299+ 98C3 38 04            jr c,2F
 300+ 98C5 7C               ld a,h
 301+ 98C6 D6 08            sub 8
 302+ 98C8 67               ld h,a
 303+ 98C9 7C           2 ld a,h
 304+ 98CA FE 58            cp $58
 305+ 98CC 28 21            jr z,4F
 306+ 98CE D1               pop de
 307+ 98CF 7A           	ld a,d
 308+ 98D0 AE           	xor (hl)
 309+ 98D1 77           	ld (hl),a
 310+ 98D2 23           	inc hl
 311+ 98D3 D1               pop de
 312+ 98D4 7B           	ld a,e
 313+ 98D5 AE           	xor (hl)
 314+ 98D6 77           	ld (hl),a
 315+ 98D7 2B           	dec hl
 316+ 98D8 24           	inc h
 317+ 98D9 7C               ld a,h
 318+ 98DA E6 07            and 7
 319+ 98DC 20 0A            jr nz,3F
 320+ 98DE 7D               ld a,l
 321+ 98DF C6 20            add a,$20
 322+ 98E1 6F               ld l,a
 323+ 98E2 38 04            jr c,3F
 324+ 98E4 7C               ld a,h
 325+ 98E5 D6 08            sub 8
 326+ 98E7 67               ld h,a
 327+ 98E8 7C           3 ld a,h
 328+ 98E9 FE 58            cp $58
 329+ 98EB 28 02            jr z,4F
 330+ 98ED 10 C1            djnz 1B
 331+ 98EF ED 7B 15 89  4 ld sp,(Stack)
 332+ 98F3 C9           	ret
 333+ 98F4
 334+ 98F4 ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98F8 FD F9        	ld sp,iy
 336+ 98FA 06 08            ld b,8
 337+ 98FC D1           1 pop de
 338+ 98FD 7B           	ld a,e
 339+ 98FE AE           	xor (hl)
 340+ 98FF 77           	ld (hl),a
 341+ 9900 24            	inc h
 342+ 9901 7C               ld a,h
 343+ 9902 E6 07            and 7
 344+ 9904 20 0A            jr nz,2F
 345+ 9906 7D               ld a,l
 346+ 9907 C6 20            add a,$20
 347+ 9909 6F               ld l,a
 348+ 990A 38 04            jr c,2F
 349+ 990C 7C               ld a,h
 350+ 990D D6 08            sub 8
 351+ 990F 67               ld h,a
 352+ 9910 7C           2 ld a,h
 353+ 9911 FE 58            cp $58
 354+ 9913 28 1C            jr z,4F
 355+ 9915 D1               pop de
 356+ 9916 7A           	ld a,d
 357+ 9917 AE           	xor (hl)
 358+ 9918 77           	ld (hl),a
 359+ 9919 24           	inc h
 360+ 991A 7C               ld a,h
 361+ 991B E6 07            and 7
 362+ 991D 20 0A            jr nz,3F
 363+ 991F 7D               ld a,l
 364+ 9920 C6 20            add a,$20
 365+ 9922 6F               ld l,a
 366+ 9923 38 04            jr c,3F
 367+ 9925 7C               ld a,h
 368+ 9926 D6 08            sub 8
 369+ 9928 67               ld h,a
 370+ 9929 7C           3 ld a,h
 371+ 992A FE 58            cp $58
 372+ 992C 28 03            jr z,4F
 373+ 992E D1               pop de
 374+ 992F 10 CB            djnz 1B
 375+ 9931 ED 7B 15 89  4 ld sp,(Stack)
 376+ 9935 C9           	ret
 377+ 9936
 378+ 9936              ; ---------------------------------------------------
 379+ 9936              ;
 380+ 9936              ;   27/02/23
 381+ 9936              ;
 382+ 9936              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9936              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9936              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9936
 386+ 9936 ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 993A FD F9            ld sp,iy
 388+ 993C 06 03            ld b,3
 389+ 993E D1           1 pop de
 390+ 993F 7B               ld a,e
 391+ 9940 AE               xor (hl)
 392+ 9941 77               ld (hl),a
 393+ 9942 23               inc hl
 394+ 9943 7A               ld a,d
 395+ 9944 AE               xor (hl)
 396+ 9945 77               ld (hl),a
 397+ 9946 2B               dec hl
 398+ 9947
 399+ 9947 24               inc h
 400+ 9948 7C               ld a,h
 401+ 9949 E6 07            and 7
 402+ 994B 20 0A            jr nz,2F
 403+ 994D 7D               ld a,l
 404+ 994E C6 20            add a,$20
 405+ 9950 6F               ld l,a
 406+ 9951 38 04            jr c,2F
 407+ 9953 7C               ld a,h
 408+ 9954 D6 08            sub 8
 409+ 9956 67               ld h,a
 410+ 9957 7C           2 ld a,h
 411+ 9958 FE 58            cp $58
 412+ 995A 28 02            jr z,3F
 413+ 995C
 414+ 995C 10 E0            djnz 1B
 415+ 995E ED 7B 15 89  3 ld sp,(Stack)
 416+ 9962 C9               ret
 417+ 9963
# file closed: Rutinas_de_impresion_sprites.asm
1667  9963              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9963              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9963              ;
   3+ 9963              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9963              ;
   5+ 9963              ; *****************************************************************************************************************************************************************************************
   6+ 9963              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9963
   8+ 9963 7C           calcula_tercio ld a,h
   9+ 9964 E6 18        	and $18
  10+ 9966 CB 2F        	sra a
  11+ 9968 CB 2F        	sra a
  12+ 996A CB 2F        	sra a
  13+ 996C C9           	ret
  14+ 996D
# file closed: calcula_tercio.asm
1668  996D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 996D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 996D              ;
   3+ 996D              ;
   4+ 996D              ;	CLS.
   5+ 996D              ;
   6+ 996D              ;	Limpia la pantalla y define sus atributos.
   7+ 996D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 996D              ;
   9+ 996D              ;	COLORES: 0 ..... NEGRO
  10+ 996D              ;    		 1 ..... AZUL
  11+ 996D              ; 			 2 ..... ROJO
  12+ 996D              ;			 3 ..... MAGENTA
  13+ 996D              ; 			 4 ..... VERDE
  14+ 996D              ; 			 5 ..... CIAN
  15+ 996D              ;			 6 ..... AMARILLO
  16+ 996D              ; 			 7 ..... BLANCO
  17+ 996D              ;
  18+ 996D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 996D              ;
  20+ 996D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 996D
  22+ 996D
  23+ 996D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9970 11 01 40     	LD DE,$4001
  25+ 9973 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9976 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9978 ED B0        	LDIR
  28+ 997A 01 FF 02     	LD BC,767
  29+ 997D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 997E ED B0        	LDIR
  31+ 9980 C9           	ret
  32+ 9981
# file closed: Cls.asm
1669  9981              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9981              ; ******************************************************************************************************************************************************************************************
   2+ 9981              ;
   3+ 9981              ;   20/05/23
   4+ 9981              ;
   5+ 9981              ;	Recompone_posicion_inicio
   6+ 9981              ;
   7+ 9981              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9981              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9981              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9981              ;	_ a una u otra rutina.
  11+ 9981
  12+ 9981              Recompone_posicion_inicio
  13+ 9981
  14+ 9981 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 9984 7D           	ld a,l
  16+ 9985 E6 1F        	and $1f
  17+ 9987 28 16        	jr z,1F
  18+ 9989
  19+ 9989 FE 1F        	cp $1f
  20+ 998B 28 0D        	jr z,3F
  21+ 998D
  22+ 998D 21 01 89     	ld hl,Ctrl_2
  23+ 9990 CB C6        	set 0,(hl)
  24+ 9992 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9995 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 9998 18 08        	jr 2F
  27+ 999A
  28+ 999A CD 3B 9B     3 call Mov_left
  29+ 999D 18 03        	jr 2F
  30+ 999F
  31+ 999F CD 1D 9A     1 call Mov_right
  32+ 99A2 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99A5 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99A8 C9           	ret
  35+ 99A9
  36+ 99A9              ; ******************************************************************************************************************************************************************************************
  37+ 99A9              ;
  38+ 99A9              ;   27/05/23
  39+ 99A9              ;
  40+ 99A9              ;	Mov_down
  41+ 99A9              ;
  42+ 99A9              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99A9              ;
  44+ 99A9              ;
  45+ 99A9              Mov_down
  46+ 99A9
  47+ 99A9 CD 0B 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99AC              ;																	; _ repone (Puntero_objeto).
  49+ 99AC 21 F0 88     	ld hl,Ctrl_0
  50+ 99AF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99B1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99B1              ; 																	; _ en el caso de que no lo haya.
  53+ 99B1 3A DE 88     	ld a,(Vel_down)
  54+ 99B4 47           	ld b,a
  55+ 99B5 2A C8 88         ld hl,(Posicion_actual)
  56+ 99B8 CD 63 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99BB E6 02        	and 2
  58+ 99BD 28 0F        	jr z,1F
  59+ 99BF
  60+ 99BF              ; Nos encontramos en el último tercio de pantalla.
  61+ 99BF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99BF
  63+ 99BF 7C           	ld a,h
  64+ 99C0 FE 57        	cp $57
  65+ 99C2 20 0A        	jr nz,1F
  66+ 99C4
  67+ 99C4 7D           	ld a,l
  68+ 99C5 C6 20        	add $20
  69+ 99C7 30 05        	jr nc,1F
  70+ 99C9
  71+ 99C9              ; ------------------------------
  72+ 99C9              ;	call Reaparece_arriba
  73+ 99C9 CD C8 9C     	call Reinicio
  74+ 99CC              ; ------------------------------
  75+ 99CC
  76+ 99CC 18 08        	jr 3F
  77+ 99CE CD 50 96     1 call NextScan
  78+ 99D1 22 C8 88     	ld (Posicion_actual),hl
  79+ 99D4 10 E2            djnz 2B
  80+ 99D6 CD EE 9C     3 call Genera_coordenadas
  81+ 99D9 C9           	ret
  82+ 99DA
  83+ 99DA              ; ******************************************************************************************************************************************************************************************
  84+ 99DA              ;
  85+ 99DA              ;   27/05/23
  86+ 99DA              ;
  87+ 99DA              ;	Mov_up
  88+ 99DA              ;
  89+ 99DA              ; 	Mueve el Sprite hacia arriba.
  90+ 99DA              ;
  91+ 99DA              ;
  92+ 99DA              Mov_up
  93+ 99DA
  94+ 99DA CD 0B 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99DD              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99DD 21 F0 88     	ld hl,Ctrl_0
  97+ 99E0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99E2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99E2              ; 																		; _ en el caso de que no lo haya.
 100+ 99E2 3A DD 88     	ld a,(Vel_up)
 101+ 99E5 47           	ld b,a
 102+ 99E6 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99E9 CD 63 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99EC A7           	and a
 105+ 99ED 20 10        	jr nz,1F
 106+ 99EF
 107+ 99EF              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99EF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99EF
 110+ 99EF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99F0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99F2 20 0B            jr nz,1F
 113+ 99F4 7D               ld a,l
 114+ 99F5 D6 20            sub $20
 115+ 99F7 30 06            jr nc,1F
 116+ 99F9 25               dec h
 117+ 99FA
 118+ 99FA              ; -----------------------------
 119+ 99FA CD A9 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99FD              ;	call Reinicio
 121+ 99FD              ; -----------------------------
 122+ 99FD
 123+ 99FD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99FF CD 5F 96     1 call PreviousScan
 125+ 9A02 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A05 10 E2            djnz 3B
 127+ 9A07 CD EE 9C     2 call Genera_coordenadas
 128+ 9A0A C9           	ret
 129+ 9A0B
 130+ 9A0B              ; -----------------------------
 131+ 9A0B              ;
 132+ 9A0B              ;	27/5/23
 133+ 9A0B              ;
 134+ 9A0B              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A0B              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A0B              ;
 137+ 9A0B              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A0B              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A0B              ;
 140+ 9A0B              ;	Modifica: A y (Puntero_objeto).
 141+ 9A0B
 142+ 9A0B 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A0E CB 47        	bit 0,a
 144+ 9A10 C8           	ret z
 145+ 9A11 CB 87        	res 0,a
 146+ 9A13 32 01 89     	ld (Ctrl_2),a
 147+ 9A16 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A19 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A1C C9           	ret
 150+ 9A1D
 151+ 9A1D              ; ******************************************************************************************************************************************************************************************
 152+ 9A1D              ;
 153+ 9A1D              ;	19/10/22
 154+ 9A1D              ;
 155+ 9A1D              ;	Mov_right.
 156+ 9A1D              ;
 157+ 9A1D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A1D              ;
 159+ 9A1D
 160+ 9A1D 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A20 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A22              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A22              ; 																	; _ en el caso de que no lo haya.
 164+ 9A22 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A25 CB 77        	bit 6,a
 166+ 9A27 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A29
 168+ 9A29 CD 57 9C     	call Stop_Amadeus_right
 169+ 9A2C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A2D 18 4D        	jr 8F
 171+ 9A2F
 172+ 9A2F 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A32 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A34 20 46        	jr nz,8F
 175+ 9A36
 176+ 9A36 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A39 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A3A 28 40        	jr z,8F
 179+ 9A3C
 180+ 9A3C              ; ---------- ---------- ----------
 181+ 9A3C              ;
 182+ 9A3C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A3C
 184+ 9A3C 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A3F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A41 28 11        	jr z,1F
 187+ 9A43 38 06        	jr c,6F
 188+ 9A45 FE 04        	cp 4
 189+ 9A47 28 14        	jr z,7F
 190+ 9A49 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A4B
 192+ 9A4B              ; ---------- ---------- ----------
 193+ 9A4B              ;
 194+ 9A4B              ; Perfiles de velocidad
 195+ 9A4B              ;
 196+ 9A4B
 197+ 9A4B 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A4E FE FE        	cp $fe
 199+ 9A50 20 2A        	jr nz,8F
 200+ 9A52 18 10        	jr 3F
 201+ 9A54 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A57 FE FD        	cp $fd
 203+ 9A59 20 21        	jr nz,8F
 204+ 9A5B 18 07        	jr 3F
 205+ 9A5D 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A60 FE FB        	cp $fb
 207+ 9A62 20 18        	jr nz,8F
 208+ 9A64
 209+ 9A64              ; ---------- ---------- ----------
 210+ 9A64
 211+ 9A64              3
 212+ 9A64 CD 97 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A67              ;	call Reinicio
 214+ 9A67
 215+ 9A67              ; ---------- ---------- ----------
 216+ 9A67              ;
 217+ 9A67              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A67
 219+ 9A67 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A69 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A6A CD 83 9A     	call DESPLZ_DER
 222+ 9A6D C1           	pop bc
 223+ 9A6E 10 F9        	djnz 5B
 224+ 9A70 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A73 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A74 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A77 CD EE 9C     	call Genera_coordenadas
 228+ 9A7A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A7C
 230+ 9A7C              ; ---------- ---------- ----------
 231+ 9A7C
 232+ 9A7C 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A7F CD 83 9A     	call DESPLZ_DER
 234+ 9A82 C9           2 ret
 235+ 9A83
 236+ 9A83              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A83              ;
 238+ 9A83              ;	22/9/22
 239+ 9A83              ;
 240+ 9A83
 241+ 9A83 CD 92 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A86 CD DE 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A89 CD 07 9B         call Ciclo_completo
 244+ 9A8C 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A8F CB FE        	set 7,(hl)
 246+ 9A91 C9           	ret
 247+ 9A92
 248+ 9A92              ; ******************************************************************************************************************************************************************************************
 249+ 9A92              ;	15/02/23
 250+ 9A92              ;
 251+ 9A92
 252+ 9A92 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A95 47           	ld b,a
 254+ 9A96 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A99 23           1 inc hl
 256+ 9A9A 23           	inc hl
 257+ 9A9B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A9D 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AA0 CD 83 8C     	call Extrae_address
 260+ 9AA3 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9AA6
 262+ 9AA6              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AA6
 264+ 9AA6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AA6              ; Cuántos movimientos hemos hecho ??
 266+ 9AA6              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AA6
 268+ 9AA6 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AA9 EB           	ex de,hl
 270+ 9AAA A7           	and a
 271+ 9AAB ED 52        	sbc hl,de
 272+ 9AAD CB 3D        	srl l
 273+ 9AAF 3E 08        6 ld a,8
 274+ 9AB1 95           	sub l
 275+ 9AB2 30 1E        	jr nc,3F
 276+ 9AB4
 277+ 9AB4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AB4              ; B="0".
 279+ 9AB4
 280+ 9AB4 04           4 inc b
 281+ 9AB5 3C           	inc a
 282+ 9AB6 20 FC        	jr nz,4B
 283+ 9AB8 78           	ld a,b
 284+ 9AB9 08           	ex af,af
 285+ 9ABA 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9ABD 23           5 inc hl
 287+ 9ABE 23           	inc hl
 288+ 9ABF 10 FC        	djnz 5B
 289+ 9AC1 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AC4 CD 83 8C     	call Extrae_address
 291+ 9AC7 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9ACA
 293+ 9ACA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9ACA              ; _(Posicion_actual).
 295+ 9ACA
 296+ 9ACA 21 C8 88     	ld hl,Posicion_actual
 297+ 9ACD 34           	inc (hl)
 298+ 9ACE 08               ex af,af
 299+ 9ACF 6F           	ld l,a
 300+ 9AD0 18 DD        	jr 6B
 301+ 9AD2
 302+ 9AD2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AD2
 304+ 9AD2 47           3 ld b,a
 305+ 9AD3 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AD6 23           2 inc hl
 307+ 9AD7 23           	inc hl
 308+ 9AD8 10 FC        	djnz 2B
 309+ 9ADA 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9ADD C9           8 ret
 311+ 9ADE
 312+ 9ADE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ADE              ;
 314+ 9ADE              ;	24/7/22
 315+ 9ADE              ;
 316+ 9ADE              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ADE              ;
 318+ 9ADE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ADE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ADE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ADE
 322+ 9ADE 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AE1 A7           	and a
 324+ 9AE2 20 1F        	jr nz,1F
 325+ 9AE4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AE6 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9AE9
 328+ 9AE9 21 C7 88     	ld hl,Columns
 329+ 9AEC 34           	inc (hl)
 330+ 9AED 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AF0 E6 01        	and 1
 332+ 9AF2 28 0F        	jr z,1F
 333+ 9AF4 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AF7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AF8 22 C8 88     	ld (Posicion_actual),hl
 336+ 9AFB CD EE 9C     	call Genera_coordenadas
 337+ 9AFE CD 63 9C     	call Inc_CTRL_DESPLZ
 338+ 9B01 18 03        	jr 2F
 339+ 9B03 CD 63 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B06 C9           2 ret
 341+ 9B07
 342+ 9B07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B07              ;
 344+ 9B07              ;	24/7/22
 345+ 9B07              ;
 346+ 9B07              ;	Ciclo_completo.
 347+ 9B07              ;
 348+ 9B07              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B07              ;
 350+ 9B07              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B07              ; 	Decrementamos (Columns).
 352+ 9B07              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B07              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B07
 355+ 9B07
 356+ 9B07 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B0A FE FF        	cp $ff
 358+ 9B0C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B0E E6 F0        	and $f0
 360+ 9B10 20 28        	jr nz,3F
 361+ 9B12
 362+ 9B12              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B12
 364+ 9B12 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B15 47           	ld b,a
 366+ 9B16 3E F8        	ld a,$f8
 367+ 9B18 80           	add b
 368+ 9B19 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B1C 18 1C        	jr 3F
 370+ 9B1E 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B21 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B22 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B23 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B26 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B29 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B2B 20 0A        	jr nz,2F
 377+ 9B2D 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B30 23           	inc hl
 379+ 9B31 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B34 CD EE 9C     	call Genera_coordenadas
 381+ 9B37
 382+ 9B37              ; Inicia el puntero de Sprite.
 383+ 9B37
 384+ 9B37 CD 9A 8C     2 call Inicia_puntero_objeto_der
 385+ 9B3A C9           3 ret
 386+ 9B3B
 387+ 9B3B              ; ******************************************************************************************************************************************************************************************
 388+ 9B3B              ;
 389+ 9B3B              ;	15/02/23
 390+ 9B3B              ;
 391+ 9B3B              ;	Mov_left.
 392+ 9B3B              ;
 393+ 9B3B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B3B              ;
 395+ 9B3B              Mov_left
 396+ 9B3B
 397+ 9B3B 21 F0 88     	ld hl,Ctrl_0
 398+ 9B3E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B40              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B40              ; 																	; _ en el caso de que no lo haya.
 401+ 9B40 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B43 CB 77        	bit 6,a
 403+ 9B45 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B47
 405+ 9B47 CD 5D 9C     	call Stop_Amadeus_left
 406+ 9B4A C8           	ret z
 407+ 9B4B 20 4A        	jr nz,8F
 408+ 9B4D
 409+ 9B4D 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B50 A7           	and a
 411+ 9B51 20 44        	jr nz,8F
 412+ 9B53
 413+ 9B53 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B56 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B57 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B59
 417+ 9B59              ; ---------- ---------- ----------
 418+ 9B59
 419+ 9B59 3A DB 88     	ld a,(Vel_left)
 420+ 9B5C FE 02        	cp 2
 421+ 9B5E 28 0F        	jr z,1F
 422+ 9B60 38 04        	jr c,6F
 423+ 9B62 FE 04        	cp 4
 424+ 9B64 28 12        	jr z,7F
 425+ 9B66
 426+ 9B66              ; ---------- ---------- ----------
 427+ 9B66
 428+ 9B66 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B69 FE F8        	cp $f8
 430+ 9B6B 20 2A        	jr nz,8F
 431+ 9B6D 18 10        	jr 4F
 432+ 9B6F 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B72 FE F9        	cp $f9
 434+ 9B74 20 21        	jr nz,8F
 435+ 9B76 18 07        	jr 4F
 436+ 9B78 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B7B FE FB        	cp $fb
 438+ 9B7D 20 18        	jr nz,8F
 439+ 9B7F
 440+ 9B7F              ; ---------- ---------- ----------
 441+ 9B7F
 442+ 9B7F              4
 443+ 9B7F CD 85 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B82              ;	call Reinicio
 445+ 9B82
 446+ 9B82              ; ---------- ---------- ----------
 447+ 9B82
 448+ 9B82 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B84 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B85
 451+ 9B85              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B85              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B85
 454+ 9B85 CD 9E 9B     	call DESPLZ_IZQ
 455+ 9B88 C1           	pop bc
 456+ 9B89 10 F9        	djnz 5B
 457+ 9B8B 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B8E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B8F 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B92 CD EE 9C     	call Genera_coordenadas
 461+ 9B95 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B97
 463+ 9B97              ; ---------- ---------- ----------
 464+ 9B97
 465+ 9B97              ; Movemos, no hay recolocación.
 466+ 9B97
 467+ 9B97 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B9A CD 9E 9B     	call DESPLZ_IZQ
 469+ 9B9D C9           2 ret
 470+ 9B9E
 471+ 9B9E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B9E              ;
 473+ 9B9E              ;	22/9/22
 474+ 9B9E
 475+ 9B9E              DESPLZ_IZQ
 476+ 9B9E
 477+ 9B9E CD AD 9B     	call Desplaza_izquierda
 478+ 9BA1 CD F9 9B         call modifica_parametros_1er_DESPLZ
 479+ 9BA4 CD 21 9C     	call Ciclo_completo_2
 480+ 9BA7 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BAA CB BE        	res 7,(hl)
 482+ 9BAC C9           	ret
 483+ 9BAD
 484+ 9BAD              Desplaza_izquierda
 485+ 9BAD
 486+ 9BAD 3A DB 88     	ld a,(Vel_left)
 487+ 9BB0 47           	ld b,a
 488+ 9BB1 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BB4 23           1 inc hl
 490+ 9BB5 23           	inc hl
 491+ 9BB6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BB8 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BBB CD 83 8C     	call Extrae_address
 494+ 9BBE 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BC1
 496+ 9BC1              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BC1
 498+ 9BC1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BC1              ; Cuántos movimientos hemos hecho ??
 500+ 9BC1              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BC1
 502+ 9BC1 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BC4 EB           	ex de,hl
 504+ 9BC5 A7           	and a
 505+ 9BC6 ED 52        	sbc hl,de
 506+ 9BC8 CB 3D        	srl l
 507+ 9BCA 3E 08        6 ld a,8
 508+ 9BCC 95           	sub l
 509+ 9BCD 30 1E        	jr nc,3F
 510+ 9BCF
 511+ 9BCF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BCF              ; B="0".
 513+ 9BCF
 514+ 9BCF 04           4 inc b
 515+ 9BD0 3C           	inc a
 516+ 9BD1 20 FC        	jr nz,4B
 517+ 9BD3 78           	ld a,b
 518+ 9BD4 08           	ex af,af
 519+ 9BD5 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BD8 23           5 inc hl
 521+ 9BD9 23           	inc hl
 522+ 9BDA 10 FC        	djnz 5B
 523+ 9BDC 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BDF CD 83 8C     	call Extrae_address
 525+ 9BE2 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BE5
 527+ 9BE5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BE5              ; _(Posicion_actual).
 529+ 9BE5
 530+ 9BE5 21 C8 88     	ld hl,Posicion_actual
 531+ 9BE8 35           	dec (hl)
 532+ 9BE9 08           	ex af,af
 533+ 9BEA 6F           	ld l,a
 534+ 9BEB 18 DD        	jr 6B
 535+ 9BED
 536+ 9BED              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BED
 538+ 9BED 47           3 ld b,a
 539+ 9BEE 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BF1 23           2 inc hl
 541+ 9BF2 23           	inc hl
 542+ 9BF3 10 FC        	djnz 2B
 543+ 9BF5 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BF8 C9           8 ret
 545+ 9BF9
 546+ 9BF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BF9              ;
 548+ 9BF9              ;	modifica_parametros_1er_DESPLZ
 549+ 9BF9              ;
 550+ 9BF9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BF9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BF9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BF9
 554+ 9BF9 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BFC A7           	and a
 556+ 9BFD 20 1E        	jr nz,1F
 557+ 9BFF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C00 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9C03 21 C7 88     	ld hl,Columns
 560+ 9C06 34           	inc (hl)
 561+ 9C07 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C0A E6 01        	and 1
 563+ 9C0C 20 0F        	jr nz,1F
 564+ 9C0E 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C11 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C12 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C15 CD EE 9C     	call Genera_coordenadas
 568+ 9C18 CD 74 9C     	call Dec_CTRL_DESPLZ
 569+ 9C1B 18 03        	jr 2F
 570+ 9C1D CD 74 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C20 C9           2 ret
 572+ 9C21
 573+ 9C21              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C21
 575+ 9C21 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C24 FE F7        	cp $f7
 577+ 9C26 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C28 30 2C        	jr nc,3F
 579+ 9C2A
 580+ 9C2A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C2A
 582+ 9C2A 06 00        	ld b,0
 583+ 9C2C 04           4 inc b
 584+ 9C2D 3C           	inc a
 585+ 9C2E FE F7        	cp $f7
 586+ 9C30 20 FA        	jr nz,4B
 587+ 9C32 3E FF        	ld a,$ff
 588+ 9C34 90           	sub b
 589+ 9C35 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C38 18 1C        	jr 3F
 591+ 9C3A
 592+ 9C3A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C3A
 594+ 9C3A 21 C7 88     1 ld hl,Columns
 595+ 9C3D 35           	dec (hl)
 596+ 9C3E AF           	xor a
 597+ 9C3F 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C42 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C45 E6 01        	and 1
 600+ 9C47 28 0A        	jr z,2F
 601+ 9C49 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C4C 2B           	dec hl
 603+ 9C4D 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C50 CD EE 9C     	call Genera_coordenadas
 605+ 9C53
 606+ 9C53              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C53
 608+ 9C53 CD AD 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C56 C9           3 ret
 610+ 9C57
 611+ 9C57              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C57              ;
 613+ 9C57              ;	19/10/22
 614+ 9C57              ;
 615+ 9C57              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C57              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C57
 618+ 9C57 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C5A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C5C C9           	ret
 621+ 9C5D
 622+ 9C5D              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C5D              ;
 624+ 9C5D              ;	19/10/22
 625+ 9C5D              ;
 626+ 9C5D              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C5D              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C5D
 629+ 9C5D 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C60 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C62 C9           	ret
 632+ 9C63
 633+ 9C63              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C63              ;
 635+ 9C63              ;	24/7/22
 636+ 9C63              ;
 637+ 9C63              ;	Inc_CTRL_DESPLZ
 638+ 9C63              ;
 639+ 9C63              ;
 640+ 9C63              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C63
 642+ 9C63 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C66 3A DC 88     	ld a,(Vel_right)
 644+ 9C69 A7           	and a
 645+ 9C6A 28 06        	jr z,1F
 646+ 9C6C 47           	ld b,a
 647+ 9C6D 34           3 inc (hl)
 648+ 9C6E 10 FD        	djnz 3B
 649+ 9C70 18 01        	jr 2F
 650+ 9C72 34           1 inc (hl)
 651+ 9C73 C9           2 ret
 652+ 9C74
 653+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C74              ;
 655+ 9C74              ;	5/2/23
 656+ 9C74              ;
 657+ 9C74              ;	Dec_CTRL_DESPLZ
 658+ 9C74              ;
 659+ 9C74              ;
 660+ 9C74              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C74
 662+ 9C74 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C77 3A DB 88     	ld a,(Vel_left)
 664+ 9C7A A7           	and a
 665+ 9C7B 28 06        	jr z,1F
 666+ 9C7D 47           	ld b,a
 667+ 9C7E 35           3 dec (hl)
 668+ 9C7F 10 FD        	djnz 3B
 669+ 9C81 18 01        	jr 2F
 670+ 9C83 35           1 dec (hl)
 671+ 9C84 C9           2 ret
 672+ 9C85
 673+ 9C85              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C85
 675+ 9C85 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C88 01 1F 00     	ld bc,31
 677+ 9C8B A7           	and a
 678+ 9C8C ED 4A        	adc hl,bc
 679+ 9C8E 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C91 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C94 CB C6        	set 0,(hl)
 682+ 9C96 C9           	ret
 683+ 9C97
 684+ 9C97              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C97
 686+ 9C97 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C9A 01 1F 00     	ld bc,31
 688+ 9C9D A7           	and a
 689+ 9C9E ED 42        	sbc hl,bc
 690+ 9CA0 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CA3 21 F0 88     	ld hl,Ctrl_0
 692+ 9CA6 CB CE        	set 1,(hl)
 693+ 9CA8 C9           	ret
 694+ 9CA9
 695+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CA9
 697+ 9CA9 24           Reaparece_abajo inc h
 698+ 9CAA 01 E0 17     	ld bc,$17e0
 699+ 9CAD A7           	and a
 700+ 9CAE ED 4A        	adc hl,bc
 701+ 9CB0 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CB3 21 F0 88     	ld hl,Ctrl_0
 703+ 9CB6 CB D6        	set 2,(hl)
 704+ 9CB8 C9           	ret
 705+ 9CB9
 706+ 9CB9              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CB9
 708+ 9CB9 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CBC A7           	and a
 710+ 9CBD ED 42        	sbc hl,bc
 711+ 9CBF 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CC2 21 F0 88     	ld hl,Ctrl_0
 713+ 9CC5 CB DE        	set 3,(hl)
 714+ 9CC7 C9           	ret
 715+ 9CC8
 716+ 9CC8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CC8              ;
 718+ 9CC8              ;	15/07/23
 719+ 9CC8
 720+ 9CC8              Reinicio
 721+ 9CC8
 722+ 9CC8              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CC8
 724+ 9CC8 AF           	xor a
 725+ 9CC9 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CCC CD EA 9C     	call Limpia_contenido_hl
 727+ 9CCF
 728+ 9CCF 21 C8 88     	ld hl,Posicion_actual
 729+ 9CD2 CD EA 9C     	call Limpia_contenido_hl
 730+ 9CD5
 731+ 9CD5 CD 1A A0     	call Inicializa_Puntero_indice_mov
 732+ 9CD8 CD A4 9F     	call Inicia_Puntero_mov
 733+ 9CDB
 734+ 9CDB 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CDE 06 05        	ld b,5
 736+ 9CE0 77           1 ld (hl),a
 737+ 9CE1 23           	inc hl
 738+ 9CE2 10 FC        	djnz 1B
 739+ 9CE4
 740+ 9CE4 21 01 89     	ld hl,Ctrl_2
 741+ 9CE7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CE9
 743+ 9CE9 C9           	ret
 744+ 9CEA
 745+ 9CEA 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CEB 23           	inc hl
 747+ 9CEC 77           	ld (hl),a
 748+ 9CED C9           	ret
 749+ 9CEE
 750+ 9CEE
# file closed: Direcciones.asm
1670  9CEE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CEE              ; ------------------------------------------------------------------------
   2+ 9CEE              ;
   3+ 9CEE              ;	02/04/23
   4+ 9CEE              ;
   5+ 9CEE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CEE              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CEE              ;
   8+ 9CEE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CEE              ;
  10+ 9CEE              ;	Modifica: A,BC y DE.
  11+ 9CEE
  12+ 9CEE C5           Genera_coordenadas push bc
  13+ 9CEF E5           	push hl
  14+ 9CF0 D5           	push de
  15+ 9CF1
  16+ 9CF1 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CF4
  18+ 9CF4 7D           	ld a,l
  19+ 9CF5 E6 1F        	and $1f
  20+ 9CF7 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CFA
  22+ 9CFA CD 63 99     	call calcula_tercio
  23+ 9CFD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CFE
  25+ 9CFE 1E 00        	ld e,0
  26+ 9D00 7D           	ld a,l
  27+ 9D01 E6 E0        	and $e0
  28+ 9D03 28 01        	jr z,1F
  29+ 9D05 04           	inc b
  30+ 9D06
  31+ 9D06 04           1 inc b
  32+ 9D07 05           	dec b
  33+ 9D08 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D0A              ;														; _ , salimos.
  35+ 9D0A 1C           3 inc e
  36+ 9D0B D6 20        	sub 32
  37+ 9D0D 20 FB        	jr nz,3B
  38+ 9D0F 10 F5        	djnz 1B
  39+ 9D11
  40+ 9D11 7B           2 ld a,e
  41+ 9D12 32 CD 88     	ld (Coordenada_y),a
  42+ 9D15
  43+ 9D15 D1           	pop de
  44+ 9D16 E1           	pop hl
  45+ 9D17 C1           	pop bc
  46+ 9D18
  47+ 9D18 C9           	ret
  48+ 9D19
  49+ 9D19              ; ------------------------------------------------------------------------
  50+ 9D19              ;	28/05/23
  51+ 9D19              ;
  52+ 9D19              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D19              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D19              ;
  55+ 9D19              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D19              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D19              ;
  58+ 9D19              ;		DE="$120d"
  59+ 9D19              ;
  60+ 9D19              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D19              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D19              ;
  63+ 9D19              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D19
  65+ 9D19              ;	Modifica: A,BC y DE.
  66+ 9D19
  67+ 9D19
  68+ 9D19              Genera_coordenadas_disparo
  69+ 9D19
  70+ 9D19              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D19
  72+ 9D19 7D           	ld a,l
  73+ 9D1A E6 1F        	and $1f
  74+ 9D1C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D1D CD 63 99     	call calcula_tercio
  76+ 9D20 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D21 1E 00        	ld e,0
  78+ 9D23 7D           	ld a,l
  79+ 9D24 E6 E0        	and $e0
  80+ 9D26 28 01        	jr z,1F
  81+ 9D28 04           	inc b
  82+ 9D29 1C           1 inc e
  83+ 9D2A D6 20        	sub 32
  84+ 9D2C 20 FB        	jr nz,1B
  85+ 9D2E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D30 C9           	ret
  87+ 9D31
# file closed: Genera_coordenadas.asm
1671  9D31              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D31              ; Relojes y temporizaciones.
   2+ 9D31
   3+ 9D31              ; ------------------------------------------------------
   4+ 9D31              ;
   5+ 9D31              ;	16/7/23
   6+ 9D31              ;
   7+ 9D31              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D31              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D31              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D31              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D31              ;
  12+ 9D31              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D31              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D31
  15+ 9D31              ; Disparo_entidad db 1
  16+ 9D31              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D31              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D31
  19+ 9D31              Habilita_disparos
  20+ 9D31
  21+ 9D31 7E           	ld a,(hl)
  22+ 9D32 A7           	and a
  23+ 9D33 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D34
  25+ 9D34 EB           	ex de,hl
  26+ 9D35
  27+ 9D35 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D36 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D37
  30+ 9D37              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D37
  32+ 9D37 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D38 7E           	ld a,(hl)
  34+ 9D39 23           	inc hl
  35+ 9D3A 77           	ld (hl),a
  36+ 9D3B
  37+ 9D3B EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D3C 3E 01        	ld a,1
  39+ 9D3E 77           	ld (hl),a
  40+ 9D3F C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1672  9D40              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D40
   2+ 9D40
   3+ 9D40              ;   07/07/23
   4+ 9D40              ;
   5+ 9D40              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D40              ;
   7+ 9D40              ;   Codificación:
   8+ 9D40              ;
   9+ 9D40              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D40              ;
  11+ 9D40              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D40              ;
  13+ 9D40              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D40              ;
  15+ 9D40              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D40              ;
  17+ 9D40              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D40              ;                               ..... %01000010 Vel_up 4
  19+ 9D40              ;                                               Vel_down 2
  20+ 9D40              ;                               ..... $42
  21+ 9D40              ;
  22+ 9D40              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D40              ;
  24+ 9D40              ;                               ..... %01000010 Vel_left 4
  25+ 9D40              ;                                               Vel_right 2
  26+ 9D40              ;                               ..... $42
  27+ 9D40              ;
  28+ 9D40              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D40              ;
  30+ 9D40              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D40              ;
  32+ 9D40              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D40              ;
  34+ 9D40              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D40              ;                                     $53
  36+ 9D40              ;
  37+ 9D40              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D40              ;
  39+ 9D40              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D40              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D40              ;
  42+ 9D40              ;                       Arriba ..... $81
  43+ 9D40              ;                       Arriba - izquierda ..... $a1
  44+ 9D40              ;                       Arriba - derecha ..... $91
  45+ 9D40              ;
  46+ 9D40              ;                       Abajo ..... $41
  47+ 9D40              ;                       Abajo - izquierda ..... $61
  48+ 9D40              ;                       Abajo - derecha ..... $51
  49+ 9D40              ;
  50+ 9D40              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D40              ;
  52+ 9D40              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D40              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D40              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D40              ;
  56+ 9D40              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D40              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D40              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D40              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D40              ;
  61+ 9D40              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D40              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D40              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D40              ;
  65+ 9D40              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D40              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D40              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D40              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D40
  70+ 9D40              ; ----- ----- ----- ----- -----
  71+ 9D40
  72+ 9D40 6C 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D42 74 9D            defw F_1
  74+ 9D44 7E 9D            defw F_2
  75+ 9D46 88 9D            defw Codo_abajo_derecha
  76+ 9D48 BC 9D            defw Derecha_y_subiendo
  77+ 9D4A C6 9D            defw Derecha_y_subiendo_1
  78+ 9D4C D0 9D            defw F_3
  79+ 9D4E DA 9D            defw F_4
  80+ 9D50 E4 9D            defw Derecha_y_bajando
  81+ 9D52 EE 9D            defw Derecha_y_bajando_1
  82+ 9D54 F8 9D            defw Derecha_y_bajando_2
  83+ 9D56 02 9E            defw Codo_derecha_abajo
  84+ 9D58 32 9E            defw Codo_abajo_izq.
  85+ 9D5A 66 9E            defw Izquierda_y_subiendo
  86+ 9D5C 70 9E            defw Izquierda_y_subiendo_1
  87+ 9D5E 7A 9E            defw F_5
  88+ 9D60 84 9E            defw F_6
  89+ 9D62 8E 9E            defw Izquierda_y_bajando
  90+ 9D64 98 9E            defw Izquierda_y_bajando_1
  91+ 9D66 A2 9E            defw Izquierda_y_bajando_2
  92+ 9D68 AC 9E            defw Codo_izquierda_abajo
  93+ 9D6A 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D6C
  95+ 9D6C 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D70 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D74
  98+ 9D74 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D78 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D7C 08 00
 100+ 9D7E 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D82 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D86 0F FE
 102+ 9D88
 103+ 9D88 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D8C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D90 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D94 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D98 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D9C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DA0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DA4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DA8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DAC 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DB0 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DB4 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DB8 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DBC
 117+ 9DBC 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DC0 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DC4 06 00
 119+ 9DC6
 120+ 9DC6 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DCA 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DCE 02 00
 122+ 9DD0
 123+ 9DD0 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DD4 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DD8 04 00
 125+ 9DDA 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DDE 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DE2 08 00
 127+ 9DE4
 128+ 9DE4 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DE8 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DEC 02 00
 130+ 9DEE
 131+ 9DEE 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DF2 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DF6 06 00
 133+ 9DF8
 134+ 9DF8 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DFC 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E00 06 00
 136+ 9E02
 137+ 9E02              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E02
 139+ 9E02 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E06 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E0A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E0E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E12 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E16 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E1A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E1E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E22 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E26 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E2A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E2E 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E32
 152+ 9E32 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E36 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E3A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E3E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E42 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E46 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E4A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E4E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E52 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E56 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E5A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E5E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E62 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E66
 166+ 9E66 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E6A 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E6E 06 00
 168+ 9E70
 169+ 9E70 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E74 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E78 02 00
 171+ 9E7A
 172+ 9E7A 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E7E 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E82 04 00
 174+ 9E84 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E88 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E8C 08 00
 176+ 9E8E
 177+ 9E8E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E92 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E96 02 00
 179+ 9E98
 180+ 9E98 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E9C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EA0 06 00
 182+ 9EA2
 183+ 9EA2 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EA6 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EAA 06 00
 185+ 9EAC
 186+ 9EAC 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EB0 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EB4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EB8 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EBC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EC0 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EC4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EC8 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9ECC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9ED0 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9ED4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9ED8 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EDC
 199+ 9EDC              ; ----- ----- ----- ----- -----
 200+ 9EDC              ;
 201+ 9EDC              ;   27/06/23
 202+ 9EDC
 203+ 9EDC              Movimiento
 204+ 9EDC
 205+ 9EDC              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EDC
 207+ 9EDC              ;    ld hl,(Posicion_actual)
 208+ 9EDC
 209+ 9EDC 3A 01 89         ld a,(Ctrl_2)
 210+ 9EDF CB 57            bit 2,a
 211+ 9EE1 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EE3
 213+ 9EE3 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EE6 7E               ld a,(hl)
 215+ 9EE7
 216+ 9EE7              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EE7
 218+ 9EE7              Inicia_desplazamiento.
 219+ 9EE7
 220+ 9EE7              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EE7
 222+ 9EE7 CD DB 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EEA
 224+ 9EEA              ; Iniciamos (Repetimos_mov).
 225+ 9EEA
 226+ 9EEA 7E               ld a,(hl)
 227+ 9EEB E6 0F            and $0f
 228+ 9EED 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EF0 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EF3
 231+ 9EF3              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EF3
 233+ 9EF3 23               inc hl
 234+ 9EF4 7E               ld a,(hl)
 235+ 9EF5 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EF8 2B               dec hl
 237+ 9EF9
 238+ 9EF9 21 01 89         ld hl,Ctrl_2
 239+ 9EFC CB D6            set 2,(hl)
 240+ 9EFE
 241+ 9EFE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EFE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EFE
 244+ 9EFE              Desplazamiento_iniciado
 245+ 9EFE
 246+ 9EFE CD AF 9F         call Aplica_desplazamiento
 247+ 9F01
 248+ 9F01 3A 01 89         ld a,(Ctrl_2)
 249+ 9F04 CB 67            bit 4,a
 250+ 9F06 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F07
 252+ 9F07 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F0A 35               dec (hl)
 254+ 9F0B C0               ret nz
 255+ 9F0C
 256+ 9F0C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F0C              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F0C              ; Analiza (Cola_de_desplazamiento).
 259+ 9F0C
 260+ 9F0C 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F0F A7               and a
 262+ 9F10 CC 04 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F13 28 30            jr z,Reinicia_el_movimiento
 264+ 9F15
 265+ 9F15 FE FF            cp $ff
 266+ 9F17 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F19
 268+ 9F19 FE FE            cp $fe
 269+ 9F1B CC 88 9F         call z,Fijamos_bucle
 270+ 9F1E 28 25            jr z,Reinicia_el_movimiento
 271+ 9F20
 272+ 9F20 FE FD            cp $fd
 273+ 9F22 20 11            jr nz,1F
 274+ 9F24
 275+ 9F24              ; ---
 276+ 9F24              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F24
 278+ 9F24 3A 01 89         ld a,(Ctrl_2)
 279+ 9F27 CB 5F            bit 3,a
 280+ 9F29 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F2B
 282+ 9F2B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F2B
 284+ 9F2B 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F2E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F30
 287+ 9F30 CD 99 9F         call Inicia_Repetimos_movimiento
 288+ 9F33 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F35              ; ---
 290+ 9F35
 291+ 9F35 FE 01        1 cp 1
 292+ 9F37 CA 72 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F3A
 294+ 9F3A 3D               dec a
 295+ 9F3B 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F3E
 297+ 9F3E 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F41 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F44              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F44 C9               ret
 301+ 9F45
 302+ 9F45              Reinicia_el_movimiento
 303+ 9F45
 304+ 9F45 3A 01 89         ld a,(Ctrl_2)
 305+ 9F48 CB 5F            bit 3,a
 306+ 9F4A 28 1B            jr z,2F
 307+ 9F4C
 308+ 9F4C              ; (Cola_de_desplazamiento)="254".
 309+ 9F4C
 310+ 9F4C 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F4F 35               dec (hl)
 312+ 9F50 20 15            jr nz,2F
 313+ 9F52
 314+ 9F52              ; Fin de las repeticiones del último movimiento.
 315+ 9F52
 316+ 9F52 21 01 89         ld hl,Ctrl_2
 317+ 9F55 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F57
 319+ 9F57 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F5A 23               inc hl
 321+ 9F5B 23               inc hl
 322+ 9F5C 23               inc hl
 323+ 9F5D 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F60              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F60 7E               ld a,(hl)
 326+ 9F61 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F64
 328+ 9F64 C3 0C 9F         jp Cola
 329+ 9F67
 330+ 9F67 CD A4 9F     2 call Inicia_Puntero_mov
 331+ 9F6A
 332+ 9F6A 21 01 89         ld hl,Ctrl_2
 333+ 9F6D CB 96            res 2,(hl)
 334+ 9F6F
 335+ 9F6F C3 DC 9E         jp Movimiento
 336+ 9F72
 337+ 9F72              Siguiente_desplazamiento
 338+ 9F72
 339+ 9F72              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F72              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F72
 342+ 9F72 21 01 89         ld hl,Ctrl_2
 343+ 9F75 CB 96            res 2,(hl)
 344+ 9F77
 345+ 9F77 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F7A 23               inc hl
 347+ 9F7B 23               inc hl
 348+ 9F7C 22 F3 88         ld (Puntero_mov),hl
 349+ 9F7F
 350+ 9F7F 7E               ld a,(hl)
 351+ 9F80 A7               and a
 352+ 9F81 CC 04 A0         call z,Incrementa_Puntero_indice_mov
 353+ 9F84 CA 45 9F         jp z,Reinicia_el_movimiento
 354+ 9F87
 355+ 9F87 C9               ret
 356+ 9F88              ; Subrutinas -----------------------------------------
 357+ 9F88              ; ---------- --------- --------- ---------- ----------
 358+ 9F88              ;
 359+ 9F88              ;   24/07/23
 360+ 9F88              ;
 361+ 9F88              ;   Fijamos_bucle
 362+ 9F88              ;
 363+ 9F88              ;
 364+ 9F88
 365+ 9F88              Fijamos_bucle
 366+ 9F88
 367+ 9F88 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F8B 3C               inc a
 369+ 9F8C 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F8F
 371+ 9F8F CD 04 A0         call Incrementa_Puntero_indice_mov
 372+ 9F92 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F95 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F98 C9               ret
 375+ 9F99
 376+ 9F99              ; ---------- --------- --------- ---------- ----------
 377+ 9F99              ;
 378+ 9F99              ;   07/7/23
 379+ 9F99              ;
 380+ 9F99              ;   Inicia_Repetimos_movimiento
 381+ 9F99              ;
 382+ 9F99              ;
 383+ 9F99
 384+ 9F99              Inicia_Repetimos_movimiento
 385+ 9F99
 386+ 9F99              ; Iniciamos (Repetimos_movimiento).
 387+ 9F99
 388+ 9F99 DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F9D DD 7E 02         ld a,(ix+2)
 390+ 9FA0 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9FA3
 392+ 9FA3 C9               ret
 393+ 9FA4
 394+ 9FA4              ; ---------- --------- --------- ---------- ----------
 395+ 9FA4              ;
 396+ 9FA4              ;   26/6/23
 397+ 9FA4              ;
 398+ 9FA4              ;   Inicia_Puntero_mov
 399+ 9FA4              ;
 400+ 9FA4              ;
 401+ 9FA4
 402+ 9FA4 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9FA7 5E               ld e,(hl)
 404+ 9FA8 23               inc hl
 405+ 9FA9 56               ld d,(hl)
 406+ 9FAA EB               ex de,hl
 407+ 9FAB 22 F3 88         ld (Puntero_mov),hl
 408+ 9FAE C9               ret
 409+ 9FAF
 410+ 9FAF              ; ---------- --------- --------- ---------- ----------
 411+ 9FAF              ;
 412+ 9FAF              ;   27/06/23
 413+ 9FAF              ;
 414+ 9FAF              ;   Aplica_movimiento.
 415+ 9FAF
 416+ 9FAF              Aplica_desplazamiento
 417+ 9FAF
 418+ 9FAF              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9FAF
 420+ 9FAF 2A F3 88         ld hl, (Puntero_mov)
 421+ 9FB2
 422+ 9FB2 7E               ld a,(hl)
 423+ 9FB3 E6 F0            and $f0
 424+ 9FB5 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9FB6
 426+ 9FB6 CB 7E            bit 7,(hl)
 427+ 9FB8 28 03            jr z,1F
 428+ 9FBA CD DA 99         call Mov_up
 429+ 9FBD 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9FC0 CB 76            bit 6,(hl)
 431+ 9FC2 28 03            jr z,2F
 432+ 9FC4 CD A9 99         call Mov_down
 433+ 9FC7 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9FCA CB 6E            bit 5,(hl)
 435+ 9FCC 28 03            jr z,3F
 436+ 9FCE CD 3B 9B         call Mov_left
 437+ 9FD1 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9FD4 CB 66            bit 4,(hl)
 439+ 9FD6 C8               ret z
 440+ 9FD7 CD 1D 9A         call Mov_right
 441+ 9FDA C9               ret
 442+ 9FDB
 443+ 9FDB              ; ---------- --------- --------- ---------- ----------
 444+ 9FDB              ;
 445+ 9FDB              ;   26/06/23
 446+ 9FDB              ;
 447+ 9FDB              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FDB
 449+ 9FDB              Ajusta_velocidad_desplazamiento
 450+ 9FDB
 451+ 9FDB              ; 1er byte de la cadena de movimiento.
 452+ 9FDB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FDB
 454+ 9FDB CD F9 9F         call Extrae_nibble_alto
 455+ 9FDE
 456+ 9FDE 32 DD 88         ld (Vel_up),a
 457+ 9FE1 79               ld a,c
 458+ 9FE2 E6 0F            and $0f
 459+ 9FE4 32 DE 88         ld (Vel_down),a
 460+ 9FE7
 461+ 9FE7              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FE7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FE7
 464+ 9FE7 23               inc hl
 465+ 9FE8 CD F9 9F         call Extrae_nibble_alto
 466+ 9FEB
 467+ 9FEB 32 DB 88         ld (Vel_left),a
 468+ 9FEE 79               ld a,c
 469+ 9FEF E6 0F            and $0f
 470+ 9FF1 32 DC 88         ld (Vel_right),a
 471+ 9FF4
 472+ 9FF4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FF4
 474+ 9FF4 23               inc hl
 475+ 9FF5 22 F3 88         ld (Puntero_mov),hl
 476+ 9FF8 C9               ret
 477+ 9FF9
 478+ 9FF9 06 04        Extrae_nibble_alto ld b,4
 479+ 9FFB 7E               ld a,(hl)
 480+ 9FFC 4F               ld c,a
 481+ 9FFD E6 F0            and $f0
 482+ 9FFF CB 3F        1 srl a
 483+ A001 10 FC            djnz 1B
 484+ A003 C9               ret
 485+ A004
 486+ A004              ; ---------- --------- --------- ---------- ----------
 487+ A004              ;
 488+ A004              ;   5/7/23
 489+ A004              ;
 490+ A004              ;   Incrementa_Puntero_indice_mov
 491+ A004
 492+ A004              Incrementa_Puntero_indice_mov
 493+ A004
 494+ A004 21 F7 88         ld hl,Incrementa_puntero
 495+ A007 34               inc (hl)
 496+ A008
 497+ A008 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ A00B 01 02 00         ld bc,2
 499+ A00E A7               and a
 500+ A00F 09               add hl,bc
 501+ A010 22 F1 88         ld (Puntero_indice_mov),hl
 502+ A013
 503+ A013 7E               ld a,(hl)
 504+ A014 A7               and a
 505+ A015
 506+ A015              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ A015
 508+ A015              ;    jr z,$
 509+ A015
 510+ A015              ;! Reinicia el Patrón de movimiento.
 511+ A015
 512+ A015 CC 1A A0         call z,Inicializa_Puntero_indice_mov
 513+ A018
 514+ A018 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ A019
 516+ A019 C9               ret
 517+ A01A
 518+ A01A
 519+ A01A              ; ---------- --------- --------- ---------- ----------
 520+ A01A              ;
 521+ A01A              ;   24/07/23
 522+ A01A              ;
 523+ A01A              ;   Inicializa_Puntero_indice_mov
 524+ A01A
 525+ A01A              Inicializa_Puntero_indice_mov
 526+ A01A
 527+ A01A              ; Existe etiqueta de bucle principal???
 528+ A01A
 529+ A01A 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ A01D 24               inc h
 531+ A01E 25               dec h
 532+ A01F 28 05            jr z,2F
 533+ A021
 534+ A021 22 F1 88         ld (Puntero_indice_mov),hl
 535+ A024 18 14            jr 3F
 536+ A026
 537+ A026              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A026
 539+ A026 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ A029 47               ld b,a
 541+ A02A
 542+ A02A 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ A02D 2B           1 dec hl
 544+ A02E 2B               dec hl
 545+ A02F 10 FC            djnz 1B
 546+ A031 22 F1 88         ld (Puntero_indice_mov),hl
 547+ A034
 548+ A034 AF               xor a
 549+ A035 32 F7 88         ld (Incrementa_puntero),a
 550+ A038 18 06            jr 4F
 551+ A03A
 552+ A03A 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A03D 32 F7 88         ld (Incrementa_puntero),a
 554+ A040 C9           4 ret
 555+ A041
 556+ A041
 557+ A041
# file closed: Patrones_de_mov.asm
1673  A041              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A041              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A041              ;
   3+ A041              ;	4/9/23
   4+ A041              ;
   5+ A041              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A041
   7+ A041              ;	ADC HL,SP	LD (addr),SP
   8+ A041              ;	ADD HL,SP	LD SP,(addr)
   9+ A041              ;	ADD IX,SP	LD SP,nn
  10+ A041              ; 	ADD IY,SP	LD SP,HL
  11+ A041              ;				LD SP,IX
  12+ A041              ;	DEC SP		LD SP,IY
  13+ A041
  14+ A041              ;	EX (SP),HL
  15+ A041              ;	EX (SP),IX
  16+ A041              ;	EX (SP),IY
  17+ A041
  18+ A041              ;	INC SP
  19+ A041
  20+ A041                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E6 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 03 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F0 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 03 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1D 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F0 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 23 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 15 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1B 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 15 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   3/08/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 127+ 72EC              ;   Vaciamos Album_de_fotos.
 128+ 72EC
 129+ 72EC              ;   Album_de_fotos. Contiene datos ???
 130+ 72EC
 131+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 132+ 72EF 7E               ld a,(hl)
 133+ 72F0 A7               and a
 134+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 135+ 72F3
 136+ 72F3 2A 1F 89         ld hl,(End_Snapshot)
 137+ 72F6 01 00 70         ld bc,Album_de_fotos
 138+ 72F9 11 01 70         ld de,Album_de_fotos+1
 139+ 72FC AF               xor a
 140+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 141+ 72FE
 142+ 72FE CD 8E 73         call Limpia_album
 143+ 7301
 144+ 7301 21 00 00         ld hl,0
 145+ 7304 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 146+ 7307
 147+ 7307              ; ----- ----- ----- -----
 148+ 7307
 149+ 7307              ;   Album_de_fotos_1. Contiene la imagen de un cuadro completo ???
 150+ 7307
 151+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 152+ 730A 7E               ld a,(hl)
 153+ 730B A7               and a
 154+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 155+ 730E              ;                               ; _ información del album2 al album1.
 156+ 730E
 157+ 730E              ; ----- ----- ----- -----
 158+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 159+ 730E
 160+ 730E 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 161+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 162+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 163+ 7317
 164+ 7317 CD 8E 73         call Limpia_album
 165+ 731A
 166+ 731A              ;   Calculamos (End_Snapshot)
 167+ 731A
 168+ 731A A7               and a
 169+ 731B ED 4A            adc hl,bc
 170+ 731D 22 1F 89         ld (End_Snapshot),hl
 171+ 7320
 172+ 7320              ;   Limpiamos Album_de_fotos_1.
 173+ 7320
 174+ 7320 2A 25 89         ld hl,(End_Snapshot_1)
 175+ 7323 01 54 70         ld bc,Album_de_fotos_1
 176+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 177+ 7329 AF               xor a
 178+ 732A 02               ld (bc),a
 179+ 732B
 180+ 732B CD 8E 73         call Limpia_album
 181+ 732E
 182+ 732E 21 00 00         ld hl,0
 183+ 7331 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 184+ 7334
 185+ 7334              ; ----- ----- ----- -----
 186+ 7334
 187+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 188+ 7334
 189+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 190+ 7337 7E               ld a,(hl)
 191+ 7338 A7               and a
 192+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 193+ 733B              ;                               ; _ información del album3 al album2.
 194+ 733B              ; ----- ----- ----- -----
 195+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 196+ 733B
 197+ 733B 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 198+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 199+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 200+ 7344
 201+ 7344 CD 8E 73         call Limpia_album
 202+ 7347
 203+ 7347              ;   Calculamos (End_Snapshot_1):
 204+ 7347
 205+ 7347 A7               and a
 206+ 7348 ED 4A            adc hl,bc
 207+ 734A 22 25 89         ld (End_Snapshot_1),hl
 208+ 734D
 209+ 734D              ;   Limpiamos Album_de_fotos_2.
 210+ 734D
 211+ 734D 2A 29 89         ld hl,(End_Snapshot_2)
 212+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 213+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 214+ 7356 AF               xor a
 215+ 7357 02               ld (bc),a
 216+ 7358
 217+ 7358 CD 8E 73         call Limpia_album
 218+ 735B
 219+ 735B 21 00 00         ld hl,0
 220+ 735E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 221+ 7361
 222+ 7361              ; ----- ----- ----- -----
 223+ 7361
 224+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 225+ 7361
 226+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 227+ 7364 7E               ld a,(hl)
 228+ 7365 A7               and a
 229+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 230+ 7367
 231+ 7367              ; ----- ----- ----- -----
 232+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 233+ 7367
 234+ 7367 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 235+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 236+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 237+ 7370
 238+ 7370 CD 8E 73         call Limpia_album
 239+ 7373
 240+ 7373              ;   Calculamos (End_Snapshot_2):
 241+ 7373
 242+ 7373 A7               and a
 243+ 7374 ED 4A            adc hl,bc
 244+ 7376 22 29 89         ld (End_Snapshot_2),hl
 245+ 7379
 246+ 7379              ;   Limpiamos Album_de_fotos_3.
 247+ 7379
 248+ 7379 2A 2D 89         ld hl,(End_Snapshot_3)
 249+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 250+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 251+ 7382 AF               xor a
 252+ 7383 02               ld (bc),a
 253+ 7384
 254+ 7384 CD 8E 73         call Limpia_album
 255+ 7387
 256+ 7387 21 00 00         ld hl,0
 257+ 738A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 258+ 738D C9               ret
 259+ 738E
 260+ 738E              ; ----------------------------------------------------
 261+ 738E              ;
 262+ 738E              ;   10/8/23
 263+ 738E              ;
 264+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 265+ 738E              ;
 266+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 267+ 738E              ;           BC ..... Dirección de inicio del álbum.
 268+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 269+ 738E
 270+ 738E              ;    ld hl,(End_Snapshot)
 271+ 738E              ;    ld bc,Album_de_fotos
 272+ 738E              ;    ld de,Album_de_fotos+1
 273+ 738E
 274+ 738E              ;   MODIFICA: A,HL,BC y DE.
 275+ 738E
 276+ 738E              Limpia_album
 277+ 738E D5               push de                     ; Guardo DESTINO.
 278+ 738F C5               push bc                     ; Guardo ORIGEN.
 279+ 7390 ED 42            sbc hl,bc
 280+ 7392 4D               ld c,l
 281+ 7393 44               ld b,h
 282+ 7394 E1               pop hl
 283+ 7395 C5               push bc
 284+ 7396 ED B0            ldir
 285+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 286+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 287+ 739A C9               ret                         ; _ a otro).
 288+ 739B              ;
 289+ 739B
 290+ 739B              ; -----------------------------------------------
 291+ 739B              ;
 292+ 739B              ;   13/10/23
 293+ 739B
 294+ 739B              Actualiza_semaforo
 295+ 739B
 296+ 739B              ; Está activo el bit "Album_de_fotos" ???
 297+ 739B
 298+ 739B 3A 3D 89         ld a,(Semaforo)
 299+ 739E CB 47            bit 0,a
 300+ 73A0 20 04            jr nz,1F
 301+ 73A2 CB C7            set 0,a                     ; Album_de_fotos COMPLETO.
 302+ 73A4 18 0D            jr 2F
 303+ 73A6 CB 4F        1 bit 1,a
 304+ 73A8 20 04            jr nz,3F
 305+ 73AA CB CF            set 1,a                      ; Album_de_fotos_1 COMPLETO.
 306+ 73AC 18 05            jr 2F
 307+ 73AE CB 57        3 bit 2,a
 308+ 73B0 C0               ret nz
 309+ 73B1 CB D7            set 2,a                      ; Album_de_fotos_2 COMPLETO.
 310+ 73B3 32 3D 89     2 ld (Semaforo),a
 311+ 73B6 C9               ret
 312+ 73B7
 313+ 73B7
 314+ 73B7
# file closed: Guarda_foto_registros.asm
1674  73B7
1675  73B7              	SAVESNA "Pruebas.sna", START
1676  73B7
1677  73B7
1678  73B7
1679  73B7
# file closed: Banco_de_pruebas.asm
