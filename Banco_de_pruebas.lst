# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 00 8E     2 call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DD 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 0D 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 18 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 C9           	ret
  86  AA34
  87  AA34              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA34
  89  AA34              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA34              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA34              ;
   3+ AA34              ;	17/02/23
   4+ AA34              ;
   5+ AA34              ;	Sprites e índices.
   6+ AA34
   7+ AA34              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 09 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 09 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 80 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 80 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 80 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 80 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8906
 305  8906              ;														DESCRIPCIÓN:
 306  8906              ;
 307  8906              ;														BIT 0,
 308  8906
 309  8906              ; Gestión de ENTIDADES y CAJAS.
 310  8906
 311  8906 00 00        Puntero_store_caja defw 0
 312  8908 00 00        Puntero_restore_caja defw 0
 313  890A 00 00        Indice_restore_caja defw 0
 314  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890D 00           Numero_parcial_de_entidades db 0
 316  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 317  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8910              ;														; _ (Numero_de_malotes)="0".
 321  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8914              ;														; _ puntero (Indice_entidades).
 324  8914
 325  8914
 326  8914              ;---------------------------------------------------------------------------------------------------------------
 327  8914              ;
 328  8914              ;	2/9/23
 329  8914              ;
 330  8914              ;	Álbumes.
 331  8914
 332  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8916              ;														; _variable para almacenar lo posición del puntero_
 334  8916              ; 														; _de pila, SP.
 335  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891A 00 00        Stack_snapshot defw 0
 339  891C 00 00        Stack_snapshot_disparos defw 0
 340  891E
 341  891E 00 00        End_Snapshot defw 0
 342  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8922              ;														; _el snapshot de los registros del siguiente disparo.
 345  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8924 00 00        End_Snapshot_1 defw 0
 348  8926 00 00        End_Snapshot_disparos_1 defw 0
 349  8928 00 00        End_Snapshot_2 defw 0
 350  892A 00 00        End_Snapshot_disparos_2 defw 0
 351  892C 00 00        End_Snapshot_3 defw 0
 352  892E 00 00        End_Snapshot_disparos_3 defw 0
 353  8930
 354  8930 00 00        Puntero_indice_album_de_fotos defw 0
 355  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8934
 357  8934 00 00        Puntero_indice_End_Snapshot defw 0
 358  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8938 00 00        Puntero_de_End_Snapshot defw 0
 360  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893C
 362  893C F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893D              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893D 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 365  893E              ;
 366  893E              ;														DESCRIPCIÓN:
 367  893E              ;
 368  893E              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 369  893E              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 370  893E              ;																_ álbum.
 371  893E              ;
 372  893E
 373  893E              ;---------------------------------------------------------------------------------------------------------------
 374  893E
 375  893E              ; Gestión de Disparos.
 376  893E
 377  893E 00           Numero_de_disparotes db 0
 378  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 379  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 380  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 381  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 382  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 383  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 384  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 385  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 386  8946              ;														; _produzca colisión.
 387  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 388  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 389  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 390  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 391  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 393  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 394  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 395  8951
 396  8951              ;---------------------------------------------------------------------------------------------------------------
 397  8951
 398  8951              ; Relojes y temporizaciones.
 399  8951
 400  8951 00           Contador_de_frames db 0
 401  8952 00           Contador_de_frames_2 db 0
 402  8953
 403  8953 04           Clock_explosion db 4
 404  8954 1E           Clock_Entidades_en_curso db 30
 405  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 406  8956              ;														; Repite la oleada de entidades.
 407  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 408  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 409  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 410  8959
 411  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 412  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 413  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 414  895C
 415  895C              ;---------------------------------------------------------------------------------------------------------------
 416  895C
 417  895C              ; Gestión de NIVELES.
 418  895C
 419  895C 00           Nivel db 0												; Nivel actual del juego.
 420  895D 00 00        Puntero_indice_NIVELES defw 0
 421  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 422  8961              ; 														; _ que definen el NIVEL.
 423  8961              ; Y todo comienza aquí .....
 424  8961              ;
 425  8961              ; Rutina principal *************************************************************************************************************************************************************************
 426  8961              ;
 427  8961              ;	14/11/22
 428  8961
 429  8961              START
 430  8961
 431  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 432  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 433  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 434  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 435  896A F3           	DI
 436  896B
 437  896B 3E 07        	ld a,%00000111
 438  896D CD 36 99     	call Cls
 439  8970
 440  8970 CD 59 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 441  8973
 442  8973              ; INICIALIZACIÓN.
 443  8973
 444  8973 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 445  8976
 446  8976 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  8979
 448  8979 CD 7E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 449  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 450  897C CD 94 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 451  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 452  897F              ; ----------
 453  897F
 454  897F CD 09 8D     	call Restore_entidad
 455  8982
 456  8982 21 0D 89     	ld hl,Numero_parcial_de_entidades
 457  8985 46           	ld b,(hl)
 458  8986 04           	inc b
 459  8987 05           	dec b
 460  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  898A
 462  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 463  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 464  898A              ;	Pintamos el resto de entidades:
 465  898A
 466  898A              ;	INICIA ENTIDADES !!!!!
 467  898A
 468  898A C5           1 push bc  												; Guardo el contador de entidades.
 469  898B CD 4F 8B     	call Inicia_entidad
 470  898E C1           	pop bc
 471  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 472  8991
 473  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 474  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 475  8991
 476  8991 3A 03 89     	ld a,(Ctrl_1)
 477  8994 CB 5F        	bit 3,a
 478  8996 20 00        	jr nz,5F											; Loop
 479  8998
 480  8998              ; 	INICIA AMADEUS !!!!!
 481  8998
 482  8998              3
 483  8998
 484  8998              ;	call Restore_Amadeus
 485  8998              ;	call Inicia_Puntero_objeto
 486  8998              ;	call Draw
 487  8998              ;	call Guarda_foto_registros
 488  8998              ;	call Guarda_datos_de_borrado_Amadeus
 489  8998
 490  8998              ;	ld de,Amadeus_db
 491  8998              ;	call Store_Amadeus
 492  8998
 493  8998              ; 	INICIA DISPAROS !!!!!
 494  8998
 495  8998              ;	call Inicia_Puntero_Disparo_Entidades
 496  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 497  8998
 498  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 499  8998
 500  8998 CD 7E 8B     5 call Inicia_punteros_de_cajas
 501  899B CD 09 8D     	call Restore_entidad
 502  899E
 503  899E 3A 03 89     	ld a,(Ctrl_1)
 504  89A1 CB 5F        	bit 3,a
 505  89A3 28 07        	jr z,6F
 506  89A5
 507  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 508  89A5
 509  89A5 21 03 89     	ld hl,Ctrl_1
 510  89A8 CB 9E        	res 3,(hl)
 511  89AA 18 03        	jr Main
 512  89AC
 513  89AC
 514  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 515  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 516  89AC              ; _ para situarnos en el siguiente album.
 517  89AC
 518  89AC CD C5 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 519  89AF
 520  89AF
 521  89AF              ; ------------------------------------
 522  89AF
 523  89AF              Main
 524  89AF              ;
 525  89AF              ;	3/8/23
 526  89AF
 527  89AF              ; 	ei
 528  89AF
 529  89AF 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 530  89B2 47           	ld b,a
 531  89B3 3A 51 89     	ld a,(Contador_de_frames)
 532  89B6 B8           	cp b
 533  89B7 20 18        	jr nz,13F
 534  89B9
 535  89B9 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 536  89BC 47           	ld b,a
 537  89BD 3A 0E 89     	ld a,(Entidades_en_curso)
 538  89C0 B8           	cp b
 539  89C1 28 0E        	jr z,13F
 540  89C3 30 0C        	jr nc,13F
 541  89C5
 542  89C5 3C           	inc a
 543  89C6 32 0E 89     	ld (Entidades_en_curso),a
 544  89C9
 545  89C9 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 546  89CC
 547  89CC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 548  89CC              ;! _ IMPREDECIBLE !!!!
 549  89CC
 550  89CC C6 64        	add 100
 551  89CE 32 54 89     	ld (Clock_Entidades_en_curso),a
 552  89D1
 553  89D1              ; Habilita disparos.
 554  89D1
 555  89D1 21 56 89     13 ld hl,Disparo_Amadeus
 556  89D4 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D7 CD FA 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DA
 559  89DA 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DD 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E0 CD FA 9C     	call Habilita_disparos
 562  89E3
 563  89E3              ; COLISIONES.
 564  89E3
 565  89E3 CD 0B 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E6
 567  89E6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E6
 571  89E6 AF           	xor a
 572  89E7 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EA
 574  89EA CD 7E 8B     	call Inicia_punteros_de_cajas
 575  89ED CD 09 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F0              ; 														; _ en DRAW.
 577  89F0 3A C6 88     	ld a,(Filas)
 578  89F3 A7           	and a
 579  89F4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F6 CD 1B 8D     	call Incrementa_punteros_de_cajas
 581  89F9 18 F2        	jr 12B
 582  89FB
 583  89FB              ; ---------------------------------------------------------------------------------------
 584  89FB
 585  89FB 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FE 47               ld b,a
 587  89FF A7           	and a
 588  8A00 20 14        	jr nz,11F
 589  8A02
 590  8A02 21 03 89     	ld hl,Ctrl_1
 591  8A05 CB 66        	bit 4,(hl)
 592  8A07 C2 94 8A     	jp nz,16F
 593  8A0A
 594  8A0A 21 03 89     	ld hl,Ctrl_1
 595  8A0D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 596  8A0F
 597  8A0F 3A 51 89     	ld a,(Contador_de_frames)
 598  8A12 3C           	inc a
 599  8A13 32 55 89     	ld (Activa_recarga_cajas),a
 600  8A16
 601  8A16              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 602  8A16
 603  8A16 3A 0E 89     11 ld a,(Entidades_en_curso)
 604  8A19 A7           	and a
 605  8A1A CA 94 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 606  8A1D 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 607  8A1E
 608  8A1E              ; Código que ejecutamos con cada entidad:
 609  8A1E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 610  8A1E
 611  8A1E C5           15 push bc 												; Nº de entidades en curso.
 612  8A1F
 613  8A1F              ; Impacto ???
 614  8A1F
 615  8A1F 3A DF 88     	ld a,(Impacto)
 616  8A22 A7           	and a
 617  8A23 28 32        	jr z,8F
 618  8A25
 619  8A25              ; Hay Impacto en esta entidad.
 620  8A25
 621  8A25 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 622  8A28 35           	dec (hl)
 623  8A29 20 63        	jr nz,17F
 624  8A2B
 625  8A2B              ;! Velocidad de la animación de la explosión.
 626  8A2B
 627  8A2B 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 628  8A2D              ;														; _,(velocidad de la explosión).
 629  8A2D
 630  8A2D              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 631  8A2D 18 FE        	jr $
 632  8A2F
 633  8A2F CD CA 8D     	call Repone_datos_de_borrado
 634  8A32 CD 22 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 635  8A35
 636  8A35
 637  8A35              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 638  8A35
 639  8A35 3A 01 89     	ld a,(Ctrl_2)
 640  8A38 CB 4F        	bit 1,a
 641  8A3A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 642  8A3C
 643  8A3C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 644  8A3C
 645  8A3C 3A CE 88     	ld a,(CTRL_DESPLZ)
 646  8A3F A7           	and a
 647  8A40 20 08        	jr nz,18F
 648  8A42
 649  8A42 21 84 84     	ld hl,Indice_Explosion_2x2-2
 650  8A45 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 651  8A48 18 06        	jr 19F
 652  8A4A
 653  8A4A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 654  8A4D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 655  8A50
 656  8A50 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 657  8A53 CB CE        	set 1,(hl)
 658  8A55 18 22        	jr 7F
 659  8A57
 660  8A57              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 661  8A57              ; _con las coordenadas de la entidad almacenada en DRAW.
 662  8A57
 663  8A57 3A 03 89     8 ld a,(Ctrl_1)
 664  8A5A CB 57        	bit 2,a
 665  8A5C 28 1B        	jr z,7F
 666  8A5E
 667  8A5E 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 668  8A61 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 669  8A62              ;														; E contiene la coordenada_X del disparo.
 670  8A62 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 671  8A65              ;														; H FILA, (Coordenada_y de la entidad).
 672  8A65 A7           	and a
 673  8A66 ED 52        	sbc hl,de
 674  8A68
 675  8A68 CD 42 92     	call Determina_resultado_comparativa
 676  8A6B
 677  8A6B 78           	ld a,b
 678  8A6C A7           	and a
 679  8A6D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 680  8A6F
 681  8A6F              ; ----- ----- -----
 682  8A6F
 683  8A6F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 684  8A71 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 685  8A74
 686  8A74 21 03 89     	ld hl,Ctrl_1
 687  8A77 CB 96        	res 2,(hl)
 688  8A79
 689  8A79 CD EB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 690  8A7C
 691  8A7C 3A F0 88     	ld a,(Ctrl_0)
 692  8A7F CB 67        	bit 4,a
 693  8A81 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 694  8A83
 695  8A83              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 696  8A83              ; [[[
 697  8A83 CD A4 8D     	call Detecta_disparo_entidad
 698  8A86              ; ]]]
 699  8A86
 700  8A86 CD 5F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 701  8A89              ;	call Guarda_datos_de_borrado
 702  8A89
 703  8A89 21 F0 88     	ld hl,Ctrl_0
 704  8A8C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 705  8A8E
 706  8A8E CD CE 8C     17 call Store_Restore_cajas
 707  8A91
 708  8A91 C1           	pop bc
 709  8A92 10 8A        	djnz 15B
 710  8A94
 711  8A94              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 712  8A94              ; Hemos gestionado todas las unidades.
 713  8A94              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 714  8A94
 715  8A94              ;	ld hl,Ctrl_1
 716  8A94              ;	res 2,(hl)
 717  8A94
 718  8A94 CD C5 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 719  8A97              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 720  8A97
 721  8A97              ; ----------------------------------------
 722  8A97
 723  8A97 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 724  8A9A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 725  8A9C CA AF 89     	jp z,Main
 726  8A9F
 727  8A9F 3A 51 89     	ld a,(Contador_de_frames)
 728  8AA2 47           	ld b,a
 729  8AA3 3A 55 89     	ld a,(Activa_recarga_cajas)
 730  8AA6 B8           	cp b
 731  8AA7 28 08        	jr z,20F
 732  8AA9
 733  8AA9 21 03 89     	ld hl,Ctrl_1
 734  8AAC CB E6        	set 4,(hl)
 735  8AAE C3 AF 89     	jp Main
 736  8AB1
 737  8AB1 21 03 89     20 ld hl,Ctrl_1
 738  8AB4 CB A6        	res 4,(hl)
 739  8AB6
 740  8AB6 3A 51 89     	ld a,(Contador_de_frames)
 741  8AB9
 742  8AB9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 743  8AB9              ;! _ IMPREDECIBLE !!!!
 744  8AB9
 745  8AB9 C6 0A        	add 10
 746  8ABB 32 54 89     	ld (Clock_Entidades_en_curso),a
 747  8ABE
 748  8ABE C3 76 89     	jp 4B
 749  8AC1
 750  8AC1 C9           	ret
 751  8AC2
 752  8AC2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 753  8AC2
 754  8AC2              Gestiona_Amadeus
 755  8AC2
 756  8AC2 3E 04            ld a,4
 757  8AC4 D3 FE        	out ($fe),a											; Azul.
 758  8AC6
 759  8AC6 CD 30 8D     	call Restore_Amadeus
 760  8AC9
 761  8AC9              ;! Activa/desactiva impacto con Amadeus.
 762  8AC9
 763  8AC9 3A DF 88     	ld a,(Impacto)
 764  8ACC A7           	and a
 765  8ACD 20 FE        	jr nz,$
 766  8ACF
 767  8ACF CD 3C 8B     	call Mov_Amadeus
 768  8AD2
 769  8AD2 3A F0 88     	ld a,(Ctrl_0)
 770  8AD5 CB 67        	bit 4,a
 771  8AD7 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 772  8AD9
 773  8AD9 CD 5F 8B     	call Guarda_foto_entidad_a_pintar
 774  8ADC CD AA 8D     	call Guarda_datos_de_borrado_Amadeus
 775  8ADF
 776  8ADF 21 F0 88     14 ld hl,Ctrl_0
 777  8AE2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 778  8AE4
 779  8AE4 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 780  8AE7 CD 42 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 781  8AEA
 782  8AEA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 783  8AEA
 784  8AEA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 785  8AEA
 786  8AEA              ;	call Calcula_numero_de_disparotes
 787  8AEA
 788  8AEA C9           	ret
 789  8AEB
 790  8AEB              ; --------------------------------------------------------------------------------------------------------------
 791  8AEB              ;
 792  8AEB              ;	27/05/23
 793  8AEB
 794  8AEB              Mov_obj
 795  8AEB
 796  8AEB 3A 01 89     	ld a,(Ctrl_2)
 797  8AEE CB 4F        	bit 1,a
 798  8AF0 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 799  8AF2
 800  8AF2              ; Explosión:
 801  8AF2
 802  8AF2 3A 02 89     	ld a,(Frames_explosion)
 803  8AF5 A7           	and a
 804  8AF6 20 11        	jr nz,4F
 805  8AF8
 806  8AF8              ; Una alimaña menos!!!!!!!!!1
 807  8AF8
 808  8AF8 CD 4B 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 809  8AFB 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 810  8AFE 35           	dec (hl)
 811  8AFF 21 0E 89     	ld hl,Entidades_en_curso
 812  8B02 35           	dec (hl)
 813  8B03 21 0C 89     	ld hl,Numero_de_entidades
 814  8B06 35           	dec (hl)
 815  8B07 18 32        	jr 3F
 816  8B09
 817  8B09              ; -----
 818  8B09
 819  8B09              ;	`Movemos´ la explosión.
 820  8B09
 821  8B09 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 822  8B0C 23           	inc hl
 823  8B0D 23           	inc hl
 824  8B0E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 825  8B11 CD 80 8C     	call Extrae_address
 826  8B14 22 CA 88     	ld (Puntero_objeto),hl
 827  8B17
 828  8B17 21 02 89     	ld hl,Frames_explosion
 829  8B1A 35           	dec (hl)
 830  8B1B
 831  8B1B              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 832  8B1B 18 1E        	jr 3F
 833  8B1D
 834  8B1D AF           2 xor a
 835  8B1E 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 836  8B21
 837  8B21              ; Movemos Entidades malignas.
 838  8B21
 839  8B21 CD A5 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 840  8B24
 841  8B24 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 842  8B27 CB 67        	bit 4,a
 843  8B29 C8           	ret z
 844  8B2A
 845  8B2A              ; Ha habido desplazamiento de la entidad maligna.
 846  8B2A              ; Ha llegado a zona de AMADEUS ???
 847  8B2A
 848  8B2A 3A CD 88     	ld a,(Coordenada_y)
 849  8B2D FE 14        	cp $14
 850  8B2F D4 D0 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 851  8B32              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 852  8B32              ; ---------
 853  8B32
 854  8B32 CD 66 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 855  8B35 CD CA 8D     	call Repone_datos_de_borrado
 856  8B38 CD 22 8C     	call Limpia_Variables_de_borrado
 857  8B3B
 858  8B3B C9           3 ret													; _de la misma.
 859  8B3C
 860  8B3C              ; --------------------------------------------------------------------------------------------------------------
 861  8B3C              ;
 862  8B3C              ;	29/1/23
 863  8B3C
 864  8B3C              Mov_Amadeus
 865  8B3C
 866  8B3C CD 6D 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 867  8B3F
 868  8B3F 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 869  8B42 CB 67        	bit 4,a
 870  8B44 C8           	ret z
 871  8B45
 872  8B45              ; ---------
 873  8B45
 874  8B45 CD 66 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 875  8B48 CD BA 8D     	call Repone_datos_de_borrado_Amadeus
 876  8B4B CD 22 8C     	call Limpia_Variables_de_borrado
 877  8B4E
 878  8B4E C9           	ret
 879  8B4F
 880  8B4F              ; -----------------------------------------------------------------------------------
 881  8B4F
 882  8B4F CD 86 8C     Inicia_entidad	call Inicia_Puntero_objeto
 883  8B52 CD 4A 99     	call Recompone_posicion_inicio
 884  8B55 CD 29 93     	call Draw
 885  8B58 CD A0 7F     	call Guarda_foto_registros
 886  8B5B              ;	call Guarda_datos_de_borrado
 887  8B5B CD CE 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 888  8B5E C9           	ret
 889  8B5F
 890  8B5F              ; --------------------------------------------------------------------------------------------------------------
 891  8B5F              ;
 892  8B5F              ;	31/08/23
 893  8B5F              ;
 894  8B5F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 895  8B5F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 896  8B5F
 897  8B5F              Guarda_foto_entidad_a_pintar
 898  8B5F
 899  8B5F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 900  8B5F
 901  8B5F CD 29 93     	call Draw
 902  8B62 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 903  8B65 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 904  8B66
 905  8B66              ; --------------------------------------------------------------------------------------------------------------
 906  8B66              ;
 907  8B66              ;	19/9/23
 908  8B66
 909  8B66 21 C6 88     Prepara_var_pintado ld hl,Filas
 910  8B69 11 E6 88     	ld de,Variables_de_pintado
 911  8B6C 01 08 00     	ld bc,8
 912  8B6F ED B0        	ldir
 913  8B71 C9           	ret
 914  8B72
 915  8B72              ; --------------------------------------------------------------------------------------------------------------
 916  8B72
 917  8B72 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 918  8B75 11 C6 88     	ld de,Filas
 919  8B78 01 08 00     	ld bc,8
 920  8B7B ED B0        	ldir
 921  8B7D C9           	ret
 922  8B7E
 923  8B7E              ; *************************************************************************************************************************************************************
 924  8B7E              ;
 925  8B7E              ; 8/1/23
 926  8B7E              ;
 927  8B7E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 928  8B7E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 929  8B7E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 930  8B7E
 931  8B7E              ; Destruye HL y DE !!!!!
 932  8B7E
 933  8B7E              Inicia_punteros_de_cajas
 934  8B7E
 935  8B7E 21 8C 85     	ld hl,Indice_de_cajas
 936  8B81 CD 80 8C         call Extrae_address
 937  8B84 22 06 89         ld (Puntero_store_caja),hl
 938  8B87 21 8E 85     	ld hl,Indice_de_cajas+2
 939  8B8A 22 0A 89     	ld (Indice_restore_caja),hl
 940  8B8D CD 80 8C     	call Extrae_address
 941  8B90 22 08 89     	ld (Puntero_restore_caja),hl
 942  8B93 C9               ret
 943  8B94
 944  8B94              ; ---------------------------------------------------------------
 945  8B94              ;
 946  8B94              ;	9/8/23
 947  8B94              ;
 948  8B94              ;	Inicialización y gestión de álbumes de fotos y cajas.
 949  8B94
 950  8B94              Inicia_punteros_de_albumes_y_malotes
 951  8B94
 952  8B94 21 EC 84     	ld hl,Indice_album_de_fotos
 953  8B97 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 954  8B9A CD 80 8C     	call Extrae_address
 955  8B9D 22 1A 89     	ld (Stack_snapshot),hl
 956  8BA0
 957  8BA0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 958  8BA3 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 959  8BA6 CD 80 8C     	call Extrae_address
 960  8BA9 22 1C 89     	ld (Stack_snapshot_disparos),hl
 961  8BAC
 962  8BAC 21 FC 84     	ld hl,Indice_End_Snapshot
 963  8BAF 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 964  8BB2 CD 80 8C     	call Extrae_address
 965  8BB5 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 966  8BB8
 967  8BB8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 968  8BBB 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 969  8BBE CD 80 8C     	call Extrae_address
 970  8BC1 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 971  8BC4
 972  8BC4 C9           	ret
 973  8BC5
 974  8BC5              ;	23/10/23
 975  8BC5
 976  8BC5              Avanza_puntero_de_album_de_fotos_de_entidades
 977  8BC5
 978  8BC5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 979  8BC5
 980  8BC5              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 981  8BC5              ; Estamos en el último álbum del índice???.
 982  8BC5              ;
 983  8BC5
 984  8BC5 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8BC8 01 F2 84     	ld bc,Indice_album_de_fotos+6
 986  8BCB A7           	and a
 987  8BCC ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 988  8BCE 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 989  8BD0
 990  8BD0              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
 991  8BD0              ; Actualizamos (Semaforo).
 992  8BD0
 993  8BD0 21 3C 89     	ld hl,Semaforo
 994  8BD3 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
 995  8BD5
 996  8BD5              ; Inicia con el buffer de video completo !!!
 997  8BD5
 998  8BD5 FB           	ei
 999  8BD6 76           	halt
1000  8BD7 C9           	ret
1001  8BD8
1002  8BD8 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1003  8BDB 23           	inc hl
1004  8BDC 23           	inc hl
1005  8BDD 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1006  8BE0 CD 80 8C     	call Extrae_address
1007  8BE3 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1008  8BE6
1009  8BE6 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1010  8BE9 23           	inc hl
1011  8BEA 23           	inc hl
1012  8BEB 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1013  8BEE CD 80 8C     	call Extrae_address
1014  8BF1 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1015  8BF4
1016  8BF4 21 3C 89     	ld hl,Semaforo
1017  8BF7 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1018  8BF9
1019  8BF9 C9           	ret
1020  8BFA
1021  8BFA              ; *************************************************************************************************************************************************************
1022  8BFA              ;
1023  8BFA              ; 8/1/23
1024  8BFA              ;
1025  8BFA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1026  8BFA
1027  8BFA 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1028  8BFD 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1029  8C00 C9           	ret
1030  8C01 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1031  8C04 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1032  8C07 C9           	ret
1033  8C08
1034  8C08              ; -------------------------------------------------------------------------------------------------------------
1035  8C08              ;
1036  8C08              ; 21/9/23
1037  8C08              ;
1038  8C08
1039  8C08              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1040  8C08
1041  8C08              Limpia_album_Amadeus
1042  8C08
1043  8C08 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1044  8C0B 7E           	ld a,(hl)
1045  8C0C A7           	and a
1046  8C0D C8           	ret z
1047  8C0E
1048  8C0E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C11 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1050  8C14 01 0B 00     	ld bc,11
1051  8C17 AF           	xor a
1052  8C18 77           	ld (hl),a
1053  8C19 ED B0        	ldir
1054  8C1B
1055  8C1B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1056  8C1E 22 22 89     	ld (End_Snapshot_Amadeus),hl
1057  8C21
1058  8C21 C9           	ret
1059  8C22
1060  8C22 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1061  8C25 11 E1 88     	ld de,Variables_de_borrado+1
1062  8C28 01 05 00     	ld bc,5
1063  8C2B AF           	xor a
1064  8C2C 77           	ld (hl),a
1065  8C2D ED B0        	ldir
1066  8C2F C9           	ret
1067  8C30
1068  8C30              ; -------------------------------------------------------------------------------------------------------------
1069  8C30              ;
1070  8C30              ; 8/9/23
1071  8C30              ;
1072  8C30
1073  8C30              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1074  8C30              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1075  8C30
1076  8C30              Calcula_numero_de_malotes
1077  8C30
1078  8C30 21 00 70     	ld hl,Album_de_fotos
1079  8C33 EB           	ex de,hl
1080  8C34 2A 1E 89     	ld hl,(End_Snapshot)
1081  8C37
1082  8C37 7C           	ld a,h
1083  8C38 A7           	and a
1084  8C39 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1085  8C3B
1086  8C3B 06 00        4 ld b,0
1087  8C3D 7D           	ld a,l
1088  8C3E 93           	sub e
1089  8C3F 28 07        	jr z,1F
1090  8C41
1091  8C41              ; Nº de malotes no es "0".
1092  8C41
1093  8C41 D6 06        2 sub 6
1094  8C43 04           	inc b
1095  8C44 A7           	and a
1096  8C45 20 FA        	jr nz,2B
1097  8C47 78           	ld a,b
1098  8C48
1099  8C48 32 0F 89     1 ld (Numero_de_malotes),a
1100  8C4B C9           	ret
1101  8C4C
1102  8C4C              ; -------------------------------------------------------------------------------------------------------------
1103  8C4C              ;
1104  8C4C              ; 8/9/23
1105  8C4C              ;
1106  8C4C
1107  8C4C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1108  8C4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1109  8C4C
1110  8C4C              Calcula_malotes_Amadeus
1111  8C4C
1112  8C4C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1113  8C4F EB           	ex de,hl
1114  8C50 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1115  8C53
1116  8C53 7C           	ld a,h
1117  8C54 A7           	and a
1118  8C55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1119  8C57
1120  8C57 06 00        	ld b,0
1121  8C59 7D           	ld a,l
1122  8C5A 93           	sub e
1123  8C5B 28 07        	jr z,1F
1124  8C5D
1125  8C5D              ; Nº de malotes no es "0".
1126  8C5D
1127  8C5D D6 06        2 sub 6
1128  8C5F 04           	inc b
1129  8C60 A7           	and a
1130  8C61 20 FA        	jr nz,2B
1131  8C63 78           	ld a,b
1132  8C64
1133  8C64 32 0F 89     1 ld (Numero_de_malotes),a
1134  8C67 C9           	ret
1135  8C68
1136  8C68              ; -------------------------------------------------------------------------------------------------------------
1137  8C68              ;
1138  8C68              ; 28/2/23
1139  8C68              ;
1140  8C68
1141  8C68              Calcula_numero_de_disparotes
1142  8C68
1143  8C68 21 50 71     	ld hl,Album_de_fotos_disparos
1144  8C6B EB           	ex de,hl
1145  8C6C 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1146  8C6F
1147  8C6F 06 00        	ld b,0
1148  8C71 7D           	ld a,l
1149  8C72 93           	sub e
1150  8C73 28 07        	jr z,1F
1151  8C75
1152  8C75              ; Nº de malotes no es "0".
1153  8C75
1154  8C75 D6 06        2 sub 6
1155  8C77 04           	inc b
1156  8C78 A7           	and a
1157  8C79 20 FA        	jr nz,2B
1158  8C7B 78           	ld a,b
1159  8C7C
1160  8C7C 32 3E 89     1 ld (Numero_de_disparotes),a
1161  8C7F C9           	ret
1162  8C80
1163  8C80              ; *************************************************************************************************************************************************************
1164  8C80              ;
1165  8C80              ; 20/10/22
1166  8C80              ;
1167  8C80              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1168  8C80              ;
1169  8C80              ; Destruye el puntero y DE !!!!!
1170  8C80
1171  8C80 5E           Extrae_address ld e,(hl)
1172  8C81 23           	inc hl
1173  8C82 56           	ld d,(hl)
1174  8C83 2B           	dec hl
1175  8C84 EB           	ex de,hl
1176  8C85 C9           	ret
1177  8C86
1178  8C86              ; *************************************************************************************************************************************************************
1179  8C86              ;
1180  8C86              ;	7/2/23
1181  8C86              ;
1182  8C86              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1183  8C86              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1184  8C86              ;
1185  8C86              ;   Destruye HL y BC !!!!!,
1186  8C86              ;
1187  8C86              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1188  8C86              ;					"0" ..... Izquierda.
1189  8C86
1190  8C86              Inicia_Puntero_objeto
1191  8C86
1192  8C86 3A DA 88     	ld a,(Cuad_objeto)
1193  8C89 E6 01        	and 1
1194  8C8B F5           	push af
1195  8C8C CC AA 8C     	call z,Inicia_puntero_objeto_izq
1196  8C8F F1           	pop af
1197  8C90 28 2B        	jr z,1F
1198  8C92 CD 97 8C     	call Inicia_puntero_objeto_der
1199  8C95 18 26        	jr 1F
1200  8C97
1201  8C97              ; Arrancamos desde la parte izquierda de la pantalla.
1202  8C97              ; Iniciamos (Indice_Sprite_der).
1203  8C97
1204  8C97 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1205  8C9A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1206  8C9D CD 80 8C     	call Extrae_address
1207  8CA0 22 CA 88     	ld (Puntero_objeto),hl
1208  8CA3
1209  8CA3 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1210  8CA6 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CA9 C9           	ret
1212  8CAA
1213  8CAA              ; Arrancamos desde la parte derecha de la pantalla.
1214  8CAA              ; Iniciamos (Indice_Sprite_izq).
1215  8CAA
1216  8CAA 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1217  8CAD 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1218  8CB0 CD 80 8C     	call Extrae_address
1219  8CB3 22 CA 88     	ld (Puntero_objeto),hl
1220  8CB6
1221  8CB6 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1222  8CB9 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1223  8CBC C9           	ret
1224  8CBD
1225  8CBD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1226  8CBD
1227  8CBD 21 40 83     1 ld hl,Amadeus
1228  8CC0 ED 4B CA 88  	ld bc,(Puntero_objeto)
1229  8CC4 B7 ED 42     	sub hl,bc
1230  8CC7 C0           	ret nz
1231  8CC8 21 F0 88     	ld hl,Ctrl_0
1232  8CCB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1233  8CCD C9           	ret 												; _de nuestra nave en los extremos.
1234  8CCE
1235  8CCE              ; *************************************************************************************************************************************************************
1236  8CCE              ;
1237  8CCE              ;	14/5/23
1238  8CCE              ;
1239  8CCE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1240  8CCE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1241  8CCE
1242  8CCE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1243  8CCE              ;	_de la 2ª y 3ª entidad respectivamente.
1244  8CCE
1245  8CCE              Store_Restore_cajas
1246  8CCE
1247  8CCE E5           	push hl
1248  8CCF D5           	push de
1249  8CD0 C5            	push bc
1250  8CD1
1251  8CD1              ;	STORE !!!!!
1252  8CD1              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1253  8CD1
1254  8CD1 21 C6 88     	ld hl,Filas
1255  8CD4 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1256  8CD8 01 3D 00     	ld bc,61
1257  8CDB ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1258  8CDD
1259  8CDD              ; 	Entidad_sospechosa. 20/4/23
1260  8CDD
1261  8CDD 3A DF 88     	ld a,(Impacto)
1262  8CE0 A7           	and a
1263  8CE1 28 0C        	jr z,1F
1264  8CE3
1265  8CE3 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1266  8CE6 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1267  8CE9 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1268  8CEA ED 4A        	adc hl,bc 											; _ "0" más adelante.
1269  8CEC 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1270  8CEF
1271  8CEF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1272  8CEF
1273  8CEF 2A 08 89     1 ld hl,(Puntero_restore_caja)
1274  8CF2 7E           	ld a,(hl)
1275  8CF3 A7           	and a
1276  8CF4 F5           	push af
1277  8CF5 28 08        	jr z,2F
1278  8CF7
1279  8CF7 11 C6 88     	ld de,Filas
1280  8CFA 01 3D 00     	ld bc,61
1281  8CFD ED B0        	ldir
1282  8CFF
1283  8CFF CD 1B 8D     2 call Incrementa_punteros_de_cajas
1284  8D02
1285  8D02 F1           	pop af
1286  8D03 28 EA        	jr z,1B
1287  8D05
1288  8D05 C1           	pop bc
1289  8D06 D1           	pop de
1290  8D07 E1           	pop hl
1291  8D08
1292  8D08 C9           	ret
1293  8D09
1294  8D09              ; **************************************************************************************************
1295  8D09              ;
1296  8D09              ;	12/05/23
1297  8D09              ;
1298  8D09              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1299  8D09
1300  8D09 E5           Restore_entidad push hl
1301  8D0A D5           	push de
1302  8D0B C5            	push bc
1303  8D0C
1304  8D0C 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1305  8D0F 11 C6 88     	ld de,Filas
1306  8D12 01 3D 00     	ld bc,61
1307  8D15 ED B0        	ldir
1308  8D17
1309  8D17 C1           	pop bc
1310  8D18 D1           	pop de
1311  8D19 E1           	pop hl
1312  8D1A C9           	ret
1313  8D1B
1314  8D1B              ; **************************************************************************************************
1315  8D1B              ;
1316  8D1B              ;	08/05/23
1317  8D1B              ;
1318  8D1B              ;	Incrementamos los dos punteros de entidades. (+1).
1319  8D1B
1320  8D1B              Incrementa_punteros_de_cajas
1321  8D1B
1322  8D1B 2A 08 89     	ld hl,(Puntero_restore_caja)
1323  8D1E 22 06 89     	ld (Puntero_store_caja),hl
1324  8D21 2A 0A 89     	ld hl,(Indice_restore_caja)
1325  8D24 23           	inc hl
1326  8D25 23           	inc hl
1327  8D26 22 0A 89     	ld (Indice_restore_caja),hl
1328  8D29 CD 80 8C         call Extrae_address
1329  8D2C 22 08 89         ld (Puntero_restore_caja),hl
1330  8D2F C9               ret
1331  8D30
1332  8D30              ; **************************************************************************************************
1333  8D30              ;
1334  8D30              ;	25/01/23
1335  8D30              ;
1336  8D30              ;	Restore_Amadeus
1337  8D30              ;
1338  8D30              ;	Cargamos en DRAW los parámetros de Amadeus.
1339  8D30              ;
1340  8D30
1341  8D30 E5           Restore_Amadeus	push hl
1342  8D31 D5           	push de
1343  8D32 C5            	push bc
1344  8D33 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1345  8D36 11 C6 88     	ld de,Filas
1346  8D39 01 3D 00     	ld bc,61
1347  8D3C ED B0        	ldir
1348  8D3E C1           	pop bc
1349  8D3F D1           	pop de
1350  8D40 E1           	pop hl
1351  8D41 C9           	ret
1352  8D42
1353  8D42              ; *************************************************************************************************************************************************************
1354  8D42              ;
1355  8D42              ;	29/04/23
1356  8D42              ;
1357  8D42              ;	Store_Amadeus
1358  8D42              ;
1359  8D42              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1360  8D42              ;
1361  8D42              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1362  8D42              ;
1363  8D42              ;	DESTRUYE: HL y BC y DE.
1364  8D42
1365  8D42 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1366  8D45 01 3D 00     	ld bc,61
1367  8D48 ED B0        	ldir
1368  8D4A C9           	ret
1369  8D4B
1370  8D4B              ; -----------------------------------------------------------
1371  8D4B              ;
1372  8D4B              ;	27/04/23
1373  8D4B              ;
1374  8D4B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1375  8D4B              ;
1376  8D4B              ;	Destruye: HL,BC,DE,A
1377  8D4B
1378  8D4B 21 C6 88     Borra_datos_entidad ld hl,Filas
1379  8D4E 01 3C 00     	ld bc,60
1380  8D51 AF           	xor a
1381  8D52 77           	ld (hl),a
1382  8D53 11 C7 88     	ld de,Filas+1
1383  8D56 ED B0        	ldir
1384  8D58 C9           	ret
1385  8D59
1386  8D59              ; -----------------------------------------------------------
1387  8D59
1388  8D59              ; Teclado.
1389  8D59
1390  8D59 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1391  8D5B DB FE        	in a,($fe)
1392  8D5D E6 01        	and $01
1393  8D5F 28 02        	jr z,1f
1394  8D61 18 F6        	jr Pulsa_ENTER
1395  8D63 C9           1 ret
1396  8D64
1397  8D64              ; **************************************************************************************************
1398  8D64              ;
1399  8D64              ; Temporización.
1400  8D64
1401  8D64              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1402  8D64              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1403  8D64              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1404  8D64              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1405  8D64
1406  8D64              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1407  8D64              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1408  8D64              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1409  8D64
1410  8D64              ; A partir de $4f61 no hace falta DELAY.
1411  8D64
1412  8D64              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1413  8D64
1414  8D64 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1415  8D67 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1416  8D68 78           	LD A,B
1417  8D69 A7           	AND A
1418  8D6A 20 FB        	JR NZ,wait
1419  8D6C C9           	RET
1420  8D6D
1421  8D6D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1422  8D6D              ;
1423  8D6D              ;	5/3/23
1424  8D6D              ;
1425  8D6D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1426  8D6D
1427  8D6D              Movimiento_Amadeus
1428  8D6D
1429  8D6D              ; Disparo.
1430  8D6D
1431  8D6D 3A 56 89     	ld a,(Disparo_Amadeus)
1432  8D70 A7           	and a
1433  8D71 20 02        	jr nz,1F
1434  8D73 18 15        	jr 2F
1435  8D75
1436  8D75 3E F7        1 ld a,$f7													; "5" para disparar.
1437  8D77 DB FE        	in a,($fe)
1438  8D79 E6 10        	and $10
1439  8D7B
1440  8D7B F5           	push af
1441  8D7C CC 33 8E     	call z,Genera_disparo
1442  8D7F F1           	pop af
1443  8D80 20 08        	jr nz,2F
1444  8D82
1445  8D82 3A 56 89     	ld a,(Disparo_Amadeus)
1446  8D85 EE 01        	xor 1
1447  8D87 32 56 89     	ld (Disparo_Amadeus),a
1448  8D8A
1449  8D8A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1450  8D8C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1451  8D8E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1452  8D90 CC 04 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1453  8D93
1454  8D93 3E F7        	ld a,$f7
1455  8D95 DB FE        	in a,($fe)
1456  8D97 E6 01        	and $01
1457  8D99 C8           	ret z
1458  8D9A
1459  8D9A 3E F7        	ld a,$f7
1460  8D9C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1461  8D9E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1462  8DA0 CC E6 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1463  8DA3 C9           	ret
1464  8DA4
1465  8DA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1466  8DA4              ;
1467  8DA4              ;	Rutina provisional para que los malotes cagen balas.
1468  8DA4
1469  8DA4              Detecta_disparo_entidad
1470  8DA4
1471  8DA4 3A 59 89     	ld a,(Disparo_entidad)
1472  8DA7 A7           	and a
1473  8DA8 C8           	ret z
1474  8DA9
1475  8DA9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1476  8DA9
1477  8DA9              ;	ld a,$7f				; Detecta SPACE.
1478  8DA9              ;	in a,($fe)
1479  8DA9              ;	and 1
1480  8DA9              ;	ret nz
1481  8DA9
1482  8DA9              ;	call Genera_disparo
1483  8DA9 C9           	ret
1484  8DAA
1485  8DAA              ; ----------------------------------------------------------------------
1486  8DAA              ;
1487  8DAA              ;	8/9/23
1488  8DAA
1489  8DAA 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1490  8DAD 2B            	dec hl
1491  8DAE 7E           	ld a,(hl)
1492  8DAF A7           	and a
1493  8DB0 C8           	ret z										; Salimos si es álbum está vacío.
1494  8DB1
1495  8DB1 11 E5 88     	ld de,Variables_de_borrado+5
1496  8DB4 01 06 00     	ld bc,6
1497  8DB7 ED B8        	lddr
1498  8DB9 C9           	ret
1499  8DBA
1500  8DBA              ; ----------------------------------------------------------------------
1501  8DBA              ;
1502  8DBA              ;	9/9/23
1503  8DBA
1504  8DBA              Repone_datos_de_borrado_Amadeus
1505  8DBA
1506  8DBA 21 E0 88     	ld hl,Variables_de_borrado
1507  8DBD 11 A0 72     	ld de,Album_de_fotos_Amadeus
1508  8DC0 01 06 00     	ld bc,6
1509  8DC3 ED B0        	ldir
1510  8DC5
1511  8DC5 EB           	ex de,hl
1512  8DC6 22 22 89     	ld (End_Snapshot_Amadeus),hl
1513  8DC9
1514  8DC9 C9           	ret
1515  8DCA
1516  8DCA              ; ----------------------------------------------------------------------
1517  8DCA              ;
1518  8DCA              ;	27/10/23
1519  8DCA              ;
1520  8DCA
1521  8DCA              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1522  8DCA              ;	_ Album_de_fotos correspondiente.
1523  8DCA
1524  8DCA              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1525  8DCA              ;	_ durante el proceso de escritura.
1526  8DCA
1527  8DCA              Repone_datos_de_borrado
1528  8DCA
1529  8DCA F3           	di
1530  8DCB ED 5B 1A 89  	ld de,(Stack_snapshot)
1531  8DCF 21 E0 88     	ld hl,Variables_de_borrado
1532  8DD2 01 06 00     	ld bc,6
1533  8DD5 ED B0        	ldir
1534  8DD7 FB           	ei
1535  8DD8
1536  8DD8 EB           	ex de,hl
1537  8DD9 22 1A 89     	ld (Stack_snapshot),hl
1538  8DDC
1539  8DDC C9           	ret
1540  8DDD
1541  8DDD              ; ----------------------------------------------------------------------
1542  8DDD              ;
1543  8DDD              ;	11/8/23
1544  8DDD
1545  8DDD              Gestiona_entidades
1546  8DDD
1547  8DDD              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1548  8DDD
1549  8DDD 3A 3C 89     	ld a,(Semaforo)
1550  8DE0 CB 47        	bit 0,a
1551  8DE2 28 FE        	jr z,$												;! STOP el buffer está vacío.
1552  8DE4 C8           	ret z
1553  8DE5
1554  8DE5              ;	call Extrae_foto_disparos
1555  8DE5              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1556  8DE5
1557  8DE5 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1558  8DE8
1559  8DE8              ;	Album incompleto ?????
1560  8DE8              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1561  8DE8
1562  8DE8
1563  8DE8 3A 3D 89     	ld a,(Ctrl_Semaforo)
1564  8DEB CB 47        	bit 0,a
1565  8DED C0           	ret nz
1566  8DEE
1567  8DEE              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1568  8DEE              ; Nos situamos al comienzo del último álbum.
1569  8DEE
1570  8DEE CD 19 73     	call Modifica_Stack_snapshot
1571  8DF1
1572  8DF1 C9           	ret
1573  8DF2
1574  8DF2
1575  8DF2
1576  8DF2              ; -----------------------------------------------------------------------------------
1577  8DF2
1578  8DF2              Pinta_Amadeus
1579  8DF2
1580  8DF2 3E 06        	ld a,6
1581  8DF4 D3 FE            out ($fe),a										; Amarillo
1582  8DF6
1583  8DF6 CD 4C 8C        	call Calcula_malotes_Amadeus
1584  8DF9 CD B9 96     	call Extrae_foto_Amadeus
1585  8DFC CD 08 8C     	call Limpia_album_Amadeus
1586  8DFF
1587  8DFF C9           	ret
1588  8E00
1589  8E00              Pinta_entidades
1590  8E00
1591  8E00 3A 3C 89     	ld a,(Semaforo)
1592  8E03 CB 47        	bit 0,a
1593  8E05 C8           	ret z
1594  8E06
1595  8E06              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1596  8E06
1597  8E06 CD 30 8C     	call Calcula_numero_de_malotes
1598  8E09 CD 37 96     	call Extrae_foto_entidades
1599  8E0C
1600  8E0C C9           	ret
1601  8E0D
1602  8E0D              ; -----------------------------------------------------------------------------------
1603  8E0D
1604  8E0D              Actualiza_relojes
1605  8E0D
1606  8E0D 21 51 89     	ld hl,Contador_de_frames
1607  8E10 7E           	ld a,(hl)
1608  8E11 FE FF        	cp $ff
1609  8E13 20 04        	jr nz,1F
1610  8E15 34           	inc (hl)
1611  8E16 21 52 89     	ld hl,Contador_de_frames_2
1612  8E19 34           1 inc (hl)											; 0 - 255
1613  8E1A C9           	ret
1614  8E1B
1615  8E1B              ; ---------------------------------------------------------------
1616  8E1B              ;
1617  8E1B              ;	27/9/23
1618  8E1B
1619  8E1B              Guarda_parametros_DRAW
1620  8E1B
1621  8E1B 21 C6 88     	ld hl,Filas
1622  8E1E 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1623  8E21 01 3D 00     	ld bc,61
1624  8E24 ED B0        	ldir
1625  8E26 C9           	ret
1626  8E27
1627  8E27              Recupera_parametros_DRAW
1628  8E27
1629  8E27 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1630  8E2A 11 C6 88     	ld de,Filas
1631  8E2D 01 3D 00     	ld bc,61
1632  8E30 ED B0        	ldir
1633  8E32 C9           	ret
1634  8E33
1635  8E33              ; ---------------------------------------------------------------
1636  8E33
1637  8E33              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E33              ; ******************************************************************************************************************************************************************************************
   2+ 8E33              ;
   3+ 8E33              ;   21/07/23
   4+ 8E33              ;
   5+ 8E33              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E33              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E33              ;
   8+ 8E33              ;
   9+ 8E33              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E33              ;
  11+ 8E33              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E33              ;               _ hacen las entidades hacia abajo.
  13+ 8E33              ;
  14+ 8E33              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E33              ;
  16+ 8E33              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E33              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E33              ;
  19+ 8E33              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E33              ;           _ la bala.
  21+ 8E33              ;
  22+ 8E33              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E33              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E33              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E33              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E33              ;           _ en el momento de generarse la bala)).
  27+ 8E33
  28+ 8E33              Genera_disparo
  29+ 8E33
  30+ 8E33              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E33              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E33              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E33              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E33              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E33              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E33              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E33
  38+ 8E33              ; Exclusiones:
  39+ 8E33
  40+ 8E33 3A DE 88         ld a,(Vel_down)
  41+ 8E36 47               ld b,a
  42+ 8E37 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E3A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E3B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E3C 3A FD 88         ld a,(Columnas)
  46+ 8E3F 47               ld b,a
  47+ 8E40 3A C7 88         ld a,(Columns)
  48+ 8E43 B8               cp b
  49+ 8E44 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E45
  51+ 8E45              ; ----- ----- -----
  52+ 8E45
  53+ 8E45 3A F0 88         ld a,(Ctrl_0)
  54+ 8E48 CB 77            bit 6,a
  55+ 8E4A 20 06            jr nz,14F
  56+ 8E4C
  57+ 8E4C 3A CD 88         ld a,(Coordenada_y)
  58+ 8E4F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E51 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E52
  61+ 8E52 21 00 80     14 ld hl,Indice_disparo
  62+ 8E55 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E58 4F               ld c,a
  64+ 8E59 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E5B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E5B              ;                                            ""        ""       "f9", B="1"
  67+ 8E5B              ;                                            ""        ""       "fb", B="2"
  68+ 8E5B              ;                                            ""        ""       "fb", B="3"
  69+ 8E5B A7               and a
  70+ 8E5C 28 10            jr z,1F
  71+ 8E5E E6 01            and 1
  72+ 8E60 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E61
  74+ 8E61 79               ld a,c
  75+ 8E62 16 F9            ld d,$f9
  76+ 8E64 23           2 inc hl
  77+ 8E65 23               inc hl
  78+ 8E66 04               inc b
  79+ 8E67 BA               cp d
  80+ 8E68 28 04            jr z,1F
  81+ 8E6A 14               inc d
  82+ 8E6B 14               inc d
  83+ 8E6C 18 F6            jr 2B
  84+ 8E6E
  85+ 8E6E CD 80 8C     1 call Extrae_address
  86+ 8E71 E5               push hl
  87+ 8E72 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E74 DD 21 FF 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E78
  90+ 8E78              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E78              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E78
  93+ 8E78 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E7B CB 77            bit 6,a
  95+ 8E7D 20 04            jr nz,19F
  96+ 8E7F
  97+ 8E7F AF               xor a
  98+ 8E80 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E83
 100+ 8E83 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8E86 FE 02            cp 2
 102+ 8E88 38 66            jr c,3F
 103+ 8E8A 28 64            jr z,3F
 104+ 8E8C
 105+ 8E8C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E8C
 107+ 8E8C E6 01            and 1
 108+ 8E8E 28 30            jr z,4F
 109+ 8E90
 110+ 8E90              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E90              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E90              ;
 113+ 8E90              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E90              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E90              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E90
 117+ 8E90 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8E93
 119+ 8E93              ;   Amadeus o entidad ???.
 120+ 8E93
 121+ 8E93 3A F0 88         ld a,(Ctrl_0)
 122+ 8E96 CB 77            bit 6,a
 123+ 8E98 28 0A            jr z,8F
 124+ 8E9A
 125+ 8E9A              ; 	Dispara Amadeus.
 126+ 8E9A
 127+ 8E9A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E9C CD 28 96         call PreviousScan
 129+ 8E9F CD 28 96         call PreviousScan
 130+ 8EA2
 131+ 8EA2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EA2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EA2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EA2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EA2
 136+ 8EA2 18 11            jr 10F
 137+ 8EA4
 138+ 8EA4              ; 	Dispara Entidad.
 139+ 8EA4
 140+ 8EA4 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EA7              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EA7
 143+ 8EA7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EA7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EA7
 146+ 8EA7 C5               push bc
 147+ 8EA8 06 10            ld b,16
 148+ 8EAA CD 19 96     9 call NextScan
 149+ 8EAD 10 FB            djnz 9B
 150+ 8EAF C1               pop bc
 151+ 8EB0 CD 1A 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EB3 18 06            jr 17F
 153+ 8EB5
 154+ 8EB5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EB5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EB5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EB5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EB5
 159+ 8EB5 CD 1A 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EB8 CD 8F 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EBB              ;                                                      ; _al generar el disparo.
 162+ 8EBB
 163+ 8EBB              ; 	LLegados a este punto tendremos:
 164+ 8EBB              ;
 165+ 8EBB              ;       Puntero_objeto_disparo en IY.
 166+ 8EBB              ;       Rutinas_de_impresion en IX.
 167+ 8EBB              ;       Puntero_de_impresion en HL.
 168+ 8EBB              ;       Impacto/Dirección en BC.
 169+ 8EBB
 170+ 8EBB CD 22 8F     17 call Almacena_disparo
 171+ 8EBE 18 52            jr 6F                                             ; RET.
 172+ 8EC0
 173+ 8EC0              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EC0              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EC0              ;
 176+ 8EC0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EC0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EC0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EC0
 180+ 8EC0 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8EC3
 182+ 8EC3              ;   Amadeus o entidad ???.
 183+ 8EC3
 184+ 8EC3 3A F0 88         ld a,(Ctrl_0)
 185+ 8EC6 CB 77            bit 6,a
 186+ 8EC8 28 0A            jr z,11F
 187+ 8ECA
 188+ 8ECA              ; 	Dispara Amadeus.
 189+ 8ECA
 190+ 8ECA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ECC CD 28 96         call PreviousScan
 192+ 8ECF CD 28 96         call PreviousScan
 193+ 8ED2
 194+ 8ED2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8ED2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8ED2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8ED2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8ED2
 199+ 8ED2 18 11            jr 13F
 200+ 8ED4
 201+ 8ED4              ; 	Dispara Entidad.
 202+ 8ED4
 203+ 8ED4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8ED7              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8ED7
 206+ 8ED7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8ED7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8ED7
 209+ 8ED7 C5               push bc
 210+ 8ED8 06 10            ld b,16
 211+ 8EDA CD 19 96     12 call NextScan
 212+ 8EDD 10 FB            djnz 12B
 213+ 8EDF C1               pop bc
 214+ 8EE0
 215+ 8EE0 CD 13 8F         call Ajusta_disparo_parte_derecha
 216+ 8EE3 18 06            jr 18F
 217+ 8EE5
 218+ 8EE5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EE5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EE5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EE5
 223+ 8EE5 CD 13 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EE8 CD 8F 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EEB              ;                                                       ; _al generar el disparo.
 226+ 8EEB
 227+ 8EEB              ; LLegados a este punto tendremos:
 228+ 8EEB              ;
 229+ 8EEB              ;       Puntero_objeto_disparo en IY.
 230+ 8EEB              ;       Rutinas_de_impresion en IX.
 231+ 8EEB              ;       Puntero_de_impresion en HL.
 232+ 8EEB              ;       Impacto/Dirección en BC.
 233+ 8EEB
 234+ 8EEB CD 22 8F     18 call Almacena_disparo
 235+ 8EEE 18 22            jr 6F                                               ; RET.
 236+ 8EF0
 237+ 8EF0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EF0
 239+ 8EF0 28 11        3 jr z,5F
 240+ 8EF2
 241+ 8EF2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EF2              ;
 243+ 8EF2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EF2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EF2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EF2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EF2
 248+ 8EF2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EF2              ;	   ""        ""       "f9", B="1"
 250+ 8EF2              ;	   ""        ""       "fb", B="2"
 251+ 8EF2              ; 	   ""        ""       "fb", B="3"
 252+ 8EF2
 253+ 8EF2 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8EF5 CD 19 96     	call NextScan
 255+ 8EF8
 256+ 8EF8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EF8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EF8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EF8
 261+ 8EF8 CD 1A 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EFB
 263+ 8EFB              ; 	No se produce impacto. B="$80"
 264+ 8EFB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EFB
 266+ 8EFB 01 80 80         ld bc,$8080
 267+ 8EFE
 268+ 8EFE              ; 	LLegados a este punto tendremos:
 269+ 8EFE              ;
 270+ 8EFE              ;       Puntero_objeto_disparo en IY.
 271+ 8EFE              ;       Rutinas_de_impresion en IX.
 272+ 8EFE              ;       Puntero_de_impresion en HL.
 273+ 8EFE              ;       Impacto/Dirección en BC.
 274+ 8EFE
 275+ 8EFE CD 22 8F         call Almacena_disparo
 276+ 8F01 18 0F            jr 6F                                           ; RET.
 277+ 8F03
 278+ 8F03              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F03              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F03              ;
 281+ 8F03              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F03              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F03              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F03              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F03
 286+ 8F03 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F06 CD 19 96     	call NextScan
 288+ 8F09
 289+ 8F09              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F09              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F09              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F09
 294+ 8F09 CD 13 8F         call Ajusta_disparo_parte_derecha
 295+ 8F0C
 296+ 8F0C              ; 	No se produce impacto. B="$80"
 297+ 8F0C              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F0C
 299+ 8F0C 01 80 80     15 ld bc,$8080
 300+ 8F0F
 301+ 8F0F              ; 	LLegados a este punto tendremos:
 302+ 8F0F              ;
 303+ 8F0F              ;       Puntero_objeto_disparo en IY.
 304+ 8F0F              ;       Rutinas_de_impresion en IX.
 305+ 8F0F              ;       Puntero_de_impresion en HL.
 306+ 8F0F              ;       Impacto/Dirección en BC.
 307+ 8F0F
 308+ 8F0F CD 22 8F         call Almacena_disparo
 309+ 8F12
 310+ 8F12 C9           6 ret
 311+ 8F13
 312+ 8F13              ; ----------------------------------------------------------------
 313+ 8F13              ;
 314+ 8F13              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F13              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F13              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F13
 318+ 8F13 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F14 FE 02            cp 2
 320+ 8F16 38 01            jr c,1F
 321+ 8F18 23               inc hl
 322+ 8F19 C9           1 ret
 323+ 8F1A
 324+ 8F1A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F1B FE 01        	cp 1
 326+ 8F1D 20 01        	jr nz,1F
 327+ 8F1F 2B           	dec hl
 328+ 8F20 2B           1 dec hl
 329+ 8F21 C9               ret
 330+ 8F22
 331+ 8F22              ; ----------------------------------------------------------------
 332+ 8F22              ;
 333+ 8F22              ;   25/02/23
 334+ 8F22              ;
 335+ 8F22              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F22              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F22              ;
 338+ 8F22              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F22              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F22
 341+ 8F22              Almacena_disparo
 342+ 8F22
 343+ 8F22 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F23 F1               pop af
 345+ 8F24 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F25
 347+ 8F25 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F26 E6 01            and 1
 349+ 8F28 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F2A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F2A              ; 	Dispara AMADEUS.
 352+ 8F2A
 353+ 8F2A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F2A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F2A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F2A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F2A
 358+ 8F2A C5               push bc
 359+ 8F2B 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F2E 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F31 A7               and a
 362+ 8F32 ED 42            sbc hl,bc
 363+ 8F34 CC 01 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F37 C1               pop bc
 365+ 8F38 28 54            jr z,4F
 366+ 8F3A
 367+ 8F3A 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F3D 23               inc hl
 369+ 8F3E 23               inc hl
 370+ 8F3F 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F42              ;                                                   ; _ Disparo_(+1).
 372+ 8F42 18 18            jr 2F
 373+ 8F44
 374+ 8F44              ; Dispara una entidad.
 375+ 8F44
 376+ 8F44 C5           1 push bc
 377+ 8F45 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F48 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F4B A7               and a
 380+ 8F4C ED 42            sbc hl,bc
 381+ 8F4E CC FA 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F51 C1               pop bc
 383+ 8F52 28 3A            jr z,4F
 384+ 8F54
 385+ 8F54 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F57 23               inc hl
 387+ 8F58 23               inc hl
 388+ 8F59 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F5C              ;                                                   ; _ Disparo_(+1).
 390+ 8F5C CD 80 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F5F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F5F              ;
 393+ 8F5F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F5F              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F5F              ;                                                     Puntero_de_impresion en HL.
 396+ 8F5F              ;                                                     Impacto/Dirección en BC.
 397+ 8F5F
 398+ 8F5F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F60 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F61 23               inc hl                                          ; _ al siguiente.
 401+ 8F62 A7               and a
 402+ 8F63 20 C0            jr nz,3B
 403+ 8F65
 404+ 8F65 08               ex af,af
 405+ 8F66 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F6A F9               ld sp,hl
 407+ 8F6B
 408+ 8F6B DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F6D F5               push af                                         ; Puntero de impresión.
 410+ 8F6E FD E5            push iy                                         ; Puntero objeto.
 411+ 8F70 C5               push bc                                         ; Control.
 412+ 8F71
 413+ 8F71 ED 7B 14 89      ld sp,(Stack)
 414+ 8F75
 415+ 8F75              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F75
 417+ 8F75 21 03 89     	ld hl,Ctrl_1
 418+ 8F78 CB C6        	set 0,(hl)
 419+ 8F7A
 420+ 8F7A DD E5        	push ix
 421+ 8F7C E1               pop hl
 422+ 8F7D F5               push af
 423+ 8F7E DD E1            pop ix
 424+ 8F80
 425+ 8F80 CD A0 7F     	call Guarda_foto_registros
 426+ 8F83
 427+ 8F83 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F86 CB 86        	res 0,(hl)
 429+ 8F88
 430+ 8F88              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F88              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F88
 433+ 8F88 CD 01 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F8B CD FA 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F8E
 436+ 8F8E C9           4 ret
 437+ 8F8F
 438+ 8F8F              ; ----------------------------------------------------------------
 439+ 8F8F              ;
 440+ 8F8F              ;   4/3/23
 441+ 8F8F              ;
 442+ 8F8F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F8F              ;   _ al generarse el disparo.
 444+ 8F8F              ;
 445+ 8F8F              ;       "$80" ..... No se produce colisión.
 446+ 8F8F              ;       "$81" ..... Se produce colisión.
 447+ 8F8F              ;
 448+ 8F8F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F8F              ;         _ que forman el disparo.
 450+ 8F8F
 451+ 8F8F
 452+ 8F8F              Comprueba_Colision
 453+ 8F8F
 454+ 8F8F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F8F
 456+ 8F8F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F91 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F92
 459+ 8F92 CD C8 8F         call Modifica_H_Velocidad_disparo
 460+ 8F95
 461+ 8F95 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F96 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F98 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F9A
 465+ 8F9A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F9C CD B8 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F9F
 468+ 8F9F 7B               ld a,e
 469+ 8FA0 E6 01            and 1
 470+ 8FA2 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FA4              ;                                                  ; _ para activar IMPACTO.
 472+ 8FA4 E1               pop hl
 473+ 8FA5 E5               push hl
 474+ 8FA6 CD 19 96         call NextScan
 475+ 8FA9
 476+ 8FA9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FAA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FAC 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FAE              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FAE 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FB0 CD B8 8F         call Bucle_2
 482+ 8FB3
 483+ 8FB3 43           1 ld b,e
 484+ 8FB4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FB5 FD E1            pop iy
 486+ 8FB7 C9               ret
 487+ 8FB8
 488+ 8FB8              ; ---------- ----------
 489+ 8FB8
 490+ 8FB8 06 02        Bucle_2 ld b,2
 491+ 8FBA FD 7E 00     2 ld a,(iy)
 492+ 8FBD A6               and (hl)
 493+ 8FBE 28 02            jr z,1F
 494+ 8FC0 1E 81            ld e,$81
 495+ 8FC2 23           1 inc hl
 496+ 8FC3 FD 23            inc iy
 497+ 8FC5 10 F3            djnz 2B
 498+ 8FC7 C9               ret
 499+ 8FC8
 500+ 8FC8              ; ---------- ----------
 501+ 8FC8              ;
 502+ 8FC8              ;   21/7/23
 503+ 8FC8
 504+ 8FC8              Modifica_H_Velocidad_disparo
 505+ 8FC8
 506+ 8FC8 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FCB FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FCD D0               ret nc                                         ; _ incrementamos H.
 509+ 8FCE 24               inc h
 510+ 8FCF
 511+ 8FCF C9               ret
 512+ 8FD0
 513+ 8FD0              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FD0              ;
 515+ 8FD0              ;   11/04/23
 516+ 8FD0              ;
 517+ 8FD0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FD0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FD0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FD0              ;
 521+ 8FD0              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FD0
 523+ 8FD0              Compara_coordenadas_X
 524+ 8FD0
 525+ 8FD0              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FD0              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FD0
 528+ 8FD0              ; Preparamos registros:
 529+ 8FD0
 530+ 8FD0 21 CC 88         ld hl,Filas+6
 531+ 8FD3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FD4 23               inc hl
 533+ 8FD5 23               inc hl
 534+ 8FD6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FD7 43               ld b,e
 536+ 8FD8
 537+ 8FD8 21 DA 88         ld hl,Filas+20
 538+ 8FDB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FDC 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 8FDF CD FB 91         call Guarda_coordenadas_X
 541+ 8FE2
 542+ 8FE2              ; Preparamos registros:
 543+ 8FE2
 544+ 8FE2 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FE5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FE6 23               inc hl
 547+ 8FE7 23               inc hl
 548+ 8FE8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FE9 7B               ld a,e
 550+ 8FEA 08               ex af,af'
 551+ 8FEB 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FEE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FEF 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FF2 CD FB 91         call Guarda_coordenadas_X
 555+ 8FF5
 556+ 8FF5              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FF5              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FF5
 559+ 8FF5 04               inc b
 560+ 8FF6 05               dec b
 561+ 8FF7 28 04            jr z,1F
 562+ 8FF9 06 03            ld b,3
 563+ 8FFB 18 02            jr 2F
 564+ 8FFD 06 02        1 ld b,2
 565+ 8FFF 08           2 ex af,af'
 566+ 9000 3C               inc a
 567+ 9001 3D               dec a
 568+ 9002 28 04            jr z,5F
 569+ 9004 0E 03            ld c,3
 570+ 9006 18 02            jr 6F
 571+ 9008 0E 02        5 ld c,2
 572+ 900A 79           6 ld a,c
 573+ 900B 08               ex af,af'
 574+ 900C 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 900F 1A           4 ld a,(de)
 576+ 9010 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 9013 BE           3 cp (hl)
 578+ 9014 28 0E            jr z,7F
 579+ 9016 23               inc hl
 580+ 9017 0D               dec c
 581+ 9018 20 F9            jr nz,3B
 582+ 901A 13               inc de
 583+ 901B 08               ex af,af'
 584+ 901C 4F               ld c,a
 585+ 901D 08               ex af,af'
 586+ 901E 10 EF            djnz 4B
 587+ 9020
 588+ 9020              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9020
 590+ 9020 CD 37 92     8 call Limpia_Coordenadas_X
 591+ 9023 C9               ret
 592+ 9024
 593+ 9024 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9026 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9029 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 902C CB D6            set 2,(hl)
 597+ 902E 18 F0            jr 8B
 598+ 9030
 599+ 9030              ; -----------------------------------------------------------------------
 600+ 9030              ;
 601+ 9030              ;   17/04/23
 602+ 9030              ;
 603+ 9030
 604+ 9030              Detecta_colision_nave_entidad
 605+ 9030
 606+ 9030              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9030
 608+ 9030 2A C8 88         ld hl,(Posicion_actual)
 609+ 9033 CD 74 95         call Calcula_puntero_de_impresion
 610+ 9036
 611+ 9036              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9036              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9036
 614+ 9036 DD E5            push ix
 615+ 9038 E1               pop hl
 616+ 9039 E5               push hl
 617+ 903A
 618+ 903A              ; ----- ----- -----
 619+ 903A 1E 00            ld e,0                                         ; Indica impacto.
 620+ 903C 06 0A            ld b,10
 621+ 903E CD 6E 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9041 7B               ld a,e
 623+ 9042 FE 05            cp 5
 624+ 9044 38 0E            jr c,3F
 625+ 9046
 626+ 9046              ; LLegados a este punto:
 627+ 9046              ;
 628+ 9046              ;   HAY COLISIÓN !!!!!.
 629+ 9046              ;
 630+ 9046              ;   .db (Impacto) de Amadeus a "1".
 631+ 9046              ;   SET el bit3 de (Impacto2).
 632+ 9046              ;
 633+ 9046              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9046
 635+ 9046 21 B7 85         ld hl,Amadeus_db+25
 636+ 9049 36 01            ld (hl),1
 637+ 904B 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 904E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9050 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9052 18 18            jr 1F
 641+ 9054
 642+ 9054              ; -----
 643+ 9054
 644+ 9054 E1           3 pop hl
 645+ 9055 CD 19 96         call NextScan
 646+ 9058 E5               push hl
 647+ 9059 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 905A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 905C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 905E 30 0C            jr nc,1F
 651+ 9060              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9060 10 DC            djnz 2B
 653+ 9062
 654+ 9062              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9062
 656+ 9062              ; LLegados a este punto:
 657+ 9062              ;
 658+ 9062              ;   NO HAY COLISIÓN !!!!!.
 659+ 9062              ;
 660+ 9062              ;   .db (Impacto) de Amadeus a "0".
 661+ 9062              ;   RES el bit2 de (Impacto2).
 662+ 9062              ;
 663+ 9062              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9062              ;   Lo colocamos a "0".
 665+ 9062
 666+ 9062 21 43 89         ld hl,Impacto2
 667+ 9065 CB 96            res 2,(hl)
 668+ 9067 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 906A 36 00            ld (hl),0
 670+ 906C
 671+ 906C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 906D C9               ret
 673+ 906E
 674+ 906E               ; ---------- ----------
 675+ 906E
 676+ 906E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 906F 3A C7 88         ld a,(Columns)
 678+ 9072 47               ld b,a
 679+ 9073 FD 7E 00     2 ld a,(iy)
 680+ 9076 BE               cp (hl)
 681+ 9077 28 01            jr z,1F
 682+ 9079
 683+ 9079 1C               inc e
 684+ 907A
 685+ 907A 23           1 inc hl
 686+ 907B FD 23            inc iy
 687+ 907D 10 F4            djnz 2B
 688+ 907F C1               pop bc
 689+ 9080 C9               ret
 690+ 9081
 691+ 9081              ; -------------------------------------------------------------------------------------------------------------
 692+ 9081              ;
 693+ 9081              ;   13/03/23
 694+ 9081              ;
 695+ 9081              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9081              ;
 697+ 9081              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9081
 699+ 9081 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9084 7E               ld a,(hl)
 701+ 9085 A7               and a
 702+ 9086 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9087
 704+ 9087 44               ld b,h
 705+ 9088 4D               ld c,l
 706+ 9089 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 908C E5               push hl
 708+ 908D A7               and a
 709+ 908E ED 42            sbc hl,bc
 710+ 9090 E5               push hl
 711+ 9091 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9092
 713+ 9092 E1               pop hl
 714+ 9093 54               ld d,h
 715+ 9094 5D               ld e,l
 716+ 9095 1B               dec de
 717+ 9096 ED B8            lddr                                                ; Limpiamos.
 718+ 9098
 719+ 9098 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 909B 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 909E
 722+ 909E C9               ret
 723+ 909F
 724+ 909F              ; -------------------------------------------------------------------------------------------------------------
 725+ 909F              ;
 726+ 909F              ;   18/07/23
 727+ 909F              ;
 728+ 909F
 729+ 909F              Motor_de_disparos
 730+ 909F
 731+ 909F              ; Gestiona DISPAROS DE AMADEUS.
 732+ 909F
 733+ 909F 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90A2 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90A5
 736+ 90A5 CD 80 8C     2 call Extrae_address
 737+ 90A8 7E               ld a,(hl)
 738+ 90A9 A7               and a
 739+ 90AA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90AC
 741+ 90AC              ; ----- ----- ----- ----- ----- -----
 742+ 90AC
 743+ 90AC C5               push bc
 744+ 90AD CD 71 91         call foto_disparo_a_borrar
 745+ 90B0
 746+ 90B0              ; Existe colisión con este disparo???
 747+ 90B0
 748+ 90B0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90B1 7E               ld a,(hl)
 750+ 90B2 2B               dec hl
 751+ 90B3 E6 01            and 1
 752+ 90B5 28 1D            jr z,9F
 753+ 90B7
 754+ 90B7              ;   En este punto:
 755+ 90B7              ;
 756+ 90B7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90B7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90B7              ;   _con la entidad).
 759+ 90B7              ;
 760+ 90B7              ;   Disparo_2A defw 0                                ; Control.
 761+ 90B7              ;    defw 0                                          ; Puntero objeto.
 762+ 90B7              ;    defw 0                                          ; Puntero de impresión.
 763+ 90B7              ;    defw 0                                          ; Rutina de impresión.
 764+ 90B7
 765+ 90B7 E5               push hl
 766+ 90B8
 767+ 90B8 06 04            ld b,4
 768+ 90BA 23           19 inc hl
 769+ 90BB 10 FD            djnz 19B
 770+ 90BD
 771+ 90BD CD 80 8C         call Extrae_address
 772+ 90C0 CD E2 9C         call Genera_coordenadas_disparo
 773+ 90C3
 774+ 90C3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90C3
 776+ 90C3 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90C6 72               ld (hl),d
 778+ 90C7 23               inc hl
 779+ 90C8 73               ld (hl),e
 780+ 90C9
 781+ 90C9              ; Elimino el disparo de la base de datos.
 782+ 90C9
 783+ 90C9 E1               pop hl
 784+ 90CA CD F0 91         call Elimina_disparo_de_base_de_datos
 785+ 90CD 21 43 89         ld hl,Impacto2
 786+ 90D0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90D2
 788+ 90D2 18 06            jr 11F
 789+ 90D4
 790+ 90D4 CD 9A 91     9 call Mueve_disparo
 791+ 90D7 CD 71 91         call foto_disparo_a_borrar
 792+ 90DA
 793+ 90DA C1           11 pop bc
 794+ 90DB 18 04            jr 7F
 795+ 90DD
 796+ 90DD              ; ----- ----- ----- ----- ----- -----
 797+ 90DD
 798+ 90DD ED 42        1 sbc hl,bc
 799+ 90DF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90E1
 801+ 90E1 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90E4 23               inc hl
 803+ 90E5 23               inc hl
 804+ 90E6 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90E9 18 BA            jr 2B
 806+ 90EB
 807+ 90EB CD 01 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90EE              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90EE
 810+ 90EE              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90EE
 812+ 90EE 01 8A 85         ld bc,Disparo_11
 813+ 90F1 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90F4
 815+ 90F4 CD 80 8C     5 call Extrae_address
 816+ 90F7 7E               ld a,(hl)
 817+ 90F8 A7               and a
 818+ 90F9 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 90FB
 820+ 90FB              ; ----- ----- ----- ----- ----- -----
 821+ 90FB
 822+ 90FB C5               push bc
 823+ 90FC CD 71 91         call foto_disparo_a_borrar
 824+ 90FF
 825+ 90FF              ; Existe colisión con este disparo???
 826+ 90FF
 827+ 90FF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9100 7E               ld a,(hl)
 829+ 9101 2B               dec hl
 830+ 9102 E6 01            and 1
 831+ 9104 28 4D            jr z,10F
 832+ 9106
 833+ 9106              ;! La colisión se produce con Amadeus???
 834+ 9106              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9106
 836+ 9106 E5               push hl
 837+ 9107
 838+ 9107 06 04            ld b,4
 839+ 9109 23           16 inc hl
 840+ 910A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 910C
 842+ 910C CD 80 8C         call Extrae_address
 843+ 910F CD E2 9C         call Genera_coordenadas_disparo
 844+ 9112
 845+ 9112 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9113 FE 16            cp $16
 847+ 9115 38 2A            jr c,15F
 848+ 9117
 849+ 9117
 850+ 9117              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9117
 852+ 9117 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9118
 854+ 9118              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9118
 856+ 9118
 857+ 9118 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 911B
 859+ 911B              ; Coordenada X de Amadeus en D.
 860+ 911B
 861+ 911B 7D               ld a,l
 862+ 911C E6 1F            and $1F
 863+ 911E 57               ld d,a
 864+ 911F
 865+ 911F 21 A6 85         ld hl,Amadeus_db+8
 866+ 9122 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9123
 868+ 9123 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 9126 CD FB 91         call Guarda_coordenadas_X
 870+ 9129
 871+ 9129 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 912A
 873+ 912A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 912A
 875+ 912A 06 02            ld b,2
 876+ 912C C5           20 push bc
 877+ 912D
 878+ 912D 06 03            ld b,3
 879+ 912F 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9132 7E           18 ld a,(hl)
 881+ 9133 BA               cp d
 882+ 9134 20 04            jr nz,17F
 883+ 9136
 884+ 9136              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9136
 886+ 9136 C1               pop bc
 887+ 9137 E1               pop hl
 888+ 9138 18 0D            jr 14F
 889+ 913A
 890+ 913A 23           17 inc hl
 891+ 913B 10 F5            djnz 18B
 892+ 913D
 893+ 913D 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 913E
 895+ 913E C1               pop bc
 896+ 913F 10 EB            djnz 20B
 897+ 9141
 898+ 9141
 899+ 9141              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9141              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9141
 902+ 9141 E1           15 pop hl
 903+ 9142 23               inc hl
 904+ 9143 35               dec (hl)
 905+ 9144 2B               dec hl
 906+ 9145 18 0C            jr 10F
 907+ 9147
 908+ 9147              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9147              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9147
 911+ 9147 E5           14 push hl
 912+ 9148 CD F0 91         call Elimina_disparo_de_base_de_datos
 913+ 914B 21 43 89         ld hl,Impacto2
 914+ 914E CB CE            set 1,(hl)
 915+ 9150 E1               pop hl
 916+ 9151 18 06            jr 12F
 917+ 9153
 918+ 9153              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9153
 920+ 9153 CD 9A 91     10 call Mueve_disparo
 921+ 9156 CD 71 91         call foto_disparo_a_borrar
 922+ 9159 C1           12 pop bc
 923+ 915A
 924+ 915A 18 04            jr 8F
 925+ 915C
 926+ 915C              ; ----- ----- ----- ----- ----- -----
 927+ 915C
 928+ 915C ED 42        4 sbc hl,bc
 929+ 915E 28 0A            jr z,6F
 930+ 9160
 931+ 9160 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9163 23               inc hl
 933+ 9164 23               inc hl
 934+ 9165 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9168 18 8A            jr 5B
 936+ 916A
 937+ 916A CD FA 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 916D CD 37 92         call Limpia_Coordenadas_X
 939+ 9170 C9               ret
 940+ 9171
 941+ 9171              ; ------------------------------------------------------------------
 942+ 9171
 943+ 9171              foto_disparo_a_borrar
 944+ 9171
 945+ 9171 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9172 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9173 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9174
 949+ 9174 E5               push hl
 950+ 9175 23               inc hl
 951+ 9176 23               inc hl
 952+ 9177 ED 73 14 89      ld (Stack),sp
 953+ 917B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 917C FD E1            pop iy
 955+ 917E DD E1            pop ix
 956+ 9180 E1               pop hl
 957+ 9181 ED 7B 14 89      ld sp,(Stack)
 958+ 9185 3A 03 89         ld a,(Ctrl_1)
 959+ 9188 CB C7            set 0,a
 960+ 918A 32 03 89         ld (Ctrl_1),a
 961+ 918D CD A0 7F         call Guarda_foto_registros
 962+ 9190 3A 03 89         ld a,(Ctrl_1)
 963+ 9193 CB 87            res 0,a
 964+ 9195 32 03 89         ld (Ctrl_1),a
 965+ 9198 E1               pop hl
 966+ 9199 C9               ret
 967+ 919A
 968+ 919A              ;---------------------------------------------------
 969+ 919A              ;
 970+ 919A              ;   18/07/23
 971+ 919A              ;
 972+ 919A
 973+ 919A              Mueve_disparo
 974+ 919A
 975+ 919A              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 919A              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 919A              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 919A
 979+ 919A E5               push hl
 980+ 919B
 981+ 919B 7E               ld a,(hl)
 982+ 919C
 983+ 919C 06 04            ld b,4
 984+ 919E 23           1 inc hl
 985+ 919F 10 FD            djnz 1B
 986+ 91A1
 987+ 91A1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91A1
 989+ 91A1 CD 80 8C         call Extrae_address
 990+ 91A4
 991+ 91A4 E6 01            and 1
 992+ 91A6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91A8
 994+ 91A8              ; Disparo hacia arriba, (Amadeus).
 995+ 91A8
 996+ 91A8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91A8              ; _ de la dificultad.
 998+ 91A8
 999+ 91A8 CD 28 96         call PreviousScan
1000+ 91AB CD 28 96         call PreviousScan
1001+ 91AE CD 28 96         call PreviousScan
1002+ 91B1 CD 28 96         call PreviousScan
1003+ 91B4
1004+ 91B4              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91B4
1006+ 91B4 7C               ld a,h
1007+ 91B5 FE 40            cp $40
1008+ 91B7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91B9
1010+ 91B9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91B9
1012+ 91B9 EB               ex de,hl
1013+ 91BA 06 04            ld b,4
1014+ 91BC 2B           6 dec hl
1015+ 91BD 10 FD            djnz 6B
1016+ 91BF
1017+ 91BF CD F0 91         call Elimina_disparo_de_base_de_datos
1018+ 91C2 E1               pop hl
1019+ 91C3 18 10            jr 7F
1020+ 91C5
1021+ 91C5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91C5              ; HL contiene el puntero de impresión del disparo.
1023+ 91C5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91C5
1025+ 91C5 D5           3 push de
1026+ 91C6 C5               push bc
1027+ 91C7
1028+ 91C7 CD 8F 8F         call Comprueba_Colision
1029+ 91CA
1030+ 91CA              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91CA
1032+ 91CA 78               ld a,b
1033+ 91CB
1034+ 91CB C1               pop bc
1035+ 91CC D1               pop de
1036+ 91CD
1037+ 91CD EB               ex de,hl
1038+ 91CE
1039+ 91CE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91CF 23               inc hl                                      ; _ movimiento.
1041+ 91D0 72               ld (hl),d
1042+ 91D1
1043+ 91D1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91D2
1045+ 91D2 23               inc hl                                      ; _ en curso.
1046+ 91D3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91D4 2B               dec hl
1048+ 91D5
1049+ 91D5 C9           7 ret
1050+ 91D6
1051+ 91D6              ; Disparo hacia abajo, (Entidad).
1052+ 91D6
1053+ 91D6 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91D9 47               ld b,a
1055+ 91DA
1056+ 91DA CD 19 96     4 call NextScan
1057+ 91DD 10 FB            djnz 4B
1058+ 91DF
1059+ 91DF              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91DF
1061+ 91DF 7C               ld a,h
1062+ 91E0 FE 58            cp $58
1063+ 91E2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91E4
1065+ 91E4 EB               ex de,hl
1066+ 91E5 06 04            ld b,4
1067+ 91E7 2B           5 dec hl
1068+ 91E8 10 FD            djnz 5B
1069+ 91EA
1070+ 91EA CD F0 91         call Elimina_disparo_de_base_de_datos
1071+ 91ED E1               pop hl
1072+ 91EE 18 E5            jr 7B
1073+ 91F0
1074+ 91F0              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91F0
1076+ 91F0 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91F3 AF               xor a
1078+ 91F4 77               ld (hl),a
1079+ 91F5 54               ld d,h
1080+ 91F6 5D               ld e,l
1081+ 91F7 13               inc de
1082+ 91F8 ED B0            ldir
1083+ 91FA C9               ret
1084+ 91FB
1085+ 91FB              ; -----------------------------------------------------------------
1086+ 91FB              ;
1087+ 91FB              ;   19/7/23
1088+ 91FB              ;
1089+ 91FB              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 91FB              ;
1091+ 91FB              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 91FB              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 91FB              ;
1094+ 91FB              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 91FB              ;
1096+ 91FB              ;   INPUTS:
1097+ 91FB              ;
1098+ 91FB              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 91FB              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 91FB
1101+ 91FB              ;   MODIFICA: A, HL, BC y DE.
1102+ 91FB
1103+ 91FB              Guarda_coordenadas_X
1104+ 91FB
1105+ 91FB 7B               ld a,e
1106+ 91FC A7               and a
1107+ 91FD 20 04            jr nz,1F
1108+ 91FF
1109+ 91FF 06 02            ld b,2
1110+ 9201 18 02            jr 2F
1111+ 9203
1112+ 9203 06 03        1 ld b,3
1113+ 9205 72           2 ld (hl),d
1114+ 9206 23               inc hl
1115+ 9207 14               inc d
1116+ 9208 10 FB            djnz 2B
1117+ 920A
1118+ 920A C9               ret
1119+ 920B
1120+ 920B              ; -----------------------------------------------------------------
1121+ 920B              ;
1122+ 920B              ;   12/04/23
1123+ 920B              ;
1124+ 920B
1125+ 920B 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 920E A7               and a
1127+ 920F C8               ret z
1128+ 9210
1129+ 9210 FE 04            cp 4
1130+ 9212 20 09            jr nz,1F
1131+ 9214
1132+ 9214
1133+ 9214              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9214
1135+ 9214 CD 30 90         call Detecta_colision_nave_entidad
1136+ 9217
1137+ 9217 21 43 89         ld hl,Impacto2
1138+ 921A CB 5E            bit 3,(hl)
1139+ 921C C0               ret nz                                               ; Existe colisión, RET.
1140+ 921D
1141+ 921D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 921D              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 921D
1144+ 921D 21 43 89     1 ld hl,Impacto2
1145+ 9220 CB 4E            bit 1,(hl)
1146+ 9222 28 07            jr z,2F
1147+ 9224
1148+ 9224 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9227 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9229 18 0B            jr 3F
1151+ 922B
1152+ 922B 21 43 89     2 ld hl,Impacto2
1153+ 922E CB 46            bit 0,(hl)
1154+ 9230 C8               ret z
1155+ 9231
1156+ 9231              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9231
1158+ 9231 21 03 89         ld hl,Ctrl_1
1159+ 9234 CB D6            set 2,(hl)
1160+ 9236
1161+ 9236 C9           3 ret
1162+ 9237
1163+ 9237              ; -----------------------------------------------------------------
1164+ 9237              ;
1165+ 9237              ;   19/7/23
1166+ 9237              ;
1167+ 9237              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9237
1169+ 9237 AF           Limpia_Coordenadas_X xor a
1170+ 9238 06 06            ld b,6
1171+ 923A 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 923D 77           1 ld (hl),a
1173+ 923E 23               inc hl
1174+ 923F 10 FC            djnz 1B
1175+ 9241 C9               ret
1176+ 9242
1177+ 9242              ; -----------------------------------------------------------------
1178+ 9242              ;
1179+ 9242              ;   25/04/23
1180+ 9242              ;
1181+ 9242
1182+ 9242              Determina_resultado_comparativa
1183+ 9242
1184+ 9242              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9242              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9242              ;
1187+ 9242              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9242              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9242              ;
1190+ 9242              ;   SBC HL,DE
1191+ 9242
1192+ 9242              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9242              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9242
1195+ 9242              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9242              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9242
1198+ 9242
1199+ 9242 3A DA 88         ld a,(Cuad_objeto)
1200+ 9245 FE 02            cp 2
1201+ 9247 28 26            jr z,2F
1202+ 9249 38 24            jr c,2F
1203+ 924B
1204+ 924B              ; Cuadrantes 3º y 4º
1205+ 924B
1206+ 924B E6 01            and 1
1207+ 924D 28 10            jr z,4F
1208+ 924F
1209+ 924F              ; Cuadrante 3º
1210+ 924F
1211+ 924F 7C               ld a,h
1212+ 9250 06 00            ld b,0
1213+ 9252
1214+ 9252 CD DD 92         call Compara_cositas_H3
1215+ 9255
1216+ 9255 04               inc b
1217+ 9256 05               dec b
1218+ 9257 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9258
1220+ 9258 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9259 06 00            ld b,0
1222+ 925B
1223+ 925B CD EF 92         call Compara_cositas_L3
1224+ 925E C9               ret
1225+ 925F
1226+ 925F              ; Cuadrante 4º
1227+ 925F
1228+ 925F 7C           4 ld a,h
1229+ 9260 06 00            ld b,0
1230+ 9262
1231+ 9262 CD 01 93         call Compara_cositas_H4
1232+ 9265
1233+ 9265 04               inc b
1234+ 9266 05               dec b
1235+ 9267 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9268
1237+ 9268 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9269 06 00            ld b,0
1239+ 926B
1240+ 926B CD 17 93         call Compara_cositas_L4
1241+ 926E C9               ret
1242+ 926F
1243+ 926F              ; Cuadrantes 1º y 2º.
1244+ 926F
1245+ 926F 28 10        2 jr z,3F
1246+ 9271
1247+ 9271              ; 1er Cuadrante
1248+ 9271
1249+ 9271 7C               ld a,h
1250+ 9272 06 00            ld b,0
1251+ 9274
1252+ 9274 CD B5 92         call Compara_cositas_H1
1253+ 9277
1254+ 9277 04               inc b
1255+ 9278 05               dec b
1256+ 9279 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 927A
1258+ 927A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 927B 06 00            ld b,0
1260+ 927D
1261+ 927D CD CB 92         call Compara_cositas_L1
1262+ 9280 C9               ret
1263+ 9281
1264+ 9281
1265+ 9281              ; 2º Cuadrante
1266+ 9281
1267+ 9281 7C           3 ld a,h
1268+ 9282 06 00            ld b,0
1269+ 9284
1270+ 9284 CD 91 92         call Compara_cositas_H2
1271+ 9287
1272+ 9287 04               inc b
1273+ 9288 05               dec b
1274+ 9289 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 928A
1276+ 928A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 928B 06 00            ld b,0
1278+ 928D
1279+ 928D CD A3 92         call Compara_cositas_L2
1280+ 9290 C9               ret
1281+ 9291
1282+ 9291 A7           Compara_cositas_H2 and a
1283+ 9292 28 0D            jr z,1F
1284+ 9294              ;    cp $fd
1285+ 9294              ;    jr z,1F
1286+ 9294              ;    cp $fe
1287+ 9294              ;    jr z,1F
1288+ 9294 FE FF            cp $ff
1289+ 9296 28 09            jr z,1F
1290+ 9298 FE 01            cp $01
1291+ 929A 28 05            jr z,1F
1292+ 929C FE 02            cp $02
1293+ 929E 28 01            jr z,1F
1294+ 92A0 C0               ret nz
1295+ 92A1 04           1 inc b
1296+ 92A2 C9               ret
1297+ 92A3
1298+ 92A3 A7           Compara_cositas_L2 and a
1299+ 92A4 28 0D            jr z,1F
1300+ 92A6              ;    cp $fd
1301+ 92A6              ;    jr z,1F
1302+ 92A6 FE FE            cp $fe
1303+ 92A8 28 09            jr z,1F
1304+ 92AA FE FF            cp $ff
1305+ 92AC 28 05            jr z,1F
1306+ 92AE FE 01            cp $01
1307+ 92B0 28 01            jr z,1F
1308+ 92B2              ;    cp $02
1309+ 92B2              ;    jr z,1F
1310+ 92B2 C0               ret nz
1311+ 92B3 04           1 inc b
1312+ 92B4 C9               ret
1313+ 92B5
1314+ 92B5 A7           Compara_cositas_H1 and a
1315+ 92B6 28 11            jr z,1F
1316+ 92B8              ;    cp $fd
1317+ 92B8              ;    jr z,1F
1318+ 92B8              ;    cp $fe
1319+ 92B8              ;    jr z,1F
1320+ 92B8 FE FF            cp $ff
1321+ 92BA 28 0D            jr z,1F
1322+ 92BC FE 01            cp $01
1323+ 92BE 28 09            jr z,1F
1324+ 92C0 FE 02            cp $02
1325+ 92C2 28 05            jr z,1F
1326+ 92C4 FE 03            cp $03
1327+ 92C6 28 01            jr z,1F
1328+ 92C8 C0               ret nz
1329+ 92C9 04           1 inc b
1330+ 92CA C9               ret
1331+ 92CB
1332+ 92CB A7           Compara_cositas_L1 and a
1333+ 92CC 28 0D            jr z,1F
1334+ 92CE              ;    cp $fd
1335+ 92CE              ;    jr z,1F
1336+ 92CE              ;    cp $fe
1337+ 92CE              ;    jr z,1F
1338+ 92CE              ;    cp $ff
1339+ 92CE              ;    jr z,1F
1340+ 92CE FE 01            cp $01
1341+ 92D0 28 09            jr z,1F
1342+ 92D2 FE 02            cp $02
1343+ 92D4 28 05            jr z,1F
1344+ 92D6 FE 03            cp $03
1345+ 92D8 28 01            jr z,1F
1346+ 92DA C0               ret nz
1347+ 92DB 04           1 inc b
1348+ 92DC C9               ret
1349+ 92DD
1350+ 92DD A7           Compara_cositas_H3 and a
1351+ 92DE 28 0D            jr z,1F
1352+ 92E0              ;    cp $fd
1353+ 92E0              ;    jr z,1F
1354+ 92E0 FE FE            cp $fe
1355+ 92E2 28 09            jr z,1F
1356+ 92E4 FE FF            cp $ff
1357+ 92E6 28 05            jr z,1F
1358+ 92E8 FE 01            cp $01
1359+ 92EA 28 01            jr z,1F
1360+ 92EC              ;    cp $02
1361+ 92EC              ;    jr z,1F
1362+ 92EC              ;    cp $03
1363+ 92EC              ;    jr z,1F
1364+ 92EC C0               ret nz
1365+ 92ED 04           1 inc b
1366+ 92EE C9               ret
1367+ 92EF
1368+ 92EF A7           Compara_cositas_L3 and a
1369+ 92F0 28 0D            jr z,1F
1370+ 92F2              ;    cp $fd
1371+ 92F2              ;    jr z,1F
1372+ 92F2              ;    cp $fe
1373+ 92F2              ;    jr z,1F
1374+ 92F2              ;    cp $ff
1375+ 92F2              ;    jr z,1F
1376+ 92F2 FE 01            cp $01
1377+ 92F4 28 09            jr z,1F
1378+ 92F6 FE 02            cp $02
1379+ 92F8 28 05            jr z,1F
1380+ 92FA FE 03            cp $03
1381+ 92FC 28 01            jr z,1F
1382+ 92FE C0               ret nz
1383+ 92FF 04           1 inc b
1384+ 9300 C9               ret
1385+ 9301
1386+ 9301 A7           Compara_cositas_H4 and a
1387+ 9302 28 11            jr z,1F
1388+ 9304 FE FD            cp $fd
1389+ 9306 28 0D            jr z,1F
1390+ 9308 FE FE            cp $fe
1391+ 930A 28 09            jr z,1F
1392+ 930C FE FF            cp $ff
1393+ 930E 28 05            jr z,1F
1394+ 9310 FE 01            cp $01
1395+ 9312 28 01            jr z,1F
1396+ 9314              ;    cp $02
1397+ 9314              ;    jr z,1F
1398+ 9314              ;    cp $03
1399+ 9314              ;    jr z,1F
1400+ 9314 C0               ret nz
1401+ 9315 04           1 inc b
1402+ 9316 C9               ret
1403+ 9317
1404+ 9317 A7           Compara_cositas_L4 and a
1405+ 9318 28 0D            jr z,1F
1406+ 931A              ;    cp $fd
1407+ 931A              ;    jr z,1F
1408+ 931A FE FE            cp $fe
1409+ 931C 28 09            jr z,1F
1410+ 931E FE FF            cp $ff
1411+ 9320 28 05            jr z,1F
1412+ 9322 FE 01            cp $01
1413+ 9324 28 01            jr z,1F
1414+ 9326              ;    cp $02
1415+ 9326              ;    jr z,1F
1416+ 9326              ;    cp $03
1417+ 9326              ;    jr z,1F
1418+ 9326 C0               ret nz
1419+ 9327 04           1 inc b
1420+ 9328 C9               ret
# file closed: Disparo.asm
1638  9329              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9329              ; ******************************************************************************************************************************************************************************************
   2+ 9329              ;
   3+ 9329              ; 26/06/23
   4+ 9329              ;
   5+ 9329              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9329
   7+ 9329 CD 0D 96     Draw call Prepara_draw
   8+ 932C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 932D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 932E 28 05        	jr z,2F
  11+ 9330
  12+ 9330 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9333 18 0C        	jr 1F
  14+ 9335
  15+ 9335 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9338 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 933B CD CA 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 933E              ;													; _la esquina superior izquierda de la pantalla.
  19+ 933E CD 6D 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9341
  21+ 9341 3A F0 88     1 ld a,(Ctrl_0)
  22+ 9344 CB 6F        	bit 5,a
  23+ 9346 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9348
  25+ 9348 CD 60 93     	call Comprueba_limite_horizontal
  26+ 934B CD F0 93     	call Comprueba_limite_vertical
  27+ 934E
  28+ 934E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 934E              ; -----------------------
  30+ 934E              ; -----------------------
  31+ 934E              ; -----------------------
  32+ 934E
  33+ 934E CD 3D 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9351 CD 74 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9354 CD D3 95     	call Define_rutina_de_impresion
  36+ 9357
  37+ 9357 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 935A CB AF        	res 5,a											; _a ser de utilidad.
  39+ 935C 32 F0 88     	ld (Ctrl_0),a
  40+ 935F
  41+ 935F C9           	ret
  42+ 9360
  43+ 9360              ; *******************************************************************************************************************************************************************************************
  44+ 9360              ;	21/01/23
  45+ 9360              ;
  46+ 9360              ; 	Comprueba_limite_horizontal.
  47+ 9360              ;
  48+ 9360              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9360              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9360              ;
  51+ 9360              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9360              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9360              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9360              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9360
  56+ 9360
  57+ 9360
  58+ 9360 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9363 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9365 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9367 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9369 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 936C 18 09            jr 6F
  64+ 936E CB 5F        1 bit 3,a
  65+ 9370 28 0A            jr z,2F
  66+ 9372 E6 F7            and $f7
  67+ 9374 32 F0 88         ld (Ctrl_0),a
  68+ 9377 CD CA 94     6 call Inicializacion
  69+ 937A 18 5B            jr 5F
  70+ 937C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 937D
  72+ 937D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 937D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 937D
  75+ 937D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 937E 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9381 CD 2C 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9384 67           	ld h,a
  79+ 9385 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9386 CD 2C 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9389 67           	ld h,a
  82+ 938A A7           	and a
  83+ 938B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 938D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 938E 3A DA 88     	ld a,(Cuad_objeto)
  86+ 9391 FE 02        	cp 2
  87+ 9393 38 1E        	jr c,3F
  88+ 9395 28 1C        	jr z,3F
  89+ 9397 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9398 28 23            jr z,7F
  91+ 939A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 939C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 939E E1           	pop hl
  94+ 939F
  95+ 939F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 939F              ; _para indicar con E="2" en caso necesario.
  97+ 939F
  98+ 939F E5               push hl
  99+ 93A0 C5               push bc
 100+ 93A1 CD 2C 99     	call calcula_tercio
 101+ 93A4 FE 01        	cp 1
 102+ 93A6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93A8 CD D8 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93AB 28 26            jr z,9F
 105+ 93AD 38 24            jr c,9F
 106+ 93AF 1E 00        11 ld e,0
 107+ 93B1 18 22            jr 8F
 108+ 93B3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93B4 28 07        	jr z, 7F
 110+ 93B6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93B8 1E 00         	ld e,0
 112+ 93BA E1           	pop hl
 113+ 93BB 18 04        	jr 4F
 114+ 93BD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93BF 18 15            jr 10F
 116+ 93C1
 117+ 93C1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93C1              ; _para indicar con E="2" en caso necesario.
 119+ 93C1
 120+ 93C1 E5           4 push hl
 121+ 93C2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93C3 CD 2C 99     	call calcula_tercio
 123+ 93C6 FE 01        	cp 1
 124+ 93C8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93CA CD D8 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93CD 28 04            jr z,9F
 127+ 93CF 30 02            jr nc,9F
 128+ 93D1 18 02        	jr 8F
 129+ 93D3 1E 02        9 ld e,2
 130+ 93D5 C1           8 pop bc
 131+ 93D6 E1           10 pop hl
 132+ 93D7 C9           5 ret
 133+ 93D8
 134+ 93D8              ; --------------------
 135+ 93D8              ;
 136+ 93D8              ; 25/08/22
 137+ 93D8
 138+ 93D8 CD 2C 99     Comprueba_centro call calcula_tercio
 139+ 93DB 67               ld h,a
 140+ 93DC 08           	ex af,af
 141+ 93DD FE 02        	cp 2
 142+ 93DF 38 07        	jr c,1F
 143+ 93E1 28 05        	jr z,1F
 144+ 93E3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93E6 18 03        	jr 2F
 146+ 93E8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93EB 08           2 ex af,af
 148+ 93EC A7               and a
 149+ 93ED ED 42            sbc hl,bc
 150+ 93EF C9               ret
 151+ 93F0
 152+ 93F0              ; *********************************************************************************************************************************************************************************************
 153+ 93F0              ;
 154+ 93F0              ;   16/8/22
 155+ 93F0              ;
 156+ 93F0              ;	Comprueba_limite_vertical
 157+ 93F0              ;
 158+ 93F0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93F0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93F0              ;
 161+ 93F0
 162+ 93F0 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93F3 7D           	ld a,l
 164+ 93F4 E6 1F        	and $1F
 165+ 93F6 57           	ld d,a
 166+ 93F7 3A 00 89     	ld a,(Limite_vertical)
 167+ 93FA BA           	cp d 											; Límite - Posición.
 168+ 93FB 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93FC 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93FF CB 47        	bit 0,a
 171+ 9401 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9403
 173+ 9403              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9403
 175+ 9403 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9404 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9406
 178+ 9406              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9406              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9406
 181+ 9406 3A CC 88         ld a,(Coordenada_X)
 182+ 9409 16 0F            ld d,Centro_izquierda
 183+ 940B A7               and a
 184+ 940C 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 940D 28 1E            jr z,3F
 186+ 940F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9411              ;                                                    ; _salimos sin modificar nada.
 188+ 9411 18 0E            jr 2F
 189+ 9413 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9414 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9416
 192+ 9416              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9416              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9416
 195+ 9416 3A CC 88         ld a,(Coordenada_X)
 196+ 9419 16 10            ld d,Centro_derecha
 197+ 941B A7               and a
 198+ 941C 92               sub d
 199+ 941D 28 0E            jr z,3F
 200+ 941F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9421              ;                                                    ; _salimos sin modificar nada.
 202+ 9421 CB 43        2 bit 0,e
 203+ 9423 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9425 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9426 CD BA 94         call Modificaccionne
 206+ 9429 C1           	pop bc
 207+ 942A CD CA 94         call Inicializacion
 208+ 942D C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 942E
 210+ 942E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 942E
 212+ 942E C5           4 push bc
 213+ 942F 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9432 0A           	ld a,(bc)
 215+ 9433 3D           	dec a
 216+ 9434 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9435 7D           	ld a,l
 218+ 9436 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9437 CB 47        	bit 0,a
 220+ 9439 28 03        	jr z,5F
 221+ 943B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 943C 18 2E        	jr 7F
 223+ 943E
 224+ 943E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 943E
 226+ 943E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 943F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9440 3A F0 88     	ld a,(Ctrl_0)
 229+ 9443 CB 4F        	bit 1,a
 230+ 9445 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9447 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9448
 233+ 9448              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9448
 235+ 9448 1C               inc e
 236+ 9449 1D               dec e
 237+ 944A 20 07            jr nz,12F
 238+ 944C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 944D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 944E 22 C8 88     	ld (Posicion_actual),hl
 241+ 9451 18 44        13 jr 9F
 242+ 9453 CB 43        12 bit 0,e
 243+ 9455 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9457              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9457 C1           	pop bc
 246+ 9458 18 D3        	jr 3B
 247+ 945A 80           14 add b
 248+ 945B 6F               ld l,a
 249+ 945C 22 C8 88     	ld (Posicion_actual),hl
 250+ 945F CD BA 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9462 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9464 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9466 32 F0 88         ld (Ctrl_0),a
 254+ 9469 F1           	pop af
 255+ 946A 18 2B        	jr 9F
 256+ 946C
 257+ 946C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 946C
 259+ 946C F5           7 push af
 260+ 946D 3A F0 88     	ld a,(Ctrl_0)
 261+ 9470 CB 47        	bit 0,a
 262+ 9472 20 1D        	jr nz,8F
 263+ 9474 F1           	pop af
 264+ 9475
 265+ 9475              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9475
 267+ 9475 1C           	inc e
 268+ 9476 1D               dec e
 269+ 9477 20 07            jr nz,10F
 270+ 9479 90           	sub b
 271+ 947A 6F               ld l,a
 272+ 947B 22 C8 88     	ld (Posicion_actual),hl
 273+ 947E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9480              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9480 CB 43        10 bit 0,e
 276+ 9482 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9484              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9484 C1           	pop bc
 279+ 9485 18 A6        	jr 3B
 280+ 9487 90           16 sub b
 281+ 9488 6F               ld l,a
 282+ 9489 22 C8 88     	ld (Posicion_actual),hl
 283+ 948C CD BA 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 948F 18 06            jr 9F
 285+ 9491 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9493 32 F0 88         ld (Ctrl_0),a
 287+ 9496 F1           	pop af
 288+ 9497 C1           9 pop bc
 289+ 9498 1E 00        	ld e,0
 290+ 949A CD CA 94         call Inicializacion
 291+ 949D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 949E 08           	ex af,af
 293+ 949F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94A0 18 8B            jr 3B
 295+ 94A2
 296+ 94A2              ; --------------------
 297+ 94A2
 298+ 94A2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94A4 CD 28 96     1 call PreviousScan
 300+ 94A7 10 FB            djnz 1B
 301+ 94A9 22 C8 88     	ld (Posicion_actual),hl
 302+ 94AC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94AD C9           	ret
 304+ 94AE
 305+ 94AE              ; --------------------
 306+ 94AE
 307+ 94AE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94B0 CD 19 96     1 call NextScan
 309+ 94B3 10 FB            djnz 1B
 310+ 94B5 22 C8 88     	ld (Posicion_actual),hl
 311+ 94B8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94B9 C9           	ret
 313+ 94BA
 314+ 94BA              ; --------------------
 315+ 94BA              ;
 316+ 94BA              ;	22/01/23
 317+ 94BA              ;
 318+ 94BA              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94BA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94BA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94BA
 322+ 94BA
 323+ 94BA              Modificaccionne
 324+ 94BA
 325+ 94BA 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94BD FE 02        	cp 2
 327+ 94BF CC A2 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94C2 DC A2 94         call c,Modifica_Pos_actual
 329+ 94C5 C8           	ret z
 330+ 94C6 CD AE 94         call Modifica_Pos_actual2
 331+ 94C9 C9               ret
 332+ 94CA
 333+ 94CA              ; *************************************************************************************************************************************************************************************************
 334+ 94CA              ;
 335+ 94CA              ;	13/8/22
 336+ 94CA              ;
 337+ 94CA              ;	Inicializacion
 338+ 94CA              ;
 339+ 94CA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94CA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94CA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94CA              ;
 343+ 94CA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94CA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94CA              ;	_ desaparece/aparece.
 346+ 94CA
 347+ 94CA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94CA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94CA              ;
 350+ 94CA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94CA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94CA              ; 		   [E] ="0"
 353+ 94CA
 354+ 94CA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94CA
 356+ 94CA CD 2C 99     Inicializacion call calcula_tercio
 357+ 94CD 28 36        	jr z,primit
 358+ 94CF E6 02        	and 2
 359+ 94D1 20 07        	jr nz,segmit
 360+ 94D3 7D           	ld a,l
 361+ 94D4 FE 7F        	cp $7f
 362+ 94D6 38 2D        	jr c,primit
 363+ 94D8 28 2B        	jr z,primit
 364+ 94DA CD 37 95     segmit call column
 365+ 94DD 38 13        	jr c,tercuad
 366+ 94DF 3E 04        cuarcuad ld a,4
 367+ 94E1 32 DA 88     	ld (Cuad_objeto),a
 368+ 94E4 21 20 48     	ld hl,$4820
 369+ 94E7 22 FE 88     	ld (Limite_horizontal),hl
 370+ 94EA 21 00 89     	ld hl,Limite_vertical
 371+ 94ED 36 0D        	ld (hl),$0d
 372+ 94EF 08           	ex af,af
 373+ 94F0 18 3C        	jr 1F
 374+ 94F2              tercuad
 375+ 94F2 3E 03        	ld a,3
 376+ 94F4 32 DA 88     	ld (Cuad_objeto),a
 377+ 94F7 21 20 48     	ld hl,$4820
 378+ 94FA 22 FE 88     	ld (Limite_horizontal),hl
 379+ 94FD 21 00 89     	ld hl,Limite_vertical
 380+ 9500 36 12        	ld (hl),$12
 381+ 9502 08           	ex af,af
 382+ 9503 18 29        	jr 1F
 383+ 9505 CD 37 95     primit call column
 384+ 9508 38 13        	jr c, primcuad
 385+ 950A              segcuad
 386+ 950A 3E 02        	ld a,2
 387+ 950C 32 DA 88     	ld (Cuad_objeto),a
 388+ 950F 21 C0 4F     	ld hl,$4fc0
 389+ 9512 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9515 21 00 89     	ld hl,Limite_vertical
 391+ 9518 36 0D        	ld (hl),$0d
 392+ 951A 08           	ex af,af
 393+ 951B 18 11        	jr 1F
 394+ 951D              primcuad
 395+ 951D 3E 01        	ld a,1
 396+ 951F 32 DA 88     	ld (Cuad_objeto),a
 397+ 9522 21 C0 4F     	ld hl,$4fc0
 398+ 9525 22 FE 88     	ld (Limite_horizontal),hl
 399+ 9528 21 00 89     	ld hl,Limite_vertical
 400+ 952B 36 12        	ld (hl),$12
 401+ 952D 08           	ex af,af
 402+ 952E CD B7 9C     1 call Genera_coordenadas
 403+ 9531 21 F0 88     	ld hl,Ctrl_0
 404+ 9534 CB EE        	set 5,(hl)
 405+ 9536 C9           	ret
 406+ 9537
 407+ 9537              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9537
 409+ 9537              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9537              ;
 411+ 9537              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9537
 413+ 9537 7D           column ld a,l
 414+ 9538 E6 1F        	and $1f
 415+ 953A FE 10         	cp $10
 416+ 953C C9            	ret
 417+ 953D
 418+ 953D              ; --------------------------------------------------------------------------------------------------------------------
 419+ 953D              ;
 420+ 953D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 953D              ;
 422+ 953D              ; 14/12/22
 423+ 953D              ;
 424+ 953D              ;	Modifica: A y BC.
 425+ 953D
 426+ 953D 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9540 E6 01        	and 1
 428+ 9542 28 17        	jr z,1F
 429+ 9544
 430+ 9544              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9544
 432+ 9544 3A CC 88     	ld a,(Coordenada_X)
 433+ 9547 47           	ld b,a
 434+ 9548 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9549 79           	ld a,c
 436+ 954A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 954B 38 08        	jr c,2F
 438+ 954D 47           	ld b,a
 439+ 954E 79           	ld a,c
 440+ 954F 90           	sub b
 441+ 9550 32 FD 88     	ld (Columnas),a
 442+ 9553 18 1B        	jr 4F
 443+ 9555 79           2 ld a,c
 444+ 9556 32 FD 88     	ld (Columnas),a
 445+ 9559 18 15        	jr 4F
 446+ 955B
 447+ 955B              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 955B
 449+ 955B 3A CC 88     1 ld a,(Coordenada_X)
 450+ 955E 81           	add c
 451+ 955F 3D           	dec a
 452+ 9560 D6 1F        	sub $1f
 453+ 9562 38 08        	jr c,3F
 454+ 9564 47           	ld b,a
 455+ 9565 79           	ld a,c
 456+ 9566 90           	sub b
 457+ 9567 32 FD 88     	ld (Columnas),a
 458+ 956A 18 04        	jr 4F
 459+ 956C 79           3 ld a,c
 460+ 956D 32 FD 88     	ld (Columnas),a
 461+ 9570 D9           4 exx
 462+ 9571 4F           	ld c,a
 463+ 9572 D9           	exx
 464+ 9573 C9            ret
 465+ 9574
 466+ 9574              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9574              ;
 468+ 9574              ;   19/7/23
 469+ 9574              ;
 470+ 9574              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9574              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9574              ;
 473+ 9574              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9574              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9574              ;
 476+ 9574              ;	DESTRUYE: HL,B Y A.
 477+ 9574
 478+ 9574 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9577 FE 02        	cp 2
 480+ 9579 38 18        	jr c,1F
 481+ 957B 28 16        	jr z,1F
 482+ 957D E6 01        	and 1
 483+ 957F 28 0D        	jr z,3F
 484+ 9581
 485+ 9581              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9581
 487+ 9581 CD C7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9584
 489+ 9584 7D           9 ld a,l
 490+ 9585 E6 1F        	and $1f
 491+ 9587 28 2A        	jr z,7F
 492+ 9589 2B           	dec hl
 493+ 958A 10 F8        	djnz 9B
 494+ 958C 18 25        	jr 7F
 495+ 958E
 496+ 958E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 958E
 498+ 958E 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 9591 18 20        	jr 7F
 500+ 9593
 501+ 9593 28 14        1 jr z,2F
 502+ 9595
 503+ 9595              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9595
 505+ 9595 CD C7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9598
 507+ 9598 7D           4 ld a,l
 508+ 9599 E6 1F        	and $1f
 509+ 959B 28 03        	jr z,6F
 510+ 959D 2B           	dec hl
 511+ 959E 10 F8        	djnz 4B
 512+ 95A0 06 0F        6 ld b,15
 513+ 95A2 CD 28 96     5 call PreviousScan
 514+ 95A5 10 FB        	djnz 5B
 515+ 95A7 18 0A        	jr 7F
 516+ 95A9
 517+ 95A9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95A9
 519+ 95A9 CD C7 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95AC 06 0F        	ld b,15
 521+ 95AE CD 28 96     8 call PreviousScan
 522+ 95B1 10 FB        	djnz 8B
 523+ 95B3
 524+ 95B3 E5           7 push hl
 525+ 95B4 DD E1        	pop ix
 526+ 95B6
 527+ 95B6 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95B9 E5           	push hl
 529+ 95BA FD E1        	pop iy
 530+ 95BC
 531+ 95BC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95BC
 533+ 95BC 3A F0 88     	ld a,(Ctrl_0)
 534+ 95BF CB 77        	bit 6,a
 535+ 95C1 C8           	ret z
 536+ 95C2
 537+ 95C2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95C2              ; _ entidad / Amadeus´.
 539+ 95C2
 540+ 95C2 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95C6
 542+ 95C6 C9           	ret
 543+ 95C7
 544+ 95C7              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95C7              ;
 546+ 95C7              ;	2/1/23
 547+ 95C7              ;
 548+ 95C7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95C7              ;
 550+ 95C7              ;	Tras esta rutina tenemos:
 551+ 95C7              ;
 552+ 95C7              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95C7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95C7              ;
 555+ 95C7              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95C7
 557+ 95C7 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95CA 3A FD 88     	ld a,(Columnas)
 559+ 95CD 3D           	dec a
 560+ 95CE 20 01        	jr nz,1F
 561+ 95D0 3C           	inc a
 562+ 95D1 47           1 ld b,a
 563+ 95D2 C9           	ret
 564+ 95D3
 565+ 95D3              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95D3              ;
 567+ 95D3              ;	3/1/23
 568+ 95D3              ;
 569+ 95D3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95D3              ;
 571+ 95D3              ;	Destruye: A,B,HL y DE.
 572+ 95D3
 573+ 95D3              Define_rutina_de_impresion
 574+ 95D3
 575+ 95D3 3A C7 88     	ld a,(Columns)
 576+ 95D6 47           	ld b,a
 577+ 95D7 3A FD 88     	ld a,(Columnas)
 578+ 95DA B8           	cp b
 579+ 95DB 20 0D        	jr nz,2f
 580+ 95DD
 581+ 95DD              ;	La entidad se imprime entera.
 582+ 95DD
 583+ 95DD 21 FC 96     	ld hl, Indice_entidades_completas
 584+ 95E0 E6 01        	and 1
 585+ 95E2 28 02        	jr z,1F
 586+ 95E4
 587+ 95E4 23           	inc hl
 588+ 95E5 23           	inc hl
 589+ 95E6
 590+ 95E6 CD 80 8C     1 call Extrae_address
 591+ 95E9 C9           	ret		;	ret
 592+ 95EA
 593+ 95EA              ;	La entidad no se imprime entera en pantalla.
 594+ 95EA
 595+ 95EA 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 95ED E6 01        	and 1
 597+ 95EF 28 17        	jr z,3F
 598+ 95F1
 599+ 95F1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95F1
 601+ 95F1 21 00 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95F4 3A C7 88     4 ld a,(Columns)
 603+ 95F7 E6 01        	and 1
 604+ 95F9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95FB
 606+ 95FB 23           	inc hl
 607+ 95FC 23           	inc hl
 608+ 95FD
 609+ 95FD 3A FD 88     	ld a,(Columnas)
 610+ 9600 E6 01        	and 1
 611+ 9602 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9604
 613+ 9604 23           	inc hl
 614+ 9605 23           	inc hl
 615+ 9606
 616+ 9606 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9608
 618+ 9608 21 06 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 960B 18 E7        	jr 4B
 620+ 960D
 621+ 960D              ; --------------------------------------------------------------------------------------------------------------------
 622+ 960D              ;
 623+ 960D              ;	Prepara_draw
 624+ 960D              ;
 625+ 960D              ;	Es una rutina de carga.
 626+ 960D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 960D              ;
 628+ 960D              ;	FUNCIONAMIENTO:
 629+ 960D              ;
 630+ 960D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 960D              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 960D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 960D              ;
 634+ 960D              ;	DESTRUYE:
 635+ 960D              ;
 636+ 960D              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 960D
 638+ 960D 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9610 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9611 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9612 4E           	ld c,(hl)
 642+ 9613 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9616 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9618 C9           	ret
 645+ 9619
 646+ 9619              ;----------------------------------------------------------------------------------------------------------------
 647+ 9619              ;
 648+ 9619              ;	5/08/22
 649+ 9619              ;
 650+ 9619              ;   NextScan.
 651+ 9619              ;
 652+ 9619              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9619              ;
 654+ 9619              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9619              ;
 656+ 9619              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9619              ;
 658+ 9619              ;       DESTRUIDOS: AF y HL !!!
 659+ 9619              ;
 660+ 9619              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9619              ;
 662+ 9619
 663+ 9619 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 961A 7C               ld a,h
 665+ 961B E6 07            and 7
 666+ 961D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 961E
 668+ 961E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 961F C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9621 6F               ld l,a
 671+ 9622 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9623
 673+ 9623 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9624 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9626 67               ld h,a
 676+ 9627 C9               ret
 677+ 9628
 678+ 9628              ;----------------------------------------------------------------------------------------------------------------
 679+ 9628              ;
 680+ 9628              ;	5/08/22
 681+ 9628              ;
 682+ 9628              ;   PreviousScan.
 683+ 9628              ;
 684+ 9628              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9628              ;
 686+ 9628              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9628              ;
 688+ 9628              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9628              ;
 690+ 9628              ;       DESTRUIDOS: AF y HL !!!
 691+ 9628              ;
 692+ 9628              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9628              ;
 694+ 9628
 695+ 9628 7C           PreviousScan ld a,h
 696+ 9629 25               dec h               ; Dec H.
 697+ 962A E6 07            and 7
 698+ 962C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 962D
 700+ 962D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 962E D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9630 6F               ld l,a
 703+ 9631 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9632
 705+ 9632 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9633 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9635 67               ld h,a
 708+ 9636 C9               ret
 709+ 9637
 710+ 9637              ; -----------------------------------------------------------------------------------
 711+ 9637              ;
 712+ 9637              ;	31/7/23
 713+ 9637              ;
 714+ 9637              ;	Rutina principal de pintado de entidades.
 715+ 9637              ;	Extrae la foto del frame, (entidades).
 716+ 9637
 717+ 9637              Extrae_foto_entidades
 718+ 9637
 719+ 9637 21 01 70     	ld hl,Album_de_fotos+1
 720+ 963A 7E           	ld a,(hl)
 721+ 963B A7           	and a
 722+ 963C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 963D
 724+ 963D              ;	No hay datos, (entidades para pintar en este frame).
 725+ 963D
 726+ 963D 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9640 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9641 C8           	ret z
 729+ 9642
 730+ 9642              ; -----------------------------------
 731+ 9642
 732+ 9642 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9646 31 00 70     	ld sp,Album_de_fotos
 734+ 9649
 735+ 9649 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 964B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 964C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 964D
 739+ 964D ED 73 16 89  	ld (Stack_2),sp
 740+ 9651 ED 7B 14 89  	ld sp,(Stack)
 741+ 9655
 742+ 9655              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9655
 744+ 9655 3E CD        	ld a,$cd
 745+ 9657 32 5F 96     	ld (Imprime),a
 746+ 965A EB           	ex de,hl
 747+ 965B 22 60 96     	ld (Imprime+1),hl
 748+ 965E EB           	ex de,hl
 749+ 965F
 750+ 965F              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 965F
 752+ 965F 00 00 00     Imprime db 0,0,0
 753+ 9662
 754+ 9662 ED 73 14 89  	ld (Stack),sp
 755+ 9666
 756+ 9666 3A 0F 89     	ld a,(Numero_de_malotes)
 757+ 9669 3D           	dec a
 758+ 966A 28 09        	jr z,1F
 759+ 966C 32 0F 89      	ld (Numero_de_malotes),a
 760+ 966F
 761+ 966F ED 7B 16 89  	ld sp,(Stack_2)
 762+ 9673 18 D4        	jr 2B
 763+ 9675
 764+ 9675 AF           1 xor a
 765+ 9676 32 16 89     	ld (Stack_2),a
 766+ 9679
 767+ 9679 C9           	ret
 768+ 967A
 769+ 967A              ; -----------------------------------------------------------------------------------
 770+ 967A              ;
 771+ 967A              ;	28/2/23
 772+ 967A              ;
 773+ 967A              ;	Pinta los disparos generados.
 774+ 967A
 775+ 967A              Extrae_foto_disparos
 776+ 967A
 777+ 967A 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 967D 7E               ld a,(hl)
 779+ 967E A7               and a
 780+ 967F C8               ret z
 781+ 9680
 782+ 9680 3A 3E 89     	ld a,(Numero_de_disparotes)
 783+ 9683 A7           	and a
 784+ 9684 C8           	ret z
 785+ 9685 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9689 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 968C
 788+ 968C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 968E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 968F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9690
 792+ 9690 ED 73 16 89  	ld (Stack_2),sp
 793+ 9694 ED 7B 14 89  	ld sp,(Stack)
 794+ 9698
 795+ 9698              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9698
 797+ 9698 3E CD        	ld a,$cd
 798+ 969A 32 A2 96     	ld (Imprime2),a
 799+ 969D EB           	ex de,hl
 800+ 969E 22 A3 96     	ld (Imprime2+1),hl
 801+ 96A1 EB           	ex de,hl
 802+ 96A2
 803+ 96A2              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96A2
 805+ 96A2 00 00 00     Imprime2 db 0,0,0
 806+ 96A5
 807+ 96A5 3A 3E 89     	ld a,(Numero_de_disparotes)
 808+ 96A8 3D           	dec a
 809+ 96A9 28 09        	jr z,1F
 810+ 96AB 32 3E 89      	ld (Numero_de_disparotes),a
 811+ 96AE
 812+ 96AE ED 7B 16 89  	ld sp,(Stack_2)
 813+ 96B2 18 D8        	jr 2B
 814+ 96B4
 815+ 96B4 AF           1 xor a
 816+ 96B5 32 16 89     	ld (Stack_2),a
 817+ 96B8 C9           	ret
 818+ 96B9
 819+ 96B9              ; -----------------------------------------------------------------------------------
 820+ 96B9              ;
 821+ 96B9              ;	4/9/23
 822+ 96B9              ;
 823+ 96B9              ;	Rutina principal de pintado de Amadeus.
 824+ 96B9              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96B9
 826+ 96B9 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96BC 7E           	ld a,(hl)
 828+ 96BD A7           	and a
 829+ 96BE C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96BF
 831+ 96BF 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96C2 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96C3 C8           	ret z
 834+ 96C4
 835+ 96C4              ; -----------------------------------
 836+ 96C4
 837+ 96C4 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96C8 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96CB
 840+ 96CB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96CD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96CE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96CF
 844+ 96CF ED 73 16 89  	ld (Stack_2),sp
 845+ 96D3 ED 7B 14 89  	ld sp,(Stack)
 846+ 96D7
 847+ 96D7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96D7
 849+ 96D7 3E CD        	ld a,$cd
 850+ 96D9 32 E1 96     	ld (Imprime_Amadeus),a
 851+ 96DC EB           	ex de,hl
 852+ 96DD 22 E2 96     	ld (Imprime_Amadeus+1),hl
 853+ 96E0 EB           	ex de,hl
 854+ 96E1
 855+ 96E1              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96E1
 857+ 96E1 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96E4
 859+ 96E4 ED 73 14 89  	ld (Stack),sp
 860+ 96E8
 861+ 96E8 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 96EB 3D           	dec a
 863+ 96EC 28 09        	jr z,1F
 864+ 96EE 32 0F 89      	ld (Numero_de_malotes),a
 865+ 96F1
 866+ 96F1 ED 7B 16 89  	ld sp,(Stack_2)
 867+ 96F5 18 D4        	jr 2B
 868+ 96F7
 869+ 96F7 AF           1 xor a
 870+ 96F8 32 16 89     	ld (Stack_2),a
 871+ 96FB
 872+ 96FB C9           	ret
# file closed: Draw_XOR.asm
1639  96FC              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96FC              ;   índices de Rutinas de impresión.
   2+ 96FC
   3+ 96FC 0C 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96FE 39 97            defw Pinta_Amadeus_3x2
   5+ 9700
   6+ 9700 8F 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9702 2F 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9704 E3 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9706
  10+ 9706 B9 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9708 BD 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 970A 71 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 970C
  14+ 970C
  15+ 970C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 970C              ;
  17+ 970C              ;   12/12/22
  18+ 970C              ;
  19+ 970C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 970C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 970C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 970C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 970C              ;
  24+ 970C              ;   Modifica: DE y HL.
  25+ 970C
  26+ 970C ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9710 FD F9        	ld sp,iy
  28+ 9712 06 10            ld b,16
  29+ 9714 D1           1 pop de
  30+ 9715 7B               ld a,e
  31+ 9716 AE               xor (hl)
  32+ 9717 77           	ld (hl),a
  33+ 9718 23           	inc hl
  34+ 9719 7A               ld a,d
  35+ 971A AE               xor (hl)
  36+ 971B 77           	ld (hl),a
  37+ 971C 2B           	dec hl
  38+ 971D 24           	inc h
  39+ 971E 7C               ld a,h
  40+ 971F E6 07            and 7
  41+ 9721 20 0A            jr nz,2F
  42+ 9723 7D               ld a,l
  43+ 9724 C6 20            add a,$20
  44+ 9726 6F               ld l,a
  45+ 9727 38 04            jr c,2F
  46+ 9729 7C               ld a,h
  47+ 972A D6 08            sub 8
  48+ 972C 67               ld h,a
  49+ 972D 7C           2 ld a,h
  50+ 972E FE 58            cp $58
  51+ 9730 28 02            jr z,3F
  52+ 9732 10 E0            djnz 1B
  53+ 9734 ED 7B 14 89  3 ld sp,(Stack)
  54+ 9738 C9           	ret
  55+ 9739
  56+ 9739 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 973D FD F9        	ld sp,iy
  58+ 973F 06 08            ld b,8
  59+ 9741 D1           1 pop de
  60+ 9742 7B               ld a,e
  61+ 9743 AE               xor (hl)
  62+ 9744 77           	ld (hl),a
  63+ 9745 23           	inc hl
  64+ 9746 7A               ld a,d
  65+ 9747 AE               xor (hl)
  66+ 9748 77           	ld (hl),a
  67+ 9749 23           	inc hl
  68+ 974A D1           	pop de
  69+ 974B 7B               ld a,e
  70+ 974C AE               xor (hl)
  71+ 974D 77           	ld (hl),a
  72+ 974E 2B           	dec hl
  73+ 974F 2B           	dec hl
  74+ 9750 24           	inc h
  75+ 9751 7C               ld a,h
  76+ 9752 E6 07            and 7
  77+ 9754 20 0A            jr nz,2F
  78+ 9756 7D               ld a,l
  79+ 9757 C6 20            add a,$20
  80+ 9759 6F               ld l,a
  81+ 975A 38 04            jr c,2F
  82+ 975C 7C               ld a,h
  83+ 975D D6 08            sub 8
  84+ 975F 67               ld h,a
  85+ 9760 7C           2 ld a,h
  86+ 9761 FE 58            cp $58
  87+ 9763 28 25            jr z,4F
  88+ 9765 7A               ld a,d
  89+ 9766 AE               xor (hl)
  90+ 9767 77               ld (hl),a
  91+ 9768 D1           	pop de
  92+ 9769 23           	inc hl
  93+ 976A 7B               ld a,e
  94+ 976B AE               xor (hl)
  95+ 976C 77           	ld (hl),a
  96+ 976D 23           	inc hl
  97+ 976E 7A               ld a,d
  98+ 976F AE               xor (hl)
  99+ 9770 77           	ld (hl),a
 100+ 9771 2B           	dec hl
 101+ 9772 2B           	dec hl
 102+ 9773 24           	inc h
 103+ 9774 7C               ld a,h
 104+ 9775 E6 07            and 7
 105+ 9777 20 0A            jr nz,3F
 106+ 9779 7D               ld a,l
 107+ 977A C6 20            add a,$20
 108+ 977C 6F               ld l,a
 109+ 977D 38 04            jr c,3F
 110+ 977F 7C               ld a,h
 111+ 9780 D6 08            sub 8
 112+ 9782 67               ld h,a
 113+ 9783 7C           3 ld a,h
 114+ 9784 FE 58            cp $58
 115+ 9786 28 02            jr z,4F
 116+ 9788 10 B7            djnz 1B
 117+ 978A ED 7B 14 89  4 ld sp,(Stack)
 118+ 978E C9           	ret
 119+ 978F
 120+ 978F              ; ---------------------------------------------------
 121+ 978F
 122+ 978F ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9793 FD F9        	ld sp,iy
 124+ 9795
 125+ 9795              ; >>>
 126+ 9795
 127+ 9795 06 10            ld b,16
 128+ 9797 D1           1 pop de
 129+ 9798 7A           	ld a,d
 130+ 9799 AE           	xor (hl)
 131+ 979A 77           	ld (hl),a
 132+ 979B 24           	inc h
 133+ 979C 7C               ld a,h
 134+ 979D E6 07            and 7
 135+ 979F 20 0C            jr nz,2F
 136+ 97A1 7D               ld a,l
 137+ 97A2 C6 20            add a,$20
 138+ 97A4 6F               ld l,a
 139+ 97A5 38 06            jr c,2F
 140+ 97A7 7C               ld a,h
 141+ 97A8 D6 08            sub 8
 142+ 97AA 67               ld h,a
 143+ 97AB 18 00            jr 2F
 144+ 97AD 7C           2 ld a,h
 145+ 97AE FE 58            cp $58
 146+ 97B0 28 02            jr z,3F
 147+ 97B2 10 E3            djnz 1B
 148+ 97B4 ED 7B 14 89  3 ld sp,(Stack)
 149+ 97B8 C9           	ret
 150+ 97B9
 151+ 97B9 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97BD FD F9        	ld sp,iy
 153+ 97BF
 154+ 97BF              ; >>>
 155+ 97BF
 156+ 97BF 06 10            ld b,16
 157+ 97C1 D1           1 pop de
 158+ 97C2 7B           	ld a,e
 159+ 97C3 AE           	xor (hl)
 160+ 97C4 77           	ld (hl),a
 161+ 97C5 24           	inc h
 162+ 97C6 7C               ld a,h
 163+ 97C7 E6 07            and 7
 164+ 97C9 20 0C            jr nz,2F
 165+ 97CB 7D               ld a,l
 166+ 97CC C6 20            add a,$20
 167+ 97CE 6F               ld l,a
 168+ 97CF 38 06            jr c,2F
 169+ 97D1 7C               ld a,h
 170+ 97D2 D6 08            sub 8
 171+ 97D4 67               ld h,a
 172+ 97D5 18 00            jr 2F
 173+ 97D7 7C           2 ld a,h
 174+ 97D8 FE 58            cp $58
 175+ 97DA 28 02            jr z,3F
 176+ 97DC 10 E3            djnz 1B
 177+ 97DE ED 7B 14 89  3 ld sp,(Stack)
 178+ 97E2 C9           	ret
 179+ 97E3
 180+ 97E3              ; ---------------------------------------------------
 181+ 97E3
 182+ 97E3 ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97E7 FD F9        	ld sp,iy
 184+ 97E9 06 08            ld b,8
 185+ 97EB D1           1 pop de
 186+ 97EC 7A           	ld a,d
 187+ 97ED AE           	xor (hl)
 188+ 97EE 77           	ld (hl),a
 189+ 97EF 23           	inc hl
 190+ 97F0 D1           	pop de
 191+ 97F1 7B           	ld a,e
 192+ 97F2 AE           	xor (hl)
 193+ 97F3 77           	ld (hl),a
 194+ 97F4 2B           	dec hl
 195+ 97F5 24            	inc h
 196+ 97F6 7C               ld a,h
 197+ 97F7 E6 07            and 7
 198+ 97F9 20 0A            jr nz,2F
 199+ 97FB 7D               ld a,l
 200+ 97FC C6 20            add a,$20
 201+ 97FE 6F               ld l,a
 202+ 97FF 38 04            jr c,2F
 203+ 9801 7C               ld a,h
 204+ 9802 D6 08            sub 8
 205+ 9804 67               ld h,a
 206+ 9805 7C           2 ld a,h
 207+ 9806 FE 58            cp $58
 208+ 9808 28 20            jr z,4F
 209+ 980A D1               pop de
 210+ 980B 7B           	ld a,e
 211+ 980C AE           	xor (hl)
 212+ 980D 77           	ld (hl),a
 213+ 980E 23           	inc hl
 214+ 980F 7A           	ld a,d
 215+ 9810 AE           	xor (hl)
 216+ 9811 77           	ld (hl),a
 217+ 9812 2B           	dec hl
 218+ 9813 24           	inc h
 219+ 9814 7C               ld a,h
 220+ 9815 E6 07            and 7
 221+ 9817 20 0A            jr nz,3F
 222+ 9819 7D               ld a,l
 223+ 981A C6 20            add a,$20
 224+ 981C 6F               ld l,a
 225+ 981D 38 04            jr c,3F
 226+ 981F 7C               ld a,h
 227+ 9820 D6 08            sub 8
 228+ 9822 67               ld h,a
 229+ 9823 7C           3 ld a,h
 230+ 9824 FE 58            cp $58
 231+ 9826 28 02            jr z,4F
 232+ 9828 10 C1            djnz 1B
 233+ 982A ED 7B 14 89  4 ld sp,(Stack)
 234+ 982E C9           	ret
 235+ 982F
 236+ 982F ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9833 FD F9        	ld sp,iy
 238+ 9835 06 08            ld b,8
 239+ 9837 D1           1 pop de
 240+ 9838 D1           	pop de
 241+ 9839 7B           	ld a,e
 242+ 983A AE           	xor (hl)
 243+ 983B 77           	ld (hl),a
 244+ 983C 24            	inc h
 245+ 983D 7C               ld a,h
 246+ 983E E6 07            and 7
 247+ 9840 20 0A            jr nz,2F
 248+ 9842 7D               ld a,l
 249+ 9843 C6 20            add a,$20
 250+ 9845 6F               ld l,a
 251+ 9846 38 04            jr c,2F
 252+ 9848 7C               ld a,h
 253+ 9849 D6 08            sub 8
 254+ 984B 67               ld h,a
 255+ 984C 7C           2 ld a,h
 256+ 984D FE 58            cp $58
 257+ 984F 28 1B            jr z,4F
 258+ 9851 D1               pop de
 259+ 9852 7A           	ld a,d
 260+ 9853 AE           	xor (hl)
 261+ 9854 77           	ld (hl),a
 262+ 9855 24           	inc h
 263+ 9856 7C               ld a,h
 264+ 9857 E6 07            and 7
 265+ 9859 20 0A            jr nz,3F
 266+ 985B 7D               ld a,l
 267+ 985C C6 20            add a,$20
 268+ 985E 6F               ld l,a
 269+ 985F 38 04            jr c,3F
 270+ 9861 7C               ld a,h
 271+ 9862 D6 08            sub 8
 272+ 9864 67               ld h,a
 273+ 9865 7C           3 ld a,h
 274+ 9866 FE 58            cp $58
 275+ 9868 28 02            jr z,4F
 276+ 986A 10 CB            djnz 1B
 277+ 986C ED 7B 14 89  4 ld sp,(Stack)
 278+ 9870 C9           	ret
 279+ 9871
 280+ 9871 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9875 FD F9        	ld sp,iy
 282+ 9877 06 08            ld b,8
 283+ 9879 D1           1 pop de
 284+ 987A 7B           	ld a,e
 285+ 987B AE           	xor (hl)
 286+ 987C 77           	ld (hl),a
 287+ 987D 23           	inc hl
 288+ 987E 7A           	ld a,d
 289+ 987F AE           	xor (hl)
 290+ 9880 77           	ld (hl),a
 291+ 9881 2B           	dec hl
 292+ 9882 24             	inc h
 293+ 9883 7C               ld a,h
 294+ 9884 E6 07            and 7
 295+ 9886 20 0A            jr nz,2F
 296+ 9888 7D               ld a,l
 297+ 9889 C6 20            add a,$20
 298+ 988B 6F               ld l,a
 299+ 988C 38 04            jr c,2F
 300+ 988E 7C               ld a,h
 301+ 988F D6 08            sub 8
 302+ 9891 67               ld h,a
 303+ 9892 7C           2 ld a,h
 304+ 9893 FE 58            cp $58
 305+ 9895 28 21            jr z,4F
 306+ 9897 D1               pop de
 307+ 9898 7A           	ld a,d
 308+ 9899 AE           	xor (hl)
 309+ 989A 77           	ld (hl),a
 310+ 989B 23           	inc hl
 311+ 989C D1               pop de
 312+ 989D 7B           	ld a,e
 313+ 989E AE           	xor (hl)
 314+ 989F 77           	ld (hl),a
 315+ 98A0 2B           	dec hl
 316+ 98A1 24           	inc h
 317+ 98A2 7C               ld a,h
 318+ 98A3 E6 07            and 7
 319+ 98A5 20 0A            jr nz,3F
 320+ 98A7 7D               ld a,l
 321+ 98A8 C6 20            add a,$20
 322+ 98AA 6F               ld l,a
 323+ 98AB 38 04            jr c,3F
 324+ 98AD 7C               ld a,h
 325+ 98AE D6 08            sub 8
 326+ 98B0 67               ld h,a
 327+ 98B1 7C           3 ld a,h
 328+ 98B2 FE 58            cp $58
 329+ 98B4 28 02            jr z,4F
 330+ 98B6 10 C1            djnz 1B
 331+ 98B8 ED 7B 14 89  4 ld sp,(Stack)
 332+ 98BC C9           	ret
 333+ 98BD
 334+ 98BD ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C1 FD F9        	ld sp,iy
 336+ 98C3 06 08            ld b,8
 337+ 98C5 D1           1 pop de
 338+ 98C6 7B           	ld a,e
 339+ 98C7 AE           	xor (hl)
 340+ 98C8 77           	ld (hl),a
 341+ 98C9 24            	inc h
 342+ 98CA 7C               ld a,h
 343+ 98CB E6 07            and 7
 344+ 98CD 20 0A            jr nz,2F
 345+ 98CF 7D               ld a,l
 346+ 98D0 C6 20            add a,$20
 347+ 98D2 6F               ld l,a
 348+ 98D3 38 04            jr c,2F
 349+ 98D5 7C               ld a,h
 350+ 98D6 D6 08            sub 8
 351+ 98D8 67               ld h,a
 352+ 98D9 7C           2 ld a,h
 353+ 98DA FE 58            cp $58
 354+ 98DC 28 1C            jr z,4F
 355+ 98DE D1               pop de
 356+ 98DF 7A           	ld a,d
 357+ 98E0 AE           	xor (hl)
 358+ 98E1 77           	ld (hl),a
 359+ 98E2 24           	inc h
 360+ 98E3 7C               ld a,h
 361+ 98E4 E6 07            and 7
 362+ 98E6 20 0A            jr nz,3F
 363+ 98E8 7D               ld a,l
 364+ 98E9 C6 20            add a,$20
 365+ 98EB 6F               ld l,a
 366+ 98EC 38 04            jr c,3F
 367+ 98EE 7C               ld a,h
 368+ 98EF D6 08            sub 8
 369+ 98F1 67               ld h,a
 370+ 98F2 7C           3 ld a,h
 371+ 98F3 FE 58            cp $58
 372+ 98F5 28 03            jr z,4F
 373+ 98F7 D1               pop de
 374+ 98F8 10 CB            djnz 1B
 375+ 98FA ED 7B 14 89  4 ld sp,(Stack)
 376+ 98FE C9           	ret
 377+ 98FF
 378+ 98FF              ; ---------------------------------------------------
 379+ 98FF              ;
 380+ 98FF              ;   27/02/23
 381+ 98FF              ;
 382+ 98FF              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98FF              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98FF              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98FF
 386+ 98FF ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 9903 FD F9            ld sp,iy
 388+ 9905 06 03            ld b,3
 389+ 9907 D1           1 pop de
 390+ 9908 7B               ld a,e
 391+ 9909 AE               xor (hl)
 392+ 990A 77               ld (hl),a
 393+ 990B 23               inc hl
 394+ 990C 7A               ld a,d
 395+ 990D AE               xor (hl)
 396+ 990E 77               ld (hl),a
 397+ 990F 2B               dec hl
 398+ 9910
 399+ 9910 24               inc h
 400+ 9911 7C               ld a,h
 401+ 9912 E6 07            and 7
 402+ 9914 20 0A            jr nz,2F
 403+ 9916 7D               ld a,l
 404+ 9917 C6 20            add a,$20
 405+ 9919 6F               ld l,a
 406+ 991A 38 04            jr c,2F
 407+ 991C 7C               ld a,h
 408+ 991D D6 08            sub 8
 409+ 991F 67               ld h,a
 410+ 9920 7C           2 ld a,h
 411+ 9921 FE 58            cp $58
 412+ 9923 28 02            jr z,3F
 413+ 9925
 414+ 9925 10 E0            djnz 1B
 415+ 9927 ED 7B 14 89  3 ld sp,(Stack)
 416+ 992B C9               ret
 417+ 992C
# file closed: Rutinas_de_impresion_sprites.asm
1640  992C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 992C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 992C              ;
   3+ 992C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 992C              ;
   5+ 992C              ; *****************************************************************************************************************************************************************************************
   6+ 992C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 992C
   8+ 992C 7C           calcula_tercio ld a,h
   9+ 992D E6 18        	and $18
  10+ 992F CB 2F        	sra a
  11+ 9931 CB 2F        	sra a
  12+ 9933 CB 2F        	sra a
  13+ 9935 C9           	ret
  14+ 9936
# file closed: calcula_tercio.asm
1641  9936              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9936              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9936              ;
   3+ 9936              ;
   4+ 9936              ;	CLS.
   5+ 9936              ;
   6+ 9936              ;	Limpia la pantalla y define sus atributos.
   7+ 9936              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9936              ;
   9+ 9936              ;	COLORES: 0 ..... NEGRO
  10+ 9936              ;    		 1 ..... AZUL
  11+ 9936              ; 			 2 ..... ROJO
  12+ 9936              ;			 3 ..... MAGENTA
  13+ 9936              ; 			 4 ..... VERDE
  14+ 9936              ; 			 5 ..... CIAN
  15+ 9936              ;			 6 ..... AMARILLO
  16+ 9936              ; 			 7 ..... BLANCO
  17+ 9936              ;
  18+ 9936              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9936              ;
  20+ 9936              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9936
  22+ 9936
  23+ 9936 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9939 11 01 40     	LD DE,$4001
  25+ 993C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 993F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9941 ED B0        	LDIR
  28+ 9943 01 FF 02     	LD BC,767
  29+ 9946 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9947 ED B0        	LDIR
  31+ 9949 C9           	ret
  32+ 994A
# file closed: Cls.asm
1642  994A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 994A              ; ******************************************************************************************************************************************************************************************
   2+ 994A              ;
   3+ 994A              ;   20/05/23
   4+ 994A              ;
   5+ 994A              ;	Recompone_posicion_inicio
   6+ 994A              ;
   7+ 994A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 994A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 994A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 994A              ;	_ a una u otra rutina.
  11+ 994A
  12+ 994A              Recompone_posicion_inicio
  13+ 994A
  14+ 994A 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 994D 7D           	ld a,l
  16+ 994E E6 1F        	and $1f
  17+ 9950 28 16        	jr z,1F
  18+ 9952
  19+ 9952 FE 1F        	cp $1f
  20+ 9954 28 0D        	jr z,3F
  21+ 9956
  22+ 9956 21 01 89     	ld hl,Ctrl_2
  23+ 9959 CB C6        	set 0,(hl)
  24+ 995B 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 995E 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 9961 18 08        	jr 2F
  27+ 9963
  28+ 9963 CD 04 9B     3 call Mov_left
  29+ 9966 18 03        	jr 2F
  30+ 9968
  31+ 9968 CD E6 99     1 call Mov_right
  32+ 996B 21 00 F0     2 ld hl,Sprite_vacio
  33+ 996E 22 CA 88     	ld (Puntero_objeto),hl
  34+ 9971 C9           	ret
  35+ 9972
  36+ 9972              ; ******************************************************************************************************************************************************************************************
  37+ 9972              ;
  38+ 9972              ;   27/05/23
  39+ 9972              ;
  40+ 9972              ;	Mov_down
  41+ 9972              ;
  42+ 9972              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9972              ;
  44+ 9972              ;
  45+ 9972              Mov_down
  46+ 9972
  47+ 9972 CD D4 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9975              ;																	; _ repone (Puntero_objeto).
  49+ 9975 21 F0 88     	ld hl,Ctrl_0
  50+ 9978 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 997A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 997A              ; 																	; _ en el caso de que no lo haya.
  53+ 997A 3A DE 88     	ld a,(Vel_down)
  54+ 997D 47           	ld b,a
  55+ 997E 2A C8 88         ld hl,(Posicion_actual)
  56+ 9981 CD 2C 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9984 E6 02        	and 2
  58+ 9986 28 0F        	jr z,1F
  59+ 9988
  60+ 9988              ; Nos encontramos en el último tercio de pantalla.
  61+ 9988              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9988
  63+ 9988 7C           	ld a,h
  64+ 9989 FE 57        	cp $57
  65+ 998B 20 0A        	jr nz,1F
  66+ 998D
  67+ 998D 7D           	ld a,l
  68+ 998E C6 20        	add $20
  69+ 9990 30 05        	jr nc,1F
  70+ 9992
  71+ 9992              ; ------------------------------
  72+ 9992              ;	call Reaparece_arriba
  73+ 9992 CD 91 9C     	call Reinicio
  74+ 9995              ; ------------------------------
  75+ 9995
  76+ 9995 18 08        	jr 3F
  77+ 9997 CD 19 96     1 call NextScan
  78+ 999A 22 C8 88     	ld (Posicion_actual),hl
  79+ 999D 10 E2            djnz 2B
  80+ 999F CD B7 9C     3 call Genera_coordenadas
  81+ 99A2 C9           	ret
  82+ 99A3
  83+ 99A3              ; ******************************************************************************************************************************************************************************************
  84+ 99A3              ;
  85+ 99A3              ;   27/05/23
  86+ 99A3              ;
  87+ 99A3              ;	Mov_up
  88+ 99A3              ;
  89+ 99A3              ; 	Mueve el Sprite hacia arriba.
  90+ 99A3              ;
  91+ 99A3              ;
  92+ 99A3              Mov_up
  93+ 99A3
  94+ 99A3 CD D4 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99A6              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99A6 21 F0 88     	ld hl,Ctrl_0
  97+ 99A9 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99AB              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99AB              ; 																		; _ en el caso de que no lo haya.
 100+ 99AB 3A DD 88     	ld a,(Vel_up)
 101+ 99AE 47           	ld b,a
 102+ 99AF 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99B2 CD 2C 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99B5 A7           	and a
 105+ 99B6 20 10        	jr nz,1F
 106+ 99B8
 107+ 99B8              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99B8              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99B8
 110+ 99B8 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99B9 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99BB 20 0B            jr nz,1F
 113+ 99BD 7D               ld a,l
 114+ 99BE D6 20            sub $20
 115+ 99C0 30 06            jr nc,1F
 116+ 99C2 25               dec h
 117+ 99C3
 118+ 99C3              ; -----------------------------
 119+ 99C3 CD 72 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99C6              ;	call Reinicio
 121+ 99C6              ; -----------------------------
 122+ 99C6
 123+ 99C6 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99C8 CD 28 96     1 call PreviousScan
 125+ 99CB 22 C8 88     	ld (Posicion_actual),hl
 126+ 99CE 10 E2            djnz 3B
 127+ 99D0 CD B7 9C     2 call Genera_coordenadas
 128+ 99D3 C9           	ret
 129+ 99D4
 130+ 99D4              ; -----------------------------
 131+ 99D4              ;
 132+ 99D4              ;	27/5/23
 133+ 99D4              ;
 134+ 99D4              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99D4              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99D4              ;
 137+ 99D4              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99D4              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99D4              ;
 140+ 99D4              ;	Modifica: A y (Puntero_objeto).
 141+ 99D4
 142+ 99D4 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99D7 CB 47        	bit 0,a
 144+ 99D9 C8           	ret z
 145+ 99DA CB 87        	res 0,a
 146+ 99DC 32 01 89     	ld (Ctrl_2),a
 147+ 99DF 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 99E2 22 CA 88     	ld (Puntero_objeto),hl
 149+ 99E5 C9           	ret
 150+ 99E6
 151+ 99E6              ; ******************************************************************************************************************************************************************************************
 152+ 99E6              ;
 153+ 99E6              ;	19/10/22
 154+ 99E6              ;
 155+ 99E6              ;	Mov_right.
 156+ 99E6              ;
 157+ 99E6              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99E6              ;
 159+ 99E6
 160+ 99E6 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 99E9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99EB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99EB              ; 																	; _ en el caso de que no lo haya.
 164+ 99EB 3A F0 88     	ld a,(Ctrl_0)
 165+ 99EE CB 77        	bit 6,a
 166+ 99F0 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99F2
 168+ 99F2 CD 20 9C     	call Stop_Amadeus_right
 169+ 99F5 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99F6 18 4D        	jr 8F
 171+ 99F8
 172+ 99F8 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99FB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99FD 20 46        	jr nz,8F
 175+ 99FF
 176+ 99FF 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A02 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A03 28 40        	jr z,8F
 179+ 9A05
 180+ 9A05              ; ---------- ---------- ----------
 181+ 9A05              ;
 182+ 9A05              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A05
 184+ 9A05 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A08 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A0A 28 11        	jr z,1F
 187+ 9A0C 38 06        	jr c,6F
 188+ 9A0E FE 04        	cp 4
 189+ 9A10 28 14        	jr z,7F
 190+ 9A12 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A14
 192+ 9A14              ; ---------- ---------- ----------
 193+ 9A14              ;
 194+ 9A14              ; Perfiles de velocidad
 195+ 9A14              ;
 196+ 9A14
 197+ 9A14 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A17 FE FE        	cp $fe
 199+ 9A19 20 2A        	jr nz,8F
 200+ 9A1B 18 10        	jr 3F
 201+ 9A1D 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A20 FE FD        	cp $fd
 203+ 9A22 20 21        	jr nz,8F
 204+ 9A24 18 07        	jr 3F
 205+ 9A26 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A29 FE FB        	cp $fb
 207+ 9A2B 20 18        	jr nz,8F
 208+ 9A2D
 209+ 9A2D              ; ---------- ---------- ----------
 210+ 9A2D
 211+ 9A2D              3
 212+ 9A2D CD 60 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A30              ;	call Reinicio
 214+ 9A30
 215+ 9A30              ; ---------- ---------- ----------
 216+ 9A30              ;
 217+ 9A30              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A30
 219+ 9A30 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A32 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A33 CD 4C 9A     	call DESPLZ_DER
 222+ 9A36 C1           	pop bc
 223+ 9A37 10 F9        	djnz 5B
 224+ 9A39 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A3C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A3D 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A40 CD B7 9C     	call Genera_coordenadas
 228+ 9A43 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A45
 230+ 9A45              ; ---------- ---------- ----------
 231+ 9A45
 232+ 9A45 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A48 CD 4C 9A     	call DESPLZ_DER
 234+ 9A4B C9           2 ret
 235+ 9A4C
 236+ 9A4C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A4C              ;
 238+ 9A4C              ;	22/9/22
 239+ 9A4C              ;
 240+ 9A4C
 241+ 9A4C CD 5B 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A4F CD A7 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A52 CD D0 9A         call Ciclo_completo
 244+ 9A55 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A58 CB FE        	set 7,(hl)
 246+ 9A5A C9           	ret
 247+ 9A5B
 248+ 9A5B              ; ******************************************************************************************************************************************************************************************
 249+ 9A5B              ;	15/02/23
 250+ 9A5B              ;
 251+ 9A5B
 252+ 9A5B 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A5E 47           	ld b,a
 254+ 9A5F 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A62 23           1 inc hl
 256+ 9A63 23           	inc hl
 257+ 9A64 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A66 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A69 CD 80 8C     	call Extrae_address
 260+ 9A6C 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9A6F
 262+ 9A6F              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A6F
 264+ 9A6F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A6F              ; Cuántos movimientos hemos hecho ??
 266+ 9A6F              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A6F
 268+ 9A6F 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A72 EB           	ex de,hl
 270+ 9A73 A7           	and a
 271+ 9A74 ED 52        	sbc hl,de
 272+ 9A76 CB 3D        	srl l
 273+ 9A78 3E 08        6 ld a,8
 274+ 9A7A 95           	sub l
 275+ 9A7B 30 1E        	jr nc,3F
 276+ 9A7D
 277+ 9A7D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A7D              ; B="0".
 279+ 9A7D
 280+ 9A7D 04           4 inc b
 281+ 9A7E 3C           	inc a
 282+ 9A7F 20 FC        	jr nz,4B
 283+ 9A81 78           	ld a,b
 284+ 9A82 08           	ex af,af
 285+ 9A83 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9A86 23           5 inc hl
 287+ 9A87 23           	inc hl
 288+ 9A88 10 FC        	djnz 5B
 289+ 9A8A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A8D CD 80 8C     	call Extrae_address
 291+ 9A90 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9A93
 293+ 9A93              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A93              ; _(Posicion_actual).
 295+ 9A93
 296+ 9A93 21 C8 88     	ld hl,Posicion_actual
 297+ 9A96 34           	inc (hl)
 298+ 9A97 08               ex af,af
 299+ 9A98 6F           	ld l,a
 300+ 9A99 18 DD        	jr 6B
 301+ 9A9B
 302+ 9A9B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A9B
 304+ 9A9B 47           3 ld b,a
 305+ 9A9C 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A9F 23           2 inc hl
 307+ 9AA0 23           	inc hl
 308+ 9AA1 10 FC        	djnz 2B
 309+ 9AA3 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AA6 C9           8 ret
 311+ 9AA7
 312+ 9AA7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AA7              ;
 314+ 9AA7              ;	24/7/22
 315+ 9AA7              ;
 316+ 9AA7              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AA7              ;
 318+ 9AA7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AA7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AA7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AA7
 322+ 9AA7 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AAA A7           	and a
 324+ 9AAB 20 1F        	jr nz,1F
 325+ 9AAD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AAF 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9AB2
 328+ 9AB2 21 C7 88     	ld hl,Columns
 329+ 9AB5 34           	inc (hl)
 330+ 9AB6 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AB9 E6 01        	and 1
 332+ 9ABB 28 0F        	jr z,1F
 333+ 9ABD 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AC0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC1 22 C8 88     	ld (Posicion_actual),hl
 336+ 9AC4 CD B7 9C     	call Genera_coordenadas
 337+ 9AC7 CD 2C 9C     	call Inc_CTRL_DESPLZ
 338+ 9ACA 18 03        	jr 2F
 339+ 9ACC CD 2C 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ACF C9           2 ret
 341+ 9AD0
 342+ 9AD0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AD0              ;
 344+ 9AD0              ;	24/7/22
 345+ 9AD0              ;
 346+ 9AD0              ;	Ciclo_completo.
 347+ 9AD0              ;
 348+ 9AD0              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AD0              ;
 350+ 9AD0              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AD0              ; 	Decrementamos (Columns).
 352+ 9AD0              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AD0              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AD0
 355+ 9AD0
 356+ 9AD0 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AD3 FE FF        	cp $ff
 358+ 9AD5 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AD7 E6 F0        	and $f0
 360+ 9AD9 20 28        	jr nz,3F
 361+ 9ADB
 362+ 9ADB              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9ADB
 364+ 9ADB 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9ADE 47           	ld b,a
 366+ 9ADF 3E F8        	ld a,$f8
 367+ 9AE1 80           	add b
 368+ 9AE2 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9AE5 18 1C        	jr 3F
 370+ 9AE7 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AEA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AEB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AEC 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9AEF 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AF2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AF4 20 0A        	jr nz,2F
 377+ 9AF6 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AF9 23           	inc hl
 379+ 9AFA 22 C8 88     	ld (Posicion_actual),hl
 380+ 9AFD CD B7 9C     	call Genera_coordenadas
 381+ 9B00
 382+ 9B00              ; Inicia el puntero de Sprite.
 383+ 9B00
 384+ 9B00 CD 97 8C     2 call Inicia_puntero_objeto_der
 385+ 9B03 C9           3 ret
 386+ 9B04
 387+ 9B04              ; ******************************************************************************************************************************************************************************************
 388+ 9B04              ;
 389+ 9B04              ;	15/02/23
 390+ 9B04              ;
 391+ 9B04              ;	Mov_left.
 392+ 9B04              ;
 393+ 9B04              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B04              ;
 395+ 9B04              Mov_left
 396+ 9B04
 397+ 9B04 21 F0 88     	ld hl,Ctrl_0
 398+ 9B07 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B09              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B09              ; 																	; _ en el caso de que no lo haya.
 401+ 9B09 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B0C CB 77        	bit 6,a
 403+ 9B0E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B10
 405+ 9B10 CD 26 9C     	call Stop_Amadeus_left
 406+ 9B13 C8           	ret z
 407+ 9B14 20 4A        	jr nz,8F
 408+ 9B16
 409+ 9B16 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B19 A7           	and a
 411+ 9B1A 20 44        	jr nz,8F
 412+ 9B1C
 413+ 9B1C 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B1F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B20 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B22
 417+ 9B22              ; ---------- ---------- ----------
 418+ 9B22
 419+ 9B22 3A DB 88     	ld a,(Vel_left)
 420+ 9B25 FE 02        	cp 2
 421+ 9B27 28 0F        	jr z,1F
 422+ 9B29 38 04        	jr c,6F
 423+ 9B2B FE 04        	cp 4
 424+ 9B2D 28 12        	jr z,7F
 425+ 9B2F
 426+ 9B2F              ; ---------- ---------- ----------
 427+ 9B2F
 428+ 9B2F 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B32 FE F8        	cp $f8
 430+ 9B34 20 2A        	jr nz,8F
 431+ 9B36 18 10        	jr 4F
 432+ 9B38 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B3B FE F9        	cp $f9
 434+ 9B3D 20 21        	jr nz,8F
 435+ 9B3F 18 07        	jr 4F
 436+ 9B41 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B44 FE FB        	cp $fb
 438+ 9B46 20 18        	jr nz,8F
 439+ 9B48
 440+ 9B48              ; ---------- ---------- ----------
 441+ 9B48
 442+ 9B48              4
 443+ 9B48 CD 4E 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B4B              ;	call Reinicio
 445+ 9B4B
 446+ 9B4B              ; ---------- ---------- ----------
 447+ 9B4B
 448+ 9B4B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B4D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B4E
 451+ 9B4E              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B4E              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B4E
 454+ 9B4E CD 67 9B     	call DESPLZ_IZQ
 455+ 9B51 C1           	pop bc
 456+ 9B52 10 F9        	djnz 5B
 457+ 9B54 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B57 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B58 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B5B CD B7 9C     	call Genera_coordenadas
 461+ 9B5E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B60
 463+ 9B60              ; ---------- ---------- ----------
 464+ 9B60
 465+ 9B60              ; Movemos, no hay recolocación.
 466+ 9B60
 467+ 9B60 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B63 CD 67 9B     	call DESPLZ_IZQ
 469+ 9B66 C9           2 ret
 470+ 9B67
 471+ 9B67              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B67              ;
 473+ 9B67              ;	22/9/22
 474+ 9B67
 475+ 9B67              DESPLZ_IZQ
 476+ 9B67
 477+ 9B67 CD 76 9B     	call Desplaza_izquierda
 478+ 9B6A CD C2 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B6D CD EA 9B     	call Ciclo_completo_2
 480+ 9B70 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B73 CB BE        	res 7,(hl)
 482+ 9B75 C9           	ret
 483+ 9B76
 484+ 9B76              Desplaza_izquierda
 485+ 9B76
 486+ 9B76 3A DB 88     	ld a,(Vel_left)
 487+ 9B79 47           	ld b,a
 488+ 9B7A 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B7D 23           1 inc hl
 490+ 9B7E 23           	inc hl
 491+ 9B7F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B81 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B84 CD 80 8C     	call Extrae_address
 494+ 9B87 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9B8A
 496+ 9B8A              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B8A
 498+ 9B8A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B8A              ; Cuántos movimientos hemos hecho ??
 500+ 9B8A              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B8A
 502+ 9B8A 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B8D EB           	ex de,hl
 504+ 9B8E A7           	and a
 505+ 9B8F ED 52        	sbc hl,de
 506+ 9B91 CB 3D        	srl l
 507+ 9B93 3E 08        6 ld a,8
 508+ 9B95 95           	sub l
 509+ 9B96 30 1E        	jr nc,3F
 510+ 9B98
 511+ 9B98              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B98              ; B="0".
 513+ 9B98
 514+ 9B98 04           4 inc b
 515+ 9B99 3C           	inc a
 516+ 9B9A 20 FC        	jr nz,4B
 517+ 9B9C 78           	ld a,b
 518+ 9B9D 08           	ex af,af
 519+ 9B9E 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BA1 23           5 inc hl
 521+ 9BA2 23           	inc hl
 522+ 9BA3 10 FC        	djnz 5B
 523+ 9BA5 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BA8 CD 80 8C     	call Extrae_address
 525+ 9BAB 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BAE
 527+ 9BAE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BAE              ; _(Posicion_actual).
 529+ 9BAE
 530+ 9BAE 21 C8 88     	ld hl,Posicion_actual
 531+ 9BB1 35           	dec (hl)
 532+ 9BB2 08           	ex af,af
 533+ 9BB3 6F           	ld l,a
 534+ 9BB4 18 DD        	jr 6B
 535+ 9BB6
 536+ 9BB6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BB6
 538+ 9BB6 47           3 ld b,a
 539+ 9BB7 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BBA 23           2 inc hl
 541+ 9BBB 23           	inc hl
 542+ 9BBC 10 FC        	djnz 2B
 543+ 9BBE 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BC1 C9           8 ret
 545+ 9BC2
 546+ 9BC2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BC2              ;
 548+ 9BC2              ;	modifica_parametros_1er_DESPLZ
 549+ 9BC2              ;
 550+ 9BC2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BC2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BC2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BC2
 554+ 9BC2 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BC5 A7           	and a
 556+ 9BC6 20 1E        	jr nz,1F
 557+ 9BC8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BC9 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9BCC 21 C7 88     	ld hl,Columns
 560+ 9BCF 34           	inc (hl)
 561+ 9BD0 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9BD3 E6 01        	and 1
 563+ 9BD5 20 0F        	jr nz,1F
 564+ 9BD7 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BDA 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BDB 22 C8 88     	ld (Posicion_actual),hl
 567+ 9BDE CD B7 9C     	call Genera_coordenadas
 568+ 9BE1 CD 3D 9C     	call Dec_CTRL_DESPLZ
 569+ 9BE4 18 03        	jr 2F
 570+ 9BE6 CD 3D 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BE9 C9           2 ret
 572+ 9BEA
 573+ 9BEA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BEA
 575+ 9BEA 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BED FE F7        	cp $f7
 577+ 9BEF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BF1 30 2C        	jr nc,3F
 579+ 9BF3
 580+ 9BF3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BF3
 582+ 9BF3 06 00        	ld b,0
 583+ 9BF5 04           4 inc b
 584+ 9BF6 3C           	inc a
 585+ 9BF7 FE F7        	cp $f7
 586+ 9BF9 20 FA        	jr nz,4B
 587+ 9BFB 3E FF        	ld a,$ff
 588+ 9BFD 90           	sub b
 589+ 9BFE 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C01 18 1C        	jr 3F
 591+ 9C03
 592+ 9C03              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C03
 594+ 9C03 21 C7 88     1 ld hl,Columns
 595+ 9C06 35           	dec (hl)
 596+ 9C07 AF           	xor a
 597+ 9C08 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C0B 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C0E E6 01        	and 1
 600+ 9C10 28 0A        	jr z,2F
 601+ 9C12 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C15 2B           	dec hl
 603+ 9C16 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C19 CD B7 9C     	call Genera_coordenadas
 605+ 9C1C
 606+ 9C1C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C1C
 608+ 9C1C CD AA 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C1F C9           3 ret
 610+ 9C20
 611+ 9C20              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C20              ;
 613+ 9C20              ;	19/10/22
 614+ 9C20              ;
 615+ 9C20              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C20              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C20
 618+ 9C20 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C23 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C25 C9           	ret
 621+ 9C26
 622+ 9C26              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C26              ;
 624+ 9C26              ;	19/10/22
 625+ 9C26              ;
 626+ 9C26              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C26              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C26
 629+ 9C26 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C29 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C2B C9           	ret
 632+ 9C2C
 633+ 9C2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C2C              ;
 635+ 9C2C              ;	24/7/22
 636+ 9C2C              ;
 637+ 9C2C              ;	Inc_CTRL_DESPLZ
 638+ 9C2C              ;
 639+ 9C2C              ;
 640+ 9C2C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C2C
 642+ 9C2C 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C2F 3A DC 88     	ld a,(Vel_right)
 644+ 9C32 A7           	and a
 645+ 9C33 28 06        	jr z,1F
 646+ 9C35 47           	ld b,a
 647+ 9C36 34           3 inc (hl)
 648+ 9C37 10 FD        	djnz 3B
 649+ 9C39 18 01        	jr 2F
 650+ 9C3B 34           1 inc (hl)
 651+ 9C3C C9           2 ret
 652+ 9C3D
 653+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C3D              ;
 655+ 9C3D              ;	5/2/23
 656+ 9C3D              ;
 657+ 9C3D              ;	Dec_CTRL_DESPLZ
 658+ 9C3D              ;
 659+ 9C3D              ;
 660+ 9C3D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C3D
 662+ 9C3D 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C40 3A DB 88     	ld a,(Vel_left)
 664+ 9C43 A7           	and a
 665+ 9C44 28 06        	jr z,1F
 666+ 9C46 47           	ld b,a
 667+ 9C47 35           3 dec (hl)
 668+ 9C48 10 FD        	djnz 3B
 669+ 9C4A 18 01        	jr 2F
 670+ 9C4C 35           1 dec (hl)
 671+ 9C4D C9           2 ret
 672+ 9C4E
 673+ 9C4E              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C4E
 675+ 9C4E 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C51 01 1F 00     	ld bc,31
 677+ 9C54 A7           	and a
 678+ 9C55 ED 4A        	adc hl,bc
 679+ 9C57 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C5A 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C5D CB C6        	set 0,(hl)
 682+ 9C5F C9           	ret
 683+ 9C60
 684+ 9C60              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C60
 686+ 9C60 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C63 01 1F 00     	ld bc,31
 688+ 9C66 A7           	and a
 689+ 9C67 ED 42        	sbc hl,bc
 690+ 9C69 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C6C 21 F0 88     	ld hl,Ctrl_0
 692+ 9C6F CB CE        	set 1,(hl)
 693+ 9C71 C9           	ret
 694+ 9C72
 695+ 9C72              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C72
 697+ 9C72 24           Reaparece_abajo inc h
 698+ 9C73 01 E0 17     	ld bc,$17e0
 699+ 9C76 A7           	and a
 700+ 9C77 ED 4A        	adc hl,bc
 701+ 9C79 22 C8 88     	ld (Posicion_actual),hl
 702+ 9C7C 21 F0 88     	ld hl,Ctrl_0
 703+ 9C7F CB D6        	set 2,(hl)
 704+ 9C81 C9           	ret
 705+ 9C82
 706+ 9C82              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C82
 708+ 9C82 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C85 A7           	and a
 710+ 9C86 ED 42        	sbc hl,bc
 711+ 9C88 22 C8 88     	ld (Posicion_actual),hl
 712+ 9C8B 21 F0 88     	ld hl,Ctrl_0
 713+ 9C8E CB DE        	set 3,(hl)
 714+ 9C90 C9           	ret
 715+ 9C91
 716+ 9C91              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C91              ;
 718+ 9C91              ;	15/07/23
 719+ 9C91
 720+ 9C91              Reinicio
 721+ 9C91
 722+ 9C91              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C91
 724+ 9C91 AF           	xor a
 725+ 9C92 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C95 CD B3 9C     	call Limpia_contenido_hl
 727+ 9C98
 728+ 9C98 21 C8 88     	ld hl,Posicion_actual
 729+ 9C9B CD B3 9C     	call Limpia_contenido_hl
 730+ 9C9E
 731+ 9C9E CD E3 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CA1 CD 6D 9F     	call Inicia_Puntero_mov
 733+ 9CA4
 734+ 9CA4 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CA7 06 05        	ld b,5
 736+ 9CA9 77           1 ld (hl),a
 737+ 9CAA 23           	inc hl
 738+ 9CAB 10 FC        	djnz 1B
 739+ 9CAD
 740+ 9CAD 21 01 89     	ld hl,Ctrl_2
 741+ 9CB0 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CB2
 743+ 9CB2 C9           	ret
 744+ 9CB3
 745+ 9CB3 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CB4 23           	inc hl
 747+ 9CB5 77           	ld (hl),a
 748+ 9CB6 C9           	ret
 749+ 9CB7
 750+ 9CB7
# file closed: Direcciones.asm
1643  9CB7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CB7              ; ------------------------------------------------------------------------
   2+ 9CB7              ;
   3+ 9CB7              ;	02/04/23
   4+ 9CB7              ;
   5+ 9CB7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CB7              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CB7              ;
   8+ 9CB7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CB7              ;
  10+ 9CB7              ;	Modifica: A,BC y DE.
  11+ 9CB7
  12+ 9CB7 C5           Genera_coordenadas push bc
  13+ 9CB8 E5           	push hl
  14+ 9CB9 D5           	push de
  15+ 9CBA
  16+ 9CBA 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CBD
  18+ 9CBD 7D           	ld a,l
  19+ 9CBE E6 1F        	and $1f
  20+ 9CC0 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CC3
  22+ 9CC3 CD 2C 99     	call calcula_tercio
  23+ 9CC6 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CC7
  25+ 9CC7 1E 00        	ld e,0
  26+ 9CC9 7D           	ld a,l
  27+ 9CCA E6 E0        	and $e0
  28+ 9CCC 28 01        	jr z,1F
  29+ 9CCE 04           	inc b
  30+ 9CCF
  31+ 9CCF 04           1 inc b
  32+ 9CD0 05           	dec b
  33+ 9CD1 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CD3              ;														; _ , salimos.
  35+ 9CD3 1C           3 inc e
  36+ 9CD4 D6 20        	sub 32
  37+ 9CD6 20 FB        	jr nz,3B
  38+ 9CD8 10 F5        	djnz 1B
  39+ 9CDA
  40+ 9CDA 7B           2 ld a,e
  41+ 9CDB 32 CD 88     	ld (Coordenada_y),a
  42+ 9CDE
  43+ 9CDE D1           	pop de
  44+ 9CDF E1           	pop hl
  45+ 9CE0 C1           	pop bc
  46+ 9CE1
  47+ 9CE1 C9           	ret
  48+ 9CE2
  49+ 9CE2              ; ------------------------------------------------------------------------
  50+ 9CE2              ;	28/05/23
  51+ 9CE2              ;
  52+ 9CE2              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CE2              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CE2              ;
  55+ 9CE2              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CE2              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CE2              ;
  58+ 9CE2              ;		DE="$120d"
  59+ 9CE2              ;
  60+ 9CE2              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CE2              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CE2              ;
  63+ 9CE2              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CE2
  65+ 9CE2              ;	Modifica: A,BC y DE.
  66+ 9CE2
  67+ 9CE2
  68+ 9CE2              Genera_coordenadas_disparo
  69+ 9CE2
  70+ 9CE2              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CE2
  72+ 9CE2 7D           	ld a,l
  73+ 9CE3 E6 1F        	and $1f
  74+ 9CE5 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CE6 CD 2C 99     	call calcula_tercio
  76+ 9CE9 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CEA 1E 00        	ld e,0
  78+ 9CEC 7D           	ld a,l
  79+ 9CED E6 E0        	and $e0
  80+ 9CEF 28 01        	jr z,1F
  81+ 9CF1 04           	inc b
  82+ 9CF2 1C           1 inc e
  83+ 9CF3 D6 20        	sub 32
  84+ 9CF5 20 FB        	jr nz,1B
  85+ 9CF7 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CF9 C9           	ret
  87+ 9CFA
# file closed: Genera_coordenadas.asm
1644  9CFA              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CFA              ; Relojes y temporizaciones.
   2+ 9CFA
   3+ 9CFA              ; ------------------------------------------------------
   4+ 9CFA              ;
   5+ 9CFA              ;	16/7/23
   6+ 9CFA              ;
   7+ 9CFA              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CFA              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CFA              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CFA              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CFA              ;
  12+ 9CFA              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CFA              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CFA
  15+ 9CFA              ; Disparo_entidad db 1
  16+ 9CFA              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CFA              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CFA
  19+ 9CFA              Habilita_disparos
  20+ 9CFA
  21+ 9CFA 7E           	ld a,(hl)
  22+ 9CFB A7           	and a
  23+ 9CFC C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CFD
  25+ 9CFD EB           	ex de,hl
  26+ 9CFE
  27+ 9CFE 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CFF C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D00
  30+ 9D00              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D00
  32+ 9D00 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D01 7E           	ld a,(hl)
  34+ 9D02 23           	inc hl
  35+ 9D03 77           	ld (hl),a
  36+ 9D04
  37+ 9D04 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D05 3E 01        	ld a,1
  39+ 9D07 77           	ld (hl),a
  40+ 9D08 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1645  9D09              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D09
   2+ 9D09
   3+ 9D09              ;   07/07/23
   4+ 9D09              ;
   5+ 9D09              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D09              ;
   7+ 9D09              ;   Codificación:
   8+ 9D09              ;
   9+ 9D09              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D09              ;
  11+ 9D09              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D09              ;
  13+ 9D09              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D09              ;
  15+ 9D09              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D09              ;
  17+ 9D09              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D09              ;                               ..... %01000010 Vel_up 4
  19+ 9D09              ;                                               Vel_down 2
  20+ 9D09              ;                               ..... $42
  21+ 9D09              ;
  22+ 9D09              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D09              ;
  24+ 9D09              ;                               ..... %01000010 Vel_left 4
  25+ 9D09              ;                                               Vel_right 2
  26+ 9D09              ;                               ..... $42
  27+ 9D09              ;
  28+ 9D09              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D09              ;
  30+ 9D09              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D09              ;
  32+ 9D09              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D09              ;
  34+ 9D09              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D09              ;                                     $53
  36+ 9D09              ;
  37+ 9D09              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D09              ;
  39+ 9D09              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D09              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D09              ;
  42+ 9D09              ;                       Arriba ..... $81
  43+ 9D09              ;                       Arriba - izquierda ..... $a1
  44+ 9D09              ;                       Arriba - derecha ..... $91
  45+ 9D09              ;
  46+ 9D09              ;                       Abajo ..... $41
  47+ 9D09              ;                       Abajo - izquierda ..... $61
  48+ 9D09              ;                       Abajo - derecha ..... $51
  49+ 9D09              ;
  50+ 9D09              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D09              ;
  52+ 9D09              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D09              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D09              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D09              ;
  56+ 9D09              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D09              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D09              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D09              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D09              ;
  61+ 9D09              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D09              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D09              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D09              ;
  65+ 9D09              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D09              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D09              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D09              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D09
  70+ 9D09              ; ----- ----- ----- ----- -----
  71+ 9D09
  72+ 9D09 35 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D0B 3D 9D            defw F_1
  74+ 9D0D 47 9D            defw F_2
  75+ 9D0F 51 9D            defw Codo_abajo_derecha
  76+ 9D11 85 9D            defw Derecha_y_subiendo
  77+ 9D13 8F 9D            defw Derecha_y_subiendo_1
  78+ 9D15 99 9D            defw F_3
  79+ 9D17 A3 9D            defw F_4
  80+ 9D19 AD 9D            defw Derecha_y_bajando
  81+ 9D1B B7 9D            defw Derecha_y_bajando_1
  82+ 9D1D C1 9D            defw Derecha_y_bajando_2
  83+ 9D1F CB 9D            defw Codo_derecha_abajo
  84+ 9D21 FB 9D            defw Codo_abajo_izq.
  85+ 9D23 2F 9E            defw Izquierda_y_subiendo
  86+ 9D25 39 9E            defw Izquierda_y_subiendo_1
  87+ 9D27 43 9E            defw F_5
  88+ 9D29 4D 9E            defw F_6
  89+ 9D2B 57 9E            defw Izquierda_y_bajando
  90+ 9D2D 61 9E            defw Izquierda_y_bajando_1
  91+ 9D2F 6B 9E            defw Izquierda_y_bajando_2
  92+ 9D31 75 9E            defw Codo_izquierda_abajo
  93+ 9D33 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D35
  95+ 9D35 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D39 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D3D
  98+ 9D3D 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D41 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D45 08 00
 100+ 9D47 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D4B 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D4F 0F FE
 102+ 9D51
 103+ 9D51 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D55 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D5D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D61 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D65 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D6D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D71 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D75 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D79 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D7D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D81 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D85
 117+ 9D85 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D89 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D8D 06 00
 119+ 9D8F
 120+ 9D8F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D93 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D97 02 00
 122+ 9D99
 123+ 9D99 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D9D 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA1 04 00
 125+ 9DA3 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DA7 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DAB 08 00
 127+ 9DAD
 128+ 9DAD 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB1 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DB5 02 00
 130+ 9DB7
 131+ 9DB7 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DBB 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DBF 06 00
 133+ 9DC1
 134+ 9DC1 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DC5 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DC9 06 00
 136+ 9DCB
 137+ 9DCB              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DCB
 139+ 9DCB 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DCF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DD3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DD7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DDB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DDF 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DE3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DE7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DEB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DEF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DF3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DF7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DFB
 152+ 9DFB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DFF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E03 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E07 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E0B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E0F 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E13 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E17 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E1B 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E1F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E23 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E27 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E2B 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E2F
 166+ 9E2F 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E33 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E37 06 00
 168+ 9E39
 169+ 9E39 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E3D 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E41 02 00
 171+ 9E43
 172+ 9E43 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E47 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E4B 04 00
 174+ 9E4D 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E51 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E55 08 00
 176+ 9E57
 177+ 9E57 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E5B 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E5F 02 00
 179+ 9E61
 180+ 9E61 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E65 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E69 06 00
 182+ 9E6B
 183+ 9E6B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E6F 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E73 06 00
 185+ 9E75
 186+ 9E75 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E79 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E7D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E81 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E85 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E89 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E8D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E91 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E95 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E99 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E9D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA1 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EA5
 199+ 9EA5              ; ----- ----- ----- ----- -----
 200+ 9EA5              ;
 201+ 9EA5              ;   27/06/23
 202+ 9EA5
 203+ 9EA5              Movimiento
 204+ 9EA5
 205+ 9EA5              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EA5
 207+ 9EA5              ;    ld hl,(Posicion_actual)
 208+ 9EA5
 209+ 9EA5 3A 01 89         ld a,(Ctrl_2)
 210+ 9EA8 CB 57            bit 2,a
 211+ 9EAA 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EAC
 213+ 9EAC 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EAF 7E               ld a,(hl)
 215+ 9EB0
 216+ 9EB0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB0
 218+ 9EB0              Inicia_desplazamiento.
 219+ 9EB0
 220+ 9EB0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB0
 222+ 9EB0 CD A4 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EB3
 224+ 9EB3              ; Iniciamos (Repetimos_mov).
 225+ 9EB3
 226+ 9EB3 7E               ld a,(hl)
 227+ 9EB4 E6 0F            and $0f
 228+ 9EB6 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EB9 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EBC
 231+ 9EBC              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EBC
 233+ 9EBC 23               inc hl
 234+ 9EBD 7E               ld a,(hl)
 235+ 9EBE 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EC1 2B               dec hl
 237+ 9EC2
 238+ 9EC2 21 01 89         ld hl,Ctrl_2
 239+ 9EC5 CB D6            set 2,(hl)
 240+ 9EC7
 241+ 9EC7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EC7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EC7
 244+ 9EC7              Desplazamiento_iniciado
 245+ 9EC7
 246+ 9EC7 CD 78 9F         call Aplica_desplazamiento
 247+ 9ECA
 248+ 9ECA 3A 01 89         ld a,(Ctrl_2)
 249+ 9ECD CB 67            bit 4,a
 250+ 9ECF C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED0
 252+ 9ED0 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9ED3 35               dec (hl)
 254+ 9ED4 C0               ret nz
 255+ 9ED5
 256+ 9ED5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9ED5              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9ED5              ; Analiza (Cola_de_desplazamiento).
 259+ 9ED5
 260+ 9ED5 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9ED8 A7               and a
 262+ 9ED9 CC CD 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EDC 28 30            jr z,Reinicia_el_movimiento
 264+ 9EDE
 265+ 9EDE FE FF            cp $ff
 266+ 9EE0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EE2
 268+ 9EE2 FE FE            cp $fe
 269+ 9EE4 CC 51 9F         call z,Fijamos_bucle
 270+ 9EE7 28 25            jr z,Reinicia_el_movimiento
 271+ 9EE9
 272+ 9EE9 FE FD            cp $fd
 273+ 9EEB 20 11            jr nz,1F
 274+ 9EED
 275+ 9EED              ; ---
 276+ 9EED              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EED
 278+ 9EED 3A 01 89         ld a,(Ctrl_2)
 279+ 9EF0 CB 5F            bit 3,a
 280+ 9EF2 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EF4
 282+ 9EF4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EF4
 284+ 9EF4 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EF7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EF9
 287+ 9EF9 CD 62 9F         call Inicia_Repetimos_movimiento
 288+ 9EFC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EFE              ; ---
 290+ 9EFE
 291+ 9EFE FE 01        1 cp 1
 292+ 9F00 CA 3B 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F03
 294+ 9F03 3D               dec a
 295+ 9F04 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F07
 297+ 9F07 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F0A 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F0D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F0D C9               ret
 301+ 9F0E
 302+ 9F0E              Reinicia_el_movimiento
 303+ 9F0E
 304+ 9F0E 3A 01 89         ld a,(Ctrl_2)
 305+ 9F11 CB 5F            bit 3,a
 306+ 9F13 28 1B            jr z,2F
 307+ 9F15
 308+ 9F15              ; (Cola_de_desplazamiento)="254".
 309+ 9F15
 310+ 9F15 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F18 35               dec (hl)
 312+ 9F19 20 15            jr nz,2F
 313+ 9F1B
 314+ 9F1B              ; Fin de las repeticiones del último movimiento.
 315+ 9F1B
 316+ 9F1B 21 01 89         ld hl,Ctrl_2
 317+ 9F1E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F20
 319+ 9F20 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F23 23               inc hl
 321+ 9F24 23               inc hl
 322+ 9F25 23               inc hl
 323+ 9F26 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F29              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F29 7E               ld a,(hl)
 326+ 9F2A 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F2D
 328+ 9F2D C3 D5 9E         jp Cola
 329+ 9F30
 330+ 9F30 CD 6D 9F     2 call Inicia_Puntero_mov
 331+ 9F33
 332+ 9F33 21 01 89         ld hl,Ctrl_2
 333+ 9F36 CB 96            res 2,(hl)
 334+ 9F38
 335+ 9F38 C3 A5 9E         jp Movimiento
 336+ 9F3B
 337+ 9F3B              Siguiente_desplazamiento
 338+ 9F3B
 339+ 9F3B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F3B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F3B
 342+ 9F3B 21 01 89         ld hl,Ctrl_2
 343+ 9F3E CB 96            res 2,(hl)
 344+ 9F40
 345+ 9F40 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F43 23               inc hl
 347+ 9F44 23               inc hl
 348+ 9F45 22 F3 88         ld (Puntero_mov),hl
 349+ 9F48
 350+ 9F48 7E               ld a,(hl)
 351+ 9F49 A7               and a
 352+ 9F4A CC CD 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F4D CA 0E 9F         jp z,Reinicia_el_movimiento
 354+ 9F50
 355+ 9F50 C9               ret
 356+ 9F51              ; Subrutinas -----------------------------------------
 357+ 9F51              ; ---------- --------- --------- ---------- ----------
 358+ 9F51              ;
 359+ 9F51              ;   24/07/23
 360+ 9F51              ;
 361+ 9F51              ;   Fijamos_bucle
 362+ 9F51              ;
 363+ 9F51              ;
 364+ 9F51
 365+ 9F51              Fijamos_bucle
 366+ 9F51
 367+ 9F51 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F54 3C               inc a
 369+ 9F55 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F58
 371+ 9F58 CD CD 9F         call Incrementa_Puntero_indice_mov
 372+ 9F5B 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F5E 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F61 C9               ret
 375+ 9F62
 376+ 9F62              ; ---------- --------- --------- ---------- ----------
 377+ 9F62              ;
 378+ 9F62              ;   07/7/23
 379+ 9F62              ;
 380+ 9F62              ;   Inicia_Repetimos_movimiento
 381+ 9F62              ;
 382+ 9F62              ;
 383+ 9F62
 384+ 9F62              Inicia_Repetimos_movimiento
 385+ 9F62
 386+ 9F62              ; Iniciamos (Repetimos_movimiento).
 387+ 9F62
 388+ 9F62 DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F66 DD 7E 02         ld a,(ix+2)
 390+ 9F69 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9F6C
 392+ 9F6C C9               ret
 393+ 9F6D
 394+ 9F6D              ; ---------- --------- --------- ---------- ----------
 395+ 9F6D              ;
 396+ 9F6D              ;   26/6/23
 397+ 9F6D              ;
 398+ 9F6D              ;   Inicia_Puntero_mov
 399+ 9F6D              ;
 400+ 9F6D              ;
 401+ 9F6D
 402+ 9F6D 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F70 5E               ld e,(hl)
 404+ 9F71 23               inc hl
 405+ 9F72 56               ld d,(hl)
 406+ 9F73 EB               ex de,hl
 407+ 9F74 22 F3 88         ld (Puntero_mov),hl
 408+ 9F77 C9               ret
 409+ 9F78
 410+ 9F78              ; ---------- --------- --------- ---------- ----------
 411+ 9F78              ;
 412+ 9F78              ;   27/06/23
 413+ 9F78              ;
 414+ 9F78              ;   Aplica_movimiento.
 415+ 9F78
 416+ 9F78              Aplica_desplazamiento
 417+ 9F78
 418+ 9F78              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F78
 420+ 9F78 2A F3 88         ld hl, (Puntero_mov)
 421+ 9F7B
 422+ 9F7B 7E               ld a,(hl)
 423+ 9F7C E6 F0            and $f0
 424+ 9F7E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F7F
 426+ 9F7F CB 7E            bit 7,(hl)
 427+ 9F81 28 03            jr z,1F
 428+ 9F83 CD A3 99         call Mov_up
 429+ 9F86 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9F89 CB 76            bit 6,(hl)
 431+ 9F8B 28 03            jr z,2F
 432+ 9F8D CD 72 99         call Mov_down
 433+ 9F90 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9F93 CB 6E            bit 5,(hl)
 435+ 9F95 28 03            jr z,3F
 436+ 9F97 CD 04 9B         call Mov_left
 437+ 9F9A 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9F9D CB 66            bit 4,(hl)
 439+ 9F9F C8               ret z
 440+ 9FA0 CD E6 99         call Mov_right
 441+ 9FA3 C9               ret
 442+ 9FA4
 443+ 9FA4              ; ---------- --------- --------- ---------- ----------
 444+ 9FA4              ;
 445+ 9FA4              ;   26/06/23
 446+ 9FA4              ;
 447+ 9FA4              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FA4
 449+ 9FA4              Ajusta_velocidad_desplazamiento
 450+ 9FA4
 451+ 9FA4              ; 1er byte de la cadena de movimiento.
 452+ 9FA4              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FA4
 454+ 9FA4 CD C2 9F         call Extrae_nibble_alto
 455+ 9FA7
 456+ 9FA7 32 DD 88         ld (Vel_up),a
 457+ 9FAA 79               ld a,c
 458+ 9FAB E6 0F            and $0f
 459+ 9FAD 32 DE 88         ld (Vel_down),a
 460+ 9FB0
 461+ 9FB0              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FB0              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FB0
 464+ 9FB0 23               inc hl
 465+ 9FB1 CD C2 9F         call Extrae_nibble_alto
 466+ 9FB4
 467+ 9FB4 32 DB 88         ld (Vel_left),a
 468+ 9FB7 79               ld a,c
 469+ 9FB8 E6 0F            and $0f
 470+ 9FBA 32 DC 88         ld (Vel_right),a
 471+ 9FBD
 472+ 9FBD              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FBD
 474+ 9FBD 23               inc hl
 475+ 9FBE 22 F3 88         ld (Puntero_mov),hl
 476+ 9FC1 C9               ret
 477+ 9FC2
 478+ 9FC2 06 04        Extrae_nibble_alto ld b,4
 479+ 9FC4 7E               ld a,(hl)
 480+ 9FC5 4F               ld c,a
 481+ 9FC6 E6 F0            and $f0
 482+ 9FC8 CB 3F        1 srl a
 483+ 9FCA 10 FC            djnz 1B
 484+ 9FCC C9               ret
 485+ 9FCD
 486+ 9FCD              ; ---------- --------- --------- ---------- ----------
 487+ 9FCD              ;
 488+ 9FCD              ;   5/7/23
 489+ 9FCD              ;
 490+ 9FCD              ;   Incrementa_Puntero_indice_mov
 491+ 9FCD
 492+ 9FCD              Incrementa_Puntero_indice_mov
 493+ 9FCD
 494+ 9FCD 21 F7 88         ld hl,Incrementa_puntero
 495+ 9FD0 34               inc (hl)
 496+ 9FD1
 497+ 9FD1 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ 9FD4 01 02 00         ld bc,2
 499+ 9FD7 A7               and a
 500+ 9FD8 09               add hl,bc
 501+ 9FD9 22 F1 88         ld (Puntero_indice_mov),hl
 502+ 9FDC
 503+ 9FDC 7E               ld a,(hl)
 504+ 9FDD A7               and a
 505+ 9FDE
 506+ 9FDE              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FDE
 508+ 9FDE              ;    jr z,$
 509+ 9FDE
 510+ 9FDE              ;! Reinicia el Patrón de movimiento.
 511+ 9FDE
 512+ 9FDE CC E3 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FE1
 514+ 9FE1 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FE2
 516+ 9FE2 C9               ret
 517+ 9FE3
 518+ 9FE3
 519+ 9FE3              ; ---------- --------- --------- ---------- ----------
 520+ 9FE3              ;
 521+ 9FE3              ;   24/07/23
 522+ 9FE3              ;
 523+ 9FE3              ;   Inicializa_Puntero_indice_mov
 524+ 9FE3
 525+ 9FE3              Inicializa_Puntero_indice_mov
 526+ 9FE3
 527+ 9FE3              ; Existe etiqueta de bucle principal???
 528+ 9FE3
 529+ 9FE3 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FE6 24               inc h
 531+ 9FE7 25               dec h
 532+ 9FE8 28 05            jr z,2F
 533+ 9FEA
 534+ 9FEA 22 F1 88         ld (Puntero_indice_mov),hl
 535+ 9FED 18 14            jr 3F
 536+ 9FEF
 537+ 9FEF              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FEF
 539+ 9FEF 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ 9FF2 47               ld b,a
 541+ 9FF3
 542+ 9FF3 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ 9FF6 2B           1 dec hl
 544+ 9FF7 2B               dec hl
 545+ 9FF8 10 FC            djnz 1B
 546+ 9FFA 22 F1 88         ld (Puntero_indice_mov),hl
 547+ 9FFD
 548+ 9FFD AF               xor a
 549+ 9FFE 32 F7 88         ld (Incrementa_puntero),a
 550+ A001 18 06            jr 4F
 551+ A003
 552+ A003 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A006 32 F7 88         ld (Incrementa_puntero),a
 554+ A009 C9           4 ret
 555+ A00A
 556+ A00A
 557+ A00A
# file closed: Patrones_de_mov.asm
1646  A00A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A00A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A00A              ;
   3+ A00A              ;	27/10/23
   4+ A00A              ;
   5+ A00A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A00A
   7+ A00A              ;	ADC HL,SP	LD (addr),SP
   8+ A00A              ;	ADD HL,SP	LD SP,(addr)
   9+ A00A              ;	ADD IX,SP	LD SP,nn
  10+ A00A              ; 	ADD IY,SP	LD SP,HL
  11+ A00A              ;				LD SP,IX
  12+ A00A              ;	DEC SP		LD SP,IY
  13+ A00A
  14+ A00A              ;	EX (SP),HL
  15+ A00A              ;	EX (SP),IX
  16+ A00A              ;	EX (SP),IY
  17+ A00A
  18+ A00A              ;	INC SP
  19+ A00A
  20+ A00A                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E6 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 03 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F0 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 03 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 1C 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F0 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 22 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 14 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1A 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 14 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   19/10/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72ec
 129+ 72EC
 130+ 72EC              Gestiona_albumes_de_fotos
 131+ 72EC
 132+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 133+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 134+ 72EC
 135+ 72EC 3A 3D 89         ld a,(Ctrl_Semaforo)
 136+ 72EF CB 47            bit 0,a
 137+ 72F1 28 35            jr z,7F
 138+ 72F3
 139+ 72F3              ;   Álbum_2 vacío ?????
 140+ 72F3
 141+ 72F3 CB 4F            bit 1,a
 142+ 72F5 20 0A            jr nz,10F
 143+ 72F7
 144+ 72F7              ;   Álbum_1 vacío.
 145+ 72F7
 146+ 72F7              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 147+ 72F7
 148+ 72F7 3A 3C 89         ld a,(Semaforo)
 149+ 72FA CB 57            bit 2,a
 150+ 72FC 28 FE            jr z,$
 151+ 72FE
 152+ 72FE              ;! Debugggggggg (Revisar álbumes. Hay un fallo de pintado/borrado).
 153+ 72FE
 154+ 72FE              ;    ld a,(Contador_de_frames_2)
 155+ 72FE              ;    ex af,af
 156+ 72FE              ;    ld a,(Contador_de_frames)
 157+ 72FE              ;    jr $
 158+ 72FE
 159+ 72FE CD E6 73         call Album2_a_Album1
 160+ 7301
 161+ 7301              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 162+ 7301
 163+ 7301 3A 3C 89     10 ld a,(Semaforo)
 164+ 7304 CB 5F            bit 3,a
 165+ 7306 28 FE            jr z,$
 166+ 7308
 167+ 7308              ; Album_de_fotos_3 contiene un FRAME completo.
 168+ 7308              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 169+ 7308
 170+ 7308 CD BF 73         call Album3_a_Album2    ;   X-X-X-0
 171+ 730B CD 19 73         call Modifica_Stack_snapshot
 172+ 730E
 173+ 730E 21 3D 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 174+ 7311 CB 86            res 0,(hl)
 175+ 7313 CB 8E            res 1,(hl)
 176+ 7315 CB 96            res 2,(hl)
 177+ 7317
 178+ 7317 18 0F            jr 7F
 179+ 7319
 180+ 7319 2A 30 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 181+ 731C CD 80 8C     	call Extrae_address
 182+ 731F 22 1A 89     	ld (Stack_snapshot),hl
 183+ 7322 21 3C 89     	ld hl,Semaforo
 184+ 7325 CB 0E        	rrc (hl)
 185+ 7327 C9               ret
 186+ 7328
 187+ 7328              ; #############################################################3
 188+ 7328
 189+ 7328              ;   En 1er lugar limpiamos el FRAME pintado.
 190+ 7328              ;   Vaciamos Album_de_fotos.
 191+ 7328
 192+ 7328              ;   Album_de_fotos. Contiene datos ???
 193+ 7328
 194+ 7328 21 01 70     7 ld hl,Album_de_fotos+1
 195+ 732B 7E               ld a,(hl)
 196+ 732C A7               and a
 197+ 732D 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 198+ 732F
 199+ 732F              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 200+ 732F
 201+ 732F 2A 1E 89         ld hl,(End_Snapshot)
 202+ 7332 01 00 70         ld bc,Album_de_fotos
 203+ 7335 11 01 70         ld de,Album_de_fotos+1
 204+ 7338 AF               xor a
 205+ 7339 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 206+ 733A
 207+ 733A CD 0D 74         call Limpia_album
 208+ 733D
 209+ 733D 21 00 00         ld hl,0
 210+ 7340 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 211+ 7343
 212+ 7343              ; ----- ----- ----- -----
 213+ 7343
 214+ 7343              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 215+ 7343              ;   Album_de_fotos_1. Contiene un frame completo ???
 216+ 7343
 217+ 7343 3A 3C 89     3 ld a,(Semaforo)
 218+ 7346 CB 4F            bit 1,a
 219+ 7348 20 02            jr nz,4F
 220+ 734A
 221+ 734A 18 FE            jr $
 222+ 734C
 223+ 734C
 224+ 734C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 225+ 734C
 226+ 734C 21 55 70     4 ld hl,Album_de_fotos_1+1
 227+ 734F 7E               ld a,(hl)
 228+ 7350 A7               and a
 229+ 7351 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 230+ 7353
 231+ 7353              ; ----- ----- ----- -----
 232+ 7353              ; ----- ----- ----- -----
 233+ 7353
 234+ 7353              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 235+ 7353              ;   Actualiza (End_Snapshot).
 236+ 7353
 237+ 7353 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 238+ 7356 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 239+ 7359 11 00 70         ld de,Album_de_fotos        ; Destino.
 240+ 735C
 241+ 735C CD 0D 74         call Limpia_album
 242+ 735F
 243+ 735F              ;   Calculamos (End_Snapshot)
 244+ 735F
 245+ 735F A7               and a
 246+ 7360 ED 4A            adc hl,bc
 247+ 7362 22 1E 89         ld (End_Snapshot),hl
 248+ 7365
 249+ 7365              ;   Limpiamos Album_de_fotos_1.
 250+ 7365
 251+ 7365 2A 24 89         ld hl,(End_Snapshot_1)
 252+ 7368 01 54 70         ld bc,Album_de_fotos_1
 253+ 736B 11 55 70         ld de,Album_de_fotos_1+1
 254+ 736E AF               xor a
 255+ 736F 02               ld (bc),a
 256+ 7370
 257+ 7370 CD 0D 74         call Limpia_album
 258+ 7373
 259+ 7373 21 00 00         ld hl,0
 260+ 7376 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 261+ 7379
 262+ 7379              ; ----- ----- ----- -----
 263+ 7379
 264+ 7379              ;   Album_de_fotos_2. Contiene Frame completo ???
 265+ 7379
 266+ 7379 3A 3C 89     1 ld a,(Semaforo)
 267+ 737C CB 57            bit 2,a
 268+ 737E 20 15            jr nz,5F
 269+ 7380
 270+ 7380              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 271+ 7380
 272+ 7380 21 A9 70         ld hl,Album_de_fotos_2+1
 273+ 7383 7E               ld a,(hl)
 274+ 7384 A7               and a
 275+ 7385 20 06            jr nz,9F
 276+ 7387
 277+ 7387              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 278+ 7387              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 279+ 7387
 280+ 7387 18 FE            jr $
 281+ 7389
 282+ 7389 CD 1A 74         call Actualiza_punteros_de_albumes
 283+ 738C C9               ret
 284+ 738D
 285+ 738D              ;   Album_de_fotos_3 no está completo.
 286+ 738D
 287+ 738D 21 3D 89     9 ld hl,Ctrl_Semaforo
 288+ 7390 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 289+ 7392 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 290+ 7394 C9               ret
 291+ 7395
 292+ 7395 21 A9 70     5 ld hl,Album_de_fotos_2+1
 293+ 7398 7E               ld a,(hl)
 294+ 7399 A7               and a
 295+ 739A 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 296+ 739C
 297+ 739C              ; ----- ----- ----- -----
 298+ 739C              ; ----- ----- ----- -----
 299+ 739C              ; ----- ----- ----- -----
 300+ 739C
 301+ 739C              ;   Album_de_fotos_2 contiene un frame completo.
 302+ 739C              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 303+ 739C
 304+ 739C CD E6 73         call Album2_a_Album1
 305+ 739F
 306+ 739F              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 307+ 739F              ;   Album_de_fotos_3. Contiene un frame completo ???
 308+ 739F
 309+ 739F 3A 3C 89     2 ld a,(Semaforo)
 310+ 73A2 CB 5F            bit 3,a
 311+ 73A4 20 13            jr nz,6F
 312+ 73A6
 313+ 73A6              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 314+ 73A6
 315+ 73A6 21 FD 70         ld hl,Album_de_fotos_3+1
 316+ 73A9 7E               ld a,(hl)
 317+ 73AA A7               and a
 318+ 73AB 20 04            jr nz,8F
 319+ 73AD
 320+ 73AD              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 321+ 73AD              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 322+ 73AD
 323+ 73AD CD 1A 74         call Actualiza_punteros_de_albumes
 324+ 73B0 C9               ret
 325+ 73B1
 326+ 73B1              ;   Album_de_fotos_3 no está completo.
 327+ 73B1
 328+ 73B1 21 3D 89     8 ld hl,Ctrl_Semaforo
 329+ 73B4 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 330+ 73B6 CB CE            set 1,(hl)
 331+ 73B8 C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 332+ 73B9
 333+ 73B9              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 334+ 73B9
 335+ 73B9 21 FD 70     6 ld hl,Album_de_fotos_3+1
 336+ 73BC 7E               ld a,(hl)
 337+ 73BD A7               and a
 338+ 73BE C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 339+ 73BF
 340+ 73BF              ; ----- ----- ----- -----
 341+ 73BF              ; ----- ----- ----- -----
 342+ 73BF              ; ----- ----- ----- -----
 343+ 73BF
 344+ 73BF              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2 y limpiamos Album_de_fotos_3.
 345+ 73BF
 346+ 73BF 2A 2C 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 347+ 73C2 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 348+ 73C5 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 349+ 73C8
 350+ 73C8 CD 0D 74         call Limpia_album
 351+ 73CB
 352+ 73CB              ;   Actualizamos (End_Snapshot_2):
 353+ 73CB
 354+ 73CB A7               and a
 355+ 73CC ED 4A            adc hl,bc
 356+ 73CE 22 28 89         ld (End_Snapshot_2),hl
 357+ 73D1
 358+ 73D1              ;   Limpiamos Album_de_fotos_3.
 359+ 73D1
 360+ 73D1 2A 2C 89         ld hl,(End_Snapshot_3)
 361+ 73D4 01 FC 70         ld bc,Album_de_fotos_3
 362+ 73D7 11 FD 70         ld de,Album_de_fotos_3+1
 363+ 73DA AF               xor a
 364+ 73DB 02               ld (bc),a
 365+ 73DC CD 0D 74         call Limpia_album
 366+ 73DF
 367+ 73DF              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 368+ 73DF              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 369+ 73DF
 370+ 73DF 21 00 00         ld hl,0
 371+ 73E2 22 2C 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 372+ 73E5
 373+ 73E5 C9               ret
 374+ 73E6
 375+ 73E6 2A 28 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 376+ 73E9 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 377+ 73EC 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 378+ 73EF CD 0D 74         call Limpia_album
 379+ 73F2
 380+ 73F2              ;   Actualizamos (End_Snapshot_1):
 381+ 73F2
 382+ 73F2 A7               and a
 383+ 73F3 ED 4A            adc hl,bc
 384+ 73F5 22 24 89         ld (End_Snapshot_1),hl
 385+ 73F8
 386+ 73F8              ;   Limpiamos Album_de_fotos_2.
 387+ 73F8
 388+ 73F8 2A 28 89         ld hl,(End_Snapshot_2)
 389+ 73FB 01 A8 70         ld bc,Album_de_fotos_2
 390+ 73FE 11 A9 70         ld de,Album_de_fotos_2+1
 391+ 7401 AF               xor a
 392+ 7402 02               ld (bc),a
 393+ 7403 CD 0D 74         call Limpia_album
 394+ 7406 21 00 00         ld hl,0
 395+ 7409 22 28 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 396+ 740C C9               ret
 397+ 740D
 398+ 740D
 399+ 740D              ; ----------------------------------------------------
 400+ 740D              ;
 401+ 740D              ;   10/8/23
 402+ 740D              ;
 403+ 740D              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 404+ 740D              ;
 405+ 740D              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 406+ 740D              ;           BC ..... Dirección de inicio del álbum.
 407+ 740D              ;           DE ..... Dirección de inicio del álbum. +1
 408+ 740D
 409+ 740D              ;    ld hl,(End_Snapshot)
 410+ 740D              ;    ld bc,Album_de_fotos
 411+ 740D              ;    ld de,Album_de_fotos+1
 412+ 740D
 413+ 740D              ;   MODIFICA: A,HL,BC y DE.
 414+ 740D
 415+ 740D              Limpia_album
 416+ 740D D5               push de                     ; Guardo DESTINO.
 417+ 740E C5               push bc                     ; Guardo ORIGEN.
 418+ 740F ED 42            sbc hl,bc
 419+ 7411 4D               ld c,l
 420+ 7412 44               ld b,h
 421+ 7413 E1               pop hl
 422+ 7414 C5               push bc
 423+ 7415 ED B0            ldir
 424+ 7417 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 425+ 7418 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 426+ 7419 C9               ret                         ; _ a otro).
 427+ 741A
 428+ 741A              ; --------------------------------------------------------------------------------------------
 429+ 741A              ;
 430+ 741A              ;   20/10/23
 431+ 741A
 432+ 741A              ;
 433+ 741A
 434+ 741A              Actualiza_punteros_de_albumes
 435+ 741A
 436+ 741A 2A 30 89         ld hl,(Puntero_indice_album_de_fotos)
 437+ 741D 2B               dec hl
 438+ 741E 2B               dec hl
 439+ 741F 22 30 89         ld (Puntero_indice_album_de_fotos),hl
 440+ 7422
 441+ 7422 2A 34 89         ld hl,(Puntero_indice_End_Snapshot)
 442+ 7425 2B               dec hl
 443+ 7426 2B               dec hl
 444+ 7427 22 34 89         ld (Puntero_indice_End_Snapshot),hl
 445+ 742A CD 80 8C         call Extrae_address
 446+ 742D 22 38 89         ld (Puntero_de_End_Snapshot),hl
 447+ 7430
 448+ 7430 C9               ret
 449+ 7431
# file closed: Guarda_foto_registros.asm
1647  7431
1648  7431              	SAVESNA "Pruebas.sna", START
1649  7431
1650  7431
1651  7431
1652  7431
# file closed: Banco_de_pruebas.asm
