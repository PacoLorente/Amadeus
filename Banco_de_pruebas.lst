# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A0 8A     	call Frame
  15  A104
  16  A104 3A D1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E CF 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 40 50        	defw $5040                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E CF 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E C1 9C        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E CD 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E C3 9C        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 99 88        	defw Nivel_2
   7+ 8884 A6 88        	defw Nivel_3
   8+ 8886 B6 88        	defw Nivel_4
   9+ 8888 C8 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 888F 01 02 03 04  	db 1,2,3,4,5
  19+ 8893 05
  20+ 8894 01 02 03 04  	db 1,2,3,4,5
  20+ 8898 05
  21+ 8899 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 889A 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 889E 01 02
  23+ 88A0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88A4 01 02
  24+ 88A6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88A7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88AB 01
  26+ 88AC 03 01 01 01  	db 3,1,1,1,1
  26+ 88B0 01
  27+ 88B1 03 01 01 01  	db 3,1,1,1,1
  27+ 88B5 01
  28+ 88B6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88B7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88BB 01
  30+ 88BC 04 01 01 01  	db 4,1,1,1,1
  30+ 88C0 01
  31+ 88C1 04 01 01 01  	db 4,1,1,1,1
  31+ 88C5 01
  32+ 88C6 02 03        	db 2,3
  33+ 88C8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88C9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88CD 01
  35+ 88CE 05 01 01 01  	db 5,1,1,1,1
  35+ 88D2 01
  36+ 88D3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88D7 01
  37+ 88D8 05 01 01 01  	db 5,1,1,1,1
  37+ 88DC 01
  38+ 88DD
  39+ 88DD              ;---------------------------------------------------------------------------------------------------------------
  40+ 88DD              ;
  41+ 88DD              ;   21/5/23
  42+ 88DD              ;
  43+ 88DD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88DD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88DD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88DD              ;	_en la caja DRAW correspondiente.
  47+ 88DD              ;
  48+ 88DD              ;	MODIFICA: HL,DE y A.
  49+ 88DD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88DD
  51+ 88DD              Inicializa_Punteros_de_nivel
  52+ 88DD
  53+ 88DD 21 80 88     	ld hl,Indice_de_niveles
  54+ 88E0 22 07 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88E3 CD FA 8C     	call Extrae_address
  56+ 88E6 7E           	ld a,(hl)
  57+ 88E7 32 DA 89     	ld (Numero_de_entidades),a
  58+ 88EA 23           	inc hl
  59+ 88EB 22 09 8A     	ld (Datos_de_nivel),hl
  60+ 88EE C9           	ret
  61+ 88EF
  62+ 88EF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88EF              ;
  64+ 88EF              ;   13/5/23
  65+ 88EF              ;
  66+ 88EF              ;	Destruye A,BC,HL,DE
  67+ 88EF
  68+ 88EF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88EF              ;	_del juego.
  70+ 88EF
  71+ 88EF              Prepara_cajas
  72+ 88EF
  73+ 88EF              ; Preparamos los punteros de las cajas.
  74+ 88EF
  75+ 88EF 21 64 85     	ld hl,Indice_de_cajas
  76+ 88F2 CD FA 8C     	call Extrae_address
  77+ 88F5 CD 32 89     	call Avanza_caja
  78+ 88F8
  79+ 88F8 CD 76 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88FB
  81+ 88FB 2A 09 8A     	ld hl,(Datos_de_nivel)
  82+ 88FE
  83+ 88FE              ; HL está en los datos del nivel correspondiente.
  84+ 88FE              ; B actuará como contador de cajas.
  85+ 88FE
  86+ 88FE C5           1 push bc
  87+ 88FF
  88+ 88FF 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8900 CD 23 89     	call PreparaBC
  90+ 8903
  91+ 8903 21 26 88     	ld hl,Indice_de_entidades
  92+ 8906 CD 2B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8909 22 E0 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 890C
  95+ 890C CD 3C 89     	call Datos_de_entidad_a_caja
  96+ 890F
  97+ 890F 2A D8 89     	ld hl,(Indice_restore_caja)
  98+ 8912 CD FA 8C     	call Extrae_address
  99+ 8915 CD 32 89     	call Avanza_caja
 100+ 8918
 101+ 8918 2A 09 8A     	ld hl,(Datos_de_nivel)
 102+ 891B 23           	inc hl
 103+ 891C 22 09 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 891F
 105+ 891F C1           	pop bc
 106+ 8920 10 DC        	djnz 1B
 107+ 8922 C9           	ret
 108+ 8923
 109+ 8923 CB 27        PreparaBC sla a
 110+ 8925 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8927 4F           	ld c,a
 112+ 8928 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 892A C9           	ret
 114+ 892B
 115+ 892B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 892C ED 4A        	adc hl,bc
 117+ 892E CD FA 8C     	call Extrae_address
 118+ 8931 C9           	ret
 119+ 8932
 120+ 8932 22 D4 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8935 13           	inc de
 122+ 8936 13           	inc de
 123+ 8937 EB           	ex de,hl
 124+ 8938 22 D8 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 893B C9           	ret
 126+ 893C
 127+ 893C              Datos_de_entidad_a_caja
 128+ 893C
 129+ 893C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 893C
 131+ 893C
 132+ 893C ED 5B D4 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8940
 134+ 8940 01 02 00     	ld bc,2
 135+ 8943 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8945
 137+ 8945 01 07 00     	ld bc,7
 138+ 8948 CD 70 89     	call Situa_DE
 139+ 894B
 140+ 894B 01 05 00     	ld bc,5
 141+ 894E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8950
 143+ 8950 01 04 00     	ld bc,4
 144+ 8953 CD 70 89     	call Situa_DE
 145+ 8956
 146+ 8956 01 07 00     	ld bc,7
 147+ 8959 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 895B
 149+ 895B 01 18 00     	ld bc,24
 150+ 895E CD 70 89     	call Situa_DE
 151+ 8961
 152+ 8961 01 02 00     	ld bc,2
 153+ 8964 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8966
 155+ 8966 01 0A 00     	ld bc,10
 156+ 8969 CD 70 89     	call Situa_DE
 157+ 896C
 158+ 896C 3E 03        	ld a,3
 159+ 896E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 896F
 161+ 896F C9           	ret
 162+ 8970
 163+ 8970 EB           Situa_DE ex de,hl
 164+ 8971 A7           	and a
 165+ 8972 ED 4A        	adc hl,bc
 166+ 8974 EB           	ex de,hl
 167+ 8975 C9           	ret
 168+ 8976
 169+ 8976              ;---------------------------------------------------------------------------------------------------------------
 170+ 8976              ;
 171+ 8976              ;	21/5/23
 172+ 8976              ;
 173+ 8976              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8976              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8976              ;
 176+ 8976              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8976              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8976              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8976              ;
 180+ 8976              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8976              ;	MODIFICA: A y B.
 182+ 8976              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8976
 184+ 8976              Admin_num_entidades
 185+ 8976
 186+ 8976              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8976
 188+ 8976 3A DA 89     	ld a,(Numero_de_entidades)
 189+ 8979 A7           	and a
 190+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 897A              ;	jr z,$
 192+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 897A
 194+ 897A 20 03        	jr nz,3F
 195+ 897C
 196+ 897C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 897C
 198+ 897C CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 897F
 200+ 897F
 201+ 897F 3A DA 89     3 ld a,(Numero_de_entidades)
 202+ 8982 FE 0A        	cp 10
 203+ 8984 38 08        	jr c,1F
 204+ 8986
 205+ 8986              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8986              ; Actualizamos variables.
 207+ 8986
 208+ 8986 3E 0A        	ld a,10
 209+ 8988 32 DB 89     	ld (Numero_parcial_de_entidades),a
 210+ 898B 47           	ld b,a
 211+ 898C 18 04        	jr 2F
 212+ 898E
 213+ 898E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 898E              ; (Numero_de_entidades)="0".
 215+ 898E
 216+ 898E 32 DB 89     1 ld (Numero_parcial_de_entidades),a
 217+ 8991 47           	ld b,a
 218+ 8992 C9           2 ret
# file closed: Niveles.asm
  25  8993
  26  8993              ; ******************************************************************************************************************************************************************************************
  27  8993              ; Constantes.
  28  8993              ; ******************************************************************************************************************************************************************************************
  29  8993              ;
  30  8993              ; 25/05/23
  31  8993              ;
  32  8993              ; Constantes generales.
  33  8993              ;
  34  8993
  35  8993              Sprite_vacio equ $f000
  36  8993              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  8993              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  8993              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  8993              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  8993
  41  8993              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  8993              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  8993              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  8993              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  8993              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  8993              ;                               				        ; De momento situamos este almacén en $7060.
  47  8993
  48  8993              ; ******************************************************************************************************************************************************************************************
  49  8993              ; Variables.
  50  8993              ; ******************************************************************************************************************************************************************************************
  51  8993              ;
  52  8993              ; 30/05/23
  53  8993              ;
  54  8993              ; Variables de DRAW. (Motor principal).
  55  8993              ;
  56  8993              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  8993
  58  8993 00           Filas db 0												; Filas. [DRAW]
  59  8994 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  8995 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8997 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8999 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  899A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  899B
  65  899B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  899B
  67  899B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  899C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  899C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  899C 00           Attr db 0												; Atributos de la entidad:
  71  899D
  72  899D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  899D              ;
  74  899D              ;	COLORES: 0 ..... NEGRO
  75  899D              ;    		 1 ..... AZUL
  76  899D              ; 			 2 ..... ROJO
  77  899D              ;			 3 ..... MAGENTA
  78  899D              ; 			 4 ..... VERDE
  79  899D              ; 			 5 ..... CIAN
  80  899D              ;			 6 ..... AMARILLO
  81  899D              ; 			 7 ..... BLANCO
  82  899D
  83  899D 00 00        Indice_Sprite_der defw 0
  84  899F 00 00        Indice_Sprite_izq defw 0
  85  89A1 00 00        Puntero_DESPLZ_der defw 0
  86  89A3 00 00        Puntero_DESPLZ_izq defw 0
  87  89A5
  88  89A5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89A7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89A8
  91  89A8              ; Variables de objeto. (Características).
  92  89A8
  93  89A8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89AA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89AB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89AC
  98  89AC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89AD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89AD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89AD
 102  89AD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89AF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89B1 00 00        	defw 0
 105  89B3 00 00 00 00  	db 0,0,0,0
 106  89B7
 107  89B7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B9 00 00        	defw 0
 109  89BB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89BD 00 00 00 00  	db 0,0,0,0
 111  89C1
 112  89C1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89C1
 114  89C1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89C2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89C2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89C2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89C2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89C2              ;
 120  89C2              ; 														DESCRIPCIÖN:
 121  89C2              ;
 122  89C2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89C2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89C2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89C2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89C2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89C2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89C2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89C2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89C2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89C2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89C2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89C2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89C2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89C2              ;
 136  89C2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89C2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89C2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89C2
 140  89C2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89C3
 142  89C3              ; Movimiento.
 143  89C3
 144  89C3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89C6 00 00        Puntero_mov defw 0
 147  89C8 00           Contador_db_mov db 0
 148  89C9 00           Incrementa_puntero db 0
 149  89CA 00           Repetimos_db db 0
 150  89CB
 151  89CB              ; Variables de funcionamiento. [DRAW].
 152  89CB
 153  89CB 00           Columnas db 0
 154  89CC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89CE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89CE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89CF
 158  89CF              ; variables de control general.
 159  89CF
 160  89CF 00           Ctrl_2 db 0
 161  89D0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89D0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89D0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89D0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89D0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89D0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89D0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89D0              ;
 169  89D0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89D0
 171  89D0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89D1
 173  89D1              ; 62 Bytes por entidad.
 174  89D1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89D1              ;					         		---------;      ;---------
 176  89D1
 177  89D1
 178  89D1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89D1
 180  89D1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89D2
 182  89D2              ;														DESCRIPCIÓN:
 183  89D2              ;
 184  89D2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89D2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89D2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89D2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89D2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89D2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89D2              ;														BIT 3, Recarga de nueva oleada.
 191  89D2              ;														BIT 4, Recarga de nueva oleada.
 192  89D2
 193  89D2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89D4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89D4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89D4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89D4
 198  89D4
 199  89D4
 200  89D4              ; Gestión de ENTIDADES y CAJAS.
 201  89D4
 202  89D4              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89D4 00 00        Puntero_store_caja defw 0
 204  89D6 00 00        Puntero_restore_caja defw 0
 205  89D8 00 00        Indice_restore_caja defw 0
 206  89DA 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89DB 00           Numero_parcial_de_entidades db 0
 208  89DC 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89DD 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89DE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89DE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89DE              ;														; _ (Numero_de_malotes)="0".
 213  89DE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89E0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89E2              ;														; _ puntero (Indice_entidades).
 216  89E2
 217  89E2
 218  89E2              ;---------------------------------------------------------------------------------------------------------------
 219  89E2              ;
 220  89E2              ; Sirven para PINTAR.
 221  89E2
 222  89E2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89E4              ;														; _variable para almacenar lo posición del puntero_
 224  89E4              ; 														; _de pila, SP.
 225  89E4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89E6              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89E6 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89E8              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89E8              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89E8 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89EA              ;														; _el snapshot de los registros del siguiente disparo.
 232  89EA              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89EA
 234  89EA              ;---------------------------------------------------------------------------------------------------------------
 235  89EA
 236  89EA              ; Gestión de Disparos.
 237  89EA
 238  89EA 00           Numero_de_disparotes db 0
 239  89EB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89ED 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89EF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89F0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89F0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89F0 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89F2              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89F2              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89F2              ;														; _produzca colisión.
 248  89F2 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89F4              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89F4 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89F7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89F7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89FA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89FA              ;---------------------------------------------------------------------------------------------------------------
 255  89FA
 256  89FA              ; Relojes y temporizaciones.
 257  89FA
 258  89FA 00           Contador_de_frames db 0
 259  89FB 00           Secundero db 0
 260  89FC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 261  89FD              ;														; Repite la oleada de entidades.
 262  89FD 01           Habilita_disparo_Amadeus db 1
 263  89FE 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 264  89FF 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 265  8A00
 266  8A00 01           Habilita_disparo_entidad db 1
 267  8A01 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 268  8A02 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 269  8A03
 270  8A03              ;---------------------------------------------------------------------------------------------------------------
 271  8A03
 272  8A03              ; Gestión de FRAMES.
 273  8A03
 274  8A03 00           Switch db 0
 275  8A04
 276  8A04              ; Variables de Raster y localización en pantalla.
 277  8A04
 278  8A04 00 FF        Temp_Raster defw $ff00
 279  8A06
 280  8A06              ;---------------------------------------------------------------------------------------------------------------
 281  8A06
 282  8A06              ; Gestión de NIVELES.
 283  8A06
 284  8A06 00           Nivel db 0												 ; Nivel actual del juego.
 285  8A07 00 00        Puntero_indice_NIVELES defw 0
 286  8A09 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 287  8A0B              ; 														 ; _ que definen el NIVEL.
 288  8A0B
 289  8A0B
 290  8A0B              ; Y todo comienza aquí .....
 291  8A0B              ;
 292  8A0B              ; Rutina principal *************************************************************************************************************************************************************************
 293  8A0B              ;
 294  8A0B              ;	14/11/22
 295  8A0B
 296  8A0B              START
 297  8A0B
 298  8A0B 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 299  8A0E 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 300  8A10 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 301  8A12 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 302  8A14 F3           	DI
 303  8A15
 304  8A15 3E 07        	ld a,%00000111
 305  8A17 CD A3 98     	call Cls
 306  8A1A
 307  8A1A              ;	call Pinta_marco
 308  8A1A
 309  8A1A CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 310  8A1D CD D3 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 311  8A20
 312  8A20 CD EF 88     4 call Prepara_cajas
 313  8A23
 314  8A23 CD A6 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 315  8A26              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 316  8A26 CD 83 8D     	call Restore_entidad
 317  8A29
 318  8A29 21 DB 89     	ld hl,Numero_parcial_de_entidades
 319  8A2C 46           	ld b,(hl)
 320  8A2D 04           	inc b
 321  8A2E 05           	dec b
 322  8A2F 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 323  8A31
 324  8A31              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 325  8A31              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 326  8A31              ;	Pintamos el resto de entidades:
 327  8A31
 328  8A31              ;	INICIA ENTIDADES !!!!!
 329  8A31
 330  8A31 C5           1 push bc  												; Guardo el contador de entidades.
 331  8A32 CD 00 8D     	call Inicia_Puntero_objeto
 332  8A35 CD B7 98     	call Recompone_posicion_inicio
 333  8A38 CD F3 92     	call Draw
 334  8A3B CD A0 7F     	call Guarda_foto_registros
 335  8A3E CD 48 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 336  8A41 C1           	pop bc
 337  8A42 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 338  8A44
 339  8A44              ;	call Pinta_marco
 340  8A44
 341  8A44              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 342  8A44
 343  8A44 3A D1 89     	ld a,(Ctrl_1)
 344  8A47 CB 5F        	bit 3,a
 345  8A49 20 18        	jr nz,5F											; Loop
 346  8A4B
 347  8A4B              ; 	INICIA AMADEUS !!!!!
 348  8A4B
 349  8A4B CD AA 8D     3 call Restore_Amadeus
 350  8A4E CD 00 8D     	call Inicia_Puntero_objeto
 351  8A51 CD F3 92     	call Draw
 352  8A54 CD A0 7F     	call Guarda_foto_registros
 353  8A57 11 7C 85     	ld de,Amadeus_db
 354  8A5A CD BC 8D     	call Store_Amadeus
 355  8A5D
 356  8A5D              ; 	INICIA DISPAROS !!!!!
 357  8A5D
 358  8A5D CD BC 8C     	call Inicia_Puntero_Disparo_Entidades
 359  8A60 CD C3 8C     	call Inicia_Puntero_Disparo_Amadeus
 360  8A63
 361  8A63              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 362  8A63
 363  8A63 CD A6 8C     5 call Inicia_punteros_de_cajas
 364  8A66 CD 83 8D     	call Restore_entidad
 365  8A69
 366  8A69 3A D1 89     	ld a,(Ctrl_1)
 367  8A6C CB 5F        	bit 3,a
 368  8A6E 28 0A        	jr z,6F
 369  8A70
 370  8A70              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 371  8A70
 372  8A70 21 D1 89     	ld hl,Ctrl_1
 373  8A73 CB 9E        	res 3,(hl)
 374  8A75 CD CA 8C     	call Calcula_numero_de_malotes
 375  8A78 18 07        	jr 7F
 376  8A7A
 377  8A7A              ; ----------
 378  8A7A
 379  8A7A 3A DB 89     6 ld a,(Numero_parcial_de_entidades)
 380  8A7D 3C           	inc a
 381  8A7E 32 DD 89     	ld (Numero_de_malotes),a
 382  8A81
 383  8A81 AF           7 xor a
 384  8A82 FB           2 ei
 385  8A83 28 FD        	jr z,2B
 386  8A85
 387  8A85 3A FB 89     	ld a,(Secundero)
 388  8A88 47           	ld b,a
 389  8A89 3A FC 89     	ld a,(Activa_recarga_cajas)
 390  8A8C B8           	cp b
 391  8A8D 28 08        	jr z,8F
 392  8A8F
 393  8A8F 21 D1 89     	ld hl,Ctrl_1
 394  8A92 CB E6        	set 4,(hl)
 395  8A94 AF           	xor a
 396  8A95 18 EB        	jr 2B
 397  8A97
 398  8A97 21 D1 89     8 ld hl,Ctrl_1
 399  8A9A CB A6        	res 4,(hl)
 400  8A9C F3           	di
 401  8A9D
 402  8A9D C3 20 8A     	jp 4B
 403  8AA0
 404  8AA0              ; -----------------------------------------------------------------------------------
 405  8AA0
 406  8AA0              Frame
 407  8AA0
 408  8AA0              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 409  8AA0              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 410  8AA0
 411  8AA0              ; PINTAMOS.
 412  8AA0
 413  8AA0 3E 02            ld a,2
 414  8AA2 D3 FE            out ($fe),a
 415  8AA4 CD F7 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 416  8AA7 CD 30 96     	call Extrae_foto_disparos
 417  8AAA 3E 01            ld a,1
 418  8AAC D3 FE            out ($fe),a
 419  8AAE
 420  8AAE
 421  8AAE              ;    jr $
 422  8AAE
 423  8AAE              ; ----------------------------------------------------------------------
 424  8AAE
 425  8AAE              ; RELOJES.
 426  8AAE
 427  8AAE 21 FA 89     	ld hl,Contador_de_frames
 428  8AB1 34           	inc (hl)											; 0 - 255
 429  8AB2
 430  8AB2 3E 3C        	ld a,60
 431  8AB4 BE           	cp (hl)
 432  8AB5 20 22        	jr nz,13F
 433  8AB7
 434  8AB7 36 00        	ld (hl),0
 435  8AB9
 436  8AB9 21 FB 89     	ld hl,Secundero
 437  8ABC 34           	inc (hl)
 438  8ABD
 439  8ABD 7E           	ld a,(hl)
 440  8ABE E6 01        	and %00000001
 441  8AC0 20 10        	jr nz,20F
 442  8AC2
 443  8AC2 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 444  8AC5 47           	ld b,a
 445  8AC6 3A DC 89     	ld a,(Entidades_en_curso)
 446  8AC9 B8           	cp b
 447  8ACA 28 06        	jr z,20F
 448  8ACC 30 04        	jr nc,20F
 449  8ACE
 450  8ACE 3C           	inc a
 451  8ACF 32 DC 89     	ld (Entidades_en_curso),a
 452  8AD2
 453  8AD2 3E 3C        20 ld a,60
 454  8AD4 BE           	cp (hl)
 455  8AD5 20 02        	jr nz,13F
 456  8AD7
 457  8AD7 36 00        	ld (hl),0
 458  8AD9
 459  8AD9 21 FD 89     13 ld hl,Habilita_disparo_Amadeus
 460  8ADC 11 FF 89     	ld de,Temporiza_disparo_Amadeus
 461  8ADF CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 462  8AE2
 463  8AE2 21 00 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 464  8AE5 11 02 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 465  8AE8 CD D5 7F     	call Habilita_disparos
 466  8AEB
 467  8AEB              ; COLISIONES.
 468  8AEB
 469  8AEB CD E5 91     	call Selector_de_impactos
 470  8AEE
 471  8AEE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 472  8AEE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 473  8AEE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 474  8AEE
 475  8AEE AF           	xor a
 476  8AEF 32 EF 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 477  8AF2
 478  8AF2 CD A6 8C     	call Inicia_punteros_de_cajas
 479  8AF5 CD 83 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 480  8AF8              ; 														; _ en DRAW.
 481  8AF8 3A 93 89     	ld a,(Filas)
 482  8AFB A7           	and a
 483  8AFC 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 484  8AFE CD 95 8D     	call Incrementa_punteros_de_cajas
 485  8B01 18 F2        	jr 12B
 486  8B03
 487  8B03              ; ---------------------------------------------------------------------------------------
 488  8B03
 489  8B03 CD 63 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 490  8B06 21 00 70     	ld hl,Album_de_fotos
 491  8B09 22 E6 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 492  8B0C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 493  8B0C 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 494  8B0F 47               ld b,a
 495  8B10 A7           	and a
 496  8B11 20 17        	jr nz,2F
 497  8B13
 498  8B13 21 D1 89     	ld hl,Ctrl_1
 499  8B16 CB 66        	bit 4,(hl)
 500  8B18 C2 A6 8B     	jp nz,4F
 501  8B1B
 502  8B1B 21 D1 89     	ld hl,Ctrl_1
 503  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 504  8B20 3A FB 89     	ld a,(Secundero)
 505  8B23 3C           	inc a
 506  8B24 32 FC 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 507  8B27
 508  8B27 C3 A6 8B     	jp 4F
 509  8B2A
 510  8B2A              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 511  8B2A
 512  8B2A 3A DC 89     2 ld a,(Entidades_en_curso)
 513  8B2D A7           	and a
 514  8B2E 28 76        	jr z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 515  8B30 47           	ld b,a												; Entidades en curso en B.
 516  8B31
 517  8B31              ; Código que ejecutamos con cada entidad:
 518  8B31              ; Impacto ???
 519  8B31
 520  8B31 C5           15 push bc 												; Nº de entidades en curso.
 521  8B32
 522  8B32 3A AC 89     	ld a,(Impacto)
 523  8B35 A7           	and a
 524  8B36 28 25        	jr z,8F
 525  8B38
 526  8B38              ; Hay Impacto en esta entidad.
 527  8B38
 528  8B38 CD 5D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 529  8B3B
 530  8B3B              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 531  8B3B
 532  8B3B 3A CF 89     	ld a,(Ctrl_2)
 533  8B3E CB 4F        	bit 1,a
 534  8B40 20 38        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 535  8B42
 536  8B42 3A 9B 89     	ld a,(CTRL_DESPLZ)
 537  8B45 A7           	and a
 538  8B46 20 08        	jr nz,21F
 539  8B48
 540  8B48 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 541  8B4B 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 542  8B4E 18 06        	jr 22F
 543  8B50
 544  8B50 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 545  8B53 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 546  8B56
 547  8B56 21 CF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 548  8B59 CB CE        	set 1,(hl)
 549  8B5B 18 1D        	jr 7F
 550  8B5D
 551  8B5D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 552  8B5D              ; _con las coordenadas de la entidad almacenada en DRAW.
 553  8B5D
 554  8B5D 3A D1 89     8 ld a,(Ctrl_1)
 555  8B60 CB 57        	bit 2,a
 556  8B62 28 16        	jr z,7F
 557  8B64
 558  8B64 2A F2 89     	ld hl,(Coordenadas_disparo_certero)
 559  8B67 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 560  8B68              ;														; E contiene la coordenada_X del disparo.
 561  8B68 2A 99 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 562  8B6B              ;														; H FILA, (Coordenada_y de la entidad).
 563  8B6B A7           	and a
 564  8B6C ED 52        	sbc hl,de
 565  8B6E
 566  8B6E CD 1C 92     	call Determina_resultado_comparativa
 567  8B71
 568  8B71              ;! Debug colisiones
 569  8B71 78           	ld a,b
 570  8B72 A7           	and a
 571  8B73              ;	ld a,(Cuad_objeto)
 572  8B73              ;	inc b
 573  8B73              ;	dec b
 574  8B73 28 05        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 575  8B75              ;	jr z,$
 576  8B75
 577  8B75              ;! Debug colisiones
 578  8B75
 579  8B75              ; ----- ----- -----
 580  8B75
 581  8B75 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 582  8B77 32 AC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 583  8B7A
 584  8B7A              ;	ld hl,Ctrl_1
 585  8B7A              ;	res 2,(hl)
 586  8B7A
 587  8B7A              ; Limpiamos las coordenadas del disparo asesino. Ya tenemos víctima.
 588  8B7A
 589  8B7A              ;	ld hl,Coordenadas_disparo_certero
 590  8B7A              ;	ld (hl),0
 591  8B7A              ;	inc hl
 592  8B7A              ;	ld (hl),0
 593  8B7A
 594  8B7A CD D9 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 595  8B7D
 596  8B7D 3A C1 89     	ld a,(Ctrl_0)
 597  8B80 CB 67        	bit 4,a
 598  8B82 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 599  8B84
 600  8B84              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 601  8B84              ; [[[
 602  8B84 CD 1E 8E     	call Detecta_disparo_entidad
 603  8B87              ; ]]]
 604  8B87 CD 6D 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 605  8B8A
 606  8B8A 21 C1 89     	ld hl,Ctrl_0
 607  8B8D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 608  8B8F AF           	xor a
 609  8B90 32 C2 89     	ld (Obj_dibujado),a
 610  8B93
 611  8B93 CD 48 8D     6 call Store_Restore_cajas
 612  8B96
 613  8B96 C1           	pop bc
 614  8B97 10 98        	djnz 15B
 615  8B99
 616  8B99              ; ------------------------------------
 617  8B99
 618  8B99              ; Hemos gestionado todas las unidades.
 619  8B99              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 620  8B99
 621  8B99 21 D1 89     	ld hl,Ctrl_1
 622  8B9C CB 96        	res 2,(hl)
 623  8B9E
 624  8B9E              ; Limpiamos las coordenadas del disparo asesino.
 625  8B9E
 626  8B9E 21 F2 89     	ld hl,Coordenadas_disparo_certero
 627  8BA1 36 00        	ld (hl),0
 628  8BA3 23           	inc hl
 629  8BA4 36 00        	ld (hl),0
 630  8BA6
 631  8BA6              ; ------------------------------------
 632  8BA6
 633  8BA6              ; Tras la gestión de las entidades, ... AMADEUS.
 634  8BA6
 635  8BA6 CD AA 8D     4 call Restore_Amadeus
 636  8BA9
 637  8BA9 3A AC 89     	ld a,(Impacto)
 638  8BAC A7           	and a
 639  8BAD 20 FE        	jr nz,$
 640  8BAF
 641  8BAF CD 3E 8C     	call Mov_Amadeus
 642  8BB2
 643  8BB2 3A C1 89     	ld a,(Ctrl_0)
 644  8BB5 CB 67        	bit 4,a
 645  8BB7 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 646  8BB9
 647  8BB9 CD 6D 8C     	call Guarda_foto_entidad_a_pintar
 648  8BBC
 649  8BBC 21 C1 89     3 ld hl,Ctrl_0
 650  8BBF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 651  8BC1 AF           	xor a
 652  8BC2 32 C2 89     	ld (Obj_dibujado),a
 653  8BC5
 654  8BC5 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 655  8BC8 CD BC 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 656  8BCB
 657  8BCB CD 81 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 658  8BCE
 659  8BCE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 660  8BCE
 661  8BCE CD E2 8C     	call Calcula_numero_de_disparotes
 662  8BD1 CD CA 8C     9 call Calcula_numero_de_malotes
 663  8BD4
 664  8BD4 3E 04        	ld a,4
 665  8BD6 D3 FE        	out ($fe),a
 666  8BD8
 667  8BD8 C9           	ret
 668  8BD9
 669  8BD9              ; --------------------------------------------------------------------------------------------------------------
 670  8BD9              ;
 671  8BD9              ;	27/05/23
 672  8BD9
 673  8BD9              Mov_obj
 674  8BD9
 675  8BD9              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 676  8BD9
 677  8BD9 3A CF 89     	ld a,(Ctrl_2)
 678  8BDC CB 4F        	bit 1,a
 679  8BDE 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 680  8BE0
 681  8BE0              ; Explosión:
 682  8BE0
 683  8BE0 3A D0 89     	ld a,(Frames_explosion)
 684  8BE3 A7           	and a
 685  8BE4 20 11        	jr nz,4F
 686  8BE6
 687  8BE6              ; Una alimaña menos!!!!!!!!!1
 688  8BE6
 689  8BE6 CD C5 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 690  8BE9 21 DB 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 691  8BEC 35           	dec (hl)
 692  8BED 21 DC 89     	ld hl,Entidades_en_curso
 693  8BF0 35           	dec (hl)
 694  8BF1 21 DA 89     	ld hl,Numero_de_entidades
 695  8BF4 35           	dec (hl)
 696  8BF5 18 46        	jr 3F
 697  8BF7
 698  8BF7              ; -----
 699  8BF7
 700  8BF7 2A A1 89     4 ld hl,(Puntero_DESPLZ_der)
 701  8BFA 23           	inc hl
 702  8BFB 23           	inc hl
 703  8BFC 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 704  8BFF CD FA 8C     	call Extrae_address
 705  8C02 22 97 89     	ld (Puntero_objeto),hl
 706  8C05
 707  8C05 21 D0 89     	ld hl,Frames_explosion
 708  8C08 35           	dec (hl)
 709  8C09
 710  8C09 CD 5D 8C     	call Guarda_foto_entidad_a_borrar
 711  8C0C 18 2F        	jr 3F
 712  8C0E
 713  8C0E AF           2 xor a
 714  8C0F 32 C2 89     	ld (Obj_dibujado),a
 715  8C12 32 C1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 716  8C15              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 717  8C15              ; 														; _de la entidad.
 718  8C15 CD 77 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 719  8C18              ;														; Obj_dibujado="0".
 720  8C18              ; Movemos Entidades malignas.
 721  8C18
 722  8C18 21 C4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 723  8C1B 34           	inc (hl)
 724  8C1C 35           	dec (hl)                                            ; Salimos de la rutina.
 725  8C1D C8           	ret z
 726  8C1E
 727  8C1E CD D1 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 728  8C21
 729  8C21 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 730  8C24 CB 67        	bit 4,a
 731  8C26 C8           	ret z
 732  8C27
 733  8C27              ; Ha habido desplazamiento de la entidad maligna.
 734  8C27              ; Ha llegado a zona de AMADEUS ???
 735  8C27
 736  8C27 3A 9A 89     	ld a,(Coordenada_y)
 737  8C2A FE 14        	cp $14
 738  8C2C D4 B2 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 739  8C2F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 740  8C2F              ; ---------
 741  8C2F
 742  8C2F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 743  8C31 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 744  8C34 CD 77 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 745  8C37 CD 8E 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 746  8C3A CD 5D 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 747  8C3D C9           3 ret													; _de la misma.
 748  8C3E
 749  8C3E              ; --------------------------------------------------------------------------------------------------------------
 750  8C3E              ;
 751  8C3E              ;	29/1/23
 752  8C3E
 753  8C3E              Mov_Amadeus
 754  8C3E
 755  8C3E AF           	xor a
 756  8C3F 32 C2 89     	ld (Obj_dibujado),a
 757  8C42 CD 77 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 758  8C45              ;														; Obj_dibujado="0".
 759  8C45              ; Movemos Amadeus.
 760  8C45
 761  8C45 CD E7 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 762  8C48 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 763  8C4B CB 67        	bit 4,a
 764  8C4D C8           	ret z
 765  8C4E
 766  8C4E              ; ---------
 767  8C4E
 768  8C4E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 769  8C50 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 770  8C53 CD 77 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 771  8C56 CD 8E 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 772  8C59 CD 5D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 773  8C5C C9           	ret													; _de la nave.
 774  8C5D
 775  8C5D              ; --------------------------------------------------------------------------------------------------------------
 776  8C5D              ;
 777  8C5D              ;	31/01/23
 778  8C5D              ;
 779  8C5D              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 780  8C5D
 781  8C5D              Guarda_foto_entidad_a_borrar
 782  8C5D
 783  8C5D CD CD 95     	call Prepara_draw
 784  8C60 CD 07 95     	call calcula_CColumnass
 785  8C63 CD 3E 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 786  8C66 CD 93 95     	call Define_rutina_de_impresion
 787  8C69 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 788  8C6C C9           	ret
 789  8C6D
 790  8C6D              ; --------------------------------------------------------------------------------------------------------------
 791  8C6D              ;
 792  8C6D              ;	31/01/23
 793  8C6D              ;
 794  8C6D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 795  8C6D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 796  8C6D
 797  8C6D              Guarda_foto_entidad_a_pintar
 798  8C6D
 799  8C6D CD 9A 8C     	call Repone_pintar
 800  8C70 CD F3 92     	call Draw
 801  8C73 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 802  8C76 C9           	ret
 803  8C77
 804  8C77              ; --------------------------------------------------------------------------------------------------------------
 805  8C77              ;
 806  8C77              ;
 807  8C77
 808  8C77 21 93 89     Prepara_var_pintado_borrado	ld hl,Filas
 809  8C7A 3A C2 89     	ld a,(Obj_dibujado)
 810  8C7D A7           	and a
 811  8C7E 28 05        	jr z,1F
 812  8C80 11 B7 89     	ld de,Variables_de_pintado
 813  8C83 18 03        	jr 2F
 814  8C85 11 AD 89     1 ld de,Variables_de_borrado
 815  8C88 01 08 00     2 ld bc,8
 816  8C8B ED B0        	ldir
 817  8C8D C9           	ret
 818  8C8E
 819  8C8E              ; --------------------------------------------------------------------------------------------------------------
 820  8C8E
 821  8C8E 21 AD 89     Repone_borrar ld hl,Variables_de_borrado
 822  8C91 11 93 89     	ld de,Filas
 823  8C94 01 08 00     	ld bc,8
 824  8C97 ED B0        	ldir
 825  8C99 C9           	ret
 826  8C9A
 827  8C9A 21 B7 89     Repone_pintar ld hl,Variables_de_pintado
 828  8C9D 11 93 89     	ld de,Filas
 829  8CA0 01 08 00     	ld bc,8
 830  8CA3 ED B0        	ldir
 831  8CA5 C9           	ret
 832  8CA6
 833  8CA6              ; *************************************************************************************************************************************************************
 834  8CA6              ;
 835  8CA6              ; 8/1/23
 836  8CA6              ;
 837  8CA6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 838  8CA6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 839  8CA6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 840  8CA6
 841  8CA6              ; Destruye HL y DE !!!!!
 842  8CA6
 843  8CA6              Inicia_punteros_de_cajas
 844  8CA6
 845  8CA6 21 64 85     	ld hl,Indice_de_cajas
 846  8CA9 CD FA 8C         call Extrae_address
 847  8CAC 22 D4 89         ld (Puntero_store_caja),hl
 848  8CAF 21 66 85     	ld hl,Indice_de_cajas+2
 849  8CB2 22 D8 89     	ld (Indice_restore_caja),hl
 850  8CB5 CD FA 8C     	call Extrae_address
 851  8CB8 22 D6 89     	ld (Puntero_restore_caja),hl
 852  8CBB C9               ret
 853  8CBC
 854  8CBC              ; *************************************************************************************************************************************************************
 855  8CBC              ;
 856  8CBC              ; 8/1/23
 857  8CBC              ;
 858  8CBC              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 859  8CBC
 860  8CBC 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 861  8CBF 22 EB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 862  8CC2 C9           	ret
 863  8CC3 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 864  8CC6 22 ED 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 865  8CC9 C9           	ret
 866  8CCA
 867  8CCA              ; -------------------------------------------------------------------------------------------------------------
 868  8CCA              ;
 869  8CCA              ; 28/2/23
 870  8CCA              ;
 871  8CCA
 872  8CCA              Calcula_numero_de_malotes
 873  8CCA
 874  8CCA 21 00 70     	ld hl,Album_de_fotos
 875  8CCD EB           	ex de,hl
 876  8CCE 2A E6 89     	ld hl,(Stack_snapshot)
 877  8CD1
 878  8CD1 06 00        	ld b,0
 879  8CD3 7D           	ld a,l
 880  8CD4 93           	sub e
 881  8CD5 28 07        	jr z,1F
 882  8CD7
 883  8CD7              ; Nº de malotes no es "0".
 884  8CD7
 885  8CD7 D6 06        2 sub 6
 886  8CD9 04           	inc b
 887  8CDA A7           	and a
 888  8CDB 20 FA        	jr nz,2B
 889  8CDD 78           	ld a,b
 890  8CDE
 891  8CDE 32 DD 89     1 ld (Numero_de_malotes),a
 892  8CE1 C9           	ret
 893  8CE2
 894  8CE2              ; -------------------------------------------------------------------------------------------------------------
 895  8CE2              ;
 896  8CE2              ; 28/2/23
 897  8CE2              ;
 898  8CE2
 899  8CE2              Calcula_numero_de_disparotes
 900  8CE2
 901  8CE2 21 85 70     	ld hl,Album_de_fotos_disparos
 902  8CE5 EB           	ex de,hl
 903  8CE6 2A E8 89     	ld hl,(Stack_snapshot_disparos)
 904  8CE9
 905  8CE9 06 00        	ld b,0
 906  8CEB 7D           	ld a,l
 907  8CEC 93           	sub e
 908  8CED 28 07        	jr z,1F
 909  8CEF
 910  8CEF              ; Nº de malotes no es "0".
 911  8CEF
 912  8CEF D6 06        2 sub 6
 913  8CF1 04           	inc b
 914  8CF2 A7           	and a
 915  8CF3 20 FA        	jr nz,2B
 916  8CF5 78           	ld a,b
 917  8CF6
 918  8CF6 32 EA 89     1 ld (Numero_de_disparotes),a
 919  8CF9 C9           	ret
 920  8CFA              ; *************************************************************************************************************************************************************
 921  8CFA              ;
 922  8CFA              ; 20/10/22
 923  8CFA              ;
 924  8CFA              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 925  8CFA              ;
 926  8CFA              ; Destruye el puntero y DE !!!!!
 927  8CFA
 928  8CFA 5E           Extrae_address ld e,(hl)
 929  8CFB 23           	inc hl
 930  8CFC 56           	ld d,(hl)
 931  8CFD 2B           	dec hl
 932  8CFE EB           	ex de,hl
 933  8CFF C9           	ret
 934  8D00
 935  8D00              ; *************************************************************************************************************************************************************
 936  8D00              ;
 937  8D00              ;	7/2/23
 938  8D00              ;
 939  8D00              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 940  8D00              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 941  8D00              ;
 942  8D00              ;   Destruye HL y BC !!!!!,
 943  8D00              ;
 944  8D00              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 945  8D00              ;					"0" ..... Izquierda.
 946  8D00
 947  8D00              Inicia_Puntero_objeto
 948  8D00
 949  8D00 3A A7 89     	ld a,(Cuad_objeto)
 950  8D03 E6 01        	and 1
 951  8D05 F5           	push af
 952  8D06 CC 24 8D     	call z,Inicia_puntero_objeto_izq
 953  8D09 F1           	pop af
 954  8D0A 28 2B        	jr z,1F
 955  8D0C CD 11 8D     	call Inicia_puntero_objeto_der
 956  8D0F 18 26        	jr 1F
 957  8D11
 958  8D11              ; Arrancamos desde la parte izquierda de la pantalla.
 959  8D11              ; Iniciamos (Indice_Sprite_der).
 960  8D11
 961  8D11 2A 9D 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 962  8D14 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 963  8D17 CD FA 8C     	call Extrae_address
 964  8D1A 22 97 89     	ld (Puntero_objeto),hl
 965  8D1D
 966  8D1D 2A 9F 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 967  8D20 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 968  8D23 C9           	ret
 969  8D24
 970  8D24              ; Arrancamos desde la parte derecha de la pantalla.
 971  8D24              ; Iniciamos (Indice_Sprite_izq).
 972  8D24
 973  8D24 2A 9F 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 974  8D27 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 975  8D2A CD FA 8C     	call Extrae_address
 976  8D2D 22 97 89     	ld (Puntero_objeto),hl
 977  8D30
 978  8D30 2A 9D 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 979  8D33 22 A1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 980  8D36 C9           	ret
 981  8D37
 982  8D37              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 983  8D37
 984  8D37 21 38 83     1 ld hl,Amadeus
 985  8D3A ED 4B 97 89  	ld bc,(Puntero_objeto)
 986  8D3E B7 ED 42     	sub hl,bc
 987  8D41 C0           	ret nz
 988  8D42 21 C1 89     	ld hl,Ctrl_0
 989  8D45 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 990  8D47 C9           	ret 												; _de nuestra nave en los extremos.
 991  8D48
 992  8D48              ; *************************************************************************************************************************************************************
 993  8D48              ;
 994  8D48              ;	14/5/23
 995  8D48              ;
 996  8D48              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 997  8D48              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 998  8D48
 999  8D48              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1000  8D48              ;	_de la 2ª y 3ª entidad respectivamente.
1001  8D48
1002  8D48              Store_Restore_cajas
1003  8D48
1004  8D48 E5           	push hl
1005  8D49 D5           	push de
1006  8D4A C5            	push bc
1007  8D4B
1008  8D4B              ;	STORE !!!!!
1009  8D4B              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1010  8D4B
1011  8D4B 21 93 89     	ld hl,Filas
1012  8D4E ED 5B D4 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1013  8D52 01 3E 00     	ld bc,62
1014  8D55 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1015  8D57
1016  8D57              ; 	Entidad_sospechosa. 20/4/23
1017  8D57
1018  8D57 3A AC 89     	ld a,(Impacto)
1019  8D5A A7           	and a
1020  8D5B 28 0C        	jr z,1F
1021  8D5D
1022  8D5D 2A D4 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1023  8D60 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1024  8D63 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1025  8D64 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1026  8D66 22 F0 89     	ld (Entidad_sospechosa_de_colision),hl
1027  8D69
1028  8D69              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1029  8D69
1030  8D69 2A D6 89     1 ld hl,(Puntero_restore_caja)
1031  8D6C 7E           	ld a,(hl)
1032  8D6D A7           	and a
1033  8D6E F5           	push af
1034  8D6F 28 08        	jr z,2F
1035  8D71
1036  8D71 11 93 89     	ld de,Filas
1037  8D74 01 3E 00     	ld bc,62
1038  8D77 ED B0        	ldir
1039  8D79
1040  8D79 CD 95 8D     2 call Incrementa_punteros_de_cajas
1041  8D7C F1           	pop af
1042  8D7D 28 EA        	jr z,1B
1043  8D7F
1044  8D7F C1           	pop bc
1045  8D80 D1           	pop de
1046  8D81 E1           	pop hl
1047  8D82
1048  8D82 C9           	ret
1049  8D83
1050  8D83              ; **************************************************************************************************
1051  8D83              ;
1052  8D83              ;	12/05/23
1053  8D83              ;
1054  8D83              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1055  8D83
1056  8D83 E5           Restore_entidad push hl
1057  8D84 D5           	push de
1058  8D85 C5            	push bc
1059  8D86
1060  8D86 2A D4 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1061  8D89 11 93 89     	ld de,Filas
1062  8D8C 01 3E 00     	ld bc,62
1063  8D8F ED B0        	ldir
1064  8D91
1065  8D91 C1           	pop bc
1066  8D92 D1           	pop de
1067  8D93 E1           	pop hl
1068  8D94 C9           	ret
1069  8D95
1070  8D95
1071  8D95              ; **************************************************************************************************
1072  8D95              ;
1073  8D95              ;	08/05/23
1074  8D95              ;
1075  8D95              ;	Incrementamos los dos punteros de entidades. (+1).
1076  8D95
1077  8D95 2A D6 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1078  8D98 22 D4 89     	ld (Puntero_store_caja),hl
1079  8D9B 2A D8 89     	ld hl,(Indice_restore_caja)
1080  8D9E 23           	inc hl
1081  8D9F 23           	inc hl
1082  8DA0 22 D8 89     	ld (Indice_restore_caja),hl
1083  8DA3 CD FA 8C         call Extrae_address
1084  8DA6 22 D6 89         ld (Puntero_restore_caja),hl
1085  8DA9 C9               ret
1086  8DAA
1087  8DAA              ; **************************************************************************************************
1088  8DAA              ;
1089  8DAA              ;	25/01/23
1090  8DAA              ;
1091  8DAA              ;	Restore_Amadeus
1092  8DAA              ;
1093  8DAA              ;	Cargamos en DRAW los parámetros de Amadeus.
1094  8DAA              ;
1095  8DAA
1096  8DAA E5           Restore_Amadeus	push hl
1097  8DAB D5           	push de
1098  8DAC C5            	push bc
1099  8DAD 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1100  8DB0 11 93 89     	ld de,Filas
1101  8DB3 01 3E 00     	ld bc,62
1102  8DB6 ED B0        	ldir
1103  8DB8 C1           	pop bc
1104  8DB9 D1           	pop de
1105  8DBA E1           	pop hl
1106  8DBB C9           	ret
1107  8DBC
1108  8DBC              ; *************************************************************************************************************************************************************
1109  8DBC              ;
1110  8DBC              ;	29/04/23
1111  8DBC              ;
1112  8DBC              ;	Store_Amadeus
1113  8DBC              ;
1114  8DBC              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1115  8DBC              ;
1116  8DBC              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1117  8DBC              ;
1118  8DBC              ;	DESTRUYE: HL y BC y DE.
1119  8DBC
1120  8DBC 21 93 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1121  8DBF 01 3E 00     	ld bc,62
1122  8DC2 ED B0        	ldir
1123  8DC4 C9           	ret
1124  8DC5
1125  8DC5              ; -----------------------------------------------------------
1126  8DC5              ;
1127  8DC5              ;	27/04/23
1128  8DC5              ;
1129  8DC5              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1130  8DC5              ;
1131  8DC5              ;	Destruye: HL,BC,DE,A
1132  8DC5
1133  8DC5 21 93 89     Borra_datos_entidad ld hl,Filas
1134  8DC8 01 3D 00     	ld bc,61
1135  8DCB AF           	xor a
1136  8DCC 77           	ld (hl),a
1137  8DCD 11 94 89     	ld de,Filas+1
1138  8DD0 ED B0        	ldir
1139  8DD2 C9           	ret
1140  8DD3
1141  8DD3              ; -----------------------------------------------------------
1142  8DD3
1143  8DD3              ; Teclado.
1144  8DD3
1145  8DD3 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1146  8DD5 DB FE        	in a,($fe)
1147  8DD7 E6 01        	and $01
1148  8DD9 28 02        	jr z,1f
1149  8DDB 18 F6        	jr Pulsa_ENTER
1150  8DDD C9           1 ret
1151  8DDE
1152  8DDE              ; **************************************************************************************************
1153  8DDE              ;
1154  8DDE              ; Temporización.
1155  8DDE
1156  8DDE              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1157  8DDE              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1158  8DDE              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1159  8DDE              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1160  8DDE
1161  8DDE              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1162  8DDE              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1163  8DDE              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1164  8DDE
1165  8DDE              ; A partir de $4f61 no hace falta DELAY.
1166  8DDE
1167  8DDE              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1168  8DDE
1169  8DDE 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1170  8DE1 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1171  8DE2 78           	LD A,B
1172  8DE3 A7           	AND A
1173  8DE4 20 FB        	JR NZ,wait
1174  8DE6 C9           	RET
1175  8DE7
1176  8DE7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1177  8DE7              ;
1178  8DE7              ;	5/3/23
1179  8DE7              ;
1180  8DE7              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1181  8DE7
1182  8DE7              Movimiento_Amadeus
1183  8DE7
1184  8DE7              ; Disparo.
1185  8DE7
1186  8DE7 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1187  8DEA A7           	and a
1188  8DEB 20 02        	jr nz,1F
1189  8DED 18 15        	jr 2F
1190  8DEF
1191  8DEF 3E F7        1 ld a,$f7													; "5" para disparar.
1192  8DF1 DB FE        	in a,($fe)
1193  8DF3 E6 10        	and $10
1194  8DF5
1195  8DF5 F5           	push af
1196  8DF6 CC 2E 8E     	call z,Genera_disparo
1197  8DF9 F1           	pop af
1198  8DFA 20 08        	jr nz,2F
1199  8DFC
1200  8DFC 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1201  8DFF EE 01        	xor 1
1202  8E01 32 FD 89     	ld (Habilita_disparo_Amadeus),a
1203  8E04
1204  8E04 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1205  8E06 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1206  8E08 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1207  8E0A CC 71 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1208  8E0D 3E F7        	ld a,$f7
1209  8E0F DB FE        	in a,($fe)
1210  8E11 E6 01        	and $01
1211  8E13 C8           	ret z
1212  8E14
1213  8E14 3E F7        	ld a,$f7
1214  8E16 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1215  8E18 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1216  8E1A CC 53 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1217  8E1D C9           	ret
1218  8E1E
1219  8E1E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1220  8E1E              ;
1221  8E1E              ;	Rutina provisional para que los malotes cagen balas.
1222  8E1E
1223  8E1E              Detecta_disparo_entidad
1224  8E1E
1225  8E1E 3A 00 8A     	ld a,(Habilita_disparo_entidad)
1226  8E21 A7           	and a
1227  8E22 C8           	ret z
1228  8E23 3E 7F        	ld a,$7f
1229  8E25 DB FE        	in a,($fe)
1230  8E27 E6 01        	and 1
1231  8E29 C0           	ret nz
1232  8E2A CD 2E 8E     	call Genera_disparo
1233  8E2D C9           	ret
1234  8E2E
1235  8E2E              ; ---------------------------------------------------------------
1236  8E2E
1237  8E2E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E2E              ; ******************************************************************************************************************************************************************************************
   2+ 8E2E              ;
   3+ 8E2E              ;   17/04/23
   4+ 8E2E              ;
   5+ 8E2E              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E2E              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E2E              ;
   8+ 8E2E              ;
   9+ 8E2E              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E2E              ;
  11+ 8E2E              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E2E              ;               _ hacen las entidades hacia abajo.
  13+ 8E2E              ;
  14+ 8E2E              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E2E              ;
  16+ 8E2E              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E2E              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E2E              ;
  19+ 8E2E              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E2E              ;           _ la bala.
  21+ 8E2E              ;
  22+ 8E2E              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E2E              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E2E              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E2E              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E2E              ;           _ en el momento de generarse la bala)).
  27+ 8E2E
  28+ 8E2E              Genera_disparo
  29+ 8E2E
  30+ 8E2E              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E2E              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E2E              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E2E              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E2E              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E2E              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E2E              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E2E
  38+ 8E2E              ; Exclusiones:
  39+ 8E2E
  40+ 8E2E 3A CB 89         ld a,(Columnas)
  41+ 8E31 47               ld b,a
  42+ 8E32 3A 94 89         ld a,(Columns)
  43+ 8E35 B8               cp b
  44+ 8E36 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E37
  46+ 8E37              ; ----- ----- -----
  47+ 8E37
  48+ 8E37 3A C1 89         ld a,(Ctrl_0)
  49+ 8E3A CB 77            bit 6,a
  50+ 8E3C 20 06            jr nz,14F
  51+ 8E3E
  52+ 8E3E 3A 9A 89         ld a,(Coordenada_y)
  53+ 8E41 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E43 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E44
  56+ 8E44 21 00 80     14 ld hl,Indice_disparo
  57+ 8E47 3A 9B 89         ld a,(CTRL_DESPLZ)
  58+ 8E4A 4F               ld c,a
  59+ 8E4B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E4D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E4D              ;                                            ""        ""       "f9", B="1"
  62+ 8E4D              ;                                            ""        ""       "fb", B="2"
  63+ 8E4D              ;                                            ""        ""       "fb", B="3"
  64+ 8E4D A7               and a
  65+ 8E4E 28 10            jr z,1F
  66+ 8E50 E6 01            and 1
  67+ 8E52 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E53
  69+ 8E53 79               ld a,c
  70+ 8E54 16 F9            ld d,$f9
  71+ 8E56 23           2 inc hl
  72+ 8E57 23               inc hl
  73+ 8E58 04               inc b
  74+ 8E59 BA               cp d
  75+ 8E5A 28 04            jr z,1F
  76+ 8E5C 14               inc d
  77+ 8E5D 14               inc d
  78+ 8E5E 18 F6            jr 2B
  79+ 8E60
  80+ 8E60 CD FA 8C     1 call Extrae_address
  81+ 8E63 E5               push hl
  82+ 8E64 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E66 DD 21 6C 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E6A
  85+ 8E6A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E6A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E6A
  88+ 8E6A 3A C1 89         ld a,(Ctrl_0)
  89+ 8E6D CB 77            bit 6,a
  90+ 8E6F 20 04            jr nz,19F
  91+ 8E71
  92+ 8E71 AF               xor a
  93+ 8E72 32 00 8A         ld (Habilita_disparo_entidad),a
  94+ 8E75
  95+ 8E75 3A A7 89     19 ld a,(Cuad_objeto)
  96+ 8E78 FE 02            cp 2
  97+ 8E7A 38 66            jr c,3F
  98+ 8E7C 28 64            jr z,3F
  99+ 8E7E
 100+ 8E7E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E7E
 102+ 8E7E E6 01            and 1
 103+ 8E80 28 30            jr z,4F
 104+ 8E82
 105+ 8E82              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E82              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E82              ;
 108+ 8E82              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E82              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E82              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E82
 112+ 8E82 2A 95 89     	ld hl,(Posicion_actual)
 113+ 8E85
 114+ 8E85              ;   Amadeus o entidad ???.
 115+ 8E85
 116+ 8E85 3A C1 89         ld a,(Ctrl_0)
 117+ 8E88 CB 77            bit 6,a
 118+ 8E8A 28 0A            jr z,8F
 119+ 8E8C
 120+ 8E8C              ; 	Dispara Amadeus.
 121+ 8E8C
 122+ 8E8C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E8E CD E8 95         call PreviousScan
 124+ 8E91 CD E8 95         call PreviousScan
 125+ 8E94
 126+ 8E94              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E94              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E94              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E94              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E94
 131+ 8E94 18 11            jr 10F
 132+ 8E96
 133+ 8E96              ; 	Dispara Entidad.
 134+ 8E96
 135+ 8E96 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E99              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E99
 138+ 8E99              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E99              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E99
 141+ 8E99 C5               push bc
 142+ 8E9A 06 10            ld b,16
 143+ 8E9C CD D9 95     9 call NextScan
 144+ 8E9F 10 FB            djnz 9B
 145+ 8EA1 C1               pop bc
 146+ 8EA2 CD 0C 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EA5 18 06            jr 17F
 148+ 8EA7
 149+ 8EA7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EA7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EA7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EA7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EA7
 154+ 8EA7 CD 0C 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EAA CD 81 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EAD              ;                                                      ; _al generar el disparo.
 157+ 8EAD
 158+ 8EAD              ; 	LLegados a este punto tendremos:
 159+ 8EAD              ;
 160+ 8EAD              ;       Puntero_objeto_disparo en IY.
 161+ 8EAD              ;       Rutinas_de_impresion en IX.
 162+ 8EAD              ;       Puntero_de_impresion en HL.
 163+ 8EAD              ;       Impacto/Dirección en BC.
 164+ 8EAD
 165+ 8EAD CD 14 8F     17 call Almacena_disparo
 166+ 8EB0 18 52            jr 6F                                             ; RET.
 167+ 8EB2
 168+ 8EB2              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EB2              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EB2              ;
 171+ 8EB2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EB2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EB2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EB2
 175+ 8EB2 2A 95 89     4 ld hl,(Posicion_actual)
 176+ 8EB5
 177+ 8EB5              ;   Amadeus o entidad ???.
 178+ 8EB5
 179+ 8EB5 3A C1 89         ld a,(Ctrl_0)
 180+ 8EB8 CB 77            bit 6,a
 181+ 8EBA 28 0A            jr z,11F
 182+ 8EBC
 183+ 8EBC              ; 	Dispara Amadeus.
 184+ 8EBC
 185+ 8EBC 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EBE CD E8 95         call PreviousScan
 187+ 8EC1 CD E8 95         call PreviousScan
 188+ 8EC4
 189+ 8EC4              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EC4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EC4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EC4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EC4
 194+ 8EC4 18 11            jr 13F
 195+ 8EC6
 196+ 8EC6              ; 	Dispara Entidad.
 197+ 8EC6
 198+ 8EC6 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EC9              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EC9
 201+ 8EC9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EC9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EC9
 204+ 8EC9 C5               push bc
 205+ 8ECA 06 10            ld b,16
 206+ 8ECC CD D9 95     12 call NextScan
 207+ 8ECF 10 FB            djnz 12B
 208+ 8ED1 C1               pop bc
 209+ 8ED2
 210+ 8ED2 CD 05 8F         call Ajusta_disparo_parte_derecha
 211+ 8ED5 18 06            jr 18F
 212+ 8ED7
 213+ 8ED7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8ED7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8ED7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8ED7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8ED7
 218+ 8ED7 CD 05 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EDA CD 81 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EDD              ;                                                       ; _al generar el disparo.
 221+ 8EDD
 222+ 8EDD              ; LLegados a este punto tendremos:
 223+ 8EDD              ;
 224+ 8EDD              ;       Puntero_objeto_disparo en IY.
 225+ 8EDD              ;       Rutinas_de_impresion en IX.
 226+ 8EDD              ;       Puntero_de_impresion en HL.
 227+ 8EDD              ;       Impacto/Dirección en BC.
 228+ 8EDD
 229+ 8EDD CD 14 8F     18 call Almacena_disparo
 230+ 8EE0 18 22            jr 6F                                               ; RET.
 231+ 8EE2
 232+ 8EE2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EE2
 234+ 8EE2 28 11        3 jr z,5F
 235+ 8EE4
 236+ 8EE4              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EE4              ;
 238+ 8EE4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EE4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EE4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EE4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EE4
 243+ 8EE4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EE4              ;	   ""        ""       "f9", B="1"
 245+ 8EE4              ;	   ""        ""       "fb", B="2"
 246+ 8EE4              ; 	   ""        ""       "fb", B="3"
 247+ 8EE4
 248+ 8EE4 2A 95 89     	ld hl,(Posicion_actual)
 249+ 8EE7 CD D9 95     	call NextScan
 250+ 8EEA
 251+ 8EEA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EEA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EEA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EEA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EEA
 256+ 8EEA CD 0C 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EED
 258+ 8EED              ; 	No se produce impacto. B="$80"
 259+ 8EED              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EED
 261+ 8EED 01 80 80         ld bc,$8080
 262+ 8EF0
 263+ 8EF0              ; 	LLegados a este punto tendremos:
 264+ 8EF0              ;
 265+ 8EF0              ;       Puntero_objeto_disparo en IY.
 266+ 8EF0              ;       Rutinas_de_impresion en IX.
 267+ 8EF0              ;       Puntero_de_impresion en HL.
 268+ 8EF0              ;       Impacto/Dirección en BC.
 269+ 8EF0
 270+ 8EF0 CD 14 8F         call Almacena_disparo
 271+ 8EF3 18 0F            jr 6F                                           ; RET.
 272+ 8EF5
 273+ 8EF5              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EF5              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EF5              ;
 276+ 8EF5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EF5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EF5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EF5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EF5
 281+ 8EF5 2A 95 89     5 ld hl,(Posicion_actual)
 282+ 8EF8 CD D9 95     	call NextScan
 283+ 8EFB
 284+ 8EFB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EFB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EFB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EFB
 289+ 8EFB CD 05 8F         call Ajusta_disparo_parte_derecha
 290+ 8EFE
 291+ 8EFE              ; 	No se produce impacto. B="$80"
 292+ 8EFE              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EFE
 294+ 8EFE 01 80 80     15 ld bc,$8080
 295+ 8F01
 296+ 8F01              ; 	LLegados a este punto tendremos:
 297+ 8F01              ;
 298+ 8F01              ;       Puntero_objeto_disparo en IY.
 299+ 8F01              ;       Rutinas_de_impresion en IX.
 300+ 8F01              ;       Puntero_de_impresion en HL.
 301+ 8F01              ;       Impacto/Dirección en BC.
 302+ 8F01
 303+ 8F01 CD 14 8F         call Almacena_disparo
 304+ 8F04
 305+ 8F04 C9           6 ret
 306+ 8F05
 307+ 8F05              ; ----------------------------------------------------------------
 308+ 8F05              ;
 309+ 8F05              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F05              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F05              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F05
 313+ 8F05 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F06 FE 02            cp 2
 315+ 8F08 38 01            jr c,1F
 316+ 8F0A 23               inc hl
 317+ 8F0B C9           1 ret
 318+ 8F0C
 319+ 8F0C 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F0D FE 01        	cp 1
 321+ 8F0F 20 01        	jr nz,1F
 322+ 8F11 2B           	dec hl
 323+ 8F12 2B           1 dec hl
 324+ 8F13 C9               ret
 325+ 8F14
 326+ 8F14              ; ----------------------------------------------------------------
 327+ 8F14              ;
 328+ 8F14              ;   25/02/23
 329+ 8F14              ;
 330+ 8F14              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F14              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F14              ;
 333+ 8F14              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F14              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F14
 336+ 8F14              Almacena_disparo
 337+ 8F14
 338+ 8F14 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F15 F1               pop af
 340+ 8F16 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F17
 342+ 8F17 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F18 E6 01            and 1
 344+ 8F1A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F1C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F1C              ; 	Dispara AMADEUS.
 347+ 8F1C
 348+ 8F1C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F1C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F1C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F1C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F1C
 353+ 8F1C C5               push bc
 354+ 8F1D 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F20 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F23 A7               and a
 357+ 8F24 ED 42            sbc hl,bc
 358+ 8F26 CC C3 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F29 C1               pop bc
 360+ 8F2A 28 54            jr z,4F
 361+ 8F2C
 362+ 8F2C 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F2F 23               inc hl
 364+ 8F30 23               inc hl
 365+ 8F31 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F34              ;                                                   ; _ Disparo_(+1).
 367+ 8F34 18 18            jr 2F
 368+ 8F36
 369+ 8F36              ; Dispara una entidad.
 370+ 8F36
 371+ 8F36 C5           1 push bc
 372+ 8F37 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F3A 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F3D A7               and a
 375+ 8F3E ED 42            sbc hl,bc
 376+ 8F40 CC BC 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F43 C1               pop bc
 378+ 8F44 28 3A            jr z,4F
 379+ 8F46
 380+ 8F46 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F49 23               inc hl
 382+ 8F4A 23               inc hl
 383+ 8F4B 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F4E              ;                                                   ; _ Disparo_(+1).
 385+ 8F4E CD FA 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F51              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F51              ;
 388+ 8F51              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F51              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F51              ;                                                     Puntero_de_impresion en HL.
 391+ 8F51              ;                                                     Impacto/Dirección en BC.
 392+ 8F51
 393+ 8F51 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F52 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F53 23               inc hl                                          ; _ al siguiente.
 396+ 8F54 A7               and a
 397+ 8F55 20 C0            jr nz,3B
 398+ 8F57
 399+ 8F57 08               ex af,af
 400+ 8F58 ED 73 E2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F5C F9               ld sp,hl
 402+ 8F5D
 403+ 8F5D DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F5F F5               push af                                         ; Puntero de impresión.
 405+ 8F60 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F62 C5               push bc                                         ; Control.
 407+ 8F63
 408+ 8F63 ED 7B E2 89      ld sp,(Stack)
 409+ 8F67
 410+ 8F67              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F67
 412+ 8F67 21 D1 89     	ld hl,Ctrl_1
 413+ 8F6A CB C6        	set 0,(hl)
 414+ 8F6C
 415+ 8F6C DD E5        	push ix
 416+ 8F6E E1               pop hl
 417+ 8F6F F5               push af
 418+ 8F70 DD E1            pop ix
 419+ 8F72
 420+ 8F72 CD A0 7F     	call Guarda_foto_registros
 421+ 8F75
 422+ 8F75 21 D1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F78 CB 86        	res 0,(hl)
 424+ 8F7A
 425+ 8F7A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F7A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F7A
 428+ 8F7A CD C3 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F7D CD BC 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F80
 431+ 8F80 C9           4 ret
 432+ 8F81
 433+ 8F81              ; ----------------------------------------------------------------
 434+ 8F81              ;
 435+ 8F81              ;   4/3/23
 436+ 8F81              ;
 437+ 8F81              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F81              ;   _ al generarse el disparo.
 439+ 8F81              ;
 440+ 8F81              ;       "$80" ..... No se produce colisión.
 441+ 8F81              ;       "$81" ..... Se produce colisión.
 442+ 8F81
 443+ 8F81              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F81              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F81
 446+ 8F81
 447+ 8F81 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F83 E5               push hl                                        ; Puntero de impresión.
 449+ 8F84
 450+ 8F84 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F86 CD A2 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F89
 453+ 8F89 7B               ld a,e
 454+ 8F8A E6 01            and 1
 455+ 8F8C 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F8E
 457+ 8F8E E1               pop hl
 458+ 8F8F E5               push hl
 459+ 8F90 CD D9 95         call NextScan
 460+ 8F93
 461+ 8F93 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F94 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F96 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F98              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F98 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F9A CD A2 8F         call Bucle_2
 467+ 8F9D
 468+ 8F9D 43           2 ld b,e
 469+ 8F9E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F9F FD E1            pop iy
 471+ 8FA1 C9               ret
 472+ 8FA2
 473+ 8FA2               ; ---------- ----------
 474+ 8FA2
 475+ 8FA2 06 02        Bucle_2 ld b,2
 476+ 8FA4 FD 7E 00     2 ld a,(iy)
 477+ 8FA7 A6               and (hl)
 478+ 8FA8 28 02            jr z,1F
 479+ 8FAA 1E 81            ld e,$81
 480+ 8FAC 23           1 inc hl
 481+ 8FAD FD 23            inc iy
 482+ 8FAF 10 F3            djnz 2B
 483+ 8FB1 C9               ret
 484+ 8FB2
 485+ 8FB2              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FB2              ;
 487+ 8FB2              ;   11/04/23
 488+ 8FB2              ;
 489+ 8FB2              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FB2              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FB2              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FB2              ;
 493+ 8FB2              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FB2
 495+ 8FB2              Compara_coordenadas_X
 496+ 8FB2
 497+ 8FB2              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FB2              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FB2
 500+ 8FB2              ; Preparamos registros:
 501+ 8FB2
 502+ 8FB2 21 99 89         ld hl,Filas+6
 503+ 8FB5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FB6 23               inc hl
 505+ 8FB7 23               inc hl
 506+ 8FB8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FB9 43               ld b,e
 508+ 8FBA 21 A7 89         ld hl,Filas+20
 509+ 8FBD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FBE 21 F7 89         ld hl,Coordenadas_X_Entidad
 511+ 8FC1 CD D2 91         call Guarda_coordenadas_X
 512+ 8FC4
 513+ 8FC4              ; Preparamos registros:
 514+ 8FC4
 515+ 8FC4 21 82 85         ld hl,Amadeus_db+6
 516+ 8FC7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FC8 23               inc hl
 518+ 8FC9 23               inc hl
 519+ 8FCA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FCB 7B               ld a,e
 521+ 8FCC 08               ex af,af'
 522+ 8FCD 21 90 85         ld hl,Amadeus_db+20
 523+ 8FD0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FD1 21 F4 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FD4 CD D2 91         call Guarda_coordenadas_X
 526+ 8FD7
 527+ 8FD7              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FD7              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FD7
 530+ 8FD7 04               inc b
 531+ 8FD8 05               dec b
 532+ 8FD9 28 04            jr z,1F
 533+ 8FDB 06 03            ld b,3
 534+ 8FDD 18 02            jr 2F
 535+ 8FDF 06 02        1 ld b,2
 536+ 8FE1 08           2 ex af,af'
 537+ 8FE2 3C               inc a
 538+ 8FE3 3D               dec a
 539+ 8FE4 28 04            jr z,5F
 540+ 8FE6 0E 03            ld c,3
 541+ 8FE8 18 02            jr 6F
 542+ 8FEA 0E 02        5 ld c,2
 543+ 8FEC 79           6 ld a,c
 544+ 8FED 08               ex af,af'
 545+ 8FEE 11 F7 89         ld de,Coordenadas_X_Entidad
 546+ 8FF1 1A           4 ld a,(de)
 547+ 8FF2 21 F4 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FF5 BE           3 cp (hl)
 549+ 8FF6 28 0E            jr z,7F
 550+ 8FF8 23               inc hl
 551+ 8FF9 0D               dec c
 552+ 8FFA 20 F9            jr nz,3B
 553+ 8FFC 13               inc de
 554+ 8FFD 08               ex af,af'
 555+ 8FFE 4F               ld c,a
 556+ 8FFF 08               ex af,af'
 557+ 9000 10 EF            djnz 4B
 558+ 9002
 559+ 9002              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9002
 561+ 9002 CD 11 92     8 call Limpia_Coordenadas_X
 562+ 9005 C9               ret
 563+ 9006
 564+ 9006              7
 565+ 9006 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9008 32 AC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 900B 21 EF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 900E CB D6            set 2,(hl)
 569+ 9010 18 F0            jr 8B
 570+ 9012
 571+ 9012              ; -----------------------------------------------------------------------
 572+ 9012              ;
 573+ 9012              ;   17/04/23
 574+ 9012              ;
 575+ 9012
 576+ 9012              Detecta_colision_nave_entidad
 577+ 9012
 578+ 9012              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9012
 580+ 9012 2A 95 89         ld hl,(Posicion_actual)
 581+ 9015 CD 3E 95         call Calcula_puntero_de_impresion
 582+ 9018
 583+ 9018              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9018              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9018
 586+ 9018 DD E5            push ix
 587+ 901A E1               pop hl
 588+ 901B E5               push hl
 589+ 901C
 590+ 901C              ; ----- ----- -----
 591+ 901C 1E 00            ld e,0                                         ; Indica impacto.
 592+ 901E 06 0A            ld b,10
 593+ 9020 CD 50 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9023 7B               ld a,e
 595+ 9024 FE 05            cp 5
 596+ 9026 38 0E            jr c,3F
 597+ 9028
 598+ 9028              ; LLegados a este punto:
 599+ 9028              ;
 600+ 9028              ;   HAY COLISIÓN !!!!!.
 601+ 9028              ;
 602+ 9028              ;   .db (Impacto) de Amadeus a "1".
 603+ 9028              ;   SET el bit3 de (Impacto2).
 604+ 9028              ;
 605+ 9028              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9028
 607+ 9028 21 95 85         ld hl,Amadeus_db+25
 608+ 902B 36 01            ld (hl),1
 609+ 902D 21 EF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9030 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9032 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9034 18 18            jr 1F
 613+ 9036
 614+ 9036              ; -----
 615+ 9036
 616+ 9036 E1           3 pop hl
 617+ 9037 CD D9 95         call NextScan
 618+ 903A E5               push hl
 619+ 903B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 903C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 903E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9040 30 0C            jr nc,1F
 623+ 9042              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9042 10 DC            djnz 2B
 625+ 9044
 626+ 9044              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9044
 628+ 9044              ; LLegados a este punto:
 629+ 9044              ;
 630+ 9044              ;   NO HAY COLISIÓN !!!!!.
 631+ 9044              ;
 632+ 9044              ;   .db (Impacto) de Amadeus a "0".
 633+ 9044              ;   RES el bit2 de (Impacto2).
 634+ 9044              ;
 635+ 9044              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9044              ;   Lo colocamos a "0".
 637+ 9044
 638+ 9044 21 EF 89         ld hl,Impacto2
 639+ 9047 CB 96            res 2,(hl)
 640+ 9049 2A F0 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 904C 36 00            ld (hl),0
 642+ 904E
 643+ 904E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 904F C9               ret
 645+ 9050
 646+ 9050               ; ---------- ----------
 647+ 9050
 648+ 9050 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9051 3A 94 89         ld a,(Columns)
 650+ 9054 47               ld b,a
 651+ 9055 FD 7E 00     2 ld a,(iy)
 652+ 9058 BE               cp (hl)
 653+ 9059 28 01            jr z,1F
 654+ 905B
 655+ 905B 1C               inc e
 656+ 905C
 657+ 905C 23           1 inc hl
 658+ 905D FD 23            inc iy
 659+ 905F 10 F4            djnz 2B
 660+ 9061 C1               pop bc
 661+ 9062 C9               ret
 662+ 9063
 663+ 9063              ; -------------------------------------------------------------------------------------------------------------
 664+ 9063              ;
 665+ 9063              ;   13/03/23
 666+ 9063              ;
 667+ 9063              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9063              ;
 669+ 9063              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9063
 671+ 9063 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9066 7E               ld a,(hl)
 673+ 9067 A7               and a
 674+ 9068 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9069
 676+ 9069 44               ld b,h
 677+ 906A 4D               ld c,l
 678+ 906B 2A E8 89         ld hl,(Stack_snapshot_disparos)
 679+ 906E E5               push hl
 680+ 906F A7               and a
 681+ 9070 ED 42            sbc hl,bc
 682+ 9072 E5               push hl
 683+ 9073 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9074
 685+ 9074 E1               pop hl
 686+ 9075 54               ld d,h
 687+ 9076 5D               ld e,l
 688+ 9077 1B               dec de
 689+ 9078 ED B8            lddr                                                ; Limpiamos.
 690+ 907A
 691+ 907A 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 907D 22 E8 89         ld (Stack_snapshot_disparos),hl
 693+ 9080
 694+ 9080 C9               ret
 695+ 9081
 696+ 9081              ; -------------------------------------------------------------------------------------------------------------
 697+ 9081              ;
 698+ 9081              ;   28/03/23
 699+ 9081              ;
 700+ 9081
 701+ 9081 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9084 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9087
 704+ 9087 CD FA 8C     2 call Extrae_address
 705+ 908A 7E               ld a,(hl)
 706+ 908B A7               and a
 707+ 908C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 908E
 709+ 908E              ; ----- ----- ----- ----- ----- -----
 710+ 908E
 711+ 908E C5               push bc
 712+ 908F CD 4B 91         call foto_disparo_a_borrar
 713+ 9092
 714+ 9092              ; Existe colisión con este disparo???
 715+ 9092
 716+ 9092 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 9093 7E               ld a,(hl)
 718+ 9094 2B               dec hl
 719+ 9095 E6 01            and 1
 720+ 9097 28 1D            jr z,9F
 721+ 9099
 722+ 9099              ;   En este punto:
 723+ 9099              ;
 724+ 9099              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9099              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9099              ;   _con la entidad).
 727+ 9099              ;
 728+ 9099              ;   Disparo_2A defw 0                                ; Control.
 729+ 9099              ;    defw 0                                          ; Puntero objeto.
 730+ 9099              ;    defw 0                                          ; Puntero de impresión.
 731+ 9099              ;    defw 0                                          ; Rutina de impresión.
 732+ 9099
 733+ 9099 E5               push hl
 734+ 909A
 735+ 909A 06 04            ld b,4
 736+ 909C 23           19 inc hl
 737+ 909D 10 FD            djnz 19B
 738+ 909F
 739+ 909F CD FA 8C         call Extrae_address
 740+ 90A2 CD 30 9C         call Genera_coordenadas_disparo
 741+ 90A5
 742+ 90A5              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90A5
 744+ 90A5 21 F2 89         ld hl,Coordenadas_disparo_certero
 745+ 90A8 72               ld (hl),d
 746+ 90A9 23               inc hl
 747+ 90AA 73               ld (hl),e
 748+ 90AB
 749+ 90AB              ; Elimino el disparo de la base de datos.
 750+ 90AB
 751+ 90AB E1               pop hl
 752+ 90AC CD C7 91         call Elimina_disparo_de_base_de_datos
 753+ 90AF 21 EF 89         ld hl,Impacto2
 754+ 90B2 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90B4
 756+ 90B4 18 06            jr 11F
 757+ 90B6
 758+ 90B6 CD 74 91     9 call Mueve_disparo
 759+ 90B9 CD 4B 91         call foto_disparo_a_borrar
 760+ 90BC
 761+ 90BC C1           11 pop bc
 762+ 90BD 18 04            jr 7F
 763+ 90BF
 764+ 90BF              ; ----- ----- ----- ----- ----- -----
 765+ 90BF
 766+ 90BF ED 42        1 sbc hl,bc
 767+ 90C1 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90C3 2A ED 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90C6 23               inc hl
 770+ 90C7 23               inc hl
 771+ 90C8 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90CB 18 BA            jr 2B
 773+ 90CD CD C3 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90D0
 775+ 90D0 01 62 85         ld bc,Disparo_11
 776+ 90D3 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90D6
 778+ 90D6 CD FA 8C     5 call Extrae_address
 779+ 90D9 7E               ld a,(hl)
 780+ 90DA A7               and a
 781+ 90DB 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90DD
 783+ 90DD              ; ----- ----- ----- ----- ----- -----
 784+ 90DD
 785+ 90DD C5               push bc
 786+ 90DE CD 4B 91         call foto_disparo_a_borrar
 787+ 90E1
 788+ 90E1              ; Existe colisión con este disparo???
 789+ 90E1
 790+ 90E1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90E2 7E               ld a,(hl)
 792+ 90E3 2B               dec hl
 793+ 90E4 E6 01            and 1
 794+ 90E6 28 48            jr z,10F
 795+ 90E8
 796+ 90E8              ; La colisión se produce con Amadeus???
 797+ 90E8              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90E8
 799+ 90E8 E5               push hl
 800+ 90E9
 801+ 90E9 06 04            ld b,4
 802+ 90EB 23           16 inc hl
 803+ 90EC 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90EE CD FA 8C         call Extrae_address
 805+ 90F1 CD 30 9C         call Genera_coordenadas_disparo
 806+ 90F4
 807+ 90F4 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90F5 FE 16            cp $16
 809+ 90F7 38 22            jr c,15F
 810+ 90F9
 811+ 90F9              ; (Colisiones en filas 16 y 17).
 812+ 90F9
 813+ 90F9 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90FA
 815+ 90FA              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90FA
 817+ 90FA 21 82 85         ld hl,Amadeus_db+6
 818+ 90FD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90FE 23               inc hl
 820+ 90FF 23               inc hl
 821+ 9100 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9101 21 90 85         ld hl,Amadeus_db+20
 823+ 9104 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9105 21 F4 89         ld hl,Coordenadas_X_Amadeus
 825+ 9108 CD D2 91         call Guarda_coordenadas_X
 826+ 910B
 827+ 910B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 910C
 829+ 910C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 910C
 831+ 910C 06 03            ld b,3
 832+ 910E 21 F4 89         ld hl,Coordenadas_X_Amadeus
 833+ 9111 7E           18 ld a,(hl)
 834+ 9112 BA               cp d
 835+ 9113 20 03            jr nz,17F
 836+ 9115
 837+ 9115              ; Colisión Amadeus !!!!!!!!!!
 838+ 9115
 839+ 9115 E1               pop hl
 840+ 9116 18 09            jr 14F
 841+ 9118
 842+ 9118 23           17 inc hl
 843+ 9119 10 F6            djnz 18B
 844+ 911B
 845+ 911B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 911B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 911B
 848+ 911B E1           15 pop hl
 849+ 911C 23               inc hl
 850+ 911D 35               dec (hl)
 851+ 911E 2B               dec hl
 852+ 911F 18 0F            jr 10F
 853+ 9121
 854+ 9121              ; -----------------------debug
 855+ 9121
 856+ 9121              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9121              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9121
 859+ 9121 E5           14 push hl
 860+ 9122 CD C7 91         call Elimina_disparo_de_base_de_datos
 861+ 9125 21 EF 89         ld hl,Impacto2
 862+ 9128 CB CE            set 1,(hl)
 863+ 912A CD 11 92         call Limpia_Coordenadas_X
 864+ 912D
 865+ 912D E1               pop hl
 866+ 912E 18 06            jr 12F
 867+ 9130
 868+ 9130 CD 74 91     10 call Mueve_disparo
 869+ 9133 CD 4B 91         call foto_disparo_a_borrar
 870+ 9136 C1           12 pop bc
 871+ 9137
 872+ 9137 18 04            jr 8F
 873+ 9139
 874+ 9139              ; ----- ----- ----- ----- ----- -----
 875+ 9139
 876+ 9139 ED 42        4 sbc hl,bc
 877+ 913B 28 0A            jr z,6F
 878+ 913D
 879+ 913D 2A EB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9140 23               inc hl
 881+ 9141 23               inc hl
 882+ 9142 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9145 18 8F            jr 5B
 884+ 9147
 885+ 9147 CD BC 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 914A C9               ret
 887+ 914B
 888+ 914B              ; ------------------------------------------------------------------
 889+ 914B
 890+ 914B              foto_disparo_a_borrar
 891+ 914B
 892+ 914B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 914C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 914D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 914E
 896+ 914E E5               push hl
 897+ 914F 23               inc hl
 898+ 9150 23               inc hl
 899+ 9151 ED 73 E2 89      ld (Stack),sp
 900+ 9155 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9156 FD E1            pop iy
 902+ 9158 DD E1            pop ix
 903+ 915A E1               pop hl
 904+ 915B ED 7B E2 89      ld sp,(Stack)
 905+ 915F 3A D1 89         ld a,(Ctrl_1)
 906+ 9162 CB C7            set 0,a
 907+ 9164 32 D1 89         ld (Ctrl_1),a
 908+ 9167 CD A0 7F         call Guarda_foto_registros
 909+ 916A 3A D1 89         ld a,(Ctrl_1)
 910+ 916D CB 87            res 0,a
 911+ 916F 32 D1 89         ld (Ctrl_1),a
 912+ 9172 E1               pop hl
 913+ 9173 C9               ret
 914+ 9174
 915+ 9174 E5           Mueve_disparo push hl
 916+ 9175 7E               ld a,(hl)
 917+ 9176 06 04            ld b,4
 918+ 9178 23           1 inc hl
 919+ 9179 10 FD            djnz 1B
 920+ 917B
 921+ 917B              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 917B
 923+ 917B CD FA 8C         call Extrae_address
 924+ 917E
 925+ 917E E6 01            and 1
 926+ 9180 28 2B            jr z,2F
 927+ 9182
 928+ 9182              ; Disparo hacia arriba, (Amadeus).
 929+ 9182
 930+ 9182              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9182              ; _ de la dificultad.
 932+ 9182
 933+ 9182 CD E8 95         call PreviousScan
 934+ 9185 CD E8 95         call PreviousScan
 935+ 9188 CD E8 95         call PreviousScan
 936+ 918B
 937+ 918B              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 918B
 939+ 918B 7C               ld a,h
 940+ 918C FE 40            cp $40
 941+ 918E 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 9190
 943+ 9190              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 9190
 945+ 9190 EB               ex de,hl
 946+ 9191 06 04            ld b,4
 947+ 9193 2B           6 dec hl
 948+ 9194 10 FD            djnz 6B
 949+ 9196
 950+ 9196 CD C7 91         call Elimina_disparo_de_base_de_datos
 951+ 9199 E1               pop hl
 952+ 919A 18 10            jr 7F
 953+ 919C
 954+ 919C              ; Se ha desplazado la bala, compruebo colisión.
 955+ 919C
 956+ 919C D5           3 push de
 957+ 919D C5               push bc
 958+ 919E
 959+ 919E CD 81 8F         call Comprueba_Colision
 960+ 91A1
 961+ 91A1              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 91A1
 963+ 91A1 78               ld a,b
 964+ 91A2
 965+ 91A2 C1               pop bc
 966+ 91A3 D1               pop de
 967+ 91A4
 968+ 91A4 EB               ex de,hl
 969+ 91A5
 970+ 91A5 73               ld (hl),e
 971+ 91A6 23               inc hl
 972+ 91A7 72               ld (hl),d
 973+ 91A8
 974+ 91A8 E1           4 pop hl
 975+ 91A9 23               inc hl
 976+ 91AA 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91AB 2B               dec hl
 978+ 91AC C9           7 ret
 979+ 91AD
 980+ 91AD              ; Disparo hacia abajo, (Entidad).
 981+ 91AD
 982+ 91AD              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91AD              ; _ de la dificultad.
 984+ 91AD
 985+ 91AD CD D9 95     2 call NextScan
 986+ 91B0 CD D9 95         call NextScan
 987+ 91B3 CD D9 95         call NextScan
 988+ 91B6
 989+ 91B6              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91B6
 991+ 91B6 7C               ld a,h
 992+ 91B7 FE 58            cp $58
 993+ 91B9 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91BB
 995+ 91BB EB               ex de,hl
 996+ 91BC 06 04            ld b,4
 997+ 91BE 2B           5 dec hl
 998+ 91BF 10 FD            djnz 5B
 999+ 91C1
1000+ 91C1 CD C7 91         call Elimina_disparo_de_base_de_datos
1001+ 91C4 E1               pop hl
1002+ 91C5 18 E5            jr 7B
1003+ 91C7
1004+ 91C7              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91C7
1006+ 91C7 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91CA AF               xor a
1008+ 91CB 77               ld (hl),a
1009+ 91CC 54               ld d,h
1010+ 91CD 5D               ld e,l
1011+ 91CE 13               inc de
1012+ 91CF ED B0            ldir
1013+ 91D1 C9               ret
1014+ 91D2
1015+ 91D2              ; -----------------------------------------------------------------
1016+ 91D2              ;
1017+ 91D2              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91D2              ;
1019+ 91D2              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91D2              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91D2              ;
1022+ 91D2              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91D2              ;
1024+ 91D2              ;   INPUTS:
1025+ 91D2              ;
1026+ 91D2              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91D2              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91D2              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91D2
1030+ 91D2              ;   MODIFICA: A, HL, DE y C
1031+ 91D2
1032+ 91D2 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91D3 79               ld a,c
1034+ 91D4 E6 01            and 1
1035+ 91D6 20 03            jr nz,1F
1036+ 91D8 14               inc d
1037+ 91D9 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91DB
1039+ 91DB              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91DB              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91DB
1042+ 91DB 15           1 dec d
1043+ 91DC 23           2 inc hl
1044+ 91DD 72               ld (hl),d
1045+ 91DE
1046+ 91DE 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91DF A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91E0 C8               ret z
1049+ 91E1
1050+ 91E1 AF               xor a
1051+ 91E2 5F               ld e,a
1052+ 91E3 18 ED            jr Guarda_coordenadas_X
1053+ 91E5
1054+ 91E5              ; -----------------------------------------------------------------
1055+ 91E5              ;
1056+ 91E5              ;   12/04/23
1057+ 91E5              ;
1058+ 91E5
1059+ 91E5 3A EF 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91E8 A7               and a
1061+ 91E9 C8               ret z
1062+ 91EA
1063+ 91EA FE 04            cp 4
1064+ 91EC 20 09            jr nz,1F
1065+ 91EE
1066+ 91EE
1067+ 91EE              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91EE
1069+ 91EE CD 12 90         call Detecta_colision_nave_entidad
1070+ 91F1
1071+ 91F1 21 EF 89         ld hl,Impacto2
1072+ 91F4 CB 5E            bit 3,(hl)
1073+ 91F6 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91F7
1075+ 91F7              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91F7              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91F7
1078+ 91F7 21 EF 89     1 ld hl,Impacto2
1079+ 91FA CB 4E            bit 1,(hl)
1080+ 91FC 28 07            jr z,2F
1081+ 91FE
1082+ 91FE 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 9201 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 9203 18 0B            jr 3F
1085+ 9205
1086+ 9205 21 EF 89     2 ld hl,Impacto2
1087+ 9208 CB 46            bit 0,(hl)
1088+ 920A C8               ret z
1089+ 920B
1090+ 920B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 920B
1092+ 920B 21 D1 89         ld hl,Ctrl_1
1093+ 920E CB D6            set 2,(hl)
1094+ 9210
1095+ 9210 C9           3 ret
1096+ 9211
1097+ 9211              ; -----------------------------------------------------------------
1098+ 9211              ;
1099+ 9211              ;   16/04/23
1100+ 9211              ;
1101+ 9211
1102+ 9211 AF           Limpia_Coordenadas_X xor a
1103+ 9212 06 06            ld b,6
1104+ 9214 21 F4 89         ld hl,Coordenadas_X_Amadeus
1105+ 9217 77           1 ld (hl),a
1106+ 9218 23               inc hl
1107+ 9219 10 FC            djnz 1B
1108+ 921B C9               ret
1109+ 921C
1110+ 921C              ; -----------------------------------------------------------------
1111+ 921C              ;
1112+ 921C              ;   25/04/23
1113+ 921C              ;
1114+ 921C
1115+ 921C              Determina_resultado_comparativa
1116+ 921C
1117+ 921C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 921C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 921C              ;
1120+ 921C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 921C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 921C              ;
1123+ 921C              ;   SBC HL,DE
1124+ 921C
1125+ 921C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1126+ 921C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1127+ 921C
1128+ 921C              ; 3º Cuad H = "$fe","$ff"             .......... 4º Cuad  H = "$00","$01","$02","$03"
1129+ 921C              ;         L = "$01","$02","$03"       ..........          L = "$00","$01","$02"
1130+ 921C
1131+ 921C
1132+ 921C 3A A7 89         ld a,(Cuad_objeto)
1133+ 921F FE 02            cp 2
1134+ 9221 28 26            jr z,2F
1135+ 9223 38 24            jr c,2F
1136+ 9225
1137+ 9225              ; Cuadrantes 3º y 4º
1138+ 9225
1139+ 9225 E6 01            and 1
1140+ 9227 28 10            jr z,4F
1141+ 9229
1142+ 9229              ; Cuadrante 3º
1143+ 9229
1144+ 9229 7C               ld a,h
1145+ 922A 06 00            ld b,0
1146+ 922C
1147+ 922C CD B7 92         call Compara_cositas_H3
1148+ 922F
1149+ 922F 04               inc b
1150+ 9230 05               dec b
1151+ 9231 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1152+ 9232
1153+ 9232 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1154+ 9233 06 00            ld b,0
1155+ 9235
1156+ 9235 CD C5 92         call Compara_cositas_L3
1157+ 9238 C9               ret
1158+ 9239
1159+ 9239              ; Cuadrante 4º
1160+ 9239
1161+ 9239 7C           4 ld a,h
1162+ 923A 06 00            ld b,0
1163+ 923C
1164+ 923C CD D7 92         call Compara_cositas_H4
1165+ 923F
1166+ 923F 04               inc b
1167+ 9240 05               dec b
1168+ 9241 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1169+ 9242
1170+ 9242 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1171+ 9243 06 00            ld b,0
1172+ 9245
1173+ 9245 CD E9 92         call Compara_cositas_L4
1174+ 9248 C9               ret
1175+ 9249
1176+ 9249              ; Cuadrantes 1º y 2º.
1177+ 9249
1178+ 9249 28 10        2 jr z,3F
1179+ 924B
1180+ 924B              ; 1er Cuadrante
1181+ 924B
1182+ 924B 7C               ld a,h
1183+ 924C 06 00            ld b,0
1184+ 924E
1185+ 924E CD 8F 92         call Compara_cositas_H1
1186+ 9251
1187+ 9251 04               inc b
1188+ 9252 05               dec b
1189+ 9253 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1190+ 9254
1191+ 9254 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1192+ 9255 06 00            ld b,0
1193+ 9257
1194+ 9257 CD A5 92         call Compara_cositas_L1
1195+ 925A C9               ret
1196+ 925B
1197+ 925B
1198+ 925B              ; 2º Cuadrante
1199+ 925B
1200+ 925B 7C           3 ld a,h
1201+ 925C 06 00            ld b,0
1202+ 925E
1203+ 925E CD 6B 92         call Compara_cositas_H2
1204+ 9261
1205+ 9261 04               inc b
1206+ 9262 05               dec b
1207+ 9263 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1208+ 9264
1209+ 9264 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1210+ 9265 06 00            ld b,0
1211+ 9267
1212+ 9267 CD 7D 92         call Compara_cositas_L2
1213+ 926A C9               ret
1214+ 926B
1215+ 926B A7           Compara_cositas_H2 and a
1216+ 926C 28 0D            jr z,1F
1217+ 926E              ;    cp $fd
1218+ 926E              ;    jr z,1F
1219+ 926E              ;    cp $fe
1220+ 926E              ;    jr z,1F
1221+ 926E FE FF            cp $ff
1222+ 9270 28 09            jr z,1F
1223+ 9272 FE 01            cp $01
1224+ 9274 28 05            jr z,1F
1225+ 9276 FE 02            cp $02
1226+ 9278 28 01            jr z,1F
1227+ 927A C0               ret nz
1228+ 927B 04           1 inc b
1229+ 927C C9               ret
1230+ 927D
1231+ 927D A7           Compara_cositas_L2 and a
1232+ 927E 28 0D            jr z,1F
1233+ 9280              ;    cp $fd
1234+ 9280              ;    jr z,1F
1235+ 9280 FE FE            cp $fe
1236+ 9282 28 09            jr z,1F
1237+ 9284 FE FF            cp $ff
1238+ 9286 28 05            jr z,1F
1239+ 9288 FE 01            cp $01
1240+ 928A 28 01            jr z,1F
1241+ 928C              ;    cp $02
1242+ 928C              ;    jr z,1F
1243+ 928C C0               ret nz
1244+ 928D 04           1 inc b
1245+ 928E C9               ret
1246+ 928F
1247+ 928F A7           Compara_cositas_H1 and a
1248+ 9290 28 11            jr z,1F
1249+ 9292              ;    cp $fd
1250+ 9292              ;    jr z,1F
1251+ 9292              ;    cp $fe
1252+ 9292              ;    jr z,1F
1253+ 9292 FE FF            cp $ff
1254+ 9294 28 0D            jr z,1F
1255+ 9296 FE 01            cp $01
1256+ 9298 28 09            jr z,1F
1257+ 929A FE 02            cp $02
1258+ 929C 28 05            jr z,1F
1259+ 929E FE 03            cp $03
1260+ 92A0 28 01            jr z,1F
1261+ 92A2 C0               ret nz
1262+ 92A3 04           1 inc b
1263+ 92A4 C9               ret
1264+ 92A5
1265+ 92A5 A7           Compara_cositas_L1 and a
1266+ 92A6 28 0D            jr z,1F
1267+ 92A8              ;    cp $fd
1268+ 92A8              ;    jr z,1F
1269+ 92A8              ;    cp $fe
1270+ 92A8              ;    jr z,1F
1271+ 92A8              ;    cp $ff
1272+ 92A8              ;    jr z,1F
1273+ 92A8 FE 01            cp $01
1274+ 92AA 28 09            jr z,1F
1275+ 92AC FE 02            cp $02
1276+ 92AE 28 05            jr z,1F
1277+ 92B0 FE 03            cp $03
1278+ 92B2 28 01            jr z,1F
1279+ 92B4 C0               ret nz
1280+ 92B5 04           1 inc b
1281+ 92B6 C9               ret
1282+ 92B7
1283+ 92B7 A7           Compara_cositas_H3 and a
1284+ 92B8 28 09            jr z,1F
1285+ 92BA              ;    cp $fd
1286+ 92BA              ;    jr z,1F
1287+ 92BA FE FE            cp $fe
1288+ 92BC 28 05            jr z,1F
1289+ 92BE FE FF            cp $ff
1290+ 92C0 28 01            jr z,1F
1291+ 92C2              ;    cp $01
1292+ 92C2              ;    jr z,1F
1293+ 92C2              ;    cp $02
1294+ 92C2              ;    jr z,1F
1295+ 92C2              ;    cp $03
1296+ 92C2              ;    jr z,1F
1297+ 92C2 C0               ret nz
1298+ 92C3 04           1 inc b
1299+ 92C4 C9               ret
1300+ 92C5
1301+ 92C5 A7           Compara_cositas_L3 and a
1302+ 92C6 28 0D            jr z,1F
1303+ 92C8              ;    cp $fd
1304+ 92C8              ;    jr z,1F
1305+ 92C8              ;    cp $fe
1306+ 92C8              ;    jr z,1F
1307+ 92C8              ;    cp $ff
1308+ 92C8              ;    jr z,1F
1309+ 92C8 FE 01            cp $01
1310+ 92CA 28 09            jr z,1F
1311+ 92CC FE 02            cp $02
1312+ 92CE 28 05            jr z,1F
1313+ 92D0 FE 03            cp $03
1314+ 92D2 28 01            jr z,1F
1315+ 92D4 C0               ret nz
1316+ 92D5 04           1 inc b
1317+ 92D6 C9               ret
1318+ 92D7
1319+ 92D7 A7           Compara_cositas_H4 and a
1320+ 92D8 28 0D            jr z,1F
1321+ 92DA FE FD            cp $fd
1322+ 92DC 28 09            jr z,1F
1323+ 92DE FE FE            cp $fe
1324+ 92E0 28 05            jr z,1F
1325+ 92E2 FE FF            cp $ff
1326+ 92E4 28 01            jr z,1F
1327+ 92E6              ;    cp $01
1328+ 92E6              ;    jr z,1F
1329+ 92E6              ;    cp $02
1330+ 92E6              ;    jr z,1F
1331+ 92E6              ;    cp $03
1332+ 92E6              ;    jr z,1F
1333+ 92E6 C0               ret nz
1334+ 92E7 04           1 inc b
1335+ 92E8 C9               ret
1336+ 92E9
1337+ 92E9 A7           Compara_cositas_L4 and a
1338+ 92EA 28 05            jr z,1F
1339+ 92EC              ;    cp $fd
1340+ 92EC              ;    jr z,1F
1341+ 92EC              ;    cp $fe
1342+ 92EC              ;    jr z,1F
1343+ 92EC FE FF            cp $ff
1344+ 92EE 28 01            jr z,1F
1345+ 92F0              ;    cp $01
1346+ 92F0              ;    jr z,1F
1347+ 92F0              ;    cp $02
1348+ 92F0              ;    jr z,1F
1349+ 92F0              ;    cp $03
1350+ 92F0              ;    jr z,1F
1351+ 92F0 C0               ret nz
1352+ 92F1 04           1 inc b
1353+ 92F2 C9               ret
# file closed: Disparo.asm
1238  92F3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92F3              ; ******************************************************************************************************************************************************************************************
   2+ 92F3              ;
   3+ 92F3              ; 01/23
   4+ 92F3              ;
   5+ 92F3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92F3
   7+ 92F3 CD CD 95     Draw call Prepara_draw
   8+ 92F6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92F7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92F8 28 05        	jr z,2F
  11+ 92FA
  12+ 92FA 3A A7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92FD 18 0C        	jr 1F
  14+ 92FF 2A A5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9302 22 95 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9305 CD 94 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9308              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9308 CD 53 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 930B 3A C1 89     1 ld a,(Ctrl_0)
  20+ 930E CB 6F        	bit 5,a
  21+ 9310 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9312
  23+ 9312 CD 2A 93     	call Comprueba_limite_horizontal
  24+ 9315 CD BA 93     	call Comprueba_limite_vertical
  25+ 9318
  26+ 9318              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9318
  28+ 9318 CD 07 95     3 call calcula_CColumnass
  29+ 931B CD 3E 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 931E CD 93 95     	call Define_rutina_de_impresion
  31+ 9321
  32+ 9321 3A C1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9324 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9326 32 C1 89     	ld (Ctrl_0),a
  35+ 9329
  36+ 9329 C9           	ret
  37+ 932A
  38+ 932A              ; *******************************************************************************************************************************************************************************************
  39+ 932A              ;	21/01/23
  40+ 932A              ;
  41+ 932A              ; 	Comprueba_limite_horizontal.
  42+ 932A              ;
  43+ 932A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 932A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 932A              ;
  46+ 932A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 932A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 932A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 932A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 932A
  51+ 932A
  52+ 932A
  53+ 932A 3A C1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 932D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 932F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9331 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9333 32 C1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9336 18 09            jr 6F
  59+ 9338 CB 5F        1 bit 3,a
  60+ 933A 28 0A            jr z,2F
  61+ 933C E6 F7            and $f7
  62+ 933E 32 C1 89         ld (Ctrl_0),a
  63+ 9341 CD 94 94     6 call Inicializacion
  64+ 9344 18 5B            jr 5F
  65+ 9346 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9347
  67+ 9347              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9347              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9347
  70+ 9347 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9348 2A CC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 934B CD 99 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 934E 67           	ld h,a
  74+ 934F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9350 CD 99 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9353 67           	ld h,a
  77+ 9354 A7           	and a
  78+ 9355 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9357 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9358 3A A7 89     	ld a,(Cuad_objeto)
  81+ 935B FE 02        	cp 2
  82+ 935D 38 1E        	jr c,3F
  83+ 935F 28 1C        	jr z,3F
  84+ 9361 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9362 28 23            jr z,7F
  86+ 9364 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9366 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 9368 E1           	pop hl
  89+ 9369
  90+ 9369              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 9369              ; _para indicar con E="2" en caso necesario.
  92+ 9369
  93+ 9369 E5               push hl
  94+ 936A C5               push bc
  95+ 936B CD 99 98     	call calcula_tercio
  96+ 936E FE 01        	cp 1
  97+ 9370 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9372 CD A2 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9375 28 26            jr z,9F
 100+ 9377 38 24            jr c,9F
 101+ 9379 1E 00        11 ld e,0
 102+ 937B 18 22            jr 8F
 103+ 937D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 937E 28 07        	jr z, 7F
 105+ 9380 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9382 1E 00         	ld e,0
 107+ 9384 E1           	pop hl
 108+ 9385 18 04        	jr 4F
 109+ 9387 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9389 18 15            jr 10F
 111+ 938B
 112+ 938B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 938B              ; _para indicar con E="2" en caso necesario.
 114+ 938B
 115+ 938B E5           4 push hl
 116+ 938C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 938D CD 99 98     	call calcula_tercio
 118+ 9390 FE 01        	cp 1
 119+ 9392 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9394 CD A2 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 9397 28 04            jr z,9F
 122+ 9399 30 02            jr nc,9F
 123+ 939B 18 02        	jr 8F
 124+ 939D 1E 02        9 ld e,2
 125+ 939F C1           8 pop bc
 126+ 93A0 E1           10 pop hl
 127+ 93A1 C9           5 ret
 128+ 93A2
 129+ 93A2              ; --------------------
 130+ 93A2              ;
 131+ 93A2              ; 25/08/22
 132+ 93A2
 133+ 93A2 CD 99 98     Comprueba_centro call calcula_tercio
 134+ 93A5 67               ld h,a
 135+ 93A6 08           	ex af,af
 136+ 93A7 FE 02        	cp 2
 137+ 93A9 38 07        	jr c,1F
 138+ 93AB 28 05        	jr z,1F
 139+ 93AD 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93B0 18 03        	jr 2F
 141+ 93B2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93B5 08           2 ex af,af
 143+ 93B6 A7               and a
 144+ 93B7 ED 42            sbc hl,bc
 145+ 93B9 C9               ret
 146+ 93BA
 147+ 93BA              ; *********************************************************************************************************************************************************************************************
 148+ 93BA              ;
 149+ 93BA              ;   16/8/22
 150+ 93BA              ;
 151+ 93BA              ;	Comprueba_limite_vertical
 152+ 93BA              ;
 153+ 93BA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93BA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93BA              ;
 156+ 93BA
 157+ 93BA 2A 95 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93BD 7D           	ld a,l
 159+ 93BE E6 1F        	and $1F
 160+ 93C0 57           	ld d,a
 161+ 93C1 3A CE 89     	ld a,(Limite_vertical)
 162+ 93C4 BA           	cp d 											; Límite - Posición.
 163+ 93C5 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93C6 3A A7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93C9 CB 47        	bit 0,a
 166+ 93CB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93CD
 168+ 93CD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93CD
 170+ 93CD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93CE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93D0
 173+ 93D0              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93D0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93D0
 176+ 93D0 3A 99 89         ld a,(Coordenada_X)
 177+ 93D3 16 0F            ld d,Centro_izquierda
 178+ 93D5 A7               and a
 179+ 93D6 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93D7 28 1E            jr z,3F
 181+ 93D9 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93DB              ;                                                    ; _salimos sin modificar nada.
 183+ 93DB 18 0E            jr 2F
 184+ 93DD 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 93DE 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 93E0
 187+ 93E0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 93E0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 93E0
 190+ 93E0 3A 99 89         ld a,(Coordenada_X)
 191+ 93E3 16 10            ld d,Centro_derecha
 192+ 93E5 A7               and a
 193+ 93E6 92               sub d
 194+ 93E7 28 0E            jr z,3F
 195+ 93E9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 93EB              ;                                                    ; _salimos sin modificar nada.
 197+ 93EB CB 43        2 bit 0,e
 198+ 93ED 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 93EF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 93F0 CD 84 94         call Modificaccionne
 201+ 93F3 C1           	pop bc
 202+ 93F4 CD 94 94         call Inicializacion
 203+ 93F7 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 93F8
 205+ 93F8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 93F8
 207+ 93F8 C5           4 push bc
 208+ 93F9 01 94 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 93FC 0A           	ld a,(bc)
 210+ 93FD 3D           	dec a
 211+ 93FE 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 93FF 7D           	ld a,l
 213+ 9400 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9401 CB 47        	bit 0,a
 215+ 9403 28 03        	jr z,5F
 216+ 9405 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9406 18 2E        	jr 7F
 218+ 9408
 219+ 9408              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9408
 221+ 9408 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9409 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 940A 3A C1 89     	ld a,(Ctrl_0)
 224+ 940D CB 4F        	bit 1,a
 225+ 940F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9411 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9412
 228+ 9412              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9412
 230+ 9412 1C               inc e
 231+ 9413 1D               dec e
 232+ 9414 20 07            jr nz,12F
 233+ 9416 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9417 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9418 22 95 89     	ld (Posicion_actual),hl
 236+ 941B 18 44        13 jr 9F
 237+ 941D CB 43        12 bit 0,e
 238+ 941F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9421              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9421 C1           	pop bc
 241+ 9422 18 D3        	jr 3B
 242+ 9424 80           14 add b
 243+ 9425 6F               ld l,a
 244+ 9426 22 95 89     	ld (Posicion_actual),hl
 245+ 9429 CD 84 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 942C 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 942E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9430 32 C1 89         ld (Ctrl_0),a
 249+ 9433 F1           	pop af
 250+ 9434 18 2B        	jr 9F
 251+ 9436
 252+ 9436              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9436
 254+ 9436 F5           7 push af
 255+ 9437 3A C1 89     	ld a,(Ctrl_0)
 256+ 943A CB 47        	bit 0,a
 257+ 943C 20 1D        	jr nz,8F
 258+ 943E F1           	pop af
 259+ 943F
 260+ 943F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 943F
 262+ 943F 1C           	inc e
 263+ 9440 1D               dec e
 264+ 9441 20 07            jr nz,10F
 265+ 9443 90           	sub b
 266+ 9444 6F               ld l,a
 267+ 9445 22 95 89     	ld (Posicion_actual),hl
 268+ 9448 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 944A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 944A CB 43        10 bit 0,e
 271+ 944C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 944E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 944E C1           	pop bc
 274+ 944F 18 A6        	jr 3B
 275+ 9451 90           16 sub b
 276+ 9452 6F               ld l,a
 277+ 9453 22 95 89     	ld (Posicion_actual),hl
 278+ 9456 CD 84 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9459 18 06            jr 9F
 280+ 945B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 945D 32 C1 89         ld (Ctrl_0),a
 282+ 9460 F1           	pop af
 283+ 9461 C1           9 pop bc
 284+ 9462 1E 00        	ld e,0
 285+ 9464 CD 94 94         call Inicializacion
 286+ 9467 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 9468 08           	ex af,af
 288+ 9469 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 946A 18 8B            jr 3B
 290+ 946C
 291+ 946C              ; --------------------
 292+ 946C
 293+ 946C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 946E CD E8 95     1 call PreviousScan
 295+ 9471 10 FB            djnz 1B
 296+ 9473 22 95 89     	ld (Posicion_actual),hl
 297+ 9476 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9477 C9           	ret
 299+ 9478
 300+ 9478              ; --------------------
 301+ 9478
 302+ 9478 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 947A CD D9 95     1 call NextScan
 304+ 947D 10 FB            djnz 1B
 305+ 947F 22 95 89     	ld (Posicion_actual),hl
 306+ 9482 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9483 C9           	ret
 308+ 9484
 309+ 9484              ; --------------------
 310+ 9484              ;
 311+ 9484              ;	22/01/23
 312+ 9484              ;
 313+ 9484              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9484              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9484              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9484
 317+ 9484
 318+ 9484              Modificaccionne
 319+ 9484
 320+ 9484 3A A7 89     	ld a,(Cuad_objeto)
 321+ 9487 FE 02        	cp 2
 322+ 9489 CC 6C 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 948C DC 6C 94         call c,Modifica_Pos_actual
 324+ 948F C8           	ret z
 325+ 9490 CD 78 94         call Modifica_Pos_actual2
 326+ 9493 C9               ret
 327+ 9494
 328+ 9494              ; *************************************************************************************************************************************************************************************************
 329+ 9494              ;
 330+ 9494              ;	13/8/22
 331+ 9494              ;
 332+ 9494              ;	Inicializacion
 333+ 9494              ;
 334+ 9494              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9494              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9494              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9494              ;
 338+ 9494              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9494              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9494              ;	_ desaparece/aparece.
 341+ 9494
 342+ 9494              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9494              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9494              ;
 345+ 9494              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9494              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9494              ; 		   [E] ="0"
 348+ 9494
 349+ 9494              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9494
 351+ 9494 CD 99 98     Inicializacion call calcula_tercio
 352+ 9497 28 36        	jr z,primit
 353+ 9499 E6 02        	and 2
 354+ 949B 20 07        	jr nz,segmit
 355+ 949D 7D           	ld a,l
 356+ 949E FE 7F        	cp $7f
 357+ 94A0 38 2D        	jr c,primit
 358+ 94A2 28 2B        	jr z,primit
 359+ 94A4 CD 01 95     segmit call column
 360+ 94A7 38 13        	jr c,tercuad
 361+ 94A9 3E 04        cuarcuad ld a,4
 362+ 94AB 32 A7 89     	ld (Cuad_objeto),a
 363+ 94AE 21 20 48     	ld hl,$4820
 364+ 94B1 22 CC 89     	ld (Limite_horizontal),hl
 365+ 94B4 21 CE 89     	ld hl,Limite_vertical
 366+ 94B7 36 0D        	ld (hl),$0d
 367+ 94B9 08           	ex af,af
 368+ 94BA 18 3C        	jr 1F
 369+ 94BC              tercuad
 370+ 94BC 3E 03        	ld a,3
 371+ 94BE 32 A7 89     	ld (Cuad_objeto),a
 372+ 94C1 21 20 48     	ld hl,$4820
 373+ 94C4 22 CC 89     	ld (Limite_horizontal),hl
 374+ 94C7 21 CE 89     	ld hl,Limite_vertical
 375+ 94CA 36 12        	ld (hl),$12
 376+ 94CC 08           	ex af,af
 377+ 94CD 18 29        	jr 1F
 378+ 94CF CD 01 95     primit call column
 379+ 94D2 38 13        	jr c, primcuad
 380+ 94D4              segcuad
 381+ 94D4 3E 02        	ld a,2
 382+ 94D6 32 A7 89     	ld (Cuad_objeto),a
 383+ 94D9 21 C0 4F     	ld hl,$4fc0
 384+ 94DC 22 CC 89     	ld (Limite_horizontal),hl
 385+ 94DF 21 CE 89     	ld hl,Limite_vertical
 386+ 94E2 36 0D        	ld (hl),$0d
 387+ 94E4 08           	ex af,af
 388+ 94E5 18 11        	jr 1F
 389+ 94E7              primcuad
 390+ 94E7 3E 01        	ld a,1
 391+ 94E9 32 A7 89     	ld (Cuad_objeto),a
 392+ 94EC 21 C0 4F     	ld hl,$4fc0
 393+ 94EF 22 CC 89     	ld (Limite_horizontal),hl
 394+ 94F2 21 CE 89     	ld hl,Limite_vertical
 395+ 94F5 36 12        	ld (hl),$12
 396+ 94F7 08           	ex af,af
 397+ 94F8 CD 05 9C     1 call Genera_coordenadas
 398+ 94FB 21 C1 89     	ld hl,Ctrl_0
 399+ 94FE CB EE        	set 5,(hl)
 400+ 9500 C9           	ret
 401+ 9501
 402+ 9501              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9501
 404+ 9501              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9501              ;
 406+ 9501              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9501
 408+ 9501 7D           column ld a,l
 409+ 9502 E6 1F        	and $1f
 410+ 9504 FE 10         	cp $10
 411+ 9506 C9            	ret
 412+ 9507
 413+ 9507              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9507              ;
 415+ 9507              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9507              ;
 417+ 9507              ; 14/12/22
 418+ 9507              ;
 419+ 9507              ;	Modifica: A y BC.
 420+ 9507
 421+ 9507 3A A7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 950A E6 01        	and 1
 423+ 950C 28 17        	jr z,1F
 424+ 950E
 425+ 950E              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 950E
 427+ 950E 3A 99 89     	ld a,(Coordenada_X)
 428+ 9511 47           	ld b,a
 429+ 9512 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9513 79           	ld a,c
 431+ 9514 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9515 38 08        	jr c,2F
 433+ 9517 47           	ld b,a
 434+ 9518 79           	ld a,c
 435+ 9519 90           	sub b
 436+ 951A 32 CB 89     	ld (Columnas),a
 437+ 951D 18 1B        	jr 4F
 438+ 951F 79           2 ld a,c
 439+ 9520 32 CB 89     	ld (Columnas),a
 440+ 9523 18 15        	jr 4F
 441+ 9525
 442+ 9525              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9525
 444+ 9525 3A 99 89     1 ld a,(Coordenada_X)
 445+ 9528 81           	add c
 446+ 9529 3D           	dec a
 447+ 952A D6 1F        	sub $1f
 448+ 952C 38 08        	jr c,3F
 449+ 952E 47           	ld b,a
 450+ 952F 79           	ld a,c
 451+ 9530 90           	sub b
 452+ 9531 32 CB 89     	ld (Columnas),a
 453+ 9534 18 04        	jr 4F
 454+ 9536 79           3 ld a,c
 455+ 9537 32 CB 89     	ld (Columnas),a
 456+ 953A D9           4 exx
 457+ 953B 4F           	ld c,a
 458+ 953C D9           	exx
 459+ 953D C9            ret
 460+ 953E
 461+ 953E              ; --------------------------------------------------------------------------------------------------------------------
 462+ 953E              ;
 463+ 953E              ; 7/1/23
 464+ 953E              ;
 465+ 953E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 953E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 953E              ;
 468+ 953E              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 953E              ;	DESTRUYE: HL,B Y A.
 470+ 953E
 471+ 953E 3A A7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9541 FE 02        	cp 2
 473+ 9543 38 18        	jr c,1F
 474+ 9545 28 16        	jr z,1F
 475+ 9547 E6 01        	and 1
 476+ 9549 28 0D        	jr z,3F
 477+ 954B
 478+ 954B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 954B
 480+ 954B CD 87 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 954E
 482+ 954E 7D           9 ld a,l
 483+ 954F E6 1F        	and $1f
 484+ 9551 28 2A        	jr z,7F
 485+ 9553 2B           	dec hl
 486+ 9554 10 F8        	djnz 9B
 487+ 9556 18 25        	jr 7F
 488+ 9558
 489+ 9558              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9558
 491+ 9558 2A 95 89     3 ld hl,(Posicion_actual)
 492+ 955B 18 20        	jr 7F
 493+ 955D
 494+ 955D 28 14        1 jr z,2F
 495+ 955F
 496+ 955F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 955F
 498+ 955F CD 87 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9562
 500+ 9562 7D           4 ld a,l
 501+ 9563 E6 1F        	and $1f
 502+ 9565 28 03        	jr z,6F
 503+ 9567 2B           	dec hl
 504+ 9568 10 F8        	djnz 4B
 505+ 956A 06 0F        6 ld b,15
 506+ 956C CD E8 95     5 call PreviousScan
 507+ 956F 10 FB        	djnz 5B
 508+ 9571 18 0A        	jr 7F
 509+ 9573
 510+ 9573              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 9573
 512+ 9573 CD 87 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 9576 06 0F        	ld b,15
 514+ 9578 CD E8 95     8 call PreviousScan
 515+ 957B 10 FB        	djnz 8B
 516+ 957D
 517+ 957D E5           7 push hl
 518+ 957E DD E1        	pop ix
 519+ 9580
 520+ 9580 2A 97 89     	ld hl,(Puntero_objeto)
 521+ 9583 E5           	push hl
 522+ 9584 FD E1        	pop iy
 523+ 9586
 524+ 9586 C9           	ret
 525+ 9587
 526+ 9587              ; --------------------------------------------------------------------------------------------------------------------
 527+ 9587              ;
 528+ 9587              ;	2/1/23
 529+ 9587              ;
 530+ 9587              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 9587              ;
 532+ 9587              ;	Tras esta rutina tenemos:
 533+ 9587              ;
 534+ 9587              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 9587              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 9587              ;
 537+ 9587              ;	DESTRUYE!!!!! HL,B y A.
 538+ 9587
 539+ 9587 2A 95 89     Operandos ld hl,(Posicion_actual)
 540+ 958A 3A CB 89     	ld a,(Columnas)
 541+ 958D 3D           	dec a
 542+ 958E 20 01        	jr nz,1F
 543+ 9590 3C           	inc a
 544+ 9591 47           1 ld b,a
 545+ 9592 C9           	ret
 546+ 9593
 547+ 9593              ; --------------------------------------------------------------------------------------------------------------------
 548+ 9593              ;
 549+ 9593              ;	3/1/23
 550+ 9593              ;
 551+ 9593              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 9593              ;
 553+ 9593              ;	Destruye: A,B,HL y DE.
 554+ 9593
 555+ 9593              Define_rutina_de_impresion
 556+ 9593
 557+ 9593 3A 94 89     	ld a,(Columns)
 558+ 9596 47           	ld b,a
 559+ 9597 3A CB 89     	ld a,(Columnas)
 560+ 959A B8           	cp b
 561+ 959B 20 0D        	jr nz,2f
 562+ 959D
 563+ 959D              ;	La entidad se imprime entera.
 564+ 959D
 565+ 959D 21 69 96     	ld hl, Indice_entidades_completas
 566+ 95A0 E6 01        	and 1
 567+ 95A2 28 02        	jr z,1F
 568+ 95A4
 569+ 95A4 23           	inc hl
 570+ 95A5 23           	inc hl
 571+ 95A6
 572+ 95A6 CD FA 8C     1 call Extrae_address
 573+ 95A9 C9           	ret		;	ret
 574+ 95AA
 575+ 95AA              ;	La entidad no se imprime entera en pantalla.
 576+ 95AA
 577+ 95AA 3A A7 89     2 ld a,(Cuad_objeto)
 578+ 95AD E6 01        	and 1
 579+ 95AF 28 17        	jr z,3F
 580+ 95B1
 581+ 95B1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95B1
 583+ 95B1 21 6D 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95B4 3A 94 89     4 ld a,(Columns)
 585+ 95B7 E6 01        	and 1
 586+ 95B9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95BB
 588+ 95BB 23           	inc hl
 589+ 95BC 23           	inc hl
 590+ 95BD
 591+ 95BD 3A CB 89     	ld a,(Columnas)
 592+ 95C0 E6 01        	and 1
 593+ 95C2 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95C4
 595+ 95C4 23           	inc hl
 596+ 95C5 23           	inc hl
 597+ 95C6
 598+ 95C6 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95C8
 600+ 95C8 21 73 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95CB 18 E7        	jr 4B
 602+ 95CD
 603+ 95CD              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95CD              ;
 605+ 95CD              ;	Prepara_draw
 606+ 95CD              ;
 607+ 95CD              ;	Es una rutina de carga.
 608+ 95CD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95CD              ;
 610+ 95CD              ;	FUNCIONAMIENTO:
 611+ 95CD              ;
 612+ 95CD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95CD              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95CD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95CD              ;
 616+ 95CD              ;	DESTRUYE:
 617+ 95CD              ;
 618+ 95CD              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95CD
 620+ 95CD 21 93 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95D0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95D1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95D2 4E           	ld c,(hl)
 624+ 95D3 2A 95 89     	ld hl,(Posicion_actual)
 625+ 95D6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95D8 C9           	ret
 627+ 95D9
 628+ 95D9              ;----------------------------------------------------------------------------------------------------------------
 629+ 95D9              ;
 630+ 95D9              ;	5/08/22
 631+ 95D9              ;
 632+ 95D9              ;   NextScan.
 633+ 95D9              ;
 634+ 95D9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95D9              ;
 636+ 95D9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95D9              ;
 638+ 95D9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95D9              ;
 640+ 95D9              ;       DESTRUIDOS: AF y HL !!!
 641+ 95D9              ;
 642+ 95D9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95D9              ;
 644+ 95D9
 645+ 95D9 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95DA 7C               ld a,h
 647+ 95DB E6 07            and 7
 648+ 95DD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 95DE
 650+ 95DE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 95DF C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 95E1 6F               ld l,a
 653+ 95E2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 95E3
 655+ 95E3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 95E4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 95E6 67               ld h,a
 658+ 95E7 C9               ret
 659+ 95E8
 660+ 95E8              ;----------------------------------------------------------------------------------------------------------------
 661+ 95E8              ;
 662+ 95E8              ;	5/08/22
 663+ 95E8              ;
 664+ 95E8              ;   PreviousScan.
 665+ 95E8              ;
 666+ 95E8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 95E8              ;
 668+ 95E8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 95E8              ;
 670+ 95E8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 95E8              ;
 672+ 95E8              ;       DESTRUIDOS: AF y HL !!!
 673+ 95E8              ;
 674+ 95E8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 95E8              ;
 676+ 95E8
 677+ 95E8 7C           PreviousScan ld a,h
 678+ 95E9 25               dec h               ; Dec H.
 679+ 95EA E6 07            and 7
 680+ 95EC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 95ED
 682+ 95ED 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 95EE D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 95F0 6F               ld l,a
 685+ 95F1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 95F2
 687+ 95F2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 95F3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 95F5 67               ld h,a
 690+ 95F6 C9               ret
 691+ 95F7
 692+ 95F7              ; -----------------------------------------------------------------------------------
 693+ 95F7              ;
 694+ 95F7              ;	28/2/23
 695+ 95F7              ;
 696+ 95F7              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 95F7              ;	Extrae fotos de Album_de_fotos.
 698+ 95F7
 699+ 95F7 3A DD 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 95FA A7           	and a
 701+ 95FB C8           	ret z
 702+ 95FC ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9600 31 00 70     	ld sp,Album_de_fotos
 704+ 9603
 705+ 9603 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9605 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9606 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9607
 709+ 9607 ED 73 E4 89  	ld (Stack_2),sp
 710+ 960B ED 7B E2 89  	ld sp,(Stack)
 711+ 960F
 712+ 960F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 960F
 714+ 960F 3E CD        	ld a,$cd
 715+ 9611 32 19 96     	ld (Imprime),a
 716+ 9614 EB           	ex de,hl
 717+ 9615 22 1A 96     	ld (Imprime+1),hl
 718+ 9618 EB           	ex de,hl
 719+ 9619
 720+ 9619              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9619
 722+ 9619 00 00 00     Imprime db 0,0,0
 723+ 961C
 724+ 961C 3A DD 89     	ld a,(Numero_de_malotes)
 725+ 961F 3D           	dec a
 726+ 9620 28 09        	jr z,1F
 727+ 9622 32 DD 89      	ld (Numero_de_malotes),a
 728+ 9625
 729+ 9625 ED 7B E4 89   	ld sp,(Stack_2)
 730+ 9629 18 D8        	jr 2B
 731+ 962B
 732+ 962B AF           1 xor a
 733+ 962C 32 E4 89     	ld (Stack_2),a
 734+ 962F C9           	ret
 735+ 9630
 736+ 9630              ; -----------------------------------------------------------------------------------
 737+ 9630              ;
 738+ 9630              ;	28/2/23
 739+ 9630              ;
 740+ 9630              ;	Pinta los disparos generados.
 741+ 9630
 742+ 9630              Extrae_foto_disparos
 743+ 9630
 744+ 9630 3A EA 89     	ld a,(Numero_de_disparotes)
 745+ 9633 A7           	and a
 746+ 9634 C8           	ret z
 747+ 9635 ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9639 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 963C
 750+ 963C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 963E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 963F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9640
 754+ 9640 ED 73 E4 89  	ld (Stack_2),sp
 755+ 9644 ED 7B E2 89  	ld sp,(Stack)
 756+ 9648
 757+ 9648              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9648
 759+ 9648 3E CD        	ld a,$cd
 760+ 964A 32 52 96     	ld (Imprime2),a
 761+ 964D EB           	ex de,hl
 762+ 964E 22 53 96     	ld (Imprime2+1),hl
 763+ 9651 EB           	ex de,hl
 764+ 9652
 765+ 9652              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9652
 767+ 9652 00 00 00     Imprime2 db 0,0,0
 768+ 9655
 769+ 9655 3A EA 89     	ld a,(Numero_de_disparotes)
 770+ 9658 3D           	dec a
 771+ 9659 28 09        	jr z,1F
 772+ 965B 32 EA 89      	ld (Numero_de_disparotes),a
 773+ 965E
 774+ 965E ED 7B E4 89  	ld sp,(Stack_2)
 775+ 9662 18 D8        	jr 2B
 776+ 9664
 777+ 9664 AF           1 xor a
 778+ 9665 32 E4 89     	ld (Stack_2),a
 779+ 9668 C9           	ret
 780+ 9669
# file closed: Draw_XOR.asm
1239  9669              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9669              ;   índices de Rutinas de impresión.
   2+ 9669
   3+ 9669 79 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 966B A6 96            defw Pinta_Amadeus_3x2
   5+ 966D
   6+ 966D FC 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 966F 9C 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9671 50 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9673
  10+ 9673 26 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9675 2A 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9677 DE 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9679
  14+ 9679
  15+ 9679              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9679              ;
  17+ 9679              ;   12/12/22
  18+ 9679              ;
  19+ 9679              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9679              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9679              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9679              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9679              ;
  24+ 9679              ;   Modifica: DE y HL.
  25+ 9679
  26+ 9679 ED 73 E2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 967D FD F9        	ld sp,iy
  28+ 967F 06 10            ld b,16
  29+ 9681 D1           1 pop de
  30+ 9682 7B               ld a,e
  31+ 9683 AE               xor (hl)
  32+ 9684 77           	ld (hl),a
  33+ 9685 23           	inc hl
  34+ 9686 7A               ld a,d
  35+ 9687 AE               xor (hl)
  36+ 9688 77           	ld (hl),a
  37+ 9689 2B           	dec hl
  38+ 968A 24           	inc h
  39+ 968B 7C               ld a,h
  40+ 968C E6 07            and 7
  41+ 968E 20 0A            jr nz,2F
  42+ 9690 7D               ld a,l
  43+ 9691 C6 20            add a,$20
  44+ 9693 6F               ld l,a
  45+ 9694 38 04            jr c,2F
  46+ 9696 7C               ld a,h
  47+ 9697 D6 08            sub 8
  48+ 9699 67               ld h,a
  49+ 969A 7C           2 ld a,h
  50+ 969B FE 58            cp $58
  51+ 969D 28 02            jr z,3F
  52+ 969F 10 E0            djnz 1B
  53+ 96A1 ED 7B E2 89  3 ld sp,(Stack)
  54+ 96A5 C9           	ret
  55+ 96A6
  56+ 96A6 ED 73 E2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96AA FD F9        	ld sp,iy
  58+ 96AC 06 08            ld b,8
  59+ 96AE D1           1 pop de
  60+ 96AF 7B               ld a,e
  61+ 96B0 AE               xor (hl)
  62+ 96B1 77           	ld (hl),a
  63+ 96B2 23           	inc hl
  64+ 96B3 7A               ld a,d
  65+ 96B4 AE               xor (hl)
  66+ 96B5 77           	ld (hl),a
  67+ 96B6 23           	inc hl
  68+ 96B7 D1           	pop de
  69+ 96B8 7B               ld a,e
  70+ 96B9 AE               xor (hl)
  71+ 96BA 77           	ld (hl),a
  72+ 96BB 2B           	dec hl
  73+ 96BC 2B           	dec hl
  74+ 96BD 24           	inc h
  75+ 96BE 7C               ld a,h
  76+ 96BF E6 07            and 7
  77+ 96C1 20 0A            jr nz,2F
  78+ 96C3 7D               ld a,l
  79+ 96C4 C6 20            add a,$20
  80+ 96C6 6F               ld l,a
  81+ 96C7 38 04            jr c,2F
  82+ 96C9 7C               ld a,h
  83+ 96CA D6 08            sub 8
  84+ 96CC 67               ld h,a
  85+ 96CD 7C           2 ld a,h
  86+ 96CE FE 58            cp $58
  87+ 96D0 28 25            jr z,4F
  88+ 96D2 7A               ld a,d
  89+ 96D3 AE               xor (hl)
  90+ 96D4 77               ld (hl),a
  91+ 96D5 D1           	pop de
  92+ 96D6 23           	inc hl
  93+ 96D7 7B               ld a,e
  94+ 96D8 AE               xor (hl)
  95+ 96D9 77           	ld (hl),a
  96+ 96DA 23           	inc hl
  97+ 96DB 7A               ld a,d
  98+ 96DC AE               xor (hl)
  99+ 96DD 77           	ld (hl),a
 100+ 96DE 2B           	dec hl
 101+ 96DF 2B           	dec hl
 102+ 96E0 24           	inc h
 103+ 96E1 7C               ld a,h
 104+ 96E2 E6 07            and 7
 105+ 96E4 20 0A            jr nz,3F
 106+ 96E6 7D               ld a,l
 107+ 96E7 C6 20            add a,$20
 108+ 96E9 6F               ld l,a
 109+ 96EA 38 04            jr c,3F
 110+ 96EC 7C               ld a,h
 111+ 96ED D6 08            sub 8
 112+ 96EF 67               ld h,a
 113+ 96F0 7C           3 ld a,h
 114+ 96F1 FE 58            cp $58
 115+ 96F3 28 02            jr z,4F
 116+ 96F5 10 B7            djnz 1B
 117+ 96F7 ED 7B E2 89  4 ld sp,(Stack)
 118+ 96FB C9           	ret
 119+ 96FC
 120+ 96FC              ; ---------------------------------------------------
 121+ 96FC
 122+ 96FC ED 73 E2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9700 FD F9        	ld sp,iy
 124+ 9702
 125+ 9702              ; >>>
 126+ 9702
 127+ 9702 06 10            ld b,16
 128+ 9704 D1           1 pop de
 129+ 9705 7A           	ld a,d
 130+ 9706 AE           	xor (hl)
 131+ 9707 77           	ld (hl),a
 132+ 9708 24           	inc h
 133+ 9709 7C               ld a,h
 134+ 970A E6 07            and 7
 135+ 970C 20 0C            jr nz,2F
 136+ 970E 7D               ld a,l
 137+ 970F C6 20            add a,$20
 138+ 9711 6F               ld l,a
 139+ 9712 38 06            jr c,2F
 140+ 9714 7C               ld a,h
 141+ 9715 D6 08            sub 8
 142+ 9717 67               ld h,a
 143+ 9718 18 00            jr 2F
 144+ 971A 7C           2 ld a,h
 145+ 971B FE 58            cp $58
 146+ 971D 28 02            jr z,3F
 147+ 971F 10 E3            djnz 1B
 148+ 9721 ED 7B E2 89  3 ld sp,(Stack)
 149+ 9725 C9           	ret
 150+ 9726
 151+ 9726 ED 73 E2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 972A FD F9        	ld sp,iy
 153+ 972C
 154+ 972C              ; >>>
 155+ 972C
 156+ 972C 06 10            ld b,16
 157+ 972E D1           1 pop de
 158+ 972F 7B           	ld a,e
 159+ 9730 AE           	xor (hl)
 160+ 9731 77           	ld (hl),a
 161+ 9732 24           	inc h
 162+ 9733 7C               ld a,h
 163+ 9734 E6 07            and 7
 164+ 9736 20 0C            jr nz,2F
 165+ 9738 7D               ld a,l
 166+ 9739 C6 20            add a,$20
 167+ 973B 6F               ld l,a
 168+ 973C 38 06            jr c,2F
 169+ 973E 7C               ld a,h
 170+ 973F D6 08            sub 8
 171+ 9741 67               ld h,a
 172+ 9742 18 00            jr 2F
 173+ 9744 7C           2 ld a,h
 174+ 9745 FE 58            cp $58
 175+ 9747 28 02            jr z,3F
 176+ 9749 10 E3            djnz 1B
 177+ 974B ED 7B E2 89  3 ld sp,(Stack)
 178+ 974F C9           	ret
 179+ 9750
 180+ 9750              ; ---------------------------------------------------
 181+ 9750
 182+ 9750 ED 73 E2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9754 FD F9        	ld sp,iy
 184+ 9756 06 08            ld b,8
 185+ 9758 D1           1 pop de
 186+ 9759 7A           	ld a,d
 187+ 975A AE           	xor (hl)
 188+ 975B 77           	ld (hl),a
 189+ 975C 23           	inc hl
 190+ 975D D1           	pop de
 191+ 975E 7B           	ld a,e
 192+ 975F AE           	xor (hl)
 193+ 9760 77           	ld (hl),a
 194+ 9761 2B           	dec hl
 195+ 9762 24            	inc h
 196+ 9763 7C               ld a,h
 197+ 9764 E6 07            and 7
 198+ 9766 20 0A            jr nz,2F
 199+ 9768 7D               ld a,l
 200+ 9769 C6 20            add a,$20
 201+ 976B 6F               ld l,a
 202+ 976C 38 04            jr c,2F
 203+ 976E 7C               ld a,h
 204+ 976F D6 08            sub 8
 205+ 9771 67               ld h,a
 206+ 9772 7C           2 ld a,h
 207+ 9773 FE 58            cp $58
 208+ 9775 28 20            jr z,4F
 209+ 9777 D1               pop de
 210+ 9778 7B           	ld a,e
 211+ 9779 AE           	xor (hl)
 212+ 977A 77           	ld (hl),a
 213+ 977B 23           	inc hl
 214+ 977C 7A           	ld a,d
 215+ 977D AE           	xor (hl)
 216+ 977E 77           	ld (hl),a
 217+ 977F 2B           	dec hl
 218+ 9780 24           	inc h
 219+ 9781 7C               ld a,h
 220+ 9782 E6 07            and 7
 221+ 9784 20 0A            jr nz,3F
 222+ 9786 7D               ld a,l
 223+ 9787 C6 20            add a,$20
 224+ 9789 6F               ld l,a
 225+ 978A 38 04            jr c,3F
 226+ 978C 7C               ld a,h
 227+ 978D D6 08            sub 8
 228+ 978F 67               ld h,a
 229+ 9790 7C           3 ld a,h
 230+ 9791 FE 58            cp $58
 231+ 9793 28 02            jr z,4F
 232+ 9795 10 C1            djnz 1B
 233+ 9797 ED 7B E2 89  4 ld sp,(Stack)
 234+ 979B C9           	ret
 235+ 979C
 236+ 979C ED 73 E2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97A0 FD F9        	ld sp,iy
 238+ 97A2 06 08            ld b,8
 239+ 97A4 D1           1 pop de
 240+ 97A5 D1           	pop de
 241+ 97A6 7B           	ld a,e
 242+ 97A7 AE           	xor (hl)
 243+ 97A8 77           	ld (hl),a
 244+ 97A9 24            	inc h
 245+ 97AA 7C               ld a,h
 246+ 97AB E6 07            and 7
 247+ 97AD 20 0A            jr nz,2F
 248+ 97AF 7D               ld a,l
 249+ 97B0 C6 20            add a,$20
 250+ 97B2 6F               ld l,a
 251+ 97B3 38 04            jr c,2F
 252+ 97B5 7C               ld a,h
 253+ 97B6 D6 08            sub 8
 254+ 97B8 67               ld h,a
 255+ 97B9 7C           2 ld a,h
 256+ 97BA FE 58            cp $58
 257+ 97BC 28 1B            jr z,4F
 258+ 97BE D1               pop de
 259+ 97BF 7A           	ld a,d
 260+ 97C0 AE           	xor (hl)
 261+ 97C1 77           	ld (hl),a
 262+ 97C2 24           	inc h
 263+ 97C3 7C               ld a,h
 264+ 97C4 E6 07            and 7
 265+ 97C6 20 0A            jr nz,3F
 266+ 97C8 7D               ld a,l
 267+ 97C9 C6 20            add a,$20
 268+ 97CB 6F               ld l,a
 269+ 97CC 38 04            jr c,3F
 270+ 97CE 7C               ld a,h
 271+ 97CF D6 08            sub 8
 272+ 97D1 67               ld h,a
 273+ 97D2 7C           3 ld a,h
 274+ 97D3 FE 58            cp $58
 275+ 97D5 28 02            jr z,4F
 276+ 97D7 10 CB            djnz 1B
 277+ 97D9 ED 7B E2 89  4 ld sp,(Stack)
 278+ 97DD C9           	ret
 279+ 97DE
 280+ 97DE ED 73 E2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97E2 FD F9        	ld sp,iy
 282+ 97E4 06 08            ld b,8
 283+ 97E6 D1           1 pop de
 284+ 97E7 7B           	ld a,e
 285+ 97E8 AE           	xor (hl)
 286+ 97E9 77           	ld (hl),a
 287+ 97EA 23           	inc hl
 288+ 97EB 7A           	ld a,d
 289+ 97EC AE           	xor (hl)
 290+ 97ED 77           	ld (hl),a
 291+ 97EE 2B           	dec hl
 292+ 97EF 24             	inc h
 293+ 97F0 7C               ld a,h
 294+ 97F1 E6 07            and 7
 295+ 97F3 20 0A            jr nz,2F
 296+ 97F5 7D               ld a,l
 297+ 97F6 C6 20            add a,$20
 298+ 97F8 6F               ld l,a
 299+ 97F9 38 04            jr c,2F
 300+ 97FB 7C               ld a,h
 301+ 97FC D6 08            sub 8
 302+ 97FE 67               ld h,a
 303+ 97FF 7C           2 ld a,h
 304+ 9800 FE 58            cp $58
 305+ 9802 28 21            jr z,4F
 306+ 9804 D1               pop de
 307+ 9805 7A           	ld a,d
 308+ 9806 AE           	xor (hl)
 309+ 9807 77           	ld (hl),a
 310+ 9808 23           	inc hl
 311+ 9809 D1               pop de
 312+ 980A 7B           	ld a,e
 313+ 980B AE           	xor (hl)
 314+ 980C 77           	ld (hl),a
 315+ 980D 2B           	dec hl
 316+ 980E 24           	inc h
 317+ 980F 7C               ld a,h
 318+ 9810 E6 07            and 7
 319+ 9812 20 0A            jr nz,3F
 320+ 9814 7D               ld a,l
 321+ 9815 C6 20            add a,$20
 322+ 9817 6F               ld l,a
 323+ 9818 38 04            jr c,3F
 324+ 981A 7C               ld a,h
 325+ 981B D6 08            sub 8
 326+ 981D 67               ld h,a
 327+ 981E 7C           3 ld a,h
 328+ 981F FE 58            cp $58
 329+ 9821 28 02            jr z,4F
 330+ 9823 10 C1            djnz 1B
 331+ 9825 ED 7B E2 89  4 ld sp,(Stack)
 332+ 9829 C9           	ret
 333+ 982A
 334+ 982A ED 73 E2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 982E FD F9        	ld sp,iy
 336+ 9830 06 08            ld b,8
 337+ 9832 D1           1 pop de
 338+ 9833 7B           	ld a,e
 339+ 9834 AE           	xor (hl)
 340+ 9835 77           	ld (hl),a
 341+ 9836 24            	inc h
 342+ 9837 7C               ld a,h
 343+ 9838 E6 07            and 7
 344+ 983A 20 0A            jr nz,2F
 345+ 983C 7D               ld a,l
 346+ 983D C6 20            add a,$20
 347+ 983F 6F               ld l,a
 348+ 9840 38 04            jr c,2F
 349+ 9842 7C               ld a,h
 350+ 9843 D6 08            sub 8
 351+ 9845 67               ld h,a
 352+ 9846 7C           2 ld a,h
 353+ 9847 FE 58            cp $58
 354+ 9849 28 1C            jr z,4F
 355+ 984B D1               pop de
 356+ 984C 7A           	ld a,d
 357+ 984D AE           	xor (hl)
 358+ 984E 77           	ld (hl),a
 359+ 984F 24           	inc h
 360+ 9850 7C               ld a,h
 361+ 9851 E6 07            and 7
 362+ 9853 20 0A            jr nz,3F
 363+ 9855 7D               ld a,l
 364+ 9856 C6 20            add a,$20
 365+ 9858 6F               ld l,a
 366+ 9859 38 04            jr c,3F
 367+ 985B 7C               ld a,h
 368+ 985C D6 08            sub 8
 369+ 985E 67               ld h,a
 370+ 985F 7C           3 ld a,h
 371+ 9860 FE 58            cp $58
 372+ 9862 28 03            jr z,4F
 373+ 9864 D1               pop de
 374+ 9865 10 CB            djnz 1B
 375+ 9867 ED 7B E2 89  4 ld sp,(Stack)
 376+ 986B C9           	ret
 377+ 986C
 378+ 986C              ; ---------------------------------------------------
 379+ 986C              ;
 380+ 986C              ;   27/02/23
 381+ 986C              ;
 382+ 986C              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 986C              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 986C              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 986C
 386+ 986C ED 73 E2 89  Pinta_Disparo ld (Stack),sp
 387+ 9870 FD F9            ld sp,iy
 388+ 9872 06 02            ld b,2
 389+ 9874 D1           1 pop de
 390+ 9875 7B               ld a,e
 391+ 9876 AE               xor (hl)
 392+ 9877 77               ld (hl),a
 393+ 9878 23               inc hl
 394+ 9879 7A               ld a,d
 395+ 987A AE               xor (hl)
 396+ 987B 77               ld (hl),a
 397+ 987C 2B               dec hl
 398+ 987D
 399+ 987D 24               inc h
 400+ 987E 7C               ld a,h
 401+ 987F E6 07            and 7
 402+ 9881 20 0A            jr nz,2F
 403+ 9883 7D               ld a,l
 404+ 9884 C6 20            add a,$20
 405+ 9886 6F               ld l,a
 406+ 9887 38 04            jr c,2F
 407+ 9889 7C               ld a,h
 408+ 988A D6 08            sub 8
 409+ 988C 67               ld h,a
 410+ 988D 7C           2 ld a,h
 411+ 988E FE 58            cp $58
 412+ 9890 28 02            jr z,3F
 413+ 9892
 414+ 9892 10 E0            djnz 1B
 415+ 9894 ED 7B E2 89  3 ld sp,(Stack)
 416+ 9898 C9               ret
 417+ 9899
# file closed: Rutinas_de_impresion_sprites.asm
1240  9899              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9899              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9899              ;
   3+ 9899              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9899              ;
   5+ 9899              ; *****************************************************************************************************************************************************************************************
   6+ 9899              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9899
   8+ 9899 7C           calcula_tercio ld a,h
   9+ 989A E6 18        	and $18
  10+ 989C CB 2F        	sra a
  11+ 989E CB 2F        	sra a
  12+ 98A0 CB 2F        	sra a
  13+ 98A2 C9           	ret
  14+ 98A3
# file closed: calcula_tercio.asm
1241  98A3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98A3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98A3              ;
   3+ 98A3              ;
   4+ 98A3              ;	CLS.
   5+ 98A3              ;
   6+ 98A3              ;	Limpia la pantalla y define sus atributos.
   7+ 98A3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98A3              ;
   9+ 98A3              ;	COLORES: 0 ..... NEGRO
  10+ 98A3              ;    		 1 ..... AZUL
  11+ 98A3              ; 			 2 ..... ROJO
  12+ 98A3              ;			 3 ..... MAGENTA
  13+ 98A3              ; 			 4 ..... VERDE
  14+ 98A3              ; 			 5 ..... CIAN
  15+ 98A3              ;			 6 ..... AMARILLO
  16+ 98A3              ; 			 7 ..... BLANCO
  17+ 98A3              ;
  18+ 98A3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98A3              ;
  20+ 98A3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98A3
  22+ 98A3
  23+ 98A3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98A6 11 01 40     	LD DE,$4001
  25+ 98A9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98AC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98AE ED B0        	LDIR
  28+ 98B0 01 FF 02     	LD BC,767
  29+ 98B3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98B4 ED B0        	LDIR
  31+ 98B6 C9           	ret
  32+ 98B7
# file closed: Cls.asm
1242  98B7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98B7              ; ******************************************************************************************************************************************************************************************
   2+ 98B7              ;
   3+ 98B7              ;   20/05/23
   4+ 98B7              ;
   5+ 98B7              ;	Recompone_posicion_inicio
   6+ 98B7              ;
   7+ 98B7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98B7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98B7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98B7              ;	_ a una u otra rutina.
  11+ 98B7
  12+ 98B7              Recompone_posicion_inicio
  13+ 98B7
  14+ 98B7 2A A5 89     	ld hl,(Posicion_inicio)
  15+ 98BA 7D           	ld a,l
  16+ 98BB E6 1F        	and $1f
  17+ 98BD 28 16        	jr z,1F
  18+ 98BF
  19+ 98BF FE 1F        	cp $1f
  20+ 98C1 28 0D        	jr z,3F
  21+ 98C3
  22+ 98C3 21 CF 89     	ld hl,Ctrl_2
  23+ 98C6 CB C6        	set 0,(hl)
  24+ 98C8 2A 97 89     	ld hl,(Puntero_objeto)
  25+ 98CB 22 D2 89     	ld (Repone_puntero_objeto),hl
  26+ 98CE 18 08        	jr 2F
  27+ 98D0
  28+ 98D0 CD 71 9A     3 call Mov_left
  29+ 98D3 18 03        	jr 2F
  30+ 98D5
  31+ 98D5 CD 53 99     1 call Mov_right
  32+ 98D8 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98DB 22 97 89     	ld (Puntero_objeto),hl
  34+ 98DE C9           	ret
  35+ 98DF
  36+ 98DF              ; ******************************************************************************************************************************************************************************************
  37+ 98DF              ;
  38+ 98DF              ;   27/05/23
  39+ 98DF              ;
  40+ 98DF              ;	Mov_down
  41+ 98DF              ;
  42+ 98DF              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98DF              ;
  44+ 98DF              ;
  45+ 98DF              Mov_down
  46+ 98DF
  47+ 98DF CD 41 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98E2              ;																	; _ repone (Puntero_objeto).
  49+ 98E2 21 C1 89     	ld hl,Ctrl_0
  50+ 98E5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98E7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98E7              ; 																	; _ en el caso de que no lo haya.
  53+ 98E7 3A AB 89     	ld a,(Vel_down)
  54+ 98EA 47           	ld b,a
  55+ 98EB 2A 95 89         ld hl,(Posicion_actual)
  56+ 98EE CD 99 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98F1 E6 02        	and 2
  58+ 98F3 28 0F        	jr z,1F
  59+ 98F5
  60+ 98F5              ; Nos encontramos en el último tercio de pantalla.
  61+ 98F5              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98F5
  63+ 98F5 7C           	ld a,h
  64+ 98F6 FE 57        	cp $57
  65+ 98F8 20 0A        	jr nz,1F
  66+ 98FA 7D           	ld a,l
  67+ 98FB C6 20        	add $20
  68+ 98FD 30 05        	jr nc,1F
  69+ 98FF
  70+ 98FF              ; ------------------------------
  71+ 98FF CD EF 9B     	call Reaparece_arriba
  72+ 9902              ;	call Reinicio
  73+ 9902              ; ------------------------------
  74+ 9902
  75+ 9902 18 08        	jr 3F
  76+ 9904 CD D9 95     1 call NextScan
  77+ 9907 22 95 89     	ld (Posicion_actual),hl
  78+ 990A 10 E2            djnz 2B
  79+ 990C CD 05 9C     3 call Genera_coordenadas
  80+ 990F C9           	ret
  81+ 9910
  82+ 9910              ; ******************************************************************************************************************************************************************************************
  83+ 9910              ;
  84+ 9910              ;   27/05/23
  85+ 9910              ;
  86+ 9910              ;	Mov_up
  87+ 9910              ;
  88+ 9910              ; 	Mueve el Sprite hacia arriba.
  89+ 9910              ;
  90+ 9910              ;
  91+ 9910              Mov_up
  92+ 9910
  93+ 9910 CD 41 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9913              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9913 21 C1 89     	ld hl,Ctrl_0
  96+ 9916 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9918              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9918              ; 																		; _ en el caso de que no lo haya.
  99+ 9918 3A AA 89     	ld a,(Vel_up)
 100+ 991B 47           	ld b,a
 101+ 991C 2A 95 89     	ld hl,(Posicion_actual)
 102+ 991F CD 99 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9922 A7           	and a
 104+ 9923 20 10        	jr nz,1F
 105+ 9925
 106+ 9925              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9925              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9925
 109+ 9925 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9926 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9928 20 0B            jr nz,1F
 112+ 992A 7D               ld a,l
 113+ 992B D6 20            sub $20
 114+ 992D 30 06            jr nc,1F
 115+ 992F 25               dec h
 116+ 9930
 117+ 9930              ; -----------------------------
 118+ 9930 CD DF 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9933              ;	call Reinicio
 120+ 9933              ; -----------------------------
 121+ 9933
 122+ 9933 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9935 CD E8 95     1 call PreviousScan
 124+ 9938 22 95 89     	ld (Posicion_actual),hl
 125+ 993B 10 E2            djnz 3B
 126+ 993D CD 05 9C     2 call Genera_coordenadas
 127+ 9940 C9           	ret
 128+ 9941
 129+ 9941              ; -----------------------------
 130+ 9941              ;
 131+ 9941              ;	27/5/23
 132+ 9941              ;
 133+ 9941              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9941              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9941              ;
 136+ 9941              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9941              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9941              ;
 139+ 9941              ;	Modifica: A y (Puntero_objeto).
 140+ 9941
 141+ 9941 3A CF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9944 CB 47        	bit 0,a
 143+ 9946 C8           	ret z
 144+ 9947 CB 87        	res 0,a
 145+ 9949 32 CF 89     	ld (Ctrl_2),a
 146+ 994C 2A D2 89     	ld hl,(Repone_puntero_objeto)
 147+ 994F 22 97 89     	ld (Puntero_objeto),hl
 148+ 9952 C9           	ret
 149+ 9953
 150+ 9953              ; ******************************************************************************************************************************************************************************************
 151+ 9953              ;
 152+ 9953              ;	19/10/22
 153+ 9953              ;
 154+ 9953              ;	Mov_right.
 155+ 9953              ;
 156+ 9953              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9953              ;
 158+ 9953
 159+ 9953 21 C1 89     Mov_right ld hl,Ctrl_0
 160+ 9956 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9958              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9958              ; 																	; _ en el caso de que no lo haya.
 163+ 9958 3A C1 89     	ld a,(Ctrl_0)
 164+ 995B CB 77        	bit 6,a
 165+ 995D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 995F
 167+ 995F CD 8D 9B     	call Stop_Amadeus_right
 168+ 9962 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9963 18 4D        	jr 8F
 170+ 9965
 171+ 9965 3A 99 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 9968 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 996A 20 46        	jr nz,8F
 174+ 996C
 175+ 996C 3A 9B 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 996F A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9970 28 40        	jr z,8F
 178+ 9972
 179+ 9972              ; ---------- ---------- ----------
 180+ 9972              ;
 181+ 9972              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 9972
 183+ 9972 3A A9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9975 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 9977 28 11        	jr z,1F
 186+ 9979 38 06        	jr c,6F
 187+ 997B FE 04        	cp 4
 188+ 997D 28 14        	jr z,7F
 189+ 997F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 9981
 191+ 9981              ; ---------- ---------- ----------
 192+ 9981              ;
 193+ 9981              ; Perfiles de velocidad
 194+ 9981              ;
 195+ 9981
 196+ 9981 3A 9B 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 9984 FE FE        	cp $fe
 198+ 9986 20 2A        	jr nz,8F
 199+ 9988 18 10        	jr 3F
 200+ 998A 3A 9B 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 998D FE FD        	cp $fd
 202+ 998F 20 21        	jr nz,8F
 203+ 9991 18 07        	jr 3F
 204+ 9993 3A 9B 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 9996 FE FB        	cp $fb
 206+ 9998 20 18        	jr nz,8F
 207+ 999A
 208+ 999A              ; ---------- ---------- ----------
 209+ 999A
 210+ 999A              3
 211+ 999A CD CD 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 999D              ;	call Reinicio
 213+ 999D
 214+ 999D              ; ---------- ---------- ----------
 215+ 999D              ;
 216+ 999D              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 999D
 218+ 999D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 999F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99A0 CD B9 99     	call DESPLZ_DER
 221+ 99A3 C1           	pop bc
 222+ 99A4 10 F9        	djnz 5B
 223+ 99A6 2A 95 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99A9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99AA 22 95 89     	ld (Posicion_actual),hl
 226+ 99AD CD 05 9C     	call Genera_coordenadas
 227+ 99B0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99B2
 229+ 99B2              ; ---------- ---------- ----------
 230+ 99B2
 231+ 99B2 2A 95 89     8 ld hl,(Posicion_actual)
 232+ 99B5 CD B9 99     	call DESPLZ_DER
 233+ 99B8 C9           2 ret
 234+ 99B9
 235+ 99B9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99B9              ;
 237+ 99B9              ;	22/9/22
 238+ 99B9              ;
 239+ 99B9
 240+ 99B9 CD C8 99     DESPLZ_DER call Desplaza_derecha
 241+ 99BC CD 14 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99BF CD 3D 9A         call Ciclo_completo
 243+ 99C2 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99C5 CB FE        	set 7,(hl)
 245+ 99C7 C9           	ret
 246+ 99C8
 247+ 99C8              ; ******************************************************************************************************************************************************************************************
 248+ 99C8              ;	15/02/23
 249+ 99C8              ;
 250+ 99C8
 251+ 99C8 3A A9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99CB 47           	ld b,a
 253+ 99CC 2A A1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99CF 23           1 inc hl
 255+ 99D0 23           	inc hl
 256+ 99D1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99D3 22 A1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99D6 CD FA 8C     	call Extrae_address
 259+ 99D9 22 97 89     	ld (Puntero_objeto),hl
 260+ 99DC
 261+ 99DC              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99DC
 263+ 99DC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99DC              ; Cuántos movimientos hemos hecho ??
 265+ 99DC              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99DC
 267+ 99DC 2A 9D 89     7 ld hl,(Indice_Sprite_der)
 268+ 99DF EB           	ex de,hl
 269+ 99E0 A7           	and a
 270+ 99E1 ED 52        	sbc hl,de
 271+ 99E3 CB 3D        	srl l
 272+ 99E5 3E 08        6 ld a,8
 273+ 99E7 95           	sub l
 274+ 99E8 30 1E        	jr nc,3F
 275+ 99EA
 276+ 99EA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 99EA              ; B="0".
 278+ 99EA
 279+ 99EA 04           4 inc b
 280+ 99EB 3C           	inc a
 281+ 99EC 20 FC        	jr nz,4B
 282+ 99EE 78           	ld a,b
 283+ 99EF 08           	ex af,af
 284+ 99F0 2A 9D 89     	ld hl,(Indice_Sprite_der)
 285+ 99F3 23           5 inc hl
 286+ 99F4 23           	inc hl
 287+ 99F5 10 FC        	djnz 5B
 288+ 99F7 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 99FA CD FA 8C     	call Extrae_address
 290+ 99FD 22 97 89     	ld (Puntero_objeto),hl
 291+ 9A00
 292+ 9A00              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A00              ; _(Posicion_actual).
 294+ 9A00
 295+ 9A00 21 95 89     	ld hl,Posicion_actual
 296+ 9A03 34           	inc (hl)
 297+ 9A04 08               ex af,af
 298+ 9A05 6F           	ld l,a
 299+ 9A06 18 DD        	jr 6B
 300+ 9A08
 301+ 9A08              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A08
 303+ 9A08 47           3 ld b,a
 304+ 9A09 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A0C 23           2 inc hl
 306+ 9A0D 23           	inc hl
 307+ 9A0E 10 FC        	djnz 2B
 308+ 9A10 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A13 C9           8 ret
 310+ 9A14
 311+ 9A14              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A14              ;
 313+ 9A14              ;	24/7/22
 314+ 9A14              ;
 315+ 9A14              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A14              ;
 317+ 9A14              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A14              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A14              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A14
 321+ 9A14 3A 9B 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A17 A7           	and a
 323+ 9A18 20 1F        	jr nz,1F
 324+ 9A1A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A1C 32 9B 89         ld (CTRL_DESPLZ),a
 326+ 9A1F
 327+ 9A1F 21 94 89     	ld hl,Columns
 328+ 9A22 34           	inc (hl)
 329+ 9A23 3A A7 89     	ld a,(Cuad_objeto)
 330+ 9A26 E6 01        	and 1
 331+ 9A28 28 0F        	jr z,1F
 332+ 9A2A 2A 95 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A2D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A2E 22 95 89     	ld (Posicion_actual),hl
 335+ 9A31 CD 05 9C     	call Genera_coordenadas
 336+ 9A34 CD 99 9B     	call Inc_CTRL_DESPLZ
 337+ 9A37 18 03        	jr 2F
 338+ 9A39 CD 99 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A3C C9           2 ret
 340+ 9A3D
 341+ 9A3D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A3D              ;
 343+ 9A3D              ;	24/7/22
 344+ 9A3D              ;
 345+ 9A3D              ;	Ciclo_completo.
 346+ 9A3D              ;
 347+ 9A3D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A3D              ;
 349+ 9A3D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A3D              ; 	Decrementamos (Columns).
 351+ 9A3D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A3D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A3D
 354+ 9A3D
 355+ 9A3D 3A 9B 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A40 FE FF        	cp $ff
 357+ 9A42 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A44 E6 F0        	and $f0
 359+ 9A46 20 28        	jr nz,3F
 360+ 9A48
 361+ 9A48              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A48
 363+ 9A48 3A 9B 89     	ld a,(CTRL_DESPLZ)
 364+ 9A4B 47           	ld b,a
 365+ 9A4C 3E F8        	ld a,$f8
 366+ 9A4E 80           	add b
 367+ 9A4F 32 9B 89     	ld (CTRL_DESPLZ),a
 368+ 9A52 18 1C        	jr 3F
 369+ 9A54 21 94 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A57 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A58 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A59 32 9B 89     	ld (CTRL_DESPLZ),a
 373+ 9A5C 3A A7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A5F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A61 20 0A        	jr nz,2F
 376+ 9A63 2A 95 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A66 23           	inc hl
 378+ 9A67 22 95 89     	ld (Posicion_actual),hl
 379+ 9A6A CD 05 9C     	call Genera_coordenadas
 380+ 9A6D
 381+ 9A6D              ; Inicia el puntero de Sprite.
 382+ 9A6D
 383+ 9A6D CD 11 8D     2 call Inicia_puntero_objeto_der
 384+ 9A70 C9           3 ret
 385+ 9A71
 386+ 9A71              ; ******************************************************************************************************************************************************************************************
 387+ 9A71              ;
 388+ 9A71              ;	15/02/23
 389+ 9A71              ;
 390+ 9A71              ;	Mov_left.
 391+ 9A71              ;
 392+ 9A71              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A71              ;
 394+ 9A71 21 C1 89     Mov_left ld hl,Ctrl_0
 395+ 9A74 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A76              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A76              ; 																	; _ en el caso de que no lo haya.
 398+ 9A76 3A C1 89     	ld a,(Ctrl_0)
 399+ 9A79 CB 77        	bit 6,a
 400+ 9A7B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9A7D
 402+ 9A7D CD 93 9B     	call Stop_Amadeus_left
 403+ 9A80 C8           	ret z
 404+ 9A81 20 4A        	jr nz,8F
 405+ 9A83
 406+ 9A83 3A 99 89     11 ld a,(Coordenada_X)
 407+ 9A86 A7           	and a
 408+ 9A87 20 44        	jr nz,8F
 409+ 9A89
 410+ 9A89 3A 9B 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9A8C A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9A8D 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9A8F
 414+ 9A8F              ; ---------- ---------- ----------
 415+ 9A8F
 416+ 9A8F 3A A8 89     	ld a,(Vel_left)
 417+ 9A92 FE 02        	cp 2
 418+ 9A94 28 0F        	jr z,1F
 419+ 9A96 38 04        	jr c,6F
 420+ 9A98 FE 04        	cp 4
 421+ 9A9A 28 12        	jr z,7F
 422+ 9A9C
 423+ 9A9C              ; ---------- ---------- ----------
 424+ 9A9C
 425+ 9A9C 3A 9B 89     6 ld a,(CTRL_DESPLZ)
 426+ 9A9F FE F8        	cp $f8
 427+ 9AA1 20 2A        	jr nz,8F
 428+ 9AA3 18 10        	jr 4F
 429+ 9AA5 3A 9B 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AA8 FE F9        	cp $f9
 431+ 9AAA 20 21        	jr nz,8F
 432+ 9AAC 18 07        	jr 4F
 433+ 9AAE 3A 9B 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AB1 FE FB        	cp $fb
 435+ 9AB3 20 18        	jr nz,8F
 436+ 9AB5
 437+ 9AB5              ; ---------- ---------- ----------
 438+ 9AB5
 439+ 9AB5              4
 440+ 9AB5 CD BB 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AB8              ;	call Reinicio
 442+ 9AB8
 443+ 9AB8              ; ---------- ---------- ----------
 444+ 9AB8
 445+ 9AB8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9ABA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9ABB
 448+ 9ABB              ;	ld hl,(Indice_Sprite_izq)
 449+ 9ABB              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9ABB
 451+ 9ABB CD D4 9A     	call DESPLZ_IZQ
 452+ 9ABE C1           	pop bc
 453+ 9ABF 10 F9        	djnz 5B
 454+ 9AC1 2A 95 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9AC4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9AC5 22 95 89     	ld (Posicion_actual),hl
 457+ 9AC8 CD 05 9C     	call Genera_coordenadas
 458+ 9ACB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9ACD
 460+ 9ACD              ; ---------- ---------- ----------
 461+ 9ACD
 462+ 9ACD              ; Movemos, no hay recolocación.
 463+ 9ACD
 464+ 9ACD 2A 95 89     8 ld hl,(Posicion_actual)
 465+ 9AD0 CD D4 9A     	call DESPLZ_IZQ
 466+ 9AD3 C9           2 ret
 467+ 9AD4
 468+ 9AD4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9AD4              ;
 470+ 9AD4              ;	22/9/22
 471+ 9AD4
 472+ 9AD4              DESPLZ_IZQ
 473+ 9AD4
 474+ 9AD4 CD E3 9A     	call Desplaza_izquierda
 475+ 9AD7 CD 2F 9B         call modifica_parametros_1er_DESPLZ
 476+ 9ADA CD 57 9B     	call Ciclo_completo_2
 477+ 9ADD 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9AE0 CB BE        	res 7,(hl)
 479+ 9AE2 C9           	ret
 480+ 9AE3
 481+ 9AE3              Desplaza_izquierda
 482+ 9AE3
 483+ 9AE3 3A A8 89     	ld a,(Vel_left)
 484+ 9AE6 47           	ld b,a
 485+ 9AE7 2A A3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9AEA 23           1 inc hl
 487+ 9AEB 23           	inc hl
 488+ 9AEC 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9AEE 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9AF1 CD FA 8C     	call Extrae_address
 491+ 9AF4 22 97 89     	ld (Puntero_objeto),hl
 492+ 9AF7
 493+ 9AF7              ; Modifica (Puntero_DESPLZ_der).
 494+ 9AF7
 495+ 9AF7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9AF7              ; Cuántos movimientos hemos hecho ??
 497+ 9AF7              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9AF7
 499+ 9AF7 2A 9F 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9AFA EB           	ex de,hl
 501+ 9AFB A7           	and a
 502+ 9AFC ED 52        	sbc hl,de
 503+ 9AFE CB 3D        	srl l
 504+ 9B00 3E 08        6 ld a,8
 505+ 9B02 95           	sub l
 506+ 9B03 30 1E        	jr nc,3F
 507+ 9B05
 508+ 9B05              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B05              ; B="0".
 510+ 9B05
 511+ 9B05 04           4 inc b
 512+ 9B06 3C           	inc a
 513+ 9B07 20 FC        	jr nz,4B
 514+ 9B09 78           	ld a,b
 515+ 9B0A 08           	ex af,af
 516+ 9B0B 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B0E 23           5 inc hl
 518+ 9B0F 23           	inc hl
 519+ 9B10 10 FC        	djnz 5B
 520+ 9B12 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B15 CD FA 8C     	call Extrae_address
 522+ 9B18 22 97 89     	ld (Puntero_objeto),hl
 523+ 9B1B
 524+ 9B1B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B1B              ; _(Posicion_actual).
 526+ 9B1B
 527+ 9B1B 21 95 89     	ld hl,Posicion_actual
 528+ 9B1E 35           	dec (hl)
 529+ 9B1F 08           	ex af,af
 530+ 9B20 6F           	ld l,a
 531+ 9B21 18 DD        	jr 6B
 532+ 9B23
 533+ 9B23              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B23
 535+ 9B23 47           3 ld b,a
 536+ 9B24 2A 9D 89     	ld hl,(Indice_Sprite_der)
 537+ 9B27 23           2 inc hl
 538+ 9B28 23           	inc hl
 539+ 9B29 10 FC        	djnz 2B
 540+ 9B2B 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B2E C9           8 ret
 542+ 9B2F
 543+ 9B2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B2F              ;
 545+ 9B2F              ;	modifica_parametros_1er_DESPLZ
 546+ 9B2F              ;
 547+ 9B2F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B2F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B2F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B2F
 551+ 9B2F 3A 9B 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B32 A7           	and a
 553+ 9B33 20 1E        	jr nz,1F
 554+ 9B35 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B36 32 9B 89         ld (CTRL_DESPLZ),a
 556+ 9B39 21 94 89     	ld hl,Columns
 557+ 9B3C 34           	inc (hl)
 558+ 9B3D 3A A7 89     	ld a,(Cuad_objeto)
 559+ 9B40 E6 01        	and 1
 560+ 9B42 20 0F        	jr nz,1F
 561+ 9B44 2A 95 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B47 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B48 22 95 89     	ld (Posicion_actual),hl
 564+ 9B4B CD 05 9C     	call Genera_coordenadas
 565+ 9B4E CD AA 9B     	call Dec_CTRL_DESPLZ
 566+ 9B51 18 03        	jr 2F
 567+ 9B53 CD AA 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B56 C9           2 ret
 569+ 9B57
 570+ 9B57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B57
 572+ 9B57 3A 9B 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B5A FE F7        	cp $f7
 574+ 9B5C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B5E 30 2C        	jr nc,3F
 576+ 9B60
 577+ 9B60              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B60
 579+ 9B60 06 00        	ld b,0
 580+ 9B62 04           4 inc b
 581+ 9B63 3C           	inc a
 582+ 9B64 FE F7        	cp $f7
 583+ 9B66 20 FA        	jr nz,4B
 584+ 9B68 3E FF        	ld a,$ff
 585+ 9B6A 90           	sub b
 586+ 9B6B 32 9B 89     	ld (CTRL_DESPLZ),a
 587+ 9B6E 18 1C        	jr 3F
 588+ 9B70
 589+ 9B70              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B70
 591+ 9B70 21 94 89     1 ld hl,Columns
 592+ 9B73 35           	dec (hl)
 593+ 9B74 AF           	xor a
 594+ 9B75 32 9B 89     	ld (CTRL_DESPLZ),a
 595+ 9B78 3A A7 89     	ld a,(Cuad_objeto)
 596+ 9B7B E6 01        	and 1
 597+ 9B7D 28 0A        	jr z,2F
 598+ 9B7F 2A 95 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9B82 2B           	dec hl
 600+ 9B83 22 95 89     	ld (Posicion_actual),hl
 601+ 9B86 CD 05 9C     	call Genera_coordenadas
 602+ 9B89
 603+ 9B89              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9B89
 605+ 9B89 CD 24 8D     2 call Inicia_puntero_objeto_izq
 606+ 9B8C C9           3 ret
 607+ 9B8D
 608+ 9B8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9B8D              ;
 610+ 9B8D              ;	19/10/22
 611+ 9B8D              ;
 612+ 9B8D              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9B8D              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9B8D
 615+ 9B8D 3A 99 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9B90 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9B92 C9           	ret
 618+ 9B93
 619+ 9B93              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9B93              ;
 621+ 9B93              ;	19/10/22
 622+ 9B93              ;
 623+ 9B93              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9B93              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9B93
 626+ 9B93 3A 99 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9B96 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9B98 C9           	ret
 629+ 9B99
 630+ 9B99              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9B99              ;
 632+ 9B99              ;	24/7/22
 633+ 9B99              ;
 634+ 9B99              ;	Inc_CTRL_DESPLZ
 635+ 9B99              ;
 636+ 9B99              ;
 637+ 9B99              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9B99
 639+ 9B99 21 9B 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9B9C 3A A9 89     	ld a,(Vel_right)
 641+ 9B9F A7           	and a
 642+ 9BA0 28 06        	jr z,1F
 643+ 9BA2 47           	ld b,a
 644+ 9BA3 34           3 inc (hl)
 645+ 9BA4 10 FD        	djnz 3B
 646+ 9BA6 18 01        	jr 2F
 647+ 9BA8 34           1 inc (hl)
 648+ 9BA9 C9           2 ret
 649+ 9BAA
 650+ 9BAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BAA              ;
 652+ 9BAA              ;	5/2/23
 653+ 9BAA              ;
 654+ 9BAA              ;	Dec_CTRL_DESPLZ
 655+ 9BAA              ;
 656+ 9BAA              ;
 657+ 9BAA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BAA
 659+ 9BAA 21 9B 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BAD 3A A8 89     	ld a,(Vel_left)
 661+ 9BB0 A7           	and a
 662+ 9BB1 28 06        	jr z,1F
 663+ 9BB3 47           	ld b,a
 664+ 9BB4 35           3 dec (hl)
 665+ 9BB5 10 FD        	djnz 3B
 666+ 9BB7 18 01        	jr 2F
 667+ 9BB9 35           1 dec (hl)
 668+ 9BBA C9           2 ret
 669+ 9BBB
 670+ 9BBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BBB
 672+ 9BBB 2A 95 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BBE 01 1F 00     	ld bc,31
 674+ 9BC1 A7           	and a
 675+ 9BC2 ED 4A        	adc hl,bc
 676+ 9BC4 22 95 89     	ld (Posicion_actual),hl
 677+ 9BC7 21 C1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BCA CB C6        	set 0,(hl)
 679+ 9BCC C9           	ret
 680+ 9BCD
 681+ 9BCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BCD
 683+ 9BCD 2A 95 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BD0 01 1F 00     	ld bc,31
 685+ 9BD3 A7           	and a
 686+ 9BD4 ED 42        	sbc hl,bc
 687+ 9BD6 22 95 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BD9 21 C1 89     	ld hl,Ctrl_0
 689+ 9BDC CB CE        	set 1,(hl)
 690+ 9BDE C9           	ret
 691+ 9BDF
 692+ 9BDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9BDF
 694+ 9BDF 24           Reaparece_abajo inc h
 695+ 9BE0 01 E0 17     	ld bc,$17e0
 696+ 9BE3 A7           	and a
 697+ 9BE4 ED 4A        	adc hl,bc
 698+ 9BE6 22 95 89     	ld (Posicion_actual),hl
 699+ 9BE9 21 C1 89     	ld hl,Ctrl_0
 700+ 9BEC CB D6        	set 2,(hl)
 701+ 9BEE C9           	ret
 702+ 9BEF
 703+ 9BEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9BEF
 705+ 9BEF 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9BF2 A7           	and a
 707+ 9BF3 ED 42        	sbc hl,bc
 708+ 9BF5 22 95 89     	ld (Posicion_actual),hl
 709+ 9BF8 21 C1 89     	ld hl,Ctrl_0
 710+ 9BFB CB DE        	set 3,(hl)
 711+ 9BFD C9           	ret
 712+ 9BFE
 713+ 9BFE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9BFE
 715+ 9BFE 2A A5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C01 22 95 89     	ld (Posicion_actual),hl
 717+ 9C04 C9           	ret
# file closed: Direcciones.asm
1243  9C05              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C05              ; ------------------------------------------------------------------------
   2+ 9C05              ;
   3+ 9C05              ;	02/04/23
   4+ 9C05              ;
   5+ 9C05              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C05              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C05              ;
   8+ 9C05              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C05              ;
  10+ 9C05              ;	Modifica: A,BC y DE.
  11+ 9C05
  12+ 9C05 C5           Genera_coordenadas push bc
  13+ 9C06 E5           	push hl
  14+ 9C07 D5           	push de
  15+ 9C08
  16+ 9C08 2A 95 89     	ld hl,(Posicion_actual)
  17+ 9C0B
  18+ 9C0B 7D           	ld a,l
  19+ 9C0C E6 1F        	and $1f
  20+ 9C0E 32 99 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C11
  22+ 9C11 CD 99 98     	call calcula_tercio
  23+ 9C14 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C15
  25+ 9C15 1E 00        	ld e,0
  26+ 9C17 7D           	ld a,l
  27+ 9C18 E6 E0        	and $e0
  28+ 9C1A 28 01        	jr z,1F
  29+ 9C1C 04           	inc b
  30+ 9C1D
  31+ 9C1D 04           1 inc b
  32+ 9C1E 05           	dec b
  33+ 9C1F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C21              ;														; _ , salimos.
  35+ 9C21 1C           3 inc e
  36+ 9C22 D6 20        	sub 32
  37+ 9C24 20 FB        	jr nz,3B
  38+ 9C26 10 F5        	djnz 1B
  39+ 9C28
  40+ 9C28 7B           2 ld a,e
  41+ 9C29 32 9A 89     	ld (Coordenada_y),a
  42+ 9C2C
  43+ 9C2C D1           	pop de
  44+ 9C2D E1           	pop hl
  45+ 9C2E C1           	pop bc
  46+ 9C2F
  47+ 9C2F C9           	ret
  48+ 9C30
  49+ 9C30              ; ------------------------------------------------------------------------
  50+ 9C30              ;	28/05/23
  51+ 9C30              ;
  52+ 9C30              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C30              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C30              ;
  55+ 9C30              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C30              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C30              ;
  58+ 9C30              ;		DE="$120d"
  59+ 9C30              ;
  60+ 9C30              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C30              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C30              ;
  63+ 9C30              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C30
  65+ 9C30              ;	Modifica: A,BC y DE.
  66+ 9C30
  67+ 9C30
  68+ 9C30              Genera_coordenadas_disparo
  69+ 9C30
  70+ 9C30              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C30
  72+ 9C30 7D           	ld a,l
  73+ 9C31 E6 1F        	and $1f
  74+ 9C33 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C34 CD 99 98     	call calcula_tercio
  76+ 9C37 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C38 1E 00        	ld e,0
  78+ 9C3A 7D           	ld a,l
  79+ 9C3B E6 E0        	and $e0
  80+ 9C3D 28 01        	jr z,1F
  81+ 9C3F 04           	inc b
  82+ 9C40 1C           1 inc e
  83+ 9C41 D6 20        	sub 32
  84+ 9C43 20 FB        	jr nz,1B
  85+ 9C45 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C47 C9           	ret
  87+ 9C48
# file closed: Genera_coordenadas.asm
1244  9C48              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C48
   2+ 9C48
   3+ 9C48              ;   11/8/22
   4+ 9C48              ;
   5+ 9C48              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C48              ;
   7+ 9C48              ;   Mov_obj.asm
   8+ 9C48              ;
   9+ 9C48              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C48              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C48              ;
  12+ 9C48              ;   Codificación:
  13+ 9C48              ;
  14+ 9C48              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C48
  16+ 9C48              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C48
  18+ 9C48 02 40 00     Arriba db 2,%01000000,0
  19+ 9C4B 02 80 00     Abajo db 2,%10000000,0
  20+ 9C4E 02 20 00     Derecha db 2,%00100000,0
  21+ 9C51 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C54 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C58 60 42 60 40
  22+ 9C5C 63
  23+ 9C5D 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C61 22 A3 80 A0
  24+ 9C65 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C69 84 A0 83 A0
  25+ 9C6D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C71 80 A3 22 A0
  26+ 9C75 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C79 40 60 42 60
  27+ 9C7D 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9C81
  29+ 9C81 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9C85 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9C89 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9C8D 84 00
  32+ 9C8F 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9C93 84 00
  33+ 9C95 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9C99 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9C9D 1F 1F 1F 1F
  35+ 9CA1 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CA5 1F 1F 1F 1F
  35+ 9CA9 1F
  36+ 9CAA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CAE 2F 2F 2F 2F
  36+ 9CB2 2F 2F
  37+ 9CB4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CB8 2F 2F 00
  38+ 9CBB
  39+ 9CBB              ; ----- ----- ----- ----- -----
  40+ 9CBB
  41+ 9CBB 99 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CBD 95 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CBF 51 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CC1 4E 9C        Indice_mov_Derecha defw Derecha
  45+ 9CC3 4B 9C        Indice_mov_Abajo defw Abajo
  46+ 9CC5 48 9C        Indice_mov_Arriba defw Arriba
  47+ 9CC7 85 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CC9 89 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CCB 81 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CCD 8F 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CCF 54 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CD1              ; ----- ----- ----- ----- -----
  53+ 9CD1
  54+ 9CD1 3A C8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CD4 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CD5 28 02            jr z,1F
  57+ 9CD7 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CD9 3A C9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CDC C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9CDE 32 C9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9CE1              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9CE1 2A C6 89         ld hl,(Puntero_mov)
  63+ 9CE4 7E               ld a,(hl)
  64+ 9CE5 32 C8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9CE8 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9CE9 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9CEC
  68+ 9CEC 3A CA 89     Decoder ld a,(Repetimos_db)
  69+ 9CEF A7               and a
  70+ 9CF0 20 0C            jr nz,12F
  71+ 9CF2 2A C6 89         ld hl,(Puntero_mov)
  72+ 9CF5 7E               ld a,(hl)
  73+ 9CF6 A7               and a
  74+ 9CF7 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9CF9 E6 0F            and $0f
  76+ 9CFB 32 CA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9CFE              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9CFE 2A C6 89     12 ld hl,(Puntero_mov)
  79+ 9D01 CB 7E            bit 7,(hl)
  80+ 9D03 28 03            jr z,2F
  81+ 9D05 CD DF 98         call Mov_down
  82+ 9D08 2A C6 89     2 ld hl, (Puntero_mov)
  83+ 9D0B CB 76            bit 6,(hl)
  84+ 9D0D 28 03            jr z,3F
  85+ 9D0F CD 10 99         call Mov_up
  86+ 9D12 2A C6 89     3 ld hl, (Puntero_mov)
  87+ 9D15 CB 6E            bit 5,(hl)
  88+ 9D17 28 03            jr z,4F
  89+ 9D19 CD 53 99         call Mov_right
  90+ 9D1C 2A C6 89     4 ld hl, (Puntero_mov)
  91+ 9D1F CB 66            bit 4,(hl)
  92+ 9D21 28 03            jr z,5F
  93+ 9D23 CD 71 9A         call Mov_left
  94+ 9D26
  95+ 9D26              ; ---------- --------- --------- ---------- ----------
  96+ 9D26
  97+ 9D26 3A CA 89     5 ld a,(Repetimos_db)
  98+ 9D29 A7               and a
  99+ 9D2A 28 07            jr z,6F
 100+ 9D2C 3D               dec a
 101+ 9D2D 32 CA 89         ld (Repetimos_db),a
 102+ 9D30 28 01            jr z,6f
 103+ 9D32 C9           11 ret
 104+ 9D33 21 C8 89     6 ld hl,Contador_db_mov
 105+ 9D36 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D37 2A C6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D3A 23               inc hl
 108+ 9D3B 22 C6 89         ld (Puntero_mov),hl
 109+ 9D3E 18 F2            jr 11B
 110+ 9D40 2A C4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D43 3A C9 89         ld a,(Incrementa_puntero)
 112+ 9D46 47               ld b,a
 113+ 9D47 23           8 inc hl
 114+ 9D48 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D4A 5E               ld e,(hl)
 116+ 9D4B 23               inc hl
 117+ 9D4C 56               ld d,(hl)
 118+ 9D4D EB               ex de,hl
 119+ 9D4E 22 C6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D51 18 DF            jr 11B
 121+ 9D53
 122+ 9D53              ; ---------- --------- --------- ---------- ----------
 123+ 9D53              ;
 124+ 9D53              ;   11/8/22
 125+ 9D53              ;
 126+ 9D53              ;   Prepara_Puntero_mov
 127+ 9D53
 128+ 9D53 E5           Prepara_Puntero_mov push hl
 129+ 9D54 D5               push de
 130+ 9D55 2A C4 89         ld hl,(Puntero_indice_mov)
 131+ 9D58 5E               ld e,(hl)
 132+ 9D59 23               inc hl
 133+ 9D5A 56               ld d,(hl)
 134+ 9D5B EB               ex de,hl
 135+ 9D5C 22 C6 89         ld (Puntero_mov),hl
 136+ 9D5F D1               pop de
 137+ 9D60 E1               pop hl
 138+ 9D61 C9               ret
 139+ 9D62
 140+ 9D62              ; ---------- --------- --------- ---------- ----------
 141+ 9D62              ;
 142+ 9D62              ;   11/8/22
 143+ 9D62              ;
 144+ 9D62              ;   Reinicia_el_movimiento
 145+ 9D62
 146+ 9D62 CD 53 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D65 AF               xor a
 148+ 9D66 32 C8 89         ld (Contador_db_mov),a
 149+ 9D69 32 C9 89         ld (Incrementa_puntero),a
 150+ 9D6C C3 D1 9C         jp Movimiento
 151+ 9D6F C9               ret
 152+ 9D70              ; ---------- --------- --------- ---------- ----------
 153+ 9D70
 154+ 9D70
 155+ 9D70
 156+ 9D70
 157+ 9D70
 158+ 9D70
 159+ 9D70
 160+ 9D70
 161+ 9D70
 162+ 9D70
 163+ 9D70
 164+ 9D70
 165+ 9D70
 166+ 9D70
 167+ 9D70
 168+ 9D70
 169+ 9D70
 170+ 9D70
# file closed: Patrones_de_mov.asm
1245  9D70              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9D70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9D70              ;
   3+ 9D70              ;	3/1/23
   4+ 9D70              ;
   5+ 9D70              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9D70
   7+ 9D70              ;	ADC HL,SP	LD (addr),SP
   8+ 9D70              ;	ADD HL,SP	LD SP,(addr)
   9+ 9D70              ;	ADD IX,SP	LD SP,nn
  10+ 9D70              ; 	ADD IY,SP	LD SP,HL
  11+ 9D70              ;				LD SP,IX
  12+ 9D70              ;	DEC SP		LD SP,IY
  13+ 9D70
  14+ 9D70              ;	EX (SP),HL
  15+ 9D70              ;	EX (SP),IX
  16+ 9D70              ;	EX (SP),IY
  17+ 9D70
  18+ 9D70              ;	INC SP
  19+ 9D70
  20+ 9D70
  21+ 9D70                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 E2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E8 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E6 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E8 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E6 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B E2 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1246  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1247  7FE6
1248  7FE6              	SAVESNA "Pruebas.sna", START
1249  7FE6
1250  7FE6
1251  7FE6
1252  7FE6
# file closed: Banco_de_pruebas.asm
