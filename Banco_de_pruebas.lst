# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 1E 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 0E 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD C1 47        Posicion_inicio defw $47c1								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 18 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 32 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 57 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 50 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD AA 87      	call Inicia_Puntero_objeto
 250  8617 CD 82 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD F2 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 33 88     3 call Restore_Amadeus
 259  8626 CD AA 87     	call Inicia_Puntero_objeto
 260  8629 CD 82 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 45 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 66 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 6D 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 50 87     	call Inicia_punteros_de_entidades
 272  863B CD 21 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 86 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 291  864F CD BF 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 3A EC 85     	ld a,(Impacto2)
 300  8659 A7           	and a
 301  865A 28 03        	jr z,5F
 302  865C
 303  865C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865C
 307  865C CD 60 8C     	call Selector_de_impactos
 308  865F
 309  865F CD 50 87     5 call Inicia_punteros_de_entidades
 310  8662 CD 21 88     	call Restore_Primera_entidad
 311  8665
 312  8665 AF           	xor a
 313  8666 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 314  8669
 315  8669 CD E6 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 316  866C 21 00 70     	ld hl,Album_de_fotos
 317  866F 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 318  8672              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 319  8672 3A DD 85         ld a,(Numero_de_entidades)
 320  8675 47               ld b,a
 321  8676 A7           	and a
 322  8677 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 323  8679
 324  8679 C5           2 push bc
 325  867A CD C3 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 326  867D
 327  867D 3A C9 85     	ld a,(Ctrl_0)
 328  8680 CB 67        	bit 4,a
 329  8682 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 330  8684
 331  8684              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 332  8684              ; Las entidades sólo generan disparo cuando se mueven.
 333  8684              ; 16/02/23.
 334  8684              ; [[[
 335  8684 CD 8E 88     	call Detecta_disparo_entidad
 336  8687              ; ]]]
 337  8687 CD 17 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 338  868A
 339  868A 21 C9 85     1 ld hl,Ctrl_0
 340  868D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 341  868F AF           	xor a
 342  8690 32 CA 85     	ld (Obj_dibujado),a
 343  8693
 344  8693 CD F2 87     6 call Store_Restore_entidades
 345  8696 C1           	pop bc
 346  8697 10 E0        	djnz 2B
 347  8699
 348  8699              ; Tras la gestión de las entidades, ... AMADEUS.
 349  8699
 350  8699 CD 33 88     4 call Restore_Amadeus
 351  869C CD E8 86     	call Mov_Amadeus
 352  869F
 353  869F 3A C9 85     	ld a,(Ctrl_0)
 354  86A2 CB 67        	bit 4,a
 355  86A4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 356  86A6
 357  86A6 CD 17 87     	call Guarda_foto_entidad_a_pintar
 358  86A9
 359  86A9 21 C9 85     3 ld hl,Ctrl_0
 360  86AC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 361  86AE AF           	xor a
 362  86AF 32 CA 85     	ld (Obj_dibujado),a
 363  86B2 CD 45 88     	call Store_Amadeus
 364  86B5
 365  86B5 CD 04 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 366  86B8
 367  86B8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 368  86B8
 369  86B8 CD 74 87     	call Calcula_numero_de_malotes
 370  86BB CD 8C 87     	call Calcula_numero_de_disparotes
 371  86BE
 372  86BE 3E 04        	ld a,4
 373  86C0 D3 FE        	out ($fe),a
 374  86C2 C9           	ret
 375  86C3
 376  86C3              ; --------------------------------------------------------------------------------------------------------------
 377  86C3              ;
 378  86C3              ;	27/03/23
 379  86C3
 380  86C3              Mov_obj
 381  86C3
 382  86C3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 383  86C3
 384  86C3 AF           	xor a
 385  86C4 32 CA 85     	ld (Obj_dibujado),a
 386  86C7 CD 21 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 387  86CA              ;														; Obj_dibujado="0".
 388  86CA              ; Movemos Entidades malignas.
 389  86CA
 390  86CA 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 391  86CD 24           	inc h                                               ; Salimos de la rutina.
 392  86CE 25           	dec h
 393  86CF C8           	ret z
 394  86D0
 395  86D0 CD 20 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 396  86D3
 397  86D3 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 398  86D6 CB 67        	bit 4,a
 399  86D8 C8           	ret z
 400  86D9
 401  86D9              ; Ha habido desplazamiento de la entidad maligna.
 402  86D9              ; Ha llegado a zona de AMADEUS ???
 403  86D9
 404  86D9              ;	ld a,(Coordenada_y)
 405  86D9              ;	cp $14
 406  86D9              ;	call nc, Compara_coordenadas_X
 407  86D9
 408  86D9              ; ---------
 409  86D9
 410  86D9 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 411  86DB 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 412  86DE CD 21 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 413  86E1 CD 38 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 414  86E4 CD 07 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 415  86E7 C9           	ret													; _de la misma.
 416  86E8
 417  86E8              ; --------------------------------------------------------------------------------------------------------------
 418  86E8              ;
 419  86E8              ;	29/1/23
 420  86E8
 421  86E8              Mov_Amadeus
 422  86E8
 423  86E8 AF           	xor a
 424  86E9 32 CA 85     	ld (Obj_dibujado),a
 425  86EC CD 21 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 426  86EF              ;														; Obj_dibujado="0".
 427  86EF              ; Movemos Amadeus.
 428  86EF
 429  86EF CD 6B 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 430  86F2 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 431  86F5 CB 67        	bit 4,a
 432  86F7 C8           	ret z
 433  86F8
 434  86F8              ; ---------
 435  86F8
 436  86F8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 437  86FA 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 438  86FD CD 21 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 439  8700 CD 38 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 440  8703 CD 07 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 441  8706 C9           	ret													; _de la nave.
 442  8707
 443  8707              ; --------------------------------------------------------------------------------------------------------------
 444  8707              ;
 445  8707              ;	31/01/23
 446  8707              ;
 447  8707              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 448  8707
 449  8707              Guarda_foto_entidad_a_borrar
 450  8707
 451  8707 CD 5C 8F     	call Prepara_draw
 452  870A CD 96 8E     	call calcula_CColumnass
 453  870D CD CD 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 454  8710 CD 22 8F     	call Define_rutina_de_impresion
 455  8713 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 456  8716 C9           	ret
 457  8717
 458  8717              ; --------------------------------------------------------------------------------------------------------------
 459  8717              ;
 460  8717              ;	31/01/23
 461  8717              ;
 462  8717              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 463  8717              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 464  8717
 465  8717              Guarda_foto_entidad_a_pintar
 466  8717
 467  8717 CD 44 87     	call Repone_pintar
 468  871A CD 82 8C     	call Draw
 469  871D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 470  8720 C9           	ret
 471  8721
 472  8721              ; --------------------------------------------------------------------------------------------------------------
 473  8721              ;
 474  8721              ;
 475  8721
 476  8721 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 477  8724 3A CA 85     	ld a,(Obj_dibujado)
 478  8727 A7           	and a
 479  8728 28 05        	jr z,1F
 480  872A 11 BF 85     	ld de,Variables_de_pintado
 481  872D 18 03        	jr 2F
 482  872F 11 B5 85     1 ld de,Variables_de_borrado
 483  8732 01 08 00     2 ld bc,8
 484  8735 ED B0        	ldir
 485  8737 C9           	ret
 486  8738
 487  8738              ; --------------------------------------------------------------------------------------------------------------
 488  8738
 489  8738 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 490  873B 11 9B 85     	ld de,Filas
 491  873E 01 08 00     	ld bc,8
 492  8741 ED B0        	ldir
 493  8743 C9           	ret
 494  8744
 495  8744 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 496  8747 11 9B 85     	ld de,Filas
 497  874A 01 08 00     	ld bc,8
 498  874D ED B0        	ldir
 499  874F C9           	ret
 500  8750
 501  8750              ; *************************************************************************************************************************************************************
 502  8750              ;
 503  8750              ; 8/1/23
 504  8750              ;
 505  8750              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 506  8750              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 507  8750              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 508  8750
 509  8750              ; Destruye HL y DE !!!!!
 510  8750
 511  8750              Inicia_punteros_de_entidades
 512  8750
 513  8750 21 68 84     	ld hl,Indice_de_entidades
 514  8753 CD A4 87         call Extrae_address
 515  8756 22 D7 85         ld (Puntero_store_entidades),hl
 516  8759 21 6A 84     	ld hl,Indice_de_entidades+2
 517  875C 22 DB 85     	ld (Indice_restore),hl
 518  875F CD A4 87     	call Extrae_address
 519  8762 22 D9 85     	ld (Puntero_restore_entidades),hl
 520  8765 C9               ret
 521  8766
 522  8766              ; *************************************************************************************************************************************************************
 523  8766              ;
 524  8766              ; 8/1/23
 525  8766              ;
 526  8766              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 527  8766
 528  8766 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 529  8769 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 530  876C C9           	ret
 531  876D 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 532  8770 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 533  8773 C9           	ret
 534  8774
 535  8774              ; -------------------------------------------------------------------------------------------------------------
 536  8774              ;
 537  8774              ; 28/2/23
 538  8774              ;
 539  8774
 540  8774              Calcula_numero_de_malotes
 541  8774
 542  8774 21 00 70     	ld hl,Album_de_fotos
 543  8777 EB           	ex de,hl
 544  8778 2A E3 85     	ld hl,(Stack_snapshot)
 545  877B
 546  877B 06 00        	ld b,0
 547  877D 7D           	ld a,l
 548  877E 93           	sub e
 549  877F 28 07        	jr z,1F
 550  8781
 551  8781              ; Nº de malotes no es "0".
 552  8781
 553  8781 D6 06        2 sub 6
 554  8783 04           	inc b
 555  8784 A7           	and a
 556  8785 20 FA        	jr nz,2B
 557  8787 78           	ld a,b
 558  8788
 559  8788 32 DE 85     1 ld (Numero_de_malotes),a
 560  878B C9           	ret
 561  878C
 562  878C              ; -------------------------------------------------------------------------------------------------------------
 563  878C              ;
 564  878C              ; 28/2/23
 565  878C              ;
 566  878C
 567  878C              Calcula_numero_de_disparotes
 568  878C
 569  878C 21 60 70     	ld hl,Album_de_fotos_disparos
 570  878F EB           	ex de,hl
 571  8790 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 572  8793
 573  8793 06 00        	ld b,0
 574  8795 7D           	ld a,l
 575  8796 93           	sub e
 576  8797 28 07        	jr z,1F
 577  8799
 578  8799              ; Nº de malotes no es "0".
 579  8799
 580  8799 D6 06        2 sub 6
 581  879B 04           	inc b
 582  879C A7           	and a
 583  879D 20 FA        	jr nz,2B
 584  879F 78           	ld a,b
 585  87A0
 586  87A0 32 E7 85     1 ld (Numero_de_disparotes),a
 587  87A3 C9           	ret
 588  87A4              ; *************************************************************************************************************************************************************
 589  87A4              ;
 590  87A4              ; 20/10/22
 591  87A4              ;
 592  87A4              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 593  87A4              ;
 594  87A4              ; Destruye el puntero y DE !!!!!
 595  87A4
 596  87A4 5E           Extrae_address ld e,(hl)
 597  87A5 23           	inc hl
 598  87A6 56           	ld d,(hl)
 599  87A7 2B           	dec hl
 600  87A8 EB           	ex de,hl
 601  87A9 C9           	ret
 602  87AA
 603  87AA              ; *************************************************************************************************************************************************************
 604  87AA              ;
 605  87AA              ;	7/2/23
 606  87AA              ;
 607  87AA              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 608  87AA              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 609  87AA              ;
 610  87AA              ;   Destruye HL y BC !!!!!,
 611  87AA              ;
 612  87AA              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 613  87AA              ;					"0" ..... Izquierda.
 614  87AA
 615  87AA              Inicia_Puntero_objeto
 616  87AA
 617  87AA 3A AF 85     	ld a,(Cuad_objeto)
 618  87AD E6 01        	and 1
 619  87AF F5           	push af
 620  87B0 CC CE 87     	call z,Inicia_puntero_objeto_izq
 621  87B3 F1           	pop af
 622  87B4 28 2B        	jr z,1F
 623  87B6 CD BB 87     	call Inicia_puntero_objeto_der
 624  87B9 18 26        	jr 1F
 625  87BB
 626  87BB              ; Arrancamos desde la parte izquierda de la pantalla.
 627  87BB              ; Iniciamos (Indice_Sprite_der).
 628  87BB
 629  87BB 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 630  87BE 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 631  87C1 CD A4 87     	call Extrae_address
 632  87C4 22 9F 85     	ld (Puntero_objeto),hl
 633  87C7
 634  87C7 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 635  87CA              ;	call Extrae_address
 636  87CA 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 637  87CD C9           	ret
 638  87CE
 639  87CE              ; Arrancamos desde la parte derecha de la pantalla.
 640  87CE              ; Iniciamos (Indice_Sprite_izq).
 641  87CE
 642  87CE 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 643  87D1 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 644  87D4 CD A4 87     	call Extrae_address
 645  87D7 22 9F 85     	ld (Puntero_objeto),hl
 646  87DA
 647  87DA 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 648  87DD              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 649  87DD 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 650  87E0 C9           	ret
 651  87E1
 652  87E1              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 653  87E1
 654  87E1 21 38 83     1 ld hl,Amadeus
 655  87E4 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 656  87E8 B7 ED 42     	sub hl,bc
 657  87EB C0           	ret nz
 658  87EC 21 C9 85     	ld hl,Ctrl_0
 659  87EF CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 660  87F1 C9           	ret 												; _de nuestra nave en los extremos.
 661  87F2
 662  87F2              ; *************************************************************************************************************************************************************
 663  87F2              ;
 664  87F2              ;	8/1/23
 665  87F2              ;
 666  87F2              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 667  87F2              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 668  87F2
 669  87F2              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 670  87F2              ;	_de la 2ª y 3ª entidad respectivamente.
 671  87F2
 672  87F2              Store_Restore_entidades
 673  87F2
 674  87F2 E5           	push hl
 675  87F3 D5           	push de
 676  87F4 C5            	push bc
 677  87F5
 678  87F5              ;	STORE !!!!!
 679  87F5              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 680  87F5
 681  87F5 21 9B 85     	ld hl,Filas
 682  87F8 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 683  87FC 01 3B 00     	ld bc,59
 684  87FF ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 685  8801
 686  8801              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 687  8801
 688  8801 2A D9 85     	ld hl,(Puntero_restore_entidades)
 689  8804 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 690  8807 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 691  880A 01 3B 00     	ld bc,59
 692  880D ED B0        	ldir
 693  880F
 694  880F              ;	Incrementa RESTORE !!!!!
 695  880F
 696  880F 2A DB 85         ld hl,(Indice_restore)
 697  8812 23           	inc hl
 698  8813 23           	inc hl
 699  8814 22 DB 85     	ld (Indice_restore),hl
 700  8817 CD A4 87         call Extrae_address
 701  881A 22 D9 85         ld (Puntero_restore_entidades),hl
 702  881D C1           	pop bc
 703  881E D1           	pop de
 704  881F E1           	pop hl
 705  8820 C9           	ret
 706  8821
 707  8821              ; **************************************************************************************************
 708  8821              ;
 709  8821              ;	29/10/22
 710  8821              ;
 711  8821              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 712  8821
 713  8821 E5           Restore_Primera_entidad push hl
 714  8822 D5           	push de
 715  8823 C5            	push bc
 716  8824 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 717  8827 11 9B 85     	ld de,Filas
 718  882A 01 3B 00     	ld bc,59
 719  882D ED B0        	ldir
 720  882F C1           	pop bc
 721  8830 D1           	pop de
 722  8831 E1           	pop hl
 723  8832 C9           	ret
 724  8833
 725  8833              ; **************************************************************************************************
 726  8833              ;
 727  8833              ;	25/01/23
 728  8833              ;
 729  8833              ;	Restore_Amadeus
 730  8833              ;
 731  8833              ;	Cargamos en DRAW los parámetros de Amadeus.
 732  8833              ;
 733  8833
 734  8833 E5           Restore_Amadeus	push hl
 735  8834 D5           	push de
 736  8835 C5            	push bc
 737  8836 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 738  8839 11 9B 85     	ld de,Filas
 739  883C 01 3B 00     	ld bc,59
 740  883F ED B0        	ldir
 741  8841 C1           	pop bc
 742  8842 D1           	pop de
 743  8843 E1           	pop hl
 744  8844 C9           	ret
 745  8845
 746  8845              ; *************************************************************************************************************************************************************
 747  8845              ;
 748  8845              ;	29/01/23
 749  8845              ;
 750  8845              ;	Store_Amadeus
 751  8845              ;
 752  8845              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 753  8845              ;
 754  8845
 755  8845 E5           Store_Amadeus push hl
 756  8846 D5           	push de
 757  8847 C5            	push bc
 758  8848 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 759  884B 11 74 84     	ld de,Amadeus_db
 760  884E 01 3B 00     	ld bc,59
 761  8851 ED B0        	ldir
 762  8853 C1           	pop bc
 763  8854 D1           	pop de
 764  8855 E1           	pop hl
 765  8856 C9           	ret
 766  8857
 767  8857              ; **************************************************************************************************
 768  8857
 769  8857              ; Teclado.
 770  8857
 771  8857 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 772  8859 DB FE        	in a,($fe)
 773  885B E6 01        	and $01
 774  885D 28 02        	jr z,1f
 775  885F 18 F6        	jr Pulsa_ENTER
 776  8861 C9           1 ret
 777  8862
 778  8862              ; **************************************************************************************************
 779  8862              ;
 780  8862              ; Temporización.
 781  8862
 782  8862              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 783  8862              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 784  8862              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 785  8862              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 786  8862
 787  8862              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 788  8862              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 789  8862              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 790  8862
 791  8862              ; A partir de $4f61 no hace falta DELAY.
 792  8862
 793  8862              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 794  8862
 795  8862 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 796  8865 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 797  8866 78           	LD A,B
 798  8867 A7           	AND A
 799  8868 20 FB        	JR NZ,wait
 800  886A C9           	RET
 801  886B
 802  886B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 803  886B              ;
 804  886B              ;	5/3/23
 805  886B              ;
 806  886B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 807  886B
 808  886B              Movimiento_Amadeus
 809  886B
 810  886B              ; Disparo.
 811  886B
 812  886B 3E F7        	ld a,$f7												; "5" para disparar.
 813  886D DB FE        	in a,($fe)
 814  886F E6 10        	and $10
 815  8871 CC CB 88     	call z,Genera_disparo
 816  8874
 817  8874 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 818  8876 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 819  8878 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 820  887A CC C0 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 821  887D 3E F7        	ld a,$f7
 822  887F DB FE        	in a,($fe)
 823  8881 E6 01        	and $01
 824  8883 C8           	ret z
 825  8884
 826  8884 3E F7        	ld a,$f7
 827  8886 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 828  8888 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 829  888A CC A2 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 830  888D C9           	ret
 831  888E
 832  888E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 833  888E              ;
 834  888E              ;	Rutina provisional para que los malotes cagen balas.
 835  888E
 836  888E 3E 7F        Detecta_disparo_entidad ld a,$7f
 837  8890 DB FE        	in a,($fe)
 838  8892 E6 01        	and 1
 839  8894 C0           	ret nz
 840  8895 CD CB 88     	call Genera_disparo
 841  8898 C9           	ret
 842  8899
 843  8899              ; Pinta indicadores de FILAS. ------------------------------------------------------
 844  8899
 845  8899 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 846  889C
 847  889C              ; ----------
 848  889C 06 20        	ld b,32
 849  889E E5           2 push hl
 850  889F C5           	push bc
 851  88A0              ; ----------
 852  88A0
 853  88A0 06 BF        	ld b,$bf
 854  88A2 36 80        1 ld (hl),%10000000
 855  88A4 CD 68 8F     	call NextScan
 856  88A7 10 F9        	djnz 1B
 857  88A9
 858  88A9              ; ----------
 859  88A9 C1           	pop bc
 860  88AA E1           	pop hl
 861  88AB 2C           	inc l
 862  88AC 10 F0        	djnz 2B
 863  88AE              ; ----------
 864  88AE
 865  88AE 06 03        	ld b,3
 866  88B0 21 00 47         ld hl,$4700
 867  88B3 CD B9 88     3 call Bucle_1
 868  88B6 10 FB            djnz 3B
 869  88B8 C9               ret
 870  88B9
 871  88B9 C5           Bucle_1 push bc
 872  88BA E5                   push hl
 873  88BB D1                   pop de
 874  88BC 13                   inc de
 875  88BD 01 FF 00             ld bc,255
 876  88C0 36 FF                ld (hl),255
 877  88C2 ED B0                ldir
 878  88C4 23                   inc hl
 879  88C5 3E 07                ld a,7
 880  88C7 84                   add a,h
 881  88C8 67                   ld h,a
 882  88C9 C1                   pop bc
 883  88CA C9                   ret
 884  88CB
 885  88CB              ; ---------------------------------------------------------------
 886  88CB
 887  88CB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88CB              ; ******************************************************************************************************************************************************************************************
   2+ 88CB              ;
   3+ 88CB              ;   27/03/23
   4+ 88CB              ;
   5+ 88CB              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88CB              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88CB              ;
   8+ 88CB              ;
   9+ 88CB              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88CB              ;
  11+ 88CB              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88CB              ;               _ hacen las entidades hacia abajo.
  13+ 88CB              ;
  14+ 88CB              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88CB              ;
  16+ 88CB              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88CB              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88CB              ;
  19+ 88CB              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88CB              ;           _ la bala.
  21+ 88CB              ;
  22+ 88CB              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88CB              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88CB              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88CB              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88CB              ;           _ en el momento de generarse la bala)).
  27+ 88CB
  28+ 88CB              Genera_disparo
  29+ 88CB
  30+ 88CB              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88CB              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88CB              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88CB              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88CB              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88CB              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88CB              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88CB
  38+ 88CB              ; Exclusiones:
  39+ 88CB
  40+ 88CB 3A D2 85         ld a,(Columnas)
  41+ 88CE 47               ld b,a
  42+ 88CF 3A 9C 85         ld a,(Columns)
  43+ 88D2 B8               cp b
  44+ 88D3 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88D4
  46+ 88D4              ; ----- ----- -----
  47+ 88D4
  48+ 88D4 3A C9 85         ld a,(Ctrl_0)
  49+ 88D7 CB 77            bit 6,a
  50+ 88D9 20 08            jr nz,16F
  51+ 88DB
  52+ 88DB 3A A2 85         ld a,(Coordenada_y)
  53+ 88DE FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 88E0 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 88E1 18 11            jr 14F
  56+ 88E3
  57+ 88E3              ; ----- ----- -----
  58+ 88E3
  59+ 88E3              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 88E3
  61+ 88E3 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 88E6 CD A4 87         call Extrae_address
  63+ 88E9 24               inc h
  64+ 88EA 25               dec h
  65+ 88EB 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 88ED
  67+ 88ED 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 88F0 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 88F1 ED 52            sbc hl,de
  70+ 88F3 D0               ret nc
  71+ 88F4
  72+ 88F4              ; ----- ----- -----
  73+ 88F4
  74+ 88F4 21 00 80     14 ld hl,Indice_disparo
  75+ 88F7 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 88FA 4F               ld c,a
  77+ 88FB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 88FD              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 88FD              ;                                            ""        ""       "f9", B="1"
  80+ 88FD              ;                                            ""        ""       "fb", B="2"
  81+ 88FD              ;                                            ""        ""       "fb", B="3"
  82+ 88FD A7               and a
  83+ 88FE 28 10            jr z,1F
  84+ 8900 E6 01            and 1
  85+ 8902 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 8903
  87+ 8903 79               ld a,c
  88+ 8904 16 F9            ld d,$f9
  89+ 8906 23           2 inc hl
  90+ 8907 23               inc hl
  91+ 8908 04               inc b
  92+ 8909 BA               cp d
  93+ 890A 28 04            jr z,1F
  94+ 890C 14               inc d
  95+ 890D 14               inc d
  96+ 890E 18 F6            jr 2B
  97+ 8910
  98+ 8910 CD A4 87     1 call Extrae_address
  99+ 8913 E5               push hl
 100+ 8914 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 8916 DD 21 FB 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 891A
 103+ 891A              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 891A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 891A
 106+ 891A 3A AF 85     	ld a,(Cuad_objeto)
 107+ 891D FE 02            cp 2
 108+ 891F 38 64            jr c,3F
 109+ 8921 28 62            jr z,3F
 110+ 8923
 111+ 8923              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 8923
 113+ 8923 E6 01            and 1
 114+ 8925 28 2F            jr z,4F
 115+ 8927
 116+ 8927              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 8927              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 8927              ;
 119+ 8927              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 8927              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 8927              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 8927
 123+ 8927 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 892A
 125+ 892A              ;   Amadeus o entidad ???.
 126+ 892A
 127+ 892A 3A C9 85         ld a,(Ctrl_0)
 128+ 892D CB 77            bit 6,a
 129+ 892F 28 0D            jr z,8F
 130+ 8931
 131+ 8931              ; 	Dispara Amadeus.
 132+ 8931
 133+ 8931 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 8933 CD 77 8F         call PreviousScan
 135+ 8936 CD 77 8F         call PreviousScan
 136+ 8939
 137+ 8939              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 8939              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 8939              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 8939              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 8939
 142+ 8939 CD AF 89         call Ajusta_disparo_parte_izquierda
 143+ 893C 18 10            jr 10F
 144+ 893E
 145+ 893E              ; 	Dispara Entidad.
 146+ 893E
 147+ 893E 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 148+ 8940
 149+ 8940              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 8940              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 8940
 152+ 8940 C5               push bc
 153+ 8941 06 10            ld b,16
 154+ 8943 CD 68 8F     9 call NextScan
 155+ 8946 10 FB            djnz 9B
 156+ 8948 C1               pop bc
 157+ 8949
 158+ 8949              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 159+ 8949              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 160+ 8949              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 161+ 8949              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 162+ 8949
 163+ 8949 CD AF 89         call Ajusta_disparo_parte_izquierda
 164+ 894C 18 03            jr 17F
 165+ 894E
 166+ 894E CD 24 8A     10 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 8951              ;                                                     ; _al generar el disparo.
 168+ 8951
 169+ 8951              ; 	LLegados a este punto tendremos:
 170+ 8951              ;
 171+ 8951              ;       Puntero_objeto_disparo en IY.
 172+ 8951              ;       Rutinas_de_impresion en IX.
 173+ 8951              ;       Puntero_de_impresion en HL.
 174+ 8951              ;       Impacto/Dirección en BC.
 175+ 8951
 176+ 8951 CD B7 89     17 call Almacena_disparo
 177+ 8954 18 51            jr 6F                                             ; RET.
 178+ 8956
 179+ 8956
 180+ 8956              ; 	Estamos en el 4º cuadrante de pantalla.
 181+ 8956              ; 	4º CUAD. ----- ----- ----- ----- -----
 182+ 8956              ;
 183+ 8956              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 184+ 8956              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 185+ 8956              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 186+ 8956
 187+ 8956 2A 9D 85     4 ld hl,(Posicion_actual)
 188+ 8959
 189+ 8959              ;   Amadeus o entidad ???.
 190+ 8959
 191+ 8959 3A C9 85         ld a,(Ctrl_0)
 192+ 895C CB 77            bit 6,a
 193+ 895E 28 0D            jr z,11F
 194+ 8960
 195+ 8960              ; 	Dispara Amadeus.
 196+ 8960
 197+ 8960 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 198+ 8962 CD 77 8F         call PreviousScan
 199+ 8965 CD 77 8F         call PreviousScan
 200+ 8968
 201+ 8968              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 202+ 8968              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 203+ 8968              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 204+ 8968              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 205+ 8968
 206+ 8968 CD A8 89         call Ajusta_disparo_parte_derecha
 207+ 896B 18 10            jr 13F
 208+ 896D
 209+ 896D              ; 	Dispara Entidad.
 210+ 896D
 211+ 896D 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 212+ 896F
 213+ 896F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 214+ 896F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 215+ 896F
 216+ 896F C5               push bc
 217+ 8970
 218+ 8970 06 10            ld b,16
 219+ 8972 CD 68 8F     12 call NextScan
 220+ 8975 10 FB            djnz 12B
 221+ 8977
 222+ 8977 C1               pop bc
 223+ 8978
 224+ 8978              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 8978              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 8978              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 8978              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 8978
 229+ 8978 CD A8 89         call Ajusta_disparo_parte_derecha
 230+ 897B 18 03            jr 18F
 231+ 897D
 232+ 897D
 233+ 897D CD 24 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 234+ 8980              ;                                                     ; _al generar el disparo.
 235+ 8980
 236+ 8980              ; LLegados a este punto tendremos:
 237+ 8980              ;
 238+ 8980              ;       Puntero_objeto_disparo en IY.
 239+ 8980              ;       Rutinas_de_impresion en IX.
 240+ 8980              ;       Puntero_de_impresion en HL.
 241+ 8980              ;       Impacto/Dirección en BC.
 242+ 8980
 243+ 8980 CD B7 89     18 call Almacena_disparo
 244+ 8983 18 22            jr 6F                                             ; RET.
 245+ 8985
 246+ 8985              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 247+ 8985
 248+ 8985 28 11        3 jr z,5F
 249+ 8987
 250+ 8987              ; 	1er CUAD. ----- ----- ----- ----- -----
 251+ 8987              ;
 252+ 8987              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 253+ 8987              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 254+ 8987              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 255+ 8987              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 256+ 8987
 257+ 8987              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 258+ 8987              ;	   ""        ""       "f9", B="1"
 259+ 8987              ;	   ""        ""       "fb", B="2"
 260+ 8987              ; 	   ""        ""       "fb", B="3"
 261+ 8987
 262+ 8987 2A 9D 85     	ld hl,(Posicion_actual)
 263+ 898A CD 68 8F     	call NextScan
 264+ 898D
 265+ 898D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 266+ 898D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 267+ 898D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 268+ 898D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 269+ 898D
 270+ 898D CD AF 89         call Ajusta_disparo_parte_izquierda
 271+ 8990
 272+ 8990              ; 	No se produce impacto. B="$80"
 273+ 8990              ; 	Dirección del proyectil hacia abajo. C="$80"
 274+ 8990
 275+ 8990 01 80 80         ld bc,$8080
 276+ 8993
 277+ 8993              ; 	LLegados a este punto tendremos:
 278+ 8993              ;
 279+ 8993              ;       Puntero_objeto_disparo en IY.
 280+ 8993              ;       Rutinas_de_impresion en IX.
 281+ 8993              ;       Puntero_de_impresion en HL.
 282+ 8993              ;       Impacto/Dirección en BC.
 283+ 8993
 284+ 8993 CD B7 89         call Almacena_disparo
 285+ 8996 18 0F            jr 6F                                           ; RET.
 286+ 8998
 287+ 8998              ; 	Estamos en el 2º cuadrante de pantalla.
 288+ 8998              ; 	2º CUAD. ----- ----- ----- ----- -----
 289+ 8998              ;
 290+ 8998              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 291+ 8998              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 292+ 8998              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 293+ 8998              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 294+ 8998
 295+ 8998 2A 9D 85     5 ld hl,(Posicion_actual)
 296+ 899B CD 68 8F     	call NextScan
 297+ 899E
 298+ 899E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 299+ 899E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 300+ 899E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 301+ 899E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 302+ 899E
 303+ 899E CD A8 89         call Ajusta_disparo_parte_derecha
 304+ 89A1
 305+ 89A1              ; 	No se produce impacto. B="$80"
 306+ 89A1              ; 	Dirección del proyectil hacia abajo. C="80"
 307+ 89A1
 308+ 89A1 01 80 80     15 ld bc,$8080
 309+ 89A4
 310+ 89A4              ; 	LLegados a este punto tendremos:
 311+ 89A4              ;
 312+ 89A4              ;       Puntero_objeto_disparo en IY.
 313+ 89A4              ;       Rutinas_de_impresion en IX.
 314+ 89A4              ;       Puntero_de_impresion en HL.
 315+ 89A4              ;       Impacto/Dirección en BC.
 316+ 89A4
 317+ 89A4 CD B7 89         call Almacena_disparo
 318+ 89A7
 319+ 89A7 C9           6 ret
 320+ 89A8
 321+ 89A8              ; ----------------------------------------------------------------
 322+ 89A8              ;
 323+ 89A8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 324+ 89A8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 325+ 89A8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 326+ 89A8
 327+ 89A8 78           Ajusta_disparo_parte_derecha ld a,b
 328+ 89A9 FE 02            cp 2
 329+ 89AB 38 01            jr c,1F
 330+ 89AD 23               inc hl
 331+ 89AE C9           1 ret
 332+ 89AF
 333+ 89AF 78           Ajusta_disparo_parte_izquierda ld a,b
 334+ 89B0 FE 01        	cp 1
 335+ 89B2 20 01        	jr nz,1F
 336+ 89B4 2B           	dec hl
 337+ 89B5 2B           1 dec hl
 338+ 89B6 C9               ret
 339+ 89B7
 340+ 89B7              ; ----------------------------------------------------------------
 341+ 89B7              ;
 342+ 89B7              ;   25/02/23
 343+ 89B7              ;
 344+ 89B7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 345+ 89B7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 346+ 89B7
 347+ 89B7              Almacena_disparo
 348+ 89B7
 349+ 89B7 E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89B8 F1               pop af
 351+ 89B9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89BA
 353+ 89BA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89BB E6 01            and 1
 355+ 89BD 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89BF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89BF              ; 	Dispara AMADEUS.
 358+ 89BF
 359+ 89BF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89BF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89BF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89BF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89BF
 364+ 89BF C5               push bc
 365+ 89C0 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 89C3 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 89C6 A7               and a
 368+ 89C7 ED 42            sbc hl,bc
 369+ 89C9 CC 6D 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 89CC C1               pop bc
 371+ 89CD 28 54            jr z,4F
 372+ 89CF
 373+ 89CF 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 89D2 23               inc hl
 375+ 89D3 23               inc hl
 376+ 89D4 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 89D7              ;                                                   ; _ Disparo_(+1).
 378+ 89D7 18 18            jr 2F
 379+ 89D9
 380+ 89D9              ; Dispara una entidad.
 381+ 89D9
 382+ 89D9 C5           1 push bc
 383+ 89DA 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 89DD 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 89E0 A7               and a
 386+ 89E1 ED 42            sbc hl,bc
 387+ 89E3 CC 66 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 89E6 C1               pop bc
 389+ 89E7 28 3A            jr z,4F
 390+ 89E9
 391+ 89E9 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 89EC 23               inc hl
 393+ 89ED 23               inc hl
 394+ 89EE 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 89F1              ;                                                   ; _ Disparo_(+1).
 396+ 89F1 CD A4 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 89F4              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 89F4              ;
 399+ 89F4              ;                                                     Puntero_objeto_disparo en IY.
 400+ 89F4              ;                                                     Rutinas_de_impresion en IX.
 401+ 89F4              ;                                                     Puntero_de_impresion en HL.
 402+ 89F4              ;                                                     Impacto/Dirección en BC.
 403+ 89F4
 404+ 89F4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 89F5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 89F6 23               inc hl                                          ; _ al siguiente.
 407+ 89F7 A7               and a
 408+ 89F8 20 C0            jr nz,3B
 409+ 89FA
 410+ 89FA 08               ex af,af
 411+ 89FB ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 89FF F9               ld sp,hl
 413+ 8A00
 414+ 8A00 DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A02 F5               push af                                         ; Puntero de impresión.
 416+ 8A03 FD E5            push iy                                         ; Puntero objeto.
 417+ 8A05 C5               push bc                                         ; Control.
 418+ 8A06
 419+ 8A06 ED 7B DF 85      ld sp,(Stack)
 420+ 8A0A
 421+ 8A0A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A0A
 423+ 8A0A 21 D6 85     	ld hl,Ctrl_1
 424+ 8A0D CB C6        	set 0,(hl)
 425+ 8A0F
 426+ 8A0F DD E5        	push ix
 427+ 8A11 E1               pop hl
 428+ 8A12 F5               push af
 429+ 8A13 DD E1            pop ix
 430+ 8A15
 431+ 8A15 CD A0 7F     	call Guarda_foto_registros
 432+ 8A18
 433+ 8A18 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A1B CB 86        	res 0,(hl)
 435+ 8A1D
 436+ 8A1D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A1D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A1D
 439+ 8A1D CD 6D 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A20 CD 66 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A23
 442+ 8A23 C9           4 ret
 443+ 8A24
 444+ 8A24              ; ----------------------------------------------------------------
 445+ 8A24              ;
 446+ 8A24              ;   4/3/23
 447+ 8A24              ;
 448+ 8A24              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A24              ;   _ al generarse el disparo.
 450+ 8A24              ;
 451+ 8A24              ;       "$80" ..... No se produce colisión.
 452+ 8A24              ;       "$81" ..... Se produce colisión.
 453+ 8A24
 454+ 8A24              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A24              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A24
 457+ 8A24
 458+ 8A24 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A26 E5               push hl                                        ; Puntero de impresión.
 460+ 8A27 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A29 CD 40 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A2C E1               pop hl
 463+ 8A2D E5               push hl
 464+ 8A2E CD 68 8F         call NextScan
 465+ 8A31
 466+ 8A31 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 467+ 8A32 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 468+ 8A34 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 469+ 8A36              ;                                                  ; _ 2º scanline si esto es así.
 470+ 8A36 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 471+ 8A38 CD 40 8A         call Bucle_2
 472+ 8A3B
 473+ 8A3B 43           2 ld b,e
 474+ 8A3C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 475+ 8A3D FD E1            pop iy
 476+ 8A3F C9               ret
 477+ 8A40
 478+ 8A40               ; ---------- ----------
 479+ 8A40
 480+ 8A40 06 02        Bucle_2 ld b,2
 481+ 8A42 FD 7E 00     2 ld a,(iy)
 482+ 8A45 A6               and (hl)
 483+ 8A46 28 02            jr z,1F
 484+ 8A48 1E 81            ld e,$81
 485+ 8A4A 23           1 inc hl
 486+ 8A4B FD 23            inc iy
 487+ 8A4D 10 F3            djnz 2B
 488+ 8A4F C9               ret
 489+ 8A50
 490+ 8A50              ; -------------------------------------------------------------------------------------------------------------
 491+ 8A50              ;
 492+ 8A50              ;   11/04/23
 493+ 8A50              ;
 494+ 8A50              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 495+ 8A50              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 496+ 8A50              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 497+ 8A50              ;
 498+ 8A50              ;   MODIFICA: HL,DE,BC,A y AF´.
 499+ 8A50
 500+ 8A50              Compara_coordenadas_X
 501+ 8A50
 502+ 8A50              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 503+ 8A50
 504+ 8A50              ; Preparamos registros:
 505+ 8A50
 506+ 8A50 21 A1 85         ld hl,Filas+6
 507+ 8A53 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 508+ 8A54 23               inc hl
 509+ 8A55 23               inc hl
 510+ 8A56 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 511+ 8A57 43               ld b,e
 512+ 8A58 21 AF 85         ld hl,Filas+20
 513+ 8A5B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 514+ 8A5C 21 F0 85         ld hl,Coordenadas_X_Entidad
 515+ 8A5F CD 4D 8C         call Guarda_coordenadas_X
 516+ 8A62
 517+ 8A62              ; Preparamos registros:
 518+ 8A62
 519+ 8A62 21 7A 84         ld hl,Amadeus_db+6
 520+ 8A65 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 521+ 8A66 23               inc hl
 522+ 8A67 23               inc hl
 523+ 8A68 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 524+ 8A69 7B               ld a,e
 525+ 8A6A 08               ex af,af'
 526+ 8A6B 21 88 84         ld hl,Amadeus_db+20
 527+ 8A6E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 528+ 8A6F 21 ED 85         ld hl,Coordenadas_X_Amadeus
 529+ 8A72 CD 4D 8C         call Guarda_coordenadas_X
 530+ 8A75
 531+ 8A75              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 532+ 8A75              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 533+ 8A75
 534+ 8A75 04               inc b
 535+ 8A76 05               dec b
 536+ 8A77 28 04            jr z,1F
 537+ 8A79 06 03            ld b,3
 538+ 8A7B 18 02            jr 2F
 539+ 8A7D 06 02        1 ld b,2
 540+ 8A7F 08           2 ex af,af'
 541+ 8A80 3C               inc a
 542+ 8A81 3D               dec a
 543+ 8A82 28 04            jr z,5F
 544+ 8A84 0E 03            ld c,3
 545+ 8A86 18 02            jr 6F
 546+ 8A88 0E 02        5 ld c,2
 547+ 8A8A 79           6 ld a,c
 548+ 8A8B 08               ex af,af'
 549+ 8A8C 11 F0 85         ld de,Coordenadas_X_Entidad
 550+ 8A8F 1A           4 ld a,(de)
 551+ 8A90 21 ED 85         ld hl,Coordenadas_X_Amadeus
 552+ 8A93 BE           3 cp (hl)
 553+ 8A94 28 0B            jr z,7F
 554+ 8A96 23               inc hl
 555+ 8A97 0D               dec c
 556+ 8A98 20 F9            jr nz,3B
 557+ 8A9A 13               inc de
 558+ 8A9B 08               ex af,af'
 559+ 8A9C 4F               ld c,a
 560+ 8A9D 08               ex af,af'
 561+ 8A9E 10 EF            djnz 4B
 562+ 8AA0 C9           8 ret
 563+ 8AA1 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 564+ 8AA3 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 565+ 8AA6              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 566+ 8AA6 21 EC 85         ld hl,Impacto2
 567+ 8AA9 CB D6            set 2,(hl)
 568+ 8AAB 18 F3            jr 8B
 569+ 8AAD
 570+ 8AAD              ; -----------------------------------------------------------------------
 571+ 8AAD              ;
 572+ 8AAD              ;   11/04/23
 573+ 8AAD              ;
 574+ 8AAD
 575+ 8AAD              Detecta_colision_nave_entidad
 576+ 8AAD
 577+ 8AAD              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8AAD
 579+ 8AAD 2A 9D 85         ld hl,(Posicion_actual)
 580+ 8AB0 CD CD 8E         call Calcula_puntero_de_impresion
 581+ 8AB3
 582+ 8AB3              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 583+ 8AB3              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 584+ 8AB3
 585+ 8AB3
 586+ 8AB3              ;    jr $
 587+ 8AB3
 588+ 8AB3 DD E5            push ix
 589+ 8AB5 E1               pop hl
 590+ 8AB6 E5               push hl
 591+ 8AB7
 592+ 8AB7              ; ----- ----- -----
 593+ 8AB7 1E 00            ld e,0                                        ; Indica impacto.
 594+ 8AB9 06 0A            ld b,10
 595+ 8ABB CD D3 8A     2 call Bucle_3                                    ; Comprobamos el 1er scanline.
 596+ 8ABE 7B               ld a,e
 597+ 8ABF FE 05            cp 5
 598+ 8AC1 38 00            jr c,3F
 599+ 8AC3
 600+ 8AC3              ;    ld hl,Impacto2
 601+ 8AC3              ;    set 2,(hl)
 602+ 8AC3              ;    jr 1F
 603+ 8AC3
 604+ 8AC3 E1           3 pop hl
 605+ 8AC4 CD 68 8F         call NextScan
 606+ 8AC7 E5               push hl
 607+ 8AC8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 608+ 8AC9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 609+ 8ACB 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 610+ 8ACD 30 02            jr nc,1F
 611+ 8ACF              ;                                                  ; _ 2º scanline si esto es así.
 612+ 8ACF 10 EA            djnz 2B
 613+ 8AD1
 614+ 8AD1 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 615+ 8AD2 C9               ret
 616+ 8AD3
 617+ 8AD3               ; ---------- ----------
 618+ 8AD3
 619+ 8AD3 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 620+ 8AD4 3A 9C 85         ld a,(Columns)
 621+ 8AD7 47               ld b,a
 622+ 8AD8 FD 7E 00     2 ld a,(iy)
 623+ 8ADB BE               cp (hl)
 624+ 8ADC 28 01            jr z,1F
 625+ 8ADE
 626+ 8ADE 1C               inc e
 627+ 8ADF
 628+ 8ADF 23           1 inc hl
 629+ 8AE0 FD 23            inc iy
 630+ 8AE2 10 F4            djnz 2B
 631+ 8AE4 C1               pop bc
 632+ 8AE5 C9               ret
 633+ 8AE6
 634+ 8AE6              ; -------------------------------------------------------------------------------------------------------------
 635+ 8AE6              ;
 636+ 8AE6              ;   13/03/23
 637+ 8AE6              ;
 638+ 8AE6              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 639+ 8AE6              ;
 640+ 8AE6              ;   DESTRUYE: HL,BC,DE y A.
 641+ 8AE6
 642+ 8AE6 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 643+ 8AE9 7E               ld a,(hl)
 644+ 8AEA A7               and a
 645+ 8AEB C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 646+ 8AEC
 647+ 8AEC 44               ld b,h
 648+ 8AED 4D               ld c,l
 649+ 8AEE 2A E5 85         ld hl,(Stack_snapshot_disparos)
 650+ 8AF1 E5               push hl
 651+ 8AF2 A7               and a
 652+ 8AF3 ED 42            sbc hl,bc
 653+ 8AF5 E5               push hl
 654+ 8AF6 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 655+ 8AF7
 656+ 8AF7 E1               pop hl
 657+ 8AF8 54               ld d,h
 658+ 8AF9 5D               ld e,l
 659+ 8AFA 1B               dec de
 660+ 8AFB ED B8            lddr                                                ; Limpiamos.
 661+ 8AFD
 662+ 8AFD 21 60 70         ld hl,Album_de_fotos_disparos
 663+ 8B00 22 E5 85         ld (Stack_snapshot_disparos),hl
 664+ 8B03
 665+ 8B03 C9               ret
 666+ 8B04
 667+ 8B04              ; -------------------------------------------------------------------------------------------------------------
 668+ 8B04              ;
 669+ 8B04              ;   28/03/23
 670+ 8B04              ;
 671+ 8B04
 672+ 8B04 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 673+ 8B07 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 674+ 8B0A
 675+ 8B0A CD A4 87     2 call Extrae_address
 676+ 8B0D 7E               ld a,(hl)
 677+ 8B0E A7               and a
 678+ 8B0F 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 679+ 8B11
 680+ 8B11              ; ----- ----- ----- ----- ----- -----
 681+ 8B11
 682+ 8B11 C5               push bc
 683+ 8B12 CD C8 8B         call foto_disparo_a_borrar
 684+ 8B15
 685+ 8B15              ; Existe colisión con este disparo???
 686+ 8B15
 687+ 8B15 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 688+ 8B16 7E               ld a,(hl)
 689+ 8B17 2B               dec hl
 690+ 8B18 E6 01            and 1
 691+ 8B1A 28 0C            jr z,9F
 692+ 8B1C
 693+ 8B1C              ; Elimino el disparo de la base de datos.
 694+ 8B1C
 695+ 8B1C E5               push hl
 696+ 8B1D CD 42 8C         call Elimina_disparo_de_base_de_datos
 697+ 8B20 21 EC 85         ld hl,Impacto2
 698+ 8B23 CB C6            set 0,(hl)
 699+ 8B25 E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 700+ 8B26 18 06            jr 11F
 701+ 8B28
 702+ 8B28 CD F1 8B     9 call Mueve_disparo
 703+ 8B2B CD C8 8B         call foto_disparo_a_borrar
 704+ 8B2E
 705+ 8B2E C1           11 pop bc
 706+ 8B2F 18 04            jr 7F
 707+ 8B31
 708+ 8B31              ; ----- ----- ----- ----- ----- -----
 709+ 8B31
 710+ 8B31 ED 42        1 sbc hl,bc
 711+ 8B33 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 712+ 8B35
 713+ 8B35 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 714+ 8B38 23               inc hl
 715+ 8B39 23               inc hl
 716+ 8B3A 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 717+ 8B3D 18 CB            jr 2B
 718+ 8B3F
 719+ 8B3F CD 6D 87     3 call Inicia_Puntero_Disparo_Amadeus
 720+ 8B42 01 66 84         ld bc,Disparo_11
 721+ 8B45 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 722+ 8B48
 723+ 8B48 CD A4 87     5 call Extrae_address
 724+ 8B4B 7E               ld a,(hl)
 725+ 8B4C A7               and a
 726+ 8B4D 28 67            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 727+ 8B4F
 728+ 8B4F              ; ----- ----- ----- ----- ----- -----
 729+ 8B4F
 730+ 8B4F C5               push bc
 731+ 8B50 CD C8 8B         call foto_disparo_a_borrar
 732+ 8B53
 733+ 8B53              ; Existe colisión con este disparo???
 734+ 8B53
 735+ 8B53 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 736+ 8B54 7E               ld a,(hl)
 737+ 8B55 2B               dec hl
 738+ 8B56 E6 01            and 1
 739+ 8B58 28 53            jr z,10F
 740+ 8B5A
 741+ 8B5A              ; La colisión se produce con Amadeus???
 742+ 8B5A              ; Amadeus siempre tiene (Coordenada_y)="$16".
 743+ 8B5A
 744+ 8B5A 18 FE            jr $
 745+ 8B5C
 746+ 8B5C E5               push hl
 747+ 8B5D
 748+ 8B5D 06 04            ld b,4
 749+ 8B5F 23           16 inc hl
 750+ 8B60 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 751+ 8B62 CD A4 87         call Extrae_address
 752+ 8B65 CD 7F 95         call Genera_coordenadas_disparo
 753+ 8B68
 754+ 8B68 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 755+ 8B69 FE 16            cp $16
 756+ 8B6B 38 2E            jr c,15F
 757+ 8B6D
 758+ 8B6D              ; (Colisiones en filas 16 y 17).
 759+ 8B6D
 760+ 8B6D
 761+ 8B6D 18 FE            jr $
 762+ 8B6F
 763+ 8B6F
 764+ 8B6F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 765+ 8B70
 766+ 8B70              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 767+ 8B70
 768+ 8B70 21 7A 84         ld hl,Amadeus_db+6
 769+ 8B73 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 770+ 8B74 23               inc hl
 771+ 8B75 23               inc hl
 772+ 8B76 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 773+ 8B77 21 88 84         ld hl,Amadeus_db+20
 774+ 8B7A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 775+ 8B7B 21 ED 85         ld hl,Coordenadas_X_Amadeus
 776+ 8B7E CD 4D 8C         call Guarda_coordenadas_X
 777+ 8B81
 778+ 8B81 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 779+ 8B82
 780+ 8B82              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 781+ 8B82
 782+ 8B82
 783+ 8B82 18 FE            jr $
 784+ 8B84
 785+ 8B84 21 ED 85         ld hl,Coordenadas_X_Amadeus
 786+ 8B87 7E               ld a,(hl)
 787+ 8B88 BA           18 cp d
 788+ 8B89 20 03            jr nz,17F
 789+ 8B8B
 790+ 8B8B              ; Colisión Amadeus !!!!!!!!!!
 791+ 8B8B E1               pop hl
 792+ 8B8C 18 13            jr 14F
 793+ 8B8E
 794+ 8B8E 23           17 inc hl
 795+ 8B8F 7E               ld a,(hl)
 796+ 8B90 A7               and a
 797+ 8B91 F5               push af                                            ; No hay colisión con Amadeus.
 798+ 8B92 CC 77 8C         call z,Limpia_Coordenadas_X_Amadeus
 799+ 8B95 F1               pop af
 800+ 8B96 A7               and a
 801+ 8B97 28 02            jr z,15F                                           ; No hay colisión con Amadeus.
 802+ 8B99
 803+ 8B99 18 ED            jr 18B
 804+ 8B9B
 805+ 8B9B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 806+ 8B9B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 807+ 8B9B
 808+ 8B9B E1           15 pop hl
 809+ 8B9C 23               inc hl
 810+ 8B9D 35               dec (hl)
 811+ 8B9E 2B               dec hl
 812+ 8B9F 18 0C            jr 10F
 813+ 8BA1
 814+ 8BA1              ; -----------------------debug
 815+ 8BA1
 816+ 8BA1              ; Elimino el disparo de la base de datos.
 817+ 8BA1
 818+ 8BA1 E5           14 push hl
 819+ 8BA2 CD 42 8C         call Elimina_disparo_de_base_de_datos
 820+ 8BA5 21 EC 85         ld hl,Impacto2
 821+ 8BA8 CB CE            set 1,(hl)
 822+ 8BAA E1               pop hl
 823+ 8BAB 18 06            jr 12F
 824+ 8BAD
 825+ 8BAD CD F1 8B     10 call Mueve_disparo
 826+ 8BB0 CD C8 8B         call foto_disparo_a_borrar
 827+ 8BB3 C1           12 pop bc
 828+ 8BB4
 829+ 8BB4 18 04            jr 8F
 830+ 8BB6
 831+ 8BB6              ; ----- ----- ----- ----- ----- -----
 832+ 8BB6
 833+ 8BB6 ED 42        4 sbc hl,bc
 834+ 8BB8 28 0A            jr z,6F
 835+ 8BBA
 836+ 8BBA 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 837+ 8BBD 23               inc hl
 838+ 8BBE 23               inc hl
 839+ 8BBF 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 840+ 8BC2 18 84            jr 5B
 841+ 8BC4
 842+ 8BC4 CD 66 87     6 call Inicia_Puntero_Disparo_Entidades
 843+ 8BC7 C9               ret
 844+ 8BC8
 845+ 8BC8              ; ------------------------------------------------------------------
 846+ 8BC8
 847+ 8BC8              foto_disparo_a_borrar
 848+ 8BC8
 849+ 8BC8 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 850+ 8BC9 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 851+ 8BCA C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 852+ 8BCB
 853+ 8BCB E5               push hl
 854+ 8BCC 23               inc hl
 855+ 8BCD 23               inc hl
 856+ 8BCE ED 73 DF 85      ld (Stack),sp
 857+ 8BD2 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 858+ 8BD3 FD E1            pop iy
 859+ 8BD5 DD E1            pop ix
 860+ 8BD7 E1               pop hl
 861+ 8BD8 ED 7B DF 85      ld sp,(Stack)
 862+ 8BDC 3A D6 85         ld a,(Ctrl_1)
 863+ 8BDF CB C7            set 0,a
 864+ 8BE1 32 D6 85         ld (Ctrl_1),a
 865+ 8BE4 CD A0 7F         call Guarda_foto_registros
 866+ 8BE7 3A D6 85         ld a,(Ctrl_1)
 867+ 8BEA CB 87            res 0,a
 868+ 8BEC 32 D6 85         ld (Ctrl_1),a
 869+ 8BEF E1               pop hl
 870+ 8BF0 C9               ret
 871+ 8BF1
 872+ 8BF1 E5           Mueve_disparo push hl
 873+ 8BF2 7E               ld a,(hl)
 874+ 8BF3 06 04            ld b,4
 875+ 8BF5 23           1 inc hl
 876+ 8BF6 10 FD            djnz 1B
 877+ 8BF8
 878+ 8BF8              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 879+ 8BF8
 880+ 8BF8 CD A4 87         call Extrae_address
 881+ 8BFB
 882+ 8BFB E6 01            and 1
 883+ 8BFD 28 2A            jr z,2F
 884+ 8BFF
 885+ 8BFF              ; Disparo hacia arriba, (Amadeus).
 886+ 8BFF
 887+ 8BFF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 888+ 8BFF              ; _ de la dificultad.
 889+ 8BFF
 890+ 8BFF CD 77 8F         call PreviousScan
 891+ 8C02 CD 77 8F         call PreviousScan
 892+ 8C05 CD 77 8F         call PreviousScan
 893+ 8C08
 894+ 8C08              ; Detecta si el disparo de Amadeus sale de pantalla:
 895+ 8C08
 896+ 8C08 7C               ld a,h
 897+ 8C09 FE 40            cp $40
 898+ 8C0B 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 899+ 8C0D
 900+ 8C0D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 901+ 8C0D
 902+ 8C0D EB               ex de,hl
 903+ 8C0E 06 04            ld b,4
 904+ 8C10 2B           6 dec hl
 905+ 8C11 10 FD            djnz 6B
 906+ 8C13
 907+ 8C13 CD 42 8C         call Elimina_disparo_de_base_de_datos
 908+ 8C16
 909+ 8C16 18 0C            jr 4F
 910+ 8C18
 911+ 8C18              ; Se ha desplazado la bala, compruebo colisión.
 912+ 8C18
 913+ 8C18 D5           3 push de
 914+ 8C19 C5               push bc
 915+ 8C1A CD 24 8A         call Comprueba_Colision
 916+ 8C1D 78               ld a,b
 917+ 8C1E C1               pop bc
 918+ 8C1F D1               pop de
 919+ 8C20
 920+ 8C20 EB               ex de,hl
 921+ 8C21
 922+ 8C21 73               ld (hl),e
 923+ 8C22 23               inc hl
 924+ 8C23 72               ld (hl),d
 925+ 8C24
 926+ 8C24 E1           4 pop hl
 927+ 8C25 23               inc hl
 928+ 8C26 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 929+ 8C27 2B               dec hl
 930+ 8C28 C9               ret
 931+ 8C29
 932+ 8C29              ; Disparo hacia abajo, (Entidad).
 933+ 8C29
 934+ 8C29              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 935+ 8C29              ; _ de la dificultad.
 936+ 8C29
 937+ 8C29 CD 68 8F     2 call NextScan
 938+ 8C2C CD 68 8F         call NextScan
 939+ 8C2F CD 68 8F         call NextScan
 940+ 8C32
 941+ 8C32              ; Detecta si el disparo de la entidad sale de la pantalla.
 942+ 8C32
 943+ 8C32 7C               ld a,h
 944+ 8C33 FE 58            cp $58
 945+ 8C35 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 946+ 8C37
 947+ 8C37 EB               ex de,hl
 948+ 8C38 06 04            ld b,4
 949+ 8C3A 2B           5 dec hl
 950+ 8C3B 10 FD            djnz 5B
 951+ 8C3D
 952+ 8C3D CD 42 8C         call Elimina_disparo_de_base_de_datos
 953+ 8C40
 954+ 8C40 18 E2            jr 4B
 955+ 8C42
 956+ 8C42              ; HL apunta al primer byte de la base de datos del disparo.
 957+ 8C42 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 958+ 8C45 AF               xor a
 959+ 8C46 77               ld (hl),a
 960+ 8C47 54               ld d,h
 961+ 8C48 5D               ld e,l
 962+ 8C49 13               inc de
 963+ 8C4A ED B0            ldir
 964+ 8C4C C9               ret
 965+ 8C4D
 966+ 8C4D              ; -----------------------------------------------------------------
 967+ 8C4D              ;
 968+ 8C4D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 969+ 8C4D              ;
 970+ 8C4D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 971+ 8C4D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 972+ 8C4D              ;
 973+ 8C4D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 974+ 8C4D              ;
 975+ 8C4D              ;   INPUTS:
 976+ 8C4D              ;
 977+ 8C4D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 978+ 8C4D              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 979+ 8C4D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 980+ 8C4D
 981+ 8C4D              ;   MODIFICA: A, HL, DE y C
 982+ 8C4D
 983+ 8C4D 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 984+ 8C4E 79               ld a,c
 985+ 8C4F E6 01            and 1
 986+ 8C51 20 03            jr nz,1F
 987+ 8C53 14               inc d
 988+ 8C54 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 989+ 8C56
 990+ 8C56              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 991+ 8C56              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 992+ 8C56
 993+ 8C56 15           1 dec d
 994+ 8C57 23           2 inc hl
 995+ 8C58 72               ld (hl),d
 996+ 8C59
 997+ 8C59 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 998+ 8C5A A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 999+ 8C5B C8               ret z
1000+ 8C5C
1001+ 8C5C AF               xor a
1002+ 8C5D 5F               ld e,a
1003+ 8C5E 18 ED            jr Guarda_coordenadas_X
1004+ 8C60
1005+ 8C60              ; -----------------------------------------------------------------
1006+ 8C60              ;
1007+ 8C60              ;   12/04/23
1008+ 8C60              ;
1009+ 8C60
1010+ 8C60 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1011+ 8C63 FE 04            cp 4
1012+ 8C65 20 FE            jr nz,$
1013+ 8C67 CD AD 8A         call Detecta_colision_nave_entidad
1014+ 8C6A
1015+ 8C6A 7B               ld a,e
1016+ 8C6B C8               ret z
1017+ 8C6C FE 05            cp 5
1018+ 8C6E D8               ret c
1019+ 8C6F
1020+ 8C6F 21 B4 85         ld hl,Impacto
1021+ 8C72 36 01            ld (hl),1
1022+ 8C74 18 FE            jr $
1023+ 8C76
1024+ 8C76 C9               ret
1025+ 8C77
1026+ 8C77              ; -----------------------------------------------------------------
1027+ 8C77              ;
1028+ 8C77              ;   16/04/23
1029+ 8C77              ;
1030+ 8C77
1031+ 8C77 AF           Limpia_Coordenadas_X_Amadeus xor a
1032+ 8C78 06 03            ld b,3
1033+ 8C7A 21 ED 85         ld hl,Coordenadas_X_Amadeus
1034+ 8C7D 77           1 ld (hl),a
1035+ 8C7E 23               inc hl
1036+ 8C7F 10 FC            djnz 1B
1037+ 8C81 C9               ret
# file closed: Disparo.asm
 888  8C82              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C82              ; ******************************************************************************************************************************************************************************************
   2+ 8C82              ;
   3+ 8C82              ; 01/23
   4+ 8C82              ;
   5+ 8C82              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C82
   7+ 8C82 CD 5C 8F     Draw call Prepara_draw
   8+ 8C85 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C86 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C87 28 05        	jr z,2F
  11+ 8C89
  12+ 8C89 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C8C 18 0C        	jr 1F
  14+ 8C8E 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C91 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C94 CD 23 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C97              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C97 CD A2 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8C9A 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8C9D CB 6F        	bit 5,a
  21+ 8C9F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8CA1
  23+ 8CA1 CD B9 8C     	call Comprueba_limite_horizontal
  24+ 8CA4 CD 49 8D     	call Comprueba_limite_vertical
  25+ 8CA7
  26+ 8CA7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8CA7
  28+ 8CA7 CD 96 8E     3 call calcula_CColumnass
  29+ 8CAA CD CD 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CAD CD 22 8F     	call Define_rutina_de_impresion
  31+ 8CB0
  32+ 8CB0 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CB3 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CB5 32 C9 85     	ld (Ctrl_0),a
  35+ 8CB8
  36+ 8CB8 C9           	ret
  37+ 8CB9
  38+ 8CB9              ; *******************************************************************************************************************************************************************************************
  39+ 8CB9              ;	21/01/23
  40+ 8CB9              ;
  41+ 8CB9              ; 	Comprueba_limite_horizontal.
  42+ 8CB9              ;
  43+ 8CB9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CB9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CB9              ;
  46+ 8CB9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CB9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CB9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CB9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CB9
  51+ 8CB9
  52+ 8CB9
  53+ 8CB9 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CBC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CBE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CC0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CC2 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CC5 18 09            jr 6F
  59+ 8CC7 CB 5F        1 bit 3,a
  60+ 8CC9 28 0A            jr z,2F
  61+ 8CCB E6 F7            and $f7
  62+ 8CCD 32 C9 85         ld (Ctrl_0),a
  63+ 8CD0 CD 23 8E     6 call Inicializacion
  64+ 8CD3 18 5B            jr 5F
  65+ 8CD5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CD6
  67+ 8CD6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CD6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CD6
  70+ 8CD6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CD7 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CDA CD 28 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CDD 67           	ld h,a
  74+ 8CDE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CDF CD 28 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CE2 67           	ld h,a
  77+ 8CE3 A7           	and a
  78+ 8CE4 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CE6 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CE7 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CEA FE 02        	cp 2
  82+ 8CEC 38 1E        	jr c,3F
  83+ 8CEE 28 1C        	jr z,3F
  84+ 8CF0 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CF1 28 23            jr z,7F
  86+ 8CF3 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CF5 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CF7 E1           	pop hl
  89+ 8CF8
  90+ 8CF8              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CF8              ; _para indicar con E="2" en caso necesario.
  92+ 8CF8
  93+ 8CF8 E5               push hl
  94+ 8CF9 C5               push bc
  95+ 8CFA CD 28 92     	call calcula_tercio
  96+ 8CFD FE 01        	cp 1
  97+ 8CFF 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D01 CD 31 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D04 28 26            jr z,9F
 100+ 8D06 38 24            jr c,9F
 101+ 8D08 1E 00        11 ld e,0
 102+ 8D0A 18 22            jr 8F
 103+ 8D0C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D0D 28 07        	jr z, 7F
 105+ 8D0F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D11 1E 00         	ld e,0
 107+ 8D13 E1           	pop hl
 108+ 8D14 18 04        	jr 4F
 109+ 8D16 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D18 18 15            jr 10F
 111+ 8D1A
 112+ 8D1A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D1A              ; _para indicar con E="2" en caso necesario.
 114+ 8D1A
 115+ 8D1A E5           4 push hl
 116+ 8D1B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D1C CD 28 92     	call calcula_tercio
 118+ 8D1F FE 01        	cp 1
 119+ 8D21 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D23 CD 31 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D26 28 04            jr z,9F
 122+ 8D28 30 02            jr nc,9F
 123+ 8D2A 18 02        	jr 8F
 124+ 8D2C 1E 02        9 ld e,2
 125+ 8D2E C1           8 pop bc
 126+ 8D2F E1           10 pop hl
 127+ 8D30 C9           5 ret
 128+ 8D31
 129+ 8D31              ; --------------------
 130+ 8D31              ;
 131+ 8D31              ; 25/08/22
 132+ 8D31
 133+ 8D31 CD 28 92     Comprueba_centro call calcula_tercio
 134+ 8D34 67               ld h,a
 135+ 8D35 08           	ex af,af
 136+ 8D36 FE 02        	cp 2
 137+ 8D38 38 07        	jr c,1F
 138+ 8D3A 28 05        	jr z,1F
 139+ 8D3C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D3F 18 03        	jr 2F
 141+ 8D41 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D44 08           2 ex af,af
 143+ 8D45 A7               and a
 144+ 8D46 ED 42            sbc hl,bc
 145+ 8D48 C9               ret
 146+ 8D49
 147+ 8D49              ; *********************************************************************************************************************************************************************************************
 148+ 8D49              ;
 149+ 8D49              ;   16/8/22
 150+ 8D49              ;
 151+ 8D49              ;	Comprueba_limite_vertical
 152+ 8D49              ;
 153+ 8D49              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D49              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D49              ;
 156+ 8D49
 157+ 8D49 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D4C 7D           	ld a,l
 159+ 8D4D E6 1F        	and $1F
 160+ 8D4F 57           	ld d,a
 161+ 8D50 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D53 BA           	cp d 											; Límite - Posición.
 163+ 8D54 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D55 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D58 CB 47        	bit 0,a
 166+ 8D5A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D5C
 168+ 8D5C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D5C
 170+ 8D5C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D5D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D5F
 173+ 8D5F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D5F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D5F
 176+ 8D5F 3A A1 85         ld a,(Coordenada_X)
 177+ 8D62 16 0F            ld d,Centro_izquierda
 178+ 8D64 A7               and a
 179+ 8D65 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D66 28 1E            jr z,3F
 181+ 8D68 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D6A              ;                                                    ; _salimos sin modificar nada.
 183+ 8D6A 18 0E            jr 2F
 184+ 8D6C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D6D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D6F
 187+ 8D6F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D6F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D6F
 190+ 8D6F 3A A1 85         ld a,(Coordenada_X)
 191+ 8D72 16 10            ld d,Centro_derecha
 192+ 8D74 A7               and a
 193+ 8D75 92               sub d
 194+ 8D76 28 0E            jr z,3F
 195+ 8D78 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D7A              ;                                                    ; _salimos sin modificar nada.
 197+ 8D7A CB 43        2 bit 0,e
 198+ 8D7C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D7E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D7F CD 13 8E         call Modificaccionne
 201+ 8D82 C1           	pop bc
 202+ 8D83 CD 23 8E         call Inicializacion
 203+ 8D86 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D87
 205+ 8D87              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D87
 207+ 8D87 C5           4 push bc
 208+ 8D88 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D8B 0A           	ld a,(bc)
 210+ 8D8C 3D           	dec a
 211+ 8D8D 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D8E 7D           	ld a,l
 213+ 8D8F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D90 CB 47        	bit 0,a
 215+ 8D92 28 03        	jr z,5F
 216+ 8D94 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D95 18 2E        	jr 7F
 218+ 8D97
 219+ 8D97              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D97
 221+ 8D97 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D98 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D99 3A C9 85     	ld a,(Ctrl_0)
 224+ 8D9C CB 4F        	bit 1,a
 225+ 8D9E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8DA0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8DA1
 228+ 8DA1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8DA1
 230+ 8DA1 1C               inc e
 231+ 8DA2 1D               dec e
 232+ 8DA3 20 07            jr nz,12F
 233+ 8DA5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8DA6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8DA7 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DAA 18 44        13 jr 9F
 237+ 8DAC CB 43        12 bit 0,e
 238+ 8DAE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DB0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DB0 C1           	pop bc
 241+ 8DB1 18 D3        	jr 3B
 242+ 8DB3 80           14 add b
 243+ 8DB4 6F               ld l,a
 244+ 8DB5 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DB8 CD 13 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DBB 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DBD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DBF 32 C9 85         ld (Ctrl_0),a
 249+ 8DC2 F1           	pop af
 250+ 8DC3 18 2B        	jr 9F
 251+ 8DC5
 252+ 8DC5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DC5
 254+ 8DC5 F5           7 push af
 255+ 8DC6 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DC9 CB 47        	bit 0,a
 257+ 8DCB 20 1D        	jr nz,8F
 258+ 8DCD F1           	pop af
 259+ 8DCE
 260+ 8DCE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DCE
 262+ 8DCE 1C           	inc e
 263+ 8DCF 1D               dec e
 264+ 8DD0 20 07            jr nz,10F
 265+ 8DD2 90           	sub b
 266+ 8DD3 6F               ld l,a
 267+ 8DD4 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DD7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DD9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DD9 CB 43        10 bit 0,e
 271+ 8DDB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DDD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DDD C1           	pop bc
 274+ 8DDE 18 A6        	jr 3B
 275+ 8DE0 90           16 sub b
 276+ 8DE1 6F               ld l,a
 277+ 8DE2 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DE5 CD 13 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DE8 18 06            jr 9F
 280+ 8DEA E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DEC 32 C9 85         ld (Ctrl_0),a
 282+ 8DEF F1           	pop af
 283+ 8DF0 C1           9 pop bc
 284+ 8DF1 1E 00        	ld e,0
 285+ 8DF3 CD 23 8E         call Inicializacion
 286+ 8DF6 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DF7 08           	ex af,af
 288+ 8DF8 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DF9 18 8B            jr 3B
 290+ 8DFB
 291+ 8DFB              ; --------------------
 292+ 8DFB
 293+ 8DFB 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8DFD CD 77 8F     1 call PreviousScan
 295+ 8E00 10 FB            djnz 1B
 296+ 8E02 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E05 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E06 C9           	ret
 299+ 8E07
 300+ 8E07              ; --------------------
 301+ 8E07
 302+ 8E07 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E09 CD 68 8F     1 call NextScan
 304+ 8E0C 10 FB            djnz 1B
 305+ 8E0E 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E11 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E12 C9           	ret
 308+ 8E13
 309+ 8E13              ; --------------------
 310+ 8E13              ;
 311+ 8E13              ;	22/01/23
 312+ 8E13              ;
 313+ 8E13              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E13              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E13              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E13
 317+ 8E13
 318+ 8E13              Modificaccionne
 319+ 8E13
 320+ 8E13 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E16 FE 02        	cp 2
 322+ 8E18 CC FB 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E1B DC FB 8D         call c,Modifica_Pos_actual
 324+ 8E1E C8           	ret z
 325+ 8E1F CD 07 8E         call Modifica_Pos_actual2
 326+ 8E22 C9               ret
 327+ 8E23
 328+ 8E23              ; *************************************************************************************************************************************************************************************************
 329+ 8E23              ;
 330+ 8E23              ;	13/8/22
 331+ 8E23              ;
 332+ 8E23              ;	Inicializacion
 333+ 8E23              ;
 334+ 8E23              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E23              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E23              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E23              ;
 338+ 8E23              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E23              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E23              ;	_ desaparece/aparece.
 341+ 8E23
 342+ 8E23              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E23              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E23              ;
 345+ 8E23              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E23              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E23              ; 		   [E] ="0"
 348+ 8E23
 349+ 8E23              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E23
 351+ 8E23 CD 28 92     Inicializacion call calcula_tercio
 352+ 8E26 28 36        	jr z,primit
 353+ 8E28 E6 02        	and 2
 354+ 8E2A 20 07        	jr nz,segmit
 355+ 8E2C 7D           	ld a,l
 356+ 8E2D FE 7F        	cp $7f
 357+ 8E2F 38 2D        	jr c,primit
 358+ 8E31 28 2B        	jr z,primit
 359+ 8E33 CD 90 8E     segmit call column
 360+ 8E36 38 13        	jr c,tercuad
 361+ 8E38 3E 04        cuarcuad ld a,4
 362+ 8E3A 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E3D 21 20 48     	ld hl,$4820
 364+ 8E40 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E43 21 D5 85     	ld hl,Limite_vertical
 366+ 8E46 36 0D        	ld (hl),$0d
 367+ 8E48 08           	ex af,af
 368+ 8E49 18 3C        	jr 1F
 369+ 8E4B              tercuad
 370+ 8E4B 3E 03        	ld a,3
 371+ 8E4D 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E50 21 20 48     	ld hl,$4820
 373+ 8E53 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E56 21 D5 85     	ld hl,Limite_vertical
 375+ 8E59 36 12        	ld (hl),$12
 376+ 8E5B 08           	ex af,af
 377+ 8E5C 18 29        	jr 1F
 378+ 8E5E CD 90 8E     primit call column
 379+ 8E61 38 13        	jr c, primcuad
 380+ 8E63              segcuad
 381+ 8E63 3E 02        	ld a,2
 382+ 8E65 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E68 21 C0 4F     	ld hl,$4fc0
 384+ 8E6B 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E6E 21 D5 85     	ld hl,Limite_vertical
 386+ 8E71 36 0D        	ld (hl),$0d
 387+ 8E73 08           	ex af,af
 388+ 8E74 18 11        	jr 1F
 389+ 8E76              primcuad
 390+ 8E76 3E 01        	ld a,1
 391+ 8E78 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E7B 21 C0 4F     	ld hl,$4fc0
 393+ 8E7E 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E81 21 D5 85     	ld hl,Limite_vertical
 395+ 8E84 36 12        	ld (hl),$12
 396+ 8E86 08           	ex af,af
 397+ 8E87 CD 54 95     1 call Genera_coordenadas
 398+ 8E8A 21 C9 85     	ld hl,Ctrl_0
 399+ 8E8D CB EE        	set 5,(hl)
 400+ 8E8F C9           	ret
 401+ 8E90
 402+ 8E90              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E90
 404+ 8E90              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E90              ;
 406+ 8E90              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E90
 408+ 8E90 7D           column ld a,l
 409+ 8E91 E6 1F        	and $1f
 410+ 8E93 FE 10         	cp $10
 411+ 8E95 C9            	ret
 412+ 8E96
 413+ 8E96              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E96              ;
 415+ 8E96              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E96              ;
 417+ 8E96              ; 14/12/22
 418+ 8E96              ;
 419+ 8E96              ;	Modifica: A y BC.
 420+ 8E96
 421+ 8E96 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E99 E6 01        	and 1
 423+ 8E9B 28 17        	jr z,1F
 424+ 8E9D
 425+ 8E9D              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8E9D
 427+ 8E9D 3A A1 85     	ld a,(Coordenada_X)
 428+ 8EA0 47           	ld b,a
 429+ 8EA1 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8EA2 79           	ld a,c
 431+ 8EA3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8EA4 38 08        	jr c,2F
 433+ 8EA6 47           	ld b,a
 434+ 8EA7 79           	ld a,c
 435+ 8EA8 90           	sub b
 436+ 8EA9 32 D2 85     	ld (Columnas),a
 437+ 8EAC 18 1B        	jr 4F
 438+ 8EAE 79           2 ld a,c
 439+ 8EAF 32 D2 85     	ld (Columnas),a
 440+ 8EB2 18 15        	jr 4F
 441+ 8EB4
 442+ 8EB4              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EB4
 444+ 8EB4 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EB7 81           	add c
 446+ 8EB8 3D           	dec a
 447+ 8EB9 D6 1F        	sub $1f
 448+ 8EBB 38 08        	jr c,3F
 449+ 8EBD 47           	ld b,a
 450+ 8EBE 79           	ld a,c
 451+ 8EBF 90           	sub b
 452+ 8EC0 32 D2 85     	ld (Columnas),a
 453+ 8EC3 18 04        	jr 4F
 454+ 8EC5 79           3 ld a,c
 455+ 8EC6 32 D2 85     	ld (Columnas),a
 456+ 8EC9 D9           4 exx
 457+ 8ECA 4F           	ld c,a
 458+ 8ECB D9           	exx
 459+ 8ECC C9            ret
 460+ 8ECD
 461+ 8ECD              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8ECD              ;
 463+ 8ECD              ; 7/1/23
 464+ 8ECD              ;
 465+ 8ECD              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8ECD              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8ECD              ;
 468+ 8ECD              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8ECD              ;	DESTRUYE: HL,B Y A.
 470+ 8ECD
 471+ 8ECD 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8ED0 FE 02        	cp 2
 473+ 8ED2 38 18        	jr c,1F
 474+ 8ED4 28 16        	jr z,1F
 475+ 8ED6 E6 01        	and 1
 476+ 8ED8 28 0D        	jr z,3F
 477+ 8EDA
 478+ 8EDA              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8EDA
 480+ 8EDA CD 16 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8EDD
 482+ 8EDD 7D           9 ld a,l
 483+ 8EDE E6 1F        	and $1f
 484+ 8EE0 28 2A        	jr z,7F
 485+ 8EE2 2B           	dec hl
 486+ 8EE3 10 F8        	djnz 9B
 487+ 8EE5 18 25        	jr 7F
 488+ 8EE7
 489+ 8EE7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8EE7
 491+ 8EE7 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EEA 18 20        	jr 7F
 493+ 8EEC
 494+ 8EEC 28 14        1 jr z,2F
 495+ 8EEE
 496+ 8EEE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EEE
 498+ 8EEE CD 16 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EF1 7D           4 ld a,l
 500+ 8EF2 E6 1F        	and $1f
 501+ 8EF4 28 03        	jr z,6F
 502+ 8EF6 2B           	dec hl
 503+ 8EF7 10 F8        	djnz 4B
 504+ 8EF9 06 0F        6 ld b,15
 505+ 8EFB CD 77 8F     5 call PreviousScan
 506+ 8EFE 10 FB        	djnz 5B
 507+ 8F00 18 0A        	jr 7F
 508+ 8F02
 509+ 8F02              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F02
 511+ 8F02 CD 16 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F05 06 0F        	ld b,15
 513+ 8F07 CD 77 8F     8 call PreviousScan
 514+ 8F0A 10 FB        	djnz 8B
 515+ 8F0C
 516+ 8F0C E5           7 push hl
 517+ 8F0D DD E1        	pop ix
 518+ 8F0F
 519+ 8F0F 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F12 E5           	push hl
 521+ 8F13 FD E1        	pop iy
 522+ 8F15
 523+ 8F15 C9           	ret
 524+ 8F16
 525+ 8F16              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F16              ;
 527+ 8F16              ;	2/1/23
 528+ 8F16              ;
 529+ 8F16              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F16              ;
 531+ 8F16              ;	Tras esta rutina tenemos:
 532+ 8F16              ;
 533+ 8F16              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F16              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F16              ;
 536+ 8F16              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F16
 538+ 8F16 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F19 3A D2 85     	ld a,(Columnas)
 540+ 8F1C 3D           	dec a
 541+ 8F1D 20 01        	jr nz,1F
 542+ 8F1F 3C           	inc a
 543+ 8F20 47           1 ld b,a
 544+ 8F21 C9           	ret
 545+ 8F22
 546+ 8F22              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F22              ;
 548+ 8F22              ;	3/1/23
 549+ 8F22              ;
 550+ 8F22              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F22              ;
 552+ 8F22              ;	Destruye: A,B,HL y DE.
 553+ 8F22
 554+ 8F22              Define_rutina_de_impresion
 555+ 8F22
 556+ 8F22 3A 9C 85     	ld a,(Columns)
 557+ 8F25 47           	ld b,a
 558+ 8F26 3A D2 85     	ld a,(Columnas)
 559+ 8F29 B8           	cp b
 560+ 8F2A 20 0D        	jr nz,2f
 561+ 8F2C
 562+ 8F2C              ;	La entidad se imprime entera.
 563+ 8F2C
 564+ 8F2C 21 F8 8F     	ld hl, Indice_entidades_completas
 565+ 8F2F E6 01        	and 1
 566+ 8F31 28 02        	jr z,1F
 567+ 8F33
 568+ 8F33 23           	inc hl
 569+ 8F34 23           	inc hl
 570+ 8F35
 571+ 8F35 CD A4 87     1 call Extrae_address
 572+ 8F38 C9           	ret		;	ret
 573+ 8F39
 574+ 8F39              ;	La entidad no se imprime entera en pantalla.
 575+ 8F39
 576+ 8F39 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F3C E6 01        	and 1
 578+ 8F3E 28 17        	jr z,3F
 579+ 8F40
 580+ 8F40              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F40
 582+ 8F40 21 FC 8F     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F43 3A 9C 85     4 ld a,(Columns)
 584+ 8F46 E6 01        	and 1
 585+ 8F48 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F4A
 587+ 8F4A 23           	inc hl
 588+ 8F4B 23           	inc hl
 589+ 8F4C
 590+ 8F4C 3A D2 85     	ld a,(Columnas)
 591+ 8F4F E6 01        	and 1
 592+ 8F51 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F53
 594+ 8F53 23           	inc hl
 595+ 8F54 23           	inc hl
 596+ 8F55
 597+ 8F55 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F57
 599+ 8F57 21 02 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F5A 18 E7        	jr 4B
 601+ 8F5C
 602+ 8F5C              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F5C              ;
 604+ 8F5C              ;	Prepara_draw
 605+ 8F5C              ;
 606+ 8F5C              ;	Es una rutina de carga.
 607+ 8F5C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F5C              ;
 609+ 8F5C              ;	FUNCIONAMIENTO:
 610+ 8F5C              ;
 611+ 8F5C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F5C              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F5C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F5C              ;
 615+ 8F5C              ;	DESTRUYE:
 616+ 8F5C              ;
 617+ 8F5C              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F5C
 619+ 8F5C 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F5F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F60 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F61 4E           	ld c,(hl)
 623+ 8F62 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F65 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F67 C9           	ret
 626+ 8F68
 627+ 8F68              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F68              ;
 629+ 8F68              ;	5/08/22
 630+ 8F68              ;
 631+ 8F68              ;   NextScan.
 632+ 8F68              ;
 633+ 8F68              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F68              ;
 635+ 8F68              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F68              ;
 637+ 8F68              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F68              ;
 639+ 8F68              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F68              ;
 641+ 8F68              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F68              ;
 643+ 8F68
 644+ 8F68 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F69 7C               ld a,h
 646+ 8F6A E6 07            and 7
 647+ 8F6C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F6D
 649+ 8F6D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F6E C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F70 6F               ld l,a
 652+ 8F71 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F72
 654+ 8F72 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F73 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F75 67               ld h,a
 657+ 8F76 C9               ret
 658+ 8F77
 659+ 8F77              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F77              ;
 661+ 8F77              ;	5/08/22
 662+ 8F77              ;
 663+ 8F77              ;   PreviousScan.
 664+ 8F77              ;
 665+ 8F77              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F77              ;
 667+ 8F77              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F77              ;
 669+ 8F77              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F77              ;
 671+ 8F77              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F77              ;
 673+ 8F77              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F77              ;
 675+ 8F77
 676+ 8F77 7C           PreviousScan ld a,h
 677+ 8F78 25               dec h               ; Dec H.
 678+ 8F79 E6 07            and 7
 679+ 8F7B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F7C
 681+ 8F7C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F7D D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F7F 6F               ld l,a
 684+ 8F80 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F81
 686+ 8F81 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F82 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F84 67               ld h,a
 689+ 8F85 C9               ret
 690+ 8F86
 691+ 8F86              ; -----------------------------------------------------------------------------------
 692+ 8F86              ;
 693+ 8F86              ;	28/2/23
 694+ 8F86              ;
 695+ 8F86              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F86              ;	Extrae fotos de Album_de_fotos.
 697+ 8F86
 698+ 8F86 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F89 A7           	and a
 700+ 8F8A C8           	ret z
 701+ 8F8B ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F8F 31 00 70     	ld sp,Album_de_fotos
 703+ 8F92
 704+ 8F92 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F94 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F95 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F96
 708+ 8F96 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8F9A ED 7B DF 85  	ld sp,(Stack)
 710+ 8F9E
 711+ 8F9E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8F9E
 713+ 8F9E 3E CD        	ld a,$cd
 714+ 8FA0 32 A8 8F     	ld (Imprime),a
 715+ 8FA3 EB           	ex de,hl
 716+ 8FA4 22 A9 8F     	ld (Imprime+1),hl
 717+ 8FA7 EB           	ex de,hl
 718+ 8FA8
 719+ 8FA8              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8FA8
 721+ 8FA8 00 00 00     Imprime db 0,0,0
 722+ 8FAB
 723+ 8FAB 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FAE 3D           	dec a
 725+ 8FAF 28 09        	jr z,1F
 726+ 8FB1 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FB4
 728+ 8FB4 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FB8 18 D8        	jr 2B
 730+ 8FBA
 731+ 8FBA AF           1 xor a
 732+ 8FBB 32 E1 85     	ld (Stack_2),a
 733+ 8FBE C9           	ret
 734+ 8FBF
 735+ 8FBF              ; -----------------------------------------------------------------------------------
 736+ 8FBF              ;
 737+ 8FBF              ;	28/2/23
 738+ 8FBF              ;
 739+ 8FBF              ;	Pinta los disparos generados.
 740+ 8FBF
 741+ 8FBF              Extrae_foto_disparos
 742+ 8FBF
 743+ 8FBF 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FC2 A7           	and a
 745+ 8FC3 C8           	ret z
 746+ 8FC4 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FC8 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FCB
 749+ 8FCB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FCD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FCE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FCF
 753+ 8FCF ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FD3 ED 7B DF 85  	ld sp,(Stack)
 755+ 8FD7
 756+ 8FD7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FD7
 758+ 8FD7 3E CD        	ld a,$cd
 759+ 8FD9 32 E1 8F     	ld (Imprime2),a
 760+ 8FDC EB           	ex de,hl
 761+ 8FDD 22 E2 8F     	ld (Imprime2+1),hl
 762+ 8FE0 EB           	ex de,hl
 763+ 8FE1
 764+ 8FE1              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FE1
 766+ 8FE1 00 00 00     Imprime2 db 0,0,0
 767+ 8FE4
 768+ 8FE4 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FE7 3D           	dec a
 770+ 8FE8 28 09        	jr z,1F
 771+ 8FEA 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FED
 773+ 8FED ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FF1 18 D8        	jr 2B
 775+ 8FF3
 776+ 8FF3 AF           1 xor a
 777+ 8FF4 32 E1 85     	ld (Stack_2),a
 778+ 8FF7 C9           	ret
 779+ 8FF8
# file closed: Draw_XOR.asm
 889  8FF8              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FF8              ;   índices de Rutinas de impresión.
   2+ 8FF8
   3+ 8FF8 08 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 8FFA 35 90            defw Pinta_Amadeus_3x2
   5+ 8FFC
   6+ 8FFC 8B 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 8FFE 2B 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9000 DF 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9002
  10+ 9002 B5 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9004 B9 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9006 6D 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9008
  14+ 9008
  15+ 9008              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9008              ;
  17+ 9008              ;   12/12/22
  18+ 9008              ;
  19+ 9008              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9008              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9008              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9008              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9008              ;
  24+ 9008              ;   Modifica: DE y HL.
  25+ 9008
  26+ 9008 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 900C FD F9        	ld sp,iy
  28+ 900E 06 10            ld b,16
  29+ 9010 D1           1 pop de
  30+ 9011 7B               ld a,e
  31+ 9012 AE               xor (hl)
  32+ 9013 77           	ld (hl),a
  33+ 9014 23           	inc hl
  34+ 9015 7A               ld a,d
  35+ 9016 AE               xor (hl)
  36+ 9017 77           	ld (hl),a
  37+ 9018 2B           	dec hl
  38+ 9019 24           	inc h
  39+ 901A 7C               ld a,h
  40+ 901B E6 07            and 7
  41+ 901D 20 0A            jr nz,2F
  42+ 901F 7D               ld a,l
  43+ 9020 C6 20            add a,$20
  44+ 9022 6F               ld l,a
  45+ 9023 38 04            jr c,2F
  46+ 9025 7C               ld a,h
  47+ 9026 D6 08            sub 8
  48+ 9028 67               ld h,a
  49+ 9029 7C           2 ld a,h
  50+ 902A FE 58            cp $58
  51+ 902C 28 02            jr z,3F
  52+ 902E 10 E0            djnz 1B
  53+ 9030 ED 7B DF 85  3 ld sp,(Stack)
  54+ 9034 C9           	ret
  55+ 9035
  56+ 9035 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9039 FD F9        	ld sp,iy
  58+ 903B 06 08            ld b,8
  59+ 903D D1           1 pop de
  60+ 903E 7B               ld a,e
  61+ 903F AE               xor (hl)
  62+ 9040 77           	ld (hl),a
  63+ 9041 23           	inc hl
  64+ 9042 7A               ld a,d
  65+ 9043 AE               xor (hl)
  66+ 9044 77           	ld (hl),a
  67+ 9045 23           	inc hl
  68+ 9046 D1           	pop de
  69+ 9047 7B               ld a,e
  70+ 9048 AE               xor (hl)
  71+ 9049 77           	ld (hl),a
  72+ 904A 2B           	dec hl
  73+ 904B 2B           	dec hl
  74+ 904C 24           	inc h
  75+ 904D 7C               ld a,h
  76+ 904E E6 07            and 7
  77+ 9050 20 0A            jr nz,2F
  78+ 9052 7D               ld a,l
  79+ 9053 C6 20            add a,$20
  80+ 9055 6F               ld l,a
  81+ 9056 38 04            jr c,2F
  82+ 9058 7C               ld a,h
  83+ 9059 D6 08            sub 8
  84+ 905B 67               ld h,a
  85+ 905C 7C           2 ld a,h
  86+ 905D FE 58            cp $58
  87+ 905F 28 25            jr z,4F
  88+ 9061 7A               ld a,d
  89+ 9062 AE               xor (hl)
  90+ 9063 77               ld (hl),a
  91+ 9064 D1           	pop de
  92+ 9065 23           	inc hl
  93+ 9066 7B               ld a,e
  94+ 9067 AE               xor (hl)
  95+ 9068 77           	ld (hl),a
  96+ 9069 23           	inc hl
  97+ 906A 7A               ld a,d
  98+ 906B AE               xor (hl)
  99+ 906C 77           	ld (hl),a
 100+ 906D 2B           	dec hl
 101+ 906E 2B           	dec hl
 102+ 906F 24           	inc h
 103+ 9070 7C               ld a,h
 104+ 9071 E6 07            and 7
 105+ 9073 20 0A            jr nz,3F
 106+ 9075 7D               ld a,l
 107+ 9076 C6 20            add a,$20
 108+ 9078 6F               ld l,a
 109+ 9079 38 04            jr c,3F
 110+ 907B 7C               ld a,h
 111+ 907C D6 08            sub 8
 112+ 907E 67               ld h,a
 113+ 907F 7C           3 ld a,h
 114+ 9080 FE 58            cp $58
 115+ 9082 28 02            jr z,4F
 116+ 9084 10 B7            djnz 1B
 117+ 9086 ED 7B DF 85  4 ld sp,(Stack)
 118+ 908A C9           	ret
 119+ 908B
 120+ 908B              ; ---------------------------------------------------
 121+ 908B
 122+ 908B ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 908F FD F9        	ld sp,iy
 124+ 9091
 125+ 9091              ; >>>
 126+ 9091
 127+ 9091 06 10            ld b,16
 128+ 9093 D1           1 pop de
 129+ 9094 7A           	ld a,d
 130+ 9095 AE           	xor (hl)
 131+ 9096 77           	ld (hl),a
 132+ 9097 24           	inc h
 133+ 9098 7C               ld a,h
 134+ 9099 E6 07            and 7
 135+ 909B 20 0C            jr nz,2F
 136+ 909D 7D               ld a,l
 137+ 909E C6 20            add a,$20
 138+ 90A0 6F               ld l,a
 139+ 90A1 38 06            jr c,2F
 140+ 90A3 7C               ld a,h
 141+ 90A4 D6 08            sub 8
 142+ 90A6 67               ld h,a
 143+ 90A7 18 00            jr 2F
 144+ 90A9 7C           2 ld a,h
 145+ 90AA FE 58            cp $58
 146+ 90AC 28 02            jr z,3F
 147+ 90AE 10 E3            djnz 1B
 148+ 90B0 ED 7B DF 85  3 ld sp,(Stack)
 149+ 90B4 C9           	ret
 150+ 90B5
 151+ 90B5 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90B9 FD F9        	ld sp,iy
 153+ 90BB
 154+ 90BB              ; >>>
 155+ 90BB
 156+ 90BB 06 10            ld b,16
 157+ 90BD D1           1 pop de
 158+ 90BE 7B           	ld a,e
 159+ 90BF AE           	xor (hl)
 160+ 90C0 77           	ld (hl),a
 161+ 90C1 24           	inc h
 162+ 90C2 7C               ld a,h
 163+ 90C3 E6 07            and 7
 164+ 90C5 20 0C            jr nz,2F
 165+ 90C7 7D               ld a,l
 166+ 90C8 C6 20            add a,$20
 167+ 90CA 6F               ld l,a
 168+ 90CB 38 06            jr c,2F
 169+ 90CD 7C               ld a,h
 170+ 90CE D6 08            sub 8
 171+ 90D0 67               ld h,a
 172+ 90D1 18 00            jr 2F
 173+ 90D3 7C           2 ld a,h
 174+ 90D4 FE 58            cp $58
 175+ 90D6 28 02            jr z,3F
 176+ 90D8 10 E3            djnz 1B
 177+ 90DA ED 7B DF 85  3 ld sp,(Stack)
 178+ 90DE C9           	ret
 179+ 90DF
 180+ 90DF              ; ---------------------------------------------------
 181+ 90DF
 182+ 90DF ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90E3 FD F9        	ld sp,iy
 184+ 90E5 06 08            ld b,8
 185+ 90E7 D1           1 pop de
 186+ 90E8 7A           	ld a,d
 187+ 90E9 AE           	xor (hl)
 188+ 90EA 77           	ld (hl),a
 189+ 90EB 23           	inc hl
 190+ 90EC D1           	pop de
 191+ 90ED 7B           	ld a,e
 192+ 90EE AE           	xor (hl)
 193+ 90EF 77           	ld (hl),a
 194+ 90F0 2B           	dec hl
 195+ 90F1 24            	inc h
 196+ 90F2 7C               ld a,h
 197+ 90F3 E6 07            and 7
 198+ 90F5 20 0A            jr nz,2F
 199+ 90F7 7D               ld a,l
 200+ 90F8 C6 20            add a,$20
 201+ 90FA 6F               ld l,a
 202+ 90FB 38 04            jr c,2F
 203+ 90FD 7C               ld a,h
 204+ 90FE D6 08            sub 8
 205+ 9100 67               ld h,a
 206+ 9101 7C           2 ld a,h
 207+ 9102 FE 58            cp $58
 208+ 9104 28 20            jr z,4F
 209+ 9106 D1               pop de
 210+ 9107 7B           	ld a,e
 211+ 9108 AE           	xor (hl)
 212+ 9109 77           	ld (hl),a
 213+ 910A 23           	inc hl
 214+ 910B 7A           	ld a,d
 215+ 910C AE           	xor (hl)
 216+ 910D 77           	ld (hl),a
 217+ 910E 2B           	dec hl
 218+ 910F 24           	inc h
 219+ 9110 7C               ld a,h
 220+ 9111 E6 07            and 7
 221+ 9113 20 0A            jr nz,3F
 222+ 9115 7D               ld a,l
 223+ 9116 C6 20            add a,$20
 224+ 9118 6F               ld l,a
 225+ 9119 38 04            jr c,3F
 226+ 911B 7C               ld a,h
 227+ 911C D6 08            sub 8
 228+ 911E 67               ld h,a
 229+ 911F 7C           3 ld a,h
 230+ 9120 FE 58            cp $58
 231+ 9122 28 02            jr z,4F
 232+ 9124 10 C1            djnz 1B
 233+ 9126 ED 7B DF 85  4 ld sp,(Stack)
 234+ 912A C9           	ret
 235+ 912B
 236+ 912B ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 912F FD F9        	ld sp,iy
 238+ 9131 06 08            ld b,8
 239+ 9133 D1           1 pop de
 240+ 9134 D1           	pop de
 241+ 9135 7B           	ld a,e
 242+ 9136 AE           	xor (hl)
 243+ 9137 77           	ld (hl),a
 244+ 9138 24            	inc h
 245+ 9139 7C               ld a,h
 246+ 913A E6 07            and 7
 247+ 913C 20 0A            jr nz,2F
 248+ 913E 7D               ld a,l
 249+ 913F C6 20            add a,$20
 250+ 9141 6F               ld l,a
 251+ 9142 38 04            jr c,2F
 252+ 9144 7C               ld a,h
 253+ 9145 D6 08            sub 8
 254+ 9147 67               ld h,a
 255+ 9148 7C           2 ld a,h
 256+ 9149 FE 58            cp $58
 257+ 914B 28 1B            jr z,4F
 258+ 914D D1               pop de
 259+ 914E 7A           	ld a,d
 260+ 914F AE           	xor (hl)
 261+ 9150 77           	ld (hl),a
 262+ 9151 24           	inc h
 263+ 9152 7C               ld a,h
 264+ 9153 E6 07            and 7
 265+ 9155 20 0A            jr nz,3F
 266+ 9157 7D               ld a,l
 267+ 9158 C6 20            add a,$20
 268+ 915A 6F               ld l,a
 269+ 915B 38 04            jr c,3F
 270+ 915D 7C               ld a,h
 271+ 915E D6 08            sub 8
 272+ 9160 67               ld h,a
 273+ 9161 7C           3 ld a,h
 274+ 9162 FE 58            cp $58
 275+ 9164 28 02            jr z,4F
 276+ 9166 10 CB            djnz 1B
 277+ 9168 ED 7B DF 85  4 ld sp,(Stack)
 278+ 916C C9           	ret
 279+ 916D
 280+ 916D ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9171 FD F9        	ld sp,iy
 282+ 9173 06 08            ld b,8
 283+ 9175 D1           1 pop de
 284+ 9176 7B           	ld a,e
 285+ 9177 AE           	xor (hl)
 286+ 9178 77           	ld (hl),a
 287+ 9179 23           	inc hl
 288+ 917A 7A           	ld a,d
 289+ 917B AE           	xor (hl)
 290+ 917C 77           	ld (hl),a
 291+ 917D 2B           	dec hl
 292+ 917E 24             	inc h
 293+ 917F 7C               ld a,h
 294+ 9180 E6 07            and 7
 295+ 9182 20 0A            jr nz,2F
 296+ 9184 7D               ld a,l
 297+ 9185 C6 20            add a,$20
 298+ 9187 6F               ld l,a
 299+ 9188 38 04            jr c,2F
 300+ 918A 7C               ld a,h
 301+ 918B D6 08            sub 8
 302+ 918D 67               ld h,a
 303+ 918E 7C           2 ld a,h
 304+ 918F FE 58            cp $58
 305+ 9191 28 21            jr z,4F
 306+ 9193 D1               pop de
 307+ 9194 7A           	ld a,d
 308+ 9195 AE           	xor (hl)
 309+ 9196 77           	ld (hl),a
 310+ 9197 23           	inc hl
 311+ 9198 D1               pop de
 312+ 9199 7B           	ld a,e
 313+ 919A AE           	xor (hl)
 314+ 919B 77           	ld (hl),a
 315+ 919C 2B           	dec hl
 316+ 919D 24           	inc h
 317+ 919E 7C               ld a,h
 318+ 919F E6 07            and 7
 319+ 91A1 20 0A            jr nz,3F
 320+ 91A3 7D               ld a,l
 321+ 91A4 C6 20            add a,$20
 322+ 91A6 6F               ld l,a
 323+ 91A7 38 04            jr c,3F
 324+ 91A9 7C               ld a,h
 325+ 91AA D6 08            sub 8
 326+ 91AC 67               ld h,a
 327+ 91AD 7C           3 ld a,h
 328+ 91AE FE 58            cp $58
 329+ 91B0 28 02            jr z,4F
 330+ 91B2 10 C1            djnz 1B
 331+ 91B4 ED 7B DF 85  4 ld sp,(Stack)
 332+ 91B8 C9           	ret
 333+ 91B9
 334+ 91B9 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91BD FD F9        	ld sp,iy
 336+ 91BF 06 08            ld b,8
 337+ 91C1 D1           1 pop de
 338+ 91C2 7B           	ld a,e
 339+ 91C3 AE           	xor (hl)
 340+ 91C4 77           	ld (hl),a
 341+ 91C5 24            	inc h
 342+ 91C6 7C               ld a,h
 343+ 91C7 E6 07            and 7
 344+ 91C9 20 0A            jr nz,2F
 345+ 91CB 7D               ld a,l
 346+ 91CC C6 20            add a,$20
 347+ 91CE 6F               ld l,a
 348+ 91CF 38 04            jr c,2F
 349+ 91D1 7C               ld a,h
 350+ 91D2 D6 08            sub 8
 351+ 91D4 67               ld h,a
 352+ 91D5 7C           2 ld a,h
 353+ 91D6 FE 58            cp $58
 354+ 91D8 28 1C            jr z,4F
 355+ 91DA D1               pop de
 356+ 91DB 7A           	ld a,d
 357+ 91DC AE           	xor (hl)
 358+ 91DD 77           	ld (hl),a
 359+ 91DE 24           	inc h
 360+ 91DF 7C               ld a,h
 361+ 91E0 E6 07            and 7
 362+ 91E2 20 0A            jr nz,3F
 363+ 91E4 7D               ld a,l
 364+ 91E5 C6 20            add a,$20
 365+ 91E7 6F               ld l,a
 366+ 91E8 38 04            jr c,3F
 367+ 91EA 7C               ld a,h
 368+ 91EB D6 08            sub 8
 369+ 91ED 67               ld h,a
 370+ 91EE 7C           3 ld a,h
 371+ 91EF FE 58            cp $58
 372+ 91F1 28 03            jr z,4F
 373+ 91F3 D1               pop de
 374+ 91F4 10 CB            djnz 1B
 375+ 91F6 ED 7B DF 85  4 ld sp,(Stack)
 376+ 91FA C9           	ret
 377+ 91FB
 378+ 91FB              ; ---------------------------------------------------
 379+ 91FB              ;
 380+ 91FB              ;   27/02/23
 381+ 91FB              ;
 382+ 91FB              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 91FB              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 91FB              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 91FB
 386+ 91FB ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 91FF FD F9            ld sp,iy
 388+ 9201 06 02            ld b,2
 389+ 9203 D1           1 pop de
 390+ 9204 7B               ld a,e
 391+ 9205 AE               xor (hl)
 392+ 9206 77               ld (hl),a
 393+ 9207 23               inc hl
 394+ 9208 7A               ld a,d
 395+ 9209 AE               xor (hl)
 396+ 920A 77               ld (hl),a
 397+ 920B 2B               dec hl
 398+ 920C
 399+ 920C 24               inc h
 400+ 920D 7C               ld a,h
 401+ 920E E6 07            and 7
 402+ 9210 20 0A            jr nz,2F
 403+ 9212 7D               ld a,l
 404+ 9213 C6 20            add a,$20
 405+ 9215 6F               ld l,a
 406+ 9216 38 04            jr c,2F
 407+ 9218 7C               ld a,h
 408+ 9219 D6 08            sub 8
 409+ 921B 67               ld h,a
 410+ 921C 7C           2 ld a,h
 411+ 921D FE 58            cp $58
 412+ 921F 28 02            jr z,3F
 413+ 9221
 414+ 9221 10 E0            djnz 1B
 415+ 9223 ED 7B DF 85  3 ld sp,(Stack)
 416+ 9227 C9               ret
 417+ 9228
# file closed: Rutinas_de_impresion_sprites.asm
 890  9228              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9228              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9228              ;
   3+ 9228              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9228              ;
   5+ 9228              ; *****************************************************************************************************************************************************************************************
   6+ 9228              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9228
   8+ 9228 7C           calcula_tercio ld a,h
   9+ 9229 E6 18        	and $18
  10+ 922B CB 2F        	sra a
  11+ 922D CB 2F        	sra a
  12+ 922F CB 2F        	sra a
  13+ 9231 C9           	ret
  14+ 9232
# file closed: calcula_tercio.asm
 891  9232              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9232              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9232              ;
   3+ 9232              ;
   4+ 9232              ;	CLS.
   5+ 9232              ;
   6+ 9232              ;	Limpia la pantalla y define sus atributos.
   7+ 9232              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9232              ;
   9+ 9232              ;	COLORES: 0 ..... NEGRO
  10+ 9232              ;    		 1 ..... AZUL
  11+ 9232              ; 			 2 ..... ROJO
  12+ 9232              ;			 3 ..... MAGENTA
  13+ 9232              ; 			 4 ..... VERDE
  14+ 9232              ; 			 5 ..... CIAN
  15+ 9232              ;			 6 ..... AMARILLO
  16+ 9232              ; 			 7 ..... BLANCO
  17+ 9232              ;
  18+ 9232              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9232              ;
  20+ 9232              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9232
  22+ 9232
  23+ 9232 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9235 11 01 40     	LD DE,$4001
  25+ 9238 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 923B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 923D ED B0        	LDIR
  28+ 923F 01 FF 02     	LD BC,767
  29+ 9242 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9243 ED B0        	LDIR
  31+ 9245 C9           	ret
  32+ 9246
# file closed: Cls.asm
 892  9246              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9246              ; ******************************************************************************************************************************************************************************************
   2+ 9246              ;
   3+ 9246              ;   22/01/23
   4+ 9246              ;
   5+ 9246              ;	Mov_down
   6+ 9246              ;
   7+ 9246              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9246              ;
   9+ 9246              ;
  10+ 9246 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9249 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 924B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 924B              ; 																	; _ en el caso de que no lo haya.
  14+ 924B 3A B3 85     	ld a,(Vel_down)
  15+ 924E 47           	ld b,a
  16+ 924F 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9252 CD 28 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9255 E6 02        	and 2
  19+ 9257 28 0F        	jr z,1F
  20+ 9259
  21+ 9259              ; Nos encontramos en el último tercio de pantalla.
  22+ 9259              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9259
  24+ 9259 7C           	ld a,h
  25+ 925A FE 57        	cp $57
  26+ 925C 20 0A        	jr nz,1F
  27+ 925E 7D           	ld a,l
  28+ 925F C6 20        	add $20
  29+ 9261 30 05        	jr nc,1F
  30+ 9263
  31+ 9263              ; ------------------------------
  32+ 9263 CD 3E 95     	call Reaparece_arriba
  33+ 9266              ;	call Reinicio
  34+ 9266              ; ------------------------------
  35+ 9266
  36+ 9266 18 08        	jr 3F
  37+ 9268 CD 68 8F     1 call NextScan
  38+ 926B 22 9D 85     	ld (Posicion_actual),hl
  39+ 926E 10 E2            djnz 2B
  40+ 9270 CD 54 95     3 call Genera_coordenadas
  41+ 9273 C9           	ret
  42+ 9274
  43+ 9274              ; ******************************************************************************************************************************************************************************************
  44+ 9274              ;
  45+ 9274              ;   22/01/23
  46+ 9274              ;
  47+ 9274              ;	Mov_up
  48+ 9274              ;
  49+ 9274              ; 	Mueve el Sprite hacia arriba.
  50+ 9274              ;
  51+ 9274              ;
  52+ 9274 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9277 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9279              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9279              ; 																		; _ en el caso de que no lo haya.
  56+ 9279 3A B2 85     	ld a,(Vel_up)
  57+ 927C 47           	ld b,a
  58+ 927D 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9280 CD 28 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9283 A7           	and a
  61+ 9284 20 10        	jr nz,1F
  62+ 9286
  63+ 9286              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9286              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9286
  66+ 9286 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9287 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9289 20 0B            jr nz,1F
  69+ 928B 7D               ld a,l
  70+ 928C D6 20            sub $20
  71+ 928E 30 06            jr nc,1F
  72+ 9290 25               dec h
  73+ 9291
  74+ 9291              ; -----------------------------
  75+ 9291 CD 2E 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9294              ;	call Reinicio
  77+ 9294              ; -----------------------------
  78+ 9294
  79+ 9294 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9296 CD 77 8F     1 call PreviousScan
  81+ 9299 22 9D 85     	ld (Posicion_actual),hl
  82+ 929C 10 E2            djnz 3B
  83+ 929E CD 54 95     2 call Genera_coordenadas
  84+ 92A1 C9           	ret
  85+ 92A2
  86+ 92A2              ; ******************************************************************************************************************************************************************************************
  87+ 92A2              ;
  88+ 92A2              ;	19/10/22
  89+ 92A2              ;
  90+ 92A2              ;	Mov_right.
  91+ 92A2              ;
  92+ 92A2              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 92A2              ;
  94+ 92A2
  95+ 92A2 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 92A5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 92A7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 92A7              ; 																	; _ en el caso de que no lo haya.
  99+ 92A7 3A C9 85     	ld a,(Ctrl_0)
 100+ 92AA CB 77        	bit 6,a
 101+ 92AC 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92AE
 103+ 92AE CD DC 94     	call Stop_Amadeus_right
 104+ 92B1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92B2 18 4D        	jr 8F
 106+ 92B4
 107+ 92B4 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92B7 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92B9 20 46        	jr nz,8F
 110+ 92BB
 111+ 92BB 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92BE A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92BF 28 40        	jr z,8F
 114+ 92C1
 115+ 92C1              ; ---------- ---------- ----------
 116+ 92C1              ;
 117+ 92C1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92C1
 119+ 92C1 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92C4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92C6 28 11        	jr z,1F
 122+ 92C8 38 06        	jr c,6F
 123+ 92CA FE 04        	cp 4
 124+ 92CC 28 14        	jr z,7F
 125+ 92CE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92D0
 127+ 92D0              ; ---------- ---------- ----------
 128+ 92D0              ;
 129+ 92D0              ; Perfiles de velocidad
 130+ 92D0              ;
 131+ 92D0
 132+ 92D0 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92D3 FE FE        	cp $fe
 134+ 92D5 20 2A        	jr nz,8F
 135+ 92D7 18 10        	jr 3F
 136+ 92D9 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92DC FE FD        	cp $fd
 138+ 92DE 20 21        	jr nz,8F
 139+ 92E0 18 07        	jr 3F
 140+ 92E2 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92E5 FE FB        	cp $fb
 142+ 92E7 20 18        	jr nz,8F
 143+ 92E9
 144+ 92E9              ; ---------- ---------- ----------
 145+ 92E9
 146+ 92E9              3
 147+ 92E9 CD 1C 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92EC              ;	call Reinicio
 149+ 92EC
 150+ 92EC              ; ---------- ---------- ----------
 151+ 92EC              ;
 152+ 92EC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92EC
 154+ 92EC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92EE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92EF CD 08 93     	call DESPLZ_DER
 157+ 92F2 C1           	pop bc
 158+ 92F3 10 F9        	djnz 5B
 159+ 92F5 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92F8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92F9 22 9D 85     	ld (Posicion_actual),hl
 162+ 92FC CD 54 95     	call Genera_coordenadas
 163+ 92FF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9301
 165+ 9301              ; ---------- ---------- ----------
 166+ 9301
 167+ 9301 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 9304 CD 08 93     	call DESPLZ_DER
 169+ 9307 C9           2 ret
 170+ 9308
 171+ 9308              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9308              ;
 173+ 9308              ;	22/9/22
 174+ 9308              ;
 175+ 9308
 176+ 9308 CD 17 93     DESPLZ_DER call Desplaza_derecha
 177+ 930B CD 63 93         call modifica_parametros_1er_DESPLZ_2
 178+ 930E CD 8C 93         call Ciclo_completo
 179+ 9311 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9314 CB FE        	set 7,(hl)
 181+ 9316 C9           	ret
 182+ 9317
 183+ 9317              ; ******************************************************************************************************************************************************************************************
 184+ 9317              ;	15/02/23
 185+ 9317              ;
 186+ 9317
 187+ 9317 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 931A 47           	ld b,a
 189+ 931B 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 931E 23           1 inc hl
 191+ 931F 23           	inc hl
 192+ 9320 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9322 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9325 CD A4 87     	call Extrae_address
 195+ 9328 22 9F 85     	ld (Puntero_objeto),hl
 196+ 932B
 197+ 932B              ; Modifica (Puntero_DESPLZ_izq).
 198+ 932B
 199+ 932B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 932B              ; Cuántos movimientos hemos hecho ??
 201+ 932B              ; DE contiene (Puntero_DESPLZ_der).
 202+ 932B
 203+ 932B 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 932E EB           	ex de,hl
 205+ 932F A7           	and a
 206+ 9330 ED 52        	sbc hl,de
 207+ 9332 CB 3D        	srl l
 208+ 9334 3E 08        6 ld a,8
 209+ 9336 95           	sub l
 210+ 9337 30 1E        	jr nc,3F
 211+ 9339
 212+ 9339              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9339              ; B="0".
 214+ 9339
 215+ 9339 04           4 inc b
 216+ 933A 3C           	inc a
 217+ 933B 20 FC        	jr nz,4B
 218+ 933D 78           	ld a,b
 219+ 933E 08           	ex af,af
 220+ 933F 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9342 23           5 inc hl
 222+ 9343 23           	inc hl
 223+ 9344 10 FC        	djnz 5B
 224+ 9346 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9349 CD A4 87     	call Extrae_address
 226+ 934C 22 9F 85     	ld (Puntero_objeto),hl
 227+ 934F
 228+ 934F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 934F              ; _(Posicion_actual).
 230+ 934F
 231+ 934F 21 9D 85     	ld hl,Posicion_actual
 232+ 9352 34           	inc (hl)
 233+ 9353 08               ex af,af
 234+ 9354 6F           	ld l,a
 235+ 9355 18 DD        	jr 6B
 236+ 9357
 237+ 9357              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9357
 239+ 9357 47           3 ld b,a
 240+ 9358 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 935B 23           2 inc hl
 242+ 935C 23           	inc hl
 243+ 935D 10 FC        	djnz 2B
 244+ 935F 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9362 C9           8 ret
 246+ 9363
 247+ 9363              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9363              ;
 249+ 9363              ;	24/7/22
 250+ 9363              ;
 251+ 9363              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9363              ;
 253+ 9363              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9363              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9363              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9363
 257+ 9363 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9366 A7           	and a
 259+ 9367 20 1F        	jr nz,1F
 260+ 9369 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 936B 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 936E
 263+ 936E 21 9C 85     	ld hl,Columns
 264+ 9371 34           	inc (hl)
 265+ 9372 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9375 E6 01        	and 1
 267+ 9377 28 0F        	jr z,1F
 268+ 9379 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 937C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 937D 22 9D 85     	ld (Posicion_actual),hl
 271+ 9380 CD 54 95     	call Genera_coordenadas
 272+ 9383 CD E8 94     	call Inc_CTRL_DESPLZ
 273+ 9386 18 03        	jr 2F
 274+ 9388 CD E8 94     1 call Inc_CTRL_DESPLZ
 275+ 938B C9           2 ret
 276+ 938C
 277+ 938C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 938C              ;
 279+ 938C              ;	24/7/22
 280+ 938C              ;
 281+ 938C              ;	Ciclo_completo.
 282+ 938C              ;
 283+ 938C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 938C              ;
 285+ 938C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 938C              ; 	Decrementamos (Columns).
 287+ 938C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 938C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 938C
 290+ 938C
 291+ 938C 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 938F FE FF        	cp $ff
 293+ 9391 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9393 E6 F0        	and $f0
 295+ 9395 20 28        	jr nz,3F
 296+ 9397
 297+ 9397              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9397
 299+ 9397 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 939A 47           	ld b,a
 301+ 939B 3E F8        	ld a,$f8
 302+ 939D 80           	add b
 303+ 939E 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 93A1 18 1C        	jr 3F
 305+ 93A3 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 93A6 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 93A7 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 93A8 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93AB 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93AE E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93B0 20 0A        	jr nz,2F
 312+ 93B2 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93B5 23           	inc hl
 314+ 93B6 22 9D 85     	ld (Posicion_actual),hl
 315+ 93B9 CD 54 95     	call Genera_coordenadas
 316+ 93BC
 317+ 93BC              ; Inicia el puntero de Sprite.
 318+ 93BC
 319+ 93BC CD BB 87     2 call Inicia_puntero_objeto_der
 320+ 93BF C9           3 ret
 321+ 93C0
 322+ 93C0              ; ******************************************************************************************************************************************************************************************
 323+ 93C0              ;
 324+ 93C0              ;	15/02/23
 325+ 93C0              ;
 326+ 93C0              ;	Mov_left.
 327+ 93C0              ;
 328+ 93C0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93C0              ;
 330+ 93C0              Mov_left
 331+ 93C0
 332+ 93C0 21 C9 85     	ld hl,Ctrl_0
 333+ 93C3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93C5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93C5              ; 																	; _ en el caso de que no lo haya.
 336+ 93C5 3A C9 85     	ld a,(Ctrl_0)
 337+ 93C8 CB 77        	bit 6,a
 338+ 93CA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93CC
 340+ 93CC CD E2 94     	call Stop_Amadeus_left
 341+ 93CF C8           	ret z
 342+ 93D0 20 4A        	jr nz,8F
 343+ 93D2
 344+ 93D2 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93D5 A7           	and a
 346+ 93D6 20 44        	jr nz,8F
 347+ 93D8
 348+ 93D8 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93DB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93DC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93DE
 352+ 93DE              ; ---------- ---------- ----------
 353+ 93DE
 354+ 93DE 3A B0 85     	ld a,(Vel_left)
 355+ 93E1 FE 02        	cp 2
 356+ 93E3 28 0F        	jr z,1F
 357+ 93E5 38 04        	jr c,6F
 358+ 93E7 FE 04        	cp 4
 359+ 93E9 28 12        	jr z,7F
 360+ 93EB
 361+ 93EB              ; ---------- ---------- ----------
 362+ 93EB
 363+ 93EB 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93EE FE F8        	cp $f8
 365+ 93F0 20 2A        	jr nz,8F
 366+ 93F2 18 10        	jr 4F
 367+ 93F4 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93F7 FE F9        	cp $f9
 369+ 93F9 20 21        	jr nz,8F
 370+ 93FB 18 07        	jr 4F
 371+ 93FD 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 9400 FE FB        	cp $fb
 373+ 9402 20 18        	jr nz,8F
 374+ 9404
 375+ 9404              ; ---------- ---------- ----------
 376+ 9404
 377+ 9404              4
 378+ 9404 CD 0A 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9407              ;	call Reinicio
 380+ 9407
 381+ 9407              ; ---------- ---------- ----------
 382+ 9407
 383+ 9407 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9409 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 940A
 386+ 940A              ;	ld hl,(Indice_Sprite_izq)
 387+ 940A              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 940A
 389+ 940A CD 23 94     	call DESPLZ_IZQ
 390+ 940D C1           	pop bc
 391+ 940E 10 F9        	djnz 5B
 392+ 9410 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9413 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9414 22 9D 85     	ld (Posicion_actual),hl
 395+ 9417 CD 54 95     	call Genera_coordenadas
 396+ 941A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 941C
 398+ 941C              ; ---------- ---------- ----------
 399+ 941C
 400+ 941C              ; Movemos, no hay recolocación.
 401+ 941C
 402+ 941C 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 941F CD 23 94     	call DESPLZ_IZQ
 404+ 9422 C9           2 ret
 405+ 9423
 406+ 9423              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9423              ;
 408+ 9423              ;	22/9/22
 409+ 9423
 410+ 9423              DESPLZ_IZQ
 411+ 9423
 412+ 9423 CD 32 94     	call Desplaza_izquierda
 413+ 9426 CD 7E 94         call modifica_parametros_1er_DESPLZ
 414+ 9429 CD A6 94     	call Ciclo_completo_2
 415+ 942C 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 942F CB BE        	res 7,(hl)
 417+ 9431 C9           	ret
 418+ 9432
 419+ 9432              Desplaza_izquierda
 420+ 9432
 421+ 9432 3A B0 85     	ld a,(Vel_left)
 422+ 9435 47           	ld b,a
 423+ 9436 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9439 23           1 inc hl
 425+ 943A 23           	inc hl
 426+ 943B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 943D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9440 CD A4 87     	call Extrae_address
 429+ 9443 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9446
 431+ 9446              ; Modifica (Puntero_DESPLZ_der).
 432+ 9446
 433+ 9446              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9446              ; Cuántos movimientos hemos hecho ??
 435+ 9446              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9446
 437+ 9446 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9449 EB           	ex de,hl
 439+ 944A A7           	and a
 440+ 944B ED 52        	sbc hl,de
 441+ 944D CB 3D        	srl l
 442+ 944F 3E 08        6 ld a,8
 443+ 9451 95           	sub l
 444+ 9452 30 1E        	jr nc,3F
 445+ 9454
 446+ 9454              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9454              ; B="0".
 448+ 9454
 449+ 9454 04           4 inc b
 450+ 9455 3C           	inc a
 451+ 9456 20 FC        	jr nz,4B
 452+ 9458 78           	ld a,b
 453+ 9459 08           	ex af,af
 454+ 945A 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 945D 23           5 inc hl
 456+ 945E 23           	inc hl
 457+ 945F 10 FC        	djnz 5B
 458+ 9461 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9464 CD A4 87     	call Extrae_address
 460+ 9467 22 9F 85     	ld (Puntero_objeto),hl
 461+ 946A
 462+ 946A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 946A              ; _(Posicion_actual).
 464+ 946A
 465+ 946A 21 9D 85     	ld hl,Posicion_actual
 466+ 946D 35           	dec (hl)
 467+ 946E 08           	ex af,af
 468+ 946F 6F           	ld l,a
 469+ 9470 18 DD        	jr 6B
 470+ 9472
 471+ 9472              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9472
 473+ 9472 47           3 ld b,a
 474+ 9473 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9476 23           2 inc hl
 476+ 9477 23           	inc hl
 477+ 9478 10 FC        	djnz 2B
 478+ 947A 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 947D C9           8 ret
 480+ 947E
 481+ 947E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 947E              ;
 483+ 947E              ;	modifica_parametros_1er_DESPLZ
 484+ 947E              ;
 485+ 947E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 947E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 947E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 947E
 489+ 947E 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9481 A7           	and a
 491+ 9482 20 1E        	jr nz,1F
 492+ 9484 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9485 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9488 21 9C 85     	ld hl,Columns
 495+ 948B 34           	inc (hl)
 496+ 948C 3A AF 85     	ld a,(Cuad_objeto)
 497+ 948F E6 01        	and 1
 498+ 9491 20 0F        	jr nz,1F
 499+ 9493 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9496 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9497 22 9D 85     	ld (Posicion_actual),hl
 502+ 949A CD 54 95     	call Genera_coordenadas
 503+ 949D CD F9 94     	call Dec_CTRL_DESPLZ
 504+ 94A0 18 03        	jr 2F
 505+ 94A2 CD F9 94     1 call Dec_CTRL_DESPLZ
 506+ 94A5 C9           2 ret
 507+ 94A6
 508+ 94A6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 94A6
 510+ 94A6 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 94A9 FE F7        	cp $f7
 512+ 94AB 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94AD 30 2C        	jr nc,3F
 514+ 94AF
 515+ 94AF              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94AF
 517+ 94AF 06 00        	ld b,0
 518+ 94B1 04           4 inc b
 519+ 94B2 3C           	inc a
 520+ 94B3 FE F7        	cp $f7
 521+ 94B5 20 FA        	jr nz,4B
 522+ 94B7 3E FF        	ld a,$ff
 523+ 94B9 90           	sub b
 524+ 94BA 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94BD 18 1C        	jr 3F
 526+ 94BF
 527+ 94BF              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94BF
 529+ 94BF 21 9C 85     1 ld hl,Columns
 530+ 94C2 35           	dec (hl)
 531+ 94C3 AF           	xor a
 532+ 94C4 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94C7 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94CA E6 01        	and 1
 535+ 94CC 28 0A        	jr z,2F
 536+ 94CE 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94D1 2B           	dec hl
 538+ 94D2 22 9D 85     	ld (Posicion_actual),hl
 539+ 94D5 CD 54 95     	call Genera_coordenadas
 540+ 94D8
 541+ 94D8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94D8
 543+ 94D8 CD CE 87     2 call Inicia_puntero_objeto_izq
 544+ 94DB C9           3 ret
 545+ 94DC
 546+ 94DC              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94DC              ;
 548+ 94DC              ;	19/10/22
 549+ 94DC              ;
 550+ 94DC              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94DC              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94DC
 553+ 94DC 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94DF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94E1 C9           	ret
 556+ 94E2
 557+ 94E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94E2              ;
 559+ 94E2              ;	19/10/22
 560+ 94E2              ;
 561+ 94E2              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94E2              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94E2
 564+ 94E2 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94E5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94E7 C9           	ret
 567+ 94E8
 568+ 94E8              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94E8              ;
 570+ 94E8              ;	24/7/22
 571+ 94E8              ;
 572+ 94E8              ;	Inc_CTRL_DESPLZ
 573+ 94E8              ;
 574+ 94E8              ;
 575+ 94E8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94E8
 577+ 94E8 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94EB 3A B1 85     	ld a,(Vel_right)
 579+ 94EE A7           	and a
 580+ 94EF 28 06        	jr z,1F
 581+ 94F1 47           	ld b,a
 582+ 94F2 34           3 inc (hl)
 583+ 94F3 10 FD        	djnz 3B
 584+ 94F5 18 01        	jr 2F
 585+ 94F7 34           1 inc (hl)
 586+ 94F8 C9           2 ret
 587+ 94F9
 588+ 94F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94F9              ;
 590+ 94F9              ;	5/2/23
 591+ 94F9              ;
 592+ 94F9              ;	Dec_CTRL_DESPLZ
 593+ 94F9              ;
 594+ 94F9              ;
 595+ 94F9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94F9
 597+ 94F9 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 94FC 3A B0 85     	ld a,(Vel_left)
 599+ 94FF A7           	and a
 600+ 9500 28 06        	jr z,1F
 601+ 9502 47           	ld b,a
 602+ 9503 35           3 dec (hl)
 603+ 9504 10 FD        	djnz 3B
 604+ 9506 18 01        	jr 2F
 605+ 9508 35           1 dec (hl)
 606+ 9509 C9           2 ret
 607+ 950A
 608+ 950A              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 950A
 610+ 950A 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 950D 01 1F 00     	ld bc,31
 612+ 9510 A7           	and a
 613+ 9511 ED 4A        	adc hl,bc
 614+ 9513 22 9D 85     	ld (Posicion_actual),hl
 615+ 9516 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9519 CB C6        	set 0,(hl)
 617+ 951B C9           	ret
 618+ 951C
 619+ 951C              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 951C
 621+ 951C 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 951F 01 1F 00     	ld bc,31
 623+ 9522 A7           	and a
 624+ 9523 ED 42        	sbc hl,bc
 625+ 9525 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9528 21 C9 85     	ld hl,Ctrl_0
 627+ 952B CB CE        	set 1,(hl)
 628+ 952D C9           	ret
 629+ 952E
 630+ 952E              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 952E
 632+ 952E 24           Reaparece_abajo inc h
 633+ 952F 01 E0 17     	ld bc,$17e0
 634+ 9532 A7           	and a
 635+ 9533 ED 4A        	adc hl,bc
 636+ 9535 22 9D 85     	ld (Posicion_actual),hl
 637+ 9538 21 C9 85     	ld hl,Ctrl_0
 638+ 953B CB D6        	set 2,(hl)
 639+ 953D C9           	ret
 640+ 953E
 641+ 953E              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 953E
 643+ 953E 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9541 A7           	and a
 645+ 9542 ED 42        	sbc hl,bc
 646+ 9544 22 9D 85     	ld (Posicion_actual),hl
 647+ 9547 21 C9 85     	ld hl,Ctrl_0
 648+ 954A CB DE        	set 3,(hl)
 649+ 954C C9           	ret
 650+ 954D
 651+ 954D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 954D
 653+ 954D 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9550 22 9D 85     	ld (Posicion_actual),hl
 655+ 9553 C9           	ret
# file closed: Direcciones.asm
 893  9554              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9554              ; ------------------------------------------------------------------------
   2+ 9554              ;
   3+ 9554              ;	02/04/23
   4+ 9554              ;
   5+ 9554              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9554              ;	Fila superior "0", Columna izquierda "0".
   7+ 9554              ;
   8+ 9554              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9554              ;
  10+ 9554              ;	Modifica: A,BC y DE.
  11+ 9554
  12+ 9554 C5           Genera_coordenadas push bc
  13+ 9555 E5           	push hl
  14+ 9556 D5           	push de
  15+ 9557
  16+ 9557 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 955A
  18+ 955A 7D           	ld a,l
  19+ 955B E6 1F        	and $1f
  20+ 955D 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9560
  22+ 9560 CD 28 92     	call calcula_tercio
  23+ 9563 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9564
  25+ 9564 1E 00        	ld e,0
  26+ 9566 7D           	ld a,l
  27+ 9567 E6 E0        	and $e0
  28+ 9569 28 01        	jr z,1F
  29+ 956B 04           	inc b
  30+ 956C
  31+ 956C 04           1 inc b
  32+ 956D 05           	dec b
  33+ 956E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9570              ;														; _ , salimos.
  35+ 9570 1C           3 inc e
  36+ 9571 D6 20        	sub 32
  37+ 9573 20 FB        	jr nz,3B
  38+ 9575 10 F5        	djnz 1B
  39+ 9577
  40+ 9577 7B           2 ld a,e
  41+ 9578 32 A2 85     	ld (Coordenada_y),a
  42+ 957B
  43+ 957B D1           	pop de
  44+ 957C E1           	pop hl
  45+ 957D C1           	pop bc
  46+ 957E
  47+ 957E C9           	ret
  48+ 957F
  49+ 957F              ; ------------------------------------------------------------------------
  50+ 957F              ;	28/03/23
  51+ 957F              ;
  52+ 957F              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 957F              ;	Fila superior "0", Columna izquierda "0".
  54+ 957F              ;
  55+ 957F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 957F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 957F              ;
  58+ 957F              ;		DE="$120d"
  59+ 957F              ;
  60+ 957F              ;		D, (Coordenada_X), Columnas, $12
  61+ 957F              ;		E, (Coordenada_y), Filas, $0d
  62+ 957F              ;
  63+ 957F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 957F
  65+ 957F              ;	Modifica: A,BC y DE.
  66+ 957F
  67+ 957F
  68+ 957F              Genera_coordenadas_disparo
  69+ 957F
  70+ 957F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 957F
  72+ 957F 7D           	ld a,l
  73+ 9580 E6 1F        	and $1f
  74+ 9582 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9583 CD 28 92     	call calcula_tercio
  76+ 9586 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9587 1E 00        	ld e,0
  78+ 9589 7D           	ld a,l
  79+ 958A E6 E0        	and $e0
  80+ 958C 28 01        	jr z,1F
  81+ 958E 04           	inc b
  82+ 958F 1C           1 inc e
  83+ 9590 D6 20        	sub 32
  84+ 9592 20 FB        	jr nz,1B
  85+ 9594 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9596 C9           	ret
  87+ 9597
# file closed: Genera_coordenadas.asm
 894  9597              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9597
   2+ 9597
   3+ 9597              ;   11/8/22
   4+ 9597              ;
   5+ 9597              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9597              ;
   7+ 9597              ;   Mov_obj.asm
   8+ 9597              ;
   9+ 9597              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9597              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9597              ;
  12+ 9597              ;   Codificación:
  13+ 9597              ;
  14+ 9597              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9597
  16+ 9597              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9597
  18+ 9597 02 40 00     Arriba db 2,%01000000,0
  19+ 959A 02 80 00     Abajo db 2,%10000000,0
  20+ 959D 02 20 00     Derecha db 2,%00100000,0
  21+ 95A0 02 10 00     Izquierda db 2,%00010000,0
  22+ 95A3 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 95A7 60 42 60 40
  22+ 95AB 63
  23+ 95AC 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95B0 22 A3 80 A0
  24+ 95B4 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95B8 84 A0 83 A0
  25+ 95BC 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95C0 80 A3 22 A0
  26+ 95C4 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95C8 40 60 42 60
  27+ 95CC 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95D0
  29+ 95D0 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95D4 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95D8 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95DC 84 00
  32+ 95DE 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95E2 84 00
  33+ 95E4 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95E8 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95EC 1F 1F 1F 1F
  35+ 95F0 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95F4 1F 1F 1F 1F
  35+ 95F8 1F
  36+ 95F9 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 95FD 2F 2F 2F 2F
  36+ 9601 2F 2F
  37+ 9603 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9607 2F 2F 00
  38+ 960A
  39+ 960A              ; ----- ----- ----- ----- -----
  40+ 960A
  41+ 960A E8 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 960C E4 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 960E A0 95        Indice_mov_Izquierda defw Izquierda
  44+ 9610 9D 95        Indice_mov_Derecha defw Derecha
  45+ 9612 9A 95        Indice_mov_Abajo defw Abajo
  46+ 9614 97 95        Indice_mov_Arriba defw Arriba
  47+ 9616 D4 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9618 D8 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 961A D0 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 961C DE 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 961E A3 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9620              ; ----- ----- ----- ----- -----
  53+ 9620
  54+ 9620 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9623 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9624 28 02            jr z,1F
  57+ 9626 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9628 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 962B C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 962D 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9630              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9630 2A CD 85         ld hl,(Puntero_mov)
  63+ 9633 7E               ld a,(hl)
  64+ 9634 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9637 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9638 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 963B
  68+ 963B 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 963E A7               and a
  70+ 963F 20 0C            jr nz,12F
  71+ 9641 2A CD 85         ld hl,(Puntero_mov)
  72+ 9644 7E               ld a,(hl)
  73+ 9645 A7               and a
  74+ 9646 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9648 E6 0F            and $0f
  76+ 964A 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 964D              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 964D 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9650 CB 7E            bit 7,(hl)
  80+ 9652 28 03            jr z,2F
  81+ 9654 CD 46 92         call Mov_down
  82+ 9657 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 965A CB 76            bit 6,(hl)
  84+ 965C 28 03            jr z,3F
  85+ 965E CD 74 92         call Mov_up
  86+ 9661 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9664 CB 6E            bit 5,(hl)
  88+ 9666 28 03            jr z,4F
  89+ 9668 CD A2 92         call Mov_right
  90+ 966B 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 966E CB 66            bit 4,(hl)
  92+ 9670 28 03            jr z,5F
  93+ 9672 CD C0 93         call Mov_left
  94+ 9675
  95+ 9675              ; ---------- --------- --------- ---------- ----------
  96+ 9675
  97+ 9675 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9678 A7               and a
  99+ 9679 28 07            jr z,6F
 100+ 967B 3D               dec a
 101+ 967C 32 D1 85         ld (Repetimos_db),a
 102+ 967F 28 01            jr z,6f
 103+ 9681 C9           11 ret
 104+ 9682 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9685 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9686 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9689 23               inc hl
 108+ 968A 22 CD 85         ld (Puntero_mov),hl
 109+ 968D 18 F2            jr 11B
 110+ 968F 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9692 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9695 47               ld b,a
 113+ 9696 23           8 inc hl
 114+ 9697 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9699 5E               ld e,(hl)
 116+ 969A 23               inc hl
 117+ 969B 56               ld d,(hl)
 118+ 969C EB               ex de,hl
 119+ 969D 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 96A0 18 DF            jr 11B
 121+ 96A2
 122+ 96A2              ; ---------- --------- --------- ---------- ----------
 123+ 96A2              ;
 124+ 96A2              ;   11/8/22
 125+ 96A2              ;
 126+ 96A2              ;   Prepara_Puntero_mov
 127+ 96A2
 128+ 96A2 E5           Prepara_Puntero_mov push hl
 129+ 96A3 D5               push de
 130+ 96A4 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 96A7 5E               ld e,(hl)
 132+ 96A8 23               inc hl
 133+ 96A9 56               ld d,(hl)
 134+ 96AA EB               ex de,hl
 135+ 96AB 22 CD 85         ld (Puntero_mov),hl
 136+ 96AE D1               pop de
 137+ 96AF E1               pop hl
 138+ 96B0 C9               ret
 139+ 96B1
 140+ 96B1              ; ---------- --------- --------- ---------- ----------
 141+ 96B1              ;
 142+ 96B1              ;   11/8/22
 143+ 96B1              ;
 144+ 96B1              ;   Reinicia_el_movimiento
 145+ 96B1
 146+ 96B1 CD A2 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96B4 AF               xor a
 148+ 96B5 32 CF 85         ld (Contador_db_mov),a
 149+ 96B8 32 D0 85         ld (Incrementa_puntero),a
 150+ 96BB C3 20 96         jp Movimiento
 151+ 96BE C9               ret
 152+ 96BF              ; ---------- --------- --------- ---------- ----------
 153+ 96BF
 154+ 96BF
 155+ 96BF
 156+ 96BF
 157+ 96BF
 158+ 96BF
 159+ 96BF
 160+ 96BF
 161+ 96BF
 162+ 96BF
 163+ 96BF
 164+ 96BF
 165+ 96BF
 166+ 96BF
 167+ 96BF
 168+ 96BF
 169+ 96BF
 170+ 96BF
# file closed: Patrones_de_mov.asm
 895  96BF              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96BF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96BF              ;
   3+ 96BF              ;	3/1/23
   4+ 96BF              ;
   5+ 96BF              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96BF
   7+ 96BF              ;	ADC HL,SP	LD (addr),SP
   8+ 96BF              ;	ADD HL,SP	LD SP,(addr)
   9+ 96BF              ;	ADD IX,SP	LD SP,nn
  10+ 96BF              ; 	ADD IY,SP	LD SP,HL
  11+ 96BF              ;				LD SP,IX
  12+ 96BF              ;	DEC SP		LD SP,IY
  13+ 96BF
  14+ 96BF              ;	EX (SP),HL
  15+ 96BF              ;	EX (SP),IX
  16+ 96BF              ;	EX (SP),IY
  17+ 96BF
  18+ 96BF              ;	INC SP
  19+ 96BF
  20+ 96BF
  21+ 96BF                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 896  7FD4
 897  7FD4              	SAVESNA "Pruebas.sna", START
 898  7FD4
 899  7FD4
 900  7FD4
# file closed: Banco_de_pruebas.asm
