# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E5 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A ED 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 03        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20
  41  AA20              ;	call Borra_sprites
  42  AA20
  43  AA20 CD BE 81     	call Pinta_Sprites
  44  AA23              ;	call Extrae_Scanlines_album
  45  AA23
  46  AA23              ;	ld a,6
  47  AA23              ;	out ($fe),a
  48  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  49  AA23
  50  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  51  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  52  AA23
  53  AA23              ;	ld a,7
  54  AA23              ;	out ($fe),a												; Borde blanco.
  55  AA23              ;	call Guarda_parametros_DRAW
  56  AA23              ;	call Restore_Amadeus
  57  AA23
  58  AA23              ; Posible colisión Entidad-Amadeus ???
  59  AA23
  60  AA23              ;	ld a,(Impacto2)
  61  AA23              ;	bit 2,a
  62  AA23              ;	jr z,1F
  63  AA23
  64  AA23              ;	call Detecta_colision_nave_entidad
  65  AA23
  66  AA23              ;1 ld a,4
  67  AA23              ;	out ($fe),a
  68  AA23              ;	call Gestiona_Amadeus
  69  AA23
  70  AA23              ;	ld a,7
  71  AA23              ;	out ($fe),a											; Borde blanco.
  72  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA23
  75  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA23
  77  AA23              ;	call Recupera_parametros_DRAW
  78  AA23
  79  AA23 CD FC 8B     1 call Actualiza_relojes
  80  AA26
  81  AA26 21 ED 89     	ld hl,Ctrl_3
  82  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  83  AA2B
  84  AA2B FD E1        	pop iy
  85  AA2D DD E1        	pop ix
  86  AA2F F1           	pop af
  87  AA30 C1           	pop bc
  88  AA31 D1           	pop de
  89  AA32 E1           	pop hl
  90  AA33 D9           	exx
  91  AA34 C1           	pop bc
  92  AA35 D1           	pop de
  93  AA36 E1           	pop hl
  94  AA37 08           	ex af,af'
  95  AA38 F1           	pop af
  96  AA39 08           	ex af,af'
  97  AA3A D9           	exx
  98  AA3B
  99  AA3B ED 7B E5 89  	ld sp,(Stack_3)
 100  AA3F
 101  AA3F FB           	ei
 102  AA40
 103  AA40 3E 01        	ld a,1												; Borde azul.
 104  AA42 D3 FE        	out ($fe),a
 105  AA44
 106  AA44 C9           	ret
 107  AA45
 108  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 109  AA45
 110  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 30 83        	defw Badsat_der_f8
  97+ 82F4 60 83        	defw Badsat_der_f9
  98+ 82F6 90 83        	defw Badsat_der_fa
  99+ 82F8 C0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 105+ 8303 28 40 00     	DEFB    $28,$40,$00
 106+ 8306 54 40 00     	DEFB	$54,$40,$00
 107+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 108+ 830C 55 40 00     	DEFB	$55,$40,$00
 109+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 110+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 111+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 112+ 8318 07 50 00     	DEFB	$07,$50,$00
 113+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 114+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 115+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 116+ 8324 06 55 00     	DEFB	$06,$55,$00
 117+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 118+ 832A 00 14 00     	DEFB	$00,$14,$00
 119+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 120+ 8330
 121+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 121+ 8334 20 00 2A 20
 122+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 122+ 833C 2A A0 00 15
 123+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 123+ 8344 00 03 60 00
 124+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 124+ 834C F4 00 0B EA
 125+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 125+ 8354 03 2A 80 00
 126+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 126+ 835C 00 00 04 00
 127+ 8360
 128+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 128+ 8364 10 00 15 10
 129+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 129+ 836C 15 50 00 0A
 130+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 130+ 8374 80 01 B0 00
 131+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 131+ 837C FA 00 05 F5
 132+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 132+ 8384 01 95 40 00
 133+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 133+ 838C 00 00 02 00
 134+ 8390
 135+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 135+ 8394 08 00 0A 88
 136+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 136+ 839C 0A A8 00 05
 137+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 137+ 83A4 C0 00 D8 00
 138+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 138+ 83AC FD 00 02 FA
 139+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 139+ 83B4 00 CA A0 00
 140+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 140+ 83BC 80 00 01 00
 141+ 83C0
 142+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 142+ 83C4 84 00 05 44
 143+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 143+ 83CC 05 54 00 02
 144+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 144+ 83D4 E0 00 6C 00
 145+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 145+ 83DC FE 80 01 7D
 146+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 146+ 83E4 00 65 50 00
 147+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 147+ 83EC 40 00 00 80
 148+ 83F0
 149+ 83F0              	org $8400
 150+ 8400
 151+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 151+ 8404 42 00 02 A2
 152+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 152+ 840C 02 AA 00 01
 153+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 153+ 8414 F0 00 36 00
 154+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 154+ 841C FF 40 00 BE
 155+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 155+ 8424 00 32 A8 00
 156+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 156+ 842C A0 00 00 40
 157+ 8430
 158+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 158+ 8434 A1 00 01 51
 159+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 159+ 843C 01 55 00 00
 160+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 160+ 8444 F8 00 1B 00
 161+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 161+ 844C FF A0 00 1F
 162+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 162+ 8454 00 09 54 00
 163+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 163+ 845C 50 00 00 20
 164+ 8460
 165+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 165+ 8464 50 80 00 A8
 166+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 166+ 846C 00 AA 80 00
 167+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 167+ 8474 FC 00 0D 80
 168+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 168+ 847C FF D0 00 0F
 169+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 169+ 8484 00 04 AA 00
 170+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 170+ 848C 28 00 00 10
 171+ 8490
 172+ 8490              ; ----------------------------------------------------------------------------------------
 173+ 8490
 174+ 8490              ; Amadeus. 2x2.
 175+ 8490
 176+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 177+ 8492 00 00        	defw 0
 178+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 179+ 8496 00 00        	defw 0
 180+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 181+ 849A 00 00        	defw 0
 182+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 183+ 849E 00 00        	defw 0	 								; (Fín de índice).
 184+ 84A0
 185+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 186+ 84A2 00 00        	defw 0
 187+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 188+ 84A6 00 00        	defw 0
 189+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 190+ 84AA 00 00        	defw 0
 191+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 192+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 193+ 84B0
 194+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 194+ 84B4 26 64 24 24
 195+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 195+ 84BC 6F F6 67 E6
 196+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 196+ 84C4 F7 EF FF FF
 197+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 197+ 84CC 8B D1 71 8E
 198+ 84D0
 199+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 199+ 84D4 F1 00 09 99
 200+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 200+ 84DC 0B 0D 00 1B
 201+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 201+ 84E4 80 19 F9 80
 202+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 202+ 84EC F3 C0 3D FB
 203+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 203+ 84F4 3E F7 C0 3E
 204+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 204+ 84FC 40 1C 63 80
 205+ 8500
 206+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 206+ 8504 3C 40 02 66
 207+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 207+ 850C 02 C3 40 06
 208+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 208+ 8514 60 06 7E 60
 209+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 209+ 851C 3C F0 0F 7E
 210+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 210+ 8524 0F BD F0 0F
 211+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 211+ 852C 10 07 18 E0
 212+ 8530
 213+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 213+ 8534 8F 10 00 99
 214+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 214+ 853C 00 B0 D0 01
 215+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 215+ 8544 D8 01 9F 98
 216+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 216+ 854C CF 3C 03 DF
 217+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 217+ 8554 03 EF 7C 03
 218+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 218+ 855C 44 01 C6 38
 219+ 8560
 220+ 8560              ; ----------------------------------------------------------------------------------------
 221+ 8560
 222+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 223+ 8562 96 85        	defw Explosion_2x3_2
 224+ 8564 C6 85        	defw Explosion_2x3_3
 225+ 8566
 226+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 226+ 856A 10 00 04 38
 227+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 227+ 8572 02 E6 80 01
 228+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 228+ 857A 00 03 DD 80
 229+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 229+ 8582 3B 80 01 9D
 230+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 230+ 858A 02 FD 80 03
 231+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 231+ 8592 00 08 00 00
 232+ 8596
 233+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 233+ 859A 38 10 03 BC
 234+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 234+ 85A2 04 06 C0 00
 235+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 235+ 85AA 00 03 DD 80
 236+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 236+ 85B2 3A 70 01 9C
 237+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 237+ 85BA 04 F8 80 06
 238+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 238+ 85C2 00 00 00 00
 239+ 85C6
 240+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 240+ 85CA 00 20 08 00
 241+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 241+ 85D2 00 06 00 00
 242+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 242+ 85DA 00 00 14 30
 243+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 243+ 85E2 38 00 01 08
 244+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 244+ 85EA 00 80 00 04
 245+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 245+ 85F2 10 08 00 20
 246+ 85F6
 247+ 85F6              ; ------------------------------------------
 248+ 85F6
 249+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 250+ 85F8 20 86        	defw Explosion_2x2_2
 251+ 85FA 40 86        	defw Explosion_2x2_3
 252+ 85FC
 253+ 85FC              	org $8600
 254+ 8600
 255+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 255+ 8604 43 84 37 D8
 256+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 256+ 860C 17 F0 3D D8
 257+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 257+ 8614 19 D0 1F 60
 258+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 258+ 861C 40 00 80 00
 259+ 8620
 260+ 8620
 261+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 261+ 8624 3B C2 60 0C
 262+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 262+ 862C 07 F0 3D D8
 263+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 263+ 8634 19 C6 1F 64
 264+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 264+ 863C 80 00 00 00
 265+ 8640
 266+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 266+ 8644 88 04 10 0C
 267+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 267+ 864C 81 E0 01 43
 268+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 268+ 8654 10 80 18 00
 269+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 269+ 865C 60 01 80 02
 270+ 8660
 271+ 8660
 272+ 8660
 273+ 8660
 274+ 8660
# file closed: Sprites_e_indices.asm
 111  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 112  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 113  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
  24+ 898A              ; 13/03/24
  25+ 898A
  26+ 898A              Indice_de_albumes_de_lineas
  27+ 898A
  28+ 898A 00 80        	defw Scanlines_album
  29+ 898C 19 81        	defw Scanlines_album_2
# file closed: Niveles.asm
 114  898E
 115  898E              ; ******************************************************************************************************************************************************************************************
 116  898E              ; Constantes.
 117  898E              ; ******************************************************************************************************************************************************************************************
 118  898E              ;
 119  898E              ; 09/03/24
 120  898E
 121  898E              ;
 122  898E              ; Constantes.
 123  898E              ;
 124  898E
 125  898E              Sprite_vacio equ $eae0
 126  898E
 127  898E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 128  898E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 129  898E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 130  898E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 131  898E
 132  898E              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 133  898E              ;Almacen_de_scanlines_masticados equ $e900
 134  898E              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 135  898E              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 136  898E              ;
 137  898E              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 138  898E
 139  898E              ;                                                       ;	35 bytes por entidad.
 140  898E              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 141  898E              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 142  898E              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 143  898E              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 144  898E
 145  898E              Scanlines_album_2 equ $8119    ;    (8119h - 8231h)
 146  898E
 147  898E              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 148  898E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 149  898E              ;														; 55 Bytes.
 150  898E
 151  898E              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 152  898E
 153  898E              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 154  898E
 155  898E
 156  898E              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 157  898E
 158  898E              ; ******************************************************************************************************************************************************************************************
 159  898E              ; Variables.
 160  898E              ; ******************************************************************************************************************************************************************************************
 161  898E              ;
 162  898E              ; 18/01/24
 163  898E              ;
 164  898E              ; Variables de DRAW. (Motor principal).	42 Bytes.
 165  898E              ;
 166  898E
 167  898E              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 168  898E
 169  898E 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 170  898F              ;															- Patrón de movimiento.
 171  898F              ;															- Aspecto
 172  898F 00           Filas db 0												; Filas. [DRAW]
 173  8990 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 174  8991 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 175  8993 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 176  8995 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 177  8996 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 178  8997
 179  8997              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 180  8997
 181  8997 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 182  8998              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 183  8998              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 184  8998 00           Attr db 0												; Atributos de la entidad:
 185  8999
 186  8999              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 187  8999              ;
 188  8999              ;	COLORES: 0 ..... NEGRO
 189  8999              ;    		 1 ..... AZUL
 190  8999              ; 			 2 ..... ROJO
 191  8999              ;			 3 ..... MAGENTA
 192  8999              ; 			 4 ..... VERDE
 193  8999              ; 			 5 ..... CIAN
 194  8999              ;			 6 ..... AMARILLO
 195  8999              ; 			 7 ..... BLANCO
 196  8999
 197  8999 00 00        Indice_Sprite_der defw 0
 198  899B 00 00        Indice_Sprite_izq defw 0
 199  899D 00 00        Puntero_DESPLZ_der defw 0
 200  899F 00 00        Puntero_DESPLZ_izq defw 0
 201  89A1
 202  89A1 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 203  89A3 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 204  89A4
 205  89A4              ; Variables de objeto. (Características).
 206  89A4
 207  89A4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 208  89A5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 209  89A5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 210  89A5 00 00 00...  Variables_de_borrado ds 6
 211  89AB
 212  89AB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 213  89AD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 214  89AD
 215  89AD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 216  89AF
 217  89AF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 218  89AF              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 219  89AF
 220  89AF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 221  89B1              ;														; _palabras que componen el "movimiento_masticado".
 222  89B1
 223  89B1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 224  89B1
 225  89B1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 226  89B2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 227  89B2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 228  89B2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 229  89B2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 230  89B2              ;
 231  89B2              ; 														DESCRIPCIÖN:
 232  89B2              ;
 233  89B2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 234  89B2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 235  89B2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 236  89B2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 237  89B2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 238  89B2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 239  89B2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 240  89B2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 241  89B2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 242  89B2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 243  89B2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 244  89B2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 245  89B2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 246  89B2              ;
 247  89B2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 248  89B2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 249  89B2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 250  89B2
 251  89B2              ; Variables de funcionamiento. [DRAW].
 252  89B2
 253  89B2 00           Columnas db 0
 254  89B3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 255  89B5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 256  89B5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 257  89B6
 258  89B6              ; variables de control general.
 259  89B6
 260  89B6 00           Ctrl_2 db 0
 261  89B7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 262  89B7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 263  89B7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 264  89B7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 265  89B7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 266  89B7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 267  89B7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 268  89B7              ;
 269  89B7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 270  89B7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 271  89B7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 272  89B7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 273  89B7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 274  89B7              ;														BIT 4, ???
 275  89B7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 276  89B7
 277  89B7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  89B8
 279  89B8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 280  89B8
 281  89B8              ;					         		---------;      ;---------
 282  89B8
 283  89B8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 284  89B8
 285  89B8              Perfiles_de_velocidad
 286  89B8
 287  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 288  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 289  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 290  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 291  89BC
 292  89BC              ; Contadores de 16 bits.
 293  89BC
 294  89BC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 295  89BE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 296  89C0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 297  89C2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 298  89C4
 299  89C4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 300  89C4
 301  89C4              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 302  89C4              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 303  89C4              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 304  89C4
 305  89C4              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 306  89C4
 307  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 308  89C6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 309  89C8 00 00        Puntero_indice_mov_bucle defw 0							;
 310  89CA              ;
 311  89CA              ;
 312  89CA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 313  89CB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 314  89CB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 315  89CB 00           Incrementa_puntero_backup db 0
 316  89CC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 317  89CD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 318  89CD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 319  89CE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 320  89CF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 321  89D0              ;
 322  89D0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 323  89D0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 324  89D0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 325  89D0              ;
 326  89D0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 327  89D0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 328  89D0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 329  89D0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 330  89D0              ;
 331  89D0              ;														;	"$ff" ..... Bucle infinito de repetición.
 332  89D0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 333  89D0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 334  89D0              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 335  89D0
 336  89D0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 337  89D1
 338  89D1              ;														DESCRIPCIÓN:
 339  89D1              ;
 340  89D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 341  89D1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 342  89D1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 343  89D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 344  89D1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 345  89D1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 346  89D1
 347  89D1              ;														BIT 3, Recarga de nueva oleada.
 348  89D1              ;														BIT 4, Recarga de nueva oleada.
 349  89D1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 350  89D1              ;														BIT 6, **** Frame completo.
 351  89D1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 352  89D1
 353  89D1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 354  89D3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 355  89D3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 356  89D3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 357  89D3
 358  89D3              ; Gestión de ENTIDADES y CAJAS.
 359  89D3
 360  89D3 00 00        Puntero_store_caja defw 0
 361  89D5 00 00        Puntero_restore_caja defw 0
 362  89D7 00 00        Indice_restore_caja defw 0
 363  89D9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  89DA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  89DB 00           Entidades_en_curso db 0									; ..... ..... .....
 366  89DC 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 367  89DD              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 368  89DD              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 369  89DD              ;														; _ (Numero_de_malotes)="0".
 370  89DD 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 371  89DF 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 372  89E1              ;														; _ puntero (Indice_entidades).
 373  89E1
 374  89E1              ;---------------------------------------------------------------------------------------------------------------
 375  89E1              ;
 376  89E1              ;	11/01/24
 377  89E1              ;
 378  89E1              ;	Álbumes.
 379  89E1
 380  89E1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 381  89E3              ;														; _variable para almacenar lo posición del puntero_
 382  89E3              ; 														; _de pila, SP.
 383  89E3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 384  89E5              ;														; La utiliza la rutina [Extrae_foto_registros].
 385  89E5 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 386  89E7
 387  89E7 00 00        Sc_album_SP defw 0
 388  89E9 00 00        Scanlines_album_SP defw 0
 389  89EB
 390  89EB              ;Scanlines_album_disparos_SP defw Scanlines_album_disparos
 391  89EB
 392  89EB 00 80        End_Snapshot defw Scanlines_album
 393  89ED              ;														; Inicialmente está situado el la posición $7000, Scanlines_album.
 394  89ED              ;End_Snapshot_disparos defw Scanlines_album_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 395  89ED              ;														; _el snapshot de los registros del siguiente disparo.
 396  89ED              ;														; Inicialmente está situado en la posición $7060, Scanlines_album_disparos.
 397  89ED              ;End_Snapshot_Amadeus defw Scanlines_album_Amadeus
 398  89ED
 399  89ED 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  89EE              ;
 401  89EE              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  89EE              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  89EE              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  89EE
 405  89EE 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 406  89EF              ;
 407  89EF              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 408  89EF              ;
 409  89EF              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 410  89EF              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 411  89EF              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 412  89EF              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 413  89EF              ;
 414  89EF              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 415  89EF              ;															_ masticados ya generados.
 416  89EF              ;
 417  89EF              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 418  89EF              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 419  89EF              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 420  89EF              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 421  89EF
 422  89EF
 423  89EF              ; Gestión de Disparos.
 424  89EF
 425  89EF              ;;Numero_de_disparotes db 0
 426  89EF              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 427  89EF              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 428  89EF              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 429  89EF              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 430  89EF              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 431  89EF              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 432  89EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 433  89EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 434  89EF              ;														; _produzca colisión.
 435  89EF              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 436  89EF              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 437  89EF              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 438  89EF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 439  89EF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 440  89F2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 441  89F2              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 442  89F2
 443  89F2              ;---------------------------------------------------------------------------------------------------------------
 444  89F2
 445  89F2              ; Relojes y temporizaciones.
 446  89F2
 447  89F2 00           Contador_de_frames db 0
 448  89F3 00           Contador_de_frames_2 db 0
 449  89F4
 450  89F4              ;Clock_explosion db 4
 451  89F4 14           Clock_Entidades_en_curso db 20
 452  89F5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 453  89F6              ;														; Repite la oleada de entidades.
 454  89F6              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 455  89F6              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 456  89F6              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 457  89F6
 458  89F6              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 459  89F6              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 460  89F6              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 461  89F6
 462  89F6              ;---------------------------------------------------------------------------------------------------------------
 463  89F6
 464  89F6              ; Gestión de NIVELES.
 465  89F6
 466  89F6 00           Nivel db 0												; Nivel actual del juego.
 467  89F7 00 00        Puntero_indice_NIVELES defw 0
 468  89F9 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 469  89FB              ; 														; _ que definen el NIVEL.
 470  89FB              ; Y todo comienza aquí .....
 471  89FB              ;
 472  89FB              ; 	INICIO  *************************************************************************************************************************************************************************
 473  89FB              ;
 474  89FB              ;	5/1/24
 475  89FB
 476  89FB              START
 477  89FB
 478  89FB 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 479  89FE 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 480  8A00 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 481  8A02 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 482  8A04 F3           	DI
 483  8A05
 484  8A05              ;	ld a,%00000111
 485  8A05              ;	call Cls
 486  8A05 CD E8 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 487  8A08
 488  8A08              ; INICIALIZACIÓN.
 489  8A08
 490  8A08              ;	Inicializa 1er Nivel.
 491  8A08
 492  8A08 21 6B 89     	ld hl,Indice_de_niveles
 493  8A0B 22 F7 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 494  8A0E CD 0E 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 495  8A11              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 496  8A11              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 497  8A11              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 498  8A11
 499  8A11              ;	Provisional, (para desarrollo).
 500  8A11              	;-
 501  8A11              ;	ld hl,Numero_parcial_de_entidades
 502  8A11              ;	ld b,(hl)
 503  8A11              ;	inc b
 504  8A11              ;	dec b
 505  8A11              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 506  8A11
 507  8A11 CD 31 8B     	call Inicia_selector_de_albumes_de_lineas
 508  8A14
 509  8A14 CD 53 8C     4 call Inicia_Entidades
 510  8A17
 511  8A17 CD 3E 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 512  8A1A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 513  8A1A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 514  8A1A              ; (Esto se dá cuando se inicia una nueva oleada).
 515  8A1A
 516  8A1A              ;	ld a,(Ctrl_1)
 517  8A1A              ;	bit 3,a
 518  8A1A              ;	jr nz,5F											 ; Loop
 519  8A1A
 520  8A1A              ; 	INICIA AMADEUS !!!!!
 521  8A1A
 522  8A1A              ;3 call Restore_Amadeus
 523  8A1A              ;	call Inicia_Puntero_objeto
 524  8A1A              ;	call Draw
 525  8A1A
 526  8A1A              ;	call Guarda_movimiento_masticado	;! Provisional
 527  8A1A
 528  8A1A              ;	call Genera_datos_de_impresion
 529  8A1A              ;	call Guarda_datos_de_borrado_Amadeus
 530  8A1A
 531  8A1A              ;	ld de,Amadeus_db
 532  8A1A              ;	call Store_Amadeus
 533  8A1A
 534  8A1A              ; 	INICIA DISPAROS !!!!!
 535  8A1A
 536  8A1A              ;	call Inicia_Puntero_Disparo_Entidades
 537  8A1A              ;	call Inicia_Puntero_Disparo_Amadeus
 538  8A1A
 539  8A1A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 540  8A1A
 541  8A1A              ;5 call Inicia_punteros_de_cajas
 542  8A1A              ;	call Restore_entidad
 543  8A1A
 544  8A1A              ;	ld a,(Ctrl_1)
 545  8A1A              ;	bit 3,a
 546  8A1A              ;	jr z,6F
 547  8A1A
 548  8A1A              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 549  8A1A
 550  8A1A              ;	ld hl,Ctrl_1
 551  8A1A              ;	res 3,(hl)
 552  8A1A              ;	jr Main
 553  8A1A
 554  8A1A              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 555  8A1A
 556  8A1A              6
 557  8A1A
 558  8A1A              ;	call Calcula_numero_de_malotes
 559  8A1A
 560  8A1A              ; Damos por concluida la construcción del FRAME.
 561  8A1A              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 562  8A1A
 563  8A1A 2A E7 89     	ld hl,(Sc_album_SP)
 564  8A1D CD 6C 8B     	call Extrae_address
 565  8A20 22 E9 89     	ld (Scanlines_album_SP),hl
 566  8A23
 567  8A23 21 ED 89     	ld hl,Ctrl_3
 568  8A26 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 569  8A28
 570  8A28 FB           	ei
 571  8A29 76           	halt
 572  8A2A
 573  8A2A              ; ------------------------------------
 574  8A2A
 575  8A2A              Main
 576  8A2A              ;
 577  8A2A              ;	11/12/23
 578  8A2A
 579  8A2A              ; Aparece nueva entidad ???
 580  8A2A
 581  8A2A              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 582  8A2A              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 583  8A2A              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 584  8A2A              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 585  8A2A              ;														; _un 2º bloque.
 586  8A2A
 587  8A2A              ;	call Genera_scanlines_masticados_a_borrar
 588  8A2A              ;	call Limpia_Almacen_de_scanlines_masticados
 589  8A2A
 590  8A2A              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 591  8A2A              ; 													 	; _(Scanlines_album_SP).
 592  8A2A
 593  8A2A F3           	di
 594  8A2B 18 FE        	jr $
 595  8A2D FB           	ei
 596  8A2E
 597  8A2E 3A F4 89     	ld a,(Clock_Entidades_en_curso)
 598  8A31 47           	ld b,a
 599  8A32 3A F2 89     	ld a,(Contador_de_frames)
 600  8A35 B8           	cp b
 601  8A36 20 1E        	jr nz,13F
 602  8A38
 603  8A38              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 604  8A38              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 605  8A38
 606  8A38 3A DA 89     21 ld a,(Numero_parcial_de_entidades)
 607  8A3B 47           	ld b,a
 608  8A3C 3A DB 89     	ld a,(Entidades_en_curso)
 609  8A3F B8           	cp b
 610  8A40 28 14        	jr z,13F
 611  8A42 30 12        	jr nc,13F
 612  8A44
 613  8A44 3C           	inc a
 614  8A45 32 DB 89     	ld (Entidades_en_curso),a
 615  8A48
 616  8A48 FE 02        	cp 2
 617  8A4A F3           	di
 618  8A4B 28 FE        	jr z,$
 619  8A4D FB           	ei
 620  8A4E
 621  8A4E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 622  8A4E
 623  8A4E 3A F4 89     	ld a,(Clock_Entidades_en_curso)
 624  8A51              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 625  8A51              ;! _ IMPREDECIBLE !!!!
 626  8A51 C6 64        	add 100
 627  8A53 32 F4 89     	ld (Clock_Entidades_en_curso),a
 628  8A56
 629  8A56              ; -------------------------------------------------------------------------------------------------------------
 630  8A56
 631  8A56              ; Habilita disparos.
 632  8A56
 633  8A56              13
 634  8A56
 635  8A56              ;	ld hl,Disparo_Amadeus
 636  8A56              ;	ld de,CLOCK_repone_disparo_Amadeus
 637  8A56              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 638  8A56
 639  8A56              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 640  8A56              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 641  8A56              ;	call Habilita_disparos
 642  8A56
 643  8A56              ; COLISIONES.
 644  8A56
 645  8A56              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 646  8A56
 647  8A56              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 648  8A56              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 649  8A56              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 650  8A56
 651  8A56              ;	xor a
 652  8A56              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 653  8A56
 654  8A56              ;	call Inicia_punteros_de_cajas
 655  8A56              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 656  8A56              ; 														; _ en DRAW.
 657  8A56
 658  8A56              ;	ld a,(Filas)
 659  8A56              ;	and a
 660  8A56              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 661  8A56              ;	call Incrementa_punteros_de_cajas
 662  8A56              ;	jr 12B
 663  8A56
 664  8A56              ; ---------------------------------------------------------------------------------------
 665  8A56
 666  8A56 3A DA 89     10 ld a,(Numero_parcial_de_entidades)
 667  8A59 47               ld b,a
 668  8A5A A7           	and a
 669  8A5B 20 00        	jr nz,11F
 670  8A5D
 671  8A5D              ;	ld hl,Ctrl_1;
 672  8A5D              ;	bit 4,(hl)
 673  8A5D              ;	jp nz,16F
 674  8A5D
 675  8A5D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 676  8A5D
 677  8A5D              ;	ld hl,Ctrl_1
 678  8A5D              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 679  8A5D
 680  8A5D              ;	ld a,(Contador_de_frames)
 681  8A5D              ;	inc a
 682  8A5D              ;	ld (Activa_recarga_cajas),a
 683  8A5D
 684  8A5D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 685  8A5D
 686  8A5D 3A DB 89     11 ld a,(Entidades_en_curso)
 687  8A60 A7           	and a
 688  8A61 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 689  8A63 47           	ld b,a												; No hay entidades que gestionar.
 690  8A64
 691  8A64              ; ( Código que ejecutamos con cada entidad: ).
 692  8A64
 693  8A64              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 694  8A64
 695  8A64 C5           15 push bc 												; Nº de entidades en curso.
 696  8A65
 697  8A65 CD A7 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 698  8A68
 699  8A68 3A ED 89     	ld a,(Ctrl_3)
 700  8A6B CB 57        	bit 2,a
 701  8A6D F3           	di
 702  8A6E 20 FE        	jr nz,$
 703  8A70 FB           	ei
 704  8A71
 705  8A71              ; Existe "Entidad_guía" ???.
 706  8A71              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 707  8A71
 708  8A71              ;	ld a,(Ctrl_3)
 709  8A71              ;	bit 1,a
 710  8A71              ;	jr nz,22F
 711  8A71
 712  8A71              ; Almacén de "Movimientos_masticados" lleno ???
 713  8A71              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 714  8A71              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 715  8A71
 716  8A71              ;;	ld a,(Ctrl_3)
 717  8A71              ;;	bit 3,a
 718  8A71              ;;	jr nz,22F
 719  8A71
 720  8A71              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 721  8A71
 722  8A71              ;	ld hl,Ctrl_2
 723  8A71              ;	set 5,(hl)
 724  8A71              ;	ld hl,Ctrl_3
 725  8A71              ;	set 1,(hl)
 726  8A71
 727  8A71              ; Impacto ???
 728  8A71
 729  8A71              ;22 ld a,(Impacto)
 730  8A71              ;	and a
 731  8A71              ;	jr z,8F
 732  8A71
 733  8A71              ; Hay Impacto en esta entidad.
 734  8A71
 735  8A71              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 736  8A71              ;	dec (hl)
 737  8A71              ;	jp nz,17F
 738  8A71
 739  8A71              ;! Velocidad de la animación de la explosión.
 740  8A71
 741  8A71              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 742  8A71              ;														; _,(velocidad de la explosión).
 743  8A71              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 744  8A71
 745  8A71              ;	call Repone_datos_de_borrado
 746  8A71              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 747  8A71
 748  8A71              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 749  8A71
 750  8A71              ;	ld a,(Ctrl_2)
 751  8A71              ;	bit 1,a
 752  8A71              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 753  8A71
 754  8A71              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 755  8A71
 756  8A71              ;	ld a,(CTRL_DESPLZ)
 757  8A71              ;	and a
 758  8A71              ;	jr nz,18F
 759  8A71
 760  8A71              ;	ld hl,Indice_Explosion_2x2-2
 761  8A71              ;	ld (Puntero_DESPLZ_der),hl
 762  8A71              ;	jr 19F
 763  8A71
 764  8A71              ;18 ld hl,Indice_Explosion_2x3-2
 765  8A71              ;	ld (Puntero_DESPLZ_der),hl
 766  8A71
 767  8A71              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 768  8A71              ;	set 1,(hl)
 769  8A71              ;	jr 7F
 770  8A71
 771  8A71              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 772  8A71              ; _con las coordenadas de la entidad almacenada en DRAW.
 773  8A71
 774  8A71              ;8 ld a,(Ctrl_1)
 775  8A71              ;	bit 2,a
 776  8A71              ;	jr z,7F
 777  8A71
 778  8A71              ;	ld hl,(Coordenadas_disparo_certero)
 779  8A71              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 780  8A71              ;														; E contiene la coordenada_X del disparo.
 781  8A71              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 782  8A71              ;														; H FILA, (Coordenada_y de la entidad).
 783  8A71              ;	and a
 784  8A71              ;	sbc hl,de
 785  8A71
 786  8A71              ;	call Determina_resultado_comparativa
 787  8A71
 788  8A71              ;	ld a,b
 789  8A71              ;	and a
 790  8A71              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 791  8A71
 792  8A71              ; ----- ----- -----
 793  8A71
 794  8A71              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 795  8A71              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 796  8A71
 797  8A71              ;	ld hl,Ctrl_1
 798  8A71              ;	res 2,(hl)
 799  8A71
 800  8A71 CD 90 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 801  8A74
 802  8A74              ;	ld a,(Ctrl_0)
 803  8A74              ;	bit 4,a
 804  8A74              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 805  8A74
 806  8A74              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 807  8A74              ; [[[
 808  8A74              ;	call Detecta_disparo_entidad
 809  8A74              ; ]]]
 810  8A74
 811  8A74 CD BD 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 812  8A77
 813  8A77              ;	ld hl,Ctrl_0
 814  8A77              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 815  8A77
 816  8A77 CD AD 8C     17 call Store_Restore_cajas
 817  8A7A
 818  8A7A C1           	pop bc
 819  8A7B
 820  8A7B 10 E7        	djnz 15B
 821  8A7D
 822  8A7D CD 3E 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 823  8A80
 824  8A80              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 825  8A80              ; Hemos gestionado todas las unidades.
 826  8A80              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 827  8A80
 828  8A80              ;	ld hl,Ctrl_1
 829  8A80              ;	res 2,(hl)
 830  8A80
 831  8A80
 832  8A80              16
 833  8A80 CD 54 8B     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 834  8A83
 835  8A83 21 ED 89     	ld hl,Ctrl_3
 836  8A86 CB C6        	set 0,(hl)											; Frame completo.
 837  8A88
 838  8A88 AF           	xor a
 839  8A89 D3 FE        	out ($fe),a
 840  8A8B 76           	halt
 841  8A8C
 842  8A8C              ; ----------------------------------------
 843  8A8C
 844  8A8C              ;	ld a,(Ctrl_1) 										; Existe Loop?
 845  8A8C              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 846  8A8C CA 2A 8A     	jp z,Main
 847  8A8F
 848  8A8F              ; RECARGA DE NUEVA OLEADA.
 849  8A8F
 850  8A8F              ;	ld a,(Contador_de_frames)
 851  8A8F              ;	ld b,a
 852  8A8F              ;	ld a,(Activa_recarga_cajas)
 853  8A8F              ;	cp b
 854  8A8F              ;	jr z,20F
 855  8A8F
 856  8A8F              ;	ld hl,Ctrl_1
 857  8A8F              ;	set 4,(hl)
 858  8A8F              ;	jp Main
 859  8A8F
 860  8A8F              ;20 ld hl,Ctrl_1
 861  8A8F              ;	res 4,(hl)
 862  8A8F
 863  8A8F              ;	ld a,(Contador_de_frames)
 864  8A8F
 865  8A8F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 866  8A8F              ;! _ IMPREDECIBLE !!!!
 867  8A8F
 868  8A8F              ;	add 10
 869  8A8F              ;	ld (Clock_Entidades_en_curso),a
 870  8A8F
 871  8A8F              ;	jp 4B
 872  8A8F
 873  8A8F C9           	ret
 874  8A90
 875  8A90              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 876  8A90              ;
 877  8A90              ;	16/11/23
 878  8A90
 879  8A90              ;;Gestiona_Amadeus
 880  8A90
 881  8A90              ;! Activa/desactiva impacto con Amadeus.
 882  8A90
 883  8A90              ;	ld a,(Impacto)
 884  8A90              ;	and a
 885  8A90              ;	jr nz,2F
 886  8A90
 887  8A90              ;;	call Mov_Amadeus
 888  8A90
 889  8A90              ;;2 ld a,(Ctrl_0)
 890  8A90              ;;	bit 4,a
 891  8A90              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 892  8A90
 893  8A90              ;;	call Guarda_foto_entidad_a_pintar
 894  8A90              ;;	call Guarda_datos_de_borrado_Amadeus
 895  8A90
 896  8A90              ;;1 ld hl,Ctrl_0
 897  8A90              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 898  8A90
 899  8A90              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 900  8A90
 901  8A90              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 902  8A90
 903  8A90              ;	call Calcula_numero_de_disparotes
 904  8A90
 905  8A90              ;;	ret
 906  8A90
 907  8A90              ; -----------------------------
 908  8A90              ;
 909  8A90              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 910  8A90              ;
 911  8A90              ;	INPUTS: B a de estar a "0".
 912  8A90
 913  8A90              ;Prepara_Borra_sprites
 914  8A90
 915  8A90              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 916  8A90              ;	ld a,l
 917  8A90              ;	ret z
 918  8A90
 919  8A90              ;	srl a
 920  8A90
 921  8A90              ;2 sub 16
 922  8A90              ;	jr z,1F
 923  8A90              ;	inc b
 924  8A90              ;	jr 2B
 925  8A90
 926  8A90              ;1 inc b
 927  8A90
 928  8A90              ;	exx
 929  8A90              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 930  8A90              ;	exx
 931  8A90
 932  8A90              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 933  8A90              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 934  8A90
 935  8A90              ;	ret
 936  8A90
 937  8A90              ; --------------------------------------------------------------------------------------------------------------
 938  8A90              ;
 939  8A90              ;	15/12/23
 940  8A90
 941  8A90              Mov_obj
 942  8A90
 943  8A90              ;	ld a,(Ctrl_2)
 944  8A90              ;	bit 1,a
 945  8A90              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 946  8A90
 947  8A90              ; Explosión:
 948  8A90
 949  8A90              ;	ld a,(Frames_explosion)
 950  8A90              ;	and a
 951  8A90              ;	jr nz,4F
 952  8A90
 953  8A90              ;!  Una alimaña menos!!!!!!!!!1
 954  8A90
 955  8A90              ; Se trataba de una Entidad_guía ???
 956  8A90
 957  8A90              ;	ld a,(Ctrl_2)
 958  8A90              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 959  8A90              ;	jr z,5F
 960  8A90
 961  8A90              ;	ld hl,Ctrl_3
 962  8A90              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 963  8A90
 964  8A90              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 965  8A90              ;!! _generado puede ser distinto, (aletoriedad).
 966  8A90
 967  8A90              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 968  8A90              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 969  8A90              ;	dec (hl)
 970  8A90              ;	ld hl,Entidades_en_curso
 971  8A90              ;	dec (hl)
 972  8A90              ;	ld hl,Numero_de_entidades
 973  8A90              ;	dec (hl)
 974  8A90              ;	jr 3F
 975  8A90
 976  8A90              ; -----
 977  8A90
 978  8A90              ;	`Movemos´ la explosión.
 979  8A90
 980  8A90              ;4 ld hl,(Puntero_DESPLZ_der)
 981  8A90              ;	inc hl
 982  8A90              ;	inc hl
 983  8A90              ;	call Extrae_address
 984  8A90              ;;	ld (Puntero_objeto),hl
 985  8A90
 986  8A90              ;;	ld hl,Frames_explosion
 987  8A90              ;;	dec (hl)
 988  8A90
 989  8A90              ;;	ld hl,Ctrl_0
 990  8A90              ;;	set 4,(hl);;
 991  8A90
 992  8A90              ;;	jr 3F
 993  8A90
 994  8A90              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 995  8A90
 996  8A90              ;2 xor a
 997  8A90              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 998  8A90
 999  8A90              ; Movemos Entidades malignas.
1000  8A90              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1001  8A90
1002  8A90              ;	ld a,(Ctrl_2)
1003  8A90              ;	bit 5,a
1004  8A90              ;	jr nz,8F
1005  8A90
1006  8A90              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1007  8A90              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1008  8A90              ;	jr 7F
1009  8A90
1010  8A90              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1011  8A90
1012  8A90              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1013  8A90              ;	bit 4,a
1014  8A90              ;	ret z
1015  8A90
1016  8A90              ; Ha habido desplazamiento de la entidad maligna.
1017  8A90              ; Ha llegado a zona de AMADEUS ???
1018  8A90
1019  8A90              ;7 ld a,(Coordenada_y)
1020  8A90              ;	cp $14
1021  8A90              ;	jr c,1F
1022  8A90
1023  8A90              ; ---------
1024  8A90
1025  8A90              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1026  8A90              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1027  8A90
1028  8A90              ;	di
1029  8A90              ;	call Genera_coordenadas_X
1030  8A90              ;	call Compara_coordenadas_X
1031  8A90              ;	ei
1032  8A90
1033  8A90              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1034  8A90
1035  8A90              ; ---------
1036  8A90
1037  8A90              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1038  8A90              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1039  8A90              ;	call Limpia_Variables_de_borrado
1040  8A90
1041  8A90 C9           3 ret
1042  8A91
1043  8A91              ; --------------------------------------------------------------------------------------------------------------
1044  8A91              ;
1045  8A91              ;	29/1/23
1046  8A91
1047  8A91              ;Mov_Amadeus
1048  8A91
1049  8A91              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1050  8A91
1051  8A91              ;	call Mov_right
1052  8A91
1053  8A91              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1054  8A91              ;	bit 4,a
1055  8A91              ;	ret z
1056  8A91
1057  8A91              ; ---------
1058  8A91
1059  8A91              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1060  8A91              ;	call Repone_datos_de_borrado_Amadeus
1061  8A91              ;	call Limpia_Variables_de_borrado
1062  8A91
1063  8A91              ;	ret
1064  8A91
1065  8A91              ; -----------------------------------------------------------------------------------
1066  8A91              ;
1067  8A91              ;	20/01/24
1068  8A91              ;
1069  8A91              ;
1070  8A91
1071  8A91              Construye_movimientos_masticados_entidad
1072  8A91
1073  8A91 2A AD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1074  8A94 E5           	push hl
1075  8A95 CD D5 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1076  8A98              ;															; _ el (Contador_de_mov_masticados).
1077  8A98 CD 72 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1078  8A9B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1079  8A9B              ;	call Recompone_posicion_inicio
1080  8A9B
1081  8A9B CD 04 8E     1 call Draw
1082  8A9E CD BA 8A     	call Guarda_movimiento_masticado
1083  8AA1
1084  8AA1 CD EA 97     	call Movimiento
1085  8AA4
1086  8AA4 3A ED 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1087  8AA7 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1088  8AA9 28 F0        	jr z,1B
1089  8AAB
1090  8AAB              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1091  8AAB              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1092  8AAB
1093  8AAB E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1094  8AAC 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1095  8AAF
1096  8AAF              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1097  8AAF
1098  8AAF CD 4E 99     	call Situa_en_contador_general_de_mov_masticados
1099  8AB2
1100  8AB2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1101  8AB2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1102  8AB2
1103  8AB2 ED 4B AF 89  	ld bc,(Contador_de_mov_masticados)
1104  8AB6 71           	ld (hl),c
1105  8AB7 23           	inc hl
1106  8AB8 70           	ld (hl),b
1107  8AB9
1108  8AB9 C9           	ret
1109  8ABA
1110  8ABA              ; -----------------------------------------------------------------------------------
1111  8ABA              ;
1112  8ABA              ;	28/12/23
1113  8ABA              ;
1114  8ABA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1115  8ABA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1116  8ABA
1117  8ABA              Guarda_movimiento_masticado
1118  8ABA
1119  8ABA ED 73 E1 89  	ld (Stack),sp
1120  8ABE ED 7B AD 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1121  8AC2
1122  8AC2              ;	push hl
1123  8AC2 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1124  8AC4 FD E5            push iy 												; Pushea Puntero_objeto.
1125  8AC6
1126  8AC6 ED 7B E1 89      ld sp,(Stack)
1127  8ACA
1128  8ACA 2A AF 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1129  8ACD 23           	inc hl
1130  8ACE 22 AF 89     	ld (Contador_de_mov_masticados),hl
1131  8AD1
1132  8AD1 CD D5 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1133  8AD4              ;															; _ el (Contador_de_mov_masticados).
1134  8AD4 C9               ret
1135  8AD5
1136  8AD5              ; --------------------------------------------------------------------------------------------------------------
1137  8AD5              ;
1138  8AD5              ;	12/1/24
1139  8AD5              ;
1140  8AD5              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1141  8AD5
1142  8AD5              Actualiza_Puntero_de_almacen_de_mov_masticados
1143  8AD5
1144  8AD5 2A AD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1145  8AD8 01 04 00     	ld bc,4
1146  8ADB A7           	and a
1147  8ADC ED 4A        	adc hl,bc
1148  8ADE 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1149  8AE1 C9           	ret
1150  8AE2
1151  8AE2              ; --------------------------------------------------------------------------------------------------------------
1152  8AE2              ;
1153  8AE2              ;	09/03/24
1154  8AE2              ;
1155  8AE2              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1156  8AE2              ;
1157  8AE2              ;	IX contiene el puntero de impresión.
1158  8AE2              ;	DE contiene (Puntero_objeto).
1159  8AE2
1160  8AE2
1161  8AE2 ED 73 E1 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1162  8AE6 ED 7B AD 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1163  8AEA
1164  8AEA D1           	pop de 															; DE contiene Puntero_objeto
1165  8AEB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1166  8AED
1167  8AED ED 73 AD 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1168  8AF1
1169  8AF1 ED 7B E1 89  	ld sp,(Stack)
1170  8AF5
1171  8AF5 C9           	ret
1172  8AF6
1173  8AF6              ; --------------------------------------------------------------------------------------------------------------
1174  8AF6              ;
1175  8AF6              ;	28/12/23
1176  8AF6              ;
1177  8AF6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1178  8AF6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1179  8AF6
1180  8AF6              Guarda_foto_entidad_a_pintar
1181  8AF6
1182  8AF6 3A B1 89     	ld a,(Ctrl_0)
1183  8AF9 CB 77        	bit 6,a
1184  8AFB 28 04        	jr z,5F
1185  8AFD
1186  8AFD              ;	Guarda la foto de Amadeus.
1187  8AFD
1188  8AFD              ;	call Draw
1189  8AFD              ;	call Guarda_movimiento_masticado	;! Provisional
1190  8AFD CD BF 80     	call Genera_datos_de_impresion
1191  8B00 C9           	ret
1192  8B01
1193  8B01              ; ENTIDADES!
1194  8B01              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1195  8B01
1196  8B01 3A ED 89     5 ld a,(Ctrl_3)
1197  8B04 CB 5F        	bit 3,a
1198  8B06 28 01        	jr z,1F
1199  8B08
1200  8B08              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1201  8B08
1202  8B08              4
1203  8B08              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1204  8B08 C9           	ret
1205  8B09
1206  8B09              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1207  8B09
1208  8B09 3A ED 89     1 ld a,(Ctrl_3)
1209  8B0C CB 57        	bit 2,a
1210  8B0E 20 10        	jr nz,6F
1211  8B10
1212  8B10              ; Entidad guía o fantasma ???
1213  8B10
1214  8B10 3A B6 89     	ld a,(Ctrl_2)
1215  8B13 CB 6F        	bit 5,a
1216  8B15 20 10        	jr nz,3F
1217  8B17
1218  8B17              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1219  8B17
1220  8B17 18 EF        	jr 4B
1221  8B19
1222  8B19              ; ENTIDAD_GUÍA:
1223  8B19              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1224  8B19              ; _guardando "movimientos_masticados".
1225  8B19
1226  8B19 3A ED 89     2 ld a,(Ctrl_3)
1227  8B1C CB 57        	bit 2,a
1228  8B1E 28 07        	jr z,3F
1229  8B20
1230  8B20              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1231  8B20              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1232  8B20
1233  8B20 CB 97        6 res 2,a
1234  8B22 CB DF        	set 3,a
1235  8B24 32 ED 89     	ld (Ctrl_3),a
1236  8B27
1237  8B27
1238  8B27              ;	Esto sólo lo ejecuta una entidad guía.
1239  8B27
1240  8B27 CD 04 8E     3 	call Draw
1241  8B2A CD BA 8A     	call Guarda_movimiento_masticado
1242  8B2D CD BF 80     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1243  8B30
1244  8B30              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1245  8B30              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1246  8B30
1247  8B30              ;	call Convierte_guia_en_fantasma
1248  8B30 C9           	ret
1249  8B31
1250  8B31              ; ---------------------------------------------------------------------------------------------------------------------
1251  8B31              ;
1252  8B31              ;	13/03/24
1253  8B31              ;
1254  8B31              ;	Sitúa el puntero (Sc_album_SP) en el 1er álbum del índice.
1255  8B31              ;	Sitúa (Scanlines_album_SP) al comienzo del 1er álbum del índice.
1256  8B31
1257  8B31              Inicia_selector_de_albumes_de_lineas
1258  8B31
1259  8B31 21 8A 89     	ld hl,Indice_de_albumes_de_lineas
1260  8B34 22 E7 89     	ld (Sc_album_SP),hl
1261  8B37 CD 6C 8B     	call Extrae_address
1262  8B3A 22 E9 89     	ld (Scanlines_album_SP),hl
1263  8B3D C9           	ret
1264  8B3E
1265  8B3E              ; ---------------------------------------------------------------------------------------------------------------------
1266  8B3E              ;
1267  8B3E              ; 8/1/23
1268  8B3E              ;
1269  8B3E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1270  8B3E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1271  8B3E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1272  8B3E
1273  8B3E              ; Destruye HL y DE !!!!!
1274  8B3E
1275  8B3E              Inicia_punteros_de_cajas
1276  8B3E
1277  8B3E 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1278  8B41 CD 6C 8B         call Extrae_address
1279  8B44 22 D3 89         ld (Puntero_store_caja),hl
1280  8B47 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1281  8B4A 22 D7 89     	ld (Indice_restore_caja),hl
1282  8B4D CD 6C 8B     	call Extrae_address
1283  8B50 22 D5 89     	ld (Puntero_restore_caja),hl
1284  8B53 C9               ret
1285  8B54
1286  8B54              ; *************************************************************************************************************************************************************
1287  8B54              ;
1288  8B54              ; 8/1/23
1289  8B54              ;
1290  8B54              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1291  8B54
1292  8B54              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1293  8B54              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1294  8B54              ;	ret
1295  8B54              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1296  8B54              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1297  8B54              ;	ret
1298  8B54
1299  8B54              ; -------------------------------------------------------------------------------------------------------------
1300  8B54              ;
1301  8B54              ; 21/9/23
1302  8B54              ;
1303  8B54
1304  8B54              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1305  8B54
1306  8B54              ;;Limpia_album_Amadeus
1307  8B54              ;
1308  8B54              ;;	ld hl,Scanlines_album_Amadeus
1309  8B54              ;;	ld a,(hl)
1310  8B54              ;;	and a
1311  8B54              ;;	ret z
1312  8B54
1313  8B54              ;;	ld hl,Scanlines_album_Amadeus;
1314  8B54              ;;	ld de,Scanlines_album_Amadeus+1
1315  8B54              ;;	ld bc,11
1316  8B54              ;;	xor a
1317  8B54              ;;	ld (hl),a
1318  8B54              ;;	ldir
1319  8B54
1320  8B54              ;;	ld hl,Scanlines_album_Amadeus
1321  8B54              ;;	ld (End_Snapshot_Amadeus),hl
1322  8B54
1323  8B54              ;;	ret
1324  8B54
1325  8B54              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1326  8B54              ;	ld de,Variables_de_borrado+1
1327  8B54              ;	ld bc,5
1328  8B54              ;	xor a
1329  8B54              ;	ld (hl),a
1330  8B54              ;	ldir
1331  8B54              ;	ret
1332  8B54
1333  8B54              ; -------------------------------------------------------------------------------------------------------------
1334  8B54              ;
1335  8B54              ; 	21/02/24
1336  8B54              ;
1337  8B54              ;	MODIFICA: AF,HL,BC,DE
1338  8B54              ;
1339  8B54              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1340  8B54              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1341  8B54
1342  8B54              Calcula_numero_de_malotes
1343  8B54
1344  8B54 21 00 80     	ld hl,Scanlines_album
1345  8B57 EB           	ex de,hl
1346  8B58 2A E9 89     	ld hl,(Scanlines_album_SP)
1347  8B5B
1348  8B5B 06 00        	ld b,0
1349  8B5D 7D           	ld a,l
1350  8B5E 93           	sub e
1351  8B5F 28 07        	jr z,1F
1352  8B61
1353  8B61              ; Nº de malotes no es "0".
1354  8B61
1355  8B61 D6 06        2 sub 6
1356  8B63 04           	inc b
1357  8B64 A7           	and a
1358  8B65 20 FA        	jr nz,2B
1359  8B67 78           	ld a,b
1360  8B68
1361  8B68 32 DC 89     1 ld (Numero_de_malotes),a
1362  8B6B C9           	ret
1363  8B6C
1364  8B6C              ; -------------------------------------------------------------------------------------------------------------
1365  8B6C              ;
1366  8B6C              ; 8/9/23
1367  8B6C              ;
1368  8B6C
1369  8B6C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1370  8B6C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1371  8B6C
1372  8B6C              ;Calcula_malotes_Amadeus
1373  8B6C
1374  8B6C              ;	ld hl,Scanlines_album_Amadeus
1375  8B6C              ;	ex de,hl
1376  8B6C              ;	ld hl,(End_Snapshot_Amadeus)
1377  8B6C
1378  8B6C              ;	ld a,h
1379  8B6C              ;	and a
1380  8B6C              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1381  8B6C
1382  8B6C              ;	ld b,0
1383  8B6C              ;	ld a,l
1384  8B6C              ;	sub e
1385  8B6C              ;	jr z,1F
1386  8B6C
1387  8B6C              ; Nº de malotes no es "0".
1388  8B6C
1389  8B6C              ;2 sub 6
1390  8B6C              ;	inc b
1391  8B6C              ;	and a
1392  8B6C              ;	jr nz,2B
1393  8B6C              ;	ld a,b
1394  8B6C
1395  8B6C              ;1 ld (Numero_de_malotes),a
1396  8B6C              ;	ret
1397  8B6C
1398  8B6C              ; -------------------------------------------------------------------------------------------------------------
1399  8B6C              ;
1400  8B6C              ; 28/2/23
1401  8B6C              ;
1402  8B6C
1403  8B6C              ;;Calcula_numero_de_disparotes
1404  8B6C
1405  8B6C              ;	ld hl,Scanlines_album_disparos
1406  8B6C              ;	ex de,hl
1407  8B6C              ;	ld hl,(End_Snapshot_disparos)
1408  8B6C
1409  8B6C              ;	ld b,0
1410  8B6C              ;	ld a,l
1411  8B6C              ;	sub e
1412  8B6C              ;	jr z,1F
1413  8B6C
1414  8B6C              ; Nº de malotes no es "0".
1415  8B6C
1416  8B6C              ;2 sub 6
1417  8B6C              ;	inc b
1418  8B6C              ;	and a
1419  8B6C              ;	jr nz,2B
1420  8B6C              ;	ld a,b
1421  8B6C
1422  8B6C              ;1 ld (Numero_de_disparotes),a
1423  8B6C              ;	ret
1424  8B6C
1425  8B6C              ; *************************************************************************************************************************************************************
1426  8B6C              ;
1427  8B6C              ; 20/10/22
1428  8B6C              ;
1429  8B6C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1430  8B6C              ;
1431  8B6C              ; Destruye el puntero y DE !!!!!
1432  8B6C
1433  8B6C 5E           Extrae_address ld e,(hl)
1434  8B6D 23           	inc hl
1435  8B6E 56           	ld d,(hl)
1436  8B6F 2B           	dec hl
1437  8B70 EB           	ex de,hl
1438  8B71 C9           	ret
1439  8B72
1440  8B72              ; *************************************************************************************************************************************************************
1441  8B72              ;
1442  8B72              ;	20/1/24
1443  8B72              ;
1444  8B72              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1445  8B72              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1446  8B72              ;
1447  8B72              ;   Destruye HL y BC !!!!!,
1448  8B72              ;
1449  8B72              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1450  8B72              ;					"0" ..... Izquierda.
1451  8B72
1452  8B72              Inicia_Puntero_objeto
1453  8B72
1454  8B72 3A A3 89     	ld a,(Cuad_objeto)
1455  8B75 E6 01        	and 1
1456  8B77 F5           	push af
1457  8B78 CC 94 8B     	call z,Inicia_puntero_objeto_izq
1458  8B7B F1           	pop af
1459  8B7C C8           	ret z
1460  8B7D CD 81 8B     	call Inicia_puntero_objeto_der
1461  8B80 C9           	ret
1462  8B81
1463  8B81              ; Arrancamos desde la parte izquierda de la pantalla.
1464  8B81              ; Iniciamos (Indice_Sprite_der).
1465  8B81
1466  8B81 2A 99 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1467  8B84 22 9D 89     	ld (Puntero_DESPLZ_der),hl
1468  8B87 CD 6C 8B     	call Extrae_address
1469  8B8A 22 93 89     	ld (Puntero_objeto),hl
1470  8B8D
1471  8B8D 2A 9B 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1472  8B90 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
1473  8B93 C9           	ret
1474  8B94
1475  8B94              ; Arrancamos desde la parte derecha de la pantalla.
1476  8B94              ; Iniciamos (Indice_Sprite_izq).
1477  8B94
1478  8B94 2A 9B 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1479  8B97 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
1480  8B9A CD 6C 8B     	call Extrae_address
1481  8B9D 22 93 89     	ld (Puntero_objeto),hl
1482  8BA0
1483  8BA0 2A 99 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1484  8BA3 22 9D 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1485  8BA6 C9           	ret
1486  8BA7
1487  8BA7              ; **************************************************************************************************
1488  8BA7              ;
1489  8BA7              ;	31/01/24
1490  8BA7              ;
1491  8BA7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1492  8BA7
1493  8BA7              Restore_entidad
1494  8BA7
1495  8BA7 2A D3 89     	ld hl,(Puntero_store_caja)
1496  8BAA 11 8E 89     	ld de,Bandeja_DRAW
1497  8BAD 7E           	ld a,(hl)
1498  8BAE 12           	ld (de),a
1499  8BAF 23           	inc hl 											; (Tipo).
1500  8BB0
1501  8BB0 11 95 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1502  8BB3 01 02 00     	ld bc,2
1503  8BB6 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1504  8BB8
1505  8BB8 13           	inc de
1506  8BB9 7E           	ld a,(hl)
1507  8BBA 12           	ld (de),a 										; Transferimos (Attr).
1508  8BBB 23           	inc hl
1509  8BBC
1510  8BBC 11 A4 89     	ld de,Impacto
1511  8BBF
1512  8BBF 7E           	ld a,(hl)
1513  8BC0 12           	ld (de),a 										; Transferimos (Impacto).
1514  8BC1 23           	inc hl
1515  8BC2
1516  8BC2 13           	inc de
1517  8BC3
1518  8BC3 01 06 00     	ld bc,6
1519  8BC6 ED B0        	ldir
1520  8BC8
1521  8BC8 01 07 00     	ld bc,7
1522  8BCB ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1523  8BCD              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1524  8BCD 11 B6 89     	ld de,Ctrl_2
1525  8BD0
1526  8BD0 7E           	ld a,(hl)
1527  8BD1 12           	ld (de),a 										; Transferimos (Ctrl_2).
1528  8BD2
1529  8BD2 C9           	ret
1530  8BD3
1531  8BD3              ; **************************************************************************************************
1532  8BD3              ;
1533  8BD3              ;	08/05/23
1534  8BD3              ;
1535  8BD3              ;	Incrementamos los dos punteros de entidades. (+1).
1536  8BD3
1537  8BD3              Incrementa_punteros_de_cajas
1538  8BD3
1539  8BD3 2A D5 89     	ld hl,(Puntero_restore_caja)
1540  8BD6 22 D3 89     	ld (Puntero_store_caja),hl
1541  8BD9 2A D7 89     	ld hl,(Indice_restore_caja)
1542  8BDC 23           	inc hl
1543  8BDD 23           	inc hl
1544  8BDE 22 D7 89     	ld (Indice_restore_caja),hl
1545  8BE1 CD 6C 8B         call Extrae_address
1546  8BE4 22 D5 89         ld (Puntero_restore_caja),hl
1547  8BE7 C9               ret
1548  8BE8
1549  8BE8              ; **************************************************************************************************
1550  8BE8              ;
1551  8BE8              ;	21/12/23
1552  8BE8              ;
1553  8BE8              ;	Restore_Amadeus
1554  8BE8              ;
1555  8BE8              ;	Cargamos en DRAW los parámetros de Amadeus.
1556  8BE8              ;
1557  8BE8
1558  8BE8              ;Restore_Amadeus	push hl
1559  8BE8              ;	push de
1560  8BE8              ; 	push bc
1561  8BE8              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1562  8BE8              ;	ld de,Bandeja_DRAW
1563  8BE8              ;	ld bc,42
1564  8BE8              ;	ldir
1565  8BE8              ;	pop bc
1566  8BE8              ;	pop de
1567  8BE8              ;	pop hl
1568  8BE8              ;	ret
1569  8BE8
1570  8BE8              ; *************************************************************************************************************************************************************
1571  8BE8              ;
1572  8BE8              ;	21/12/23
1573  8BE8              ;
1574  8BE8              ;	Store_Amadeus
1575  8BE8              ;
1576  8BE8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1577  8BE8              ;
1578  8BE8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1579  8BE8              ;
1580  8BE8              ;	DESTRUYE: HL y BC y DE.
1581  8BE8
1582  8BE8              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1583  8BE8              ;	ld bc,42
1584  8BE8              ;	ldir
1585  8BE8              ;	ret
1586  8BE8
1587  8BE8              ; -----------------------------------------------------------
1588  8BE8              ;
1589  8BE8              ;	21/12/23
1590  8BE8              ;
1591  8BE8              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1592  8BE8              ;
1593  8BE8              ;	Destruye: HL,BC,DE,A
1594  8BE8
1595  8BE8              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1596  8BE8              ;	ld bc,41
1597  8BE8              ;	xor a
1598  8BE8              ;	ld (hl),a;
1599  8BE8              ;	ld de,Bandeja_DRAW+1
1600  8BE8              ;	ldir
1601  8BE8              ;	ret
1602  8BE8
1603  8BE8              ; -----------------------------------------------------------
1604  8BE8
1605  8BE8              ; Teclado.
1606  8BE8
1607  8BE8 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1608  8BEA DB FE        	in a,($fe)
1609  8BEC E6 01        	and $01
1610  8BEE 28 02        	jr z,1f
1611  8BF0 18 F6        	jr Pulsa_ENTER
1612  8BF2 C9           1 ret
1613  8BF3
1614  8BF3              ; **************************************************************************************************
1615  8BF3              ;
1616  8BF3              ; Temporización.
1617  8BF3
1618  8BF3              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1619  8BF3              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1620  8BF3              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1621  8BF3              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1622  8BF3
1623  8BF3              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1624  8BF3              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1625  8BF3              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1626  8BF3
1627  8BF3              ; A partir de $4f61 no hace falta DELAY.
1628  8BF3
1629  8BF3              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1630  8BF3
1631  8BF3 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1632  8BF6 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1633  8BF7 78           	LD A,B
1634  8BF8 A7           	AND A
1635  8BF9 20 FB        	JR NZ,wait
1636  8BFB C9           	RET
1637  8BFC
1638  8BFC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1639  8BFC              ;
1640  8BFC              ;	5/3/23
1641  8BFC              ;
1642  8BFC              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1643  8BFC
1644  8BFC              ;Movimiento_Amadeus
1645  8BFC
1646  8BFC              ; Disparo.
1647  8BFC
1648  8BFC              ;	ld a,(Disparo_Amadeus)
1649  8BFC              ;	and a
1650  8BFC              ;	jr nz,1F
1651  8BFC              ;	jr 2F
1652  8BFC
1653  8BFC              ;1 ld a,$f7													; "5" para disparar.
1654  8BFC              ;	in a,($fe)
1655  8BFC              ;	and $10
1656  8BFC
1657  8BFC              ;	push af
1658  8BFC              ;	call z,Genera_disparo
1659  8BFC              ;	pop af
1660  8BFC              ;	jr nz,2F
1661  8BFC
1662  8BFC              ;	ld a,(Disparo_Amadeus)
1663  8BFC              ;	xor 1
1664  8BFC              ;	ld (Disparo_Amadeus),a
1665  8BFC              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1666  8BFC              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1667  8BFC              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1668  8BFC              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1669  8BFC
1670  8BFC              ;	ld a,$f7
1671  8BFC              ;	in a,($fe)
1672  8BFC              ;	and $01
1673  8BFC              ;	ret z
1674  8BFC
1675  8BFC              ;	ld a,$f7
1676  8BFC              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1677  8BFC              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1678  8BFC              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1679  8BFC              ;	ret
1680  8BFC
1681  8BFC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1682  8BFC              ;
1683  8BFC              ;	Rutina provisional para que los malotes cagen balas.
1684  8BFC
1685  8BFC              ;Detecta_disparo_entidad
1686  8BFC
1687  8BFC              ;	ld a,(Disparo_entidad)
1688  8BFC              ;	and a
1689  8BFC              ;	ret z
1690  8BFC
1691  8BFC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1692  8BFC
1693  8BFC              ;	ld a,$7f				; Detecta SPACE.
1694  8BFC              ;	in a,($fe)
1695  8BFC              ;	and 1
1696  8BFC              ;	ret nz
1697  8BFC
1698  8BFC              ;	call Genera_disparo
1699  8BFC              ;	ret
1700  8BFC
1701  8BFC              ; ----------------------------------------------------------------------
1702  8BFC              ;
1703  8BFC              ;	8/9/23
1704  8BFC
1705  8BFC              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1706  8BFC              ; 	dec hl
1707  8BFC              ;	ld a,(hl)
1708  8BFC              ;	and a
1709  8BFC              ;	ret z										; Salimos si es álbum está vacío.
1710  8BFC
1711  8BFC              ;	ld de,Variables_de_borrado+5
1712  8BFC              ;	ld bc,6
1713  8BFC              ;	lddr
1714  8BFC              ;	ret
1715  8BFC
1716  8BFC              ; ----------------------------------------------------------------------
1717  8BFC              ;
1718  8BFC              ;	9/9/23
1719  8BFC
1720  8BFC              ;Repone_datos_de_borrado_Amadeus
1721  8BFC
1722  8BFC              ;	ld hl,Variables_de_borrado
1723  8BFC              ;	ld de,Scanlines_album_Amadeus
1724  8BFC              ;	ld bc,6
1725  8BFC              ;	ldir
1726  8BFC
1727  8BFC              ;	ex de,hl
1728  8BFC              ;	ld (End_Snapshot_Amadeus),hl
1729  8BFC
1730  8BFC              ;	ret
1731  8BFC
1732  8BFC              ; ----------------------------------------------------------------------
1733  8BFC              ;
1734  8BFC              ;	27/10/23
1735  8BFC              ;
1736  8BFC
1737  8BFC              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1738  8BFC              ;	_ Scanlines_album correspondiente.
1739  8BFC
1740  8BFC              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1741  8BFC              ;	_ durante el proceso de escritura.
1742  8BFC
1743  8BFC              ;Repone_datos_de_borrado
1744  8BFC
1745  8BFC              ;	ld de,(Scanlines_album_SP)
1746  8BFC              ;	ld hl,Variables_de_borrado
1747  8BFC              ;	ld bc,6
1748  8BFC              ;	ldir
1749  8BFC
1750  8BFC              ;	ex de,hl
1751  8BFC              ;	ld (Scanlines_album_SP),hl
1752  8BFC
1753  8BFC              ;	ret
1754  8BFC
1755  8BFC              ; --------------------------------------------------------------------------------------
1756  8BFC
1757  8BFC              ;Pinta_Amadeus
1758  8BFC
1759  8BFC              ;   	call Calcula_malotes_Amadeus
1760  8BFC              ;	call Extrae_foto_Amadeus
1761  8BFC              ;	call Limpia_album_Amadeus
1762  8BFC
1763  8BFC              ;	ret
1764  8BFC
1765  8BFC              ; -----------------------------------------------------------------------------------
1766  8BFC              ;
1767  8BFC              ;	10/12/23
1768  8BFC              ;
1769  8BFC              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1770  8BFC
1771  8BFC              Actualiza_relojes
1772  8BFC
1773  8BFC 3A ED 89     	ld a,(Ctrl_3)
1774  8BFF CB 47        	bit 0,a
1775  8C01 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1776  8C02
1777  8C02 21 F2 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1778  8C05 34           	inc (hl)
1779  8C06
1780  8C06 34           	inc (hl)
1781  8C07 35           	dec (hl)
1782  8C08 C0           	ret nz
1783  8C09
1784  8C09 21 F3 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1785  8C0C 34           	inc (hl)
1786  8C0D C9           	ret
1787  8C0E
1788  8C0E              ; ---------------------------------------------------------------
1789  8C0E
1790  8C0E              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C0E              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C0E              ;
   3+ 8C0E              ;   8/3/24
   4+ 8C0E              ;
   5+ 8C0E              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C0E              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C0E              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C0E              ;	_ de la 1ª entidad del Nivel.
   9+ 8C0E              ;
  10+ 8C0E              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C0E
  12+ 8C0E              ;	MODIFICA: HL,DE y A.
  13+ 8C0E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C0E
  15+ 8C0E              Inicializa_Nivel
  16+ 8C0E
  17+ 8C0E 2A F7 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C11 CD 6C 8B     	call Extrae_address
  19+ 8C14 7E           	ld a,(hl)
  20+ 8C15 32 D9 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C18 23           	inc hl
  22+ 8C19 CD 26 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C1C 22 F9 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C1F CD 2F 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C22
  26+ 8C22 CD 40 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C25 C9           	ret
  28+ 8C26
  29+ 8C26              ; ----------------------
  30+ 8C26
  31+ 8C26 11 B8 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C29 01 04 00     	ld bc,4
  33+ 8C2C ED B0        	ldir
  34+ 8C2E C9           	ret
  35+ 8C2F
  36+ 8C2F 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C30 CD 80 8D         call Calcula_salto_en_BC
  38+ 8C33 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C36 A7               and a
  40+ 8C37 ED 4A            adc hl,bc
  41+ 8C39 CD 6C 8B         call Extrae_address
  42+ 8C3C 22 C4 89         ld (Puntero_indice_mov),hl
  43+ 8C3F C9               ret
  44+ 8C40
  45+ 8C40 3A 8E 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C43 CD 80 8D     	call Calcula_salto_en_BC
  47+ 8C46 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C49 A7               and a
  49+ 8C4A ED 4A            adc hl,bc
  50+ 8C4C CD 6C 8B         call Extrae_address
  51+ 8C4F 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C52 C9           	ret
  53+ 8C53
  54+ 8C53              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C53              ;
  56+ 8C53              ;   5/1/24
  57+ 8C53              ;
  58+ 8C53              ;	Destruye A,BC,HL,DE
  59+ 8C53
  60+ 8C53              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C53              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C53
  63+ 8C53              Inicia_Entidades
  64+ 8C53
  65+ 8C53              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C53
  67+ 8C53 CD 3E 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C56              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C56 CD E7 8D     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C59
  71+ 8C59 2A F9 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C5C
  73+ 8C5C 22 F9 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C5F
  75+ 8C5F CD 2E 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C62
  77+ 8C62 2A F9 89     	ld hl,(Datos_de_nivel)
  78+ 8C65
  79+ 8C65              ; En este punto:
  80+ 8C65              ;
  81+ 8C65              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C65              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C65
  84+ 8C65 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C66
  86+ 8C66 7E           	ld a,(hl)
  87+ 8C67 CD A3 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C6A
  89+ 8C6A CD 92 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C6D
  91+ 8C6D              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C6D
  93+ 8C6D CD 50 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C70
  95+ 8C70 A7           	and a
  96+ 8C71 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C73
  98+ 8C73              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C73
 100+ 8C73              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C73              ;	_ de este tipo de entidad.
 102+ 8C73
 103+ 8C73 CD 4E 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C76 CD 5B 99     	call Transfiere_datos_de_contadores
 105+ 8C79
 106+ 8C79 18 06        	jr 4F
 107+ 8C7B
 108+ 8C7B CD 91 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C7E
 110+ 8C7E              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C7E              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C7E              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C7E              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C7E              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C7E
 116+ 8C7E CD 0E 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8C81              ;																; _ Mov_masticados ya generados.
 118+ 8C81 CD BD 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8C84
 120+ 8C84              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8C84
 122+ 8C84 2A AB 89     	ld hl,(Puntero_de_impresion)
 123+ 8C87 CD 91 99     	call Genera_coordenadas
 124+ 8C8A CD B9 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8C8D CD C7 8C     	call Limpiamos_bandeja_DRAW
 126+ 8C90 CD D3 8B     	call Incrementa_punteros_de_cajas
 127+ 8C93
 128+ 8C93              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8C93              ; _ entidad del Nivel.
 130+ 8C93
 131+ 8C93 3A EE 89     	ld a,(Ctrl_4)
 132+ 8C96 E6 F0        	and $f0
 133+ 8C98 32 EE 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8C9B
 135+ 8C9B              ; Siguiente entidad del Nivel.
 136+ 8C9B
 137+ 8C9B 2A F9 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8C9E 23           	inc hl 														; _ entidad del Nivel.
 139+ 8C9F
 140+ 8C9F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8CA0
 142+ 8CA0 10 BA        	djnz 2B
 143+ 8CA2
 144+ 8CA2 C9           	ret
 145+ 8CA3
 146+ 8CA3              ; ---------------------------------------------------------------------
 147+ 8CA3              ;
 148+ 8CA3              ;	10/02/24
 149+ 8CA3              ;
 150+ 8CA3              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CA3              ;
 152+ 8CA3              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CA3
 154+ 8CA3              Definicion_segun_tipo
 155+ 8CA3
 156+ 8CA3 CD 80 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CA6 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CA9 CD 88 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CAC C9           	ret
 160+ 8CAD
 161+ 8CAD              ; ---------------------------------------------------------------------
 162+ 8CAD              ;
 163+ 8CAD              ;	30/01/24
 164+ 8CAD
 165+ 8CAD
 166+ 8CAD              Store_Restore_cajas
 167+ 8CAD
 168+ 8CAD              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CAD
 170+ 8CAD 2A AB 89     	ld hl,(Puntero_de_impresion)
 171+ 8CB0 CD 91 99     	call Genera_coordenadas
 172+ 8CB3
 173+ 8CB3 CD B9 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CB6 CD C7 8C     	call Limpiamos_bandeja_DRAW
 175+ 8CB9
 176+ 8CB9              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CB9
 178+ 8CB9              ;	ld a,(Impacto)
 179+ 8CB9              ;	and a
 180+ 8CB9              ;	jr z,1F
 181+ 8CB9
 182+ 8CB9              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CB9              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CB9              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CB9              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CB9              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CB9
 188+ 8CB9
 189+ 8CB9              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CB9              ;	ld a,(hl)
 191+ 8CB9              ;	and a
 192+ 8CB9              ;	push af
 193+ 8CB9              ;	jr z,2F
 194+ 8CB9
 195+ 8CB9              ;	di
 196+ 8CB9              ;	ld de,Bandeja_DRAW
 197+ 8CB9              ;	ld bc,42
 198+ 8CB9              ;	ldir
 199+ 8CB9              ;	ei
 200+ 8CB9
 201+ 8CB9 CD D3 8B     2 call Incrementa_punteros_de_cajas
 202+ 8CBC C9           	ret
 203+ 8CBD
 204+ 8CBD
 205+ 8CBD              ; ---------------------------------------------------------------------
 206+ 8CBD              ;
 207+ 8CBD              ;	29/01/24
 208+ 8CBD
 209+ 8CBD              Guarda_foto_de_mov_masticado
 210+ 8CBD
 211+ 8CBD CD E2 8A     	call Cargamos_registros_con_mov_masticado
 212+ 8CC0 CD BF 80     	call Genera_datos_de_impresion
 213+ 8CC3              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CC3              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CC3              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CC3              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CC3
 218+ 8CC3 CD D2 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CC6 C9           	ret
 220+ 8CC7
 221+ 8CC7              ; ---------------------------------------------------------------------
 222+ 8CC7              ;
 223+ 8CC7              ;	25/01/24
 224+ 8CC7
 225+ 8CC7 21 8E 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CCA 06 2A        	ld b,42
 227+ 8CCC AF           	xor a
 228+ 8CCD
 229+ 8CCD 77           1 ld (hl),a
 230+ 8CCE 23           	inc hl
 231+ 8CCF 10 FC        	djnz 1B
 232+ 8CD1
 233+ 8CD1 C9           	ret
 234+ 8CD2
 235+ 8CD2              ; ---------------------------------------------------------------------
 236+ 8CD2              ;
 237+ 8CD2              ;	22/01/24
 238+ 8CD2
 239+ 8CD2 2A AF 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CD5 2B           	dec hl
 241+ 8CD6
 242+ 8CD6 24           	inc h
 243+ 8CD7 25           	dec h
 244+ 8CD8
 245+ 8CD8 FC DF 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CDB
 247+ 8CDB              ;	jr nz,1F
 248+ 8CDB
 249+ 8CDB              ;	inc l
 250+ 8CDB              ;	dec l
 251+ 8CDB
 252+ 8CDB              ;	di
 253+ 8CDB              ;	jr z,$
 254+ 8CDB              ;	ei
 255+ 8CDB
 256+ 8CDB 22 AF 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CDE C9           	ret
 258+ 8CDF
 259+ 8CDF              ; ---------------------------------------------------------------------
 260+ 8CDF              ;
 261+ 8CDF              ;	10/2/24
 262+ 8CDF
 263+ 8CDF              Reinicia_entidad_maliciosa
 264+ 8CDF
 265+ 8CDF              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CDF
 267+ 8CDF CD 4E 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8CE2 CD 5B 99     	call Transfiere_datos_de_contadores
 269+ 8CE5
 270+ 8CE5              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8CE5
 272+ 8CE5 3A 8E 89     	ld a,(Tipo)
 273+ 8CE8 CD A3 8C     	call Definicion_segun_tipo
 274+ 8CEB
 275+ 8CEB E5           	push hl
 276+ 8CEC DD E1        	pop ix
 277+ 8CEE
 278+ 8CEE DD 6E 0B     	ld l,(ix+11)
 279+ 8CF1 DD 66 0C     	ld h,(ix+12)
 280+ 8CF4
 281+ 8CF4 22 AD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8CF7
 283+ 8CF7              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8CF7              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8CF7
 286+ 8CF7 2A E9 89     	ld hl,(Scanlines_album_SP)
 287+ 8CFA 01 06 00     	ld bc,6
 288+ 8CFD A7           	and a
 289+ 8CFE ED 42        	sbc hl,bc
 290+ 8D00 22 E9 89     	ld (Scanlines_album_SP),hl
 291+ 8D03
 292+ 8D03 CD E2 8A     	call Cargamos_registros_con_mov_masticado
 293+ 8D06 CD BF 80     	call Genera_datos_de_impresion
 294+ 8D09
 295+ 8D09 2A AF 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D0C 2B           	dec hl
 297+ 8D0D
 298+ 8D0D C9           	ret
 299+ 8D0E
 300+ 8D0E
 301+ 8D0E
 302+ 8D0E
 303+ 8D0E              ; ---------------------------------------------------------------------
 304+ 8D0E              ;
 305+ 8D0E              ;	22/01/24
 306+ 8D0E
 307+ 8D0E 21 EE 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D11 CB 46        	bit 0,(hl)
 309+ 8D13 20 0D        	jr nz,1F
 310+ 8D15 CB 4E        	bit 1,(hl)
 311+ 8D17 20 0C        	jr nz,2F
 312+ 8D19 CB 56        	bit 2,(hl)
 313+ 8D1B 20 0B        	jr nz,3F
 314+ 8D1D CB 5E        	bit 3,(hl)
 315+ 8D1F 20 0A        	jr nz,4F
 316+ 8D21 C9           	ret
 317+ 8D22
 318+ 8D22 CB E6        1 set 4,(hl)
 319+ 8D24 C9           	ret
 320+ 8D25 CB EE        2 set 5,(hl)
 321+ 8D27 C9           	ret
 322+ 8D28 CB F6        3 set 6,(hl)
 323+ 8D2A C9           	ret
 324+ 8D2B CB FE        4 set 7,(hl)
 325+ 8D2D C9           	ret
 326+ 8D2E
 327+ 8D2E              ; ---------------------------------------------------------------------
 328+ 8D2E              ;
 329+ 8D2E              ;	23/01/24
 330+ 8D2E              ;
 331+ 8D2E              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D2E              ;
 333+ 8D2E              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D2E              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D2E              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D2E              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D2E
 338+ 8D2E              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D2E
 340+ 8D2E 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D2F 3D           	dec a
 342+ 8D30 20 06        	jr nz,1F
 343+ 8D32
 344+ 8D32              ; --- Tipo_1
 345+ 8D32
 346+ 8D32 21 EE 89     	ld hl,Ctrl_4
 347+ 8D35 CB C6        	set 0,(hl)
 348+ 8D37 C9           	ret
 349+ 8D38
 350+ 8D38 3D           1 dec a
 351+ 8D39 20 06        	jr nz,2F
 352+ 8D3B
 353+ 8D3B              ; --- Tipo_2
 354+ 8D3B
 355+ 8D3B 21 EE 89     	ld hl,Ctrl_4
 356+ 8D3E CB CE        	set 1,(hl)
 357+ 8D40 C9           	ret
 358+ 8D41
 359+ 8D41 3D           2 dec a
 360+ 8D42 20 06        	jr nz,3F
 361+ 8D44
 362+ 8D44              ; --- Tipo_3
 363+ 8D44
 364+ 8D44 21 EE 89     	ld hl,Ctrl_4
 365+ 8D47 CB D6        	set 2,(hl)
 366+ 8D49 C9           	ret
 367+ 8D4A
 368+ 8D4A              ; --- Tipo_3
 369+ 8D4A
 370+ 8D4A 21 EE 89     3 ld hl,Ctrl_4
 371+ 8D4D CB D6        	set 2,(hl)
 372+ 8D4F C9           	ret
 373+ 8D50
 374+ 8D50              ; ---------------------------------------------------------------------
 375+ 8D50              ;
 376+ 8D50              ;	22/01/24
 377+ 8D50
 378+ 8D50 21 EE 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D53 CB 46        	bit 0,(hl)
 380+ 8D55 20 0E        	jr nz,1F
 381+ 8D57
 382+ 8D57 CB 4E        	bit 1,(hl)
 383+ 8D59 20 10        	jr nz,2F
 384+ 8D5B
 385+ 8D5B CB 56        	bit 2,(hl)
 386+ 8D5D 20 12        	jr nz,3F
 387+ 8D5F
 388+ 8D5F CB 5E        	bit 3,(hl)
 389+ 8D61 20 14        	jr nz,4F
 390+ 8D63 18 19        	jr 6F
 391+ 8D65
 392+ 8D65              ; Entidad_de_Tipo_1.
 393+ 8D65
 394+ 8D65 CB 66        1 bit 4,(hl)
 395+ 8D67 28 15        	jr z,6F
 396+ 8D69 18 10        	jr 5F
 397+ 8D6B
 398+ 8D6B              ; Entidad_de_Tipo_2.
 399+ 8D6B
 400+ 8D6B CB 6E        2 bit 5,(hl)
 401+ 8D6D 28 0F        	jr z,6F
 402+ 8D6F 18 0A        	jr 5F
 403+ 8D71
 404+ 8D71              ; Entidad_de_Tipo_3.
 405+ 8D71
 406+ 8D71 CB 76        3 bit 6,(hl)
 407+ 8D73 28 09        	jr z,6F
 408+ 8D75 18 04        	jr 5F
 409+ 8D77
 410+ 8D77              ; Entidad_de_Tipo_4.
 411+ 8D77
 412+ 8D77 CB 7E        4 bit 7,(hl)
 413+ 8D79 28 03        	jr z,6F
 414+ 8D7B
 415+ 8D7B              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D7B
 417+ 8D7B AF           5 xor a
 418+ 8D7C 3C           	inc a
 419+ 8D7D C9           	ret
 420+ 8D7E
 421+ 8D7E              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D7E
 423+ 8D7E AF           6 xor a
 424+ 8D7F C9           	ret
 425+ 8D80
 426+ 8D80              ;	------------------------------------------------------------------------------------
 427+ 8D80              ;
 428+ 8D80              ;	12/01/24
 429+ 8D80              ;
 430+ 8D80              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D80              ;
 432+ 8D80              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D80              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D80
 435+ 8D80 CB 27        Calcula_salto_en_BC sla a
 436+ 8D82 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8D84 4F           	ld c,a
 438+ 8D85 06 00        	ld b,0
 439+ 8D87 C9           	ret
 440+ 8D88
 441+ 8D88              ; ------------------------------------------------------------------
 442+ 8D88              ;
 443+ 8D88              ;	19/1/24
 444+ 8D88              ;
 445+ 8D88              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8D88              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8D88
 448+ 8D88 A7           Situa_en_datos_de_definicion and a
 449+ 8D89 ED 4A        	adc hl,bc
 450+ 8D8B CD 6C 8B     	call Extrae_address
 451+ 8D8E 22 DF 89         ld (Datos_de_entidad),hl
 452+ 8D91 C9           	ret
 453+ 8D92
 454+ 8D92              ; ------------------------------------------------------------------
 455+ 8D92
 456+ 8D92              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8D92              ; 	inc de
 458+ 8D92              ; 	inc de
 459+ 8D92              ; 	ex de,hl
 460+ 8D92              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8D92              ; 	ret
 462+ 8D92
 463+ 8D92              ; ----------------------------------------------------------------------------------------------------------
 464+ 8D92              ;
 465+ 8D92              ;	31/1/24
 466+ 8D92              ;
 467+ 8D92              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8D92              ;	_ de entidad.
 469+ 8D92              ;
 470+ 8D92              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8D92              ;
 472+ 8D92              ;
 473+ 8D92              ;	MODIFICA: HL,DE y BC
 474+ 8D92
 475+ 8D92
 476+ 8D92              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8D92
 478+ 8D92 11 8E 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8D95 01 03 00     	ld bc,3
 480+ 8D98 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8D9A              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8D9A 11 98 89     	ld de,Attr									; DE en (Attr).
 483+ 8D9D 01 05 00     	ld bc,5
 484+ 8DA0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DA2              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DA2 11 A1 89     	ld de,Posicion_inicio
 487+ 8DA5 01 03 00     	ld bc,3
 488+ 8DA8 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DAA              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DAA 11 AD 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DAD 01 02 00     	ld bc,2
 492+ 8DB0 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DB2
 494+ 8DB2 11 B7 89     	ld de,Frames_explosion
 495+ 8DB5 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DB7 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DB8
 498+ 8DB8 C9           	ret
 499+ 8DB9
 500+ 8DB9              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DB9              ;
 502+ 8DB9              ;	22/01/24
 503+ 8DB9              ;
 504+ 8DB9              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DB9              ;
 506+ 8DB9              ;	Las cajas contienen entidades iniciadas:
 507+ 8DB9              ;
 508+ 8DB9              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DB9              ;
 510+ 8DB9              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DB9              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DB9              ;
 513+ 8DB9              ;	MODIFICA: HL,DE y BC
 514+ 8DB9
 515+ 8DB9 21 8E 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DBC ED 5B D3 89  	ld de,(Puntero_store_caja)
 517+ 8DC0 7E           	ld a,(hl)
 518+ 8DC1 12           	ld (de),a
 519+ 8DC2 13           	inc de 													; (Tipo).
 520+ 8DC3
 521+ 8DC3 21 95 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DC6 01 02 00     	ld bc,2
 523+ 8DC9 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DCB              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DCB 23           	inc hl
 526+ 8DCC 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DCD 12           	ld (de),a
 528+ 8DCE 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DCF
 530+ 8DCF 21 A4 89     	ld hl,Impacto
 531+ 8DD2 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DD3 12           	ld (de),a
 533+ 8DD4 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DD5              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DD5 23           	inc hl
 536+ 8DD6 01 06 00     	ld bc,6
 537+ 8DD9 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DDB              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DDB 01 07 00     	ld bc,7
 540+ 8DDE ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DE0              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DE0              ;															; HL apunta ahora a (Columnas).
 543+ 8DE0 21 B6 89     	ld hl,Ctrl_2
 544+ 8DE3 7E           	ld a,(hl)
 545+ 8DE4 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8DE5 13           	inc de
 547+ 8DE6
 548+ 8DE6 C9           	ret
 549+ 8DE7
 550+ 8DE7              ;---------------------------------------------------------------------------------------------------------------
 551+ 8DE7              ;
 552+ 8DE7              ;	5/1/24
 553+ 8DE7              ;
 554+ 8DE7              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8DE7              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8DE7              ;
 557+ 8DE7              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8DE7              ;
 559+ 8DE7              ;	(Numero_parcial_de_entidades)="7".
 560+ 8DE7              ;
 561+ 8DE7              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8DE7              ;
 563+ 8DE7              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8DE7              ;
 565+ 8DE7              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8DE7              ;	MODIFICA: A y B.
 567+ 8DE7              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8DE7
 569+ 8DE7              Inicializa_Numero_parcial_de_entidades
 570+ 8DE7
 571+ 8DE7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8DE7
 573+ 8DE7 3A D9 89     	ld a,(Numero_de_entidades)
 574+ 8DEA A7           	and a
 575+ 8DEB
 576+ 8DEB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8DEB              ;	jr z,$
 578+ 8DEB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8DEB
 580+ 8DEB 20 03        	jr nz,3F
 581+ 8DED
 582+ 8DED              ; ---------- ---------- ----------
 583+ 8DED
 584+ 8DED              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8DED              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8DED
 587+ 8DED CD 0E 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8DF0
 589+ 8DF0              ; ---------- ---------- ----------
 590+ 8DF0
 591+ 8DF0 3A D9 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8DF3 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8DF5 38 08        	jr c,1F
 594+ 8DF7
 595+ 8DF7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8DF7              ; Actualizamos variables.
 597+ 8DF7
 598+ 8DF7 3E 07        	ld a,7
 599+ 8DF9 32 DA 89     	ld (Numero_parcial_de_entidades),a
 600+ 8DFC 47           	ld b,a
 601+ 8DFD 18 04        	jr 2F
 602+ 8DFF
 603+ 8DFF              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8DFF              ; (Numero_de_entidades)="0".
 605+ 8DFF
 606+ 8DFF 32 DA 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E02 47           	ld b,a
 608+ 8E03 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1791  8E04              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E04              ; ******************************************************************************************************************************************************************************************
   2+ 8E04              ;
   3+ 8E04              ; 26/06/23
   4+ 8E04              ;
   5+ 8E04              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E04
   7+ 8E04              Draw
   8+ 8E04
   9+ 8E04 CD EE 90     	call Prepara_draw
  10+ 8E07 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E08 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E09 28 05        	jr z,2F
  13+ 8E0B
  14+ 8E0B 3A A3 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E0E 18 0C        	jr 1F
  16+ 8E10
  17+ 8E10 2A A1 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E13 22 91 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E16 CD A2 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E19              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E19
  22+ 8E19 CD B2 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E1C
  24+ 8E1C 3A B1 89     1 ld a,(Ctrl_0)
  25+ 8E1F CB 6F        	bit 5,a
  26+ 8E21 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E23
  28+ 8E23 CD 38 8E     	call Comprueba_limite_horizontal
  29+ 8E26 CD C8 8E     	call Comprueba_limite_vertical
  30+ 8E29
  31+ 8E29              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E29              ; -----------------------
  33+ 8E29              ; -----------------------
  34+ 8E29              ; -----------------------
  35+ 8E29
  36+ 8E29 CD 1E 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E2C CD 55 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E2F              ;	call Define_rutina_de_impresion
  39+ 8E2F
  40+ 8E2F 3A B1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E32 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E34 32 B1 89     	ld (Ctrl_0),a
  43+ 8E37
  44+ 8E37 C9           	ret
  45+ 8E38
  46+ 8E38              ; *******************************************************************************************************************************************************************************************
  47+ 8E38              ;	21/01/23
  48+ 8E38              ;
  49+ 8E38              ; 	Comprueba_limite_horizontal.
  50+ 8E38              ;
  51+ 8E38              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E38              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E38              ;
  54+ 8E38              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E38              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E38              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E38              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E38
  59+ 8E38
  60+ 8E38
  61+ 8E38 3A B1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E3B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E3D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E3F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E41 32 B1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E44 18 09            jr 6F
  67+ 8E46 CB 5F        1 bit 3,a
  68+ 8E48 28 0A            jr z,2F
  69+ 8E4A E6 F7            and $f7
  70+ 8E4C 32 B1 89         ld (Ctrl_0),a
  71+ 8E4F CD A2 8F     6 call Inicializacion
  72+ 8E52 18 5B            jr 5F
  73+ 8E54 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E55
  75+ 8E55              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E55              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E55
  78+ 8E55 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E56 2A B3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E59 CD 73 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E5C 67           	ld h,a
  82+ 8E5D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E5E CD 73 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E61 67           	ld h,a
  85+ 8E62 A7           	and a
  86+ 8E63 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E65 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E66 3A A3 89     	ld a,(Cuad_objeto)
  89+ 8E69 FE 02        	cp 2
  90+ 8E6B 38 1E        	jr c,3F
  91+ 8E6D 28 1C        	jr z,3F
  92+ 8E6F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E70 28 23            jr z,7F
  94+ 8E72 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E74 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E76 E1           	pop hl
  97+ 8E77
  98+ 8E77              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E77              ; _para indicar con E="2" en caso necesario.
 100+ 8E77
 101+ 8E77 E5               push hl
 102+ 8E78 C5               push bc
 103+ 8E79 CD 73 99     	call calcula_tercio
 104+ 8E7C FE 01        	cp 1
 105+ 8E7E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E80 CD B0 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8E83 28 26            jr z,9F
 108+ 8E85 38 24            jr c,9F
 109+ 8E87 1E 00        11 ld e,0
 110+ 8E89 18 22            jr 8F
 111+ 8E8B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8E8C 28 07        	jr z, 7F
 113+ 8E8E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8E90 1E 00         	ld e,0
 115+ 8E92 E1           	pop hl
 116+ 8E93 18 04        	jr 4F
 117+ 8E95 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8E97 18 15            jr 10F
 119+ 8E99
 120+ 8E99              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8E99              ; _para indicar con E="2" en caso necesario.
 122+ 8E99
 123+ 8E99 E5           4 push hl
 124+ 8E9A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8E9B CD 73 99     	call calcula_tercio
 126+ 8E9E FE 01        	cp 1
 127+ 8EA0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8EA2 CD B0 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EA5 28 04            jr z,9F
 130+ 8EA7 30 02            jr nc,9F
 131+ 8EA9 18 02        	jr 8F
 132+ 8EAB 1E 02        9 ld e,2
 133+ 8EAD C1           8 pop bc
 134+ 8EAE E1           10 pop hl
 135+ 8EAF C9           5 ret
 136+ 8EB0
 137+ 8EB0              ; --------------------
 138+ 8EB0              ;
 139+ 8EB0              ; 25/08/22
 140+ 8EB0
 141+ 8EB0 CD 73 99     Comprueba_centro call calcula_tercio
 142+ 8EB3 67               ld h,a
 143+ 8EB4 08           	ex af,af
 144+ 8EB5 FE 02        	cp 2
 145+ 8EB7 38 07        	jr c,1F
 146+ 8EB9 28 05        	jr z,1F
 147+ 8EBB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EBE 18 03        	jr 2F
 149+ 8EC0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EC3 08           2 ex af,af
 151+ 8EC4 A7               and a
 152+ 8EC5 ED 42            sbc hl,bc
 153+ 8EC7 C9               ret
 154+ 8EC8
 155+ 8EC8              ; *********************************************************************************************************************************************************************************************
 156+ 8EC8              ;
 157+ 8EC8              ;   16/8/22
 158+ 8EC8              ;
 159+ 8EC8              ;	Comprueba_limite_vertical
 160+ 8EC8              ;
 161+ 8EC8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8EC8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8EC8              ;
 164+ 8EC8
 165+ 8EC8 2A 91 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8ECB 7D           	ld a,l
 167+ 8ECC E6 1F        	and $1F
 168+ 8ECE 57           	ld d,a
 169+ 8ECF 3A B5 89     	ld a,(Limite_vertical)
 170+ 8ED2 BA           	cp d 											; Límite - Posición.
 171+ 8ED3 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8ED4 3A A3 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8ED7 CB 47        	bit 0,a
 174+ 8ED9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8EDB
 176+ 8EDB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8EDB
 178+ 8EDB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EDC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EDE
 181+ 8EDE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EDE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EDE
 184+ 8EDE 3A 95 89         ld a,(Coordenada_X)
 185+ 8EE1 16 0F            ld d,Centro_izquierda
 186+ 8EE3 A7               and a
 187+ 8EE4 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8EE5 28 1E            jr z,3F
 189+ 8EE7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8EE9              ;                                                    ; _salimos sin modificar nada.
 191+ 8EE9 18 0E            jr 2F
 192+ 8EEB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8EEC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8EEE
 195+ 8EEE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8EEE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8EEE
 198+ 8EEE 3A 95 89         ld a,(Coordenada_X)
 199+ 8EF1 16 10            ld d,Centro_derecha
 200+ 8EF3 A7               and a
 201+ 8EF4 92               sub d
 202+ 8EF5 28 0E            jr z,3F
 203+ 8EF7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8EF9              ;                                                    ; _salimos sin modificar nada.
 205+ 8EF9 CB 43        2 bit 0,e
 206+ 8EFB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8EFD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8EFE CD 92 8F         call Modificaccionne
 209+ 8F01 C1           	pop bc
 210+ 8F02 CD A2 8F         call Inicializacion
 211+ 8F05 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F06
 213+ 8F06              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F06
 215+ 8F06 C5           4 push bc
 216+ 8F07 01 90 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F0A 0A           	ld a,(bc)
 218+ 8F0B 3D           	dec a
 219+ 8F0C 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F0D 7D           	ld a,l
 221+ 8F0E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F0F CB 47        	bit 0,a
 223+ 8F11 28 03        	jr z,5F
 224+ 8F13 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F14 18 2E        	jr 7F
 226+ 8F16
 227+ 8F16              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F16
 229+ 8F16 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F17 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F18 3A B1 89     	ld a,(Ctrl_0)
 232+ 8F1B CB 4F        	bit 1,a
 233+ 8F1D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F1F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F20
 236+ 8F20              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F20
 238+ 8F20 1C               inc e
 239+ 8F21 1D               dec e
 240+ 8F22 20 07            jr nz,12F
 241+ 8F24 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F25 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F26 22 91 89     	ld (Posicion_actual),hl
 244+ 8F29 18 44        13 jr 9F
 245+ 8F2B CB 43        12 bit 0,e
 246+ 8F2D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F2F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F2F C1           	pop bc
 249+ 8F30 18 D3        	jr 3B
 250+ 8F32 80           14 add b
 251+ 8F33 6F               ld l,a
 252+ 8F34 22 91 89     	ld (Posicion_actual),hl
 253+ 8F37 CD 92 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F3A 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F3C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F3E 32 B1 89         ld (Ctrl_0),a
 257+ 8F41 F1           	pop af
 258+ 8F42 18 2B        	jr 9F
 259+ 8F44
 260+ 8F44              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F44
 262+ 8F44 F5           7 push af
 263+ 8F45 3A B1 89     	ld a,(Ctrl_0)
 264+ 8F48 CB 47        	bit 0,a
 265+ 8F4A 20 1D        	jr nz,8F
 266+ 8F4C F1           	pop af
 267+ 8F4D
 268+ 8F4D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F4D
 270+ 8F4D 1C           	inc e
 271+ 8F4E 1D               dec e
 272+ 8F4F 20 07            jr nz,10F
 273+ 8F51 90           	sub b
 274+ 8F52 6F               ld l,a
 275+ 8F53 22 91 89     	ld (Posicion_actual),hl
 276+ 8F56 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F58              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F58 CB 43        10 bit 0,e
 279+ 8F5A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F5C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F5C C1           	pop bc
 282+ 8F5D 18 A6        	jr 3B
 283+ 8F5F 90           16 sub b
 284+ 8F60 6F               ld l,a
 285+ 8F61 22 91 89     	ld (Posicion_actual),hl
 286+ 8F64 CD 92 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F67 18 06            jr 9F
 288+ 8F69 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F6B 32 B1 89         ld (Ctrl_0),a
 290+ 8F6E F1           	pop af
 291+ 8F6F C1           9 pop bc
 292+ 8F70 1E 00        	ld e,0
 293+ 8F72 CD A2 8F         call Inicializacion
 294+ 8F75 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F76 08           	ex af,af
 296+ 8F77 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F78 18 8B            jr 3B
 298+ 8F7A
 299+ 8F7A              ; --------------------
 300+ 8F7A
 301+ 8F7A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F7C CD 09 91     1 call PreviousScan
 303+ 8F7F 10 FB            djnz 1B
 304+ 8F81 22 91 89     	ld (Posicion_actual),hl
 305+ 8F84 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8F85 C9           	ret
 307+ 8F86
 308+ 8F86              ; --------------------
 309+ 8F86
 310+ 8F86 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8F88 CD FA 90     1 call NextScan
 312+ 8F8B 10 FB            djnz 1B
 313+ 8F8D 22 91 89     	ld (Posicion_actual),hl
 314+ 8F90 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8F91 C9           	ret
 316+ 8F92
 317+ 8F92              ; --------------------
 318+ 8F92              ;
 319+ 8F92              ;	22/01/23
 320+ 8F92              ;
 321+ 8F92              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8F92              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8F92              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8F92
 325+ 8F92
 326+ 8F92              Modificaccionne
 327+ 8F92
 328+ 8F92 3A A3 89     	ld a,(Cuad_objeto)
 329+ 8F95 FE 02        	cp 2
 330+ 8F97 CC 7A 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8F9A DC 7A 8F         call c,Modifica_Pos_actual
 332+ 8F9D C8           	ret z
 333+ 8F9E CD 86 8F         call Modifica_Pos_actual2
 334+ 8FA1 C9               ret
 335+ 8FA2
 336+ 8FA2              ; *************************************************************************************************************************************************************************************************
 337+ 8FA2              ;
 338+ 8FA2              ;	13/8/22
 339+ 8FA2              ;
 340+ 8FA2              ;	Inicializacion
 341+ 8FA2              ;
 342+ 8FA2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FA2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FA2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FA2              ;
 346+ 8FA2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FA2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FA2              ;	_ desaparece/aparece.
 349+ 8FA2
 350+ 8FA2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FA2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FA2              ;
 353+ 8FA2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FA2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FA2              ; 		   [E] ="0"
 356+ 8FA2
 357+ 8FA2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FA2
 359+ 8FA2 CD 73 99     Inicializacion call calcula_tercio
 360+ 8FA5 28 36        	jr z,primit
 361+ 8FA7 E6 02        	and 2
 362+ 8FA9 20 07        	jr nz,segmit
 363+ 8FAB 7D           	ld a,l
 364+ 8FAC FE 7F        	cp $7f
 365+ 8FAE 38 2D        	jr c,primit
 366+ 8FB0 28 2B        	jr z,primit
 367+ 8FB2 CD 18 90     segmit call column
 368+ 8FB5 38 13        	jr c,tercuad
 369+ 8FB7 3E 04        cuarcuad ld a,4
 370+ 8FB9 32 A3 89     	ld (Cuad_objeto),a
 371+ 8FBC 21 20 48     	ld hl,$4820
 372+ 8FBF 22 B3 89     	ld (Limite_horizontal),hl
 373+ 8FC2 21 B5 89     	ld hl,Limite_vertical
 374+ 8FC5 36 0D        	ld (hl),$0d
 375+ 8FC7 08           	ex af,af
 376+ 8FC8 18 3C        	jr 1F
 377+ 8FCA              tercuad
 378+ 8FCA 3E 03        	ld a,3
 379+ 8FCC 32 A3 89     	ld (Cuad_objeto),a
 380+ 8FCF 21 20 48     	ld hl,$4820
 381+ 8FD2 22 B3 89     	ld (Limite_horizontal),hl
 382+ 8FD5 21 B5 89     	ld hl,Limite_vertical
 383+ 8FD8 36 12        	ld (hl),$12
 384+ 8FDA 08           	ex af,af
 385+ 8FDB 18 29        	jr 1F
 386+ 8FDD CD 18 90     primit call column
 387+ 8FE0 38 13        	jr c, primcuad
 388+ 8FE2              segcuad
 389+ 8FE2 3E 02        	ld a,2
 390+ 8FE4 32 A3 89     	ld (Cuad_objeto),a
 391+ 8FE7 21 C0 4F     	ld hl,$4fc0
 392+ 8FEA 22 B3 89     	ld (Limite_horizontal),hl
 393+ 8FED 21 B5 89     	ld hl,Limite_vertical
 394+ 8FF0 36 0D        	ld (hl),$0d
 395+ 8FF2 08           	ex af,af
 396+ 8FF3 18 11        	jr 1F
 397+ 8FF5              primcuad
 398+ 8FF5 3E 01        	ld a,1
 399+ 8FF7 32 A3 89     	ld (Cuad_objeto),a
 400+ 8FFA 21 C0 4F     	ld hl,$4fc0
 401+ 8FFD 22 B3 89     	ld (Limite_horizontal),hl
 402+ 9000 21 B5 89     	ld hl,Limite_vertical
 403+ 9003 36 12        	ld (hl),$12
 404+ 9005 08           	ex af,af
 405+ 9006
 406+ 9006 C5           1 push bc
 407+ 9007 E5           	push hl
 408+ 9008 D5           	push de
 409+ 9009
 410+ 9009 2A 91 89     	ld hl,(Posicion_actual)
 411+ 900C CD 91 99     	call Genera_coordenadas
 412+ 900F
 413+ 900F D1           	pop de
 414+ 9010 E1           	pop hl
 415+ 9011 C1           	pop bc
 416+ 9012
 417+ 9012 21 B1 89     	ld hl,Ctrl_0
 418+ 9015 CB EE        	set 5,(hl)
 419+ 9017 C9           	ret
 420+ 9018
 421+ 9018              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9018
 423+ 9018              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9018              ;
 425+ 9018              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9018
 427+ 9018 7D           column ld a,l
 428+ 9019 E6 1F        	and $1f
 429+ 901B FE 10         	cp $10
 430+ 901D C9            	ret
 431+ 901E
 432+ 901E              ; --------------------------------------------------------------------------------------------------------------------
 433+ 901E              ;
 434+ 901E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 901E              ;
 436+ 901E              ; 14/12/22
 437+ 901E              ;
 438+ 901E              ;	Modifica: A y BC.
 439+ 901E
 440+ 901E 3A A3 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9021 E6 01        	and 1
 442+ 9023 28 17        	jr z,1F
 443+ 9025
 444+ 9025              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9025
 446+ 9025 3A 95 89     	ld a,(Coordenada_X)
 447+ 9028 47           	ld b,a
 448+ 9029 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 902A 79           	ld a,c
 450+ 902B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 902C 38 08        	jr c,2F
 452+ 902E 47           	ld b,a
 453+ 902F 79           	ld a,c
 454+ 9030 90           	sub b
 455+ 9031 32 B2 89     	ld (Columnas),a
 456+ 9034 18 1B        	jr 4F
 457+ 9036 79           2 ld a,c
 458+ 9037 32 B2 89     	ld (Columnas),a
 459+ 903A 18 15        	jr 4F
 460+ 903C
 461+ 903C              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 903C
 463+ 903C 3A 95 89     1 ld a,(Coordenada_X)
 464+ 903F 81           	add c
 465+ 9040 3D           	dec a
 466+ 9041 D6 1F        	sub $1f
 467+ 9043 38 08        	jr c,3F
 468+ 9045 47           	ld b,a
 469+ 9046 79           	ld a,c
 470+ 9047 90           	sub b
 471+ 9048 32 B2 89     	ld (Columnas),a
 472+ 904B 18 04        	jr 4F
 473+ 904D 79           3 ld a,c
 474+ 904E 32 B2 89     	ld (Columnas),a
 475+ 9051 D9           4 exx
 476+ 9052 4F           	ld c,a
 477+ 9053 D9           	exx
 478+ 9054 C9            ret
 479+ 9055
 480+ 9055              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9055              ;
 482+ 9055              ;   19/7/23
 483+ 9055              ;
 484+ 9055              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9055              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9055              ;
 487+ 9055              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9055              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9055              ;
 490+ 9055              ;	DESTRUYE: HL,B Y A.
 491+ 9055
 492+ 9055 3A A3 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9058 FE 02        	cp 2
 494+ 905A 38 18        	jr c,1F
 495+ 905C 28 16        	jr z,1F
 496+ 905E E6 01        	and 1
 497+ 9060 28 0D        	jr z,3F
 498+ 9062
 499+ 9062              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9062
 501+ 9062 CD A8 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9065
 503+ 9065 7D           9 ld a,l
 504+ 9066 E6 1F        	and $1f
 505+ 9068 28 2A        	jr z,7F
 506+ 906A 2B           	dec hl
 507+ 906B 10 F8        	djnz 9B
 508+ 906D 18 25        	jr 7F
 509+ 906F
 510+ 906F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 906F
 512+ 906F 2A 91 89     3 ld hl,(Posicion_actual)
 513+ 9072 18 20        	jr 7F
 514+ 9074
 515+ 9074 28 14        1 jr z,2F
 516+ 9076
 517+ 9076              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9076
 519+ 9076 CD A8 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9079
 521+ 9079 7D           4 ld a,l
 522+ 907A E6 1F        	and $1f
 523+ 907C 28 03        	jr z,6F
 524+ 907E 2B           	dec hl
 525+ 907F 10 F8        	djnz 4B
 526+ 9081 06 0F        6 ld b,15
 527+ 9083 CD 09 91     5 call PreviousScan
 528+ 9086 10 FB        	djnz 5B
 529+ 9088 18 0A        	jr 7F
 530+ 908A
 531+ 908A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 908A
 533+ 908A CD A8 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 908D 06 0F        	ld b,15
 535+ 908F CD 09 91     8 call PreviousScan
 536+ 9092 10 FB        	djnz 8B
 537+ 9094
 538+ 9094 E5           7 push hl
 539+ 9095 DD E1        	pop ix
 540+ 9097
 541+ 9097 2A 93 89     	ld hl,(Puntero_objeto)
 542+ 909A E5           	push hl
 543+ 909B FD E1        	pop iy
 544+ 909D
 545+ 909D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 909D
 547+ 909D 3A B1 89     	ld a,(Ctrl_0)
 548+ 90A0 CB 77        	bit 6,a
 549+ 90A2 C8           	ret z
 550+ 90A3
 551+ 90A3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90A3              ; _ entidad / Amadeus´.
 553+ 90A3
 554+ 90A3 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90A7
 556+ 90A7 C9           	ret
 557+ 90A8
 558+ 90A8              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90A8              ;
 560+ 90A8              ;	2/1/23
 561+ 90A8              ;
 562+ 90A8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90A8              ;
 564+ 90A8              ;	Tras esta rutina tenemos:
 565+ 90A8              ;
 566+ 90A8              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90A8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90A8              ;
 569+ 90A8              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90A8
 571+ 90A8 2A 91 89     Operandos ld hl,(Posicion_actual)
 572+ 90AB 3A B2 89     	ld a,(Columnas)
 573+ 90AE 3D           	dec a
 574+ 90AF 20 01        	jr nz,1F
 575+ 90B1 3C           	inc a
 576+ 90B2 47           1 ld b,a
 577+ 90B3 C9           	ret
 578+ 90B4
 579+ 90B4              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90B4              ;
 581+ 90B4              ;	3/1/23
 582+ 90B4              ;
 583+ 90B4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90B4              ;
 585+ 90B4              ;	Destruye: A,B,HL y DE.
 586+ 90B4
 587+ 90B4              Define_rutina_de_impresion
 588+ 90B4
 589+ 90B4 3A 90 89     	ld a,(Columns)
 590+ 90B7 47           	ld b,a
 591+ 90B8 3A B2 89     	ld a,(Columnas)
 592+ 90BB B8           	cp b
 593+ 90BC 20 0D        	jr nz,2f
 594+ 90BE
 595+ 90BE              ;	La entidad se imprime entera.
 596+ 90BE
 597+ 90BE 21 5B 91     	ld hl, Indice_entidades_completas
 598+ 90C1 E6 01        	and 1
 599+ 90C3 28 02        	jr z,1F
 600+ 90C5
 601+ 90C5 23           	inc hl
 602+ 90C6 23           	inc hl
 603+ 90C7
 604+ 90C7 CD 6C 8B     1 call Extrae_address
 605+ 90CA C9           	ret		;	ret
 606+ 90CB
 607+ 90CB              ;	La entidad no se imprime entera en pantalla.
 608+ 90CB
 609+ 90CB 3A A3 89     2 ld a,(Cuad_objeto)
 610+ 90CE E6 01        	and 1
 611+ 90D0 28 17        	jr z,3F
 612+ 90D2
 613+ 90D2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90D2
 615+ 90D2 21 5F 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90D5 3A 90 89     4 ld a,(Columns)
 617+ 90D8 E6 01        	and 1
 618+ 90DA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90DC
 620+ 90DC 23           	inc hl
 621+ 90DD 23           	inc hl
 622+ 90DE
 623+ 90DE 3A B2 89     	ld a,(Columnas)
 624+ 90E1 E6 01        	and 1
 625+ 90E3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 90E5
 627+ 90E5 23           	inc hl
 628+ 90E6 23           	inc hl
 629+ 90E7
 630+ 90E7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 90E9
 632+ 90E9 21 65 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 90EC 18 E7        	jr 4B
 634+ 90EE
 635+ 90EE              ; --------------------------------------------------------------------------------------------------------------------
 636+ 90EE              ;
 637+ 90EE              ;	Prepara_draw
 638+ 90EE              ;
 639+ 90EE              ;	Es una rutina de carga.
 640+ 90EE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 90EE              ;
 642+ 90EE              ;	FUNCIONAMIENTO:
 643+ 90EE              ;
 644+ 90EE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 90EE              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 90EE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 90EE              ;
 648+ 90EE              ;	DESTRUYE:
 649+ 90EE              ;
 650+ 90EE              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 90EE
 652+ 90EE 21 8F 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 90F1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 90F2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 90F3 4E           	ld c,(hl)
 656+ 90F4 2A 91 89     	ld hl,(Posicion_actual)
 657+ 90F7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 90F9 C9           	ret
 659+ 90FA
 660+ 90FA              ;----------------------------------------------------------------------------------------------------------------
 661+ 90FA              ;
 662+ 90FA              ;	5/08/22
 663+ 90FA              ;
 664+ 90FA              ;   NextScan.
 665+ 90FA              ;
 666+ 90FA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 90FA              ;
 668+ 90FA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 90FA              ;
 670+ 90FA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 90FA              ;
 672+ 90FA              ;       DESTRUIDOS: AF y HL !!!
 673+ 90FA              ;
 674+ 90FA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 90FA              ;
 676+ 90FA
 677+ 90FA 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 90FB 7C               ld a,h
 679+ 90FC E6 07            and 7
 680+ 90FE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 90FF
 682+ 90FF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9100 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9102 6F               ld l,a
 685+ 9103 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9104
 687+ 9104 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9105 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9107 67               ld h,a
 690+ 9108 C9               ret
 691+ 9109
 692+ 9109              ;----------------------------------------------------------------------------------------------------------------
 693+ 9109              ;
 694+ 9109              ;	5/08/22
 695+ 9109              ;
 696+ 9109              ;   PreviousScan.
 697+ 9109              ;
 698+ 9109              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9109              ;
 700+ 9109              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9109              ;
 702+ 9109              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9109              ;
 704+ 9109              ;       DESTRUIDOS: AF y HL !!!
 705+ 9109              ;
 706+ 9109              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9109              ;
 708+ 9109
 709+ 9109 7C           PreviousScan ld a,h
 710+ 910A 25               dec h               ; Dec H.
 711+ 910B E6 07            and 7
 712+ 910D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 910E
 714+ 910E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 910F D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9111 6F               ld l,a
 717+ 9112 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9113
 719+ 9113 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9114 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9116 67               ld h,a
 722+ 9117 C9               ret
 723+ 9118
 724+ 9118              ; -----------------------------------------------------------------------------------
 725+ 9118              ;
 726+ 9118              ;	31/7/23
 727+ 9118              ;
 728+ 9118              ;	Rutina principal de pintado de entidades.
 729+ 9118              ;	Extrae la foto del frame, (entidades).
 730+ 9118
 731+ 9118              Extrae_Scanlines_album
 732+ 9118
 733+ 9118 21 01 80     	ld hl,Scanlines_album+1
 734+ 911B 7E           	ld a,(hl)
 735+ 911C A7           	and a
 736+ 911D C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 911E
 738+ 911E              ;	No hay datos, (entidades para pintar en este frame).
 739+ 911E
 740+ 911E 3A DC 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9121 A7           	and a
 742+ 9122 C8           	ret z
 743+ 9123
 744+ 9123              ; -----------------------------------
 745+ 9123
 746+ 9123 ED 73 E1 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9127 31 00 80     	ld sp,Scanlines_album
 748+ 912A
 749+ 912A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 912C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 912D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 912E
 753+ 912E ED 73 E3 89  	ld (Stack_2),sp
 754+ 9132 ED 7B E1 89  	ld sp,(Stack)
 755+ 9136
 756+ 9136              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9136
 758+ 9136 3E CD        	ld a,$cd
 759+ 9138 32 40 91     	ld (Imprime),a
 760+ 913B EB           	ex de,hl
 761+ 913C 22 41 91     	ld (Imprime+1),hl
 762+ 913F EB           	ex de,hl
 763+ 9140
 764+ 9140              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9140
 766+ 9140 00 00 00     Imprime db 0,0,0
 767+ 9143
 768+ 9143 ED 73 E1 89  	ld (Stack),sp
 769+ 9147
 770+ 9147 3A DC 89     	ld a,(Numero_de_malotes)
 771+ 914A 3D           	dec a
 772+ 914B 28 09        	jr z,1F
 773+ 914D 32 DC 89      	ld (Numero_de_malotes),a
 774+ 9150
 775+ 9150 ED 7B E3 89  	ld sp,(Stack_2)
 776+ 9154 18 D4        	jr 2B
 777+ 9156
 778+ 9156 AF           1 xor a
 779+ 9157 32 E3 89     	ld (Stack_2),a
 780+ 915A
 781+ 915A C9           	ret
 782+ 915B
 783+ 915B              ; -----------------------------------------------------------------------------------
 784+ 915B              ;
 785+ 915B              ;	28/2/23
 786+ 915B              ;
 787+ 915B              ;	Pinta los disparos generados.
 788+ 915B
 789+ 915B              ;Extrae_foto_disparos
 790+ 915B
 791+ 915B              ;	ld hl,Scanlines_album_disparos+1
 792+ 915B              ;    ld a,(hl)
 793+ 915B              ;    and a
 794+ 915B              ;    ret z
 795+ 915B
 796+ 915B              ;	ld a,(Numero_de_disparotes)
 797+ 915B              ;	and a
 798+ 915B              ;	ret z
 799+ 915B              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 915B              ;	ld sp,Scanlines_album_disparos
 801+ 915B
 802+ 915B              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 915B              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 915B              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 915B
 806+ 915B              ;	ld (Stack_2),sp
 807+ 915B              ;	ld sp,(Stack)
 808+ 915B
 809+ 915B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 915B
 811+ 915B              ;	ld a,$cd
 812+ 915B              ;	ld (Imprime2),a
 813+ 915B              ;	ex de,hl
 814+ 915B              ;	ld (Imprime2+1),hl
 815+ 915B              ;	ex de,hl
 816+ 915B
 817+ 915B              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 915B
 819+ 915B              ;Imprime2 db 0,0,0
 820+ 915B
 821+ 915B              ;	ld a,(Numero_de_disparotes)
 822+ 915B              ;	dec a
 823+ 915B              ;	jr z,1F
 824+ 915B              ; 	ld (Numero_de_disparotes),a
 825+ 915B
 826+ 915B              ;	ld sp,(Stack_2)
 827+ 915B              ;	jr 2B
 828+ 915B
 829+ 915B              ;1 xor a
 830+ 915B              ;	ld (Stack_2),a
 831+ 915B              ;	ret
 832+ 915B
 833+ 915B              ; -----------------------------------------------------------------------------------
 834+ 915B              ;
 835+ 915B              ;	4/9/23
 836+ 915B              ;
 837+ 915B              ;	Rutina principal de pintado de Amadeus.
 838+ 915B              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 915B
 840+ 915B              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 915B              ;	ld a,(hl)
 842+ 915B              ;	and a
 843+ 915B              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 915B
 845+ 915B              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 915B              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 915B              ;	ret z
 848+ 915B
 849+ 915B              ; -----------------------------------
 850+ 915B
 851+ 915B              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 915B              ;	ld sp,Scanlines_album_Amadeus
 853+ 915B
 854+ 915B              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 915B              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 915B              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 915B
 858+ 915B              ;	ld (Stack_2),sp
 859+ 915B              ;	ld sp,(Stack)
 860+ 915B
 861+ 915B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 915B
 863+ 915B              ;	ld a,$cd
 864+ 915B              ;	ld (Imprime_Amadeus),a
 865+ 915B              ;	ex de,hl
 866+ 915B              ;	ld (Imprime_Amadeus+1),hl
 867+ 915B              ;	ex de,hl
 868+ 915B
 869+ 915B              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 915B
 871+ 915B              ;Imprime_Amadeus db 0,0,0
 872+ 915B
 873+ 915B              ;	ld (Stack),sp
 874+ 915B
 875+ 915B              ;	ld a,(Numero_de_malotes)
 876+ 915B              ;	dec a
 877+ 915B              ;	jr z,1F
 878+ 915B              ; 	ld (Numero_de_malotes),a
 879+ 915B
 880+ 915B              ;	ld sp,(Stack_2)
 881+ 915B              ;	jr 2B
 882+ 915B
 883+ 915B              ;1 xor a
 884+ 915B              ;	ld (Stack_2),a
 885+ 915B
 886+ 915B              ;	ret
 887+ 915B
 888+ 915B
 889+ 915B
 890+ 915B
 891+ 915B
 892+ 915B
# file closed: Draw_XOR.asm
1792  915B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 915B              ;   índices de Rutinas de impresión.
   2+ 915B
   3+ 915B 6B 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 915D FF 91            defw Pinta_Amadeus_3x2
   5+ 915F
   6+ 915F D3 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9161 73 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9163 27 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9165
  10+ 9165 FD 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9167 01 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9169 B5 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 916B
  14+ 916B
  15+ 916B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 916B              ;
  17+ 916B              ;   28/2/24
  18+ 916B              ;
  19+ 916B              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 916B              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 916B              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 916B              ;
  23+ 916B              ;   Modifica: AF,HL,BC y DE.
  24+ 916B
  25+ 916B              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 916B
  27+ 916B D9               exx
  28+ 916C 36 01            ld (hl),1
  29+ 916E 2C               inc l
  30+ 916F D9               exx
  31+ 9170
  32+ 9170 FD E5            push iy
  33+ 9172 D1               pop de
  34+ 9173
  35+ 9173 ED 73 E1 89      ld (Stack),sp
  36+ 9177 F9           	ld sp,hl
  37+ 9178 06 10            ld b,16
  38+ 917A
  39+ 917A E1               pop hl
  40+ 917B 1A               ld a,(de)
  41+ 917C 77               ld (hl),a
  42+ 917D 1C           	inc e
  43+ 917E 2C               inc l
  44+ 917F 1A               ld a,(de)
  45+ 9180 77               ld (hl),a
  46+ 9181 1C               inc e
  47+ 9182
  48+ 9182 E1               pop hl
  49+ 9183 1A               ld a,(de)
  50+ 9184 77               ld (hl),a
  51+ 9185 1C           	inc e
  52+ 9186 2C               inc l
  53+ 9187 1A               ld a,(de)
  54+ 9188 77               ld (hl),a
  55+ 9189 1C               inc e
  56+ 918A
  57+ 918A E1               pop hl
  58+ 918B 1A               ld a,(de)
  59+ 918C 77               ld (hl),a
  60+ 918D 1C           	inc e
  61+ 918E 2C               inc l
  62+ 918F 1A               ld a,(de)
  63+ 9190 77               ld (hl),a
  64+ 9191 1C               inc e
  65+ 9192
  66+ 9192 E1               pop hl
  67+ 9193 1A               ld a,(de)
  68+ 9194 77               ld (hl),a
  69+ 9195 1C           	inc e
  70+ 9196 2C               inc l
  71+ 9197 1A               ld a,(de)
  72+ 9198 77               ld (hl),a
  73+ 9199 1C               inc e
  74+ 919A
  75+ 919A E1               pop hl
  76+ 919B 1A               ld a,(de)
  77+ 919C 77               ld (hl),a
  78+ 919D 1C           	inc e
  79+ 919E 2C               inc l
  80+ 919F 1A               ld a,(de)
  81+ 91A0 77               ld (hl),a
  82+ 91A1 1C               inc e
  83+ 91A2
  84+ 91A2 E1               pop hl
  85+ 91A3 1A               ld a,(de)
  86+ 91A4 77               ld (hl),a
  87+ 91A5 1C           	inc e
  88+ 91A6 2C               inc l
  89+ 91A7 1A               ld a,(de)
  90+ 91A8 77               ld (hl),a
  91+ 91A9 1C               inc e
  92+ 91AA
  93+ 91AA E1               pop hl
  94+ 91AB 1A               ld a,(de)
  95+ 91AC 77               ld (hl),a
  96+ 91AD 1C           	inc e
  97+ 91AE 2C               inc l
  98+ 91AF 1A               ld a,(de)
  99+ 91B0 77               ld (hl),a
 100+ 91B1 1C               inc e
 101+ 91B2
 102+ 91B2 E1               pop hl
 103+ 91B3 1A               ld a,(de)
 104+ 91B4 77               ld (hl),a
 105+ 91B5 1C           	inc e
 106+ 91B6 2C               inc l
 107+ 91B7 1A               ld a,(de)
 108+ 91B8 77               ld (hl),a
 109+ 91B9 1C               inc e
 110+ 91BA
 111+ 91BA E1               pop hl
 112+ 91BB 1A               ld a,(de)
 113+ 91BC 77               ld (hl),a
 114+ 91BD 1C           	inc e
 115+ 91BE 2C               inc l
 116+ 91BF 1A               ld a,(de)
 117+ 91C0 77               ld (hl),a
 118+ 91C1 1C               inc e
 119+ 91C2
 120+ 91C2 E1               pop hl
 121+ 91C3 1A               ld a,(de)
 122+ 91C4 77               ld (hl),a
 123+ 91C5 1C           	inc e
 124+ 91C6 2C               inc l
 125+ 91C7 1A               ld a,(de)
 126+ 91C8 77               ld (hl),a
 127+ 91C9 1C               inc e
 128+ 91CA
 129+ 91CA E1               pop hl
 130+ 91CB 1A               ld a,(de)
 131+ 91CC 77               ld (hl),a
 132+ 91CD 1C           	inc e
 133+ 91CE 2C               inc l
 134+ 91CF 1A               ld a,(de)
 135+ 91D0 77               ld (hl),a
 136+ 91D1 1C               inc e
 137+ 91D2
 138+ 91D2 E1               pop hl
 139+ 91D3 1A               ld a,(de)
 140+ 91D4 77               ld (hl),a
 141+ 91D5 1C           	inc e
 142+ 91D6 2C               inc l
 143+ 91D7 1A               ld a,(de)
 144+ 91D8 77               ld (hl),a
 145+ 91D9 1C               inc e
 146+ 91DA
 147+ 91DA E1               pop hl
 148+ 91DB 1A               ld a,(de)
 149+ 91DC 77               ld (hl),a
 150+ 91DD 1C           	inc e
 151+ 91DE 2C               inc l
 152+ 91DF 1A               ld a,(de)
 153+ 91E0 77               ld (hl),a
 154+ 91E1 1C               inc e
 155+ 91E2
 156+ 91E2 E1               pop hl
 157+ 91E3 1A               ld a,(de)
 158+ 91E4 77               ld (hl),a
 159+ 91E5 1C           	inc e
 160+ 91E6 2C               inc l
 161+ 91E7 1A               ld a,(de)
 162+ 91E8 77               ld (hl),a
 163+ 91E9 1C               inc e
 164+ 91EA
 165+ 91EA E1               pop hl
 166+ 91EB 1A               ld a,(de)
 167+ 91EC 77               ld (hl),a
 168+ 91ED 1C           	inc e
 169+ 91EE 2C               inc l
 170+ 91EF 1A               ld a,(de)
 171+ 91F0 77               ld (hl),a
 172+ 91F1 1C               inc e
 173+ 91F2
 174+ 91F2 E1               pop hl
 175+ 91F3 1A               ld a,(de)
 176+ 91F4 77               ld (hl),a
 177+ 91F5 1C           	inc e
 178+ 91F6 2C               inc l
 179+ 91F7 1A               ld a,(de)
 180+ 91F8 77               ld (hl),a
 181+ 91F9 1C               inc e
 182+ 91FA
 183+ 91FA ED 7B E1 89      ld sp,(Stack)
 184+ 91FE
 185+ 91FE C9           	ret
 186+ 91FF
 187+ 91FF              Pinta_Amadeus_3x2
 188+ 91FF
 189+ 91FF D9               exx
 190+ 9200 36 02            ld (hl),2
 191+ 9202 2C               inc l
 192+ 9203 D9               exx
 193+ 9204
 194+ 9204 FD E5            push iy
 195+ 9206 D1               pop de
 196+ 9207
 197+ 9207 ED 73 E1 89      ld (Stack),sp
 198+ 920B F9               ld sp,hl
 199+ 920C 06 10            ld b,16
 200+ 920E
 201+ 920E E1               pop hl
 202+ 920F 1A               ld a,(de)
 203+ 9210 77               ld (hl),a
 204+ 9211 1C               inc e
 205+ 9212 2C               inc l
 206+ 9213 1A               ld a,(de)
 207+ 9214 77               ld (hl),a
 208+ 9215 1C               inc e
 209+ 9216 2C               inc l
 210+ 9217 1A               ld a,(de)
 211+ 9218 77               ld (hl),a
 212+ 9219 1C               inc e
 213+ 921A
 214+ 921A E1               pop hl
 215+ 921B 1A               ld a,(de)
 216+ 921C 77               ld (hl),a
 217+ 921D 1C               inc e
 218+ 921E 2C               inc l
 219+ 921F 1A               ld a,(de)
 220+ 9220 77               ld (hl),a
 221+ 9221 1C               inc e
 222+ 9222 2C               inc l
 223+ 9223 1A               ld a,(de)
 224+ 9224 77               ld (hl),a
 225+ 9225 1C               inc e
 226+ 9226
 227+ 9226 E1               pop hl
 228+ 9227 1A               ld a,(de)
 229+ 9228 77               ld (hl),a
 230+ 9229 1C               inc e
 231+ 922A 2C               inc l
 232+ 922B 1A               ld a,(de)
 233+ 922C 77               ld (hl),a
 234+ 922D 1C               inc e
 235+ 922E 2C               inc l
 236+ 922F 1A               ld a,(de)
 237+ 9230 77               ld (hl),a
 238+ 9231 1C               inc e
 239+ 9232
 240+ 9232 E1               pop hl
 241+ 9233 1A               ld a,(de)
 242+ 9234 77               ld (hl),a
 243+ 9235 1C               inc e
 244+ 9236 2C               inc l
 245+ 9237 1A               ld a,(de)
 246+ 9238 77               ld (hl),a
 247+ 9239 1C               inc e
 248+ 923A 2C               inc l
 249+ 923B 1A               ld a,(de)
 250+ 923C 77               ld (hl),a
 251+ 923D 1C               inc e
 252+ 923E
 253+ 923E E1               pop hl
 254+ 923F 1A               ld a,(de)
 255+ 9240 77               ld (hl),a
 256+ 9241 1C               inc e
 257+ 9242 2C               inc l
 258+ 9243 1A               ld a,(de)
 259+ 9244 77               ld (hl),a
 260+ 9245 1C               inc e
 261+ 9246 2C               inc l
 262+ 9247 1A               ld a,(de)
 263+ 9248 77               ld (hl),a
 264+ 9249 1C               inc e
 265+ 924A
 266+ 924A E1               pop hl
 267+ 924B 1A               ld a,(de)
 268+ 924C 77               ld (hl),a
 269+ 924D 1C               inc e
 270+ 924E 2C               inc l
 271+ 924F 1A               ld a,(de)
 272+ 9250 77               ld (hl),a
 273+ 9251 1C               inc e
 274+ 9252 2C               inc l
 275+ 9253 1A               ld a,(de)
 276+ 9254 77               ld (hl),a
 277+ 9255 1C               inc e
 278+ 9256
 279+ 9256 E1               pop hl
 280+ 9257 1A               ld a,(de)
 281+ 9258 77               ld (hl),a
 282+ 9259 1C               inc e
 283+ 925A 2C               inc l
 284+ 925B 1A               ld a,(de)
 285+ 925C 77               ld (hl),a
 286+ 925D 1C               inc e
 287+ 925E 2C               inc l
 288+ 925F 1A               ld a,(de)
 289+ 9260 77               ld (hl),a
 290+ 9261 1C               inc e
 291+ 9262
 292+ 9262 E1               pop hl
 293+ 9263 1A               ld a,(de)
 294+ 9264 77               ld (hl),a
 295+ 9265 1C               inc e
 296+ 9266 2C               inc l
 297+ 9267 1A               ld a,(de)
 298+ 9268 77               ld (hl),a
 299+ 9269 1C               inc e
 300+ 926A 2C               inc l
 301+ 926B 1A               ld a,(de)
 302+ 926C 77               ld (hl),a
 303+ 926D 1C               inc e
 304+ 926E
 305+ 926E E1               pop hl
 306+ 926F 1A               ld a,(de)
 307+ 9270 77               ld (hl),a
 308+ 9271 1C               inc e
 309+ 9272 2C               inc l
 310+ 9273 1A               ld a,(de)
 311+ 9274 77               ld (hl),a
 312+ 9275 1C               inc e
 313+ 9276 2C               inc l
 314+ 9277 1A               ld a,(de)
 315+ 9278 77               ld (hl),a
 316+ 9279 1C               inc e
 317+ 927A
 318+ 927A E1               pop hl
 319+ 927B 1A               ld a,(de)
 320+ 927C 77               ld (hl),a
 321+ 927D 1C               inc e
 322+ 927E 2C               inc l
 323+ 927F 1A               ld a,(de)
 324+ 9280 77               ld (hl),a
 325+ 9281 1C               inc e
 326+ 9282 2C               inc l
 327+ 9283 1A               ld a,(de)
 328+ 9284 77               ld (hl),a
 329+ 9285 1C               inc e
 330+ 9286
 331+ 9286 E1               pop hl
 332+ 9287 1A               ld a,(de)
 333+ 9288 77               ld (hl),a
 334+ 9289 1C               inc e
 335+ 928A 2C               inc l
 336+ 928B 1A               ld a,(de)
 337+ 928C 77               ld (hl),a
 338+ 928D 1C               inc e
 339+ 928E 2C               inc l
 340+ 928F 1A               ld a,(de)
 341+ 9290 77               ld (hl),a
 342+ 9291 1C               inc e
 343+ 9292
 344+ 9292 E1               pop hl
 345+ 9293 1A               ld a,(de)
 346+ 9294 77               ld (hl),a
 347+ 9295 1C               inc e
 348+ 9296 2C               inc l
 349+ 9297 1A               ld a,(de)
 350+ 9298 77               ld (hl),a
 351+ 9299 1C               inc e
 352+ 929A 2C               inc l
 353+ 929B 1A               ld a,(de)
 354+ 929C 77               ld (hl),a
 355+ 929D 1C               inc e
 356+ 929E
 357+ 929E E1               pop hl
 358+ 929F 1A               ld a,(de)
 359+ 92A0 77               ld (hl),a
 360+ 92A1 1C               inc e
 361+ 92A2 2C               inc l
 362+ 92A3 1A               ld a,(de)
 363+ 92A4 77               ld (hl),a
 364+ 92A5 1C               inc e
 365+ 92A6 2C               inc l
 366+ 92A7 1A               ld a,(de)
 367+ 92A8 77               ld (hl),a
 368+ 92A9 1C               inc e
 369+ 92AA
 370+ 92AA E1               pop hl
 371+ 92AB 1A               ld a,(de)
 372+ 92AC 77               ld (hl),a
 373+ 92AD 1C               inc e
 374+ 92AE 2C               inc l
 375+ 92AF 1A               ld a,(de)
 376+ 92B0 77               ld (hl),a
 377+ 92B1 1C               inc e
 378+ 92B2 2C               inc l
 379+ 92B3 1A               ld a,(de)
 380+ 92B4 77               ld (hl),a
 381+ 92B5 1C               inc e
 382+ 92B6
 383+ 92B6 E1               pop hl
 384+ 92B7 1A               ld a,(de)
 385+ 92B8 77               ld (hl),a
 386+ 92B9 1C               inc e
 387+ 92BA 2C               inc l
 388+ 92BB 1A               ld a,(de)
 389+ 92BC 77               ld (hl),a
 390+ 92BD 1C               inc e
 391+ 92BE 2C               inc l
 392+ 92BF 1A               ld a,(de)
 393+ 92C0 77               ld (hl),a
 394+ 92C1 1C               inc e
 395+ 92C2
 396+ 92C2 E1               pop hl
 397+ 92C3 1A               ld a,(de)
 398+ 92C4 77               ld (hl),a
 399+ 92C5 1C               inc e
 400+ 92C6 2C               inc l
 401+ 92C7 1A               ld a,(de)
 402+ 92C8 77               ld (hl),a
 403+ 92C9 1C               inc e
 404+ 92CA 2C               inc l
 405+ 92CB 1A               ld a,(de)
 406+ 92CC 77               ld (hl),a
 407+ 92CD 1C               inc e
 408+ 92CE
 409+ 92CE ED 7B E1 89      ld sp,(Stack)
 410+ 92D2
 411+ 92D2 C9               ret
 412+ 92D3
 413+ 92D3              ; ---------------------------------------------------
 414+ 92D3
 415+ 92D3 ED 73 E1 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92D7 FD F9        	ld sp,iy
 417+ 92D9
 418+ 92D9              ; >>>
 419+ 92D9
 420+ 92D9 06 10            ld b,16
 421+ 92DB D1           1 pop de
 422+ 92DC 7A           	ld a,d
 423+ 92DD AE           	xor (hl)
 424+ 92DE 77           	ld (hl),a
 425+ 92DF 24           	inc h
 426+ 92E0 7C               ld a,h
 427+ 92E1 E6 07            and 7
 428+ 92E3 20 0C            jr nz,2F
 429+ 92E5 7D               ld a,l
 430+ 92E6 C6 20            add a,$20
 431+ 92E8 6F               ld l,a
 432+ 92E9 38 06            jr c,2F
 433+ 92EB 7C               ld a,h
 434+ 92EC D6 08            sub 8
 435+ 92EE 67               ld h,a
 436+ 92EF 18 00            jr 2F
 437+ 92F1 7C           2 ld a,h
 438+ 92F2 FE 58            cp $58
 439+ 92F4 28 02            jr z,3F
 440+ 92F6 10 E3            djnz 1B
 441+ 92F8 ED 7B E1 89  3 ld sp,(Stack)
 442+ 92FC C9           	ret
 443+ 92FD
 444+ 92FD ED 73 E1 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9301 FD F9        	ld sp,iy
 446+ 9303
 447+ 9303              ; >>>
 448+ 9303
 449+ 9303 06 10            ld b,16
 450+ 9305 D1           1 pop de
 451+ 9306 7B           	ld a,e
 452+ 9307 AE           	xor (hl)
 453+ 9308 77           	ld (hl),a
 454+ 9309 24           	inc h
 455+ 930A 7C               ld a,h
 456+ 930B E6 07            and 7
 457+ 930D 20 0C            jr nz,2F
 458+ 930F 7D               ld a,l
 459+ 9310 C6 20            add a,$20
 460+ 9312 6F               ld l,a
 461+ 9313 38 06            jr c,2F
 462+ 9315 7C               ld a,h
 463+ 9316 D6 08            sub 8
 464+ 9318 67               ld h,a
 465+ 9319 18 00            jr 2F
 466+ 931B 7C           2 ld a,h
 467+ 931C FE 58            cp $58
 468+ 931E 28 02            jr z,3F
 469+ 9320 10 E3            djnz 1B
 470+ 9322 ED 7B E1 89  3 ld sp,(Stack)
 471+ 9326 C9           	ret
 472+ 9327
 473+ 9327              ; ---------------------------------------------------
 474+ 9327
 475+ 9327 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 932B FD F9        	ld sp,iy
 477+ 932D 06 08            ld b,8
 478+ 932F D1           1 pop de
 479+ 9330 7A           	ld a,d
 480+ 9331 AE           	xor (hl)
 481+ 9332 77           	ld (hl),a
 482+ 9333 23           	inc hl
 483+ 9334 D1           	pop de
 484+ 9335 7B           	ld a,e
 485+ 9336 AE           	xor (hl)
 486+ 9337 77           	ld (hl),a
 487+ 9338 2B           	dec hl
 488+ 9339 24            	inc h
 489+ 933A 7C               ld a,h
 490+ 933B E6 07            and 7
 491+ 933D 20 0A            jr nz,2F
 492+ 933F 7D               ld a,l
 493+ 9340 C6 20            add a,$20
 494+ 9342 6F               ld l,a
 495+ 9343 38 04            jr c,2F
 496+ 9345 7C               ld a,h
 497+ 9346 D6 08            sub 8
 498+ 9348 67               ld h,a
 499+ 9349 7C           2 ld a,h
 500+ 934A FE 58            cp $58
 501+ 934C 28 20            jr z,4F
 502+ 934E D1               pop de
 503+ 934F 7B           	ld a,e
 504+ 9350 AE           	xor (hl)
 505+ 9351 77           	ld (hl),a
 506+ 9352 23           	inc hl
 507+ 9353 7A           	ld a,d
 508+ 9354 AE           	xor (hl)
 509+ 9355 77           	ld (hl),a
 510+ 9356 2B           	dec hl
 511+ 9357 24           	inc h
 512+ 9358 7C               ld a,h
 513+ 9359 E6 07            and 7
 514+ 935B 20 0A            jr nz,3F
 515+ 935D 7D               ld a,l
 516+ 935E C6 20            add a,$20
 517+ 9360 6F               ld l,a
 518+ 9361 38 04            jr c,3F
 519+ 9363 7C               ld a,h
 520+ 9364 D6 08            sub 8
 521+ 9366 67               ld h,a
 522+ 9367 7C           3 ld a,h
 523+ 9368 FE 58            cp $58
 524+ 936A 28 02            jr z,4F
 525+ 936C 10 C1            djnz 1B
 526+ 936E ED 7B E1 89  4 ld sp,(Stack)
 527+ 9372 C9           	ret
 528+ 9373
 529+ 9373 ED 73 E1 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 9377 FD F9        	ld sp,iy
 531+ 9379 06 08            ld b,8
 532+ 937B D1           1 pop de
 533+ 937C D1           	pop de
 534+ 937D 7B           	ld a,e
 535+ 937E AE           	xor (hl)
 536+ 937F 77           	ld (hl),a
 537+ 9380 24            	inc h
 538+ 9381 7C               ld a,h
 539+ 9382 E6 07            and 7
 540+ 9384 20 0A            jr nz,2F
 541+ 9386 7D               ld a,l
 542+ 9387 C6 20            add a,$20
 543+ 9389 6F               ld l,a
 544+ 938A 38 04            jr c,2F
 545+ 938C 7C               ld a,h
 546+ 938D D6 08            sub 8
 547+ 938F 67               ld h,a
 548+ 9390 7C           2 ld a,h
 549+ 9391 FE 58            cp $58
 550+ 9393 28 1B            jr z,4F
 551+ 9395 D1               pop de
 552+ 9396 7A           	ld a,d
 553+ 9397 AE           	xor (hl)
 554+ 9398 77           	ld (hl),a
 555+ 9399 24           	inc h
 556+ 939A 7C               ld a,h
 557+ 939B E6 07            and 7
 558+ 939D 20 0A            jr nz,3F
 559+ 939F 7D               ld a,l
 560+ 93A0 C6 20            add a,$20
 561+ 93A2 6F               ld l,a
 562+ 93A3 38 04            jr c,3F
 563+ 93A5 7C               ld a,h
 564+ 93A6 D6 08            sub 8
 565+ 93A8 67               ld h,a
 566+ 93A9 7C           3 ld a,h
 567+ 93AA FE 58            cp $58
 568+ 93AC 28 02            jr z,4F
 569+ 93AE 10 CB            djnz 1B
 570+ 93B0 ED 7B E1 89  4 ld sp,(Stack)
 571+ 93B4 C9           	ret
 572+ 93B5
 573+ 93B5 ED 73 E1 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93B9 FD F9        	ld sp,iy
 575+ 93BB 06 08            ld b,8
 576+ 93BD D1           1 pop de
 577+ 93BE 7B           	ld a,e
 578+ 93BF AE           	xor (hl)
 579+ 93C0 77           	ld (hl),a
 580+ 93C1 23           	inc hl
 581+ 93C2 7A           	ld a,d
 582+ 93C3 AE           	xor (hl)
 583+ 93C4 77           	ld (hl),a
 584+ 93C5 2B           	dec hl
 585+ 93C6 24             	inc h
 586+ 93C7 7C               ld a,h
 587+ 93C8 E6 07            and 7
 588+ 93CA 20 0A            jr nz,2F
 589+ 93CC 7D               ld a,l
 590+ 93CD C6 20            add a,$20
 591+ 93CF 6F               ld l,a
 592+ 93D0 38 04            jr c,2F
 593+ 93D2 7C               ld a,h
 594+ 93D3 D6 08            sub 8
 595+ 93D5 67               ld h,a
 596+ 93D6 7C           2 ld a,h
 597+ 93D7 FE 58            cp $58
 598+ 93D9 28 21            jr z,4F
 599+ 93DB D1               pop de
 600+ 93DC 7A           	ld a,d
 601+ 93DD AE           	xor (hl)
 602+ 93DE 77           	ld (hl),a
 603+ 93DF 23           	inc hl
 604+ 93E0 D1               pop de
 605+ 93E1 7B           	ld a,e
 606+ 93E2 AE           	xor (hl)
 607+ 93E3 77           	ld (hl),a
 608+ 93E4 2B           	dec hl
 609+ 93E5 24           	inc h
 610+ 93E6 7C               ld a,h
 611+ 93E7 E6 07            and 7
 612+ 93E9 20 0A            jr nz,3F
 613+ 93EB 7D               ld a,l
 614+ 93EC C6 20            add a,$20
 615+ 93EE 6F               ld l,a
 616+ 93EF 38 04            jr c,3F
 617+ 93F1 7C               ld a,h
 618+ 93F2 D6 08            sub 8
 619+ 93F4 67               ld h,a
 620+ 93F5 7C           3 ld a,h
 621+ 93F6 FE 58            cp $58
 622+ 93F8 28 02            jr z,4F
 623+ 93FA 10 C1            djnz 1B
 624+ 93FC ED 7B E1 89  4 ld sp,(Stack)
 625+ 9400 C9           	ret
 626+ 9401
 627+ 9401 ED 73 E1 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9405 FD F9        	ld sp,iy
 629+ 9407 06 08            ld b,8
 630+ 9409 D1           1 pop de
 631+ 940A 7B           	ld a,e
 632+ 940B AE           	xor (hl)
 633+ 940C 77           	ld (hl),a
 634+ 940D 24            	inc h
 635+ 940E 7C               ld a,h
 636+ 940F E6 07            and 7
 637+ 9411 20 0A            jr nz,2F
 638+ 9413 7D               ld a,l
 639+ 9414 C6 20            add a,$20
 640+ 9416 6F               ld l,a
 641+ 9417 38 04            jr c,2F
 642+ 9419 7C               ld a,h
 643+ 941A D6 08            sub 8
 644+ 941C 67               ld h,a
 645+ 941D 7C           2 ld a,h
 646+ 941E FE 58            cp $58
 647+ 9420 28 1C            jr z,4F
 648+ 9422 D1               pop de
 649+ 9423 7A           	ld a,d
 650+ 9424 AE           	xor (hl)
 651+ 9425 77           	ld (hl),a
 652+ 9426 24           	inc h
 653+ 9427 7C               ld a,h
 654+ 9428 E6 07            and 7
 655+ 942A 20 0A            jr nz,3F
 656+ 942C 7D               ld a,l
 657+ 942D C6 20            add a,$20
 658+ 942F 6F               ld l,a
 659+ 9430 38 04            jr c,3F
 660+ 9432 7C               ld a,h
 661+ 9433 D6 08            sub 8
 662+ 9435 67               ld h,a
 663+ 9436 7C           3 ld a,h
 664+ 9437 FE 58            cp $58
 665+ 9439 28 03            jr z,4F
 666+ 943B D1               pop de
 667+ 943C 10 CB            djnz 1B
 668+ 943E ED 7B E1 89  4 ld sp,(Stack)
 669+ 9442 C9           	ret
 670+ 9443
 671+ 9443              ; ---------------------------------------------------
 672+ 9443              ;
 673+ 9443              ;   27/02/23
 674+ 9443              ;
 675+ 9443              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9443              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9443              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9443
 679+ 9443 ED 73 E1 89  Pinta_Disparo ld (Stack),sp
 680+ 9447 FD F9            ld sp,iy
 681+ 9449 06 03            ld b,3
 682+ 944B D1           1 pop de
 683+ 944C 7B               ld a,e
 684+ 944D AE               xor (hl)
 685+ 944E 77               ld (hl),a
 686+ 944F 23               inc hl
 687+ 9450 7A               ld a,d
 688+ 9451 AE               xor (hl)
 689+ 9452 77               ld (hl),a
 690+ 9453 2B               dec hl
 691+ 9454
 692+ 9454 24               inc h
 693+ 9455 7C               ld a,h
 694+ 9456 E6 07            and 7
 695+ 9458 20 0A            jr nz,2F
 696+ 945A 7D               ld a,l
 697+ 945B C6 20            add a,$20
 698+ 945D 6F               ld l,a
 699+ 945E 38 04            jr c,2F
 700+ 9460 7C               ld a,h
 701+ 9461 D6 08            sub 8
 702+ 9463 67               ld h,a
 703+ 9464 7C           2 ld a,h
 704+ 9465 FE 58            cp $58
 705+ 9467 28 02            jr z,3F
 706+ 9469
 707+ 9469 10 E0            djnz 1B
 708+ 946B ED 7B E1 89  3 ld sp,(Stack)
 709+ 946F C9               ret
 710+ 9470
# file closed: Rutinas_de_impresion_sprites.asm
1793  9470              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9470
   2+ 9470              ; ******************************************************************************************************************************************************************************************
   3+ 9470              ;
   4+ 9470              ;   20/05/23
   5+ 9470              ;
   6+ 9470              ;	Recompone_posicion_inicio
   7+ 9470              ;
   8+ 9470              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9470              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9470              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9470              ;	_ a una u otra rutina.
  12+ 9470
  13+ 9470              Recompone_posicion_inicio
  14+ 9470
  15+ 9470 2A A1 89     	ld hl,(Posicion_inicio)
  16+ 9473 7D           	ld a,l
  17+ 9474 E6 1F        	and $1f
  18+ 9476 28 16        	jr z,1F
  19+ 9478
  20+ 9478 FE 1F        	cp $1f
  21+ 947A 28 0D        	jr z,3F
  22+ 947C
  23+ 947C 21 B6 89     	ld hl,Ctrl_2
  24+ 947F CB C6        	set 0,(hl)
  25+ 9481 2A 93 89     	ld hl,(Puntero_objeto)
  26+ 9484 22 D1 89     	ld (Repone_puntero_objeto),hl
  27+ 9487 18 08        	jr 2F
  28+ 9489
  29+ 9489 CD 37 96     3 call Mov_left
  30+ 948C 18 03        	jr 2F
  31+ 948E
  32+ 948E CD 14 95     1 call Mov_right
  33+ 9491 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9494 22 93 89     	ld (Puntero_objeto),hl
  35+ 9497 C9           	ret
  36+ 9498
  37+ 9498              ; ******************************************************************************************************************************************************************************************
  38+ 9498              ;
  39+ 9498              ;   27/05/23
  40+ 9498              ;
  41+ 9498              ;	Mov_down
  42+ 9498              ;
  43+ 9498              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9498              ;
  45+ 9498              ;
  46+ 9498              Mov_down
  47+ 9498
  48+ 9498 CD 02 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 949B              ;																	; _ repone (Puntero_objeto).
  50+ 949B 21 B1 89     	ld hl,Ctrl_0
  51+ 949E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94A0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94A0              ; 																	; _ en el caso de que no lo haya.
  54+ 94A0 3A BB 89     	ld a,(Vel_down)
  55+ 94A3 47           	ld b,a
  56+ 94A4 2A 91 89         ld hl,(Posicion_actual)
  57+ 94A7 CD 73 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94AA E6 02        	and 2
  59+ 94AC 28 17        	jr z,1F
  60+ 94AE
  61+ 94AE              ; Nos encontramos en el último tercio de pantalla.
  62+ 94AE              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94AE
  64+ 94AE 7C           	ld a,h
  65+ 94AF FE 57        	cp $57
  66+ 94B1 20 12        	jr nz,1F
  67+ 94B3
  68+ 94B3 7D           	ld a,l
  69+ 94B4 C6 20        	add $20
  70+ 94B6 30 0D        	jr nc,1F
  71+ 94B8
  72+ 94B8              ; ------------------------------
  73+ 94B8              ;
  74+ 94B8              ;	12/01/24
  75+ 94B8
  76+ 94B8              ;	call Reaparece_arriba
  77+ 94B8 CD C4 97     	call Reinicio
  78+ 94BB
  79+ 94BB              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94BB
  81+ 94BB 3A ED 89     	ld a,(Ctrl_3)
  82+ 94BE CB CF        	set 1,a
  83+ 94C0 32 ED 89     	ld (Ctrl_3),a
  84+ 94C3
  85+ 94C3 18 08        	jr 3F
  86+ 94C5              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94C5              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94C5              ; ------------------------------
  89+ 94C5
  90+ 94C5 CD FA 90     1 call NextScan
  91+ 94C8 22 91 89     	ld (Posicion_actual),hl
  92+ 94CB 10 DA            djnz 2B
  93+ 94CD CD 91 99     3 call Genera_coordenadas
  94+ 94D0 C9           	ret
  95+ 94D1
  96+ 94D1              ; ******************************************************************************************************************************************************************************************
  97+ 94D1              ;
  98+ 94D1              ;   27/05/23
  99+ 94D1              ;
 100+ 94D1              ;	Mov_up
 101+ 94D1              ;
 102+ 94D1              ; 	Mueve el Sprite hacia arriba.
 103+ 94D1              ;
 104+ 94D1              ;
 105+ 94D1              Mov_up
 106+ 94D1
 107+ 94D1 CD 02 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94D4              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94D4 21 B1 89     	ld hl,Ctrl_0
 110+ 94D7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94D9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94D9              ; 																		; _ en el caso de que no lo haya.
 113+ 94D9 3A BA 89     	ld a,(Vel_up)
 114+ 94DC 47           	ld b,a
 115+ 94DD 2A 91 89     	ld hl,(Posicion_actual)
 116+ 94E0 CD 73 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 94E3 A7           	and a
 118+ 94E4 20 10        	jr nz,1F
 119+ 94E6
 120+ 94E6              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 94E6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 94E6
 123+ 94E6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 94E7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 94E9 20 0B            jr nz,1F
 126+ 94EB 7D               ld a,l
 127+ 94EC D6 20            sub $20
 128+ 94EE 30 06            jr nc,1F
 129+ 94F0 25               dec h
 130+ 94F1
 131+ 94F1              ; -----------------------------
 132+ 94F1 CD A5 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 94F4              ;	call Reinicio
 134+ 94F4              ; -----------------------------
 135+ 94F4
 136+ 94F4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 94F6 CD 09 91     1 call PreviousScan
 138+ 94F9 22 91 89     	ld (Posicion_actual),hl
 139+ 94FC 10 E2            djnz 3B
 140+ 94FE CD 91 99     2 call Genera_coordenadas
 141+ 9501 C9           	ret
 142+ 9502
 143+ 9502              ; -----------------------------
 144+ 9502              ;
 145+ 9502              ;	27/5/23
 146+ 9502              ;
 147+ 9502              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9502              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9502              ;
 150+ 9502              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9502              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9502              ;
 153+ 9502              ;	Modifica: A y (Puntero_objeto).
 154+ 9502
 155+ 9502 3A B6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9505 CB 47        	bit 0,a
 157+ 9507 C8           	ret z
 158+ 9508 CB 87        	res 0,a
 159+ 950A 32 B6 89     	ld (Ctrl_2),a
 160+ 950D 2A D1 89     	ld hl,(Repone_puntero_objeto)
 161+ 9510 22 93 89     	ld (Puntero_objeto),hl
 162+ 9513 C9           	ret
 163+ 9514
 164+ 9514              ; ******************************************************************************************************************************************************************************************
 165+ 9514              ;
 166+ 9514              ;	19/10/22
 167+ 9514              ;
 168+ 9514              ;	Mov_right.
 169+ 9514              ;
 170+ 9514              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9514              ;
 172+ 9514
 173+ 9514 3A B1 89     Mov_right ld a,(Ctrl_0)
 174+ 9517 CB 77        	bit 6,a
 175+ 9519 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 951B
 177+ 951B CD 53 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 951E C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 951F
 180+ 951F 21 B1 89     	ld hl,Ctrl_0
 181+ 9522 CB E6        	set 4,(hl)
 182+ 9524 18 52        	jr 8F
 183+ 9526
 184+ 9526 21 B1 89     10 ld hl,Ctrl_0
 185+ 9529 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 952B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 952B              ; 																	; _ en el caso de que no lo haya.
 188+ 952B 3A 95 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 952E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9530 20 46        	jr nz,8F
 191+ 9532
 192+ 9532 3A 97 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9535 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9536 28 40        	jr z,8F
 195+ 9538
 196+ 9538              ; ---------- ---------- ----------
 197+ 9538              ;
 198+ 9538              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9538
 200+ 9538 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 953B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 953D 28 11        	jr z,1F
 203+ 953F 38 06        	jr c,6F
 204+ 9541 FE 04        	cp 4
 205+ 9543 28 14        	jr z,7F
 206+ 9545 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9547
 208+ 9547              ; ---------- ---------- ----------
 209+ 9547              ;
 210+ 9547              ; Perfiles de velocidad
 211+ 9547              ;
 212+ 9547
 213+ 9547 3A 97 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 954A FE FE        	cp $fe
 215+ 954C 20 2A        	jr nz,8F
 216+ 954E 18 10        	jr 3F
 217+ 9550 3A 97 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9553 FE FD        	cp $fd
 219+ 9555 20 21        	jr nz,8F
 220+ 9557 18 07        	jr 3F
 221+ 9559 3A 97 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 955C FE FB        	cp $fb
 223+ 955E 20 18        	jr nz,8F
 224+ 9560
 225+ 9560              ; ---------- ---------- ----------
 226+ 9560
 227+ 9560              3
 228+ 9560 CD 93 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9563              ;	call Reinicio
 230+ 9563
 231+ 9563              ; ---------- ---------- ----------
 232+ 9563              ;
 233+ 9563              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9563
 235+ 9563 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9565 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9566 CD 7F 95     	call DESPLZ_DER
 238+ 9569 C1           	pop bc
 239+ 956A 10 F9        	djnz 5B
 240+ 956C 2A 91 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 956F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9570 22 91 89     	ld (Posicion_actual),hl
 243+ 9573 CD 91 99     	call Genera_coordenadas
 244+ 9576 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9578
 246+ 9578              ; ---------- ---------- ----------
 247+ 9578
 248+ 9578 2A 91 89     8 ld hl,(Posicion_actual)
 249+ 957B CD 7F 95     	call DESPLZ_DER
 250+ 957E C9           2 ret
 251+ 957F
 252+ 957F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 957F              ;
 254+ 957F              ;	22/9/22
 255+ 957F              ;
 256+ 957F
 257+ 957F CD 8E 95     DESPLZ_DER call Desplaza_derecha
 258+ 9582 CD DA 95         call modifica_parametros_1er_DESPLZ_2
 259+ 9585 CD 03 96         call Ciclo_completo
 260+ 9588 21 B1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 958B CB FE        	set 7,(hl)
 262+ 958D C9           	ret
 263+ 958E
 264+ 958E              ; ******************************************************************************************************************************************************************************************
 265+ 958E              ;	15/02/23
 266+ 958E              ;
 267+ 958E
 268+ 958E 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9591 47           	ld b,a
 270+ 9592 2A 9D 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9595 23           1 inc hl
 272+ 9596 23           	inc hl
 273+ 9597 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9599 22 9D 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 959C CD 6C 8B     	call Extrae_address
 276+ 959F 22 93 89     	ld (Puntero_objeto),hl
 277+ 95A2
 278+ 95A2              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95A2
 280+ 95A2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95A2              ; Cuántos movimientos hemos hecho ??
 282+ 95A2              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95A2
 284+ 95A2 2A 99 89     7 ld hl,(Indice_Sprite_der)
 285+ 95A5 EB           	ex de,hl
 286+ 95A6 A7           	and a
 287+ 95A7 ED 52        	sbc hl,de
 288+ 95A9 CB 3D        	srl l
 289+ 95AB 3E 08        6 ld a,8
 290+ 95AD 95           	sub l
 291+ 95AE 30 1E        	jr nc,3F
 292+ 95B0
 293+ 95B0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95B0              ; B="0".
 295+ 95B0
 296+ 95B0 04           4 inc b
 297+ 95B1 3C           	inc a
 298+ 95B2 20 FC        	jr nz,4B
 299+ 95B4 78           	ld a,b
 300+ 95B5 08           	ex af,af
 301+ 95B6 2A 99 89     	ld hl,(Indice_Sprite_der)
 302+ 95B9 23           5 inc hl
 303+ 95BA 23           	inc hl
 304+ 95BB 10 FC        	djnz 5B
 305+ 95BD 22 9D 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95C0 CD 6C 8B     	call Extrae_address
 307+ 95C3 22 93 89     	ld (Puntero_objeto),hl
 308+ 95C6
 309+ 95C6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95C6              ; _(Posicion_actual).
 311+ 95C6
 312+ 95C6 21 91 89     	ld hl,Posicion_actual
 313+ 95C9 34           	inc (hl)
 314+ 95CA 08               ex af,af
 315+ 95CB 6F           	ld l,a
 316+ 95CC 18 DD        	jr 6B
 317+ 95CE
 318+ 95CE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95CE
 320+ 95CE 47           3 ld b,a
 321+ 95CF 2A 9B 89     	ld hl,(Indice_Sprite_izq)
 322+ 95D2 23           2 inc hl
 323+ 95D3 23           	inc hl
 324+ 95D4 10 FC        	djnz 2B
 325+ 95D6 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95D9 C9           8 ret
 327+ 95DA
 328+ 95DA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95DA              ;
 330+ 95DA              ;	24/7/22
 331+ 95DA              ;
 332+ 95DA              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95DA              ;
 334+ 95DA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95DA              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95DA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95DA
 338+ 95DA 3A 97 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95DD A7           	and a
 340+ 95DE 20 1F        	jr nz,1F
 341+ 95E0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 95E2 32 97 89         ld (CTRL_DESPLZ),a
 343+ 95E5
 344+ 95E5 21 90 89     	ld hl,Columns
 345+ 95E8 34           	inc (hl)
 346+ 95E9 3A A3 89     	ld a,(Cuad_objeto)
 347+ 95EC E6 01        	and 1
 348+ 95EE 28 0F        	jr z,1F
 349+ 95F0 2A 91 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 95F3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 95F4 22 91 89     	ld (Posicion_actual),hl
 352+ 95F7 CD 91 99     	call Genera_coordenadas
 353+ 95FA CD 5F 97     	call Inc_CTRL_DESPLZ
 354+ 95FD 18 03        	jr 2F
 355+ 95FF CD 5F 97     1 call Inc_CTRL_DESPLZ
 356+ 9602 C9           2 ret
 357+ 9603
 358+ 9603              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9603              ;
 360+ 9603              ;	24/7/22
 361+ 9603              ;
 362+ 9603              ;	Ciclo_completo.
 363+ 9603              ;
 364+ 9603              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9603              ;
 366+ 9603              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9603              ; 	Decrementamos (Columns).
 368+ 9603              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9603              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9603
 371+ 9603
 372+ 9603 3A 97 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9606 FE FF        	cp $ff
 374+ 9608 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 960A E6 F0        	and $f0
 376+ 960C 20 28        	jr nz,3F
 377+ 960E
 378+ 960E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 960E
 380+ 960E 3A 97 89     	ld a,(CTRL_DESPLZ)
 381+ 9611 47           	ld b,a
 382+ 9612 3E F8        	ld a,$f8
 383+ 9614 80           	add b
 384+ 9615 32 97 89     	ld (CTRL_DESPLZ),a
 385+ 9618 18 1C        	jr 3F
 386+ 961A 21 90 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 961D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 961E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 961F 32 97 89     	ld (CTRL_DESPLZ),a
 390+ 9622 3A A3 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9625 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9627 20 0A        	jr nz,2F
 393+ 9629 2A 91 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 962C 23           	inc hl
 395+ 962D 22 91 89     	ld (Posicion_actual),hl
 396+ 9630 CD 91 99     	call Genera_coordenadas
 397+ 9633
 398+ 9633              ; Inicia el puntero de Sprite.
 399+ 9633
 400+ 9633 CD 81 8B     2 call Inicia_puntero_objeto_der
 401+ 9636 C9           3 ret
 402+ 9637
 403+ 9637              ; ******************************************************************************************************************************************************************************************
 404+ 9637              ;
 405+ 9637              ;	15/02/23
 406+ 9637              ;
 407+ 9637              ;	Mov_left.
 408+ 9637              ;
 409+ 9637              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9637              ;
 411+ 9637              Mov_left
 412+ 9637
 413+ 9637 21 B1 89     	ld hl,Ctrl_0
 414+ 963A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 963C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 963C              ; 																	; _ en el caso de que no lo haya.
 417+ 963C 3A B1 89     	ld a,(Ctrl_0)
 418+ 963F CB 77        	bit 6,a
 419+ 9641 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9643
 421+ 9643 CD 59 97     	call Stop_Amadeus_left
 422+ 9646 C8           	ret z
 423+ 9647 20 4A        	jr nz,8F
 424+ 9649
 425+ 9649 3A 95 89     11 ld a,(Coordenada_X)
 426+ 964C A7           	and a
 427+ 964D 20 44        	jr nz,8F
 428+ 964F
 429+ 964F 3A 97 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9652 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9653 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9655
 433+ 9655              ; ---------- ---------- ----------
 434+ 9655
 435+ 9655 3A B8 89     	ld a,(Vel_left)
 436+ 9658 FE 02        	cp 2
 437+ 965A 28 0F        	jr z,1F
 438+ 965C 38 04        	jr c,6F
 439+ 965E FE 04        	cp 4
 440+ 9660 28 12        	jr z,7F
 441+ 9662
 442+ 9662              ; ---------- ---------- ----------
 443+ 9662
 444+ 9662 3A 97 89     6 ld a,(CTRL_DESPLZ)
 445+ 9665 FE F8        	cp $f8
 446+ 9667 20 2A        	jr nz,8F
 447+ 9669 18 10        	jr 4F
 448+ 966B 3A 97 89     1 ld a,(CTRL_DESPLZ)
 449+ 966E FE F9        	cp $f9
 450+ 9670 20 21        	jr nz,8F
 451+ 9672 18 07        	jr 4F
 452+ 9674 3A 97 89     7 ld a,(CTRL_DESPLZ)
 453+ 9677 FE FB        	cp $fb
 454+ 9679 20 18        	jr nz,8F
 455+ 967B
 456+ 967B              ; ---------- ---------- ----------
 457+ 967B
 458+ 967B              4
 459+ 967B CD 81 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 967E              ;	call Reinicio
 461+ 967E
 462+ 967E              ; ---------- ---------- ----------
 463+ 967E
 464+ 967E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9680 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9681
 467+ 9681              ;	ld hl,(Indice_Sprite_izq)
 468+ 9681              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9681
 470+ 9681 CD 9A 96     	call DESPLZ_IZQ
 471+ 9684 C1           	pop bc
 472+ 9685 10 F9        	djnz 5B
 473+ 9687 2A 91 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 968A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 968B 22 91 89     	ld (Posicion_actual),hl
 476+ 968E CD 91 99     	call Genera_coordenadas
 477+ 9691 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9693
 479+ 9693              ; ---------- ---------- ----------
 480+ 9693
 481+ 9693              ; Movemos, no hay recolocación.
 482+ 9693
 483+ 9693 2A 91 89     8 ld hl,(Posicion_actual)
 484+ 9696 CD 9A 96     	call DESPLZ_IZQ
 485+ 9699 C9           2 ret
 486+ 969A
 487+ 969A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 969A              ;
 489+ 969A              ;	22/9/22
 490+ 969A
 491+ 969A              DESPLZ_IZQ
 492+ 969A
 493+ 969A CD A9 96     	call Desplaza_izquierda
 494+ 969D CD F5 96         call modifica_parametros_1er_DESPLZ
 495+ 96A0 CD 1D 97     	call Ciclo_completo_2
 496+ 96A3 21 B1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96A6 CB BE        	res 7,(hl)
 498+ 96A8 C9           	ret
 499+ 96A9
 500+ 96A9              Desplaza_izquierda
 501+ 96A9
 502+ 96A9 3A B8 89     	ld a,(Vel_left)
 503+ 96AC 47           	ld b,a
 504+ 96AD 2A 9F 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96B0 23           1 inc hl
 506+ 96B1 23           	inc hl
 507+ 96B2 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96B4 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96B7 CD 6C 8B     	call Extrae_address
 510+ 96BA 22 93 89     	ld (Puntero_objeto),hl
 511+ 96BD
 512+ 96BD              ; Modifica (Puntero_DESPLZ_der).
 513+ 96BD
 514+ 96BD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96BD              ; Cuántos movimientos hemos hecho ??
 516+ 96BD              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96BD
 518+ 96BD 2A 9B 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96C0 EB           	ex de,hl
 520+ 96C1 A7           	and a
 521+ 96C2 ED 52        	sbc hl,de
 522+ 96C4 CB 3D        	srl l
 523+ 96C6 3E 08        6 ld a,8
 524+ 96C8 95           	sub l
 525+ 96C9 30 1E        	jr nc,3F
 526+ 96CB
 527+ 96CB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96CB              ; B="0".
 529+ 96CB
 530+ 96CB 04           4 inc b
 531+ 96CC 3C           	inc a
 532+ 96CD 20 FC        	jr nz,4B
 533+ 96CF 78           	ld a,b
 534+ 96D0 08           	ex af,af
 535+ 96D1 2A 9B 89     	ld hl,(Indice_Sprite_izq)
 536+ 96D4 23           5 inc hl
 537+ 96D5 23           	inc hl
 538+ 96D6 10 FC        	djnz 5B
 539+ 96D8 22 9F 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96DB CD 6C 8B     	call Extrae_address
 541+ 96DE 22 93 89     	ld (Puntero_objeto),hl
 542+ 96E1
 543+ 96E1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 96E1              ; _(Posicion_actual).
 545+ 96E1
 546+ 96E1 21 91 89     	ld hl,Posicion_actual
 547+ 96E4 35           	dec (hl)
 548+ 96E5 08           	ex af,af
 549+ 96E6 6F           	ld l,a
 550+ 96E7 18 DD        	jr 6B
 551+ 96E9
 552+ 96E9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 96E9
 554+ 96E9 47           3 ld b,a
 555+ 96EA 2A 99 89     	ld hl,(Indice_Sprite_der)
 556+ 96ED 23           2 inc hl
 557+ 96EE 23           	inc hl
 558+ 96EF 10 FC        	djnz 2B
 559+ 96F1 22 9D 89     	ld (Puntero_DESPLZ_der),hl
 560+ 96F4 C9           8 ret
 561+ 96F5
 562+ 96F5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 96F5              ;
 564+ 96F5              ;	modifica_parametros_1er_DESPLZ
 565+ 96F5              ;
 566+ 96F5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 96F5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 96F5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 96F5
 570+ 96F5 3A 97 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 96F8 A7           	and a
 572+ 96F9 20 1E        	jr nz,1F
 573+ 96FB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 96FC 32 97 89         ld (CTRL_DESPLZ),a
 575+ 96FF 21 90 89     	ld hl,Columns
 576+ 9702 34           	inc (hl)
 577+ 9703 3A A3 89     	ld a,(Cuad_objeto)
 578+ 9706 E6 01        	and 1
 579+ 9708 20 0F        	jr nz,1F
 580+ 970A 2A 91 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 970D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 970E 22 91 89     	ld (Posicion_actual),hl
 583+ 9711 CD 91 99     	call Genera_coordenadas
 584+ 9714 CD 70 97     	call Dec_CTRL_DESPLZ
 585+ 9717 18 03        	jr 2F
 586+ 9719 CD 70 97     1 call Dec_CTRL_DESPLZ
 587+ 971C C9           2 ret
 588+ 971D
 589+ 971D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 971D
 591+ 971D 3A 97 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9720 FE F7        	cp $f7
 593+ 9722 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9724 30 2C        	jr nc,3F
 595+ 9726
 596+ 9726              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9726
 598+ 9726 06 00        	ld b,0
 599+ 9728 04           4 inc b
 600+ 9729 3C           	inc a
 601+ 972A FE F7        	cp $f7
 602+ 972C 20 FA        	jr nz,4B
 603+ 972E 3E FF        	ld a,$ff
 604+ 9730 90           	sub b
 605+ 9731 32 97 89     	ld (CTRL_DESPLZ),a
 606+ 9734 18 1C        	jr 3F
 607+ 9736
 608+ 9736              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9736
 610+ 9736 21 90 89     1 ld hl,Columns
 611+ 9739 35           	dec (hl)
 612+ 973A AF           	xor a
 613+ 973B 32 97 89     	ld (CTRL_DESPLZ),a
 614+ 973E 3A A3 89     	ld a,(Cuad_objeto)
 615+ 9741 E6 01        	and 1
 616+ 9743 28 0A        	jr z,2F
 617+ 9745 2A 91 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9748 2B           	dec hl
 619+ 9749 22 91 89     	ld (Posicion_actual),hl
 620+ 974C CD 91 99     	call Genera_coordenadas
 621+ 974F
 622+ 974F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 974F
 624+ 974F CD 94 8B     2 call Inicia_puntero_objeto_izq
 625+ 9752 C9           3 ret
 626+ 9753
 627+ 9753              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9753              ;
 629+ 9753              ;	19/10/22
 630+ 9753              ;
 631+ 9753              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9753              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9753
 634+ 9753 3A 95 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9756 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9758 C9           	ret
 637+ 9759
 638+ 9759              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9759              ;
 640+ 9759              ;	19/10/22
 641+ 9759              ;
 642+ 9759              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9759              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9759
 645+ 9759 3A 95 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 975C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 975E C9           	ret
 648+ 975F
 649+ 975F              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 975F              ;
 651+ 975F              ;	24/7/22
 652+ 975F              ;
 653+ 975F              ;	Inc_CTRL_DESPLZ
 654+ 975F              ;
 655+ 975F              ;
 656+ 975F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 975F
 658+ 975F 21 97 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9762 3A B9 89     	ld a,(Vel_right)
 660+ 9765 A7           	and a
 661+ 9766 28 06        	jr z,1F
 662+ 9768 47           	ld b,a
 663+ 9769 34           3 inc (hl)
 664+ 976A 10 FD        	djnz 3B
 665+ 976C 18 01        	jr 2F
 666+ 976E 34           1 inc (hl)
 667+ 976F C9           2 ret
 668+ 9770
 669+ 9770              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9770              ;
 671+ 9770              ;	5/2/23
 672+ 9770              ;
 673+ 9770              ;	Dec_CTRL_DESPLZ
 674+ 9770              ;
 675+ 9770              ;
 676+ 9770              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9770
 678+ 9770 21 97 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9773 3A B8 89     	ld a,(Vel_left)
 680+ 9776 A7           	and a
 681+ 9777 28 06        	jr z,1F
 682+ 9779 47           	ld b,a
 683+ 977A 35           3 dec (hl)
 684+ 977B 10 FD        	djnz 3B
 685+ 977D 18 01        	jr 2F
 686+ 977F 35           1 dec (hl)
 687+ 9780 C9           2 ret
 688+ 9781
 689+ 9781              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9781
 691+ 9781 2A 91 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9784 01 1F 00     	ld bc,31
 693+ 9787 A7           	and a
 694+ 9788 ED 4A        	adc hl,bc
 695+ 978A 22 91 89     	ld (Posicion_actual),hl
 696+ 978D 21 B1 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9790 CB C6        	set 0,(hl)
 698+ 9792 C9           	ret
 699+ 9793
 700+ 9793              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9793
 702+ 9793 2A 91 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9796 01 1F 00     	ld bc,31
 704+ 9799 A7           	and a
 705+ 979A ED 42        	sbc hl,bc
 706+ 979C 22 91 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 979F 21 B1 89     	ld hl,Ctrl_0
 708+ 97A2 CB CE        	set 1,(hl)
 709+ 97A4 C9           	ret
 710+ 97A5
 711+ 97A5              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97A5
 713+ 97A5 24           Reaparece_abajo inc h
 714+ 97A6 01 E0 17     	ld bc,$17e0
 715+ 97A9 A7           	and a
 716+ 97AA ED 4A        	adc hl,bc
 717+ 97AC 22 91 89     	ld (Posicion_actual),hl
 718+ 97AF 21 B1 89     	ld hl,Ctrl_0
 719+ 97B2 CB D6        	set 2,(hl)
 720+ 97B4 C9           	ret
 721+ 97B5
 722+ 97B5              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97B5
 724+ 97B5 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97B8 A7           	and a
 726+ 97B9 ED 42        	sbc hl,bc
 727+ 97BB 22 91 89     	ld (Posicion_actual),hl
 728+ 97BE 21 B1 89     	ld hl,Ctrl_0
 729+ 97C1 CB DE        	set 3,(hl)
 730+ 97C3 C9           	ret
 731+ 97C4
 732+ 97C4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97C4              ;
 734+ 97C4              ;	15/07/23
 735+ 97C4
 736+ 97C4              Reinicio
 737+ 97C4
 738+ 97C4              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97C4
 740+ 97C4 AF           	xor a
 741+ 97C5 21 C8 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97C8 CD E6 97     	call Limpia_contenido_hl
 743+ 97CB
 744+ 97CB 21 91 89     	ld hl,Posicion_actual
 745+ 97CE CD E6 97     	call Limpia_contenido_hl
 746+ 97D1
 747+ 97D1 CD 2F 8C     	call Inicializa_Puntero_indice_mov
 748+ 97D4 CD B2 98     	call Inicia_Puntero_mov
 749+ 97D7
 750+ 97D7 21 CA 89     	ld hl,Incrementa_puntero
 751+ 97DA 06 05        	ld b,5
 752+ 97DC 77           1 ld (hl),a
 753+ 97DD 23           	inc hl
 754+ 97DE 10 FC        	djnz 1B
 755+ 97E0
 756+ 97E0 21 B6 89     	ld hl,Ctrl_2
 757+ 97E3 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 97E5
 759+ 97E5 C9           	ret
 760+ 97E6
 761+ 97E6 77           Limpia_contenido_hl	ld (hl),a
 762+ 97E7 23           	inc hl
 763+ 97E8 77           	ld (hl),a
 764+ 97E9 C9           	ret
 765+ 97EA
 766+ 97EA
# file closed: Direcciones.asm
1794  97EA              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 97EA              ; ----- ----- ----- ----- -----
   2+ 97EA              ;
   3+ 97EA              ;   28/12/23
   4+ 97EA
   5+ 97EA              Movimiento
   6+ 97EA
   7+ 97EA              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 97EA
   9+ 97EA 3A B6 89         ld a,(Ctrl_2)
  10+ 97ED CB 57            bit 2,a
  11+ 97EF 20 1B            jr nz, Desplazamiento_iniciado
  12+ 97F1
  13+ 97F1 2A C6 89         ld hl,(Puntero_mov)
  14+ 97F4 7E               ld a,(hl)
  15+ 97F5
  16+ 97F5              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 97F5
  18+ 97F5              Inicia_desplazamiento.
  19+ 97F5
  20+ 97F5              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 97F5
  22+ 97F5 CD E8 98         call Ajusta_velocidad_desplazamiento
  23+ 97F8
  24+ 97F8              ; Iniciamos (Repetimos_mov).
  25+ 97F8
  26+ 97F8 7E               ld a,(hl)
  27+ 97F9 E6 0F            and $0f
  28+ 97FB 32 CC 89         ld (Repetimos_desplazamiento),a
  29+ 97FE 32 CD 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9801
  31+ 9801              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9801
  33+ 9801 23               inc hl
  34+ 9802 7E               ld a,(hl)
  35+ 9803 32 CF 89         ld (Cola_de_desplazamiento),a
  36+ 9806 2B               dec hl
  37+ 9807
  38+ 9807 21 B6 89         ld hl,Ctrl_2
  39+ 980A CB D6            set 2,(hl)
  40+ 980C
  41+ 980C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 980C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 980C
  44+ 980C              Desplazamiento_iniciado
  45+ 980C
  46+ 980C CD BC 98         call Aplica_desplazamiento
  47+ 980F
  48+ 980F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 980F
  50+ 980F 3A ED 89         ld a,(Ctrl_3)
  51+ 9812 CB 4F            bit 1,a
  52+ 9814 C0               ret nz
  53+ 9815
  54+ 9815 21 CC 89     3 ld hl,Repetimos_desplazamiento
  55+ 9818 35               dec (hl)
  56+ 9819 C0               ret nz
  57+ 981A
  58+ 981A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 981A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 981A              ; Analiza (Cola_de_desplazamiento).
  61+ 981A
  62+ 981A 3A CF 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 981D A7               and a
  64+ 981E CC 11 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9821 28 30            jr z,Reinicia_el_movimiento
  66+ 9823
  67+ 9823 FE FF            cp $ff
  68+ 9825 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9827
  70+ 9827 FE FE            cp $fe
  71+ 9829 CC 96 98         call z,Fijamos_bucle
  72+ 982C 28 25            jr z,Reinicia_el_movimiento
  73+ 982E
  74+ 982E FE FD            cp $fd
  75+ 9830 20 11            jr nz,1F
  76+ 9832
  77+ 9832              ; ---
  78+ 9832              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9832
  80+ 9832 3A B6 89         ld a,(Ctrl_2)
  81+ 9835 CB 5F            bit 3,a
  82+ 9837 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9839
  84+ 9839              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9839
  86+ 9839 21 B6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 983C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 983E
  89+ 983E CD A7 98         call Inicia_Repetimos_movimiento
  90+ 9841 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9843              ; ---
  92+ 9843
  93+ 9843 FE 01        1 cp 1
  94+ 9845 CA 80 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9848
  96+ 9848 3D               dec a
  97+ 9849 32 CF 89         ld (Cola_de_desplazamiento),a
  98+ 984C
  99+ 984C 3A CD 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 984F 32 CC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9852              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9852 C9               ret
 103+ 9853
 104+ 9853              Reinicia_el_movimiento
 105+ 9853
 106+ 9853 3A B6 89         ld a,(Ctrl_2)
 107+ 9856 CB 5F            bit 3,a
 108+ 9858 28 1B            jr z,2F
 109+ 985A
 110+ 985A              ; (Cola_de_desplazamiento)="254".
 111+ 985A
 112+ 985A 21 CE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 985D 35               dec (hl)
 114+ 985E 20 15            jr nz,2F
 115+ 9860
 116+ 9860              ; Fin de las repeticiones del último movimiento.
 117+ 9860
 118+ 9860 21 B6 89         ld hl,Ctrl_2
 119+ 9863 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9865
 121+ 9865 2A C6 89         ld hl,(Puntero_mov)
 122+ 9868 23               inc hl
 123+ 9869 23               inc hl
 124+ 986A 23               inc hl
 125+ 986B 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 986E              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 986E 7E               ld a,(hl)
 128+ 986F 32 CF 89         ld (Cola_de_desplazamiento),a
 129+ 9872
 130+ 9872 C3 1A 98         jp Cola
 131+ 9875
 132+ 9875 CD B2 98     2 call Inicia_Puntero_mov
 133+ 9878
 134+ 9878 21 B6 89         ld hl,Ctrl_2
 135+ 987B CB 96            res 2,(hl)
 136+ 987D
 137+ 987D C3 EA 97         jp Movimiento
 138+ 9880
 139+ 9880              Siguiente_desplazamiento
 140+ 9880
 141+ 9880              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9880              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9880
 144+ 9880 21 B6 89         ld hl,Ctrl_2
 145+ 9883 CB 96            res 2,(hl)
 146+ 9885
 147+ 9885 2A C6 89         ld hl,(Puntero_mov)
 148+ 9888 23               inc hl
 149+ 9889 23               inc hl
 150+ 988A 22 C6 89         ld (Puntero_mov),hl
 151+ 988D
 152+ 988D 7E               ld a,(hl)
 153+ 988E A7               and a
 154+ 988F CC 11 99         call z,Incrementa_Puntero_indice_mov
 155+ 9892 CA 53 98         jp z,Reinicia_el_movimiento
 156+ 9895
 157+ 9895 C9               ret
 158+ 9896
 159+ 9896              ; Subrutinas -----------------------------------------
 160+ 9896              ; ---------- --------- --------- ---------- ----------
 161+ 9896              ;
 162+ 9896              ;   24/07/23
 163+ 9896              ;
 164+ 9896              ;   Fijamos_bucle
 165+ 9896              ;
 166+ 9896              ;
 167+ 9896
 168+ 9896              Fijamos_bucle
 169+ 9896
 170+ 9896 3A CA 89         ld a,(Incrementa_puntero)
 171+ 9899 3C               inc a
 172+ 989A 32 CB 89         ld (Incrementa_puntero_backup),a
 173+ 989D
 174+ 989D CD 11 99         call Incrementa_Puntero_indice_mov
 175+ 98A0 2A C4 89         ld hl,(Puntero_indice_mov)
 176+ 98A3 22 C8 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98A6 C9               ret
 178+ 98A7
 179+ 98A7              ; ---------- --------- --------- ---------- ----------
 180+ 98A7              ;
 181+ 98A7              ;   07/7/23
 182+ 98A7              ;
 183+ 98A7              ;   Inicia_Repetimos_movimiento
 184+ 98A7              ;
 185+ 98A7              ;
 186+ 98A7
 187+ 98A7              Inicia_Repetimos_movimiento
 188+ 98A7
 189+ 98A7              ; Iniciamos (Repetimos_movimiento).
 190+ 98A7
 191+ 98A7 DD 2A C6 89      ld ix,(Puntero_mov)
 192+ 98AB DD 7E 02         ld a,(ix+2)
 193+ 98AE 32 CE 89         ld (Repetimos_movimiento),a
 194+ 98B1
 195+ 98B1 C9               ret
 196+ 98B2
 197+ 98B2              ; ---------- --------- --------- ---------- ----------
 198+ 98B2              ;
 199+ 98B2              ;   26/6/23
 200+ 98B2              ;
 201+ 98B2              ;   Inicia_Puntero_mov
 202+ 98B2              ;
 203+ 98B2              ;
 204+ 98B2
 205+ 98B2 2A C4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98B5 CD 6C 8B         call Extrae_address
 207+ 98B8 22 C6 89         ld (Puntero_mov),hl
 208+ 98BB C9               ret
 209+ 98BC
 210+ 98BC              ; ---------- --------- --------- ---------- ----------
 211+ 98BC              ;
 212+ 98BC              ;   27/06/23
 213+ 98BC              ;
 214+ 98BC              ;   Aplica_movimiento.
 215+ 98BC
 216+ 98BC              Aplica_desplazamiento
 217+ 98BC
 218+ 98BC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98BC
 220+ 98BC 2A C6 89         ld hl, (Puntero_mov)
 221+ 98BF
 222+ 98BF 7E               ld a,(hl)
 223+ 98C0 E6 F0            and $f0
 224+ 98C2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98C3
 226+ 98C3 CB 7E            bit 7,(hl)
 227+ 98C5 28 03            jr z,1F
 228+ 98C7 CD D1 94         call Mov_up
 229+ 98CA 2A C6 89     1 ld hl, (Puntero_mov)
 230+ 98CD CB 76            bit 6,(hl)
 231+ 98CF 28 03            jr z,2F
 232+ 98D1 CD 98 94         call Mov_down
 233+ 98D4
 234+ 98D4              ; Se ha aplicado reinicio ???
 235+ 98D4              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98D4
 237+ 98D4              ;    ld a,(Ctrl_3)
 238+ 98D4              ;    bit 1,a
 239+ 98D4              ;    ret nz
 240+ 98D4
 241+ 98D4 2A C6 89     2 ld hl, (Puntero_mov)
 242+ 98D7 CB 6E            bit 5,(hl)
 243+ 98D9 28 03            jr z,3F
 244+ 98DB CD 37 96         call Mov_left
 245+ 98DE 2A C6 89     3 ld hl, (Puntero_mov)
 246+ 98E1 CB 66            bit 4,(hl)
 247+ 98E3 C8               ret z
 248+ 98E4 CD 14 95         call Mov_right
 249+ 98E7 C9               ret
 250+ 98E8
 251+ 98E8              ; ---------- --------- --------- ---------- ----------
 252+ 98E8              ;
 253+ 98E8              ;   26/06/23
 254+ 98E8              ;
 255+ 98E8              ;   Ajusta_velocidad_desplazamiento.
 256+ 98E8
 257+ 98E8              Ajusta_velocidad_desplazamiento
 258+ 98E8
 259+ 98E8              ; 1er byte de la cadena de movimiento.
 260+ 98E8              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 98E8
 262+ 98E8 CD 06 99         call Extrae_nibble_alto
 263+ 98EB
 264+ 98EB 32 BA 89         ld (Vel_up),a
 265+ 98EE 79               ld a,c
 266+ 98EF E6 0F            and $0f
 267+ 98F1 32 BB 89         ld (Vel_down),a
 268+ 98F4
 269+ 98F4              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 98F4              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 98F4
 272+ 98F4 23               inc hl
 273+ 98F5 CD 06 99         call Extrae_nibble_alto
 274+ 98F8
 275+ 98F8 32 B8 89         ld (Vel_left),a
 276+ 98FB 79               ld a,c
 277+ 98FC E6 0F            and $0f
 278+ 98FE 32 B9 89         ld (Vel_right),a
 279+ 9901
 280+ 9901              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9901
 282+ 9901 23               inc hl
 283+ 9902 22 C6 89         ld (Puntero_mov),hl
 284+ 9905 C9               ret
 285+ 9906
 286+ 9906 06 04        Extrae_nibble_alto ld b,4
 287+ 9908 7E               ld a,(hl)
 288+ 9909 4F               ld c,a
 289+ 990A E6 F0            and $f0
 290+ 990C CB 3F        1 srl a
 291+ 990E 10 FC            djnz 1B
 292+ 9910 C9               ret
 293+ 9911
 294+ 9911              ; ---------- --------- --------- ---------- ----------
 295+ 9911              ;
 296+ 9911              ;   5/7/23
 297+ 9911              ;
 298+ 9911              ;   Incrementa_Puntero_indice_mov
 299+ 9911
 300+ 9911              Incrementa_Puntero_indice_mov
 301+ 9911
 302+ 9911 21 CA 89         ld hl,Incrementa_puntero
 303+ 9914 34               inc (hl)
 304+ 9915
 305+ 9915 2A C4 89         ld hl,(Puntero_indice_mov)
 306+ 9918 01 02 00         ld bc,2
 307+ 991B A7               and a
 308+ 991C 09               add hl,bc
 309+ 991D 22 C4 89         ld (Puntero_indice_mov),hl
 310+ 9920
 311+ 9920 7E               ld a,(hl)
 312+ 9921 A7               and a
 313+ 9922
 314+ 9922              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9922
 316+ 9922              ;    jr z,$
 317+ 9922
 318+ 9922              ;! Reinicia el Patrón de movimiento.
 319+ 9922
 320+ 9922 CC 27 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9925
 322+ 9925 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9926
 324+ 9926 C9               ret
 325+ 9927
 326+ 9927              ; ---------- --------- --------- ---------- ----------
 327+ 9927              ;
 328+ 9927              ;   15/01/24
 329+ 9927              ;
 330+ 9927              ;   Inicializa_Puntero_indice_mov
 331+ 9927
 332+ 9927              Inicializa_Puntero_indice_mov_2
 333+ 9927
 334+ 9927              ; Existe etiqueta de bucle principal???
 335+ 9927
 336+ 9927 2A C8 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 992A 24               inc h
 338+ 992B 25               dec h
 339+ 992C 28 05            jr z,2F
 340+ 992E
 341+ 992E 22 C4 89         ld (Puntero_indice_mov),hl
 342+ 9931 18 14            jr 3F
 343+ 9933
 344+ 9933              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9933
 346+ 9933 3A CA 89     2 ld a,(Incrementa_puntero)
 347+ 9936 47               ld b,a
 348+ 9937
 349+ 9937 2A C4 89         ld hl,(Puntero_indice_mov)
 350+ 993A 2B           1 dec hl
 351+ 993B 2B               dec hl
 352+ 993C 10 FC            djnz 1B
 353+ 993E 22 C4 89         ld (Puntero_indice_mov),hl
 354+ 9941
 355+ 9941 AF               xor a
 356+ 9942 32 CA 89         ld (Incrementa_puntero),a
 357+ 9945 18 06            jr 4F
 358+ 9947
 359+ 9947 3A CB 89     3 ld a,(Incrementa_puntero_backup)
 360+ 994A 32 CA 89         ld (Incrementa_puntero),a
 361+ 994D C9           4 ret
 362+ 994E
 363+ 994E              ; ----------------------------------------------------------------------
 364+ 994E              ;
 365+ 994E              ;   30/01/24
 366+ 994E              ;
 367+ 994E              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 994E
 369+ 994E 3A 8E 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9951 CD 80 8D         call Calcula_salto_en_BC
 371+ 9954 21 BC 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9957 A7               and a
 373+ 9958 ED 4A            adc hl,bc
 374+ 995A C9               ret
 375+ 995B
 376+ 995B              ; ----------------------------------------------------------------------
 377+ 995B              ;
 378+ 995B              ;   30/01/24
 379+ 995B              ;
 380+ 995B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 995B              ;
 382+ 995B              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 995B
 384+ 995B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 995C 23               inc hl
 386+ 995D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 995E 69               ld l,c
 388+ 995F 60               ld h,b
 389+ 9960 22 AF 89         ld (Contador_de_mov_masticados),hl
 390+ 9963 C9               ret
 391+ 9964
# file closed: Movimiento.asm
1795  9964              ;	include "Disparo.asm"
1796  9964              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9964              ; Relojes y temporizaciones.
   2+ 9964
   3+ 9964              ; ------------------------------------------------------
   4+ 9964              ;
   5+ 9964              ;	16/7/23
   6+ 9964              ;
   7+ 9964              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9964              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9964              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9964              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9964              ;
  12+ 9964              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9964              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9964
  15+ 9964              ; Disparo_entidad db 1
  16+ 9964              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9964              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9964
  19+ 9964              Habilita_disparos
  20+ 9964
  21+ 9964 7E           	ld a,(hl)
  22+ 9965 A7           	and a
  23+ 9966 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9967
  25+ 9967 EB           	ex de,hl
  26+ 9968
  27+ 9968 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9969 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 996A
  30+ 996A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 996A
  32+ 996A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 996B 7E           	ld a,(hl)
  34+ 996C 23           	inc hl
  35+ 996D 77           	ld (hl),a
  36+ 996E
  37+ 996E EB           	ex de,hl						; Habilitamos disparo.
  38+ 996F 3E 01        	ld a,1
  39+ 9971 77           	ld (hl),a
  40+ 9972 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1797  9973              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9973              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9973              ;
   3+ 9973              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9973              ;
   5+ 9973              ; *****************************************************************************************************************************************************************************************
   6+ 9973              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9973
   8+ 9973 7C           calcula_tercio ld a,h
   9+ 9974 E6 18        	and $18
  10+ 9976 CB 2F        	sra a
  11+ 9978 CB 2F        	sra a
  12+ 997A CB 2F        	sra a
  13+ 997C C9           	ret
  14+ 997D
# file closed: calcula_tercio.asm
1798  997D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 997D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 997D              ;
   3+ 997D              ;
   4+ 997D              ;	CLS.
   5+ 997D              ;
   6+ 997D              ;	Limpia la pantalla y define sus atributos.
   7+ 997D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 997D              ;
   9+ 997D              ;	COLORES: 0 ..... NEGRO
  10+ 997D              ;    		 1 ..... AZUL
  11+ 997D              ; 			 2 ..... ROJO
  12+ 997D              ;			 3 ..... MAGENTA
  13+ 997D              ; 			 4 ..... VERDE
  14+ 997D              ; 			 5 ..... CIAN
  15+ 997D              ;			 6 ..... AMARILLO
  16+ 997D              ; 			 7 ..... BLANCO
  17+ 997D              ;
  18+ 997D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 997D              ;
  20+ 997D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 997D
  22+ 997D
  23+ 997D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9980 11 01 40     	LD DE,$4001
  25+ 9983 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9986 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9988 ED B0        	LDIR
  28+ 998A 01 FF 02     	LD BC,767
  29+ 998D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 998E ED B0        	LDIR
  31+ 9990 C9           	ret
  32+ 9991
# file closed: Cls.asm
1799  9991              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9991              ; ------------------------------------------------------------------------
   2+ 9991              ;
   3+ 9991              ;	30/1/24
   4+ 9991              ;
   5+ 9991              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9991              ;	Fila superior "0", Columna izquierda "0".
   7+ 9991              ;
   8+ 9991              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9991              ;
  10+ 9991              ;	Modifica: A,BC y DE.
  11+ 9991
  12+ 9991 7D           Genera_coordenadas ld a,l
  13+ 9992 E6 1F        	and $1f
  14+ 9994 32 95 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9997
  16+ 9997 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9998 FE 40        	cp $40
  18+ 999A 38 1C        	jr c,4F
  19+ 999C
  20+ 999C CD 73 99     	call calcula_tercio
  21+ 999F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 99A0
  23+ 99A0 1E 00        	ld e,0
  24+ 99A2 7D           	ld a,l
  25+ 99A3 E6 E0        	and $e0
  26+ 99A5 28 01        	jr z,1F
  27+ 99A7 04           	inc b
  28+ 99A8
  29+ 99A8 04           1 inc b
  30+ 99A9 05           	dec b
  31+ 99AA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99AC              ;														; _ , salimos.
  33+ 99AC 1C           3 inc e
  34+ 99AD D6 20        	sub 32
  35+ 99AF 20 FB        	jr nz,3B
  36+ 99B1 10 F5        	djnz 1B
  37+ 99B3
  38+ 99B3 7B           2 ld a,e
  39+ 99B4 32 96 89     	ld (Coordenada_y),a
  40+ 99B7 C9           	ret
  41+ 99B8
  42+ 99B8 AF           4 xor a
  43+ 99B9 32 96 89     	ld (Coordenada_y),a
  44+ 99BC C9           	ret
  45+ 99BD
  46+ 99BD              ; ------------------------------------------------------------------------
  47+ 99BD              ;	28/05/23
  48+ 99BD              ;
  49+ 99BD              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99BD              ;	Fila superior "0", Columna izquierda "0".
  51+ 99BD              ;
  52+ 99BD              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99BD              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99BD              ;
  55+ 99BD              ;		DE="$120d"
  56+ 99BD              ;
  57+ 99BD              ;		D, (Coordenada_X), Columnas, $12
  58+ 99BD              ;		E, (Coordenada_y), Filas, $0d
  59+ 99BD              ;
  60+ 99BD              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99BD
  62+ 99BD              ;	Modifica: A,BC y DE.
  63+ 99BD
  64+ 99BD
  65+ 99BD              Genera_coordenadas_disparo
  66+ 99BD
  67+ 99BD              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99BD
  69+ 99BD 7D           	ld a,l
  70+ 99BE E6 1F        	and $1f
  71+ 99C0 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99C1 CD 73 99     	call calcula_tercio
  73+ 99C4 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99C5 1E 00        	ld e,0
  75+ 99C7 7D           	ld a,l
  76+ 99C8 E6 E0        	and $e0
  77+ 99CA 28 01        	jr z,1F
  78+ 99CC 04           	inc b
  79+ 99CD 1C           1 inc e
  80+ 99CE D6 20        	sub 32
  81+ 99D0 20 FB        	jr nz,1B
  82+ 99D2 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99D4 C9           	ret
  84+ 99D5
# file closed: Genera_coordenadas.asm
1800  99D5              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 99D5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99D5              ;
   3+ 99D5              ;	11/03/24
   4+ 99D5              ;
   5+ 99D5                  org $80bf
   6+ 80BF
   7+ 80BF              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   8+ 80BF              ;   DE contiene Puntero_objeto.
   9+ 80BF              ;   IX contiene el Puntero de impresión.
  10+ 80BF
  11+ 80BF              Genera_datos_de_impresion
  12+ 80BF
  13+ 80BF ED 73 E1 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  14+ 80C3 31 AD 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  15+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  16+ 80C8
  17+ 80C8 2A E9 89         ld hl,(Scanlines_album_SP)
  18+ 80CB
  19+ 80CB 3E 05            ld a,5
  20+ 80CD 85               add l
  21+ 80CE 6F               ld l,a
  22+ 80CF
  23+ 80CF F9               ld sp,hl
  24+ 80D0 22 E9 89         ld (Scanlines_album_SP),hl
  25+ 80D3
  26+ 80D3 21 00 00         ld hl,0
  27+ 80D6
  28+ 80D6 DD E5            push ix
  29+ 80D8 3B               dec sp
  30+ 80D9 ED 7A            adc hl,sp
  31+ 80DB D5               push de
  32+ 80DC
  33+ 80DC              ; Recuperamos SP.
  34+ 80DC
  35+ 80DC ED 7B E1 89      ld sp,(Stack)
  36+ 80E0
  37+ 80E0 E5               push hl
  38+ 80E1 F1               pop af
  39+ 80E2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  40+ 80E3
  41+ 80E3              ; Tenemos el encabezado listo.
  42+ 80E3              ; Preparamos registros para generar los scanlines.
  43+ 80E3
  44+ 80E3 DD E5            push ix
  45+ 80E5 E1               pop hl                                          ; 1er scanline en HL.
  46+ 80E6
  47+ 80E6 ED 5B E9 89      ld de,(Scanlines_album_SP)
  48+ 80EA
  49+ 80EA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  50+ 80EA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  51+ 80EA
  52+ 80EA 7C               ld a,h
  53+ 80EB FE 50            cp $50
  54+ 80ED 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  55+ 80EF
  56+ 80EF 20 05            jr nz,2F
  57+ 80F1
  58+ 80F1 7D               ld a,l
  59+ 80F2 FE E0            cp $e0
  60+ 80F4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  61+ 80F6
  62+ 80F6 7D           2 ld a,l
  63+ 80F7 FE C0            cp $c0
  64+ 80F9 D2 8B 81         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  65+ 80FC
  66+ 80FC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  67+ 80FC
  68+ 80FC CD FA 90         call NextScan
  69+ 80FF EB               ex de,hl
  70+ 8100
  71+ 8100 73               ld (hl),e
  72+ 8101 2C               inc l
  73+ 8102 72               ld (hl),d
  74+ 8103 2C               inc l
  75+ 8104
  76+ 8104 EB               ex de,hl
  77+ 8105
  78+ 8105 CD FA 90         call NextScan
  79+ 8108 EB               ex de,hl
  80+ 8109
  81+ 8109 73               ld (hl),e
  82+ 810A 2C               inc l
  83+ 810B 72               ld (hl),d
  84+ 810C 2C               inc l
  85+ 810D
  86+ 810D EB               ex de,hl
  87+ 810E
  88+ 810E CD FA 90         call NextScan
  89+ 8111 EB               ex de,hl
  90+ 8112
  91+ 8112 73               ld (hl),e
  92+ 8113 2C               inc l
  93+ 8114 72               ld (hl),d
  94+ 8115 2C               inc l
  95+ 8116
  96+ 8116 EB               ex de,hl
  97+ 8117
  98+ 8117 CD FA 90         call NextScan
  99+ 811A EB               ex de,hl
 100+ 811B
 101+ 811B 73               ld (hl),e
 102+ 811C 2C               inc l
 103+ 811D 72               ld (hl),d
 104+ 811E 2C               inc l
 105+ 811F
 106+ 811F EB               ex de,hl
 107+ 8120
 108+ 8120 CD FA 90         call NextScan
 109+ 8123 EB               ex de,hl
 110+ 8124
 111+ 8124 73               ld (hl),e
 112+ 8125 2C               inc l
 113+ 8126 72               ld (hl),d
 114+ 8127 2C               inc l
 115+ 8128
 116+ 8128 EB               ex de,hl
 117+ 8129
 118+ 8129 CD FA 90         call NextScan
 119+ 812C EB               ex de,hl
 120+ 812D
 121+ 812D 73               ld (hl),e
 122+ 812E 2C               inc l
 123+ 812F 72               ld (hl),d
 124+ 8130 2C               inc l
 125+ 8131
 126+ 8131 EB               ex de,hl
 127+ 8132
 128+ 8132 CD FA 90         call NextScan
 129+ 8135 EB               ex de,hl
 130+ 8136
 131+ 8136 73               ld (hl),e
 132+ 8137 2C               inc l
 133+ 8138 72               ld (hl),d
 134+ 8139 2C               inc l
 135+ 813A
 136+ 813A EB               ex de,hl
 137+ 813B
 138+ 813B CD FA 90         call NextScan
 139+ 813E EB               ex de,hl
 140+ 813F
 141+ 813F 73               ld (hl),e
 142+ 8140 2C               inc l
 143+ 8141 72               ld (hl),d
 144+ 8142 2C               inc l
 145+ 8143
 146+ 8143 EB               ex de,hl
 147+ 8144
 148+ 8144 CD FA 90         call NextScan
 149+ 8147 EB               ex de,hl
 150+ 8148
 151+ 8148 73               ld (hl),e
 152+ 8149 2C               inc l
 153+ 814A 72               ld (hl),d
 154+ 814B 2C               inc l
 155+ 814C
 156+ 814C EB               ex de,hl
 157+ 814D
 158+ 814D CD FA 90         call NextScan
 159+ 8150 EB               ex de,hl
 160+ 8151
 161+ 8151 73               ld (hl),e
 162+ 8152 2C               inc l
 163+ 8153 72               ld (hl),d
 164+ 8154 2C               inc l
 165+ 8155
 166+ 8155 EB               ex de,hl
 167+ 8156
 168+ 8156 CD FA 90         call NextScan
 169+ 8159 EB               ex de,hl
 170+ 815A
 171+ 815A 73               ld (hl),e
 172+ 815B 2C               inc l
 173+ 815C 72               ld (hl),d
 174+ 815D 2C               inc l
 175+ 815E
 176+ 815E EB               ex de,hl
 177+ 815F
 178+ 815F CD FA 90         call NextScan
 179+ 8162 EB               ex de,hl
 180+ 8163
 181+ 8163 73               ld (hl),e
 182+ 8164 2C               inc l
 183+ 8165 72               ld (hl),d
 184+ 8166 2C               inc l
 185+ 8167
 186+ 8167 EB               ex de,hl
 187+ 8168
 188+ 8168 CD FA 90         call NextScan
 189+ 816B EB               ex de,hl
 190+ 816C
 191+ 816C 73               ld (hl),e
 192+ 816D 2C               inc l
 193+ 816E 72               ld (hl),d
 194+ 816F 2C               inc l
 195+ 8170
 196+ 8170 EB               ex de,hl
 197+ 8171
 198+ 8171 CD FA 90         call NextScan
 199+ 8174 EB               ex de,hl
 200+ 8175
 201+ 8175 73               ld (hl),e
 202+ 8176 2C               inc l
 203+ 8177 72               ld (hl),d
 204+ 8178 2C               inc l
 205+ 8179
 206+ 8179 EB               ex de,hl
 207+ 817A
 208+ 817A CD FA 90         call NextScan
 209+ 817D EB               ex de,hl
 210+ 817E
 211+ 817E 73               ld (hl),e
 212+ 817F 2C               inc l
 213+ 8180 72               ld (hl),d
 214+ 8181 2C               inc l
 215+ 8182
 216+ 8182              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 217+ 8182
 218+ 8182 22 E9 89         ld (Scanlines_album_SP),hl
 219+ 8185
 220+ 8185              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 221+ 8185
 222+ 8185 08               ex af,af
 223+ 8186
 224+ 8186 F5               push af
 225+ 8187 E1               pop hl
 226+ 8188
 227+ 8188 36 10            ld (hl),16
 228+ 818A
 229+ 818A C9               ret
 230+ 818B
 231+ 818B              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 232+ 818B
 233+ 818B              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 234+ 818B
 235+ 818B 3E 57            ld a,$57
 236+ 818D 94               sub h
 237+ 818E 47               ld b,a
 238+ 818F
 239+ 818F 3E DF            ld a,$df
 240+ 8191 BD               cp l
 241+ 8192 38 04            jr c,1F
 242+ 8194
 243+ 8194 3E 08            ld a,8
 244+ 8196 80               add b
 245+ 8197 47               ld b,a
 246+ 8198
 247+ 8198              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 248+ 8198              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 249+ 8198
 250+ 8198 48           1 ld c,b
 251+ 8199 0C               inc c
 252+ 819A
 253+ 819A CD FA 90     3 call NextScan
 254+ 819D EB               ex de,hl
 255+ 819E
 256+ 819E 73               ld (hl),e
 257+ 819F 2C               inc l
 258+ 81A0 72               ld (hl),d
 259+ 81A1 2C               inc l
 260+ 81A2
 261+ 81A2 EB               ex de,hl
 262+ 81A3
 263+ 81A3 10 F5            djnz 3B
 264+ 81A5
 265+ 81A5 08               ex af,af
 266+ 81A6 F5               push af
 267+ 81A7 E1               pop hl
 268+ 81A8
 269+ 81A8 71               ld (hl),c
 270+ 81A9
 271+ 81A9 C9               ret
 272+ 81AA
 273+ 81AA              ; -----------------------------------------------------------------------------
 274+ 81AA              ;
 275+ 81AA              ;   21/11/23
 276+ 81AA
 277+ 81AA              Limpia_y_reinicia_Scanlines_album
 278+ 81AA
 279+ 81AA              ;   Limpia Scanlines_album.
 280+ 81AA
 281+ 81AA 2A E9 89         ld hl,(Scanlines_album_SP)
 282+ 81AD 7D               ld a,l
 283+ 81AE A7               and a
 284+ 81AF C8               ret z   ;   Salimos si el álbum está vacío.
 285+ 81B0
 286+ 81B0 47               ld b,a
 287+ 81B1 04               inc b
 288+ 81B2
 289+ 81B2 36 00        1 ld (hl),0
 290+ 81B4 2D               dec l
 291+ 81B5 10 FB            djnz 1B
 292+ 81B7
 293+ 81B7              ;   Reinicializa (Scanlines_album_SP).
 294+ 81B7
 295+ 81B7 21 00 80         ld hl,Scanlines_album
 296+ 81BA 22 E9 89         ld (Scanlines_album_SP),hl
 297+ 81BD
 298+ 81BD C9               ret
 299+ 81BE
 300+ 81BE              ; -----------------------------------------------------------------------------
 301+ 81BE              ;
 302+ 81BE              ;   11/03/24
 303+ 81BE
 304+ 81BE              Pinta_Sprites
 305+ 81BE
 306+ 81BE              ;   Preparamos registros ...
 307+ 81BE
 308+ 81BE 2A E9 89         ld hl,(Scanlines_album_SP)
 309+ 81C1 CD 6C 8B         call Extrae_address
 310+ 81C4
 311+ 81C4 24               inc h
 312+ 81C5 25               dec h
 313+ 81C6 C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 314+ 81C7
 315+ 81C7 ED 73 E1 89      ld (Stack),sp
 316+ 81CB
 317+ 81CB EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 318+ 81CC              ;                                       ; DE se encuentra en los datos del sprite.
 319+ 81CC 2C               inc l
 320+ 81CD 2C               inc l
 321+ 81CE
 322+ 81CE 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 323+ 81CF
 324+ 81CF 2C               inc l
 325+ 81D0 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 326+ 81D1
 327+ 81D1              ;   Seleccionamos rutina de impresión:
 328+ 81D1
 329+ 81D1 3E 10            ld a,16
 330+ 81D3 B8               cp b
 331+ 81D4 C2 D2 82         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 332+ 81D7
 333+ 81D7              ;   Rutinas:
 334+ 81D7
 335+ 81D7              Pinta_rapido    ;   1520 t/states.
 336+ 81D7
 337+ 81D7 E1               pop hl
 338+ 81D8
 339+ 81D8 1A               ld a,(de)
 340+ 81D9 AE               xor (hl)
 341+ 81DA 77               ld (hl),a
 342+ 81DB 2C               inc l
 343+ 81DC 1C               inc e
 344+ 81DD 1A               ld a,(de)
 345+ 81DE AE               xor (hl)
 346+ 81DF 77               ld (hl),a
 347+ 81E0 2C               inc l
 348+ 81E1 1C               inc e
 349+ 81E2 1A               ld a,(de)
 350+ 81E3 AE               xor (hl)
 351+ 81E4 77               ld (hl),a
 352+ 81E5 13               inc de
 353+ 81E6
 354+ 81E6 E1               pop hl
 355+ 81E7
 356+ 81E7 1A               ld a,(de)
 357+ 81E8 AE               xor (hl)
 358+ 81E9 77               ld (hl),a
 359+ 81EA 2C               inc l
 360+ 81EB 1C               inc e
 361+ 81EC 1A               ld a,(de)
 362+ 81ED AE               xor (hl)
 363+ 81EE 77               ld (hl),a
 364+ 81EF 2C               inc l
 365+ 81F0 1C               inc e
 366+ 81F1 1A               ld a,(de)
 367+ 81F2 AE               xor (hl)
 368+ 81F3 77               ld (hl),a
 369+ 81F4 13               inc de
 370+ 81F5
 371+ 81F5 E1               pop hl
 372+ 81F6
 373+ 81F6 1A               ld a,(de)
 374+ 81F7 AE               xor (hl)
 375+ 81F8 77               ld (hl),a
 376+ 81F9 2C               inc l
 377+ 81FA 1C               inc e
 378+ 81FB 1A               ld a,(de)
 379+ 81FC AE               xor (hl)
 380+ 81FD 77               ld (hl),a
 381+ 81FE 2C               inc l
 382+ 81FF 1C               inc e
 383+ 8200 1A               ld a,(de)
 384+ 8201 AE               xor (hl)
 385+ 8202 77               ld (hl),a
 386+ 8203 13               inc de
 387+ 8204
 388+ 8204 E1               pop hl
 389+ 8205
 390+ 8205 1A               ld a,(de)
 391+ 8206 AE               xor (hl)
 392+ 8207 77               ld (hl),a
 393+ 8208 2C               inc l
 394+ 8209 1C               inc e
 395+ 820A 1A               ld a,(de)
 396+ 820B AE               xor (hl)
 397+ 820C 77               ld (hl),a
 398+ 820D 2C               inc l
 399+ 820E 1C               inc e
 400+ 820F 1A               ld a,(de)
 401+ 8210 AE               xor (hl)
 402+ 8211 77               ld (hl),a
 403+ 8212 13               inc de
 404+ 8213
 405+ 8213 E1               pop hl
 406+ 8214
 407+ 8214 1A               ld a,(de)
 408+ 8215 AE               xor (hl)
 409+ 8216 77               ld (hl),a
 410+ 8217 2C               inc l
 411+ 8218 1C               inc e
 412+ 8219 1A               ld a,(de)
 413+ 821A AE               xor (hl)
 414+ 821B 77               ld (hl),a
 415+ 821C 2C               inc l
 416+ 821D 1C               inc e
 417+ 821E 1A               ld a,(de)
 418+ 821F AE               xor (hl)
 419+ 8220 77               ld (hl),a
 420+ 8221 13               inc de
 421+ 8222
 422+ 8222 E1               pop hl
 423+ 8223
 424+ 8223 1A               ld a,(de)
 425+ 8224 AE               xor (hl)
 426+ 8225 77               ld (hl),a
 427+ 8226 2C               inc l
 428+ 8227 1C               inc e
 429+ 8228 1A               ld a,(de)
 430+ 8229 AE               xor (hl)
 431+ 822A 77               ld (hl),a
 432+ 822B 2C               inc l
 433+ 822C 1C               inc e
 434+ 822D 1A               ld a,(de)
 435+ 822E AE               xor (hl)
 436+ 822F 77               ld (hl),a
 437+ 8230 13               inc de
 438+ 8231
 439+ 8231 E1               pop hl
 440+ 8232
 441+ 8232 1A               ld a,(de)
 442+ 8233 AE               xor (hl)
 443+ 8234 77               ld (hl),a
 444+ 8235 2C               inc l
 445+ 8236 1C               inc e
 446+ 8237 1A               ld a,(de)
 447+ 8238 AE               xor (hl)
 448+ 8239 77               ld (hl),a
 449+ 823A 2C               inc l
 450+ 823B 1C               inc e
 451+ 823C 1A               ld a,(de)
 452+ 823D AE               xor (hl)
 453+ 823E 77               ld (hl),a
 454+ 823F 13               inc de
 455+ 8240
 456+ 8240 E1               pop hl
 457+ 8241
 458+ 8241 1A               ld a,(de)
 459+ 8242 AE               xor (hl)
 460+ 8243 77               ld (hl),a
 461+ 8244 2C               inc l
 462+ 8245 1C               inc e
 463+ 8246 1A               ld a,(de)
 464+ 8247 AE               xor (hl)
 465+ 8248 77               ld (hl),a
 466+ 8249 2C               inc l
 467+ 824A 1C               inc e
 468+ 824B 1A               ld a,(de)
 469+ 824C AE               xor (hl)
 470+ 824D 77               ld (hl),a
 471+ 824E 13               inc de
 472+ 824F
 473+ 824F E1               pop hl
 474+ 8250
 475+ 8250 1A               ld a,(de)
 476+ 8251 AE               xor (hl)
 477+ 8252 77               ld (hl),a
 478+ 8253 2C               inc l
 479+ 8254 1C               inc e
 480+ 8255 1A               ld a,(de)
 481+ 8256 AE               xor (hl)
 482+ 8257 77               ld (hl),a
 483+ 8258 2C               inc l
 484+ 8259 1C               inc e
 485+ 825A 1A               ld a,(de)
 486+ 825B AE               xor (hl)
 487+ 825C 77               ld (hl),a
 488+ 825D 13               inc de
 489+ 825E
 490+ 825E E1               pop hl
 491+ 825F
 492+ 825F 1A               ld a,(de)
 493+ 8260 AE               xor (hl)
 494+ 8261 77               ld (hl),a
 495+ 8262 2C               inc l
 496+ 8263 1C               inc e
 497+ 8264 1A               ld a,(de)
 498+ 8265 AE               xor (hl)
 499+ 8266 77               ld (hl),a
 500+ 8267 2C               inc l
 501+ 8268 1C               inc e
 502+ 8269 1A               ld a,(de)
 503+ 826A AE               xor (hl)
 504+ 826B 77               ld (hl),a
 505+ 826C 13               inc de
 506+ 826D
 507+ 826D E1               pop hl
 508+ 826E
 509+ 826E 1A               ld a,(de)
 510+ 826F AE               xor (hl)
 511+ 8270 77               ld (hl),a
 512+ 8271 2C               inc l
 513+ 8272 1C               inc e
 514+ 8273 1A               ld a,(de)
 515+ 8274 AE               xor (hl)
 516+ 8275 77               ld (hl),a
 517+ 8276 2C               inc l
 518+ 8277 1C               inc e
 519+ 8278 1A               ld a,(de)
 520+ 8279 AE               xor (hl)
 521+ 827A 77               ld (hl),a
 522+ 827B 13               inc de
 523+ 827C
 524+ 827C E1               pop hl
 525+ 827D
 526+ 827D 1A               ld a,(de)
 527+ 827E AE               xor (hl)
 528+ 827F 77               ld (hl),a
 529+ 8280 2C               inc l
 530+ 8281 1C               inc e
 531+ 8282 1A               ld a,(de)
 532+ 8283 AE               xor (hl)
 533+ 8284 77               ld (hl),a
 534+ 8285 2C               inc l
 535+ 8286 1C               inc e
 536+ 8287 1A               ld a,(de)
 537+ 8288 AE               xor (hl)
 538+ 8289 77               ld (hl),a
 539+ 828A 13               inc de
 540+ 828B
 541+ 828B E1               pop hl
 542+ 828C
 543+ 828C 1A               ld a,(de)
 544+ 828D AE               xor (hl)
 545+ 828E 77               ld (hl),a
 546+ 828F 2C               inc l
 547+ 8290 1C               inc e
 548+ 8291 1A               ld a,(de)
 549+ 8292 AE               xor (hl)
 550+ 8293 77               ld (hl),a
 551+ 8294 2C               inc l
 552+ 8295 1C               inc e
 553+ 8296 1A               ld a,(de)
 554+ 8297 AE               xor (hl)
 555+ 8298 77               ld (hl),a
 556+ 8299 13               inc de
 557+ 829A
 558+ 829A E1               pop hl
 559+ 829B
 560+ 829B 1A               ld a,(de)
 561+ 829C AE               xor (hl)
 562+ 829D 77               ld (hl),a
 563+ 829E 2C               inc l
 564+ 829F 1C               inc e
 565+ 82A0 1A               ld a,(de)
 566+ 82A1 AE               xor (hl)
 567+ 82A2 77               ld (hl),a
 568+ 82A3 2C               inc l
 569+ 82A4 1C               inc e
 570+ 82A5 1A               ld a,(de)
 571+ 82A6 AE               xor (hl)
 572+ 82A7 77               ld (hl),a
 573+ 82A8 13               inc de
 574+ 82A9
 575+ 82A9 E1               pop hl
 576+ 82AA
 577+ 82AA 1A               ld a,(de)
 578+ 82AB AE               xor (hl)
 579+ 82AC 77               ld (hl),a
 580+ 82AD 2C               inc l
 581+ 82AE 1C               inc e
 582+ 82AF 1A               ld a,(de)
 583+ 82B0 AE               xor (hl)
 584+ 82B1 77               ld (hl),a
 585+ 82B2 2C               inc l
 586+ 82B3 1C               inc e
 587+ 82B4 1A               ld a,(de)
 588+ 82B5 AE               xor (hl)
 589+ 82B6 77               ld (hl),a
 590+ 82B7 13               inc de
 591+ 82B8
 592+ 82B8 E1               pop hl
 593+ 82B9
 594+ 82B9 1A               ld a,(de)
 595+ 82BA AE               xor (hl)
 596+ 82BB 77               ld (hl),a
 597+ 82BC 2C               inc l
 598+ 82BD 1C               inc e
 599+ 82BE 1A               ld a,(de)
 600+ 82BF AE               xor (hl)
 601+ 82C0 77               ld (hl),a
 602+ 82C1 2C               inc l
 603+ 82C2 1C               inc e
 604+ 82C3 1A               ld a,(de)
 605+ 82C4 AE               xor (hl)
 606+ 82C5 77               ld (hl),a
 607+ 82C6 13               inc de
 608+ 82C7
 609+ 82C7 ED 73 E9 89      ld (Scanlines_album_SP),sp
 610+ 82CB ED 7B E1 89      ld sp,(Stack)
 611+ 82CF C3 BE 81         jp Pinta_Sprites
 612+ 82D2
 613+ 82D2 18 FE        Pinta_lento jr $
# file closed: Genera_datos_de_impresion.asm
1801  82D4
1802  82D4              	SAVESNA "Pruebas.sna", START
1803  82D4
1804  82D4
1805  82D4
1806  82D4
# file closed: Banco_de_pruebas.asm
