# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              FRAME
  14  AA01
  15  AA01 08           	ex af,af'
  16  AA02 F5           	push af	;af'
  17  AA03 D9           	exx
  18  AA04 E5           	push hl	;hl'
  19  AA05 D5           	push de	;de'
  20  AA06 C5           	push bc	;bc'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl
  23  AA09 D5           	push de	;de
  24  AA0A C5           	push bc	;bc
  25  AA0B 08           	ex af,af'
  26  AA0C F5           	push af	;af
  27  AA0D DD E5        	push ix
  28  AA0F FD E5        	push iy
  29  AA11
  30  AA11 3E 02        	ld a,2
  31  AA13 D3 FE        	out ($fe),a
  32  AA15
  33  AA15 3A 07 8A     	ld a,(Ctrl_3)
  34  AA18 CB 47        	bit 0,a
  35  AA1A 28 2C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  36  AA1C CB 57        	bit 2,a
  37  AA1E 28 28        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  38  AA20
  39  AA20              Borrando
  40  AA20
  41  AA20 2A 01 8A     	ld hl,(Scanlines_album_SP)
  42  AA23 CD 1C 8D     	call Extrae_address
  43  AA26
  44  AA26 24           	inc h
  45  AA27 25           	dec h
  46  AA28 28 05        	jr z,Pintando
  47  AA2A
  48  AA2A CD 19 91     	call Pinta_Sprites
  49  AA2D
  50  AA2D 18 F1        	jr Borrando
  51  AA2F
  52  AA2F              Pintando
  53  AA2F
  54  AA2F 2A 03 8A     	ld hl,(India_SP)
  55  AA32 2C           	inc l
  56  AA33 CD 1C 8D     	call Extrae_address
  57  AA36
  58  AA36 24           	inc h
  59  AA37 25           	dec h
  60  AA38 28 0E        	jr z,1F
  61  AA3A
  62  AA3A 1C           	inc e
  63  AA3B 1C           	inc e
  64  AA3C
  65  AA3C ED 53 03 8A  	ld (India_SP),de
  66  AA40
  67  AA40 CD 1C 8D     	call Extrae_address
  68  AA43
  69  AA43 CD 19 91     	call Pinta_Sprites
  70  AA46
  71  AA46 18 E7        	jr Pintando
  72  AA48
  73  AA48              ; Posible colisión Entidad-Amadeus ???
  74  AA48
  75  AA48              ;	ld a,(Impacto2)
  76  AA48              ;	bit 2,a
  77  AA48              ;	jr z,1F
  78  AA48
  79  AA48              ;	call Detecta_colision_nave_entidad
  80  AA48
  81  AA48              ;1 ld a,4
  82  AA48              ;	out ($fe),a
  83  AA48              ;	call Gestiona_Amadeus
  84  AA48
  85  AA48              ;	ld a,7
  86  AA48              ;	out ($fe),a											; Borde blanco.
  87  AA48              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  88  AA48              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  89  AA48
  90  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  91  AA48
  92  AA48              ;	call Recupera_parametros_DRAW
  93  AA48
  94  AA48 3A 07 8A     1 ld a,(Ctrl_3)
  95  AA4B CB 47        	bit 0,a
  96  AA4D 28 03        	jr z,2F 											; No actualizamos FRAMES si el último cuadro no se completó.
  97  AA4F
  98  AA4F CD 38 00     	call ROM_keyboard									; Actualiza FRAMES y ejecuta las rutinas de teclado de la ROM.
  99  AA52
 100  AA52 21 07 8A     2 ld hl,Ctrl_3
 101  AA55 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 102  AA57 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 103  AA59
 104  AA59              ;	call Recupera_todos_los_registros
 105  AA59
 106  AA59 FD E1            pop iy
 107  AA5B DD E1        	pop ix
 108  AA5D F1           	pop af
 109  AA5E C1           	pop bc
 110  AA5F D1           	pop de
 111  AA60 E1           	pop hl
 112  AA61 D9           	exx
 113  AA62 C1           	pop bc
 114  AA63 D1           	pop de
 115  AA64 E1           	pop hl
 116  AA65 08           	ex af,af'
 117  AA66 F1           	pop af
 118  AA67 08           	ex af,af'
 119  AA68 D9           	exx
 120  AA69
 121  AA69 FB           	ei
 122  AA6A
 123  AA6A 3E 01        	ld a,1												; Borde azul.
 124  AA6C D3 FE        	out ($fe),a
 125  AA6E
 126  AA6E C9           	ret
 127  AA6F
 128  AA6F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 129  AA6F
 130  AA6F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6F              ;
   3+ AA6F              ;	17/02/23
   4+ AA6F              ;
   5+ AA6F              ;	Sprites e índices.
   6+ AA6F
   7+ AA6F              	org $8120
   8+ 8120
   9+ 8120              ; Disparo.
  10+ 8120
  11+ 8120 28 81        Indice_disparo defw Disparo_0
  12+ 8122 2E 81        	defw Disparo_f9
  13+ 8124 34 81        	defw Disparo_fb
  14+ 8126 3A 81        	defw Disparo_fd
  15+ 8128
  16+ 8128              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8128 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 812C 01 80
  18+ 812E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 812E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8132 00 60
  20+ 8134              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8134 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8138 18 00
  22+ 813A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 813A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 813E 06 00
  24+ 8140
  25+ 8140              ; ----------------------------------------------------------------------------------------
  26+ 8140
  27+ 8140              ; Badsat_izq. 2x2.
  28+ 8140
  29+ 8140 50 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8142 C0 82        	defw Badsat_izq_fe
  31+ 8144 90 82        	defw Badsat_izq_fd
  32+ 8146 60 82        	defw Badsat_izq_fc
  33+ 8148 30 82        	defw Badsat_izq_fb
  34+ 814A 00 82        	defw Badsat_izq_fa
  35+ 814C B0 81        	defw Badsat_izq_f9
  36+ 814E 80 81        	defw Badsat_izq_f8
  37+ 8150
  38+ 8150 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8153 02 14 00     	DEFB 	$02,$14,$00
  40+ 8156 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8159 02 55 00     	DEFB 	$02,$55,$00
  42+ 815C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 815F 02 54 00     	DEFB 	$02,$54,$00
  44+ 8162 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 8165 03 60 00     	DEFB 	$03,$60,$00
  46+ 8168 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 816B 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 816E 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 8171 54 40 00     	DEFB 	$54,$40,$00
  50+ 8174 AA 60 00     	DEFB	$AA,$60,$00
  51+ 8177 54 00 00     	DEFB 	$54,$00,$00
  52+ 817A 28 00 00     	DEFB 	$28,$00,$00
  53+ 817D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8180
  55+ 8180 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 8184 0A 00 01 15
  56+ 8188 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 818C 01 55 00 01
  57+ 8190 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 8194 00 01 B0 00
  58+ 8198 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 819C FC 00 15 F4
  59+ 81A0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81A4 55 30 00 2A
  60+ 81A8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81AC 00 08 00 00
  61+ 81B0
  62+ 81B0 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81B4 85 00 00 8A
  63+ 81B8 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81BC 00 AA 80 00
  64+ 81C0 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81C4 00 00 D8 00
  65+ 81C8 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81CC FE 00 0A FA
  66+ 81D0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81D4 2A 98 00 15
  67+ 81D8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81DC 00 04 00 00
  68+ 81E0
  69+ 81E0
  70+ 81E0              ;! 39 bytes libres aquí !!!!!
  71+ 81E0
  72+ 81E0              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 E0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 10 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 40 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 40 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 10 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC E0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 00     Amadeus DEFB $01,$80,0
 214+ 84B3 23 C4 00     	DEFB	$23,$C4,0
 215+ 84B6 26 64 00     	DEFB	$26,$64,0
 216+ 84B9 24 24 00     	DEFB	$24,$24,0
 217+ 84BC 2C 34 00     	DEFB	$2C,$34,0
 218+ 84BF 6D B6 00     	DEFB	$6D,$B6,0
 219+ 84C2 6F F6 00     	DEFB	$6F,$F6,0
 220+ 84C5 67 E6 00     	DEFB	$67,$E6,0
 221+ 84C8 E7 E7 00     	DEFB	$E7,$E7,0
 222+ 84CB F3 CF 00     	DEFB	$F3,$CF,0
 223+ 84CE F7 EF 00     	DEFB	$F7,$EF,0
 224+ 84D1 FF FF 00     	DEFB	$FF,$FF,0
 225+ 84D4 FB DF 00     	DEFB	$FB,$DF,0
 226+ 84D7 FB DF 00     	DEFB	$FB,$DF,0
 227+ 84DA 8B D1 00     	DEFB	$8B,$D1,0
 228+ 84DD 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 229+ 84E0
 230+ 84E0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 230+ 84E4 F1 00 09 99
 231+ 84E8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 231+ 84EC 0B 0D 00 1B
 232+ 84F0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 232+ 84F4 80 19 F9 80
 233+ 84F8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 233+ 84FC F3 C0 3D FB
 234+ 8500 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 234+ 8504 3E F7 C0 3E
 235+ 8508 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 235+ 850C 40 1C 63 80
 236+ 8510
 237+ 8510 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 237+ 8514 3C 40 02 66
 238+ 8518 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 238+ 851C 02 C3 40 06
 239+ 8520 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 239+ 8524 60 06 7E 60
 240+ 8528 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 240+ 852C 3C F0 0F 7E
 241+ 8530 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 241+ 8534 0F BD F0 0F
 242+ 8538 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 242+ 853C 10 07 18 E0
 243+ 8540
 244+ 8540 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 244+ 8544 8F 10 00 99
 245+ 8548 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 245+ 854C 00 B0 D0 01
 246+ 8550 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 246+ 8554 D8 01 9F 98
 247+ 8558 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 247+ 855C CF 3C 03 DF
 248+ 8560 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 248+ 8564 03 EF 7C 03
 249+ 8568 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 249+ 856C 44 01 C6 38
 250+ 8570
 251+ 8570              ; ----------------------------------------------------------------------------------------
 252+ 8570
 253+ 8570              ;	org $8690
 254+ 8570
 255+ 8570 76 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 256+ 8572 A6 85        	defw Explosion_2x3_2
 257+ 8574 D6 85        	defw Explosion_2x3_3
 258+ 8576
 259+ 8576 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 259+ 857A 10 00 04 38
 260+ 857E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 260+ 8582 02 E6 80 01
 261+ 8586 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 261+ 858A 00 03 DD 80
 262+ 858E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 262+ 8592 3B 80 01 9D
 263+ 8596 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 263+ 859A 02 FD 80 03
 264+ 859E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 264+ 85A2 00 08 00 00
 265+ 85A6
 266+ 85A6 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 266+ 85AA 38 10 03 BC
 267+ 85AE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 267+ 85B2 04 06 C0 00
 268+ 85B6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 268+ 85BA 00 03 DD 80
 269+ 85BE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 269+ 85C2 3A 70 01 9C
 270+ 85C6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 270+ 85CA 04 F8 80 06
 271+ 85CE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 271+ 85D2 00 00 00 00
 272+ 85D6
 273+ 85D6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 273+ 85DA 00 20 08 00
 274+ 85DE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 274+ 85E2 00 06 00 00
 275+ 85E6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 275+ 85EA 00 00 14 30
 276+ 85EE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 276+ 85F2 38 00 01 08
 277+ 85F6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 277+ 85FA 00 80 00 04
 278+ 85FE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 278+ 8602 10 08 00 20
 279+ 8606
 280+ 8606              ; ------------------------------------------
 281+ 8606
 282+ 8606 0C 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 283+ 8608 2C 86        	defw Explosion_2x2_2
 284+ 860A 4C 86        	defw Explosion_2x2_3
 285+ 860C
 286+ 860C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 286+ 8610 43 84 37 D8
 287+ 8614 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 287+ 8618 17 F0 3D D8
 288+ 861C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 288+ 8620 19 D0 1F 60
 289+ 8624 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 289+ 8628 40 00 80 00
 290+ 862C
 291+ 862C
 292+ 862C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 292+ 8630 3B C2 60 0C
 293+ 8634 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 293+ 8638 07 F0 3D D8
 294+ 863C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 294+ 8640 19 C6 1F 64
 295+ 8644 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 295+ 8648 80 00 00 00
 296+ 864C
 297+ 864C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 297+ 8650 88 04 10 0C
 298+ 8654 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 298+ 8658 81 E0 01 43
 299+ 865C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 299+ 8660 10 80 18 00
 300+ 8664 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 300+ 8668 60 01 80 02
 301+ 866C
 302+ 866C
 303+ 866C
 304+ 866C
 305+ 866C
# file closed: Sprites_e_indices.asm
 131  866C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 866C              ; ---------------------------------------------------------------------
   2+ 866C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 866C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 866C              ; ---------------------------------------------------------------------
   5+ 866C
   6+ 866C              ; 27/03/24
   7+ 866C              ;
   8+ 866C              ;	En esta tabla iremos almacenando:
   9+ 866C              ;
  10+ 866C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 866C
  12+ 866C 00 00 00...  Numeros_aleatorios ds 7
  13+ 8673
  14+ 8673 00 00 00...  Tabla_de_pintado ds 24
  15+ 868B
  16+ 868B              ;	db 0, defw 0
  17+ 868B              ;	db 0, defw 0
  18+ 868B              ;	db 0, defw 0
  19+ 868B              ;	db 0, defw 0
  20+ 868B              ;	db 0, defw 0
  21+ 868B              ;	db 0, defw 0
  22+ 868B              ;	db 0, defw 0
  23+ 868B
  24+ 868B E4 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  25+ 868D              ;	defw ...
  26+ 868D              ; 	defw ...
  27+ 868D 00 00        	defw 0
  28+ 868F
  29+ 868F              ; Control. %00000001 00000001
  30+ 868F              ;
  31+ 868F              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  32+ 868F              ;                    _ hacen las entidades hacia abajo.
  33+ 868F              ;
  34+ 868F              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  35+ 868F
  36+ 868F 95 86        Indice_de_disparos_Amadeus defw Disparo_1A
  37+ 8691 9D 86        	defw Disparo_2A
  38+ 8693 A5 86        	defw Disparo_3A
  39+ 8695
  40+ 8695 00 00        Disparo_1A defw 0									; Control.
  41+ 8697 00 00        	defw 0											; Puntero objeto.
  42+ 8699 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  43+ 869B 00 00        	defw 0											; Rutina de impresión.
  44+ 869D
  45+ 869D 00 00        Disparo_2A defw 0									; Control.
  46+ 869F 00 00        	defw 0											; Puntero objeto.
  47+ 86A1 00 00        	defw 0											; Puntero de impresión.
  48+ 86A3 00 00        	defw 0											; Rutina de impresión.
  49+ 86A5
  50+ 86A5 00 00        Disparo_3A defw 0
  51+ 86A7
  52+ 86A7 BD 86        Indice_de_disparos_entidades defw Disparo_1
  53+ 86A9 C5 86        	defw Disparo_2
  54+ 86AB CD 86        	defw Disparo_3
  55+ 86AD D5 86        	defw Disparo_4
  56+ 86AF DD 86        	defw Disparo_5
  57+ 86B1 E5 86        	defw Disparo_6
  58+ 86B3 ED 86        	defw Disparo_7
  59+ 86B5 F5 86        	defw Disparo_8
  60+ 86B7 FD 86        	defw Disparo_9
  61+ 86B9 05 87        	defw Disparo_10
  62+ 86BB 0D 87        	defw Disparo_11
  63+ 86BD
  64+ 86BD 00 00        Disparo_1 defw 0									; Control.
  65+ 86BF 00 00        	defw 0											; Puntero objeto.
  66+ 86C1 00 00        	defw 0											; Puntero de impresión.
  67+ 86C3 00 00        	defw 0											; Rutina de impresión.
  68+ 86C5
  69+ 86C5 00 00        Disparo_2 defw 0									; Control.
  70+ 86C7 00 00        	defw 0											; Puntero objeto.
  71+ 86C9 00 00        	defw 0											; Puntero de impresión.
  72+ 86CB 00 00        	defw 0											; Rutina de impresión.
  73+ 86CD
  74+ 86CD 00 00        Disparo_3 defw 0									; Control.
  75+ 86CF 00 00        	defw 0											; Puntero objeto.
  76+ 86D1 00 00        	defw 0											; Puntero de impresión.
  77+ 86D3 00 00        	defw 0											; Rutina de impresión.
  78+ 86D5
  79+ 86D5 00 00        Disparo_4 defw 0									; Control.
  80+ 86D7 00 00        	defw 0											; Puntero objeto.
  81+ 86D9 00 00        	defw 0											; Puntero de impresión.
  82+ 86DB 00 00        	defw 0											; Rutina de impresión.
  83+ 86DD
  84+ 86DD 00 00        Disparo_5 defw 0									; Control.
  85+ 86DF 00 00        	defw 0											; Puntero objeto.
  86+ 86E1 00 00        	defw 0											; Puntero de impresión.
  87+ 86E3 00 00        	defw 0											; Rutina de impresión.
  88+ 86E5
  89+ 86E5 00 00        Disparo_6 defw 0									; Control.
  90+ 86E7 00 00        	defw 0											; Puntero objeto.
  91+ 86E9 00 00        	defw 0											; Puntero de impresión.
  92+ 86EB 00 00        	defw 0											; Rutina de impresión.
  93+ 86ED
  94+ 86ED 00 00        Disparo_7 defw 0									; Control.
  95+ 86EF 00 00        	defw 0											; Puntero objeto.
  96+ 86F1 00 00        	defw 0											; Puntero de impresión.
  97+ 86F3 00 00        	defw 0											; Rutina de impresión.
  98+ 86F5
  99+ 86F5 00 00        Disparo_8 defw 0									; Control.
 100+ 86F7 00 00        	defw 0											; Puntero objeto.
 101+ 86F9 00 00        	defw 0											; Puntero de impresión.
 102+ 86FB 00 00        	defw 0											; Rutina de impresión.
 103+ 86FD
 104+ 86FD 00 00        Disparo_9 defw 0									; Control.
 105+ 86FF 00 00        	defw 0											; Puntero objeto.
 106+ 8701 00 00        	defw 0											; Puntero de impresión.
 107+ 8703 00 00        	defw 0											; Rutina de impresión.
 108+ 8705
 109+ 8705 00 00        Disparo_10 defw 0									; Control.
 110+ 8707 00 00        	defw 0											; Puntero objeto.
 111+ 8709 00 00        	defw 0											; Puntero de impresión.
 112+ 870B 00 00        	defw 0											; Rutina de impresión.
 113+ 870D
 114+ 870D 00 00        Disparo_11 defw 0
 115+ 870F
 116+ 870F              ; -------------------------------------------------------------------------------------
 117+ 870F              ;
 118+ 870F              ;	Índice de cajas de entidades.
 119+ 870F              ;
 120+ 870F              ;	18/1/24
 121+ 870F              ;
 122+ 870F
 123+ 870F              Indice_de_cajas_de_entidades
 124+ 870F
 125+ 870F 57 87        	defw Caja_1
 126+ 8711 65 87        	defw Caja_2
 127+ 8713 73 87        	defw Caja_3
 128+ 8715 81 87        	defw Caja_4
 129+ 8717 8F 87        	defw Caja_5
 130+ 8719 9D 87        	defw Caja_6
 131+ 871B AB 87        	defw Caja_7
 132+ 871D
 133+ 871D 00 00        	defw 0
 134+ 871F 00 00        	defw 0
 135+ 8721
 136+ 8721              ; ---------- ---------- ---------- ---------- ----------
 137+ 8721
 138+ 8721 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 139+ 8724 00 00        	defw 0		 										; (Posicion_actual).
 140+ 8726 00 00        	defw 0	 											; (Puntero_objeto).
 141+ 8728 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 142+ 872A
 143+ 872A 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 144+ 872B 05           	db %00000101										; (Attr).
 145+ 872C 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 146+ 872E A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 147+ 8730 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 148+ 8732 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 149+ 8734 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 150+ 8736 04           	db 4 												; (Cuad_objeto).
 151+ 8737 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 152+ 8738 00 00 00...  	ds 6												; Variables_de_borrado
 153+ 873E
 154+ 873E 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 155+ 8740
 156+ 8740              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 157+ 8740 00 00        	defw 0
 158+ 8742 00 00        	defw 0 												; Contador_de_mov_masticados
 159+ 8744 40           	db $40												; (Ctrl_0).
 160+ 8745 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 160+ 8749 00 00
 161+ 874B 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 162+ 874E 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 163+ 8750 00           	db 0												; (Cola_de_desplazamiento).
 164+ 8751 00           	db 0 												; (Columnas).
 165+ 8752 00 00        	defw 0												; (Limite_horizontal).
 166+ 8754 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 167+ 8757
 168+ 8757              ; ---------- ---------- ---------- ---------- ----------
 169+ 8757              ;
 170+ 8757              ;	22/01/24
 171+ 8757              ;
 172+ 8757              ; 	Cada caja tiene 14 bytes !!!
 173+ 8757
 174+ 8757 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 175+ 875A 00           	db 0												; (Contador_de_vueltas).
 176+ 875B 00           	db 0												; (Impacto).
 177+ 875C 00 00        	defw 0												; (Puntero_de_impresion).
 178+ 875E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 179+ 8760 00 00        	defw 0 												; (Contador_de_mov_masticados).
 180+ 8762 00           	db 0												; (Ctrl_0).
 181+ 8763 00           	db 0												; (Ctrl_2).
 182+ 8764 00           	db 0												; (Velocidad).
 183+ 8765
 184+ 8765              ; ---------- ---------- ---------- ---------- ----------
 185+ 8765
 186+ 8765 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 187+ 8768 00           	db 0 												; (Contador_de_vueltas).
 188+ 8769 00           	db 0												; (Impacto).
 189+ 876A 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 876C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 876E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8770 00           	db 0												; (Ctrl_0).
 193+ 8771 00           	db 0												; (Ctrl_2).
 194+ 8772 00           	db 0												; (Velocidad).
 195+ 8773
 196+ 8773              ; ---------- ---------- ---------- ---------- ----------
 197+ 8773
 198+ 8773 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 199+ 8776 00           	db 0 												; (Contador_de_vueltas).
 200+ 8777 00           	db 0												; (Impacto).
 201+ 8778 00 00        	defw 0												; (Puntero_de_impresion).
 202+ 877A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 203+ 877C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 204+ 877E 00           	db 0												; (Ctrl_0).
 205+ 877F 00           	db 0												; (Ctrl_2).
 206+ 8780 00           	db 0												; (Velocidad).
 207+ 8781
 208+ 8781              ; ---------- ---------- ---------- ---------- ----------
 209+ 8781
 210+ 8781 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 8784 00           	db 0 												; (Contador_de_vueltas).
 212+ 8785 00           	db 0												; (Impacto).
 213+ 8786 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8788 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 878A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 878C 00           	db 0												; (Ctrl_0).
 217+ 878D 00           	db 0												; (Ctrl_2).
 218+ 878E 00           	db 0												; (Velocidad).
 219+ 878F
 220+ 878F              ; ---------- ---------- ---------- ---------- ----------
 221+ 878F
 222+ 878F 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 223+ 8792 00           	db 0 												; (Contador_de_vueltas).
 224+ 8793 00           	db 0												; (Impacto).
 225+ 8794 00 00        	defw 0												; (Puntero_de_impresion).
 226+ 8796 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 227+ 8798 00 00        	defw 0 												; (Contador_de_mov_masticados).
 228+ 879A 00           	db 0												; (Ctrl_0).
 229+ 879B 00           	db 0												; (Ctrl_2).
 230+ 879C 00           	db 0												; (Velocidad).
 231+ 879D
 232+ 879D              ; ---------- ---------- ---------- ---------- ----------
 233+ 879D
 234+ 879D 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A0 00           	db 0 												; (Contador_de_vueltas).
 236+ 87A1 00           	db 0												; (Impacto).
 237+ 87A2 00 00        	defw 0												; (Puntero_de_impresion).
 238+ 87A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 239+ 87A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 240+ 87A8 00           	db 0												; (Ctrl_0).
 241+ 87A9 00           	db 0												; (Ctrl_2).
 242+ 87AA 00           	db 0												; (Velocidad).
 243+ 87AB
 244+ 87AB              ; ---------- ---------- ---------- ---------- ----------
 245+ 87AB
 246+ 87AB 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 87AE 00           	db 0 												; (Contador_de_vueltas).
 248+ 87AF 00           	db 0												; (Impacto).
 249+ 87B0 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 87B2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 87B4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 87B6 00           	db 0												; (Ctrl_0).
 253+ 87B7 00           	db 0												; (Ctrl_2).
 254+ 87B8 00           	db 0												; (Velocidad).
 255+ 87B9
 256+ 87B9              ; -------------------------------------------------------------------------------------
 257+ 87B9              ;
 258+ 87B9              ;	11/1/24
 259+ 87B9              ;
 260+ 87B9              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 261+ 87B9              ;
 262+ 87B9              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 263+ 87B9              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 264+ 87B9              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 265+ 87B9              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 266+ 87B9
 267+ 87B9              Indice_de_definiciones_de_entidades
 268+ 87B9
 269+ 87B9 BD 87        	defw Entidad_1
 270+ 87BB CA 87        	defw Entidad_2
 271+ 87BD
 272+ 87BD              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 273+ 87BD
 274+ 87BD              ;	BADSAT, (Satélite malvado).
 275+ 87BD
 276+ 87BD 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 277+ 87C0 01           	db 1												; (Contador_de_vueltas).
 278+ 87C1 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 279+ 87C3 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 280+ 87C5 03 40        	defw $4003	                                     	; (Posicion_inicio).
 281+ 87C7 01           	db 1												; (Cuad_objeto).
 282+ 87C8 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 283+ 87CA
 284+ 87CA 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 285+ 87CD 01           	db 1												; (Contador_de_vueltas).
 286+ 87CE F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 87D0 40 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 87D2 40 50        	defw $5040                                      	; (Posicion_inicio).
 289+ 87D4 01           	db 1												; (Cuad_objeto).
 290+ 87D5 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 291+ 87D7
 292+ 87D7              ; -------------------------------------------------------------------------------------
 293+ 87D7              ;
 294+ 87D7              ;	14/05/24
 295+ 87D7              ;
 296+ 87D7              ;	Definición de Amadeus.
 297+ 87D7              ;
 298+ 87D7              ;	Amadeus no utiliza los parámetros: (Tipo) y (Contador_de_vueltas). Los colocamos a "0".
 299+ 87D7              ;	Inicialmente situamos a Amadeus en el extremo izquierdo de la pantalla.
 300+ 87D7
 301+ 87D7 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 302+ 87DA 00           	db 0												; (Contador_de_vueltas).
 303+ 87DB 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 304+ 87DD A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 305+ 87DF C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 306+ 87E1 03           	db 3												; (Cuad_objeto).
 307+ 87E2 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 132  87E4              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87E4
   2+ 87E4
   3+ 87E4              ;   07/07/23
   4+ 87E4              ;
   5+ 87E4              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87E4              ;
   7+ 87E4              ;   Codificación:
   8+ 87E4              ;
   9+ 87E4              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87E4              ;
  11+ 87E4              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87E4              ;
  13+ 87E4              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87E4              ;
  15+ 87E4              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87E4              ;
  17+ 87E4              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87E4              ;                               ..... %01000010 Vel_up 4
  19+ 87E4              ;                                               Vel_down 2
  20+ 87E4              ;                               ..... $42
  21+ 87E4              ;
  22+ 87E4              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87E4              ;
  24+ 87E4              ;                               ..... %01000010 Vel_left 4
  25+ 87E4              ;                                               Vel_right 2
  26+ 87E4              ;                               ..... $42
  27+ 87E4              ;
  28+ 87E4              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87E4              ;
  30+ 87E4              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87E4              ;
  32+ 87E4              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87E4              ;
  34+ 87E4              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87E4              ;                                     $53
  36+ 87E4              ;
  37+ 87E4              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87E4              ;
  39+ 87E4              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87E4              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87E4              ;
  42+ 87E4              ;                       Arriba ..... $81
  43+ 87E4              ;                       Arriba - izquierda ..... $a1
  44+ 87E4              ;                       Arriba - derecha ..... $91
  45+ 87E4              ;
  46+ 87E4              ;                       Abajo ..... $41
  47+ 87E4              ;                       Abajo - izquierda ..... $61
  48+ 87E4              ;                       Abajo - derecha ..... $51
  49+ 87E4              ;
  50+ 87E4              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87E4              ;
  52+ 87E4              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87E4              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87E4              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87E4              ;
  56+ 87E4              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87E4              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87E4              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87E4              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87E4              ;
  61+ 87E4              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87E4              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87E4              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87E4              ;
  65+ 87E4              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87E4              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87E4              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87E4              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87E4
  70+ 87E4              ; ----- ----- ----- ----- -----
  71+ 87E4
  72+ 87E4 10 88        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87E6 18 88            defw F_1
  74+ 87E8 22 88            defw F_2
  75+ 87EA 2C 88            defw Codo_abajo_derecha
  76+ 87EC 60 88            defw Derecha_y_subiendo
  77+ 87EE 6A 88            defw Derecha_y_subiendo_1
  78+ 87F0 74 88            defw F_3
  79+ 87F2 7E 88            defw F_4
  80+ 87F4 88 88            defw Derecha_y_bajando
  81+ 87F6 92 88            defw Derecha_y_bajando_1
  82+ 87F8 9C 88            defw Derecha_y_bajando_2
  83+ 87FA A6 88            defw Codo_derecha_abajo
  84+ 87FC D6 88            defw Codo_abajo_izq.
  85+ 87FE 0A 89            defw Izquierda_y_subiendo
  86+ 8800 14 89            defw Izquierda_y_subiendo_1
  87+ 8802 1E 89            defw F_5
  88+ 8804 28 89            defw F_6
  89+ 8806 32 89            defw Izquierda_y_bajando
  90+ 8808 3C 89            defw Izquierda_y_bajando_1
  91+ 880A 46 89            defw Izquierda_y_bajando_2
  92+ 880C 50 89            defw Codo_izquierda_abajo
  93+ 880E 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8810
  95+ 8810 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8814 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8818
  98+ 8818 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 881C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8820 08 00
 100+ 8822
 101+ 8822 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8826 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 882A 0F FE
 103+ 882C
 104+ 882C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8830 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8834 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8838 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 883C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8840 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8844 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8848 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 884C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8850 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8854 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8858 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 885C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8860
 118+ 8860 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8864 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8868 06 00
 120+ 886A
 121+ 886A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 886E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8872 02 00
 123+ 8874
 124+ 8874 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8878 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 887C 04 00
 126+ 887E
 127+ 887E 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8882 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8886 08 00
 129+ 8888
 130+ 8888 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 888C 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8890 02 00
 132+ 8892
 133+ 8892 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8896 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 889A 06 00
 135+ 889C
 136+ 889C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 88A0 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 88A4 06 00
 138+ 88A6
 139+ 88A6              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 88A6
 141+ 88A6 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 88AA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 88AE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 88B2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88B6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88BA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88BE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88C2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88C6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88CA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88CE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88D2 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88D6
 154+ 88D6 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88DA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88DE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88E2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88E6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88EA 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88EE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88F2 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88F6 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88FA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88FE 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8902 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8906 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 890A
 168+ 890A 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 890E 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8912 06 00
 170+ 8914
 171+ 8914 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8918 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 891C 02 00
 173+ 891E
 174+ 891E 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8922 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8926 04 00
 176+ 8928
 177+ 8928 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 892C 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8930 08 00
 179+ 8932
 180+ 8932 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8936 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 893A 02 00
 182+ 893C
 183+ 893C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8940 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8944 06 00
 185+ 8946
 186+ 8946 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 894A 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 894E 06 00
 188+ 8950
 189+ 8950 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8954 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8958 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 895C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8960 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8964 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8968 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 896C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8970 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8974 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8978 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 897C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8980
 202+ 8980
 203+ 8980
 204+ 8980
 205+ 8980
 206+ 8980
 207+ 8980
 208+ 8980
 209+ 8980
 210+ 8980
# file closed: Patrones_de_mov.asm
 133  8980              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8980              ; 19/1/24
   2+ 8980
   3+ 8980              Indice_de_niveles
   4+ 8980
   5+ 8980 88 89        	defw Nivel_1
   6+ 8982 93 89        	defw Nivel_2
   7+ 8984
   8+ 8984              ;	...
   9+ 8984              ;	...
  10+ 8984              ;	+ Niveles ...
  11+ 8984
  12+ 8984 00 00        	defw 0
  13+ 8986 00 00        	defw 0
  14+ 8988
  15+ 8988 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8989 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 898D 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8991 01 01
  18+ 8993
  19+ 8993 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8994 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8998 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 899C 01 02
  22+ 899E 02 01 01 01  	db 2,1,1,1,1,2
  22+ 89A2 01 02
  23+ 89A4
# file closed: Niveles.asm
 134  89A4
 135  89A4              ; ******************************************************************************************************************************************************************************************
 136  89A4              ; Constantes.
 137  89A4              ; ******************************************************************************************************************************************************************************************
 138  89A4              ;
 139  89A4              ; 09/03/24
 140  89A4
 141  89A4              ;
 142  89A4              ; Constantes.
 143  89A4              ;
 144  89A4
 145  89A4              ROM_keyboard equ $0038 									; Rutina de ROM. Actualiza FRAMES y escanea el teclado.
 146  89A4              FRAMES equ $5c78										; Variable de 16 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
 147  89A4
 148  89A4              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 149  89A4
 150  89A4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 151  89A4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 152  89A4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 153  89A4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 154  89A4
 155  89A4              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb20 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 156  89A4              Almacen_de_movimientos_masticados_Amadeus equ $e000		; Movimientos masticados de Amadeus.
 157  89A4
 158  89A4              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 159  89A4
 160  89A4              ;                                                       ; 35 bytes por entidad.
 161  89A4              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 162  89A4              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 163  89A4              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 164  89A4              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 165  89A4
 166  89A4              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 167  89A4
 168  89A4
 169  89A4              ; ******************************************************************************************************************************************************************************************
 170  89A4              ; Variables.
 171  89A4              ; ******************************************************************************************************************************************************************************************
 172  89A4
 173  89A4              ;
 174  89A4              ; 12/05/24
 175  89A4              ;
 176  89A4              ; Variables de DRAW. (Motor principal).	44 Bytes.
 177  89A4              ;
 178  89A4
 179  89A4              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 180  89A4
 181  89A4 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 182  89A5              ;															- Patrón de movimiento.
 183  89A5              ;															- Aspecto
 184  89A5 00           Filas db 0												; Filas. [DRAW]
 185  89A6 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 186  89A7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 187  89A9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 188  89AB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 189  89AC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 190  89AD
 191  89AD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 192  89AD
 193  89AD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 194  89AE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 195  89AE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 196  89AE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 197  89AF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 198  89AF
 199  89AF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 200  89AF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 201  89AF              ; Ejemplos.
 202  89AF
 203  89AF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 204  89AF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 205  89AF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 206  89AF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 207  89AF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 208  89AF
 209  89AF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 210  89AF
 211  89AF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 212  89AF              ;
 213  89AF              ;	COLORES: 0 ..... NEGRO
 214  89AF              ;    		 1 ..... AZUL
 215  89AF              ; 			 2 ..... ROJO
 216  89AF              ;			 3 ..... MAGENTA
 217  89AF              ; 			 4 ..... VERDE
 218  89AF              ; 			 5 ..... CIAN
 219  89AF              ;			 6 ..... AMARILLO
 220  89AF              ; 			 7 ..... BLANCO
 221  89AF
 222  89AF 00 00        Indice_Sprite_der defw 0
 223  89B1 00 00        Indice_Sprite_izq defw 0
 224  89B3 00 00        Puntero_DESPLZ_der defw 0
 225  89B5 00 00        Puntero_DESPLZ_izq defw 0
 226  89B7
 227  89B7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 228  89B9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 229  89BA
 230  89BA              ; Variables de objeto. (Características).
 231  89BA
 232  89BA 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 233  89BB              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 234  89BB              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 235  89BB              ; Variables_de_borrado ds 6
 236  89BB
 237  89BB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 238  89BD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 239  89BD
 240  89BD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 241  89BF
 242  89BF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 243  89BF              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 244  89BF
 245  89BF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 246  89C1              ;														; _palabras que componen el "movimiento_masticado".
 247  89C1
 248  89C1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 249  89C1
 250  89C1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 251  89C2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 252  89C2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 253  89C2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 254  89C2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 255  89C2              ;
 256  89C2              ; 														DESCRIPCIÖN:
 257  89C2              ;
 258  89C2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 259  89C2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 260  89C2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 261  89C2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 262  89C2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 263  89C2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 264  89C2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 265  89C2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 266  89C2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 267  89C2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 268  89C2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 269  89C2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 270  89C2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 271  89C2              ;
 272  89C2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 273  89C2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 274  89C2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 275  89C2
 276  89C2              ; Variables de funcionamiento. [DRAW].
 277  89C2
 278  89C2 00           Columnas db 0
 279  89C3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 280  89C5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 281  89C5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 282  89C6
 283  89C6              ; variables de control general.
 284  89C6
 285  89C6 00           Ctrl_2 db 0
 286  89C7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 287  89C7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 288  89C7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 289  89C7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 290  89C7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 291  89C7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 292  89C7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 293  89C7              ;
 294  89C7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 295  89C7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 296  89C7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 297  89C7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 298  89C7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 299  89C7              ;														BIT 4, ???
 300  89C7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 301  89C7
 302  89C7 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 303  89C8              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 304  89C8              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 305  89C8              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 306  89C8              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 307  89C8
 308  89C8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 309  89C9
 310  89C9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 311  89C9
 312  89C9              ;					         		---------;      ;---------
 313  89C9
 314  89C9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 315  89C9
 316  89C9              Perfiles_de_velocidad
 317  89C9
 318  89C9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 319  89CA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 320  89CB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 321  89CC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 322  89CD
 323  89CD              ; Contadores de 16 bits.
 324  89CD
 325  89CD 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 326  89CF 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 327  89D1 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 328  89D3 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 329  89D5
 330  89D5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 331  89D5
 332  89D5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 333  89D7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 334  89D9 00 00        Puntero_indice_mov_bucle defw 0							;
 335  89DB              ;
 336  89DB              ;
 337  89DB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 338  89DC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 339  89DC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 340  89DC 00           Incrementa_puntero_backup db 0
 341  89DD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 342  89DE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 343  89DE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 344  89DF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 345  89E0 00           Cola_de_desplazamiento db 0								; Este byte indica:
 346  89E1              ;
 347  89E1              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 348  89E1              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 349  89E1              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 350  89E1              ;
 351  89E1              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 352  89E1              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 353  89E1              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 354  89E1              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 355  89E1              ;
 356  89E1              ;														;	"$ff" ..... Bucle infinito de repetición.
 357  89E1              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 358  89E1              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 359  89E1              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 360  89E1
 361  89E1 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 362  89E2
 363  89E2              ;														DESCRIPCIÓN:
 364  89E2              ;
 365  89E2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 366  89E2              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 367  89E2              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 368  89E2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 369  89E2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 370  89E2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 371  89E2
 372  89E2              ;														BIT 3, Recarga de nueva oleada.
 373  89E2              ;														BIT 4, Recarga de nueva oleada.
 374  89E2              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 375  89E2              ;														BIT 6, **** Frame completo.
 376  89E2              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 377  89E2
 378  89E2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 379  89E4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 380  89E4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 381  89E4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 382  89E4
 383  89E4              ; Gestión de ENTIDADES y CAJAS.
 384  89E4
 385  89E4 00 00        Puntero_store_caja defw 0
 386  89E6 00 00        Puntero_restore_caja defw 0
 387  89E8 00 00        Indice_restore_caja defw 0
 388  89EA 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 389  89EB 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 390  89EC 00           Entidades_en_curso db 0									; ..... ..... .....
 391  89ED 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 392  89EE              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 393  89EE              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 394  89EE              ;														; _ (Numero_de_malotes)="0".
 395  89EE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 396  89F0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 397  89F2              ;														; _ puntero (Indice_entidades).
 398  89F2
 399  89F2              ;---------------------------------------------------------------------------------------------------------------
 400  89F2              ;
 401  89F2              ;	11/01/24
 402  89F2              ;
 403  89F2              ;	Álbumes.
 404  89F2
 405  89F2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 406  89F4              ;														; _variable para almacenar lo posición del puntero_
 407  89F4              ; 														; _de pila, SP.
 408  89F4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 409  89F6              ;														; La utiliza la rutina [Extrae_foto_registros].
 410  89F6
 411  89F6              ; Impresión. ----------------------------------------------------------------------------------------------------
 412  89F6
 413  89F6 00 00        Album_de_pintado defw 0
 414  89F8 00 00        Album_de_borrado defw 0
 415  89FA 00 00        Techo_Scanlines_album defw 0
 416  89FC 00 00        Techo_Scanlines_album_2 defw 0
 417  89FE 00           Switch db 0
 418  89FF 00 00        Techo defw 0
 419  8A01 00 00        Scanlines_album_SP defw 0
 420  8A03 73 86        India_SP defw Tabla_de_pintado
 421  8A05 76 86        India_2_SP defw Tabla_de_pintado+3
 422  8A07
 423  8A07 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 424  8A08              ;
 425  8A08              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 426  8A08              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 427  8A08              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 428  8A08              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 429  8A08              ;																Habilita el borrado/pintado de sprites.
 430  8A08              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 431  8A08              ;																_ a la baja.
 432  8A08              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 433  8A08
 434  8A08
 435  8A08
 436  8A08 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 437  8A09              ;
 438  8A09              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 439  8A09              ;
 440  8A09              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 441  8A09              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 442  8A09              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 443  8A09              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 444  8A09              ;
 445  8A09              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 446  8A09              ;															_ masticados ya generados.
 447  8A09              ;
 448  8A09              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 449  8A09              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 450  8A09              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 451  8A09              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 452  8A09
 453  8A09
 454  8A09              ; Gestión de Disparos.
 455  8A09
 456  8A09              ;;Numero_de_disparotes db 0
 457  8A09              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 458  8A09              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 459  8A09              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 460  8A09              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 461  8A09              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 462  8A09              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 463  8A09              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 464  8A09              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 465  8A09              ;														; _produzca colisión.
 466  8A09              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 467  8A09              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 468  8A09              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 469  8A09              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 470  8A09 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8A0C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8A0C              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 473  8A0C
 474  8A0C              ;---------------------------------------------------------------------------------------------------------------
 475  8A0C
 476  8A0C              ; Relojes y temporizaciones.
 477  8A0C
 478  8A0C              ;Clock_explosion db 4
 479  8A0C
 480  8A0C 6C 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 481  8A0E
 482  8A0E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 483  8A10 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 484  8A11              ;														; Repite la oleada de entidades.
 485  8A11              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 486  8A11              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 487  8A11              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 488  8A11
 489  8A11              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 490  8A11              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 491  8A11              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 492  8A11
 493  8A11              ;---------------------------------------------------------------------------------------------------------------
 494  8A11
 495  8A11              ; Gestión de NIVELES.
 496  8A11
 497  8A11 00           Nivel db 0												; Nivel actual del juego.
 498  8A12 00 00        Puntero_indice_NIVELES defw 0
 499  8A14 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8A16              ; 														; _ que definen el NIVEL.
 501  8A16              ; Y todo comienza aquí .....
 502  8A16              ;
 503  8A16              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8A16              ;
 505  8A16              ;	5/1/24
 506  8A16
 507  8A16              START
 508  8A16
 509  8A16 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8A19 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 511  8A1B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8A1D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8A1F F3           	DI
 514  8A20
 515  8A20              ;	ld a,%00000111
 516  8A20              ;	call Cls
 517  8A20 CD 92 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8A23
 519  8A23              ; INICIALIZACIÓN.
 520  8A23
 521  8A23 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8A25 CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8A28 CD 52 8B     	call Extrae_numero_aleatorio_y_avanza
 524  8A2B
 525  8A2B 6F           	ld l,a
 526  8A2C 26 00        	ld h,0
 527  8A2E 22 0E 8A     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8A31
 529  8A31              ;	Inicializa 1er Nivel.
 530  8A31
 531  8A31 21 80 89     	ld hl,Indice_de_niveles
 532  8A34 22 12 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 533  8A37 CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 534  8A3A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 535  8A3A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 536  8A3A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 537  8A3A              	;	Provisional, (para desarrollo).
 538  8A3A              	;-
 539  8A3A              ;	ld hl,Numero_parcial_de_entidades
 540  8A3A              ;	ld b,(hl)
 541  8A3A              ;	inc b
 542  8A3A              ;	dec b
 543  8A3A              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 544  8A3A
 545  8A3A CD F6 8C     	call Inicia_albumes_de_lineas
 546  8A3D
 547  8A3D CD F4 AA     4 call Inicia_Entidades
 548  8A40
 549  8A40              ;! 14/05/24 !!!!! Inicia Amadeus !!!!! ---------------------------------------------------------------------------------------------------------------------
 550  8A40
 551  8A40              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 552  8A40
 553  8A40 21 D7 87     	ld hl,Definicion_Amadeus
 554  8A43 CD 2E AC     	call Definicion_de_entidad_a_bandeja_DRAW			; Vuelca los datos de la definición de Amadeus en DRAW.
 555  8A46
 556  8A46
 557  8A46              Construye_movimientos_masticados_Amadeus
 558  8A46
 559  8A46 2A BD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 560  8A49 E5           	push hl
 561  8A4A CD 95 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 562  8A4D              ;															; _ el (Contador_de_mov_masticados).
 563  8A4D CD 22 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 564  8A50              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 565  8A50              ;	call Recompone_posicion_inicio
 566  8A50
 567  8A50 CD 3C 92     1 call Draw
 568  8A53 CD 7A 8C     	call Guarda_movimiento_masticado
 569  8A56
 570  8A56              ;	call Movimiento
 571  8A56
 572  8A56              ;	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 573  8A56              ;	bit 1,a 												; _ que corresponde a esta entidad.
 574  8A56              ;	jr z,1B
 575  8A56
 576  8A56              ;	Hemos completado el almacén de movimientos masticados de la entidad.
 577  8A56              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
 578  8A56
 579  8A56 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
 580  8A57 22 BD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 581  8A5A
 582  8A5A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 583  8A5A
 584  8A5A              ;	call Situa_en_contador_general_de_mov_masticados
 585  8A5A
 586  8A5A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
 587  8A5A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
 588  8A5A
 589  8A5A              ;	ld bc,(Contador_de_mov_masticados)
 590  8A5A
 591  8A5A              ;	ld (hl),c
 592  8A5A              ;	inc hl
 593  8A5A              ;	ld (hl),b
 594  8A5A
 595  8A5A              ;	ret
 596  8A5A
 597  8A5A CD A2 8C     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 598  8A5D
 599  8A5D DD E5        	push ix
 600  8A5F E1           	pop hl 														; (Puntero_de_impresion) en HL.
 601  8A60
 602  8A60 D5           	push de
 603  8A61 CD B7 AC     	call Genera_coordenadas
 604  8A64 CD B2 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 605  8A67 D1           	pop de
 606  8A68
 607  8A68 CD 0A AD     	call Genera_datos_de_impresion
 608  8A6B
 609  8A6B              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 610  8A6B              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 611  8A6B              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 612  8A6B              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 613  8A6B
 614  8A6B
 615  8A6B
 616  8A6B              ;	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 617  8A6B
 618  8A6B CD 63 AB     	call Limpiamos_bandeja_DRAW
 619  8A6E
 620  8A6E              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 621  8A6E
 622  8A6E CD 06 8D     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 623  8A71              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 624  8A71              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 625  8A71              ; (Esto se dá cuando se inicia una nueva oleada).
 626  8A71
 627  8A71              ;	ld a,(Ctrl_1)
 628  8A71              ;	bit 3,a
 629  8A71              ;	jr nz,5F											 ; Loop
 630  8A71
 631  8A71              ;	ld de,Amadeus_db
 632  8A71              ;	call Store_Amadeus
 633  8A71
 634  8A71              ; 	INICIA DISPAROS !!!!!
 635  8A71
 636  8A71              ;	call Inicia_Puntero_Disparo_Entidades
 637  8A71              ;	call Inicia_Puntero_Disparo_Amadeus
 638  8A71
 639  8A71              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 640  8A71
 641  8A71              ;5 call Inicia_punteros_de_cajas
 642  8A71              ;	call Restore_entidad
 643  8A71
 644  8A71              ;	ld a,(Ctrl_1)
 645  8A71              ;	bit 3,a
 646  8A71              ;	jr z,6F
 647  8A71
 648  8A71              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 649  8A71
 650  8A71              ;	ld hl,Ctrl_1
 651  8A71              ;	res 3,(hl)
 652  8A71              ;	jr Main
 653  8A71
 654  8A71              ; Damos por concluida la construcción del FRAME.
 655  8A71              ;
 656  8A71
 657  8A71 2A 01 8A     6 ld hl,(Scanlines_album_SP)
 658  8A74 22 FA 89     	ld (Techo_Scanlines_album),hl
 659  8A77
 660  8A77 2A F8 89     	ld hl,(Album_de_borrado)
 661  8A7A 22 01 8A     	ld (Scanlines_album_SP),hl
 662  8A7D
 663  8A7D 21 73 86     	ld hl,Tabla_de_pintado
 664  8A80 22 03 8A     	ld (India_SP),hl
 665  8A83
 666  8A83 21 07 8A     	ld hl,Ctrl_3
 667  8A86 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 668  8A88 CB D6        	set 2,(hl)
 669  8A8A
 670  8A8A FB           	ei
 671  8A8B 76           	halt
 672  8A8C
 673  8A8C              ; ------------------------------------
 674  8A8C
 675  8A8C              Main
 676  8A8C              ;
 677  8A8C              ; 13/05/24
 678  8A8C
 679  8A8C              ; Aparece nueva entidad ???
 680  8A8C
 681  8A8C              ; 														; (Clock_next_entity) define cuando aparecen las entidades en pantalla.
 682  8A8C              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 683  8A8C              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializará _;
 684  8A8C              ;														; _un 2º bloque.
 685  8A8C
 686  8A8C 2A 0E 8A     	ld hl,(Clock_next_entity)
 687  8A8F ED 4B 78 5C  	ld bc,(FRAMES)
 688  8A93 A7           	and a
 689  8A94 ED 42        	sbc hl,bc
 690  8A96 20 16        	jr nz,13F
 691  8A98
 692  8A98              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 693  8A98              ; _ (Clock_next_entity) para la siguiente entidad.
 694  8A98
 695  8A98 3A EB 89     21 ld a,(Numero_parcial_de_entidades)
 696  8A9B 47           	ld b,a
 697  8A9C 3A EC 89     	ld a,(Entidades_en_curso)
 698  8A9F B8           	cp b
 699  8AA0 28 0C        	jr z,13F
 700  8AA2 30 0A        	jr nc,13F
 701  8AA4
 702  8AA4 3C           	inc a
 703  8AA5 32 EC 89     	ld (Entidades_en_curso),a
 704  8AA8
 705  8AA8              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 706  8AA8
 707  8AA8 CD 52 8B     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 708  8AAB CD 6E 8B     	call Define_Clock_next_entity
 709  8AAE
 710  8AAE              ; -------------------------------------------------------------------------------------------------------------
 711  8AAE
 712  8AAE              ; Habilita disparos.
 713  8AAE
 714  8AAE              13
 715  8AAE
 716  8AAE              ;	ld hl,Disparo_Amadeus
 717  8AAE              ;	ld de,CLOCK_repone_disparo_Amadeus
 718  8AAE              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 719  8AAE
 720  8AAE              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 721  8AAE              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 722  8AAE              ;	call Habilita_disparos
 723  8AAE
 724  8AAE              ; COLISIONES.
 725  8AAE
 726  8AAE              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 727  8AAE
 728  8AAE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 729  8AAE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 730  8AAE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 731  8AAE
 732  8AAE              ;	xor a
 733  8AAE              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 734  8AAE
 735  8AAE              ;	call Inicia_punteros_de_cajas
 736  8AAE              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 737  8AAE              ; 														; _ en DRAW.
 738  8AAE
 739  8AAE              ;	ld a,(Filas)
 740  8AAE              ;	and a
 741  8AAE              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 742  8AAE              ;	call Incrementa_punteros_de_cajas
 743  8AAE              ;	jr 12B
 744  8AAE
 745  8AAE              ; ---------------------------------------------------------------------------------------
 746  8AAE
 747  8AAE 3A EB 89     10 ld a,(Numero_parcial_de_entidades)
 748  8AB1 47               ld b,a
 749  8AB2 A7           	and a
 750  8AB3 20 00        	jr nz,11F
 751  8AB5
 752  8AB5              ;	ld hl,Ctrl_1;
 753  8AB5              ;	bit 4,(hl)
 754  8AB5              ;	jp nz,16F
 755  8AB5
 756  8AB5              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 757  8AB5
 758  8AB5              ;	ld hl,Ctrl_1
 759  8AB5              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 760  8AB5
 761  8AB5              ;	ld a,(Contador_de_frames)
 762  8AB5              ;	inc a
 763  8AB5              ;	ld (Activa_recarga_cajas),a
 764  8AB5
 765  8AB5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 766  8AB5
 767  8AB5 3A EC 89     11 ld a,(Entidades_en_curso)
 768  8AB8 A7           	and a
 769  8AB9 28 45        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 770  8ABB 47           	ld b,a												; No hay entidades que gestionar.
 771  8ABC
 772  8ABC              ; ( Código que ejecutamos con cada entidad: ).
 773  8ABC
 774  8ABC              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 775  8ABC              ;
 776  8ABC              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 777  8ABC
 778  8ABC 21 73 86     	ld hl,Tabla_de_pintado
 779  8ABF 22 03 8A     	ld (India_SP),hl
 780  8AC2
 781  8AC2 21 07 8A     	ld hl,Ctrl_3
 782  8AC5 CB D6        	set 2,(hl)
 783  8AC7 CD 37 8B     	call Change
 784  8ACA
 785  8ACA C5           15 push bc 												; Nº de entidades en curso.
 786  8ACB
 787  8ACB CD 57 8D     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 788  8ACE CD B2 8B     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 789  8AD1
 790  8AD1              ; Existe "Entidad_guía" ???.
 791  8AD1              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 792  8AD1
 793  8AD1              ;	ld a,(Ctrl_3)
 794  8AD1              ;	bit 1,a
 795  8AD1              ;	jr nz,22F
 796  8AD1
 797  8AD1              ; Almacén de "Movimientos_masticados" lleno ???
 798  8AD1              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 799  8AD1              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 800  8AD1
 801  8AD1              ;;	ld a,(Ctrl_3)
 802  8AD1              ;;	bit 3,a
 803  8AD1              ;;	jr nz,22F
 804  8AD1
 805  8AD1              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 806  8AD1
 807  8AD1              ;	ld hl,Ctrl_2
 808  8AD1              ;	set 5,(hl)
 809  8AD1              ;	ld hl,Ctrl_3
 810  8AD1              ;	set 1,(hl)
 811  8AD1
 812  8AD1              ; Impacto ???
 813  8AD1
 814  8AD1              ;22 ld a,(Impacto)
 815  8AD1              ;	and a
 816  8AD1              ;	jr z,8F
 817  8AD1
 818  8AD1              ; Hay Impacto en esta entidad.
 819  8AD1
 820  8AD1              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 821  8AD1              ;	dec (hl)
 822  8AD1              ;	jp nz,17F
 823  8AD1
 824  8AD1              ;! Velocidad de la animación de la explosión.
 825  8AD1
 826  8AD1              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 827  8AD1              ;														; _,(velocidad de la explosión).
 828  8AD1              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 829  8AD1
 830  8AD1              ;	call Repone_datos_de_borrado
 831  8AD1              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 832  8AD1
 833  8AD1              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 834  8AD1
 835  8AD1              ;	ld a,(Ctrl_2)
 836  8AD1              ;	bit 1,a
 837  8AD1              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 838  8AD1
 839  8AD1              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 840  8AD1
 841  8AD1              ;	ld a,(CTRL_DESPLZ)
 842  8AD1              ;	and a
 843  8AD1              ;	jr nz,18F
 844  8AD1
 845  8AD1              ;	ld hl,Indice_Explosion_2x2-2
 846  8AD1              ;	ld (Puntero_DESPLZ_der),hl
 847  8AD1              ;	jr 19F
 848  8AD1
 849  8AD1              ;18 ld hl,Indice_Explosion_2x3-2
 850  8AD1              ;	ld (Puntero_DESPLZ_der),hl
 851  8AD1
 852  8AD1              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 853  8AD1              ;	set 1,(hl)
 854  8AD1              ;	jr 7F
 855  8AD1
 856  8AD1              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 857  8AD1              ; _con las coordenadas de la entidad almacenada en DRAW.
 858  8AD1
 859  8AD1              ;8 ld a,(Ctrl_1)
 860  8AD1              ;	bit 2,a
 861  8AD1              ;	jr z,7F
 862  8AD1
 863  8AD1              ;	ld hl,(Coordenadas_disparo_certero)
 864  8AD1              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 865  8AD1              ;														; E contiene la coordenada_X del disparo.
 866  8AD1              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 867  8AD1              ;														; H FILA, (Coordenada_y de la entidad).
 868  8AD1              ;	and a
 869  8AD1              ;	sbc hl,de
 870  8AD1
 871  8AD1              ;	call Determina_resultado_comparativa
 872  8AD1
 873  8AD1              ;	ld a,b
 874  8AD1              ;	and a
 875  8AD1              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 876  8AD1
 877  8AD1              ; ----- ----- -----
 878  8AD1
 879  8AD1              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 880  8AD1              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 881  8AD1
 882  8AD1              ;	ld hl,Ctrl_1
 883  8AD1              ;	res 2,(hl)
 884  8AD1
 885  8AD1              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 886  8AD1
 887  8AD1              ;	ld a,(Ctrl_0)
 888  8AD1              ;	bit 4,a
 889  8AD1              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 890  8AD1
 891  8AD1              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 892  8AD1              ; [[[
 893  8AD1              ;	call Detecta_disparo_entidad
 894  8AD1              ; ]]]
 895  8AD1
 896  8AD1              ; -------------------------------------------
 897  8AD1
 898  8AD1 CD 17 8B     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 899  8AD4 CD A2 8C     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 900  8AD7 CD 0A AD     	call Genera_datos_de_impresion
 901  8ADA              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 902  8ADA              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 903  8ADA              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 904  8ADA              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 905  8ADA
 906  8ADA CD 6E AB     	call Decrementa_Contador_de_mov_masticados
 907  8ADD
 908  8ADD              ; -------------------------------------------
 909  8ADD
 910  8ADD              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 911  8ADD
 912  8ADD 2A BB 89     	ld hl,(Puntero_de_impresion)
 913  8AE0 CD B7 AC     	call Genera_coordenadas
 914  8AE3
 915  8AE3              ;	ld hl,Ctrl_0
 916  8AE3              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 917  8AE3
 918  8AE3 CD 59 AB     17 call Store_Restore_cajas
 919  8AE6
 920  8AE6 C1           	pop bc
 921  8AE7
 922  8AE7 10 E1        	djnz 15B
 923  8AE9
 924  8AE9              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 925  8AE9
 926  8AE9 CD C6 8B     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 927  8AEC CD DD 8B     	call Ordena_tabla_de_impresion
 928  8AEF CD 06 8D     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 929  8AF2
 930  8AF2              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 931  8AF2              ; Hemos gestionado todas las unidades.
 932  8AF2              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 933  8AF2
 934  8AF2              ;	ld hl,Ctrl_1
 935  8AF2              ;	res 2,(hl)
 936  8AF2
 937  8AF2 CD 83 8B     	call Borra_diferencia
 938  8AF5
 939  8AF5 3A 07 8A     	ld a,(Ctrl_3)
 940  8AF8 CB 5F        	bit 3,a
 941  8AFA 20 04        	jr nz,16F
 942  8AFC
 943  8AFC EB           	ex de,hl
 944  8AFD 71           	ld (hl),c
 945  8AFE 2C           	inc l
 946  8AFF 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 947  8B00
 948  8B00              ; Aquí situaremos la rutina que ordena el índice Masa.
 949  8B00
 950  8B00 2A F8 89     16 ld hl,(Album_de_borrado)
 951  8B03 22 01 8A     	ld (Scanlines_album_SP),hl
 952  8B06
 953  8B06 21 07 8A     	ld hl,Ctrl_3
 954  8B09 CB C6        	set 0,(hl) 											; Indica Frame completo.
 955  8B0B
 956  8B0B CB 9E        	res 3,(hl)
 957  8B0D CB A6        	res 4,(hl)
 958  8B0F
 959  8B0F AF           	xor a
 960  8B10 D3 FE        	out ($fe),a
 961  8B12 76           	halt
 962  8B13
 963  8B13              ; ----------------------------------------
 964  8B13
 965  8B13              ;	ld a,(Ctrl_1) 										; Existe Loop?
 966  8B13              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 967  8B13 CA 8C 8A     	jp z,Main
 968  8B16
 969  8B16              ; RECARGA DE NUEVA OLEADA.
 970  8B16
 971  8B16              ;	ld a,(Contador_de_frames)
 972  8B16              ;	ld b,a
 973  8B16              ;	ld a,(Activa_recarga_cajas)
 974  8B16              ;	cp b
 975  8B16              ;	jr z,20F
 976  8B16
 977  8B16              ;	ld hl,Ctrl_1
 978  8B16              ;	set 4,(hl)
 979  8B16              ;	jp Main
 980  8B16
 981  8B16              ;20 ld hl,Ctrl_1
 982  8B16              ;	res 4,(hl)
 983  8B16
 984  8B16              ;	ld a,(Contador_de_frames)
 985  8B16
 986  8B16              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 987  8B16              ;! _ IMPREDECIBLE !!!!
 988  8B16
 989  8B16              ;	add 10
 990  8B16              ;	ld (Clock_next_entity),a
 991  8B16
 992  8B16              ;	jp 4B
 993  8B16
 994  8B16 C9           	ret
 995  8B17
 996  8B17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 997  8B17              ;
 998  8B17              ;	16/11/23
 999  8B17
1000  8B17              ;;Gestiona_Amadeus
1001  8B17
1002  8B17              ;! Activa/desactiva impacto con Amadeus.
1003  8B17
1004  8B17              ;	ld a,(Impacto)
1005  8B17              ;	and a
1006  8B17              ;	jr nz,2F
1007  8B17
1008  8B17              ;;	call Mov_Amadeus
1009  8B17
1010  8B17              ;;2 ld a,(Ctrl_0)
1011  8B17              ;;	bit 4,a
1012  8B17              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
1013  8B17
1014  8B17              ;;	call Guarda_foto_entidad_a_pintar
1015  8B17              ;;	call Guarda_datos_de_borrado_Amadeus
1016  8B17
1017  8B17              ;;1 ld hl,Ctrl_0
1018  8B17              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1019  8B17
1020  8B17              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1021  8B17
1022  8B17              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1023  8B17
1024  8B17              ;	call Calcula_numero_de_disparotes
1025  8B17
1026  8B17              ;;	ret
1027  8B17
1028  8B17              ; -----------------------------
1029  8B17              ;
1030  8B17              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1031  8B17              ;
1032  8B17              ;	INPUTS: B a de estar a "0".
1033  8B17
1034  8B17              ;Prepara_Borra_sprites
1035  8B17
1036  8B17              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1037  8B17              ;	ld a,l
1038  8B17              ;	ret z
1039  8B17
1040  8B17              ;	srl a
1041  8B17
1042  8B17              ;2 sub 16
1043  8B17              ;	jr z,1F
1044  8B17              ;	inc b
1045  8B17              ;	jr 2B
1046  8B17
1047  8B17              ;1 inc b
1048  8B17
1049  8B17              ;	exx
1050  8B17              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1051  8B17              ;	exx
1052  8B17
1053  8B17              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1054  8B17              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1055  8B17
1056  8B17              ;	ret
1057  8B17
1058  8B17              ; --------------------------------------------------------------------------------------------------------------
1059  8B17              ;
1060  8B17              ;	15/12/23
1061  8B17
1062  8B17              ;Mov_obj
1063  8B17
1064  8B17              ;	ld a,(Ctrl_2)
1065  8B17              ;	bit 1,a
1066  8B17              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1067  8B17
1068  8B17              ; Explosión:
1069  8B17
1070  8B17              ;	ld a,(Frames_explosion)
1071  8B17              ;	and a
1072  8B17              ;	jr nz,4F
1073  8B17
1074  8B17              ;!  Una alimaña menos!!!!!!!!!1
1075  8B17
1076  8B17              ; Se trataba de una Entidad_guía ???
1077  8B17
1078  8B17              ;	ld a,(Ctrl_2)
1079  8B17              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1080  8B17              ;	jr z,5F
1081  8B17
1082  8B17              ;	ld hl,Ctrl_3
1083  8B17              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1084  8B17
1085  8B17              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1086  8B17              ;!! _generado puede ser distinto, (aletoriedad).
1087  8B17
1088  8B17              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1089  8B17              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1090  8B17              ;	dec (hl)
1091  8B17              ;	ld hl,Entidades_en_curso
1092  8B17              ;	dec (hl)
1093  8B17              ;	ld hl,Numero_de_entidades
1094  8B17              ;	dec (hl)
1095  8B17              ;	jr 3F
1096  8B17
1097  8B17              ; -----
1098  8B17
1099  8B17              ;	`Movemos´ la explosión.
1100  8B17
1101  8B17              ;4 ld hl,(Puntero_DESPLZ_der)
1102  8B17              ;	inc hl
1103  8B17              ;	inc hl
1104  8B17              ;	call Extrae_address
1105  8B17              ;;	ld (Puntero_objeto),hl
1106  8B17
1107  8B17              ;;	ld hl,Frames_explosion
1108  8B17              ;;	dec (hl)
1109  8B17
1110  8B17              ;;	ld hl,Ctrl_0
1111  8B17              ;;	set 4,(hl);;
1112  8B17
1113  8B17              ;;	jr 3F
1114  8B17
1115  8B17              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1116  8B17
1117  8B17              ;2 xor a
1118  8B17              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1119  8B17
1120  8B17              ; Movemos Entidades malignas.
1121  8B17              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1122  8B17
1123  8B17              ;	ld a,(Ctrl_2)
1124  8B17              ;	bit 5,a
1125  8B17              ;	jr nz,8F
1126  8B17
1127  8B17              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1128  8B17              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1129  8B17              ;	jr 7F
1130  8B17
1131  8B17              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1132  8B17
1133  8B17              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1134  8B17              ;	bit 4,a
1135  8B17              ;	ret z
1136  8B17
1137  8B17              ; Ha habido desplazamiento de la entidad maligna.
1138  8B17              ; Ha llegado a zona de AMADEUS ???
1139  8B17
1140  8B17              ;7 ld a,(Coordenada_y)
1141  8B17              ;	cp $14
1142  8B17              ;	jr c,1F
1143  8B17
1144  8B17              ; ---------
1145  8B17
1146  8B17              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1147  8B17              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1148  8B17
1149  8B17              ;	di
1150  8B17              ;	call Genera_coordenadas_X
1151  8B17              ;	call Compara_coordenadas_X
1152  8B17              ;	ei
1153  8B17
1154  8B17              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1155  8B17
1156  8B17              ; ---------
1157  8B17
1158  8B17              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1159  8B17              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1160  8B17              ;	call Limpia_Variables_de_borrado
1161  8B17
1162  8B17              ;3 ret
1163  8B17
1164  8B17              ; --------------------------------------------------------------------------------------------------------------
1165  8B17              ;
1166  8B17              ;	29/1/23
1167  8B17
1168  8B17              ;Mov_Amadeus
1169  8B17
1170  8B17              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1171  8B17
1172  8B17              ;	call Mov_right
1173  8B17
1174  8B17              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1175  8B17              ;	bit 4,a
1176  8B17              ;	ret z
1177  8B17
1178  8B17              ; ---------
1179  8B17
1180  8B17              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1181  8B17              ;	call Repone_datos_de_borrado_Amadeus
1182  8B17              ;	call Limpia_Variables_de_borrado
1183  8B17
1184  8B17              ;	ret
1185  8B17
1186  8B17              ; --------------------------------------------------------------------------------------------------------------
1187  8B17              ;
1188  8B17              ;	12/05/24
1189  8B17
1190  8B17 3A C7 89     Ajusta_velocidad_entidad ld a,(Velocidad)
1191  8B1A CB 27        	sla a
1192  8B1C 32 C7 89     	ld (Velocidad),a
1193  8B1F E6 10        	and $10
1194  8B21 C8           	ret z
1195  8B22
1196  8B22              ; Restaura (Velocidad) a razón del nº de vueltas.
1197  8B22
1198  8B22 3A AE 89     	ld a,(Contador_de_vueltas)
1199  8B25 CB 2F        	sra a
1200  8B27 CB 2F        	sra a
1201  8B29 32 C7 89     	ld (Velocidad),a
1202  8B2C
1203  8B2C 2A BD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1204  8B2F 23           	inc hl
1205  8B30 23           	inc hl
1206  8B31 23           	inc hl
1207  8B32 23           	inc hl
1208  8B33 22 BD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1209  8B36
1210  8B36 C9           	ret
1211  8B37
1212  8B37              ; --------------------------------------------------------------------------------------------------------------
1213  8B37              ;
1214  8B37              ;	17/3/24
1215  8B37
1216  8B37              Change
1217  8B37
1218  8B37 3A FE 89     	ld a,(Switch)
1219  8B3A EE 01        	xor 1
1220  8B3C 32 FE 89     	ld (Switch),a
1221  8B3F
1222  8B3F 2A F6 89     	ld hl,(Album_de_pintado)
1223  8B42 ED 5B F8 89  	ld de,(Album_de_borrado)
1224  8B46 EB           	ex de,hl
1225  8B47 22 F6 89     	ld (Album_de_pintado),hl
1226  8B4A 22 01 8A     	ld (Scanlines_album_SP),hl
1227  8B4D
1228  8B4D ED 53 F8 89  	ld (Album_de_borrado),de
1229  8B51
1230  8B51 C9           	ret
1231  8B52
1232  8B52              ; ------------------------------------
1233  8B52              ;
1234  8B52              ; 1/05/24
1235  8B52
1236  8B52              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1237  8B52              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1238  8B52
1239  8B52              ;	DESTRUYE: HL,DE,A
1240  8B52              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1241  8B52
1242  8B52              ;	Variables implicadas: (RND_SP).
1243  8B52
1244  8B52              Extrae_numero_aleatorio_y_avanza
1245  8B52
1246  8B52 21 73 86     	ld hl,Tabla_de_pintado
1247  8B55 EB           	ex de,hl
1248  8B56 2A 0C 8A     	ld hl,(RND_SP)
1249  8B59 EB           	ex de,hl
1250  8B5A A7           	and a
1251  8B5B ED 52        	sbc hl,de
1252  8B5D
1253  8B5D 2A 0C 8A     	ld hl,(RND_SP)
1254  8B60 20 06        	jr nz,1F
1255  8B62
1256  8B62              ; Sitúa HL al principio de la tabla de nº aleatorios.
1257  8B62
1258  8B62 21 6C 86     	ld hl,Numeros_aleatorios
1259  8B65 22 0C 8A     	ld (RND_SP),HL
1260  8B68
1261  8B68              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1262  8B68
1263  8B68 7E           1 ld a,(hl)
1264  8B69 23           	inc hl
1265  8B6A 22 0C 8A     	ld (RND_SP),hl
1266  8B6D C9           	ret
1267  8B6E
1268  8B6E              ; ------------------------------------
1269  8B6E              ;
1270  8B6E              ; 1/05/24
1271  8B6E
1272  8B6E              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1273  8B6E              ; (1 a 4 segundos).
1274  8B6E              ; Actualizamos (Clock_next_entity) con A.
1275  8B6E
1276  8B6E              ;	DESTRUYE: A y B.
1277  8B6E              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1278  8B6E              ;			 Actualiza (Clock_next_entity) con A.
1279  8B6E
1280  8B6E              ;	Variables implicadas: (Clock_next_entity).
1281  8B6E
1282  8B6E              ; Notas:
1283  8B6E
1284  8B6E              ; 	$32 1 seg.
1285  8B6E              ; 	$64 2 seg.
1286  8B6E              ; 	$96 3 seg.
1287  8B6E              ; 	$c8 4 seg.
1288  8B6E              ; 	$fa 5 seg.
1289  8B6E
1290  8B6E              ; $ffff 1310,7 seg, 22 minutos.
1291  8B6E
1292  8B6E              ;	$0100  5 seg. aproximadamente.
1293  8B6E              ;	$0200 10 seg. aproximadamente.
1294  8B6E              ;	$0300 15 seg. aproximadamente.
1295  8B6E              ;	$0400 20 seg. aproximadamente.
1296  8B6E              ;	$0500 25 seg. aproximadamente.
1297  8B6E              ;	$0600 30 seg. aproximadamente.
1298  8B6E
1299  8B6E              Define_Clock_next_entity
1300  8B6E
1301  8B6E FE 34        	cp $34
1302  8B70 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1303  8B72
1304  8B72              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1305  8B72
1306  8B72 4F           3 ld c,a
1307  8B73 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1308  8B75 2A 78 5C     	ld hl,(FRAMES)
1309  8B78 A7           	and a
1310  8B79 ED 4A        	adc hl,bc
1311  8B7B 22 0E 8A     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1312  8B7E C9           	ret
1313  8B7F
1314  8B7F 3E 34        1 ld a,$34
1315  8B81 18 EF        	jr 3B
1316  8B83
1317  8B83              ; ------------------------------------
1318  8B83              ;
1319  8B83              ; 18/03/24
1320  8B83
1321  8B83              Borra_diferencia
1322  8B83
1323  8B83 ED 4B 01 8A  	ld bc,(Scanlines_album_SP)
1324  8B87
1325  8B87 3A FE 89     	ld a,(Switch)
1326  8B8A A7           	and a
1327  8B8B 28 08        	jr z,2F
1328  8B8D
1329  8B8D 2A FC 89     	ld hl,(Techo_Scanlines_album_2)
1330  8B90 11 FC 89     	ld de,Techo_Scanlines_album_2
1331  8B93 18 06        	jr 3F
1332  8B95
1333  8B95 2A FA 89     2 ld hl,(Techo_Scanlines_album)
1334  8B98 11 FA 89     	ld de,Techo_Scanlines_album
1335  8B9B
1336  8B9B              ; Diferencia.
1337  8B9B
1338  8B9B ED 42        3 sbc hl,bc
1339  8B9D
1340  8B9D C8           	ret z
1341  8B9E D8           	ret c
1342  8B9F
1343  8B9F              ; Nuevo techo, (más bajo que el anterior).
1344  8B9F              ; Fijamos nuevo techo y borramos bytes sobrantes.
1345  8B9F
1346  8B9F EB           	ex de,hl
1347  8BA0
1348  8BA0 71           	ld (hl),c
1349  8BA1 2C           	inc l
1350  8BA2 70           	ld (hl),b
1351  8BA3
1352  8BA3 AF           	xor a
1353  8BA4 43           	ld b,e
1354  8BA5
1355  8BA5 2A 01 8A     	ld hl,(Scanlines_album_SP)
1356  8BA8
1357  8BA8 77           1 ld (hl),a
1358  8BA9 2C           	inc l
1359  8BAA 10 FC        	djnz 1B
1360  8BAC
1361  8BAC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1362  8BAC
1363  8BAC 21 07 8A     	ld hl,Ctrl_3
1364  8BAF CB DE        	set 3,(hl)
1365  8BB1
1366  8BB1 C9           	ret
1367  8BB2
1368  8BB2              ; --------------------------------------------------------------------------------------------------------------
1369  8BB2              ;
1370  8BB2              ;	26/3/24
1371  8BB2
1372  8BB2              Recauda_informacion_de_entidad_en_curso
1373  8BB2
1374  8BB2              ; Almacena la Coordenada Y de la entidad en curso.
1375  8BB2
1376  8BB2              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1377  8BB2
1378  8BB2 3A AC 89     	ld a,(Coordenada_y)
1379  8BB5 2A 03 8A     	ld hl,(India_SP)
1380  8BB8 77           	ld (hl),a
1381  8BB9 2C           	inc l
1382  8BBA
1383  8BBA              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1384  8BBA
1385  8BBA ED 5B 01 8A  	ld de,(Scanlines_album_SP)
1386  8BBE
1387  8BBE 73           	ld (hl),e
1388  8BBF 2C           	inc l
1389  8BC0 72           	ld (hl),d
1390  8BC1 2C           	inc l
1391  8BC2
1392  8BC2 22 03 8A     	ld (India_SP),hl
1393  8BC5
1394  8BC5 C9           	ret
1395  8BC6
1396  8BC6              ; --------------------------------------------------------------------------------------------------------------
1397  8BC6              ;
1398  8BC6              ;	27/03/24
1399  8BC6              ;
1400  8BC6
1401  8BC6              Inicializa_India_y_limpia_Tabla_de_impresion
1402  8BC6
1403  8BC6 2A 03 8A     	ld hl,(India_SP)
1404  8BC9 01 8B 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1405  8BCC
1406  8BCC 79           	ld a,c
1407  8BCD 95           	sub l
1408  8BCE 28 06        	jr z,2F
1409  8BD0 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1410  8BD1              ;														; _ y pasamos a inicializar (India_SP).
1411  8BD1 AF           	xor a
1412  8BD2
1413  8BD2 77           1 ld (hl),a
1414  8BD3 2C           	inc l
1415  8BD4 10 FC        	djnz 1B												; Limpia Tabla.
1416  8BD6
1417  8BD6 21 73 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1418  8BD9 22 03 8A     	ld (India_SP),hl
1419  8BDC
1420  8BDC C9           	ret
1421  8BDD
1422  8BDD              ; --------------------------------------------------------------------------------------------------------------
1423  8BDD              ;
1424  8BDD              ;	31/3/24
1425  8BDD
1426  8BDD              Ordena_tabla_de_impresion
1427  8BDD
1428  8BDD              ; 5794 T/states.
1429  8BDD              ; 6278 T/states.
1430  8BDD              ; 5310 T/states.
1431  8BDD
1432  8BDD              ; Inicializamos punteros (India_SP) e (India_2_SP).
1433  8BDD              ; Inicializamos contador de comparaciones, [C].
1434  8BDD              ; Cargamos los registros A y B para efectuar comparación.
1435  8BDD
1436  8BDD FD 2E 00     	ld iyl,0
1437  8BE0
1438  8BE0 3A EC 89     	ld a,(Entidades_en_curso)
1439  8BE3 FE 04        	cp 4 	;	4
1440  8BE5 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1441  8BE6
1442  8BE6 3D           	dec a
1443  8BE7 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1444  8BE8 51           	ld d,c 										; Copia de respaldo.
1445  8BE9
1446  8BE9 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1447  8BEA
1448  8BEA 21 76 86     	ld hl,Tabla_de_pintado+3
1449  8BED 46           	ld b,(hl)
1450  8BEE 22 05 8A     	ld (India_2_SP),hl
1451  8BF1
1452  8BF1 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1453  8BF2 DC 1A 8C     	call c, Avanza_India_2_SP
1454  8BF5 CC 1A 8C     	call z, Avanza_India_2_SP
1455  8BF8
1456  8BF8 FD 2D        	dec iyl
1457  8BFA 28 18        	jr z,2F
1458  8BFC
1459  8BFC
1460  8BFC              ; --------------------------------------------------------------------------------------------------------------
1461  8BFC              ;
1462  8BFC              ;	7/4/24
1463  8BFC
1464  8BFC              Trueque
1465  8BFC
1466  8BFC              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1467  8BFC              ;  			A contiene en nº de fila de (India_SP).
1468  8BFC              ;			HL contiene (India_2_SP).
1469  8BFC
1470  8BFC D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1471  8BFD E5           	push hl										; Preservo (India_2_SP).
1472  8BFE
1473  8BFE ED 5B 03 8A  	ld de,(India_SP)
1474  8C02 EB           	ex de,hl
1475  8C03 70           	ld (hl),b
1476  8C04 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1477  8C05
1478  8C05 CD 46 8C     	call Intercambia_1_byte
1479  8C08 CD 46 8C     	call Intercambia_1_byte
1480  8C0B
1481  8C0B
1482  8C0B              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1483  8C0B              ; Recuperamos (India_2_SP) en HL.
1484  8C0B
1485  8C0B 2A 03 8A     	ld hl,(India_SP)
1486  8C0E 7E           	ld a,(hl)
1487  8C0F
1488  8C0F E1           	pop hl
1489  8C10 D1           	pop de
1490  8C11
1491  8C11              ; --------------------------------------------------------------------------------------------------------------
1492  8C11
1493  8C11 CD 1A 8C     	call Avanza_India_2_SP
1494  8C14
1495  8C14 14           2 inc d
1496  8C15 15           	dec d
1497  8C16 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1498  8C17 18 D8        	jr 1B
1499  8C19
1500  8C19 C9           	ret
1501  8C1A
1502  8C1A              ; ----- ----- ----- ----- -----
1503  8C1A
1504  8C1A              Avanza_India_2_SP
1505  8C1A
1506  8C1A 0D           	dec c
1507  8C1B 28 0A        	jr z,Avanza_punteros_indios
1508  8C1D
1509  8C1D FD 2C        	inc iyl
1510  8C1F
1511  8C1F 2C           	inc l
1512  8C20 2C           	inc l
1513  8C21 2C           	inc l
1514  8C22
1515  8C22 46           	ld b,(hl)
1516  8C23 22 05 8A     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1517  8C26
1518  8C26 C9           	ret
1519  8C27
1520  8C27              ; ----- ----- ----- ----- -----
1521  8C27
1522  8C27              Avanza_punteros_indios
1523  8C27
1524  8C27 15           	dec d
1525  8C28 28 15        	jr z,Prepara_salida
1526  8C2A
1527  8C2A 4A           	ld c,d
1528  8C2B
1529  8C2B 2A 03 8A     	ld hl,(India_SP)
1530  8C2E 2C           	inc l
1531  8C2F 2C           	inc l
1532  8C30 2C           	inc l
1533  8C31 7E           	ld a,(hl)
1534  8C32 22 03 8A     	ld (India_SP),hl
1535  8C35
1536  8C35 2C           	inc l
1537  8C36 2C           	inc l
1538  8C37 2C           	inc l
1539  8C38 46           	ld b,(hl)
1540  8C39 22 05 8A     	ld (India_2_SP),hl
1541  8C3C
1542  8C3C FD 2C        	inc iyl
1543  8C3E
1544  8C3E C9           	ret
1545  8C3F
1546  8C3F              Prepara_salida
1547  8C3F
1548  8C3F 21 73 86     	ld hl,Tabla_de_pintado
1549  8C42 22 03 8A     	ld (India_SP),hl
1550  8C45 C9           	ret
1551  8C46
1552  8C46
1553  8C46 2C           Intercambia_1_byte inc l
1554  8C47 1C           	inc e
1555  8C48 46           	ld b,(hl)
1556  8C49 1A           	ld a,(de)
1557  8C4A EB           	ex de,hl
1558  8C4B 70           	ld (hl),b
1559  8C4C 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1560  8C4D C9           	ret
1561  8C4E
1562  8C4E              ; -----------------------------------------------------------------------------------
1563  8C4E              ;
1564  8C4E              ;	20/01/24
1565  8C4E              ;
1566  8C4E              ;
1567  8C4E
1568  8C4E              Construye_movimientos_masticados_entidad
1569  8C4E
1570  8C4E 2A BD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1571  8C51 E5           	push hl
1572  8C52 CD 95 8C     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1573  8C55              ;															; _ el (Contador_de_mov_masticados).
1574  8C55 CD 22 8D     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1575  8C58              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1576  8C58 CD 16 95     	call Recompone_posicion_inicio
1577  8C5B
1578  8C5B CD 3C 92     1 call Draw
1579  8C5E CD 7A 8C     	call Guarda_movimiento_masticado
1580  8C61
1581  8C61 CD 90 98     	call Movimiento
1582  8C64
1583  8C64 3A 07 8A     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1584  8C67 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1585  8C69 28 F0        	jr z,1B
1586  8C6B
1587  8C6B              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1588  8C6B              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1589  8C6B
1590  8C6B E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1591  8C6C 22 BD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1592  8C6F
1593  8C6F              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1594  8C6F
1595  8C6F CD F4 99     	call Situa_en_contador_general_de_mov_masticados
1596  8C72
1597  8C72              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1598  8C72              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1599  8C72
1600  8C72 ED 4B BF 89  	ld bc,(Contador_de_mov_masticados)
1601  8C76
1602  8C76 71           	ld (hl),c
1603  8C77 23           	inc hl
1604  8C78 70           	ld (hl),b
1605  8C79
1606  8C79 C9           	ret
1607  8C7A
1608  8C7A              ; -----------------------------------------------------------------------------------
1609  8C7A              ;
1610  8C7A              ;	28/12/23
1611  8C7A              ;
1612  8C7A              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1613  8C7A              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1614  8C7A
1615  8C7A              Guarda_movimiento_masticado
1616  8C7A
1617  8C7A ED 73 F2 89  	ld (Stack),sp
1618  8C7E ED 7B BD 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1619  8C82
1620  8C82              ;	push hl
1621  8C82 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1622  8C84 FD E5            push iy 												; Pushea Puntero_objeto.
1623  8C86
1624  8C86 ED 7B F2 89      ld sp,(Stack)
1625  8C8A
1626  8C8A 2A BF 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1627  8C8D 23           	inc hl
1628  8C8E 22 BF 89     	ld (Contador_de_mov_masticados),hl
1629  8C91
1630  8C91 CD 95 8C         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1631  8C94              ;															; _ el (Contador_de_mov_masticados).
1632  8C94 C9               ret
1633  8C95
1634  8C95              ; --------------------------------------------------------------------------------------------------------------
1635  8C95              ;
1636  8C95              ;	12/1/24
1637  8C95              ;
1638  8C95              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1639  8C95
1640  8C95              Actualiza_Puntero_de_almacen_de_mov_masticados
1641  8C95
1642  8C95 2A BD 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1643  8C98 01 04 00     	ld bc,4
1644  8C9B A7           	and a
1645  8C9C ED 4A        	adc hl,bc
1646  8C9E 22 BD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1647  8CA1 C9           	ret
1648  8CA2
1649  8CA2              ; --------------------------------------------------------------------------------------------------------------
1650  8CA2              ;
1651  8CA2              ;	24/03/24
1652  8CA2              ;
1653  8CA2              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1654  8CA2              ;
1655  8CA2              ;	IX contiene el puntero de impresión.
1656  8CA2              ;	DE contiene (Puntero_objeto).
1657  8CA2
1658  8CA2
1659  8CA2              Cargamos_registros_con_mov_masticado
1660  8CA2
1661  8CA2 ED 73 F2 89  	ld (Stack),sp
1662  8CA6 ED 7B BD 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1663  8CAA
1664  8CAA D1           	pop de 															; DE contiene Puntero_objeto
1665  8CAB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1666  8CAD
1667  8CAD ED 73 BD 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1668  8CB1 ED 7B F2 89  	ld sp,(Stack)
1669  8CB5
1670  8CB5 7B           	ld a,e
1671  8CB6 82           	add d															; Comprueba si ya no hay datos en el almacén.
1672  8CB7
1673  8CB7 CC 76 AB     	call z,Reinicia_entidad_maliciosa
1674  8CBA
1675  8CBA C9           	ret
1676  8CBB
1677  8CBB              ; --------------------------------------------------------------------------------------------------------------
1678  8CBB              ;
1679  8CBB              ;	28/12/23
1680  8CBB              ;
1681  8CBB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1682  8CBB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1683  8CBB
1684  8CBB              Guarda_foto_entidad_a_pintar
1685  8CBB
1686  8CBB 3A C1 89     	ld a,(Ctrl_0)
1687  8CBE CB 77        	bit 6,a
1688  8CC0 28 04        	jr z,5F
1689  8CC2
1690  8CC2              ;	Guarda la foto de Amadeus.
1691  8CC2
1692  8CC2              ;	call Draw
1693  8CC2              ;	call Guarda_movimiento_masticado	;! Provisional
1694  8CC2 CD 0A AD     	call Genera_datos_de_impresion
1695  8CC5 C9           	ret
1696  8CC6
1697  8CC6              ; ENTIDADES!
1698  8CC6              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1699  8CC6
1700  8CC6 3A 07 8A     5 ld a,(Ctrl_3)
1701  8CC9 CB 5F        	bit 3,a
1702  8CCB 28 01        	jr z,1F
1703  8CCD
1704  8CCD              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1705  8CCD
1706  8CCD              4
1707  8CCD              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1708  8CCD C9           	ret
1709  8CCE
1710  8CCE              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1711  8CCE
1712  8CCE 3A 07 8A     1 ld a,(Ctrl_3)
1713  8CD1 CB 57        	bit 2,a
1714  8CD3 20 10        	jr nz,6F
1715  8CD5
1716  8CD5              ; Entidad guía o fantasma ???
1717  8CD5
1718  8CD5 3A C6 89     	ld a,(Ctrl_2)
1719  8CD8 CB 6F        	bit 5,a
1720  8CDA 20 10        	jr nz,3F
1721  8CDC
1722  8CDC              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1723  8CDC
1724  8CDC 18 EF        	jr 4B
1725  8CDE
1726  8CDE              ; ENTIDAD_GUÍA:
1727  8CDE              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1728  8CDE              ; _guardando "movimientos_masticados".
1729  8CDE
1730  8CDE 3A 07 8A     2 ld a,(Ctrl_3)
1731  8CE1 CB 57        	bit 2,a
1732  8CE3 28 07        	jr z,3F
1733  8CE5
1734  8CE5              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1735  8CE5              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1736  8CE5
1737  8CE5 CB 97        6 res 2,a
1738  8CE7 CB DF        	set 3,a
1739  8CE9 32 07 8A     	ld (Ctrl_3),a
1740  8CEC
1741  8CEC
1742  8CEC              ;	Esto sólo lo ejecuta una entidad guía.
1743  8CEC
1744  8CEC CD 3C 92     3 	call Draw
1745  8CEF CD 7A 8C     	call Guarda_movimiento_masticado
1746  8CF2 CD 0A AD     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1747  8CF5
1748  8CF5              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1749  8CF5              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1750  8CF5
1751  8CF5              ;	call Convierte_guia_en_fantasma
1752  8CF5 C9           	ret
1753  8CF6
1754  8CF6              ; ---------------------------------------------------------------------------------------------------------------------
1755  8CF6              ;
1756  8CF6              ;	13/03/24
1757  8CF6              ;
1758  8CF6
1759  8CF6              Inicia_albumes_de_lineas
1760  8CF6
1761  8CF6 21 00 80     	ld hl,Scanlines_album
1762  8CF9 22 F6 89     	ld (Album_de_pintado),hl
1763  8CFC 22 01 8A     	ld (Scanlines_album_SP),hl
1764  8CFF
1765  8CFF 21 00 90     	ld hl,Scanlines_album_2
1766  8D02 22 F8 89     	ld (Album_de_borrado),hl
1767  8D05
1768  8D05 C9           	ret
1769  8D06
1770  8D06
1771  8D06
1772  8D06              ; ---------------------------------------------------------------------------------------------------------------------
1773  8D06              ;
1774  8D06              ; 8/1/23
1775  8D06              ;
1776  8D06              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1777  8D06              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1778  8D06              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1779  8D06
1780  8D06              ; Destruye HL y DE !!!!!
1781  8D06
1782  8D06              Inicia_punteros_de_cajas
1783  8D06
1784  8D06 21 0F 87     	ld hl,Indice_de_cajas_de_entidades
1785  8D09 CD 1C 8D         call Extrae_address
1786  8D0C 22 E4 89         ld (Puntero_store_caja),hl
1787  8D0F 21 11 87     	ld hl,Indice_de_cajas_de_entidades+2
1788  8D12 22 E8 89     	ld (Indice_restore_caja),hl
1789  8D15 CD 1C 8D     	call Extrae_address
1790  8D18 22 E6 89     	ld (Puntero_restore_caja),hl
1791  8D1B C9               ret
1792  8D1C
1793  8D1C              ; *************************************************************************************************************************************************************
1794  8D1C              ;
1795  8D1C              ; 8/1/23
1796  8D1C              ;
1797  8D1C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1798  8D1C
1799  8D1C              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1800  8D1C              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1801  8D1C              ;	ret
1802  8D1C              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1803  8D1C              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1804  8D1C              ;	ret
1805  8D1C
1806  8D1C              ; -------------------------------------------------------------------------------------------------------------
1807  8D1C              ;
1808  8D1C              ; 21/9/23
1809  8D1C              ;
1810  8D1C
1811  8D1C              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1812  8D1C
1813  8D1C              ;;Limpia_album_Amadeus
1814  8D1C              ;
1815  8D1C              ;;	ld hl,Scanlines_album_Amadeus
1816  8D1C              ;;	ld a,(hl)
1817  8D1C              ;;	and a
1818  8D1C              ;;	ret z
1819  8D1C
1820  8D1C              ;;	ld hl,Scanlines_album_Amadeus;
1821  8D1C              ;;	ld de,Scanlines_album_Amadeus+1
1822  8D1C              ;;	ld bc,11
1823  8D1C              ;;	xor a
1824  8D1C              ;;	ld (hl),a
1825  8D1C              ;;	ldir
1826  8D1C
1827  8D1C              ;;	ld hl,Scanlines_album_Amadeus
1828  8D1C              ;;	ld (End_Snapshot_Amadeus),hl
1829  8D1C
1830  8D1C              ;;	ret
1831  8D1C
1832  8D1C              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1833  8D1C              ;	ld de,Variables_de_borrado+1
1834  8D1C              ;	ld bc,5
1835  8D1C              ;	xor a
1836  8D1C              ;	ld (hl),a
1837  8D1C              ;	ldir
1838  8D1C              ;	ret
1839  8D1C
1840  8D1C              ; *************************************************************************************************************************************************************
1841  8D1C              ;
1842  8D1C              ; 20/10/22
1843  8D1C              ;
1844  8D1C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1845  8D1C              ;
1846  8D1C              ; Destruye el puntero y DE !!!!!
1847  8D1C
1848  8D1C 5E           Extrae_address ld e,(hl)
1849  8D1D 23           	inc hl
1850  8D1E 56           	ld d,(hl)
1851  8D1F 2B           	dec hl
1852  8D20 EB           	ex de,hl
1853  8D21 C9           	ret
1854  8D22
1855  8D22              ; *************************************************************************************************************************************************************
1856  8D22              ;
1857  8D22              ;	20/1/24
1858  8D22              ;
1859  8D22              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1860  8D22              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1861  8D22              ;
1862  8D22              ;   Destruye HL y BC !!!!!,
1863  8D22              ;
1864  8D22              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1865  8D22              ;					"0" ..... Izquierda.
1866  8D22
1867  8D22              Inicia_Puntero_objeto
1868  8D22
1869  8D22 3A B9 89     	ld a,(Cuad_objeto)
1870  8D25 E6 01        	and 1
1871  8D27 F5           	push af
1872  8D28 CC 44 8D     	call z,Inicia_puntero_objeto_izq
1873  8D2B F1           	pop af
1874  8D2C C8           	ret z
1875  8D2D CD 31 8D     	call Inicia_puntero_objeto_der
1876  8D30 C9           	ret
1877  8D31
1878  8D31              ; Arrancamos desde la parte izquierda de la pantalla.
1879  8D31              ; Iniciamos (Indice_Sprite_der).
1880  8D31
1881  8D31 2A AF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1882  8D34 22 B3 89     	ld (Puntero_DESPLZ_der),hl
1883  8D37 CD 1C 8D     	call Extrae_address
1884  8D3A 22 A9 89     	ld (Puntero_objeto),hl
1885  8D3D
1886  8D3D 2A B1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1887  8D40 22 B5 89     	ld (Puntero_DESPLZ_izq),hl
1888  8D43 C9           	ret
1889  8D44
1890  8D44              ; Arrancamos desde la parte derecha de la pantalla.
1891  8D44              ; Iniciamos (Indice_Sprite_izq).
1892  8D44
1893  8D44 2A B1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1894  8D47 22 B5 89     	ld (Puntero_DESPLZ_izq),hl
1895  8D4A CD 1C 8D     	call Extrae_address
1896  8D4D 22 A9 89     	ld (Puntero_objeto),hl
1897  8D50
1898  8D50 2A AF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1899  8D53 22 B3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1900  8D56 C9           	ret
1901  8D57
1902  8D57              ; **************************************************************************************************
1903  8D57              ;
1904  8D57              ;	12/5/24
1905  8D57              ;
1906  8D57              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1907  8D57
1908  8D57              Restore_entidad
1909  8D57
1910  8D57 2A E4 89     	ld hl,(Puntero_store_caja)
1911  8D5A 11 A4 89     	ld de,Bandeja_DRAW
1912  8D5D 7E           	ld a,(hl)
1913  8D5E 12           	ld (de),a
1914  8D5F 23           	inc hl 											; (Tipo).
1915  8D60
1916  8D60 11 AB 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1917  8D63 01 02 00     	ld bc,2
1918  8D66 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1919  8D68
1920  8D68 13           	inc de
1921  8D69 7E           	ld a,(hl)
1922  8D6A 12           	ld (de),a 										; Transferimos (Contador_de_vueltas).
1923  8D6B 23           	inc hl
1924  8D6C
1925  8D6C 11 BA 89     	ld de,Impacto
1926  8D6F 01 08 00     	ld bc,8
1927  8D72 ED B0        	ldir 											; Transferimos (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1928  8D74              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1929  8D74 11 C6 89     	ld de,Ctrl_2
1930  8D77 01 02 00     	ld bc,2
1931  8D7A ED B0        	ldir											; Transferimos (Ctrl_2) y (Velocidad).
1932  8D7C
1933  8D7C C9           	ret
1934  8D7D
1935  8D7D              ; **************************************************************************************************
1936  8D7D              ;
1937  8D7D              ;	08/05/23
1938  8D7D              ;
1939  8D7D              ;	Incrementamos los dos punteros de entidades. (+1).
1940  8D7D
1941  8D7D              Incrementa_punteros_de_cajas
1942  8D7D
1943  8D7D 2A E6 89     	ld hl,(Puntero_restore_caja)
1944  8D80 22 E4 89     	ld (Puntero_store_caja),hl
1945  8D83 2A E8 89     	ld hl,(Indice_restore_caja)
1946  8D86 23           	inc hl
1947  8D87 23           	inc hl
1948  8D88 22 E8 89     	ld (Indice_restore_caja),hl
1949  8D8B CD 1C 8D         call Extrae_address
1950  8D8E 22 E6 89         ld (Puntero_restore_caja),hl
1951  8D91 C9               ret
1952  8D92
1953  8D92              ; **************************************************************************************************
1954  8D92              ;
1955  8D92              ;	21/12/23
1956  8D92              ;
1957  8D92              ;	Restore_Amadeus
1958  8D92              ;
1959  8D92              ;	Cargamos en DRAW los parámetros de Amadeus.
1960  8D92              ;
1961  8D92
1962  8D92              ;Restore_Amadeus	push hl
1963  8D92              ;	push de
1964  8D92              ; 	push bc
1965  8D92              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1966  8D92              ;	ld de,Bandeja_DRAW
1967  8D92              ;	ld bc,42
1968  8D92              ;	ldir
1969  8D92              ;	pop bc
1970  8D92              ;	pop de
1971  8D92              ;	pop hl
1972  8D92              ;	ret
1973  8D92
1974  8D92              ; *************************************************************************************************************************************************************
1975  8D92              ;
1976  8D92              ;	21/12/23
1977  8D92              ;
1978  8D92              ;	Store_Amadeus
1979  8D92              ;
1980  8D92              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1981  8D92              ;
1982  8D92              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1983  8D92              ;
1984  8D92              ;	DESTRUYE: HL y BC y DE.
1985  8D92
1986  8D92              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1987  8D92              ;	ld bc,42
1988  8D92              ;	ldir
1989  8D92              ;	ret
1990  8D92
1991  8D92              ; -----------------------------------------------------------
1992  8D92              ;
1993  8D92              ;	21/12/23
1994  8D92              ;
1995  8D92              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1996  8D92              ;
1997  8D92              ;	Destruye: HL,BC,DE,A
1998  8D92
1999  8D92              ;Borra_datos_entidad ld hl,Bandeja_DRAW
2000  8D92              ;	ld bc,41
2001  8D92              ;	xor a
2002  8D92              ;	ld (hl),a;
2003  8D92              ;	ld de,Bandeja_DRAW+1
2004  8D92              ;	ldir
2005  8D92              ;	ret
2006  8D92
2007  8D92              ; -----------------------------------------------------------
2008  8D92
2009  8D92              ; Teclado.
2010  8D92
2011  8D92 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
2012  8D94 DB FE        	in a,($fe)
2013  8D96 E6 01        	and $01
2014  8D98 28 02        	jr z,1f
2015  8D9A 18 F6        	jr Pulsa_ENTER
2016  8D9C C9           1 ret
2017  8D9D
2018  8D9D              ; **************************************************************************************************
2019  8D9D              ;
2020  8D9D              ; Temporización.
2021  8D9D
2022  8D9D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
2023  8D9D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
2024  8D9D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
2025  8D9D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
2026  8D9D
2027  8D9D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
2028  8D9D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
2029  8D9D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
2030  8D9D
2031  8D9D              ; A partir de $4f61 no hace falta DELAY.
2032  8D9D
2033  8D9D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
2034  8D9D
2035  8D9D 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
2036  8DA0 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
2037  8DA1 78           	LD A,B
2038  8DA2 A7           	AND A
2039  8DA3 20 FB        	JR NZ,wait
2040  8DA5 C9           	RET
2041  8DA6
2042  8DA6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2043  8DA6              ;
2044  8DA6              ;	5/3/23
2045  8DA6              ;
2046  8DA6              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
2047  8DA6
2048  8DA6              ;Movimiento_Amadeus
2049  8DA6
2050  8DA6              ; Disparo.
2051  8DA6
2052  8DA6              ;	ld a,(Disparo_Amadeus)
2053  8DA6              ;	and a
2054  8DA6              ;	jr nz,1F
2055  8DA6              ;	jr 2F
2056  8DA6
2057  8DA6              ;1 ld a,$f7													; "5" para disparar.
2058  8DA6              ;	in a,($fe)
2059  8DA6              ;	and $10
2060  8DA6
2061  8DA6              ;	push af
2062  8DA6              ;	call z,Genera_disparo
2063  8DA6              ;	pop af
2064  8DA6              ;	jr nz,2F
2065  8DA6
2066  8DA6              ;	ld a,(Disparo_Amadeus)
2067  8DA6              ;	xor 1
2068  8DA6              ;	ld (Disparo_Amadeus),a
2069  8DA6              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2070  8DA6              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2071  8DA6              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2072  8DA6              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
2073  8DA6
2074  8DA6              ;	ld a,$f7
2075  8DA6              ;	in a,($fe)
2076  8DA6              ;	and $01
2077  8DA6              ;	ret z
2078  8DA6
2079  8DA6              ;	ld a,$f7
2080  8DA6              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2081  8DA6              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2082  8DA6              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
2083  8DA6              ;	ret
2084  8DA6
2085  8DA6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2086  8DA6              ;
2087  8DA6              ;	Rutina provisional para que los malotes cagen balas.
2088  8DA6
2089  8DA6              ;Detecta_disparo_entidad
2090  8DA6
2091  8DA6              ;	ld a,(Disparo_entidad)
2092  8DA6              ;	and a
2093  8DA6              ;	ret z
2094  8DA6
2095  8DA6              ;! Aquí hemos de implementar la rutina/s que generan disparo...
2096  8DA6
2097  8DA6              ;	ld a,$7f				; Detecta SPACE.
2098  8DA6              ;	in a,($fe)
2099  8DA6              ;	and 1
2100  8DA6              ;	ret nz
2101  8DA6
2102  8DA6              ;	call Genera_disparo
2103  8DA6              ;	ret
2104  8DA6
2105  8DA6              ; ----------------------------------------------------------------------
2106  8DA6              ;
2107  8DA6              ;	8/9/23
2108  8DA6
2109  8DA6              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
2110  8DA6              ; 	dec hl
2111  8DA6              ;	ld a,(hl)
2112  8DA6              ;	and a
2113  8DA6              ;	ret z										; Salimos si es álbum está vacío.
2114  8DA6
2115  8DA6              ;	ld de,Variables_de_borrado+5
2116  8DA6              ;	ld bc,6
2117  8DA6              ;	lddr
2118  8DA6              ;	ret
2119  8DA6
2120  8DA6              ; ----------------------------------------------------------------------
2121  8DA6              ;
2122  8DA6              ;	9/9/23
2123  8DA6
2124  8DA6              ;Repone_datos_de_borrado_Amadeus
2125  8DA6
2126  8DA6              ;	ld hl,Variables_de_borrado
2127  8DA6              ;	ld de,Scanlines_album_Amadeus
2128  8DA6              ;	ld bc,6
2129  8DA6              ;	ldir
2130  8DA6
2131  8DA6              ;	ex de,hl
2132  8DA6              ;	ld (End_Snapshot_Amadeus),hl
2133  8DA6
2134  8DA6              ;	ret
2135  8DA6
2136  8DA6              ; ----------------------------------------------------------------------
2137  8DA6              ;
2138  8DA6              ;	27/10/23
2139  8DA6              ;
2140  8DA6
2141  8DA6              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
2142  8DA6              ;	_ Scanlines_album correspondiente.
2143  8DA6
2144  8DA6              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
2145  8DA6              ;	_ durante el proceso de escritura.
2146  8DA6
2147  8DA6              ;Repone_datos_de_borrado
2148  8DA6
2149  8DA6              ;	ld de,(Scanlines_album_SP)
2150  8DA6              ;	ld hl,Variables_de_borrado
2151  8DA6              ;	ld bc,6
2152  8DA6              ;	ldir
2153  8DA6
2154  8DA6              ;	ex de,hl
2155  8DA6              ;	ld (Scanlines_album_SP),hl
2156  8DA6
2157  8DA6              ;	ret
2158  8DA6
2159  8DA6              ; --------------------------------------------------------------------------------------
2160  8DA6
2161  8DA6              ;Pinta_Amadeus
2162  8DA6
2163  8DA6              ;   call Calcula_malotes_Amadeus
2164  8DA6              ;	call Extrae_foto_Amadeus
2165  8DA6              ;	call Limpia_album_Amadeus
2166  8DA6
2167  8DA6              ;	ret
2168  8DA6
2169  8DA6              ; ---------------------------------------------------------------
2170  8DA6
2171  8DA6              	org $aa7f
2172  AA7F
2173  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 6C 86         ld hl,Numeros_aleatorios
  13+ AA82
  14+ AA82 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA84 C5               push bc
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D4            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2174  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A 12 8A     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD 1C 8D     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 EA 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 14 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 C9 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 1C AC         call Calcula_salto_en_BC
  38+ AAD4 21 8B 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD 1C 8D         call Extrae_address
  42+ AADD 22 D5 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A A4 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 1C AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD 1C 8D         call Extrae_address
  51+ AAF0 22 BD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD 06 8D     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD 7C AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A 14 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 14 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD CA AB     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A 14 8A     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 4F AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 2E AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD EC AB     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 01 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD 4E 8C     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD AA AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD A2 8C     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD B7 AC     	call Genera_coordenadas
 126+ AB2C CD B2 8B     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 127+ AB2F D1           	pop de
 128+ AB30
 129+ AB30 CD 0A AD     	call Genera_datos_de_impresion
 130+ AB33              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 131+ AB33              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 132+ AB33              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 133+ AB33              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 134+ AB33
 135+ AB33 CD 6E AB     	call Decrementa_Contador_de_mov_masticados
 136+ AB36
 137+ AB36              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 138+ AB36
 139+ AB36 CD 55 AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 140+ AB39 CD 63 AB     	call Limpiamos_bandeja_DRAW
 141+ AB3C CD 7D 8D     	call Incrementa_punteros_de_cajas
 142+ AB3F
 143+ AB3F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 144+ AB3F              ; _ entidad del Nivel.
 145+ AB3F
 146+ AB3F 3A 08 8A     	ld a,(Ctrl_4)
 147+ AB42 E6 F0        	and $f0
 148+ AB44 32 08 8A     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 149+ AB47
 150+ AB47              ; Siguiente entidad del Nivel.
 151+ AB47
 152+ AB47 2A 14 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 153+ AB4A 23           	inc hl 														; _ entidad del Nivel.
 154+ AB4B
 155+ AB4B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 156+ AB4C
 157+ AB4C 10 AF        	djnz 2B
 158+ AB4E
 159+ AB4E C9           	ret
 160+ AB4F
 161+ AB4F              ; ---------------------------------------------------------------------
 162+ AB4F              ;
 163+ AB4F              ;	10/02/24
 164+ AB4F              ;
 165+ AB4F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 166+ AB4F              ;
 167+ AB4F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 168+ AB4F
 169+ AB4F              Definicion_segun_tipo
 170+ AB4F
 171+ AB4F CD 1C AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 172+ AB52 21 B9 87     	ld hl,Indice_de_definiciones_de_entidades
 173+ AB55 CD 24 AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 174+ AB58 C9           	ret
 175+ AB59
 176+ AB59              ; ---------------------------------------------------------------------
 177+ AB59              ;
 178+ AB59              ;	27/03/24
 179+ AB59
 180+ AB59
 181+ AB59              Store_Restore_cajas
 182+ AB59
 183+ AB59 CD 55 AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 184+ AB5C CD 63 AB     	call Limpiamos_bandeja_DRAW
 185+ AB5F
 186+ AB5F              ; 	Entidad_sospechosa. 20/4/23
 187+ AB5F
 188+ AB5F              ;	ld a,(Impacto)
 189+ AB5F              ;	and a
 190+ AB5F              ;	jr z,1F
 191+ AB5F
 192+ AB5F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 193+ AB5F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 194+ AB5F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 195+ AB5F              ;	adc hl,bc 											; _ "0" más adelante.
 196+ AB5F              ;	ld (Entidad_sospechosa_de_colision),hl
 197+ AB5F
 198+ AB5F
 199+ AB5F              ;1 ld hl,(Puntero_restore_caja)
 200+ AB5F              ;	ld a,(hl)
 201+ AB5F              ;	and a
 202+ AB5F              ;	push af
 203+ AB5F              ;	jr z,2F
 204+ AB5F
 205+ AB5F              ;	di
 206+ AB5F              ;	ld de,Bandeja_DRAW
 207+ AB5F              ;	ld bc,42
 208+ AB5F              ;	ldir
 209+ AB5F              ;	ei
 210+ AB5F
 211+ AB5F CD 7D 8D     2 call Incrementa_punteros_de_cajas
 212+ AB62 C9           	ret
 213+ AB63
 214+ AB63              ; ---------------------------------------------------------------------
 215+ AB63              ;
 216+ AB63              ;	12/05/24
 217+ AB63
 218+ AB63 21 A4 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 219+ AB66 06 25        	ld b,37
 220+ AB68 AF           	xor a
 221+ AB69 77           1 ld (hl),a
 222+ AB6A 23           	inc hl
 223+ AB6B 10 FC        	djnz 1B
 224+ AB6D C9           	ret
 225+ AB6E
 226+ AB6E              ; ---------------------------------------------------------------------
 227+ AB6E              ;
 228+ AB6E              ;	24/03/24
 229+ AB6E
 230+ AB6E 2A BF 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 231+ AB71 2B           	dec hl
 232+ AB72
 233+ AB72              ; debug 6/5/24
 234+ AB72
 235+ AB72
 236+ AB72 22 BF 89     	ld (Contador_de_mov_masticados),hl
 237+ AB75 C9           	ret
 238+ AB76
 239+ AB76              ; ---------------------------------------------------------------------
 240+ AB76              ;
 241+ AB76              ;	8/5/24
 242+ AB76
 243+ AB76              Reinicia_entidad_maliciosa
 244+ AB76
 245+ AB76              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 246+ AB76
 247+ AB76 CD F4 99     	call Situa_en_contador_general_de_mov_masticados
 248+ AB79 CD 01 9A     	call Transfiere_datos_de_contadores
 249+ AB7C
 250+ AB7C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 251+ AB7C
 252+ AB7C 3A A4 89     	ld a,(Tipo)
 253+ AB7F CD 4F AB     	call Definicion_segun_tipo
 254+ AB82
 255+ AB82 E5           	push hl
 256+ AB83 DD E1        	pop ix
 257+ AB85
 258+ AB85 DD 6E 0B     	ld l,(ix+11)
 259+ AB88 DD 66 0C     	ld h,(ix+12)
 260+ AB8B
 261+ AB8B 22 BD 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 262+ AB8E
 263+ AB8E CD A2 8C     	call Cargamos_registros_con_mov_masticado
 264+ AB91
 265+ AB91              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 266+ AB91              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 267+ AB91              ; Ejemplos.
 268+ AB91
 269+ AB91              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 270+ AB91              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 271+ AB91              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 272+ AB91              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 273+ AB91              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 274+ AB91
 275+ AB91 21 AE 89     	ld hl,Contador_de_vueltas
 276+ AB94 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 277+ AB96
 278+ AB96 7E           	ld a,(hl)
 279+ AB97 CB 2F        	sra a
 280+ AB99 CB 2F        	sra a
 281+ AB9B
 282+ AB9B 32 C7 89     	ld (Velocidad),a
 283+ AB9E
 284+ AB9E 3E 40        	ld a,$40
 285+ ABA0 BE           	cp (hl)
 286+ ABA1 C0           	ret nz
 287+ ABA2
 288+ ABA2              ; Límitador.
 289+ ABA2
 290+ ABA2              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 291+ ABA2
 292+ ABA2 CB 2E        	sra (hl)
 293+ ABA4 21 C7 89     	ld hl,Velocidad
 294+ ABA7 CB 2E        	sra (hl)
 295+ ABA9
 296+ ABA9 C9           	ret
 297+ ABAA
 298+ ABAA              ; ---------------------------------------------------------------------
 299+ ABAA              ;
 300+ ABAA              ;	22/01/24
 301+ ABAA
 302+ ABAA 21 08 8A     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 303+ ABAD CB 46        	bit 0,(hl)
 304+ ABAF 20 0D        	jr nz,1F
 305+ ABB1 CB 4E        	bit 1,(hl)
 306+ ABB3 20 0C        	jr nz,2F
 307+ ABB5 CB 56        	bit 2,(hl)
 308+ ABB7 20 0B        	jr nz,3F
 309+ ABB9 CB 5E        	bit 3,(hl)
 310+ ABBB 20 0A        	jr nz,4F
 311+ ABBD C9           	ret
 312+ ABBE
 313+ ABBE CB E6        1 set 4,(hl)
 314+ ABC0 C9           	ret
 315+ ABC1 CB EE        2 set 5,(hl)
 316+ ABC3 C9           	ret
 317+ ABC4 CB F6        3 set 6,(hl)
 318+ ABC6 C9           	ret
 319+ ABC7 CB FE        4 set 7,(hl)
 320+ ABC9 C9           	ret
 321+ ABCA
 322+ ABCA              ; ---------------------------------------------------------------------
 323+ ABCA              ;
 324+ ABCA              ;	23/01/24
 325+ ABCA              ;
 326+ ABCA              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 327+ ABCA              ;
 328+ ABCA              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 329+ ABCA              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 330+ ABCA              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 331+ ABCA              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 332+ ABCA
 333+ ABCA              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 334+ ABCA
 335+ ABCA 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 336+ ABCB 3D           	dec a
 337+ ABCC 20 06        	jr nz,1F
 338+ ABCE
 339+ ABCE              ; --- Tipo_1
 340+ ABCE
 341+ ABCE 21 08 8A     	ld hl,Ctrl_4
 342+ ABD1 CB C6        	set 0,(hl)
 343+ ABD3 C9           	ret
 344+ ABD4
 345+ ABD4 3D           1 dec a
 346+ ABD5 20 06        	jr nz,2F
 347+ ABD7
 348+ ABD7              ; --- Tipo_2
 349+ ABD7
 350+ ABD7 21 08 8A     	ld hl,Ctrl_4
 351+ ABDA CB CE        	set 1,(hl)
 352+ ABDC C9           	ret
 353+ ABDD
 354+ ABDD 3D           2 dec a
 355+ ABDE 20 06        	jr nz,3F
 356+ ABE0
 357+ ABE0              ; --- Tipo_3
 358+ ABE0
 359+ ABE0 21 08 8A     	ld hl,Ctrl_4
 360+ ABE3 CB D6        	set 2,(hl)
 361+ ABE5 C9           	ret
 362+ ABE6
 363+ ABE6              ; --- Tipo_3
 364+ ABE6
 365+ ABE6 21 08 8A     3 ld hl,Ctrl_4
 366+ ABE9 CB D6        	set 2,(hl)
 367+ ABEB C9           	ret
 368+ ABEC
 369+ ABEC              ; ---------------------------------------------------------------------
 370+ ABEC              ;
 371+ ABEC              ;	22/01/24
 372+ ABEC
 373+ ABEC 21 08 8A     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 374+ ABEF CB 46        	bit 0,(hl)
 375+ ABF1 20 0E        	jr nz,1F
 376+ ABF3
 377+ ABF3 CB 4E        	bit 1,(hl)
 378+ ABF5 20 10        	jr nz,2F
 379+ ABF7
 380+ ABF7 CB 56        	bit 2,(hl)
 381+ ABF9 20 12        	jr nz,3F
 382+ ABFB
 383+ ABFB CB 5E        	bit 3,(hl)
 384+ ABFD 20 14        	jr nz,4F
 385+ ABFF 18 19        	jr 6F
 386+ AC01
 387+ AC01              ; Entidad_de_Tipo_1.
 388+ AC01
 389+ AC01 CB 66        1 bit 4,(hl)
 390+ AC03 28 15        	jr z,6F
 391+ AC05 18 10        	jr 5F
 392+ AC07
 393+ AC07              ; Entidad_de_Tipo_2.
 394+ AC07
 395+ AC07 CB 6E        2 bit 5,(hl)
 396+ AC09 28 0F        	jr z,6F
 397+ AC0B 18 0A        	jr 5F
 398+ AC0D
 399+ AC0D              ; Entidad_de_Tipo_3.
 400+ AC0D
 401+ AC0D CB 76        3 bit 6,(hl)
 402+ AC0F 28 09        	jr z,6F
 403+ AC11 18 04        	jr 5F
 404+ AC13
 405+ AC13              ; Entidad_de_Tipo_4.
 406+ AC13
 407+ AC13 CB 7E        4 bit 7,(hl)
 408+ AC15 28 03        	jr z,6F
 409+ AC17
 410+ AC17              ; Esta entidad TIENE MOV_MASTICADOS.
 411+ AC17
 412+ AC17 AF           5 xor a
 413+ AC18 3C           	inc a
 414+ AC19 C9           	ret
 415+ AC1A
 416+ AC1A              ; Esta entidad NO TIENE MOV_MASTICADOS.
 417+ AC1A
 418+ AC1A AF           6 xor a
 419+ AC1B C9           	ret
 420+ AC1C
 421+ AC1C              ;	------------------------------------------------------------------------------------
 422+ AC1C              ;
 423+ AC1C              ;	12/01/24
 424+ AC1C              ;
 425+ AC1C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 426+ AC1C              ;
 427+ AC1C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 428+ AC1C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 429+ AC1C
 430+ AC1C CB 27        Calcula_salto_en_BC sla a
 431+ AC1E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 432+ AC20 4F           	ld c,a
 433+ AC21 06 00        	ld b,0
 434+ AC23 C9           	ret
 435+ AC24
 436+ AC24              ; ------------------------------------------------------------------
 437+ AC24              ;
 438+ AC24              ;	19/1/24
 439+ AC24              ;
 440+ AC24              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 441+ AC24              ;	Actualiza (Datos_de_entidad) con esa dirección.
 442+ AC24
 443+ AC24 A7           Situa_en_datos_de_definicion and a
 444+ AC25 ED 4A        	adc hl,bc
 445+ AC27 CD 1C 8D     	call Extrae_address
 446+ AC2A 22 F0 89         ld (Datos_de_entidad),hl
 447+ AC2D C9           	ret
 448+ AC2E
 449+ AC2E              ; ------------------------------------------------------------------
 450+ AC2E
 451+ AC2E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 452+ AC2E              ; 	inc de
 453+ AC2E              ; 	inc de
 454+ AC2E              ; 	ex de,hl
 455+ AC2E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 456+ AC2E              ; 	ret
 457+ AC2E
 458+ AC2E              ; ----------------------------------------------------------------------------------------------------------
 459+ AC2E              ;
 460+ AC2E              ;	12/05/24
 461+ AC2E              ;
 462+ AC2E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 463+ AC2E              ;	_ de entidad.
 464+ AC2E              ;
 465+ AC2E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 466+ AC2E              ;
 467+ AC2E              ;
 468+ AC2E              ;	MODIFICA: HL,DE y BC
 469+ AC2E
 470+ AC2E
 471+ AC2E              Definicion_de_entidad_a_bandeja_DRAW
 472+ AC2E
 473+ AC2E 11 A4 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 474+ AC31 01 03 00     	ld bc,3
 475+ AC34 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 476+ AC36              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 477+ AC36 11 AE 89     	ld de,Contador_de_vueltas					; DE en (Attr).
 478+ AC39 01 05 00     	ld bc,5
 479+ AC3C ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 480+ AC3E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 481+ AC3E 11 B7 89     	ld de,Posicion_inicio
 482+ AC41 01 03 00     	ld bc,3
 483+ AC44 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 484+ AC46              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 485+ AC46 11 BD 89     	ld de,Puntero_de_almacen_de_mov_masticados
 486+ AC49 01 02 00     	ld bc,2
 487+ AC4C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 488+ AC4E
 489+ AC4E 11 C8 89     	ld de,Frames_explosion
 490+ AC51 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 491+ AC53 12           	ld (de),a 									; Vuelco (Frames_explosion).
 492+ AC54
 493+ AC54 C9           	ret
 494+ AC55
 495+ AC55              ; ----------------------------------------------------------------------------------------------------------
 496+ AC55              ;
 497+ AC55              ;	12/5/24
 498+ AC55              ;
 499+ AC55              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 500+ AC55              ;
 501+ AC55              ;	Las cajas contienen entidades iniciadas:
 502+ AC55              ;
 503+ AC55              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 504+ AC55              ;
 505+ AC55              ;	OUTPUT: HL apunta al .db (Frames_explosion) de la bandeja DRAW.
 506+ AC55              ;			DE apunta al 1er .db (Tipo) de la siguiente caja de entidades.
 507+ AC55              ;
 508+ AC55              ;	MODIFICA: HL,DE y BC
 509+ AC55
 510+ AC55              Parametros_de_bandeja_DRAW_a_caja
 511+ AC55
 512+ AC55 21 A4 89     	ld hl,Bandeja_DRAW
 513+ AC58 ED 5B E4 89  	ld de,(Puntero_store_caja)
 514+ AC5C 7E           	ld a,(hl)
 515+ AC5D 12           	ld (de),a
 516+ AC5E 13           	inc de 													; (Tipo).
 517+ AC5F
 518+ AC5F 21 AB 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 519+ AC62 01 02 00     	ld bc,2
 520+ AC65 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 521+ AC67              ;															; DE apunta ahora a (Contador_de_vueltas) de la caja de entidades. Hemos de recolocar HL.
 522+ AC67 23           	inc hl
 523+ AC68 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Contador_de_vueltas).
 524+ AC69 12           	ld (de),a
 525+ AC6A 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 526+ AC6B
 527+ AC6B 21 BA 89     	ld hl,Impacto
 528+ AC6E 01 08 00     	ld bc,8
 529+ AC71 ED B0        	ldir													; Hemos volcado (Impacto), (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 530+ AC73              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 531+ AC73              ;															; HL apunta ahora a (Columnas).
 532+ AC73 21 C6 89     	ld hl,Ctrl_2
 533+ AC76 01 02 00     	ld bc,2
 534+ AC79 ED B0        	ldir													; Hemos volcado (Ctrl_2) y (Velocidad).
 535+ AC7B
 536+ AC7B C9           	ret
 537+ AC7C
 538+ AC7C              ;---------------------------------------------------------------------------------------------------------------
 539+ AC7C              ;
 540+ AC7C              ;	5/1/24
 541+ AC7C              ;
 542+ AC7C              ;	INICIALIZA (Numero_parcial_de_entidades).
 543+ AC7C              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 544+ AC7C              ;
 545+ AC7C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 546+ AC7C              ;
 547+ AC7C              ;	(Numero_parcial_de_entidades)="7".
 548+ AC7C              ;
 549+ AC7C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 550+ AC7C              ;
 551+ AC7C              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 552+ AC7C              ;
 553+ AC7C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 554+ AC7C              ;	MODIFICA: A y B.
 555+ AC7C              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 556+ AC7C
 557+ AC7C              Inicializa_Numero_parcial_de_entidades
 558+ AC7C
 559+ AC7C              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 560+ AC7C
 561+ AC7C 3A EA 89     	ld a,(Numero_de_entidades)
 562+ AC7F A7           	and a
 563+ AC80
 564+ AC80              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 565+ AC80              ;	jr z,$
 566+ AC80              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 567+ AC80
 568+ AC80 20 03        	jr nz,3F
 569+ AC82
 570+ AC82              ; ---------- ---------- ----------
 571+ AC82
 572+ AC82              ;! RESET para pruebas. Omitir esta línea en modo normal.
 573+ AC82              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 574+ AC82
 575+ AC82 CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 576+ AC85
 577+ AC85              ; ---------- ---------- ----------
 578+ AC85
 579+ AC85 3A EA 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 580+ AC88 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 581+ AC8A 38 08        	jr c,1F
 582+ AC8C
 583+ AC8C              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 584+ AC8C              ; Actualizamos variables.
 585+ AC8C
 586+ AC8C 3E 07        	ld a,7
 587+ AC8E 32 EB 89     	ld (Numero_parcial_de_entidades),a
 588+ AC91 47           	ld b,a
 589+ AC92 18 04        	jr 2F
 590+ AC94
 591+ AC94              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 592+ AC94              ; (Numero_de_entidades)="0".
 593+ AC94
 594+ AC94 32 EB 89     1 ld (Numero_parcial_de_entidades),a
 595+ AC97 47           	ld b,a
 596+ AC98 C9           2 ret
 597+ AC99
# file closed: Rutinas_de_inicio_y_niveles.asm
2175  AC99              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ AC99              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ AC99              ;
   3+ AC99              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ AC99              ;
   5+ AC99              ; *****************************************************************************************************************************************************************************************
   6+ AC99              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ AC99
   8+ AC99 7C           calcula_tercio ld a,h
   9+ AC9A E6 18        	and $18
  10+ AC9C CB 2F        	sra a
  11+ AC9E CB 2F        	sra a
  12+ ACA0 CB 2F        	sra a
  13+ ACA2 C9           	ret
  14+ ACA3
# file closed: calcula_tercio.asm
2176  ACA3              	include "Cls.asm"
# file opened: Cls.asm
   1+ ACA3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ ACA3              ;
   3+ ACA3              ;
   4+ ACA3              ;	CLS.
   5+ ACA3              ;
   6+ ACA3              ;	Limpia la pantalla y define sus atributos.
   7+ ACA3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ ACA3              ;
   9+ ACA3              ;	COLORES: 0 ..... NEGRO
  10+ ACA3              ;    		 1 ..... AZUL
  11+ ACA3              ; 			 2 ..... ROJO
  12+ ACA3              ;			 3 ..... MAGENTA
  13+ ACA3              ; 			 4 ..... VERDE
  14+ ACA3              ; 			 5 ..... CIAN
  15+ ACA3              ;			 6 ..... AMARILLO
  16+ ACA3              ; 			 7 ..... BLANCO
  17+ ACA3              ;
  18+ ACA3              ;	INPUT: A contiene los atributos de pantalla.
  19+ ACA3              ;
  20+ ACA3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ ACA3
  22+ ACA3
  23+ ACA3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ ACA6 11 01 40     	LD DE,$4001
  25+ ACA9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ ACAC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ ACAE ED B0        	LDIR
  28+ ACB0 01 FF 02     	LD BC,767
  29+ ACB3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACB4 ED B0        	LDIR
  31+ ACB6 C9           	ret
  32+ ACB7
# file closed: Cls.asm
2177  ACB7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACB7              ; ------------------------------------------------------------------------
   2+ ACB7              ;
   3+ ACB7              ;	30/1/24
   4+ ACB7              ;
   5+ ACB7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACB7              ;	Fila superior "0", Columna izquierda "0".
   7+ ACB7              ;
   8+ ACB7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACB7              ;
  10+ ACB7              ;	Modifica: A,BC y DE.
  11+ ACB7
  12+ ACB7 7D           Genera_coordenadas ld a,l
  13+ ACB8 E6 1F        	and $1f
  14+ ACBA 32 AB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACBD
  16+ ACBD 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACBE FE 40        	cp $40
  18+ ACC0 38 1C        	jr c,4F
  19+ ACC2
  20+ ACC2 CD 99 AC     	call calcula_tercio
  21+ ACC5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ ACC6
  23+ ACC6 1E 00        	ld e,0
  24+ ACC8 7D           	ld a,l
  25+ ACC9 E6 E0        	and $e0
  26+ ACCB 28 01        	jr z,1F
  27+ ACCD 04           	inc b
  28+ ACCE
  29+ ACCE 04           1 inc b
  30+ ACCF 05           	dec b
  31+ ACD0 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ ACD2              ;														; _ , salimos.
  33+ ACD2 1C           3 inc e
  34+ ACD3 D6 20        	sub 32
  35+ ACD5 20 FB        	jr nz,3B
  36+ ACD7 10 F5        	djnz 1B
  37+ ACD9
  38+ ACD9 7B           2 ld a,e
  39+ ACDA 32 AC 89     	ld (Coordenada_y),a
  40+ ACDD C9           	ret
  41+ ACDE
  42+ ACDE AF           4 xor a
  43+ ACDF 32 AC 89     	ld (Coordenada_y),a
  44+ ACE2 C9           	ret
  45+ ACE3
  46+ ACE3              ; ------------------------------------------------------------------------
  47+ ACE3              ;	28/05/23
  48+ ACE3              ;
  49+ ACE3              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ ACE3              ;	Fila superior "0", Columna izquierda "0".
  51+ ACE3              ;
  52+ ACE3              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ ACE3              ;	Output: DE contendrá las coordenadas del disparo:
  54+ ACE3              ;
  55+ ACE3              ;		DE="$120d"
  56+ ACE3              ;
  57+ ACE3              ;		D, (Coordenada_X), Columnas, $12
  58+ ACE3              ;		E, (Coordenada_y), Filas, $0d
  59+ ACE3              ;
  60+ ACE3              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ ACE3
  62+ ACE3              ;	Modifica: A,BC y DE.
  63+ ACE3
  64+ ACE3
  65+ ACE3              Genera_coordenadas_disparo
  66+ ACE3
  67+ ACE3              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ ACE3
  69+ ACE3 7D           	ld a,l
  70+ ACE4 E6 1F        	and $1f
  71+ ACE6 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ ACE7 CD 99 AC     	call calcula_tercio
  73+ ACEA 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ ACEB 1E 00        	ld e,0
  75+ ACED 7D           	ld a,l
  76+ ACEE E6 E0        	and $e0
  77+ ACF0 28 01        	jr z,1F
  78+ ACF2 04           	inc b
  79+ ACF3 1C           1 inc e
  80+ ACF4 D6 20        	sub 32
  81+ ACF6 20 FB        	jr nz,1B
  82+ ACF8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ ACFA C9           	ret
  84+ ACFB
# file closed: Genera_coordenadas.asm
2178  ACFB              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ ACFB              ; Relojes y temporizaciones.
   2+ ACFB
   3+ ACFB              ; ------------------------------------------------------
   4+ ACFB              ;
   5+ ACFB              ;	16/7/23
   6+ ACFB              ;
   7+ ACFB              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ ACFB              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ ACFB              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ ACFB              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ ACFB              ;
  12+ ACFB              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ ACFB              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ ACFB
  15+ ACFB              ; Disparo_entidad db 1
  16+ ACFB              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ ACFB              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ ACFB
  19+ ACFB              Habilita_disparos
  20+ ACFB
  21+ ACFB 7E           	ld a,(hl)
  22+ ACFC A7           	and a
  23+ ACFD C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ ACFE
  25+ ACFE EB           	ex de,hl
  26+ ACFF
  27+ ACFF 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AD00 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AD01
  30+ AD01              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AD01
  32+ AD01 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AD02 7E           	ld a,(hl)
  34+ AD03 23           	inc hl
  35+ AD04 77           	ld (hl),a
  36+ AD05
  37+ AD05 EB           	ex de,hl						; Habilitamos disparo.
  38+ AD06 3E 01        	ld a,1
  39+ AD08 77           	ld (hl),a
  40+ AD09 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2179  AD0A              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AD0A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AD0A              ;
   3+ AD0A              ;	11/03/24
   4+ AD0A              ;
   5+ AD0A              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AD0A              ;   DE contiene Puntero_objeto.
   7+ AD0A              ;   IX contiene el Puntero de impresión.
   8+ AD0A
   9+ AD0A              Genera_datos_de_impresion
  10+ AD0A
  11+ AD0A ED 73 F2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ AD0E 31 BD 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ AD11 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ AD13
  15+ AD13 2A 01 8A         ld hl,(Scanlines_album_SP)
  16+ AD16
  17+ AD16 3E 05            ld a,5
  18+ AD18 85               add l
  19+ AD19 6F               ld l,a
  20+ AD1A
  21+ AD1A F9               ld sp,hl
  22+ AD1B 22 01 8A         ld (Scanlines_album_SP),hl
  23+ AD1E
  24+ AD1E 21 00 00         ld hl,0
  25+ AD21
  26+ AD21 DD E5            push ix
  27+ AD23 3B               dec sp
  28+ AD24 ED 7A            adc hl,sp
  29+ AD26 D5               push de
  30+ AD27
  31+ AD27              ; Recuperamos SP.
  32+ AD27
  33+ AD27 ED 7B F2 89      ld sp,(Stack)
  34+ AD2B
  35+ AD2B E5               push hl
  36+ AD2C F1               pop af
  37+ AD2D 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ AD2E
  39+ AD2E              ; Tenemos el encabezado listo.
  40+ AD2E              ; Preparamos registros para generar los scanlines.
  41+ AD2E
  42+ AD2E DD E5            push ix
  43+ AD30 E1               pop hl                                          ; 1er scanline en HL.
  44+ AD31
  45+ AD31 ED 5B 01 8A      ld de,(Scanlines_album_SP)
  46+ AD35
  47+ AD35              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ AD35              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ AD35
  50+ AD35 7C               ld a,h
  51+ AD36 FE 50            cp $50
  52+ AD38 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ AD3A
  54+ AD3A 20 05            jr nz,2F
  55+ AD3C
  56+ AD3C 7D               ld a,l
  57+ AD3D FE E0            cp $e0
  58+ AD3F 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ AD41
  60+ AD41 7D           2 ld a,l
  61+ AD42 FE C0            cp $c0
  62+ AD44 D2 D6 AD         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ AD47
  64+ AD47              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ AD47
  66+ AD47 CD F8 94         call NextScan
  67+ AD4A EB               ex de,hl
  68+ AD4B
  69+ AD4B 73               ld (hl),e
  70+ AD4C 23               inc hl
  71+ AD4D 72               ld (hl),d
  72+ AD4E 23               inc hl
  73+ AD4F
  74+ AD4F EB               ex de,hl
  75+ AD50
  76+ AD50 CD F8 94         call NextScan
  77+ AD53 EB               ex de,hl
  78+ AD54
  79+ AD54 73               ld (hl),e
  80+ AD55 23               inc hl
  81+ AD56 72               ld (hl),d
  82+ AD57 23               inc hl
  83+ AD58
  84+ AD58 EB               ex de,hl
  85+ AD59
  86+ AD59 CD F8 94         call NextScan
  87+ AD5C EB               ex de,hl
  88+ AD5D
  89+ AD5D 73               ld (hl),e
  90+ AD5E 23               inc hl
  91+ AD5F 72               ld (hl),d
  92+ AD60 23               inc hl
  93+ AD61
  94+ AD61 EB               ex de,hl
  95+ AD62
  96+ AD62 CD F8 94         call NextScan
  97+ AD65 EB               ex de,hl
  98+ AD66
  99+ AD66 73               ld (hl),e
 100+ AD67 23               inc hl
 101+ AD68 72               ld (hl),d
 102+ AD69 23               inc hl
 103+ AD6A
 104+ AD6A EB               ex de,hl
 105+ AD6B
 106+ AD6B CD F8 94         call NextScan
 107+ AD6E EB               ex de,hl
 108+ AD6F
 109+ AD6F 73               ld (hl),e
 110+ AD70 23               inc hl
 111+ AD71 72               ld (hl),d
 112+ AD72 23               inc hl
 113+ AD73
 114+ AD73 EB               ex de,hl
 115+ AD74
 116+ AD74 CD F8 94         call NextScan
 117+ AD77 EB               ex de,hl
 118+ AD78
 119+ AD78 73               ld (hl),e
 120+ AD79 23               inc hl
 121+ AD7A 72               ld (hl),d
 122+ AD7B 23               inc hl
 123+ AD7C
 124+ AD7C EB               ex de,hl
 125+ AD7D
 126+ AD7D CD F8 94         call NextScan
 127+ AD80 EB               ex de,hl
 128+ AD81
 129+ AD81 73               ld (hl),e
 130+ AD82 23               inc hl
 131+ AD83 72               ld (hl),d
 132+ AD84 23               inc hl
 133+ AD85
 134+ AD85 EB               ex de,hl
 135+ AD86
 136+ AD86 CD F8 94         call NextScan
 137+ AD89 EB               ex de,hl
 138+ AD8A
 139+ AD8A 73               ld (hl),e
 140+ AD8B 23               inc hl
 141+ AD8C 72               ld (hl),d
 142+ AD8D 23               inc hl
 143+ AD8E
 144+ AD8E EB               ex de,hl
 145+ AD8F
 146+ AD8F CD F8 94         call NextScan
 147+ AD92 EB               ex de,hl
 148+ AD93
 149+ AD93 73               ld (hl),e
 150+ AD94 23               inc hl
 151+ AD95 72               ld (hl),d
 152+ AD96 23               inc hl
 153+ AD97
 154+ AD97 EB               ex de,hl
 155+ AD98
 156+ AD98 CD F8 94         call NextScan
 157+ AD9B EB               ex de,hl
 158+ AD9C
 159+ AD9C 73               ld (hl),e
 160+ AD9D 23               inc hl
 161+ AD9E 72               ld (hl),d
 162+ AD9F 23               inc hl
 163+ ADA0
 164+ ADA0 EB               ex de,hl
 165+ ADA1
 166+ ADA1 CD F8 94         call NextScan
 167+ ADA4 EB               ex de,hl
 168+ ADA5
 169+ ADA5 73               ld (hl),e
 170+ ADA6 23               inc hl
 171+ ADA7 72               ld (hl),d
 172+ ADA8 23               inc hl
 173+ ADA9
 174+ ADA9 EB               ex de,hl
 175+ ADAA
 176+ ADAA CD F8 94         call NextScan
 177+ ADAD EB               ex de,hl
 178+ ADAE
 179+ ADAE 73               ld (hl),e
 180+ ADAF 23               inc hl
 181+ ADB0 72               ld (hl),d
 182+ ADB1 23               inc hl
 183+ ADB2
 184+ ADB2 EB               ex de,hl
 185+ ADB3
 186+ ADB3 CD F8 94         call NextScan
 187+ ADB6 EB               ex de,hl
 188+ ADB7
 189+ ADB7 73               ld (hl),e
 190+ ADB8 23               inc hl
 191+ ADB9 72               ld (hl),d
 192+ ADBA 23               inc hl
 193+ ADBB
 194+ ADBB EB               ex de,hl
 195+ ADBC
 196+ ADBC CD F8 94         call NextScan
 197+ ADBF EB               ex de,hl
 198+ ADC0
 199+ ADC0 73               ld (hl),e
 200+ ADC1 23               inc hl
 201+ ADC2 72               ld (hl),d
 202+ ADC3 23               inc hl
 203+ ADC4
 204+ ADC4 EB               ex de,hl
 205+ ADC5
 206+ ADC5 CD F8 94         call NextScan
 207+ ADC8 EB               ex de,hl
 208+ ADC9
 209+ ADC9 73               ld (hl),e
 210+ ADCA 23               inc hl
 211+ ADCB 72               ld (hl),d
 212+ ADCC 23               inc hl
 213+ ADCD
 214+ ADCD              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ ADCD
 216+ ADCD 22 01 8A         ld (Scanlines_album_SP),hl
 217+ ADD0
 218+ ADD0              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ ADD0
 220+ ADD0 08               ex af,af
 221+ ADD1
 222+ ADD1 F5               push af
 223+ ADD2 E1               pop hl
 224+ ADD3
 225+ ADD3 36 10            ld (hl),16
 226+ ADD5
 227+ ADD5 C9               ret
 228+ ADD6
 229+ ADD6              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ ADD6
 231+ ADD6              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ ADD6
 233+ ADD6 3E 57            ld a,$57
 234+ ADD8 94               sub h
 235+ ADD9 47               ld b,a
 236+ ADDA
 237+ ADDA 3E DF            ld a,$df
 238+ ADDC BD               cp l
 239+ ADDD 38 04            jr c,1F
 240+ ADDF
 241+ ADDF 3E 08            ld a,8
 242+ ADE1 80               add b
 243+ ADE2 47               ld b,a
 244+ ADE3
 245+ ADE3              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ ADE3              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ ADE3
 248+ ADE3 48           1 ld c,b
 249+ ADE4 0C               inc c
 250+ ADE5
 251+ ADE5 04               inc b
 252+ ADE6 05               dec b
 253+ ADE7 20 02            jr nz,3F
 254+ ADE9
 255+ ADE9 18 0B            jr 6F
 256+ ADEB
 257+ ADEB CD F8 94     3 call NextScan
 258+ ADEE EB               ex de,hl
 259+ ADEF
 260+ ADEF 73               ld (hl),e
 261+ ADF0 23               inc hl
 262+ ADF1 72               ld (hl),d
 263+ ADF2 23               inc hl
 264+ ADF3
 265+ ADF3 EB               ex de,hl
 266+ ADF4 10 F5            djnz 3B
 267+ ADF6
 268+ ADF6 ED 53 01 8A  6 ld (Scanlines_album_SP),de
 269+ ADFA
 270+ ADFA 08           5 ex af,af
 271+ ADFB F5               push af
 272+ ADFC E1               pop hl
 273+ ADFD
 274+ ADFD 71               ld (hl),c
 275+ ADFE
 276+ ADFE C9               ret
 277+ ADFF
# file closed: Genera_datos_de_impresion.asm
2180  ADFF
2181  ADFF              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ ADFF              ; -----------------------------------------------------------------------------
   2+ ADFF              ;
   3+ ADFF              ;   11/03/24
   4+ ADFF              ;
   5+ ADFF
   6+ ADFF                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 F2 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 01 8A      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B F2 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 01 8A      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B F2 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2182  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD EC 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A B9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A B7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 A7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 58 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A C1 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A C1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 C1 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A C1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 C1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 C1 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A C3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD 99 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD 99 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A B9 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD 99 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD 99 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD 99 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A A7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A C5 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A B9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A AB 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A AB 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 A6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A C1 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 A7 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 A7 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 C1 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A C1 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 A7 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 A7 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 C1 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD 07 95     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 A7 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD F8 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 A7 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A B9 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD 99 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 B9 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 C3 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 C5 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 B9 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 C3 89     	ld (Limite_horizontal),hl
 381+ 940D 21 C5 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 B9 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 C3 89     	ld (Limite_horizontal),hl
 392+ 9425 21 C5 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 B9 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 C3 89     	ld (Limite_horizontal),hl
 401+ 9438 21 C5 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A A7 89     	ld hl,(Posicion_actual)
 410+ 9444 CD B7 AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 C1 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A B9 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A AB 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 C2 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 C2 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A AB 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 C2 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 C2 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A B9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A A7 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD E0 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD 07 95     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD E0 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD 07 95     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A A9 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94D5
 546+ 94D5 3A C1 89     	ld a,(Ctrl_0)
 547+ 94D8 CB 77        	bit 6,a
 548+ 94DA C8           	ret z
 549+ 94DB
 550+ 94DB              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94DB              ; _ entidad / Amadeus´.
 552+ 94DB
 553+ 94DB DD 22 3E 87  	ld (p.imp.amadeus),ix
 554+ 94DF
 555+ 94DF C9           	ret
 556+ 94E0
 557+ 94E0              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94E0              ;
 559+ 94E0              ;	2/1/23
 560+ 94E0              ;
 561+ 94E0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94E0              ;
 563+ 94E0              ;	Tras esta rutina tenemos:
 564+ 94E0              ;
 565+ 94E0              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94E0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94E0              ;
 568+ 94E0              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94E0
 570+ 94E0 2A A7 89     Operandos ld hl,(Posicion_actual)
 571+ 94E3 3A C2 89     	ld a,(Columnas)
 572+ 94E6 3D           	dec a
 573+ 94E7 20 01        	jr nz,1F
 574+ 94E9 3C           	inc a
 575+ 94EA 47           1 ld b,a
 576+ 94EB C9           	ret
 577+ 94EC
 578+ 94EC              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94EC              ;
 580+ 94EC              ;	Prepara_draw
 581+ 94EC              ;
 582+ 94EC              ;	Es una rutina de carga.
 583+ 94EC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94EC              ;
 585+ 94EC              ;	FUNCIONAMIENTO:
 586+ 94EC              ;
 587+ 94EC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94EC              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94EC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94EC              ;
 591+ 94EC              ;	DESTRUYE:
 592+ 94EC              ;
 593+ 94EC              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94EC
 595+ 94EC 21 A5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94EF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94F0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94F1 4E           	ld c,(hl)
 599+ 94F2 2A A7 89     	ld hl,(Posicion_actual)
 600+ 94F5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94F7 C9           	ret
 602+ 94F8
 603+ 94F8              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F8              ;
 605+ 94F8              ;	5/08/22
 606+ 94F8              ;
 607+ 94F8              ;   NextScan.
 608+ 94F8              ;
 609+ 94F8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F8              ;
 611+ 94F8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F8              ;
 613+ 94F8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F8              ;
 615+ 94F8              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F8              ;
 617+ 94F8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F8              ;
 619+ 94F8
 620+ 94F8 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F9 7C               ld a,h
 622+ 94FA E6 07            and 7
 623+ 94FC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94FD
 625+ 94FD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94FE C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 9500 6F               ld l,a
 628+ 9501 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 9502
 630+ 9502 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 9503 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 9505 67               ld h,a
 633+ 9506 C9               ret
 634+ 9507
 635+ 9507              ;----------------------------------------------------------------------------------------------------------------
 636+ 9507              ;
 637+ 9507              ;	5/08/22
 638+ 9507              ;
 639+ 9507              ;   PreviousScan.
 640+ 9507              ;
 641+ 9507              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 9507              ;
 643+ 9507              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 9507              ;
 645+ 9507              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 9507              ;
 647+ 9507              ;       DESTRUIDOS: AF y HL !!!
 648+ 9507              ;
 649+ 9507              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 9507              ;
 651+ 9507
 652+ 9507 7C           PreviousScan ld a,h
 653+ 9508 25               dec h               ; Dec H.
 654+ 9509 E6 07            and 7
 655+ 950B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 950C
 657+ 950C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 950D D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 950F 6F               ld l,a
 660+ 9510 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9511
 662+ 9511 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 9512 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 9514 67               ld h,a
 665+ 9515 C9               ret
 666+ 9516
 667+ 9516
 668+ 9516
 669+ 9516
 670+ 9516
 671+ 9516
 672+ 9516
 673+ 9516
 674+ 9516
 675+ 9516
 676+ 9516
 677+ 9516
# file closed: Draw_XOR.asm
2183  9516              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9516
   2+ 9516              ; ******************************************************************************************************************************************************************************************
   3+ 9516              ;
   4+ 9516              ;   20/05/23
   5+ 9516              ;
   6+ 9516              ;	Recompone_posicion_inicio
   7+ 9516              ;
   8+ 9516              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9516              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9516              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9516              ;	_ a una u otra rutina.
  12+ 9516
  13+ 9516              Recompone_posicion_inicio
  14+ 9516
  15+ 9516 2A B7 89     	ld hl,(Posicion_inicio)
  16+ 9519 7D           	ld a,l
  17+ 951A E6 1F        	and $1f
  18+ 951C 28 16        	jr z,1F
  19+ 951E
  20+ 951E FE 1F        	cp $1f
  21+ 9520 28 0D        	jr z,3F
  22+ 9522
  23+ 9522 21 C6 89     	ld hl,Ctrl_2
  24+ 9525 CB C6        	set 0,(hl)
  25+ 9527 2A A9 89     	ld hl,(Puntero_objeto)
  26+ 952A 22 E2 89     	ld (Repone_puntero_objeto),hl
  27+ 952D 18 08        	jr 2F
  28+ 952F
  29+ 952F CD DD 96     3 call Mov_left
  30+ 9532 18 03        	jr 2F
  31+ 9534
  32+ 9534 CD BA 95     1 call Mov_right
  33+ 9537 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953A 22 A9 89     	ld (Puntero_objeto),hl
  35+ 953D C9           	ret
  36+ 953E
  37+ 953E              ; ******************************************************************************************************************************************************************************************
  38+ 953E              ;
  39+ 953E              ;   27/05/23
  40+ 953E              ;
  41+ 953E              ;	Mov_down
  42+ 953E              ;
  43+ 953E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953E              ;
  45+ 953E              ;
  46+ 953E              Mov_down
  47+ 953E
  48+ 953E CD A8 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9541              ;																	; _ repone (Puntero_objeto).
  50+ 9541 21 C1 89     	ld hl,Ctrl_0
  51+ 9544 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9546              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9546              ; 																	; _ en el caso de que no lo haya.
  54+ 9546 3A CC 89     	ld a,(Vel_down)
  55+ 9549 47           	ld b,a
  56+ 954A 2A A7 89         ld hl,(Posicion_actual)
  57+ 954D CD 99 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9550 E6 02        	and 2
  59+ 9552 28 17        	jr z,1F
  60+ 9554
  61+ 9554              ; Nos encontramos en el último tercio de pantalla.
  62+ 9554              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9554
  64+ 9554 7C           	ld a,h
  65+ 9555 FE 57        	cp $57
  66+ 9557 20 12        	jr nz,1F
  67+ 9559
  68+ 9559 7D           	ld a,l
  69+ 955A C6 20        	add $20
  70+ 955C 30 0D        	jr nc,1F
  71+ 955E
  72+ 955E              ; ------------------------------
  73+ 955E              ;
  74+ 955E              ;	12/01/24
  75+ 955E
  76+ 955E              ;	call Reaparece_arriba
  77+ 955E CD 6A 98     	call Reinicio
  78+ 9561
  79+ 9561              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9561
  81+ 9561 3A 07 8A     	ld a,(Ctrl_3)
  82+ 9564 CB CF        	set 1,a
  83+ 9566 32 07 8A     	ld (Ctrl_3),a
  84+ 9569
  85+ 9569 18 08        	jr 3F
  86+ 956B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956B              ; ------------------------------
  89+ 956B
  90+ 956B CD F8 94     1 call NextScan
  91+ 956E 22 A7 89     	ld (Posicion_actual),hl
  92+ 9571 10 DA            djnz 2B
  93+ 9573 CD B7 AC     3 call Genera_coordenadas
  94+ 9576 C9           	ret
  95+ 9577
  96+ 9577              ; ******************************************************************************************************************************************************************************************
  97+ 9577              ;
  98+ 9577              ;   27/05/23
  99+ 9577              ;
 100+ 9577              ;	Mov_up
 101+ 9577              ;
 102+ 9577              ; 	Mueve el Sprite hacia arriba.
 103+ 9577              ;
 104+ 9577              ;
 105+ 9577              Mov_up
 106+ 9577
 107+ 9577 CD A8 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957A 21 C1 89     	ld hl,Ctrl_0
 110+ 957D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 957F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 957F              ; 																		; _ en el caso de que no lo haya.
 113+ 957F 3A CB 89     	ld a,(Vel_up)
 114+ 9582 47           	ld b,a
 115+ 9583 2A A7 89     	ld hl,(Posicion_actual)
 116+ 9586 CD 99 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9589 A7           	and a
 118+ 958A 20 10        	jr nz,1F
 119+ 958C
 120+ 958C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958C
 123+ 958C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 958F 20 0B            jr nz,1F
 126+ 9591 7D               ld a,l
 127+ 9592 D6 20            sub $20
 128+ 9594 30 06            jr nc,1F
 129+ 9596 25               dec h
 130+ 9597
 131+ 9597              ; -----------------------------
 132+ 9597 CD 4B 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959A              ;	call Reinicio
 134+ 959A              ; -----------------------------
 135+ 959A
 136+ 959A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959C CD 07 95     1 call PreviousScan
 138+ 959F 22 A7 89     	ld (Posicion_actual),hl
 139+ 95A2 10 E2            djnz 3B
 140+ 95A4 CD B7 AC     2 call Genera_coordenadas
 141+ 95A7 C9           	ret
 142+ 95A8
 143+ 95A8              ; -----------------------------
 144+ 95A8              ;
 145+ 95A8              ;	27/5/23
 146+ 95A8              ;
 147+ 95A8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A8              ;
 150+ 95A8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A8              ;
 153+ 95A8              ;	Modifica: A y (Puntero_objeto).
 154+ 95A8
 155+ 95A8 3A C6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AB CB 47        	bit 0,a
 157+ 95AD C8           	ret z
 158+ 95AE CB 87        	res 0,a
 159+ 95B0 32 C6 89     	ld (Ctrl_2),a
 160+ 95B3 2A E2 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B6 22 A9 89     	ld (Puntero_objeto),hl
 162+ 95B9 C9           	ret
 163+ 95BA
 164+ 95BA              ; ******************************************************************************************************************************************************************************************
 165+ 95BA              ;
 166+ 95BA              ;	19/10/22
 167+ 95BA              ;
 168+ 95BA              ;	Mov_right.
 169+ 95BA              ;
 170+ 95BA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BA              ;
 172+ 95BA
 173+ 95BA 3A C1 89     Mov_right ld a,(Ctrl_0)
 174+ 95BD CB 77        	bit 6,a
 175+ 95BF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C1
 177+ 95C1 CD F9 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C5
 180+ 95C5 21 C1 89     	ld hl,Ctrl_0
 181+ 95C8 CB E6        	set 4,(hl)
 182+ 95CA 18 52        	jr 8F
 183+ 95CC
 184+ 95CC 21 C1 89     10 ld hl,Ctrl_0
 185+ 95CF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D1              ; 																	; _ en el caso de que no lo haya.
 188+ 95D1 3A AB 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D6 20 46        	jr nz,8F
 191+ 95D8
 192+ 95D8 3A AD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DC 28 40        	jr z,8F
 195+ 95DE
 196+ 95DE              ; ---------- ---------- ----------
 197+ 95DE              ;
 198+ 95DE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DE
 200+ 95DE 3A CA 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E3 28 11        	jr z,1F
 203+ 95E5 38 06        	jr c,6F
 204+ 95E7 FE 04        	cp 4
 205+ 95E9 28 14        	jr z,7F
 206+ 95EB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95ED
 208+ 95ED              ; ---------- ---------- ----------
 209+ 95ED              ;
 210+ 95ED              ; Perfiles de velocidad
 211+ 95ED              ;
 212+ 95ED
 213+ 95ED 3A AD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F0 FE FE        	cp $fe
 215+ 95F2 20 2A        	jr nz,8F
 216+ 95F4 18 10        	jr 3F
 217+ 95F6 3A AD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F9 FE FD        	cp $fd
 219+ 95FB 20 21        	jr nz,8F
 220+ 95FD 18 07        	jr 3F
 221+ 95FF 3A AD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9602 FE FB        	cp $fb
 223+ 9604 20 18        	jr nz,8F
 224+ 9606
 225+ 9606              ; ---------- ---------- ----------
 226+ 9606
 227+ 9606              3
 228+ 9606 CD 39 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9609              ;	call Reinicio
 230+ 9609
 231+ 9609              ; ---------- ---------- ----------
 232+ 9609              ;
 233+ 9609              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9609
 235+ 9609 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960C CD 25 96     	call DESPLZ_DER
 238+ 960F C1           	pop bc
 239+ 9610 10 F9        	djnz 5B
 240+ 9612 2A A7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9615 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9616 22 A7 89     	ld (Posicion_actual),hl
 243+ 9619 CD B7 AC     	call Genera_coordenadas
 244+ 961C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961E
 246+ 961E              ; ---------- ---------- ----------
 247+ 961E
 248+ 961E 2A A7 89     8 ld hl,(Posicion_actual)
 249+ 9621 CD 25 96     	call DESPLZ_DER
 250+ 9624 C9           2 ret
 251+ 9625
 252+ 9625              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9625              ;
 254+ 9625              ;	22/9/22
 255+ 9625              ;
 256+ 9625
 257+ 9625 CD 34 96     DESPLZ_DER call Desplaza_derecha
 258+ 9628 CD 80 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962B CD A9 96         call Ciclo_completo
 260+ 962E 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9631 CB FE        	set 7,(hl)
 262+ 9633 C9           	ret
 263+ 9634
 264+ 9634              ; ******************************************************************************************************************************************************************************************
 265+ 9634              ;	15/02/23
 266+ 9634              ;
 267+ 9634
 268+ 9634 3A CA 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9637 47           	ld b,a
 270+ 9638 2A B3 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963B 23           1 inc hl
 272+ 963C 23           	inc hl
 273+ 963D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 963F 22 B3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9642 CD 1C 8D     	call Extrae_address
 276+ 9645 22 A9 89     	ld (Puntero_objeto),hl
 277+ 9648
 278+ 9648              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9648
 280+ 9648              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9648              ; Cuántos movimientos hemos hecho ??
 282+ 9648              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9648
 284+ 9648 2A AF 89     7 ld hl,(Indice_Sprite_der)
 285+ 964B EB           	ex de,hl
 286+ 964C A7           	and a
 287+ 964D ED 52        	sbc hl,de
 288+ 964F CB 3D        	srl l
 289+ 9651 3E 08        6 ld a,8
 290+ 9653 95           	sub l
 291+ 9654 30 1E        	jr nc,3F
 292+ 9656
 293+ 9656              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9656              ; B="0".
 295+ 9656
 296+ 9656 04           4 inc b
 297+ 9657 3C           	inc a
 298+ 9658 20 FC        	jr nz,4B
 299+ 965A 78           	ld a,b
 300+ 965B 08           	ex af,af
 301+ 965C 2A AF 89     	ld hl,(Indice_Sprite_der)
 302+ 965F 23           5 inc hl
 303+ 9660 23           	inc hl
 304+ 9661 10 FC        	djnz 5B
 305+ 9663 22 B3 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9666 CD 1C 8D     	call Extrae_address
 307+ 9669 22 A9 89     	ld (Puntero_objeto),hl
 308+ 966C
 309+ 966C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966C              ; _(Posicion_actual).
 311+ 966C
 312+ 966C 21 A7 89     	ld hl,Posicion_actual
 313+ 966F 34           	inc (hl)
 314+ 9670 08               ex af,af
 315+ 9671 6F           	ld l,a
 316+ 9672 18 DD        	jr 6B
 317+ 9674
 318+ 9674              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9674
 320+ 9674 47           3 ld b,a
 321+ 9675 2A B1 89     	ld hl,(Indice_Sprite_izq)
 322+ 9678 23           2 inc hl
 323+ 9679 23           	inc hl
 324+ 967A 10 FC        	djnz 2B
 325+ 967C 22 B5 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 967F C9           8 ret
 327+ 9680
 328+ 9680              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9680              ;
 330+ 9680              ;	24/7/22
 331+ 9680              ;
 332+ 9680              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9680              ;
 334+ 9680              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9680              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9680              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9680
 338+ 9680 3A AD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9683 A7           	and a
 340+ 9684 20 1F        	jr nz,1F
 341+ 9686 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9688 32 AD 89         ld (CTRL_DESPLZ),a
 343+ 968B
 344+ 968B 21 A6 89     	ld hl,Columns
 345+ 968E 34           	inc (hl)
 346+ 968F 3A B9 89     	ld a,(Cuad_objeto)
 347+ 9692 E6 01        	and 1
 348+ 9694 28 0F        	jr z,1F
 349+ 9696 2A A7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9699 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969A 22 A7 89     	ld (Posicion_actual),hl
 352+ 969D CD B7 AC     	call Genera_coordenadas
 353+ 96A0 CD 05 98     	call Inc_CTRL_DESPLZ
 354+ 96A3 18 03        	jr 2F
 355+ 96A5 CD 05 98     1 call Inc_CTRL_DESPLZ
 356+ 96A8 C9           2 ret
 357+ 96A9
 358+ 96A9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A9              ;
 360+ 96A9              ;	24/7/22
 361+ 96A9              ;
 362+ 96A9              ;	Ciclo_completo.
 363+ 96A9              ;
 364+ 96A9              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A9              ;
 366+ 96A9              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A9              ; 	Decrementamos (Columns).
 368+ 96A9              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A9              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A9
 371+ 96A9
 372+ 96A9 3A AD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AC FE FF        	cp $ff
 374+ 96AE 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B0 E6 F0        	and $f0
 376+ 96B2 20 28        	jr nz,3F
 377+ 96B4
 378+ 96B4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B4
 380+ 96B4 3A AD 89     	ld a,(CTRL_DESPLZ)
 381+ 96B7 47           	ld b,a
 382+ 96B8 3E F8        	ld a,$f8
 383+ 96BA 80           	add b
 384+ 96BB 32 AD 89     	ld (CTRL_DESPLZ),a
 385+ 96BE 18 1C        	jr 3F
 386+ 96C0 21 A6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C5 32 AD 89     	ld (CTRL_DESPLZ),a
 390+ 96C8 3A B9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CD 20 0A        	jr nz,2F
 393+ 96CF 2A A7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D2 23           	inc hl
 395+ 96D3 22 A7 89     	ld (Posicion_actual),hl
 396+ 96D6 CD B7 AC     	call Genera_coordenadas
 397+ 96D9
 398+ 96D9              ; Inicia el puntero de Sprite.
 399+ 96D9
 400+ 96D9 CD 31 8D     2 call Inicia_puntero_objeto_der
 401+ 96DC C9           3 ret
 402+ 96DD
 403+ 96DD              ; ******************************************************************************************************************************************************************************************
 404+ 96DD              ;
 405+ 96DD              ;	15/02/23
 406+ 96DD              ;
 407+ 96DD              ;	Mov_left.
 408+ 96DD              ;
 409+ 96DD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DD              ;
 411+ 96DD              Mov_left
 412+ 96DD
 413+ 96DD 21 C1 89     	ld hl,Ctrl_0
 414+ 96E0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E2              ; 																	; _ en el caso de que no lo haya.
 417+ 96E2 3A C1 89     	ld a,(Ctrl_0)
 418+ 96E5 CB 77        	bit 6,a
 419+ 96E7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E9
 421+ 96E9 CD FF 97     	call Stop_Amadeus_left
 422+ 96EC C8           	ret z
 423+ 96ED 20 4A        	jr nz,8F
 424+ 96EF
 425+ 96EF 3A AB 89     11 ld a,(Coordenada_X)
 426+ 96F2 A7           	and a
 427+ 96F3 20 44        	jr nz,8F
 428+ 96F5
 429+ 96F5 3A AD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FB
 433+ 96FB              ; ---------- ---------- ----------
 434+ 96FB
 435+ 96FB 3A C9 89     	ld a,(Vel_left)
 436+ 96FE FE 02        	cp 2
 437+ 9700 28 0F        	jr z,1F
 438+ 9702 38 04        	jr c,6F
 439+ 9704 FE 04        	cp 4
 440+ 9706 28 12        	jr z,7F
 441+ 9708
 442+ 9708              ; ---------- ---------- ----------
 443+ 9708
 444+ 9708 3A AD 89     6 ld a,(CTRL_DESPLZ)
 445+ 970B FE F8        	cp $f8
 446+ 970D 20 2A        	jr nz,8F
 447+ 970F 18 10        	jr 4F
 448+ 9711 3A AD 89     1 ld a,(CTRL_DESPLZ)
 449+ 9714 FE F9        	cp $f9
 450+ 9716 20 21        	jr nz,8F
 451+ 9718 18 07        	jr 4F
 452+ 971A 3A AD 89     7 ld a,(CTRL_DESPLZ)
 453+ 971D FE FB        	cp $fb
 454+ 971F 20 18        	jr nz,8F
 455+ 9721
 456+ 9721              ; ---------- ---------- ----------
 457+ 9721
 458+ 9721              4
 459+ 9721 CD 27 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9724              ;	call Reinicio
 461+ 9724
 462+ 9724              ; ---------- ---------- ----------
 463+ 9724
 464+ 9724 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9726 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9727
 467+ 9727              ;	ld hl,(Indice_Sprite_izq)
 468+ 9727              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9727
 470+ 9727 CD 40 97     	call DESPLZ_IZQ
 471+ 972A C1           	pop bc
 472+ 972B 10 F9        	djnz 5B
 473+ 972D 2A A7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9730 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9731 22 A7 89     	ld (Posicion_actual),hl
 476+ 9734 CD B7 AC     	call Genera_coordenadas
 477+ 9737 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9739
 479+ 9739              ; ---------- ---------- ----------
 480+ 9739
 481+ 9739              ; Movemos, no hay recolocación.
 482+ 9739
 483+ 9739 2A A7 89     8 ld hl,(Posicion_actual)
 484+ 973C CD 40 97     	call DESPLZ_IZQ
 485+ 973F C9           2 ret
 486+ 9740
 487+ 9740              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9740              ;
 489+ 9740              ;	22/9/22
 490+ 9740
 491+ 9740              DESPLZ_IZQ
 492+ 9740
 493+ 9740 CD 4F 97     	call Desplaza_izquierda
 494+ 9743 CD 9B 97         call modifica_parametros_1er_DESPLZ
 495+ 9746 CD C3 97     	call Ciclo_completo_2
 496+ 9749 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974C CB BE        	res 7,(hl)
 498+ 974E C9           	ret
 499+ 974F
 500+ 974F              Desplaza_izquierda
 501+ 974F
 502+ 974F 3A C9 89     	ld a,(Vel_left)
 503+ 9752 47           	ld b,a
 504+ 9753 2A B5 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9756 23           1 inc hl
 506+ 9757 23           	inc hl
 507+ 9758 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975A 22 B5 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975D CD 1C 8D     	call Extrae_address
 510+ 9760 22 A9 89     	ld (Puntero_objeto),hl
 511+ 9763
 512+ 9763              ; Modifica (Puntero_DESPLZ_der).
 513+ 9763
 514+ 9763              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9763              ; Cuántos movimientos hemos hecho ??
 516+ 9763              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9763
 518+ 9763 2A B1 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9766 EB           	ex de,hl
 520+ 9767 A7           	and a
 521+ 9768 ED 52        	sbc hl,de
 522+ 976A CB 3D        	srl l
 523+ 976C 3E 08        6 ld a,8
 524+ 976E 95           	sub l
 525+ 976F 30 1E        	jr nc,3F
 526+ 9771
 527+ 9771              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9771              ; B="0".
 529+ 9771
 530+ 9771 04           4 inc b
 531+ 9772 3C           	inc a
 532+ 9773 20 FC        	jr nz,4B
 533+ 9775 78           	ld a,b
 534+ 9776 08           	ex af,af
 535+ 9777 2A B1 89     	ld hl,(Indice_Sprite_izq)
 536+ 977A 23           5 inc hl
 537+ 977B 23           	inc hl
 538+ 977C 10 FC        	djnz 5B
 539+ 977E 22 B5 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9781 CD 1C 8D     	call Extrae_address
 541+ 9784 22 A9 89     	ld (Puntero_objeto),hl
 542+ 9787
 543+ 9787              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9787              ; _(Posicion_actual).
 545+ 9787
 546+ 9787 21 A7 89     	ld hl,Posicion_actual
 547+ 978A 35           	dec (hl)
 548+ 978B 08           	ex af,af
 549+ 978C 6F           	ld l,a
 550+ 978D 18 DD        	jr 6B
 551+ 978F
 552+ 978F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 978F
 554+ 978F 47           3 ld b,a
 555+ 9790 2A AF 89     	ld hl,(Indice_Sprite_der)
 556+ 9793 23           2 inc hl
 557+ 9794 23           	inc hl
 558+ 9795 10 FC        	djnz 2B
 559+ 9797 22 B3 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979A C9           8 ret
 561+ 979B
 562+ 979B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979B              ;
 564+ 979B              ;	modifica_parametros_1er_DESPLZ
 565+ 979B              ;
 566+ 979B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979B
 570+ 979B 3A AD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979E A7           	and a
 572+ 979F 20 1E        	jr nz,1F
 573+ 97A1 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A2 32 AD 89         ld (CTRL_DESPLZ),a
 575+ 97A5 21 A6 89     	ld hl,Columns
 576+ 97A8 34           	inc (hl)
 577+ 97A9 3A B9 89     	ld a,(Cuad_objeto)
 578+ 97AC E6 01        	and 1
 579+ 97AE 20 0F        	jr nz,1F
 580+ 97B0 2A A7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B4 22 A7 89     	ld (Posicion_actual),hl
 583+ 97B7 CD B7 AC     	call Genera_coordenadas
 584+ 97BA CD 16 98     	call Dec_CTRL_DESPLZ
 585+ 97BD 18 03        	jr 2F
 586+ 97BF CD 16 98     1 call Dec_CTRL_DESPLZ
 587+ 97C2 C9           2 ret
 588+ 97C3
 589+ 97C3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C3
 591+ 97C3 3A AD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C6 FE F7        	cp $f7
 593+ 97C8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CA 30 2C        	jr nc,3F
 595+ 97CC
 596+ 97CC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CC
 598+ 97CC 06 00        	ld b,0
 599+ 97CE 04           4 inc b
 600+ 97CF 3C           	inc a
 601+ 97D0 FE F7        	cp $f7
 602+ 97D2 20 FA        	jr nz,4B
 603+ 97D4 3E FF        	ld a,$ff
 604+ 97D6 90           	sub b
 605+ 97D7 32 AD 89     	ld (CTRL_DESPLZ),a
 606+ 97DA 18 1C        	jr 3F
 607+ 97DC
 608+ 97DC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DC
 610+ 97DC 21 A6 89     1 ld hl,Columns
 611+ 97DF 35           	dec (hl)
 612+ 97E0 AF           	xor a
 613+ 97E1 32 AD 89     	ld (CTRL_DESPLZ),a
 614+ 97E4 3A B9 89     	ld a,(Cuad_objeto)
 615+ 97E7 E6 01        	and 1
 616+ 97E9 28 0A        	jr z,2F
 617+ 97EB 2A A7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EE 2B           	dec hl
 619+ 97EF 22 A7 89     	ld (Posicion_actual),hl
 620+ 97F2 CD B7 AC     	call Genera_coordenadas
 621+ 97F5
 622+ 97F5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F5
 624+ 97F5 CD 44 8D     2 call Inicia_puntero_objeto_izq
 625+ 97F8 C9           3 ret
 626+ 97F9
 627+ 97F9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F9              ;
 629+ 97F9              ;	19/10/22
 630+ 97F9              ;
 631+ 97F9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F9
 634+ 97F9 3A AB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FE C9           	ret
 637+ 97FF
 638+ 97FF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97FF              ;
 640+ 97FF              ;	19/10/22
 641+ 97FF              ;
 642+ 97FF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97FF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97FF
 645+ 97FF 3A AB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9802 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9804 C9           	ret
 648+ 9805
 649+ 9805              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9805              ;
 651+ 9805              ;	24/7/22
 652+ 9805              ;
 653+ 9805              ;	Inc_CTRL_DESPLZ
 654+ 9805              ;
 655+ 9805              ;
 656+ 9805              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9805
 658+ 9805 21 AD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9808 3A CA 89     	ld a,(Vel_right)
 660+ 980B A7           	and a
 661+ 980C 28 06        	jr z,1F
 662+ 980E 47           	ld b,a
 663+ 980F 34           3 inc (hl)
 664+ 9810 10 FD        	djnz 3B
 665+ 9812 18 01        	jr 2F
 666+ 9814 34           1 inc (hl)
 667+ 9815 C9           2 ret
 668+ 9816
 669+ 9816              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9816              ;
 671+ 9816              ;	5/2/23
 672+ 9816              ;
 673+ 9816              ;	Dec_CTRL_DESPLZ
 674+ 9816              ;
 675+ 9816              ;
 676+ 9816              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9816
 678+ 9816 21 AD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9819 3A C9 89     	ld a,(Vel_left)
 680+ 981C A7           	and a
 681+ 981D 28 06        	jr z,1F
 682+ 981F 47           	ld b,a
 683+ 9820 35           3 dec (hl)
 684+ 9821 10 FD        	djnz 3B
 685+ 9823 18 01        	jr 2F
 686+ 9825 35           1 dec (hl)
 687+ 9826 C9           2 ret
 688+ 9827
 689+ 9827              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9827
 691+ 9827 2A A7 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982A 01 1F 00     	ld bc,31
 693+ 982D A7           	and a
 694+ 982E ED 4A        	adc hl,bc
 695+ 9830 22 A7 89     	ld (Posicion_actual),hl
 696+ 9833 21 C1 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9836 CB C6        	set 0,(hl)
 698+ 9838 C9           	ret
 699+ 9839
 700+ 9839              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9839
 702+ 9839 2A A7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983C 01 1F 00     	ld bc,31
 704+ 983F A7           	and a
 705+ 9840 ED 42        	sbc hl,bc
 706+ 9842 22 A7 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9845 21 C1 89     	ld hl,Ctrl_0
 708+ 9848 CB CE        	set 1,(hl)
 709+ 984A C9           	ret
 710+ 984B
 711+ 984B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984B
 713+ 984B 24           Reaparece_abajo inc h
 714+ 984C 01 E0 17     	ld bc,$17e0
 715+ 984F A7           	and a
 716+ 9850 ED 4A        	adc hl,bc
 717+ 9852 22 A7 89     	ld (Posicion_actual),hl
 718+ 9855 21 C1 89     	ld hl,Ctrl_0
 719+ 9858 CB D6        	set 2,(hl)
 720+ 985A C9           	ret
 721+ 985B
 722+ 985B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985B
 724+ 985B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985E A7           	and a
 726+ 985F ED 42        	sbc hl,bc
 727+ 9861 22 A7 89     	ld (Posicion_actual),hl
 728+ 9864 21 C1 89     	ld hl,Ctrl_0
 729+ 9867 CB DE        	set 3,(hl)
 730+ 9869 C9           	ret
 731+ 986A
 732+ 986A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986A              ;
 734+ 986A              ;	15/07/23
 735+ 986A
 736+ 986A              Reinicio
 737+ 986A
 738+ 986A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986A
 740+ 986A AF           	xor a
 741+ 986B 21 D9 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986E CD 8C 98     	call Limpia_contenido_hl
 743+ 9871
 744+ 9871 21 A7 89     	ld hl,Posicion_actual
 745+ 9874 CD 8C 98     	call Limpia_contenido_hl
 746+ 9877
 747+ 9877 CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 987A CD 58 99     	call Inicia_Puntero_mov
 749+ 987D
 750+ 987D 21 DB 89     	ld hl,Incrementa_puntero
 751+ 9880 06 05        	ld b,5
 752+ 9882 77           1 ld (hl),a
 753+ 9883 23           	inc hl
 754+ 9884 10 FC        	djnz 1B
 755+ 9886
 756+ 9886 21 C6 89     	ld hl,Ctrl_2
 757+ 9889 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988B
 759+ 988B C9           	ret
 760+ 988C
 761+ 988C 77           Limpia_contenido_hl	ld (hl),a
 762+ 988D 23           	inc hl
 763+ 988E 77           	ld (hl),a
 764+ 988F C9           	ret
 765+ 9890
 766+ 9890
# file closed: Direcciones.asm
2184  9890              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9890              ; ----- ----- ----- ----- -----
   2+ 9890              ;
   3+ 9890              ;   28/12/23
   4+ 9890
   5+ 9890              Movimiento
   6+ 9890
   7+ 9890              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9890
   9+ 9890 3A C6 89         ld a,(Ctrl_2)
  10+ 9893 CB 57            bit 2,a
  11+ 9895 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9897
  13+ 9897 2A D7 89         ld hl,(Puntero_mov)
  14+ 989A 7E               ld a,(hl)
  15+ 989B
  16+ 989B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989B
  18+ 989B              Inicia_desplazamiento.
  19+ 989B
  20+ 989B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989B
  22+ 989B CD 8E 99         call Ajusta_velocidad_desplazamiento
  23+ 989E
  24+ 989E              ; Iniciamos (Repetimos_mov).
  25+ 989E
  26+ 989E 7E               ld a,(hl)
  27+ 989F E6 0F            and $0f
  28+ 98A1 32 DD 89         ld (Repetimos_desplazamiento),a
  29+ 98A4 32 DE 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A7
  31+ 98A7              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A7
  33+ 98A7 23               inc hl
  34+ 98A8 7E               ld a,(hl)
  35+ 98A9 32 E0 89         ld (Cola_de_desplazamiento),a
  36+ 98AC 2B               dec hl
  37+ 98AD
  38+ 98AD 21 C6 89         ld hl,Ctrl_2
  39+ 98B0 CB D6            set 2,(hl)
  40+ 98B2
  41+ 98B2              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B2              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B2
  44+ 98B2              Desplazamiento_iniciado
  45+ 98B2
  46+ 98B2 CD 62 99         call Aplica_desplazamiento
  47+ 98B5
  48+ 98B5              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B5
  50+ 98B5 3A 07 8A         ld a,(Ctrl_3)
  51+ 98B8 CB 4F            bit 1,a
  52+ 98BA C0               ret nz
  53+ 98BB
  54+ 98BB 21 DD 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BE 35               dec (hl)
  56+ 98BF C0               ret nz
  57+ 98C0
  58+ 98C0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C0              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C0              ; Analiza (Cola_de_desplazamiento).
  61+ 98C0
  62+ 98C0 3A E0 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C3 A7               and a
  64+ 98C4 CC B7 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C7 28 30            jr z,Reinicia_el_movimiento
  66+ 98C9
  67+ 98C9 FE FF            cp $ff
  68+ 98CB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CD
  70+ 98CD FE FE            cp $fe
  71+ 98CF CC 3C 99         call z,Fijamos_bucle
  72+ 98D2 28 25            jr z,Reinicia_el_movimiento
  73+ 98D4
  74+ 98D4 FE FD            cp $fd
  75+ 98D6 20 11            jr nz,1F
  76+ 98D8
  77+ 98D8              ; ---
  78+ 98D8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D8
  80+ 98D8 3A C6 89         ld a,(Ctrl_2)
  81+ 98DB CB 5F            bit 3,a
  82+ 98DD 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98DF
  84+ 98DF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98DF
  86+ 98DF 21 C6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E4
  89+ 98E4 CD 4D 99         call Inicia_Repetimos_movimiento
  90+ 98E7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E9              ; ---
  92+ 98E9
  93+ 98E9 FE 01        1 cp 1
  94+ 98EB CA 26 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98EE
  96+ 98EE 3D               dec a
  97+ 98EF 32 E0 89         ld (Cola_de_desplazamiento),a
  98+ 98F2
  99+ 98F2 3A DE 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F5 32 DD 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F8 C9               ret
 103+ 98F9
 104+ 98F9              Reinicia_el_movimiento
 105+ 98F9
 106+ 98F9 3A C6 89         ld a,(Ctrl_2)
 107+ 98FC CB 5F            bit 3,a
 108+ 98FE 28 1B            jr z,2F
 109+ 9900
 110+ 9900              ; (Cola_de_desplazamiento)="254".
 111+ 9900
 112+ 9900 21 DF 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9903 35               dec (hl)
 114+ 9904 20 15            jr nz,2F
 115+ 9906
 116+ 9906              ; Fin de las repeticiones del último movimiento.
 117+ 9906
 118+ 9906 21 C6 89         ld hl,Ctrl_2
 119+ 9909 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990B
 121+ 990B 2A D7 89         ld hl,(Puntero_mov)
 122+ 990E 23               inc hl
 123+ 990F 23               inc hl
 124+ 9910 23               inc hl
 125+ 9911 22 D7 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9914              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9914 7E               ld a,(hl)
 128+ 9915 32 E0 89         ld (Cola_de_desplazamiento),a
 129+ 9918
 130+ 9918 C3 C0 98         jp Cola
 131+ 991B
 132+ 991B CD 58 99     2 call Inicia_Puntero_mov
 133+ 991E
 134+ 991E 21 C6 89         ld hl,Ctrl_2
 135+ 9921 CB 96            res 2,(hl)
 136+ 9923
 137+ 9923 C3 90 98         jp Movimiento
 138+ 9926
 139+ 9926              Siguiente_desplazamiento
 140+ 9926
 141+ 9926              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9926              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9926
 144+ 9926 21 C6 89         ld hl,Ctrl_2
 145+ 9929 CB 96            res 2,(hl)
 146+ 992B
 147+ 992B 2A D7 89         ld hl,(Puntero_mov)
 148+ 992E 23               inc hl
 149+ 992F 23               inc hl
 150+ 9930 22 D7 89         ld (Puntero_mov),hl
 151+ 9933
 152+ 9933 7E               ld a,(hl)
 153+ 9934 A7               and a
 154+ 9935 CC B7 99         call z,Incrementa_Puntero_indice_mov
 155+ 9938 CA F9 98         jp z,Reinicia_el_movimiento
 156+ 993B
 157+ 993B C9               ret
 158+ 993C
 159+ 993C              ; Subrutinas -----------------------------------------
 160+ 993C              ; ---------- --------- --------- ---------- ----------
 161+ 993C              ;
 162+ 993C              ;   24/07/23
 163+ 993C              ;
 164+ 993C              ;   Fijamos_bucle
 165+ 993C              ;
 166+ 993C              ;
 167+ 993C
 168+ 993C              Fijamos_bucle
 169+ 993C
 170+ 993C 3A DB 89         ld a,(Incrementa_puntero)
 171+ 993F 3C               inc a
 172+ 9940 32 DC 89         ld (Incrementa_puntero_backup),a
 173+ 9943
 174+ 9943 CD B7 99         call Incrementa_Puntero_indice_mov
 175+ 9946 2A D5 89         ld hl,(Puntero_indice_mov)
 176+ 9949 22 D9 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994C C9               ret
 178+ 994D
 179+ 994D              ; ---------- --------- --------- ---------- ----------
 180+ 994D              ;
 181+ 994D              ;   07/7/23
 182+ 994D              ;
 183+ 994D              ;   Inicia_Repetimos_movimiento
 184+ 994D              ;
 185+ 994D              ;
 186+ 994D
 187+ 994D              Inicia_Repetimos_movimiento
 188+ 994D
 189+ 994D              ; Iniciamos (Repetimos_movimiento).
 190+ 994D
 191+ 994D DD 2A D7 89      ld ix,(Puntero_mov)
 192+ 9951 DD 7E 02         ld a,(ix+2)
 193+ 9954 32 DF 89         ld (Repetimos_movimiento),a
 194+ 9957
 195+ 9957 C9               ret
 196+ 9958
 197+ 9958              ; ---------- --------- --------- ---------- ----------
 198+ 9958              ;
 199+ 9958              ;   26/6/23
 200+ 9958              ;
 201+ 9958              ;   Inicia_Puntero_mov
 202+ 9958              ;
 203+ 9958              ;
 204+ 9958
 205+ 9958 2A D5 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995B CD 1C 8D         call Extrae_address
 207+ 995E 22 D7 89         ld (Puntero_mov),hl
 208+ 9961 C9               ret
 209+ 9962
 210+ 9962              ; ---------- --------- --------- ---------- ----------
 211+ 9962              ;
 212+ 9962              ;   27/06/23
 213+ 9962              ;
 214+ 9962              ;   Aplica_movimiento.
 215+ 9962
 216+ 9962              Aplica_desplazamiento
 217+ 9962
 218+ 9962              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9962
 220+ 9962 2A D7 89         ld hl, (Puntero_mov)
 221+ 9965
 222+ 9965 7E               ld a,(hl)
 223+ 9966 E6 F0            and $f0
 224+ 9968 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9969
 226+ 9969 CB 7E            bit 7,(hl)
 227+ 996B 28 03            jr z,1F
 228+ 996D CD 77 95         call Mov_up
 229+ 9970 2A D7 89     1 ld hl, (Puntero_mov)
 230+ 9973 CB 76            bit 6,(hl)
 231+ 9975 28 03            jr z,2F
 232+ 9977 CD 3E 95         call Mov_down
 233+ 997A
 234+ 997A              ; Se ha aplicado reinicio ???
 235+ 997A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997A
 237+ 997A              ;    ld a,(Ctrl_3)
 238+ 997A              ;    bit 1,a
 239+ 997A              ;    ret nz
 240+ 997A
 241+ 997A 2A D7 89     2 ld hl, (Puntero_mov)
 242+ 997D CB 6E            bit 5,(hl)
 243+ 997F 28 03            jr z,3F
 244+ 9981 CD DD 96         call Mov_left
 245+ 9984 2A D7 89     3 ld hl, (Puntero_mov)
 246+ 9987 CB 66            bit 4,(hl)
 247+ 9989 C8               ret z
 248+ 998A CD BA 95         call Mov_right
 249+ 998D C9               ret
 250+ 998E
 251+ 998E              ; ---------- --------- --------- ---------- ----------
 252+ 998E              ;
 253+ 998E              ;   26/06/23
 254+ 998E              ;
 255+ 998E              ;   Ajusta_velocidad_desplazamiento.
 256+ 998E
 257+ 998E              Ajusta_velocidad_desplazamiento
 258+ 998E
 259+ 998E              ; 1er byte de la cadena de movimiento.
 260+ 998E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998E
 262+ 998E CD AC 99         call Extrae_nibble_alto
 263+ 9991
 264+ 9991 32 CB 89         ld (Vel_up),a
 265+ 9994 79               ld a,c
 266+ 9995 E6 0F            and $0f
 267+ 9997 32 CC 89         ld (Vel_down),a
 268+ 999A
 269+ 999A              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999A
 272+ 999A 23               inc hl
 273+ 999B CD AC 99         call Extrae_nibble_alto
 274+ 999E
 275+ 999E 32 C9 89         ld (Vel_left),a
 276+ 99A1 79               ld a,c
 277+ 99A2 E6 0F            and $0f
 278+ 99A4 32 CA 89         ld (Vel_right),a
 279+ 99A7
 280+ 99A7              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A7
 282+ 99A7 23               inc hl
 283+ 99A8 22 D7 89         ld (Puntero_mov),hl
 284+ 99AB C9               ret
 285+ 99AC
 286+ 99AC 06 04        Extrae_nibble_alto ld b,4
 287+ 99AE 7E               ld a,(hl)
 288+ 99AF 4F               ld c,a
 289+ 99B0 E6 F0            and $f0
 290+ 99B2 CB 3F        1 srl a
 291+ 99B4 10 FC            djnz 1B
 292+ 99B6 C9               ret
 293+ 99B7
 294+ 99B7              ; ---------- --------- --------- ---------- ----------
 295+ 99B7              ;
 296+ 99B7              ;   5/7/23
 297+ 99B7              ;
 298+ 99B7              ;   Incrementa_Puntero_indice_mov
 299+ 99B7
 300+ 99B7              Incrementa_Puntero_indice_mov
 301+ 99B7
 302+ 99B7 21 DB 89         ld hl,Incrementa_puntero
 303+ 99BA 34               inc (hl)
 304+ 99BB
 305+ 99BB 2A D5 89         ld hl,(Puntero_indice_mov)
 306+ 99BE 01 02 00         ld bc,2
 307+ 99C1 A7               and a
 308+ 99C2 09               add hl,bc
 309+ 99C3 22 D5 89         ld (Puntero_indice_mov),hl
 310+ 99C6
 311+ 99C6 7E               ld a,(hl)
 312+ 99C7 A7               and a
 313+ 99C8
 314+ 99C8              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C8
 316+ 99C8              ;    jr z,$
 317+ 99C8
 318+ 99C8              ;! Reinicia el Patrón de movimiento.
 319+ 99C8
 320+ 99C8 CC CD 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CB
 322+ 99CB AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CC
 324+ 99CC C9               ret
 325+ 99CD
 326+ 99CD              ; ---------- --------- --------- ---------- ----------
 327+ 99CD              ;
 328+ 99CD              ;   15/01/24
 329+ 99CD              ;
 330+ 99CD              ;   Inicializa_Puntero_indice_mov
 331+ 99CD
 332+ 99CD              Inicializa_Puntero_indice_mov_2
 333+ 99CD
 334+ 99CD              ; Existe etiqueta de bucle principal???
 335+ 99CD
 336+ 99CD 2A D9 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D0 24               inc h
 338+ 99D1 25               dec h
 339+ 99D2 28 05            jr z,2F
 340+ 99D4
 341+ 99D4 22 D5 89         ld (Puntero_indice_mov),hl
 342+ 99D7 18 14            jr 3F
 343+ 99D9
 344+ 99D9              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D9
 346+ 99D9 3A DB 89     2 ld a,(Incrementa_puntero)
 347+ 99DC 47               ld b,a
 348+ 99DD
 349+ 99DD 2A D5 89         ld hl,(Puntero_indice_mov)
 350+ 99E0 2B           1 dec hl
 351+ 99E1 2B               dec hl
 352+ 99E2 10 FC            djnz 1B
 353+ 99E4 22 D5 89         ld (Puntero_indice_mov),hl
 354+ 99E7
 355+ 99E7 AF               xor a
 356+ 99E8 32 DB 89         ld (Incrementa_puntero),a
 357+ 99EB 18 06            jr 4F
 358+ 99ED
 359+ 99ED 3A DC 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F0 32 DB 89         ld (Incrementa_puntero),a
 361+ 99F3 C9           4 ret
 362+ 99F4
 363+ 99F4              ; ----------------------------------------------------------------------
 364+ 99F4              ;
 365+ 99F4              ;   30/01/24
 366+ 99F4              ;
 367+ 99F4              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F4
 369+ 99F4 3A A4 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F7 CD 1C AC         call Calcula_salto_en_BC
 371+ 99FA 21 CD 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FD A7               and a
 373+ 99FE ED 4A            adc hl,bc
 374+ 9A00 C9               ret
 375+ 9A01
 376+ 9A01              ; ----------------------------------------------------------------------
 377+ 9A01              ;
 378+ 9A01              ;   30/01/24
 379+ 9A01              ;
 380+ 9A01              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A01              ;
 382+ 9A01              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A01
 384+ 9A01 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A02 23               inc hl
 386+ 9A03 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A04 69               ld l,c
 388+ 9A05 60               ld h,b
 389+ 9A06 22 BF 89         ld (Contador_de_mov_masticados),hl
 390+ 9A09 C9               ret
 391+ 9A0A
# file closed: Movimiento.asm
2185  9A0A
2186  9A0A
2187  9A0A              ;	include "Disparo.asm"
2188  9A0A
2189  9A0A
2190  9A0A              	SAVESNA "Pruebas.sna", START
2191  9A0A
2192  9A0A
2193  9A0A
2194  9A0A
# file closed: Banco_de_pruebas.asm
