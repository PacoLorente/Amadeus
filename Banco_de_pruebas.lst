# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD DF 87     	call Frame
  15  A104
  16  A104 3A 2B 87     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Caja_1
  98+ 846A F0 84        	defw Caja_2
  99+ 846C 2D 85        	defw Caja_3
 100+ 846E 6A 85        	defw Caja_4
 101+ 8470 A7 85        	defw Caja_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 8484
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 848F
 128+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8490
 130+ 8490 00 00        	db 0,0											; Variables_de_borrado
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00        	defw 0											;	" " " " " " "
 133+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 849A
 135+ 849A 00 00        	db 0,0											; Variables_de_pintado
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00        	defw 0											;	" " " " " " "
 138+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 139+ 84A4
 140+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 141+ 84A7
 142+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 143+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 144+ 84AE
 145+ 84AE 00           	db 0 											; (Columnas).
 146+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 147+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 148+ 84B3
 149+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 150+ 84B3
 151+ 84B3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 152+ 84B5 00 00        	defw 0											; (Posicion_actual).
 153+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 154+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 155+ 84BC
 156+ 84BC 00           	db %00000000 									; (Attr).
 157+ 84BD
 158+ 84BD 00 00        	defw 0											; (Indice_Sprite_der).
 159+ 84BF 00 00        	defw 0											; (Indice_Sprite_izq).
 160+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 161+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 162+ 84C5
 163+ 84C5 00 00        	defw 0											; (Posicion_inicio).
 164+ 84C7 00           	db 0											; (Cuad_objeto).
 165+ 84C8
 166+ 84C8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 167+ 84CC
 168+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 169+ 84CD
 170+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 171+ 84CF 00 00        	defw 0											;	" " " " " " "
 172+ 84D1 00 00        	defw 0											;	" " " " " " "
 173+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 174+ 84D7
 175+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 176+ 84D9 00 00        	defw 0											;	" " " " " " "
 177+ 84DB 00 00        	defw 0											;	" " " " " " "
 178+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 179+ 84E1
 180+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 181+ 84E4
 182+ 84E4 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 183+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 184+ 84EB
 185+ 84EB 00           	db 0 											; (Columnas).
 186+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 187+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 188+ 84F0
 189+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 190+ 84F0
 191+ 84F0 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 84F2 00 00        	defw 0											; (Posicion_actual).
 193+ 84F4 00 00        	defw 0 											; (Puntero_objeto).
 194+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 84F9
 196+ 84F9 00           	db %00000000 									; (Attr).
 197+ 84FA
 198+ 84FA 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 84FC 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 8502
 203+ 8502 00 00        	defw 0											; (Posicion_inicio).
 204+ 8504 00           	db 0											; (Cuad_objeto).
 205+ 8505
 206+ 8505 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8509
 208+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 850A
 210+ 850A 00 00        	db 0,0										    ; Variables_de_borrado
 211+ 850C 00 00        	defw 0											;	" " " " " " "
 212+ 850E 00 00        	defw 0											;	" " " " " " "
 213+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 214+ 8514
 215+ 8514 00 00        	db 0,0											; Variables_de_pintado
 216+ 8516 00 00        	defw 0											;	" " " " " " "
 217+ 8518 00 00        	defw 0											;	" " " " " " "
 218+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 219+ 851E
 220+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 221+ 8521
 222+ 8521 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 223+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8528
 225+ 8528 00           	db 0 											; (Columnas).
 226+ 8529 00 00        	defw 0											; (Limite_horizontal).
 227+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 228+ 852D
 229+ 852D              ; ---------- ---------- ---------- ---------- ----------
 230+ 852D
 231+ 852D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 232+ 852F 00 00        	defw 0											; (Posicion_actual).
 233+ 8531 00 00        	defw 0 											; (Puntero_objeto).
 234+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 8536
 236+ 8536 00           	db %00000000 									; (Attr).
 237+ 8537
 238+ 8537 00 00        	defw 0											; (Indice_Sprite_der).
 239+ 8539 00 00        	defw 0											; (Indice_Sprite_izq).
 240+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 241+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 242+ 853F
 243+ 853F 00 00        	defw 0											; (Posicion_inicio).
 244+ 8541 00           	db 0											; (Cuad_objeto).
 245+ 8542
 246+ 8542 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 247+ 8546
 248+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 249+ 8547
 250+ 8547 00 00        	db 0,0										    ; Variables_de_borrado
 251+ 8549 00 00        	defw 0											;	" " " " " " "
 252+ 854B 00 00        	defw 0											;	" " " " " " "
 253+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 254+ 8551
 255+ 8551 00 00        	db 0,0											; Variables_de_pintado
 256+ 8553 00 00        	defw 0											;	" " " " " " "
 257+ 8555 00 00        	defw 0											;	" " " " " " "
 258+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 855B
 260+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 261+ 855E
 262+ 855E 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 263+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 264+ 8565
 265+ 8565 00           	db 0 											; (Columnas).
 266+ 8566 00 00        	defw 0											; (Limite_horizontal).
 267+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 268+ 856A
 269+ 856A              ; ---------- ---------- ---------- ---------- ----------
 270+ 856A
 271+ 856A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 272+ 856C 00 00        	defw 0											; (Posicion_actual).
 273+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 274+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 275+ 8573
 276+ 8573 00           	db %00000000 									; (Attr).
 277+ 8574
 278+ 8574 00 00        	defw 0											; (Indice_Sprite_der).
 279+ 8576 00 00        	defw 0											; (Indice_Sprite_izq).
 280+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 281+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 282+ 857C
 283+ 857C 00 00        	defw 0											; (Posicion_inicio).
 284+ 857E 00           	db 0											; (Cuad_objeto).
 285+ 857F
 286+ 857F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 287+ 8583
 288+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 289+ 8584
 290+ 8584 00 00        	db 0,0										    ; Variables_de_borrado
 291+ 8586 00 00        	defw 0											;	" " " " " " "
 292+ 8588 00 00        	defw 0											;	" " " " " " "
 293+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 294+ 858E
 295+ 858E 00 00        	db 0,0											; Variables_de_pintado
 296+ 8590 00 00        	defw 0											;	" " " " " " "
 297+ 8592 00 00        	defw 0											;	" " " " " " "
 298+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 299+ 8598
 300+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 301+ 859B
 302+ 859B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 303+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 304+ 85A2
 305+ 85A2 00           	db 0 											; (Columnas).
 306+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 307+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 308+ 85A7
 309+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 310+ 85A7
 311+ 85A7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 312+ 85A9 00 00        	defw 0											; (Posicion_actual).
 313+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 314+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 315+ 85B0
 316+ 85B0 00           	db %00000000 									; (Attr).
 317+ 85B1
 318+ 85B1 00 00        	defw 0											; (Indice_Sprite_der).
 319+ 85B3 00 00        	defw 0											; (Indice_Sprite_izq).
 320+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 321+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 322+ 85B9
 323+ 85B9 00 00        	defw 0											; (Posicion_inicio).
 324+ 85BB 00           	db 0											; (Cuad_objeto).
 325+ 85BC
 326+ 85BC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 327+ 85C0
 328+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 329+ 85C1
 330+ 85C1 00 00        	db 0,0										    ; Variables_de_borrado
 331+ 85C3 00 00        	defw 0											;	" " " " " " "
 332+ 85C5 00 00        	defw 0											;	" " " " " " "
 333+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 334+ 85CB
 335+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 336+ 85CD 00 00        	defw 0											;	" " " " " " "
 337+ 85CF 00 00        	defw 0											;	" " " " " " "
 338+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85D5
 340+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 341+ 85D8
 342+ 85D8 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 343+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 344+ 85DF
 345+ 85DF 00           	db 0 											; (Columnas).
 346+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 347+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 348+ 85E4
 349+ 85E4              	; -------------------------------------------------------------------------------------
 350+ 85E4              ;
 351+ 85E4              ;	13/05/23
 352+ 85E4              ;
 353+ 85E4              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 354+ 85E4
 355+ 85E4              Indice_de_entidades
 356+ 85E4
 357+ 85E4 EE 85        	defw Entidad_1
 358+ 85E6 FE 85        	defw Entidad_2
 359+ 85E8 0E 86        	defw Entidad_3
 360+ 85EA 1E 86        	defw Entidad_4
 361+ 85EC 2E 86        	defw Entidad_5
 362+ 85EE
 363+ 85EE              ;	BADSAT, (Satélite malvado).
 364+ 85EE
 365+ 85EE 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 366+ 85F0 04           	db %00000100									; (Attr).
 367+ 85F1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 368+ 85F3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 369+ 85F5 81 47        	defw $4781                                      ; (Posicion_inicio).
 370+ 85F7 01           	db 1											; (Cuad_objeto).
 371+ 85F8 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 372+ 85FC C5 98        	defw Indice_mov_Onda_senoidal  		            ; (Puntero_indice_mov)
 373+ 85FE
 374+ 85FE 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 375+ 8600 02           	db %00000010									; (Attr).
 376+ 8601 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 377+ 8603 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 378+ 8605 5E 48        	defw $485e                                      ; (Posicion_inicio).
 379+ 8607 02           	db 2											; (Cuad_objeto).
 380+ 8608 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 381+ 860C C3 98        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 382+ 860E
 383+ 860E 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 384+ 8610 04           	db %00000100									; (Attr).
 385+ 8611 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 386+ 8613 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 387+ 8615 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 388+ 8617 01           	db 1											; (Cuad_objeto).
 389+ 8618 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 390+ 861C B7 98        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 391+ 861E
 392+ 861E 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 393+ 8620 01           	db %00000001									; (Attr).
 394+ 8621 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 395+ 8623 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 396+ 8625 BE 47        	defw $47be                                      ; (Posicion_inicio).
 397+ 8627 02           	db 2											; (Cuad_objeto).
 398+ 8628 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 399+ 862C C3 98        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 400+ 862E
 401+ 862E 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 402+ 8630 01           	db %00000001									; (Attr).
 403+ 8631 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 404+ 8633 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 405+ 8635 0A 40        	defw $400a                                      ; (Posicion_inicio).
 406+ 8637 01           	db 1											; (Cuad_objeto).
 407+ 8638 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 863C B9 98        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  863E              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 863E              ; 13/05/23
   2+ 863E
   3+ 863E              Indice_de_niveles
   4+ 863E
   5+ 863E 4C 86        	defw Nivel_1
   6+ 8640 51 86        	defw Nivel_2
   7+ 8642 56 86        	defw Nivel_3
   8+ 8644 5B 86        	defw Nivel_4
   9+ 8646 60 86        	defw Nivel_5
  10+ 8648
  11+ 8648              ;	...
  12+ 8648              ;	...
  13+ 8648              ;	+ Niveles ...
  14+ 8648
  15+ 8648 00 00        	defw 0
  16+ 864A 00 00        	defw 0
  17+ 864C
  18+ 864C 01 02 03 04  Nivel_1 db 1,2,3,4,5 							; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  18+ 8650 05
  19+ 8651
  20+ 8651 02 01 01 01  Nivel_2 db 2,1,1,1,1
  20+ 8655 01
  21+ 8656
  22+ 8656 03 01 01 01  Nivel_3 db 3,1,1,1,1
  22+ 865A 01
  23+ 865B
  24+ 865B 04 01 01 01  Nivel_4 db 4,1,1,1,1
  24+ 865F 01
  25+ 8660
  26+ 8660 05 01 01 01  Nivel_5 db 5,1,1,1,1
  26+ 8664 01
  27+ 8665
  28+ 8665              ;---------------------------------------------------------------------------------------------------------------
  29+ 8665              ;
  30+ 8665              ;   13/5/23
  31+ 8665              ;
  32+ 8665              ;	Destruye A,BC,HL,DE
  33+ 8665
  34+ 8665              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_1
  35+ 8665              ;	_del juego.
  36+ 8665
  37+ 8665              Prepara_cajas
  38+ 8665
  39+ 8665              ; Preparamos los punteros de las cajas.
  40+ 8665
  41+ 8665 21 68 84     	ld hl,Indice_de_cajas
  42+ 8668 CD A6 89     	call Extrae_address
  43+ 866B CD B3 86     	call Avanza_caja
  44+ 866E
  45+ 866E 3A 59 87     	ld a,(Nivel)
  46+ 8671 CD A4 86     	call PreparaBC
  47+ 8674
  48+ 8674 21 3E 86     	ld hl,Indice_de_niveles
  49+ 8677 CD AC 86     	call SBC_HL_con_BC_y_Extrae
  50+ 867A 22 5C 87     	ld (Datos_de_nivel),hl						; HL está en los datos del nivel correspondiente.
  51+ 867D
  52+ 867D 06 05        	ld b,5										; B actuará como contador de cajas.
  53+ 867F C5           1	push bc
  54+ 8680
  55+ 8680 7E           	ld a,(hl)										; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  56+ 8681 CD A4 86     	call PreparaBC
  57+ 8684
  58+ 8684 21 E4 85     	ld hl,Indice_de_entidades
  59+ 8687 CD AC 86     	call SBC_HL_con_BC_y_Extrae
  60+ 868A 22 36 87         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  61+ 868D
  62+ 868D CD BD 86     	call Datos_de_entidad_a_caja
  63+ 8690
  64+ 8690 2A 30 87     	ld hl,(Indice_restore_caja)
  65+ 8693 CD A6 89     	call Extrae_address
  66+ 8696 CD B3 86     	call Avanza_caja
  67+ 8699
  68+ 8699 2A 5C 87     	ld hl,(Datos_de_nivel)
  69+ 869C 23           	inc hl
  70+ 869D 22 5C 87     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
  71+ 86A0
  72+ 86A0 C1           	pop bc
  73+ 86A1 10 DC        	djnz 1B
  74+ 86A3 C9           	ret
  75+ 86A4
  76+ 86A4 CB 27        PreparaBC sla a
  77+ 86A6 D6 02        	sub 2										; [(Nivel)*2]-2.
  78+ 86A8 4F           	ld c,a
  79+ 86A9 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
  80+ 86AB C9           	ret
  81+ 86AC
  82+ 86AC A7           SBC_HL_con_BC_y_Extrae and a
  83+ 86AD ED 4A        	adc hl,bc
  84+ 86AF CD A6 89     	call Extrae_address
  85+ 86B2 C9           	ret
  86+ 86B3
  87+ 86B3 22 2C 87     Avanza_caja	ld (Puntero_store_caja),hl
  88+ 86B6 13           	inc de
  89+ 86B7 13           	inc de
  90+ 86B8 EB           	ex de,hl
  91+ 86B9 22 30 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
  92+ 86BC C9           	ret
  93+ 86BD
  94+ 86BD              Datos_de_entidad_a_caja
  95+ 86BD
  96+ 86BD              ;		; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar Entidad_
  97+ 86BD              ;		; _ la 1ª caja.
  98+ 86BD
  99+ 86BD ED 5B 2C 87  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 100+ 86C1
 101+ 86C1 01 02 00     	ld bc,2
 102+ 86C4 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 103+ 86C6
 104+ 86C6 01 07 00     	ld bc,7
 105+ 86C9 CD E8 86     	call Situa_DE
 106+ 86CC
 107+ 86CC 01 05 00     	ld bc,5
 108+ 86CF ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 109+ 86D1
 110+ 86D1 01 04 00     	ld bc,4
 111+ 86D4 CD E8 86     	call Situa_DE
 112+ 86D7
 113+ 86D7 01 07 00     	ld bc,7
 114+ 86DA ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 115+ 86DC
 116+ 86DC 01 18 00     	ld bc,24
 117+ 86DF CD E8 86     	call Situa_DE
 118+ 86E2
 119+ 86E2 01 02 00     	ld bc,2
 120+ 86E5 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 121+ 86E7
 122+ 86E7 C9           	ret
 123+ 86E8
 124+ 86E8 EB           Situa_DE ex de,hl
 125+ 86E9 A7           	and a
 126+ 86EA ED 4A        	adc hl,bc
 127+ 86EC EB           	ex de,hl
 128+ 86ED C9           	ret
 129+ 86EE
 130+ 86EE              ;---------------------------------------------------------------------------------------------------------------
# file closed: Niveles.asm
  25  86EE
  26  86EE              ; ******************************************************************************************************************************************************************************************
  27  86EE              ; Constantes.
  28  86EE              ; ******************************************************************************************************************************************************************************************
  29  86EE              ;
  30  86EE              ; 8/11/22
  31  86EE              ;
  32  86EE              ; Constantes generales.
  33  86EE              ;
  34  86EE
  35  86EE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  36  86EE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  37  86EE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  38  86EE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  39  86EE
  40  86EE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  41  86EE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  42  86EE              ;                               				        ; De momento situamos este almacén en $7000.
  43  86EE              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  44  86EE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  45  86EE              ;                               				        ; De momento situamos este almacén en $7060.
  46  86EE
  47  86EE              ; ******************************************************************************************************************************************************************************************
  48  86EE              ; Variables.
  49  86EE              ; ******************************************************************************************************************************************************************************************
  50  86EE              ;
  51  86EE              ; 10/11/22
  52  86EE              ;
  53  86EE              ; Variables de DRAW. (Motor principal).
  54  86EE              ;
  55  86EE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  56  86EE
  57  86EE 00           Filas db 0												; Filas. [DRAW]
  58  86EF 00           Columns db 0  											; Nº de columnas. [DRAW]
  59  86F0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  60  86F2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  61  86F4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  62  86F5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  63  86F6
  64  86F6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  65  86F6
  66  86F6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  67  86F7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  68  86F7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  69  86F7 00           Attr db 0												; Atributos de la entidad:
  70  86F8
  71  86F8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  72  86F8              ;
  73  86F8              ;	COLORES: 0 ..... NEGRO
  74  86F8              ;    		 1 ..... AZUL
  75  86F8              ; 			 2 ..... ROJO
  76  86F8              ;			 3 ..... MAGENTA
  77  86F8              ; 			 4 ..... VERDE
  78  86F8              ; 			 5 ..... CIAN
  79  86F8              ;			 6 ..... AMARILLO
  80  86F8              ; 			 7 ..... BLANCO
  81  86F8
  82  86F8 00 00        Indice_Sprite_der defw 0
  83  86FA 00 00        Indice_Sprite_izq defw 0
  84  86FC 00 00        Puntero_DESPLZ_der defw 0
  85  86FE 00 00        Puntero_DESPLZ_izq defw 0
  86  8700
  87  8700 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  88  8702 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  89  8703
  90  8703              ; Variables de objeto. (Características).
  91  8703
  92  8703 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  93  8704 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  94  8705 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  95  8706 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  96  8707
  97  8707 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  98  8708              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  99  8708              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 100  8708 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 101  870A 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 102  870C 00 00        	defw 0
 103  870E 00 00 00 00  	db 0,0,0,0
 104  8712
 105  8712 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 106  8714 00 00        	defw 0
 107  8716 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  8718 00 00 00 00  	db 0,0,0,0
 109  871C
 110  871C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 111  871C
 112  871C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 113  871D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 114  871D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 115  871D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 116  871D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 117  871D              ;
 118  871D              ; 														DESCRIPCIÖN:
 119  871D              ;
 120  871D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 121  871D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 122  871D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 123  871D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 124  871D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 125  871D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 126  871D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 127  871D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 128  871D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 129  871D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 130  871D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 131  871D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 132  871D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 133  871D              ;
 134  871D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 135  871D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 136  871D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 137  871D
 138  871D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 139  871E
 140  871E              ; Movimiento.
 141  871E
 142  871E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 143  871F 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 144  8721 00 00        Puntero_mov defw 0
 145  8723 00           Contador_db_mov db 0
 146  8724 00           Incrementa_puntero db 0
 147  8725 00           Repetimos_db db 0
 148  8726
 149  8726              ; Variables de funcionamiento. [DRAW].
 150  8726
 151  8726 00           Columnas db 0
 152  8727 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 153  8729              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 154  8729 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  872A
 156  872A              ; variables de control general.
 157  872A
 158  872A 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 159  872B
 160  872B              ; 61 Bytes por entidad.
 161  872B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 162  872B              ;					         		---------;      ;---------
 163  872B
 164  872B
 165  872B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 166  872B
 167  872B 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 168  872C
 169  872C              ;														DESCRIPCIÓN:
 170  872C              ;
 171  872C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 172  872C              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 173  872C              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 174  872C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 175  872C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 176  872C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 177  872C
 178  872C              ; Gestión de ENTIDADES y CAJAS.
 179  872C
 180  872C              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 181  872C 00 00        Puntero_store_caja defw 0
 182  872E 00 00        Puntero_restore_caja defw 0
 183  8730 00 00        Indice_restore_caja defw 0
 184  8732 01           Numero_de_entidades db 1								; Nº de entidades en pantalla, (contando con Amadeus).
 185  8733 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 186  8734              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 187  8734              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 188  8734              ;														; _ (Numero_de_malotes)="0".
 189  8734 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 190  8736 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 191  8738              ;														; _ puntero (Indice_entidades).
 192  8738
 193  8738
 194  8738              ;---------------------------------------------------------------------------------------------------------------
 195  8738              ;
 196  8738              ; Sirven para PINTAR.
 197  8738
 198  8738 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 199  873A              ;														; _variable para almacenar lo posición del puntero_
 200  873A              ; 														; _de pila, SP.
 201  873A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 202  873C              ;														; La utiliza la rutina [Extrae_foto_registros].
 203  873C 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 204  873E              ;														; _el snapshot de los registros de la siguiente entidad.
 205  873E              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 206  873E 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 207  8740              ;														; _el snapshot de los registros del siguiente disparo.
 208  8740              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 209  8740
 210  8740              ;---------------------------------------------------------------------------------------------------------------
 211  8740
 212  8740              ; Gestión de Disparos.
 213  8740
 214  8740 00           Numero_de_disparotes db 0
 215  8741 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 216  8743 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 217  8745 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 218  8746              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 219  8746              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 220  8746 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 221  8748              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 222  8748              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 223  8748              ;														; _produzca colisión.
 224  8748 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 225  874A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 226  874A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 227  874D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 228  874D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 229  8750              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 230  8750
 231  8750              ;---------------------------------------------------------------------------------------------------------------
 232  8750
 233  8750              ; Relojes y temporizaciones.
 234  8750
 235  8750 01           Habilita_disparo_Amadeus db 1
 236  8751 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 237  8752 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 238  8753
 239  8753 01           Habilita_disparo_entidad db 1
 240  8754 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 241  8755 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 242  8756
 243  8756              ;---------------------------------------------------------------------------------------------------------------
 244  8756
 245  8756              ; Gestión de FRAMES.
 246  8756
 247  8756 00           Switch db 0
 248  8757
 249  8757              ; Variables de Raster y localización en pantalla.
 250  8757
 251  8757 00 FF        Temp_Raster defw $ff00
 252  8759
 253  8759              ;---------------------------------------------------------------------------------------------------------------
 254  8759
 255  8759              ; Gestión de NIVELES.
 256  8759
 257  8759 01           Nivel db 1												 ; Nivel actual del juego.
 258  875A 00 00        Puntero_indice_NIVELES defw 0
 259  875C 00 00        Datos_de_nivel defw 0
 260  875E
 261  875E
 262  875E              ; Y todo comienza aquí .....
 263  875E              ;
 264  875E              ; Rutina principal *************************************************************************************************************************************************************************
 265  875E              ;
 266  875E              ;	14/11/22
 267  875E
 268  875E              START
 269  875E
 270  875E 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 271  8761 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 272  8763 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 273  8765 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 274  8767 F3           	DI
 275  8768
 276  8768 3E 07        	ld a,%00000111
 277  876A CD D9 94     	call Cls
 278  876D
 279  876D              ;	call Pinta_FILAS
 280  876D
 281  876D CD 7F 8A     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 282  8770
 283  8770 CD 65 86     4 call Prepara_cajas
 284  8773
 285  8773 CD 52 89     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 286  8776              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 287  8776 CD 2F 8A     	call Restore_entidad
 288  8779
 289  8779 21 32 87     	ld hl,Numero_de_entidades
 290  877C 46           	ld b,(hl)
 291  877D 04           	inc b
 292  877E 05           	dec b
 293  877F 28 17        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 294  8781
 295  8781              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 296  8781              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 297  8781              ;	Pintamos el resto de entidades:
 298  8781
 299  8781              ;	INICIA ENTIDADES !!!!!
 300  8781
 301  8781 C5           1 push bc  												; Guardo el contador de entidades.
 302  8782 CD AC 89      	call Inicia_Puntero_objeto
 303  8785 CD 29 8F     	call Draw
 304  8788 CD A0 7F     	call Guarda_foto_registros
 305  878B CD F4 89     6 call Store_Restore_cajas	 					    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 306  878E C1           	pop bc
 307  878F 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 308  8791
 309  8791 3A 2B 87     	ld a,(Ctrl_1)
 310  8794 CB 5F        	bit 3,a
 311  8796 20 18        	jr nz,5F											; Loop
 312  8798
 313  8798              ; 	INICIA AMADEUS !!!!!
 314  8798
 315  8798 CD 56 8A     3 call Restore_Amadeus
 316  879B CD AC 89     	call Inicia_Puntero_objeto
 317  879E CD 29 8F     	call Draw
 318  87A1 CD A0 7F     	call Guarda_foto_registros
 319  87A4
 320  87A4 11 76 84     	ld de,Amadeus_db
 321  87A7 CD 68 8A     	call Store_Amadeus
 322  87AA
 323  87AA              ; 	INICIA DISPAROS !!!!!
 324  87AA
 325  87AA CD 68 89     	call Inicia_Puntero_Disparo_Entidades
 326  87AD CD 6F 89     	call Inicia_Puntero_Disparo_Amadeus
 327  87B0
 328  87B0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 329  87B0
 330  87B0 CD 52 89     5 call Inicia_punteros_de_cajas
 331  87B3 CD 2F 8A     	call Restore_entidad
 332  87B6
 333  87B6 3A 2B 87     	ld a,(Ctrl_1)
 334  87B9 CB 5F        	bit 3,a
 335  87BB 28 0F        	jr z,6F
 336  87BD
 337  87BD              ; Looop:
 338  87BD
 339  87BD 21 2B 87     	ld hl,Ctrl_1
 340  87C0 CB 9E        	res 3,(hl)
 341  87C2 3E 01        	ld a,1
 342  87C4 32 32 87     	ld (Numero_de_entidades),a
 343  87C7 CD 76 89     	call Calcula_numero_de_malotes
 344  87CA 18 07        	jr 7F
 345  87CC
 346  87CC              ; ----------
 347  87CC
 348  87CC 3A 32 87     6 ld a,(Numero_de_entidades)
 349  87CF 3C           	inc a
 350  87D0 32 33 87     	ld (Numero_de_malotes),a
 351  87D3
 352  87D3 AF           7 xor a
 353  87D4
 354  87D4 FB           2 ei
 355  87D5 28 FD        	jr z,2B
 356  87D7
 357  87D7 3E 01        	ld a,1
 358  87D9 32 32 87     	ld (Numero_de_entidades),a
 359  87DC F3           	di
 360  87DD
 361  87DD 18 91        	jr 4B
 362  87DF
 363  87DF              ; -----------------------------------------------------------------------------------
 364  87DF
 365  87DF              Frame
 366  87DF
 367  87DF              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 368  87DF              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 369  87DF
 370  87DF              ; PINTAMOS.
 371  87DF
 372  87DF 3E 02            ld a,2
 373  87E1 D3 FE            out ($fe),a
 374  87E3 CD 2D 92     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 375  87E6 CD 66 92     	call Extrae_foto_disparos
 376  87E9 3E 01            ld a,1
 377  87EB D3 FE            out ($fe),a
 378  87ED
 379  87ED              ; ----------------------------------------------------------------------
 380  87ED
 381  87ED              ; RELOJES.
 382  87ED
 383  87ED 21 50 87     	ld hl,Habilita_disparo_Amadeus
 384  87F0 11 52 87     	ld de,Temporiza_disparo_Amadeus
 385  87F3 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 386  87F6
 387  87F6 21 53 87     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 388  87F9 11 55 87     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 389  87FC CD D5 7F     	call Habilita_disparos
 390  87FF
 391  87FF              ; COLISIONES.
 392  87FF
 393  87FF CD C3 8E     	call Selector_de_impactos
 394  8802
 395  8802              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 396  8802              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 397  8802              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 398  8802
 399  8802 AF           	xor a
 400  8803 32 45 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 401  8806
 402  8806 CD 52 89     	call Inicia_punteros_de_cajas
 403  8809 CD 2F 8A     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 404  880C              ; 														; _ en DRAW.
 405  880C 3A EE 86     	ld a,(Filas)
 406  880F A7           	and a
 407  8810 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 408  8812 CD 41 8A     	call Incrementa_punteros_de_cajas
 409  8815 18 F2        	jr 12B
 410  8817
 411  8817              ; ---------------------------------------------------------------------------------------
 412  8817
 413  8817 CD 41 8D     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 414  881A 21 00 70     	ld hl,Album_de_fotos
 415  881D 22 3C 87         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 416  8820              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 417  8820 3A 32 87     	ld a,(Numero_de_entidades)
 418  8823 47               ld b,a
 419  8824 A7           	and a
 420  8825 20 07        	jr nz,2F
 421  8827
 422  8827 21 2B 87     	ld hl,Ctrl_1
 423  882A CB DE        	set 3,(hl)											; Señal de Loop activada.
 424  882C 18 59        	jr 4F
 425  882E
 426  882E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 427  882E
 428  882E              ; Código que ejecutamos con cada entidad:
 429  882E
 430  882E              ; Impacto ???
 431  882E
 432  882E C5           2 push bc 												; Nº de entidades.
 433  882F
 434  882F 3A 07 87     	ld a,(Impacto)
 435  8832 A7           	and a
 436  8833 28 0A        	jr z,8F
 437  8835
 438  8835              ; Hay Impacto en esta entidad.
 439  8835
 440  8835 CD 09 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 441  8838 CD 71 8A     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 442  883B 21 32 87     	ld hl,Numero_de_entidades							; Una alimaña menos.
 443  883E 35           	dec (hl)
 444  883F
 445  883F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 446  883F              ; _con las coordenadas de la entidad almacenada en DRAW.
 447  883F
 448  883F 3A 2B 87     8 ld a,(Ctrl_1)
 449  8842 CB 57        	bit 2,a
 450  8844 28 22        	jr z,7F
 451  8846
 452  8846 2A 48 87     	ld hl,(Coordenadas_disparo_certero)
 453  8849 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 454  884A              ;														; E contiene la coordenada_X del disparo.
 455  884A 2A F4 86     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 456  884D              ;														; H Coordenado_y de la entidad.
 457  884D A7           	and a
 458  884E ED 52        	sbc hl,de
 459  8850
 460  8850 CD FA 8E     	call Determina_resultado_comparativa
 461  8853 04           	inc b
 462  8854 05           	dec b
 463  8855
 464  8855              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 465  8855 28 FE        	jr z,$
 466  8857              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 467  8857
 468  8857 28 0F        	jr z,7F
 469  8859
 470  8859              ; ----- ----- -----
 471  8859
 472  8859 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 473  885B 32 07 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 474  885E 21 2B 87     	ld hl,Ctrl_1
 475  8861 CB 96        	res 2,(hl)
 476  8863 21 48 87     	ld hl,Coordenadas_disparo_certero
 477  8866 36 00        	ld (hl),0
 478  8868
 479  8868
 480  8868 CD BA 88     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 481  886B
 482  886B 3A 1C 87     	ld a,(Ctrl_0)
 483  886E CB 67        	bit 4,a
 484  8870 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 485  8872
 486  8872              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 487  8872              ; [[[
 488  8872 CD CA 8A     	call Detecta_disparo_entidad
 489  8875              ; ]]]
 490  8875 CD 19 89     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 491  8878
 492  8878 21 1C 87     	ld hl,Ctrl_0
 493  887B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 494  887D AF           	xor a
 495  887E 32 1D 87     	ld (Obj_dibujado),a
 496  8881
 497  8881 CD F4 89     6 call Store_Restore_cajas
 498  8884
 499  8884 C1           	pop bc
 500  8885 10 A7        	djnz 2B
 501  8887
 502  8887              ; Tras la gestión de las entidades, ... AMADEUS.
 503  8887
 504  8887 CD 56 8A     4 call Restore_Amadeus
 505  888A
 506  888A 3A 07 87     	ld a,(Impacto)
 507  888D A7           	and a
 508  888E 20 FE        	jr nz,$
 509  8890
 510  8890              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 511  8890
 512  8890 CD EA 88     	call Mov_Amadeus
 513  8893
 514  8893 3A 1C 87     	ld a,(Ctrl_0)
 515  8896 CB 67        	bit 4,a
 516  8898 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 517  889A
 518  889A CD 19 89     	call Guarda_foto_entidad_a_pintar
 519  889D
 520  889D 21 1C 87     3 ld hl,Ctrl_0
 521  88A0 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 522  88A2 AF           	xor a
 523  88A3 32 1D 87     	ld (Obj_dibujado),a
 524  88A6
 525  88A6 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 526  88A9 CD 68 8A     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 527  88AC
 528  88AC CD 5F 8D     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 529  88AF
 530  88AF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 531  88AF
 532  88AF CD 8E 89     	call Calcula_numero_de_disparotes
 533  88B2 CD 76 89     9 call Calcula_numero_de_malotes
 534  88B5
 535  88B5 3E 04        	ld a,4
 536  88B7 D3 FE        	out ($fe),a
 537  88B9
 538  88B9 C9           	ret
 539  88BA
 540  88BA              ; --------------------------------------------------------------------------------------------------------------
 541  88BA              ;
 542  88BA              ;	27/03/23
 543  88BA
 544  88BA              Mov_obj
 545  88BA
 546  88BA              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 547  88BA
 548  88BA AF           	xor a
 549  88BB 32 1D 87     	ld (Obj_dibujado),a
 550  88BE 32 1C 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 551  88C1              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 552  88C1              ; 														; _de la entidad.
 553  88C1 CD 23 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 554  88C4              ;														; Obj_dibujado="0".
 555  88C4              ; Movemos Entidades malignas.
 556  88C4
 557  88C4 21 1F 87     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 558  88C7 34           	inc (hl)
 559  88C8 35           	dec (hl)                                            ; Salimos de la rutina.
 560  88C9 C8           	ret z
 561  88CA
 562  88CA CD C7 98     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 563  88CD
 564  88CD 3A 1C 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 565  88D0 CB 67        	bit 4,a
 566  88D2 C8           	ret z
 567  88D3
 568  88D3              ; Ha habido desplazamiento de la entidad maligna.
 569  88D3              ; Ha llegado a zona de AMADEUS ???
 570  88D3
 571  88D3 3A F5 86     	ld a,(Coordenada_y)
 572  88D6 FE 14        	cp $14
 573  88D8 D4 90 8C     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 574  88DB              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 575  88DB              ; ---------
 576  88DB
 577  88DB 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 578  88DD 32 1D 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 579  88E0 CD 23 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 580  88E3 CD 3A 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 581  88E6 CD 09 89     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 582  88E9 C9           	ret													; _de la misma.
 583  88EA
 584  88EA              ; --------------------------------------------------------------------------------------------------------------
 585  88EA              ;
 586  88EA              ;	29/1/23
 587  88EA
 588  88EA              Mov_Amadeus
 589  88EA
 590  88EA AF           	xor a
 591  88EB 32 1D 87     	ld (Obj_dibujado),a
 592  88EE CD 23 89         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 593  88F1              ;														; Obj_dibujado="0".
 594  88F1              ; Movemos Amadeus.
 595  88F1
 596  88F1 CD 93 8A     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 597  88F4 3A 1C 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 598  88F7 CB 67        	bit 4,a
 599  88F9 C8           	ret z
 600  88FA
 601  88FA              ; ---------
 602  88FA
 603  88FA 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 604  88FC 32 1D 87     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 605  88FF CD 23 89         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 606  8902 CD 3A 89         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 607  8905 CD 09 89     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 608  8908 C9           	ret													; _de la nave.
 609  8909
 610  8909              ; --------------------------------------------------------------------------------------------------------------
 611  8909              ;
 612  8909              ;	31/01/23
 613  8909              ;
 614  8909              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 615  8909
 616  8909              Guarda_foto_entidad_a_borrar
 617  8909
 618  8909 CD 03 92     	call Prepara_draw
 619  890C CD 3D 91     	call calcula_CColumnass
 620  890F CD 74 91     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 621  8912 CD C9 91     	call Define_rutina_de_impresion
 622  8915 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 623  8918 C9           	ret
 624  8919
 625  8919              ; --------------------------------------------------------------------------------------------------------------
 626  8919              ;
 627  8919              ;	31/01/23
 628  8919              ;
 629  8919              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 630  8919              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 631  8919
 632  8919              Guarda_foto_entidad_a_pintar
 633  8919
 634  8919 CD 46 89     	call Repone_pintar
 635  891C CD 29 8F     	call Draw
 636  891F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 637  8922 C9           	ret
 638  8923
 639  8923              ; --------------------------------------------------------------------------------------------------------------
 640  8923              ;
 641  8923              ;
 642  8923
 643  8923 21 EE 86     Prepara_var_pintado_borrado	ld hl,Filas
 644  8926 3A 1D 87     	ld a,(Obj_dibujado)
 645  8929 A7           	and a
 646  892A 28 05        	jr z,1F
 647  892C 11 12 87     	ld de,Variables_de_pintado
 648  892F 18 03        	jr 2F
 649  8931 11 08 87     1 ld de,Variables_de_borrado
 650  8934 01 08 00     2 ld bc,8
 651  8937 ED B0        	ldir
 652  8939 C9           	ret
 653  893A
 654  893A              ; --------------------------------------------------------------------------------------------------------------
 655  893A
 656  893A 21 08 87     Repone_borrar ld hl,Variables_de_borrado
 657  893D 11 EE 86     	ld de,Filas
 658  8940 01 08 00     	ld bc,8
 659  8943 ED B0        	ldir
 660  8945 C9           	ret
 661  8946
 662  8946 21 12 87     Repone_pintar ld hl,Variables_de_pintado
 663  8949 11 EE 86     	ld de,Filas
 664  894C 01 08 00     	ld bc,8
 665  894F ED B0        	ldir
 666  8951 C9           	ret
 667  8952
 668  8952              ; *************************************************************************************************************************************************************
 669  8952              ;
 670  8952              ; 8/1/23
 671  8952              ;
 672  8952              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 673  8952              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 674  8952              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 675  8952
 676  8952              ; Destruye HL y DE !!!!!
 677  8952
 678  8952              Inicia_punteros_de_cajas
 679  8952
 680  8952 21 68 84     	ld hl,Indice_de_cajas
 681  8955 CD A6 89         call Extrae_address
 682  8958 22 2C 87         ld (Puntero_store_caja),hl
 683  895B 21 6A 84     	ld hl,Indice_de_cajas+2
 684  895E 22 30 87     	ld (Indice_restore_caja),hl
 685  8961 CD A6 89     	call Extrae_address
 686  8964 22 2E 87     	ld (Puntero_restore_caja),hl
 687  8967 C9               ret
 688  8968
 689  8968              ; *************************************************************************************************************************************************************
 690  8968              ;
 691  8968              ; 8/1/23
 692  8968              ;
 693  8968              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 694  8968
 695  8968 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 696  896B 22 41 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 697  896E C9           	ret
 698  896F 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 699  8972 22 43 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 700  8975 C9           	ret
 701  8976
 702  8976              ; -------------------------------------------------------------------------------------------------------------
 703  8976              ;
 704  8976              ; 28/2/23
 705  8976              ;
 706  8976
 707  8976              Calcula_numero_de_malotes
 708  8976
 709  8976 21 00 70     	ld hl,Album_de_fotos
 710  8979 EB           	ex de,hl
 711  897A 2A 3C 87     	ld hl,(Stack_snapshot)
 712  897D
 713  897D 06 00        	ld b,0
 714  897F 7D           	ld a,l
 715  8980 93           	sub e
 716  8981 28 07        	jr z,1F
 717  8983
 718  8983              ; Nº de malotes no es "0".
 719  8983
 720  8983 D6 06        2 sub 6
 721  8985 04           	inc b
 722  8986 A7           	and a
 723  8987 20 FA        	jr nz,2B
 724  8989 78           	ld a,b
 725  898A
 726  898A 32 33 87     1 ld (Numero_de_malotes),a
 727  898D C9           	ret
 728  898E
 729  898E              ; -------------------------------------------------------------------------------------------------------------
 730  898E              ;
 731  898E              ; 28/2/23
 732  898E              ;
 733  898E
 734  898E              Calcula_numero_de_disparotes
 735  898E
 736  898E 21 60 70     	ld hl,Album_de_fotos_disparos
 737  8991 EB           	ex de,hl
 738  8992 2A 3E 87     	ld hl,(Stack_snapshot_disparos)
 739  8995
 740  8995 06 00        	ld b,0
 741  8997 7D           	ld a,l
 742  8998 93           	sub e
 743  8999 28 07        	jr z,1F
 744  899B
 745  899B              ; Nº de malotes no es "0".
 746  899B
 747  899B D6 06        2 sub 6
 748  899D 04           	inc b
 749  899E A7           	and a
 750  899F 20 FA        	jr nz,2B
 751  89A1 78           	ld a,b
 752  89A2
 753  89A2 32 40 87     1 ld (Numero_de_disparotes),a
 754  89A5 C9           	ret
 755  89A6              ; *************************************************************************************************************************************************************
 756  89A6              ;
 757  89A6              ; 20/10/22
 758  89A6              ;
 759  89A6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 760  89A6              ;
 761  89A6              ; Destruye el puntero y DE !!!!!
 762  89A6
 763  89A6 5E           Extrae_address ld e,(hl)
 764  89A7 23           	inc hl
 765  89A8 56           	ld d,(hl)
 766  89A9 2B           	dec hl
 767  89AA EB           	ex de,hl
 768  89AB C9           	ret
 769  89AC
 770  89AC              ; *************************************************************************************************************************************************************
 771  89AC              ;
 772  89AC              ;	7/2/23
 773  89AC              ;
 774  89AC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 775  89AC              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 776  89AC              ;
 777  89AC              ;   Destruye HL y BC !!!!!,
 778  89AC              ;
 779  89AC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 780  89AC              ;					"0" ..... Izquierda.
 781  89AC
 782  89AC              Inicia_Puntero_objeto
 783  89AC
 784  89AC 3A 02 87     	ld a,(Cuad_objeto)
 785  89AF E6 01        	and 1
 786  89B1 F5           	push af
 787  89B2 CC D0 89     	call z,Inicia_puntero_objeto_izq
 788  89B5 F1           	pop af
 789  89B6 28 2B        	jr z,1F
 790  89B8 CD BD 89     	call Inicia_puntero_objeto_der
 791  89BB 18 26        	jr 1F
 792  89BD
 793  89BD              ; Arrancamos desde la parte izquierda de la pantalla.
 794  89BD              ; Iniciamos (Indice_Sprite_der).
 795  89BD
 796  89BD 2A F8 86     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 797  89C0 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 798  89C3 CD A6 89     	call Extrae_address
 799  89C6 22 F2 86     	ld (Puntero_objeto),hl
 800  89C9
 801  89C9 2A FA 86     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 802  89CC 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 803  89CF C9           	ret
 804  89D0
 805  89D0              ; Arrancamos desde la parte derecha de la pantalla.
 806  89D0              ; Iniciamos (Indice_Sprite_izq).
 807  89D0
 808  89D0 2A FA 86     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 809  89D3 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 810  89D6 CD A6 89     	call Extrae_address
 811  89D9 22 F2 86     	ld (Puntero_objeto),hl
 812  89DC
 813  89DC 2A F8 86     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 814  89DF 22 FC 86     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 815  89E2 C9           	ret
 816  89E3
 817  89E3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 818  89E3
 819  89E3 21 38 83     1 ld hl,Amadeus
 820  89E6 ED 4B F2 86  	ld bc,(Puntero_objeto)
 821  89EA B7 ED 42     	sub hl,bc
 822  89ED C0           	ret nz
 823  89EE 21 1C 87     	ld hl,Ctrl_0
 824  89F1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 825  89F3 C9           	ret 												; _de nuestra nave en los extremos.
 826  89F4
 827  89F4              ; *************************************************************************************************************************************************************
 828  89F4              ;
 829  89F4              ;	14/5/23
 830  89F4              ;
 831  89F4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 832  89F4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 833  89F4
 834  89F4              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 835  89F4              ;	_de la 2ª y 3ª entidad respectivamente.
 836  89F4
 837  89F4              Store_Restore_cajas
 838  89F4
 839  89F4 E5           	push hl
 840  89F5 D5           	push de
 841  89F6 C5            	push bc
 842  89F7
 843  89F7              ;	STORE !!!!!
 844  89F7              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 845  89F7
 846  89F7 21 EE 86     	ld hl,Filas
 847  89FA ED 5B 2C 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 848  89FE 01 3D 00     	ld bc,61
 849  8A01 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 850  8A03
 851  8A03              ; 	Entidad_sospechosa. 20/4/23
 852  8A03
 853  8A03 3A 07 87     	ld a,(Impacto)
 854  8A06 A7           	and a
 855  8A07 28 0C        	jr z,1F
 856  8A09
 857  8A09 2A 2C 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 858  8A0C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 859  8A0F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 860  8A10 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 861  8A12 22 46 87     	ld (Entidad_sospechosa_de_colision),hl
 862  8A15
 863  8A15              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 864  8A15
 865  8A15 2A 2E 87     1 ld hl,(Puntero_restore_caja)
 866  8A18 7E           	ld a,(hl)
 867  8A19 A7           	and a
 868  8A1A F5           	push af
 869  8A1B 28 08        	jr z,2F
 870  8A1D
 871  8A1D 11 EE 86     	ld de,Filas
 872  8A20 01 3D 00     	ld bc,61
 873  8A23 ED B0        	ldir
 874  8A25
 875  8A25 CD 41 8A     2 call Incrementa_punteros_de_cajas
 876  8A28 F1           	pop af
 877  8A29 28 EA        	jr z,1B
 878  8A2B
 879  8A2B C1           	pop bc
 880  8A2C D1           	pop de
 881  8A2D E1           	pop hl
 882  8A2E
 883  8A2E C9           	ret
 884  8A2F
 885  8A2F              ; **************************************************************************************************
 886  8A2F              ;
 887  8A2F              ;	12/05/23
 888  8A2F              ;
 889  8A2F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 890  8A2F
 891  8A2F E5           Restore_entidad push hl
 892  8A30 D5           	push de
 893  8A31 C5            	push bc
 894  8A32
 895  8A32 2A 2C 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 896  8A35 11 EE 86     	ld de,Filas
 897  8A38 01 3D 00     	ld bc,61
 898  8A3B ED B0        	ldir
 899  8A3D
 900  8A3D C1           	pop bc
 901  8A3E D1           	pop de
 902  8A3F E1           	pop hl
 903  8A40 C9           	ret
 904  8A41
 905  8A41
 906  8A41              ; **************************************************************************************************
 907  8A41              ;
 908  8A41              ;	08/05/23
 909  8A41              ;
 910  8A41              ;	Incrementamos los dos punteros de entidades. (+1).
 911  8A41
 912  8A41 2A 2E 87     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
 913  8A44 22 2C 87     	ld (Puntero_store_caja),hl
 914  8A47 2A 30 87     	ld hl,(Indice_restore_caja)
 915  8A4A 23           	inc hl
 916  8A4B 23           	inc hl
 917  8A4C 22 30 87     	ld (Indice_restore_caja),hl
 918  8A4F CD A6 89         call Extrae_address
 919  8A52 22 2E 87         ld (Puntero_restore_caja),hl
 920  8A55 C9               ret
 921  8A56
 922  8A56              ; **************************************************************************************************
 923  8A56              ;
 924  8A56              ;	25/01/23
 925  8A56              ;
 926  8A56              ;	Restore_Amadeus
 927  8A56              ;
 928  8A56              ;	Cargamos en DRAW los parámetros de Amadeus.
 929  8A56              ;
 930  8A56
 931  8A56 E5           Restore_Amadeus	push hl
 932  8A57 D5           	push de
 933  8A58 C5            	push bc
 934  8A59 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 935  8A5C 11 EE 86     	ld de,Filas
 936  8A5F 01 3D 00     	ld bc,61
 937  8A62 ED B0        	ldir
 938  8A64 C1           	pop bc
 939  8A65 D1           	pop de
 940  8A66 E1           	pop hl
 941  8A67 C9           	ret
 942  8A68
 943  8A68              ; *************************************************************************************************************************************************************
 944  8A68              ;
 945  8A68              ;	29/04/23
 946  8A68              ;
 947  8A68              ;	Store_Amadeus
 948  8A68              ;
 949  8A68              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 950  8A68              ;
 951  8A68              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 952  8A68              ;
 953  8A68              ;	DESTRUYE: HL y BC y DE.
 954  8A68
 955  8A68 21 EE 86     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 956  8A6B 01 3D 00     	ld bc,61
 957  8A6E ED B0        	ldir
 958  8A70 C9           	ret
 959  8A71
 960  8A71              ; -----------------------------------------------------------
 961  8A71              ;
 962  8A71              ;	27/04/23
 963  8A71              ;
 964  8A71              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 965  8A71              ;
 966  8A71              ;	Destruye: HL,BC,DE,A
 967  8A71
 968  8A71 21 EE 86     Borra_datos_entidad ld hl,Filas
 969  8A74 01 3C 00     	ld bc,60
 970  8A77 AF           	xor a
 971  8A78 77           	ld (hl),a
 972  8A79 11 EF 86     	ld de,Filas+1
 973  8A7C ED B0        	ldir
 974  8A7E C9           	ret
 975  8A7F
 976  8A7F              ; -----------------------------------------------------------
 977  8A7F
 978  8A7F              ; Teclado.
 979  8A7F
 980  8A7F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 981  8A81 DB FE        	in a,($fe)
 982  8A83 E6 01        	and $01
 983  8A85 28 02        	jr z,1f
 984  8A87 18 F6        	jr Pulsa_ENTER
 985  8A89 C9           1 ret
 986  8A8A
 987  8A8A              ; **************************************************************************************************
 988  8A8A              ;
 989  8A8A              ; Temporización.
 990  8A8A
 991  8A8A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 992  8A8A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 993  8A8A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 994  8A8A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 995  8A8A
 996  8A8A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 997  8A8A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 998  8A8A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 999  8A8A
1000  8A8A              ; A partir de $4f61 no hace falta DELAY.
1001  8A8A
1002  8A8A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1003  8A8A
1004  8A8A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1005  8A8D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1006  8A8E 78           	LD A,B
1007  8A8F A7           	AND A
1008  8A90 20 FB        	JR NZ,wait
1009  8A92 C9           	RET
1010  8A93
1011  8A93              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1012  8A93              ;
1013  8A93              ;	5/3/23
1014  8A93              ;
1015  8A93              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1016  8A93
1017  8A93              Movimiento_Amadeus
1018  8A93
1019  8A93              ; Disparo.
1020  8A93
1021  8A93 3A 50 87     	ld a,(Habilita_disparo_Amadeus)
1022  8A96 A7           	and a
1023  8A97 20 02        	jr nz,1F
1024  8A99 18 15        	jr 2F
1025  8A9B
1026  8A9B 3E F7        1 ld a,$f7													; "5" para disparar.
1027  8A9D DB FE        	in a,($fe)
1028  8A9F E6 10        	and $10
1029  8AA1
1030  8AA1 F5           	push af
1031  8AA2 CC 0C 8B     	call z,Genera_disparo
1032  8AA5 F1           	pop af
1033  8AA6 20 08        	jr nz,2F
1034  8AA8
1035  8AA8 3A 50 87     	ld a,(Habilita_disparo_Amadeus)
1036  8AAB EE 01        	xor 1
1037  8AAD 32 50 87     	ld (Habilita_disparo_Amadeus),a
1038  8AB0
1039  8AB0 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1040  8AB2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1041  8AB4 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1042  8AB6 CC 67 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1043  8AB9 3E F7        	ld a,$f7
1044  8ABB DB FE        	in a,($fe)
1045  8ABD E6 01        	and $01
1046  8ABF C8           	ret z
1047  8AC0
1048  8AC0 3E F7        	ld a,$f7
1049  8AC2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1050  8AC4 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1051  8AC6 CC 49 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1052  8AC9 C9           	ret
1053  8ACA
1054  8ACA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1055  8ACA              ;
1056  8ACA              ;	Rutina provisional para que los malotes cagen balas.
1057  8ACA
1058  8ACA              Detecta_disparo_entidad
1059  8ACA
1060  8ACA 3A 53 87     	ld a,(Habilita_disparo_entidad)
1061  8ACD A7           	and a
1062  8ACE C8           	ret z
1063  8ACF 3E 7F        	ld a,$7f
1064  8AD1 DB FE        	in a,($fe)
1065  8AD3 E6 01        	and 1
1066  8AD5 C0           	ret nz
1067  8AD6 CD 0C 8B     	call Genera_disparo
1068  8AD9 C9           	ret
1069  8ADA
1070  8ADA              ; Pinta indicadores de FILAS. ------------------------------------------------------
1071  8ADA
1072  8ADA 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1073  8ADD
1074  8ADD              ; ----------
1075  8ADD 06 20        	ld b,32
1076  8ADF E5           2 push hl
1077  8AE0 C5           	push bc
1078  8AE1              ; ----------
1079  8AE1
1080  8AE1 06 BF        	ld b,$bf
1081  8AE3 36 80        1 ld (hl),%10000000
1082  8AE5 CD 0F 92     	call NextScan
1083  8AE8 10 F9        	djnz 1B
1084  8AEA
1085  8AEA              ; ----------
1086  8AEA C1           	pop bc
1087  8AEB E1           	pop hl
1088  8AEC 2C           	inc l
1089  8AED 10 F0        	djnz 2B
1090  8AEF              ; ----------
1091  8AEF
1092  8AEF 06 03        	ld b,3
1093  8AF1 21 00 47         ld hl,$4700
1094  8AF4 CD FA 8A     3 call Bucle_1
1095  8AF7 10 FB            djnz 3B
1096  8AF9 C9               ret
1097  8AFA
1098  8AFA C5           Bucle_1 push bc
1099  8AFB E5                   push hl
1100  8AFC D1                   pop de
1101  8AFD 13                   inc de
1102  8AFE 01 FF 00             ld bc,255
1103  8B01 36 FF                ld (hl),255
1104  8B03 ED B0                ldir
1105  8B05 23                   inc hl
1106  8B06 3E 07                ld a,7
1107  8B08 84                   add a,h
1108  8B09 67                   ld h,a
1109  8B0A C1                   pop bc
1110  8B0B C9                   ret
1111  8B0C
1112  8B0C              ; ---------------------------------------------------------------
1113  8B0C
1114  8B0C              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8B0C              ; ******************************************************************************************************************************************************************************************
   2+ 8B0C              ;
   3+ 8B0C              ;   17/04/23
   4+ 8B0C              ;
   5+ 8B0C              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8B0C              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8B0C              ;
   8+ 8B0C              ;
   9+ 8B0C              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8B0C              ;
  11+ 8B0C              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8B0C              ;               _ hacen las entidades hacia abajo.
  13+ 8B0C              ;
  14+ 8B0C              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8B0C              ;
  16+ 8B0C              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8B0C              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8B0C              ;
  19+ 8B0C              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8B0C              ;           _ la bala.
  21+ 8B0C              ;
  22+ 8B0C              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8B0C              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8B0C              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8B0C              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8B0C              ;           _ en el momento de generarse la bala)).
  27+ 8B0C
  28+ 8B0C              Genera_disparo
  29+ 8B0C
  30+ 8B0C              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8B0C              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8B0C              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8B0C              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8B0C              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8B0C              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8B0C              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8B0C
  38+ 8B0C              ; Exclusiones:
  39+ 8B0C
  40+ 8B0C 3A 26 87         ld a,(Columnas)
  41+ 8B0F 47               ld b,a
  42+ 8B10 3A EF 86         ld a,(Columns)
  43+ 8B13 B8               cp b
  44+ 8B14 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8B15
  46+ 8B15              ; ----- ----- -----
  47+ 8B15
  48+ 8B15 3A 1C 87         ld a,(Ctrl_0)
  49+ 8B18 CB 77            bit 6,a
  50+ 8B1A 20 06            jr nz,14F
  51+ 8B1C
  52+ 8B1C 3A F5 86         ld a,(Coordenada_y)
  53+ 8B1F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8B21 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8B22
  56+ 8B22 21 00 80     14 ld hl,Indice_disparo
  57+ 8B25 3A F6 86         ld a,(CTRL_DESPLZ)
  58+ 8B28 4F               ld c,a
  59+ 8B29 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8B2B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8B2B              ;                                            ""        ""       "f9", B="1"
  62+ 8B2B              ;                                            ""        ""       "fb", B="2"
  63+ 8B2B              ;                                            ""        ""       "fb", B="3"
  64+ 8B2B A7               and a
  65+ 8B2C 28 10            jr z,1F
  66+ 8B2E E6 01            and 1
  67+ 8B30 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8B31
  69+ 8B31 79               ld a,c
  70+ 8B32 16 F9            ld d,$f9
  71+ 8B34 23           2 inc hl
  72+ 8B35 23               inc hl
  73+ 8B36 04               inc b
  74+ 8B37 BA               cp d
  75+ 8B38 28 04            jr z,1F
  76+ 8B3A 14               inc d
  77+ 8B3B 14               inc d
  78+ 8B3C 18 F6            jr 2B
  79+ 8B3E
  80+ 8B3E CD A6 89     1 call Extrae_address
  81+ 8B41 E5               push hl
  82+ 8B42 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8B44 DD 21 A2 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8B48
  85+ 8B48              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8B48              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8B48
  88+ 8B48 3A 1C 87         ld a,(Ctrl_0)
  89+ 8B4B CB 77            bit 6,a
  90+ 8B4D 20 04            jr nz,19F
  91+ 8B4F
  92+ 8B4F AF               xor a
  93+ 8B50 32 53 87         ld (Habilita_disparo_entidad),a
  94+ 8B53
  95+ 8B53 3A 02 87     19 ld a,(Cuad_objeto)
  96+ 8B56 FE 02            cp 2
  97+ 8B58 38 66            jr c,3F
  98+ 8B5A 28 64            jr z,3F
  99+ 8B5C
 100+ 8B5C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8B5C
 102+ 8B5C E6 01            and 1
 103+ 8B5E 28 30            jr z,4F
 104+ 8B60
 105+ 8B60              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8B60              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8B60              ;
 108+ 8B60              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8B60              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8B60              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8B60
 112+ 8B60 2A F0 86     	ld hl,(Posicion_actual)
 113+ 8B63
 114+ 8B63              ;   Amadeus o entidad ???.
 115+ 8B63
 116+ 8B63 3A 1C 87         ld a,(Ctrl_0)
 117+ 8B66 CB 77            bit 6,a
 118+ 8B68 28 0A            jr z,8F
 119+ 8B6A
 120+ 8B6A              ; 	Dispara Amadeus.
 121+ 8B6A
 122+ 8B6A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8B6C CD 1E 92         call PreviousScan
 124+ 8B6F CD 1E 92         call PreviousScan
 125+ 8B72
 126+ 8B72              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8B72              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8B72              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8B72              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8B72
 131+ 8B72 18 11            jr 10F
 132+ 8B74
 133+ 8B74              ; 	Dispara Entidad.
 134+ 8B74
 135+ 8B74 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8B77              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8B77
 138+ 8B77              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8B77              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8B77
 141+ 8B77 C5               push bc
 142+ 8B78 06 10            ld b,16
 143+ 8B7A CD 0F 92     9 call NextScan
 144+ 8B7D 10 FB            djnz 9B
 145+ 8B7F C1               pop bc
 146+ 8B80 CD EA 8B         call Ajusta_disparo_parte_izquierda
 147+ 8B83 18 06            jr 17F
 148+ 8B85
 149+ 8B85              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8B85              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8B85              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8B85              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8B85
 154+ 8B85 CD EA 8B     10 call Ajusta_disparo_parte_izquierda
 155+ 8B88 CD 5F 8C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8B8B              ;                                                      ; _al generar el disparo.
 157+ 8B8B
 158+ 8B8B              ; 	LLegados a este punto tendremos:
 159+ 8B8B              ;
 160+ 8B8B              ;       Puntero_objeto_disparo en IY.
 161+ 8B8B              ;       Rutinas_de_impresion en IX.
 162+ 8B8B              ;       Puntero_de_impresion en HL.
 163+ 8B8B              ;       Impacto/Dirección en BC.
 164+ 8B8B
 165+ 8B8B CD F2 8B     17 call Almacena_disparo
 166+ 8B8E 18 52            jr 6F                                             ; RET.
 167+ 8B90
 168+ 8B90              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8B90              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8B90              ;
 171+ 8B90              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8B90              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8B90              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8B90
 175+ 8B90 2A F0 86     4 ld hl,(Posicion_actual)
 176+ 8B93
 177+ 8B93              ;   Amadeus o entidad ???.
 178+ 8B93
 179+ 8B93 3A 1C 87         ld a,(Ctrl_0)
 180+ 8B96 CB 77            bit 6,a
 181+ 8B98 28 0A            jr z,11F
 182+ 8B9A
 183+ 8B9A              ; 	Dispara Amadeus.
 184+ 8B9A
 185+ 8B9A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8B9C CD 1E 92         call PreviousScan
 187+ 8B9F CD 1E 92         call PreviousScan
 188+ 8BA2
 189+ 8BA2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8BA2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8BA2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8BA2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8BA2
 194+ 8BA2 18 11            jr 13F
 195+ 8BA4
 196+ 8BA4              ; 	Dispara Entidad.
 197+ 8BA4
 198+ 8BA4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8BA7              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8BA7
 201+ 8BA7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8BA7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8BA7
 204+ 8BA7 C5               push bc
 205+ 8BA8 06 10            ld b,16
 206+ 8BAA CD 0F 92     12 call NextScan
 207+ 8BAD 10 FB            djnz 12B
 208+ 8BAF C1               pop bc
 209+ 8BB0
 210+ 8BB0 CD E3 8B         call Ajusta_disparo_parte_derecha
 211+ 8BB3 18 06            jr 18F
 212+ 8BB5
 213+ 8BB5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8BB5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8BB5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8BB5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8BB5
 218+ 8BB5 CD E3 8B     13 call Ajusta_disparo_parte_derecha
 219+ 8BB8 CD 5F 8C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8BBB              ;                                                       ; _al generar el disparo.
 221+ 8BBB
 222+ 8BBB              ; LLegados a este punto tendremos:
 223+ 8BBB              ;
 224+ 8BBB              ;       Puntero_objeto_disparo en IY.
 225+ 8BBB              ;       Rutinas_de_impresion en IX.
 226+ 8BBB              ;       Puntero_de_impresion en HL.
 227+ 8BBB              ;       Impacto/Dirección en BC.
 228+ 8BBB
 229+ 8BBB CD F2 8B     18 call Almacena_disparo
 230+ 8BBE 18 22            jr 6F                                               ; RET.
 231+ 8BC0
 232+ 8BC0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8BC0
 234+ 8BC0 28 11        3 jr z,5F
 235+ 8BC2
 236+ 8BC2              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8BC2              ;
 238+ 8BC2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8BC2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8BC2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8BC2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8BC2
 243+ 8BC2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8BC2              ;	   ""        ""       "f9", B="1"
 245+ 8BC2              ;	   ""        ""       "fb", B="2"
 246+ 8BC2              ; 	   ""        ""       "fb", B="3"
 247+ 8BC2
 248+ 8BC2 2A F0 86     	ld hl,(Posicion_actual)
 249+ 8BC5 CD 0F 92     	call NextScan
 250+ 8BC8
 251+ 8BC8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8BC8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8BC8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8BC8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8BC8
 256+ 8BC8 CD EA 8B         call Ajusta_disparo_parte_izquierda
 257+ 8BCB
 258+ 8BCB              ; 	No se produce impacto. B="$80"
 259+ 8BCB              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8BCB
 261+ 8BCB 01 80 80         ld bc,$8080
 262+ 8BCE
 263+ 8BCE              ; 	LLegados a este punto tendremos:
 264+ 8BCE              ;
 265+ 8BCE              ;       Puntero_objeto_disparo en IY.
 266+ 8BCE              ;       Rutinas_de_impresion en IX.
 267+ 8BCE              ;       Puntero_de_impresion en HL.
 268+ 8BCE              ;       Impacto/Dirección en BC.
 269+ 8BCE
 270+ 8BCE CD F2 8B         call Almacena_disparo
 271+ 8BD1 18 0F            jr 6F                                           ; RET.
 272+ 8BD3
 273+ 8BD3              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8BD3              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8BD3              ;
 276+ 8BD3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8BD3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8BD3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8BD3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8BD3
 281+ 8BD3 2A F0 86     5 ld hl,(Posicion_actual)
 282+ 8BD6 CD 0F 92     	call NextScan
 283+ 8BD9
 284+ 8BD9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8BD9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8BD9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8BD9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8BD9
 289+ 8BD9 CD E3 8B         call Ajusta_disparo_parte_derecha
 290+ 8BDC
 291+ 8BDC              ; 	No se produce impacto. B="$80"
 292+ 8BDC              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8BDC
 294+ 8BDC 01 80 80     15 ld bc,$8080
 295+ 8BDF
 296+ 8BDF              ; 	LLegados a este punto tendremos:
 297+ 8BDF              ;
 298+ 8BDF              ;       Puntero_objeto_disparo en IY.
 299+ 8BDF              ;       Rutinas_de_impresion en IX.
 300+ 8BDF              ;       Puntero_de_impresion en HL.
 301+ 8BDF              ;       Impacto/Dirección en BC.
 302+ 8BDF
 303+ 8BDF CD F2 8B         call Almacena_disparo
 304+ 8BE2
 305+ 8BE2 C9           6 ret
 306+ 8BE3
 307+ 8BE3              ; ----------------------------------------------------------------
 308+ 8BE3              ;
 309+ 8BE3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8BE3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8BE3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8BE3
 313+ 8BE3 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8BE4 FE 02            cp 2
 315+ 8BE6 38 01            jr c,1F
 316+ 8BE8 23               inc hl
 317+ 8BE9 C9           1 ret
 318+ 8BEA
 319+ 8BEA 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8BEB FE 01        	cp 1
 321+ 8BED 20 01        	jr nz,1F
 322+ 8BEF 2B           	dec hl
 323+ 8BF0 2B           1 dec hl
 324+ 8BF1 C9               ret
 325+ 8BF2
 326+ 8BF2              ; ----------------------------------------------------------------
 327+ 8BF2              ;
 328+ 8BF2              ;   25/02/23
 329+ 8BF2              ;
 330+ 8BF2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8BF2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8BF2              ;
 333+ 8BF2              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8BF2              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8BF2
 336+ 8BF2              Almacena_disparo
 337+ 8BF2
 338+ 8BF2 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8BF3 F1               pop af
 340+ 8BF4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8BF5
 342+ 8BF5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8BF6 E6 01            and 1
 344+ 8BF8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8BFA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8BFA              ; 	Dispara AMADEUS.
 347+ 8BFA
 348+ 8BFA              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8BFA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8BFA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8BFA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8BFA
 353+ 8BFA C5               push bc
 354+ 8BFB 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8BFE 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8C01 A7               and a
 357+ 8C02 ED 42            sbc hl,bc
 358+ 8C04 CC 6F 89         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8C07 C1               pop bc
 360+ 8C08 28 54            jr z,4F
 361+ 8C0A
 362+ 8C0A 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8C0D 23               inc hl
 364+ 8C0E 23               inc hl
 365+ 8C0F 22 43 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8C12              ;                                                   ; _ Disparo_(+1).
 367+ 8C12 18 18            jr 2F
 368+ 8C14
 369+ 8C14              ; Dispara una entidad.
 370+ 8C14
 371+ 8C14 C5           1 push bc
 372+ 8C15 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8C18 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8C1B A7               and a
 375+ 8C1C ED 42            sbc hl,bc
 376+ 8C1E CC 68 89         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8C21 C1               pop bc
 378+ 8C22 28 3A            jr z,4F
 379+ 8C24
 380+ 8C24 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8C27 23               inc hl
 382+ 8C28 23               inc hl
 383+ 8C29 22 41 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8C2C              ;                                                   ; _ Disparo_(+1).
 385+ 8C2C CD A6 89     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8C2F              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8C2F              ;
 388+ 8C2F              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8C2F              ;                                                     Rutinas_de_impresion en IX.
 390+ 8C2F              ;                                                     Puntero_de_impresion en HL.
 391+ 8C2F              ;                                                     Impacto/Dirección en BC.
 392+ 8C2F
 393+ 8C2F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8C30 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8C31 23               inc hl                                          ; _ al siguiente.
 396+ 8C32 A7               and a
 397+ 8C33 20 C0            jr nz,3B
 398+ 8C35
 399+ 8C35 08               ex af,af
 400+ 8C36 ED 73 38 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8C3A F9               ld sp,hl
 402+ 8C3B
 403+ 8C3B DD E5            push ix                                         ; Rutina de impresión.
 404+ 8C3D F5               push af                                         ; Puntero de impresión.
 405+ 8C3E FD E5            push iy                                         ; Puntero objeto.
 406+ 8C40 C5               push bc                                         ; Control.
 407+ 8C41
 408+ 8C41 ED 7B 38 87      ld sp,(Stack)
 409+ 8C45
 410+ 8C45              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8C45
 412+ 8C45 21 2B 87     	ld hl,Ctrl_1
 413+ 8C48 CB C6        	set 0,(hl)
 414+ 8C4A
 415+ 8C4A DD E5        	push ix
 416+ 8C4C E1               pop hl
 417+ 8C4D F5               push af
 418+ 8C4E DD E1            pop ix
 419+ 8C50
 420+ 8C50 CD A0 7F     	call Guarda_foto_registros
 421+ 8C53
 422+ 8C53 21 2B 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8C56 CB 86        	res 0,(hl)
 424+ 8C58
 425+ 8C58              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8C58              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8C58
 428+ 8C58 CD 6F 89         call Inicia_Puntero_Disparo_Amadeus
 429+ 8C5B CD 68 89         call Inicia_Puntero_Disparo_Entidades
 430+ 8C5E
 431+ 8C5E C9           4 ret
 432+ 8C5F
 433+ 8C5F              ; ----------------------------------------------------------------
 434+ 8C5F              ;
 435+ 8C5F              ;   4/3/23
 436+ 8C5F              ;
 437+ 8C5F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8C5F              ;   _ al generarse el disparo.
 439+ 8C5F              ;
 440+ 8C5F              ;       "$80" ..... No se produce colisión.
 441+ 8C5F              ;       "$81" ..... Se produce colisión.
 442+ 8C5F
 443+ 8C5F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8C5F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8C5F
 446+ 8C5F
 447+ 8C5F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8C61 E5               push hl                                        ; Puntero de impresión.
 449+ 8C62
 450+ 8C62 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8C64 CD 80 8C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8C67
 453+ 8C67 7B               ld a,e
 454+ 8C68 E6 01            and 1
 455+ 8C6A 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8C6C
 457+ 8C6C E1               pop hl
 458+ 8C6D E5               push hl
 459+ 8C6E CD 0F 92         call NextScan
 460+ 8C71
 461+ 8C71 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8C72 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8C74 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8C76              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8C76 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8C78 CD 80 8C         call Bucle_2
 467+ 8C7B
 468+ 8C7B 43           2 ld b,e
 469+ 8C7C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8C7D FD E1            pop iy
 471+ 8C7F C9               ret
 472+ 8C80
 473+ 8C80               ; ---------- ----------
 474+ 8C80
 475+ 8C80 06 02        Bucle_2 ld b,2
 476+ 8C82 FD 7E 00     2 ld a,(iy)
 477+ 8C85 A6               and (hl)
 478+ 8C86 28 02            jr z,1F
 479+ 8C88 1E 81            ld e,$81
 480+ 8C8A 23           1 inc hl
 481+ 8C8B FD 23            inc iy
 482+ 8C8D 10 F3            djnz 2B
 483+ 8C8F C9               ret
 484+ 8C90
 485+ 8C90              ; -------------------------------------------------------------------------------------------------------------
 486+ 8C90              ;
 487+ 8C90              ;   11/04/23
 488+ 8C90              ;
 489+ 8C90              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8C90              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8C90              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8C90              ;
 493+ 8C90              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8C90
 495+ 8C90              Compara_coordenadas_X
 496+ 8C90
 497+ 8C90              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8C90              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8C90
 500+ 8C90              ; Preparamos registros:
 501+ 8C90
 502+ 8C90 21 F4 86         ld hl,Filas+6
 503+ 8C93 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8C94 23               inc hl
 505+ 8C95 23               inc hl
 506+ 8C96 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8C97 43               ld b,e
 508+ 8C98 21 02 87         ld hl,Filas+20
 509+ 8C9B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8C9C 21 4D 87         ld hl,Coordenadas_X_Entidad
 511+ 8C9F CD B0 8E         call Guarda_coordenadas_X
 512+ 8CA2
 513+ 8CA2              ; Preparamos registros:
 514+ 8CA2
 515+ 8CA2 21 7C 84         ld hl,Amadeus_db+6
 516+ 8CA5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8CA6 23               inc hl
 518+ 8CA7 23               inc hl
 519+ 8CA8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8CA9 7B               ld a,e
 521+ 8CAA 08               ex af,af'
 522+ 8CAB 21 8A 84         ld hl,Amadeus_db+20
 523+ 8CAE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8CAF 21 4A 87         ld hl,Coordenadas_X_Amadeus
 525+ 8CB2 CD B0 8E         call Guarda_coordenadas_X
 526+ 8CB5
 527+ 8CB5              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8CB5              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8CB5
 530+ 8CB5 04               inc b
 531+ 8CB6 05               dec b
 532+ 8CB7 28 04            jr z,1F
 533+ 8CB9 06 03            ld b,3
 534+ 8CBB 18 02            jr 2F
 535+ 8CBD 06 02        1 ld b,2
 536+ 8CBF 08           2 ex af,af'
 537+ 8CC0 3C               inc a
 538+ 8CC1 3D               dec a
 539+ 8CC2 28 04            jr z,5F
 540+ 8CC4 0E 03            ld c,3
 541+ 8CC6 18 02            jr 6F
 542+ 8CC8 0E 02        5 ld c,2
 543+ 8CCA 79           6 ld a,c
 544+ 8CCB 08               ex af,af'
 545+ 8CCC 11 4D 87         ld de,Coordenadas_X_Entidad
 546+ 8CCF 1A           4 ld a,(de)
 547+ 8CD0 21 4A 87         ld hl,Coordenadas_X_Amadeus
 548+ 8CD3 BE           3 cp (hl)
 549+ 8CD4 28 0E            jr z,7F
 550+ 8CD6 23               inc hl
 551+ 8CD7 0D               dec c
 552+ 8CD8 20 F9            jr nz,3B
 553+ 8CDA 13               inc de
 554+ 8CDB 08               ex af,af'
 555+ 8CDC 4F               ld c,a
 556+ 8CDD 08               ex af,af'
 557+ 8CDE 10 EF            djnz 4B
 558+ 8CE0
 559+ 8CE0              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8CE0
 561+ 8CE0 CD EF 8E     8 call Limpia_Coordenadas_X
 562+ 8CE3 C9               ret
 563+ 8CE4
 564+ 8CE4              7
 565+ 8CE4 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8CE6 32 07 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8CE9 21 45 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8CEC CB D6            set 2,(hl)
 569+ 8CEE 18 F0            jr 8B
 570+ 8CF0
 571+ 8CF0              ; -----------------------------------------------------------------------
 572+ 8CF0              ;
 573+ 8CF0              ;   17/04/23
 574+ 8CF0              ;
 575+ 8CF0
 576+ 8CF0              Detecta_colision_nave_entidad
 577+ 8CF0
 578+ 8CF0              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8CF0
 580+ 8CF0 2A F0 86         ld hl,(Posicion_actual)
 581+ 8CF3 CD 74 91         call Calcula_puntero_de_impresion
 582+ 8CF6
 583+ 8CF6              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8CF6              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8CF6
 586+ 8CF6 DD E5            push ix
 587+ 8CF8 E1               pop hl
 588+ 8CF9 E5               push hl
 589+ 8CFA
 590+ 8CFA              ; ----- ----- -----
 591+ 8CFA 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8CFC 06 0A            ld b,10
 593+ 8CFE CD 2E 8D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8D01 7B               ld a,e
 595+ 8D02 FE 05            cp 5
 596+ 8D04 38 0E            jr c,3F
 597+ 8D06
 598+ 8D06              ; LLegados a este punto:
 599+ 8D06              ;
 600+ 8D06              ;   HAY COLISIÓN !!!!!.
 601+ 8D06              ;
 602+ 8D06              ;   .db (Impacto) de Amadeus a "1".
 603+ 8D06              ;   SET el bit3 de (Impacto2).
 604+ 8D06              ;
 605+ 8D06              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8D06
 607+ 8D06 21 8F 84         ld hl,Amadeus_db+25
 608+ 8D09 36 01            ld (hl),1
 609+ 8D0B 21 45 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8D0E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8D10 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8D12 18 18            jr 1F
 613+ 8D14
 614+ 8D14              ; -----
 615+ 8D14
 616+ 8D14 E1           3 pop hl
 617+ 8D15 CD 0F 92         call NextScan
 618+ 8D18 E5               push hl
 619+ 8D19 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8D1A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8D1C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8D1E 30 0C            jr nc,1F
 623+ 8D20              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8D20 10 DC            djnz 2B
 625+ 8D22
 626+ 8D22              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8D22
 628+ 8D22              ; LLegados a este punto:
 629+ 8D22              ;
 630+ 8D22              ;   NO HAY COLISIÓN !!!!!.
 631+ 8D22              ;
 632+ 8D22              ;   .db (Impacto) de Amadeus a "0".
 633+ 8D22              ;   RES el bit2 de (Impacto2).
 634+ 8D22              ;
 635+ 8D22              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8D22              ;   Lo colocamos a "0".
 637+ 8D22
 638+ 8D22 21 45 87         ld hl,Impacto2
 639+ 8D25 CB 96            res 2,(hl)
 640+ 8D27 2A 46 87         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8D2A 36 00            ld (hl),0
 642+ 8D2C
 643+ 8D2C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8D2D C9               ret
 645+ 8D2E
 646+ 8D2E               ; ---------- ----------
 647+ 8D2E
 648+ 8D2E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8D2F 3A EF 86         ld a,(Columns)
 650+ 8D32 47               ld b,a
 651+ 8D33 FD 7E 00     2 ld a,(iy)
 652+ 8D36 BE               cp (hl)
 653+ 8D37 28 01            jr z,1F
 654+ 8D39
 655+ 8D39 1C               inc e
 656+ 8D3A
 657+ 8D3A 23           1 inc hl
 658+ 8D3B FD 23            inc iy
 659+ 8D3D 10 F4            djnz 2B
 660+ 8D3F C1               pop bc
 661+ 8D40 C9               ret
 662+ 8D41
 663+ 8D41              ; -------------------------------------------------------------------------------------------------------------
 664+ 8D41              ;
 665+ 8D41              ;   13/03/23
 666+ 8D41              ;
 667+ 8D41              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8D41              ;
 669+ 8D41              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8D41
 671+ 8D41 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8D44 7E               ld a,(hl)
 673+ 8D45 A7               and a
 674+ 8D46 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8D47
 676+ 8D47 44               ld b,h
 677+ 8D48 4D               ld c,l
 678+ 8D49 2A 3E 87         ld hl,(Stack_snapshot_disparos)
 679+ 8D4C E5               push hl
 680+ 8D4D A7               and a
 681+ 8D4E ED 42            sbc hl,bc
 682+ 8D50 E5               push hl
 683+ 8D51 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8D52
 685+ 8D52 E1               pop hl
 686+ 8D53 54               ld d,h
 687+ 8D54 5D               ld e,l
 688+ 8D55 1B               dec de
 689+ 8D56 ED B8            lddr                                                ; Limpiamos.
 690+ 8D58
 691+ 8D58 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8D5B 22 3E 87         ld (Stack_snapshot_disparos),hl
 693+ 8D5E
 694+ 8D5E C9               ret
 695+ 8D5F
 696+ 8D5F              ; -------------------------------------------------------------------------------------------------------------
 697+ 8D5F              ;
 698+ 8D5F              ;   28/03/23
 699+ 8D5F              ;
 700+ 8D5F
 701+ 8D5F 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8D62 2A 43 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8D65
 704+ 8D65 CD A6 89     2 call Extrae_address
 705+ 8D68 7E               ld a,(hl)
 706+ 8D69 A7               and a
 707+ 8D6A 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8D6C
 709+ 8D6C              ; ----- ----- ----- ----- ----- -----
 710+ 8D6C
 711+ 8D6C C5               push bc
 712+ 8D6D CD 29 8E         call foto_disparo_a_borrar
 713+ 8D70
 714+ 8D70              ; Existe colisión con este disparo???
 715+ 8D70
 716+ 8D70 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8D71 7E               ld a,(hl)
 718+ 8D72 2B               dec hl
 719+ 8D73 E6 01            and 1
 720+ 8D75 28 1D            jr z,9F
 721+ 8D77
 722+ 8D77              ;   En este punto:
 723+ 8D77              ;
 724+ 8D77              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8D77              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8D77              ;   _con la entidad).
 727+ 8D77              ;
 728+ 8D77              ;   Disparo_2A defw 0                                ; Control.
 729+ 8D77              ;    defw 0                                          ; Puntero objeto.
 730+ 8D77              ;    defw 0                                          ; Puntero de impresión.
 731+ 8D77              ;    defw 0                                          ; Rutina de impresión.
 732+ 8D77
 733+ 8D77 E5               push hl
 734+ 8D78
 735+ 8D78 06 04            ld b,4
 736+ 8D7A 23           19 inc hl
 737+ 8D7B 10 FD            djnz 19B
 738+ 8D7D
 739+ 8D7D CD A6 89         call Extrae_address
 740+ 8D80 CD 26 98         call Genera_coordenadas_disparo
 741+ 8D83
 742+ 8D83              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8D83
 744+ 8D83 21 48 87         ld hl,Coordenadas_disparo_certero
 745+ 8D86 72               ld (hl),d
 746+ 8D87 23               inc hl
 747+ 8D88 73               ld (hl),e
 748+ 8D89
 749+ 8D89              ; Elimino el disparo de la base de datos.
 750+ 8D89
 751+ 8D89 E1               pop hl
 752+ 8D8A CD A5 8E         call Elimina_disparo_de_base_de_datos
 753+ 8D8D 21 45 87         ld hl,Impacto2
 754+ 8D90 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8D92
 756+ 8D92 18 06            jr 11F
 757+ 8D94
 758+ 8D94 CD 52 8E     9 call Mueve_disparo
 759+ 8D97 CD 29 8E         call foto_disparo_a_borrar
 760+ 8D9A
 761+ 8D9A C1           11 pop bc
 762+ 8D9B 18 04            jr 7F
 763+ 8D9D
 764+ 8D9D              ; ----- ----- ----- ----- ----- -----
 765+ 8D9D
 766+ 8D9D ED 42        1 sbc hl,bc
 767+ 8D9F 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8DA1 2A 43 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8DA4 23               inc hl
 770+ 8DA5 23               inc hl
 771+ 8DA6 22 43 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8DA9 18 BA            jr 2B
 773+ 8DAB CD 6F 89     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8DAE
 775+ 8DAE 01 66 84         ld bc,Disparo_11
 776+ 8DB1 2A 41 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8DB4
 778+ 8DB4 CD A6 89     5 call Extrae_address
 779+ 8DB7 7E               ld a,(hl)
 780+ 8DB8 A7               and a
 781+ 8DB9 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8DBB
 783+ 8DBB              ; ----- ----- ----- ----- ----- -----
 784+ 8DBB
 785+ 8DBB C5               push bc
 786+ 8DBC CD 29 8E         call foto_disparo_a_borrar
 787+ 8DBF
 788+ 8DBF              ; Existe colisión con este disparo???
 789+ 8DBF
 790+ 8DBF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8DC0 7E               ld a,(hl)
 792+ 8DC1 2B               dec hl
 793+ 8DC2 E6 01            and 1
 794+ 8DC4 28 48            jr z,10F
 795+ 8DC6
 796+ 8DC6              ; La colisión se produce con Amadeus???
 797+ 8DC6              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8DC6
 799+ 8DC6 E5               push hl
 800+ 8DC7
 801+ 8DC7 06 04            ld b,4
 802+ 8DC9 23           16 inc hl
 803+ 8DCA 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8DCC CD A6 89         call Extrae_address
 805+ 8DCF CD 26 98         call Genera_coordenadas_disparo
 806+ 8DD2
 807+ 8DD2 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8DD3 FE 16            cp $16
 809+ 8DD5 38 22            jr c,15F
 810+ 8DD7
 811+ 8DD7              ; (Colisiones en filas 16 y 17).
 812+ 8DD7
 813+ 8DD7 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8DD8
 815+ 8DD8              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8DD8
 817+ 8DD8 21 7C 84         ld hl,Amadeus_db+6
 818+ 8DDB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8DDC 23               inc hl
 820+ 8DDD 23               inc hl
 821+ 8DDE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8DDF 21 8A 84         ld hl,Amadeus_db+20
 823+ 8DE2 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8DE3 21 4A 87         ld hl,Coordenadas_X_Amadeus
 825+ 8DE6 CD B0 8E         call Guarda_coordenadas_X
 826+ 8DE9
 827+ 8DE9 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8DEA
 829+ 8DEA              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8DEA
 831+ 8DEA 06 03            ld b,3
 832+ 8DEC 21 4A 87         ld hl,Coordenadas_X_Amadeus
 833+ 8DEF 7E           18 ld a,(hl)
 834+ 8DF0 BA               cp d
 835+ 8DF1 20 03            jr nz,17F
 836+ 8DF3
 837+ 8DF3              ; Colisión Amadeus !!!!!!!!!!
 838+ 8DF3
 839+ 8DF3 E1               pop hl
 840+ 8DF4 18 09            jr 14F
 841+ 8DF6
 842+ 8DF6 23           17 inc hl
 843+ 8DF7 10 F6            djnz 18B
 844+ 8DF9
 845+ 8DF9              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8DF9              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8DF9
 848+ 8DF9 E1           15 pop hl
 849+ 8DFA 23               inc hl
 850+ 8DFB 35               dec (hl)
 851+ 8DFC 2B               dec hl
 852+ 8DFD 18 0F            jr 10F
 853+ 8DFF
 854+ 8DFF              ; -----------------------debug
 855+ 8DFF
 856+ 8DFF              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8DFF              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8DFF
 859+ 8DFF E5           14 push hl
 860+ 8E00 CD A5 8E         call Elimina_disparo_de_base_de_datos
 861+ 8E03 21 45 87         ld hl,Impacto2
 862+ 8E06 CB CE            set 1,(hl)
 863+ 8E08 CD EF 8E         call Limpia_Coordenadas_X
 864+ 8E0B
 865+ 8E0B E1               pop hl
 866+ 8E0C 18 06            jr 12F
 867+ 8E0E
 868+ 8E0E CD 52 8E     10 call Mueve_disparo
 869+ 8E11 CD 29 8E         call foto_disparo_a_borrar
 870+ 8E14 C1           12 pop bc
 871+ 8E15
 872+ 8E15 18 04            jr 8F
 873+ 8E17
 874+ 8E17              ; ----- ----- ----- ----- ----- -----
 875+ 8E17
 876+ 8E17 ED 42        4 sbc hl,bc
 877+ 8E19 28 0A            jr z,6F
 878+ 8E1B
 879+ 8E1B 2A 41 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8E1E 23               inc hl
 881+ 8E1F 23               inc hl
 882+ 8E20 22 41 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8E23 18 8F            jr 5B
 884+ 8E25
 885+ 8E25 CD 68 89     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8E28 C9               ret
 887+ 8E29
 888+ 8E29              ; ------------------------------------------------------------------
 889+ 8E29
 890+ 8E29              foto_disparo_a_borrar
 891+ 8E29
 892+ 8E29 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8E2A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8E2B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8E2C
 896+ 8E2C E5               push hl
 897+ 8E2D 23               inc hl
 898+ 8E2E 23               inc hl
 899+ 8E2F ED 73 38 87      ld (Stack),sp
 900+ 8E33 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8E34 FD E1            pop iy
 902+ 8E36 DD E1            pop ix
 903+ 8E38 E1               pop hl
 904+ 8E39 ED 7B 38 87      ld sp,(Stack)
 905+ 8E3D 3A 2B 87         ld a,(Ctrl_1)
 906+ 8E40 CB C7            set 0,a
 907+ 8E42 32 2B 87         ld (Ctrl_1),a
 908+ 8E45 CD A0 7F         call Guarda_foto_registros
 909+ 8E48 3A 2B 87         ld a,(Ctrl_1)
 910+ 8E4B CB 87            res 0,a
 911+ 8E4D 32 2B 87         ld (Ctrl_1),a
 912+ 8E50 E1               pop hl
 913+ 8E51 C9               ret
 914+ 8E52
 915+ 8E52 E5           Mueve_disparo push hl
 916+ 8E53 7E               ld a,(hl)
 917+ 8E54 06 04            ld b,4
 918+ 8E56 23           1 inc hl
 919+ 8E57 10 FD            djnz 1B
 920+ 8E59
 921+ 8E59              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8E59
 923+ 8E59 CD A6 89         call Extrae_address
 924+ 8E5C
 925+ 8E5C E6 01            and 1
 926+ 8E5E 28 2B            jr z,2F
 927+ 8E60
 928+ 8E60              ; Disparo hacia arriba, (Amadeus).
 929+ 8E60
 930+ 8E60              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8E60              ; _ de la dificultad.
 932+ 8E60
 933+ 8E60 CD 1E 92         call PreviousScan
 934+ 8E63 CD 1E 92         call PreviousScan
 935+ 8E66 CD 1E 92         call PreviousScan
 936+ 8E69
 937+ 8E69              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8E69
 939+ 8E69 7C               ld a,h
 940+ 8E6A FE 40            cp $40
 941+ 8E6C 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8E6E
 943+ 8E6E              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8E6E
 945+ 8E6E EB               ex de,hl
 946+ 8E6F 06 04            ld b,4
 947+ 8E71 2B           6 dec hl
 948+ 8E72 10 FD            djnz 6B
 949+ 8E74
 950+ 8E74 CD A5 8E         call Elimina_disparo_de_base_de_datos
 951+ 8E77 E1               pop hl
 952+ 8E78 18 10            jr 7F
 953+ 8E7A
 954+ 8E7A              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8E7A
 956+ 8E7A D5           3 push de
 957+ 8E7B C5               push bc
 958+ 8E7C
 959+ 8E7C CD 5F 8C         call Comprueba_Colision
 960+ 8E7F
 961+ 8E7F              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8E7F
 963+ 8E7F 78               ld a,b
 964+ 8E80
 965+ 8E80 C1               pop bc
 966+ 8E81 D1               pop de
 967+ 8E82
 968+ 8E82 EB               ex de,hl
 969+ 8E83
 970+ 8E83 73               ld (hl),e
 971+ 8E84 23               inc hl
 972+ 8E85 72               ld (hl),d
 973+ 8E86
 974+ 8E86 E1           4 pop hl
 975+ 8E87 23               inc hl
 976+ 8E88 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8E89 2B               dec hl
 978+ 8E8A C9           7 ret
 979+ 8E8B
 980+ 8E8B              ; Disparo hacia abajo, (Entidad).
 981+ 8E8B
 982+ 8E8B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8E8B              ; _ de la dificultad.
 984+ 8E8B
 985+ 8E8B CD 0F 92     2 call NextScan
 986+ 8E8E CD 0F 92         call NextScan
 987+ 8E91 CD 0F 92         call NextScan
 988+ 8E94
 989+ 8E94              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8E94
 991+ 8E94 7C               ld a,h
 992+ 8E95 FE 58            cp $58
 993+ 8E97 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8E99
 995+ 8E99 EB               ex de,hl
 996+ 8E9A 06 04            ld b,4
 997+ 8E9C 2B           5 dec hl
 998+ 8E9D 10 FD            djnz 5B
 999+ 8E9F
1000+ 8E9F CD A5 8E         call Elimina_disparo_de_base_de_datos
1001+ 8EA2 E1               pop hl
1002+ 8EA3 18 E5            jr 7B
1003+ 8EA5
1004+ 8EA5              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8EA5
1006+ 8EA5 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8EA8 AF               xor a
1008+ 8EA9 77               ld (hl),a
1009+ 8EAA 54               ld d,h
1010+ 8EAB 5D               ld e,l
1011+ 8EAC 13               inc de
1012+ 8EAD ED B0            ldir
1013+ 8EAF C9               ret
1014+ 8EB0
1015+ 8EB0              ; -----------------------------------------------------------------
1016+ 8EB0              ;
1017+ 8EB0              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8EB0              ;
1019+ 8EB0              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8EB0              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8EB0              ;
1022+ 8EB0              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8EB0              ;
1024+ 8EB0              ;   INPUTS:
1025+ 8EB0              ;
1026+ 8EB0              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8EB0              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8EB0              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8EB0
1030+ 8EB0              ;   MODIFICA: A, HL, DE y C
1031+ 8EB0
1032+ 8EB0 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8EB1 79               ld a,c
1034+ 8EB2 E6 01            and 1
1035+ 8EB4 20 03            jr nz,1F
1036+ 8EB6 14               inc d
1037+ 8EB7 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8EB9
1039+ 8EB9              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8EB9              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8EB9
1042+ 8EB9 15           1 dec d
1043+ 8EBA 23           2 inc hl
1044+ 8EBB 72               ld (hl),d
1045+ 8EBC
1046+ 8EBC 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8EBD A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8EBE C8               ret z
1049+ 8EBF
1050+ 8EBF AF               xor a
1051+ 8EC0 5F               ld e,a
1052+ 8EC1 18 ED            jr Guarda_coordenadas_X
1053+ 8EC3
1054+ 8EC3              ; -----------------------------------------------------------------
1055+ 8EC3              ;
1056+ 8EC3              ;   12/04/23
1057+ 8EC3              ;
1058+ 8EC3
1059+ 8EC3 3A 45 87     Selector_de_impactos ld a,(Impacto2)
1060+ 8EC6 A7               and a
1061+ 8EC7 C8               ret z
1062+ 8EC8
1063+ 8EC8 FE 04            cp 4
1064+ 8ECA 20 09            jr nz,1F
1065+ 8ECC
1066+ 8ECC
1067+ 8ECC              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8ECC
1069+ 8ECC CD F0 8C         call Detecta_colision_nave_entidad
1070+ 8ECF
1071+ 8ECF 21 45 87         ld hl,Impacto2
1072+ 8ED2 CB 5E            bit 3,(hl)
1073+ 8ED4 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8ED5
1075+ 8ED5              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8ED5              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8ED5
1078+ 8ED5 21 45 87     1 ld hl,Impacto2
1079+ 8ED8 CB 4E            bit 1,(hl)
1080+ 8EDA 28 07            jr z,2F
1081+ 8EDC
1082+ 8EDC 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8EDF 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8EE1 18 0B            jr 3F
1085+ 8EE3
1086+ 8EE3 21 45 87     2 ld hl,Impacto2
1087+ 8EE6 CB 46            bit 0,(hl)
1088+ 8EE8 C8               ret z
1089+ 8EE9
1090+ 8EE9              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8EE9
1092+ 8EE9 21 2B 87         ld hl,Ctrl_1
1093+ 8EEC CB D6            set 2,(hl)
1094+ 8EEE
1095+ 8EEE C9           3 ret
1096+ 8EEF
1097+ 8EEF              ; -----------------------------------------------------------------
1098+ 8EEF              ;
1099+ 8EEF              ;   16/04/23
1100+ 8EEF              ;
1101+ 8EEF
1102+ 8EEF AF           Limpia_Coordenadas_X xor a
1103+ 8EF0 06 06            ld b,6
1104+ 8EF2 21 4A 87         ld hl,Coordenadas_X_Amadeus
1105+ 8EF5 77           1 ld (hl),a
1106+ 8EF6 23               inc hl
1107+ 8EF7 10 FC            djnz 1B
1108+ 8EF9 C9               ret
1109+ 8EFA
1110+ 8EFA              ; -----------------------------------------------------------------
1111+ 8EFA              ;
1112+ 8EFA              ;   25/04/23
1113+ 8EFA              ;
1114+ 8EFA
1115+ 8EFA              Determina_resultado_comparativa
1116+ 8EFA
1117+ 8EFA              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8EFA              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8EFA              ;
1120+ 8EFA              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8EFA              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8EFA              ;
1123+ 8EFA              ;   SBC HL,DE
1124+ 8EFA
1125+ 8EFA 7C               ld a,h
1126+ 8EFB 06 00            ld b,0
1127+ 8EFD
1128+ 8EFD CD 0D 8F         call Compara_cositas
1129+ 8F00
1130+ 8F00 04               inc b
1131+ 8F01 05               dec b
1132+ 8F02 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8F03
1134+ 8F03 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8F04 06 00            ld b,0
1136+ 8F06
1137+ 8F06 CD 0D 8F         call Compara_cositas
1138+ 8F09 18 01            jr 2F
1139+ 8F0B
1140+ 8F0B 04           1 inc b
1141+ 8F0C C9           2 ret
1142+ 8F0D
1143+ 8F0D A7           Compara_cositas and a
1144+ 8F0E 28 17            jr z,1F
1145+ 8F10
1146+ 8F10 FE FD            cp $fd
1147+ 8F12 28 13            jr z,1F
1148+ 8F14 FE FE            cp $fe
1149+ 8F16 28 0F            jr z,1F
1150+ 8F18 FE FF            cp $ff
1151+ 8F1A 28 0B            jr z,1F
1152+ 8F1C FE 01            cp $01
1153+ 8F1E 28 07            jr z,1F
1154+ 8F20 FE 02            cp $02
1155+ 8F22 28 03            jr z,1F
1156+ 8F24 FE 03            cp $03
1157+ 8F26 C0               ret nz
1158+ 8F27
1159+ 8F27 04           1 inc b
1160+ 8F28 C9               ret
1161+ 8F29
# file closed: Disparo.asm
1115  8F29              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F29              ; ******************************************************************************************************************************************************************************************
   2+ 8F29              ;
   3+ 8F29              ; 01/23
   4+ 8F29              ;
   5+ 8F29              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F29
   7+ 8F29 CD 03 92     Draw call Prepara_draw
   8+ 8F2C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8F2D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8F2E 28 05        	jr z,2F
  11+ 8F30
  12+ 8F30 3A 02 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8F33 18 0C        	jr 1F
  14+ 8F35 2A 00 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8F38 22 F0 86     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8F3B CD CA 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8F3E              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8F3E CD 49 99     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8F41 3A 1C 87     1 ld a,(Ctrl_0)
  20+ 8F44 CB 6F        	bit 5,a
  21+ 8F46 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8F48
  23+ 8F48 CD 60 8F     	call Comprueba_limite_horizontal
  24+ 8F4B CD F0 8F     	call Comprueba_limite_vertical
  25+ 8F4E
  26+ 8F4E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8F4E
  28+ 8F4E CD 3D 91     3 call calcula_CColumnass
  29+ 8F51 CD 74 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8F54 CD C9 91     	call Define_rutina_de_impresion
  31+ 8F57
  32+ 8F57 3A 1C 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8F5A CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8F5C 32 1C 87     	ld (Ctrl_0),a
  35+ 8F5F
  36+ 8F5F C9           	ret
  37+ 8F60
  38+ 8F60              ; *******************************************************************************************************************************************************************************************
  39+ 8F60              ;	21/01/23
  40+ 8F60              ;
  41+ 8F60              ; 	Comprueba_limite_horizontal.
  42+ 8F60              ;
  43+ 8F60              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8F60              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8F60              ;
  46+ 8F60              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8F60              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8F60              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8F60              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8F60
  51+ 8F60
  52+ 8F60
  53+ 8F60 3A 1C 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8F63 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8F65 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8F67 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8F69 32 1C 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8F6C 18 09            jr 6F
  59+ 8F6E CB 5F        1 bit 3,a
  60+ 8F70 28 0A            jr z,2F
  61+ 8F72 E6 F7            and $f7
  62+ 8F74 32 1C 87         ld (Ctrl_0),a
  63+ 8F77 CD CA 90     6 call Inicializacion
  64+ 8F7A 18 5B            jr 5F
  65+ 8F7C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8F7D
  67+ 8F7D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8F7D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8F7D
  70+ 8F7D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8F7E 2A 27 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8F81 CD CF 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8F84 67           	ld h,a
  74+ 8F85 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8F86 CD CF 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8F89 67           	ld h,a
  77+ 8F8A A7           	and a
  78+ 8F8B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8F8D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8F8E 3A 02 87     	ld a,(Cuad_objeto)
  81+ 8F91 FE 02        	cp 2
  82+ 8F93 38 1E        	jr c,3F
  83+ 8F95 28 1C        	jr z,3F
  84+ 8F97 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8F98 28 23            jr z,7F
  86+ 8F9A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8F9C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8F9E E1           	pop hl
  89+ 8F9F
  90+ 8F9F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8F9F              ; _para indicar con E="2" en caso necesario.
  92+ 8F9F
  93+ 8F9F E5               push hl
  94+ 8FA0 C5               push bc
  95+ 8FA1 CD CF 94     	call calcula_tercio
  96+ 8FA4 FE 01        	cp 1
  97+ 8FA6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8FA8 CD D8 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8FAB 28 26            jr z,9F
 100+ 8FAD 38 24            jr c,9F
 101+ 8FAF 1E 00        11 ld e,0
 102+ 8FB1 18 22            jr 8F
 103+ 8FB3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8FB4 28 07        	jr z, 7F
 105+ 8FB6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8FB8 1E 00         	ld e,0
 107+ 8FBA E1           	pop hl
 108+ 8FBB 18 04        	jr 4F
 109+ 8FBD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8FBF 18 15            jr 10F
 111+ 8FC1
 112+ 8FC1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8FC1              ; _para indicar con E="2" en caso necesario.
 114+ 8FC1
 115+ 8FC1 E5           4 push hl
 116+ 8FC2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8FC3 CD CF 94     	call calcula_tercio
 118+ 8FC6 FE 01        	cp 1
 119+ 8FC8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8FCA CD D8 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8FCD 28 04            jr z,9F
 122+ 8FCF 30 02            jr nc,9F
 123+ 8FD1 18 02        	jr 8F
 124+ 8FD3 1E 02        9 ld e,2
 125+ 8FD5 C1           8 pop bc
 126+ 8FD6 E1           10 pop hl
 127+ 8FD7 C9           5 ret
 128+ 8FD8
 129+ 8FD8              ; --------------------
 130+ 8FD8              ;
 131+ 8FD8              ; 25/08/22
 132+ 8FD8
 133+ 8FD8 CD CF 94     Comprueba_centro call calcula_tercio
 134+ 8FDB 67               ld h,a
 135+ 8FDC 08           	ex af,af
 136+ 8FDD FE 02        	cp 2
 137+ 8FDF 38 07        	jr c,1F
 138+ 8FE1 28 05        	jr z,1F
 139+ 8FE3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8FE6 18 03        	jr 2F
 141+ 8FE8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8FEB 08           2 ex af,af
 143+ 8FEC A7               and a
 144+ 8FED ED 42            sbc hl,bc
 145+ 8FEF C9               ret
 146+ 8FF0
 147+ 8FF0              ; *********************************************************************************************************************************************************************************************
 148+ 8FF0              ;
 149+ 8FF0              ;   16/8/22
 150+ 8FF0              ;
 151+ 8FF0              ;	Comprueba_limite_vertical
 152+ 8FF0              ;
 153+ 8FF0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8FF0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8FF0              ;
 156+ 8FF0
 157+ 8FF0 2A F0 86     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8FF3 7D           	ld a,l
 159+ 8FF4 E6 1F        	and $1F
 160+ 8FF6 57           	ld d,a
 161+ 8FF7 3A 29 87     	ld a,(Limite_vertical)
 162+ 8FFA BA           	cp d 											; Límite - Posición.
 163+ 8FFB 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8FFC 3A 02 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8FFF CB 47        	bit 0,a
 166+ 9001 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9003
 168+ 9003              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9003
 170+ 9003 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9004 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9006
 173+ 9006              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9006              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9006
 176+ 9006 3A F4 86         ld a,(Coordenada_X)
 177+ 9009 16 0F            ld d,Centro_izquierda
 178+ 900B A7               and a
 179+ 900C 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 900D 28 1E            jr z,3F
 181+ 900F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9011              ;                                                    ; _salimos sin modificar nada.
 183+ 9011 18 0E            jr 2F
 184+ 9013 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9014 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9016
 187+ 9016              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9016              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9016
 190+ 9016 3A F4 86         ld a,(Coordenada_X)
 191+ 9019 16 10            ld d,Centro_derecha
 192+ 901B A7               and a
 193+ 901C 92               sub d
 194+ 901D 28 0E            jr z,3F
 195+ 901F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9021              ;                                                    ; _salimos sin modificar nada.
 197+ 9021 CB 43        2 bit 0,e
 198+ 9023 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9025 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9026 CD BA 90         call Modificaccionne
 201+ 9029 C1           	pop bc
 202+ 902A CD CA 90         call Inicializacion
 203+ 902D C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 902E
 205+ 902E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 902E
 207+ 902E C5           4 push bc
 208+ 902F 01 EF 86     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9032 0A           	ld a,(bc)
 210+ 9033 3D           	dec a
 211+ 9034 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9035 7D           	ld a,l
 213+ 9036 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9037 CB 47        	bit 0,a
 215+ 9039 28 03        	jr z,5F
 216+ 903B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 903C 18 2E        	jr 7F
 218+ 903E
 219+ 903E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 903E
 221+ 903E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 903F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9040 3A 1C 87     	ld a,(Ctrl_0)
 224+ 9043 CB 4F        	bit 1,a
 225+ 9045 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9047 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9048
 228+ 9048              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9048
 230+ 9048 1C               inc e
 231+ 9049 1D               dec e
 232+ 904A 20 07            jr nz,12F
 233+ 904C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 904D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 904E 22 F0 86     	ld (Posicion_actual),hl
 236+ 9051 18 44        13 jr 9F
 237+ 9053 CB 43        12 bit 0,e
 238+ 9055 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9057              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9057 C1           	pop bc
 241+ 9058 18 D3        	jr 3B
 242+ 905A 80           14 add b
 243+ 905B 6F               ld l,a
 244+ 905C 22 F0 86     	ld (Posicion_actual),hl
 245+ 905F CD BA 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9062 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9064 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9066 32 1C 87         ld (Ctrl_0),a
 249+ 9069 F1           	pop af
 250+ 906A 18 2B        	jr 9F
 251+ 906C
 252+ 906C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 906C
 254+ 906C F5           7 push af
 255+ 906D 3A 1C 87     	ld a,(Ctrl_0)
 256+ 9070 CB 47        	bit 0,a
 257+ 9072 20 1D        	jr nz,8F
 258+ 9074 F1           	pop af
 259+ 9075
 260+ 9075              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9075
 262+ 9075 1C           	inc e
 263+ 9076 1D               dec e
 264+ 9077 20 07            jr nz,10F
 265+ 9079 90           	sub b
 266+ 907A 6F               ld l,a
 267+ 907B 22 F0 86     	ld (Posicion_actual),hl
 268+ 907E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9080              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9080 CB 43        10 bit 0,e
 271+ 9082 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9084              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9084 C1           	pop bc
 274+ 9085 18 A6        	jr 3B
 275+ 9087 90           16 sub b
 276+ 9088 6F               ld l,a
 277+ 9089 22 F0 86     	ld (Posicion_actual),hl
 278+ 908C CD BA 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 908F 18 06            jr 9F
 280+ 9091 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9093 32 1C 87         ld (Ctrl_0),a
 282+ 9096 F1           	pop af
 283+ 9097 C1           9 pop bc
 284+ 9098 1E 00        	ld e,0
 285+ 909A CD CA 90         call Inicializacion
 286+ 909D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 909E 08           	ex af,af
 288+ 909F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 90A0 18 8B            jr 3B
 290+ 90A2
 291+ 90A2              ; --------------------
 292+ 90A2
 293+ 90A2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 90A4 CD 1E 92     1 call PreviousScan
 295+ 90A7 10 FB            djnz 1B
 296+ 90A9 22 F0 86     	ld (Posicion_actual),hl
 297+ 90AC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 90AD C9           	ret
 299+ 90AE
 300+ 90AE              ; --------------------
 301+ 90AE
 302+ 90AE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 90B0 CD 0F 92     1 call NextScan
 304+ 90B3 10 FB            djnz 1B
 305+ 90B5 22 F0 86     	ld (Posicion_actual),hl
 306+ 90B8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 90B9 C9           	ret
 308+ 90BA
 309+ 90BA              ; --------------------
 310+ 90BA              ;
 311+ 90BA              ;	22/01/23
 312+ 90BA              ;
 313+ 90BA              ;	E="1". Hemos cambiado de cuadrante.
 314+ 90BA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 90BA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 90BA
 317+ 90BA
 318+ 90BA              Modificaccionne
 319+ 90BA
 320+ 90BA 3A 02 87     	ld a,(Cuad_objeto)
 321+ 90BD FE 02        	cp 2
 322+ 90BF CC A2 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 90C2 DC A2 90         call c,Modifica_Pos_actual
 324+ 90C5 C8           	ret z
 325+ 90C6 CD AE 90         call Modifica_Pos_actual2
 326+ 90C9 C9               ret
 327+ 90CA
 328+ 90CA              ; *************************************************************************************************************************************************************************************************
 329+ 90CA              ;
 330+ 90CA              ;	13/8/22
 331+ 90CA              ;
 332+ 90CA              ;	Inicializacion
 333+ 90CA              ;
 334+ 90CA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 90CA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 90CA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 90CA              ;
 338+ 90CA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 90CA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 90CA              ;	_ desaparece/aparece.
 341+ 90CA
 342+ 90CA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 90CA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 90CA              ;
 345+ 90CA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 90CA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 90CA              ; 		   [E] ="0"
 348+ 90CA
 349+ 90CA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 90CA
 351+ 90CA CD CF 94     Inicializacion call calcula_tercio
 352+ 90CD 28 36        	jr z,primit
 353+ 90CF E6 02        	and 2
 354+ 90D1 20 07        	jr nz,segmit
 355+ 90D3 7D           	ld a,l
 356+ 90D4 FE 7F        	cp $7f
 357+ 90D6 38 2D        	jr c,primit
 358+ 90D8 28 2B        	jr z,primit
 359+ 90DA CD 37 91     segmit call column
 360+ 90DD 38 13        	jr c,tercuad
 361+ 90DF 3E 04        cuarcuad ld a,4
 362+ 90E1 32 02 87     	ld (Cuad_objeto),a
 363+ 90E4 21 20 48     	ld hl,$4820
 364+ 90E7 22 27 87     	ld (Limite_horizontal),hl
 365+ 90EA 21 29 87     	ld hl,Limite_vertical
 366+ 90ED 36 0D        	ld (hl),$0d
 367+ 90EF 08           	ex af,af
 368+ 90F0 18 3C        	jr 1F
 369+ 90F2              tercuad
 370+ 90F2 3E 03        	ld a,3
 371+ 90F4 32 02 87     	ld (Cuad_objeto),a
 372+ 90F7 21 20 48     	ld hl,$4820
 373+ 90FA 22 27 87     	ld (Limite_horizontal),hl
 374+ 90FD 21 29 87     	ld hl,Limite_vertical
 375+ 9100 36 12        	ld (hl),$12
 376+ 9102 08           	ex af,af
 377+ 9103 18 29        	jr 1F
 378+ 9105 CD 37 91     primit call column
 379+ 9108 38 13        	jr c, primcuad
 380+ 910A              segcuad
 381+ 910A 3E 02        	ld a,2
 382+ 910C 32 02 87     	ld (Cuad_objeto),a
 383+ 910F 21 C0 4F     	ld hl,$4fc0
 384+ 9112 22 27 87     	ld (Limite_horizontal),hl
 385+ 9115 21 29 87     	ld hl,Limite_vertical
 386+ 9118 36 0D        	ld (hl),$0d
 387+ 911A 08           	ex af,af
 388+ 911B 18 11        	jr 1F
 389+ 911D              primcuad
 390+ 911D 3E 01        	ld a,1
 391+ 911F 32 02 87     	ld (Cuad_objeto),a
 392+ 9122 21 C0 4F     	ld hl,$4fc0
 393+ 9125 22 27 87     	ld (Limite_horizontal),hl
 394+ 9128 21 29 87     	ld hl,Limite_vertical
 395+ 912B 36 12        	ld (hl),$12
 396+ 912D 08           	ex af,af
 397+ 912E CD FB 97     1 call Genera_coordenadas
 398+ 9131 21 1C 87     	ld hl,Ctrl_0
 399+ 9134 CB EE        	set 5,(hl)
 400+ 9136 C9           	ret
 401+ 9137
 402+ 9137              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9137
 404+ 9137              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9137              ;
 406+ 9137              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9137
 408+ 9137 7D           column ld a,l
 409+ 9138 E6 1F        	and $1f
 410+ 913A FE 10         	cp $10
 411+ 913C C9            	ret
 412+ 913D
 413+ 913D              ; --------------------------------------------------------------------------------------------------------------------
 414+ 913D              ;
 415+ 913D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 913D              ;
 417+ 913D              ; 14/12/22
 418+ 913D              ;
 419+ 913D              ;	Modifica: A y BC.
 420+ 913D
 421+ 913D 3A 02 87     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9140 E6 01        	and 1
 423+ 9142 28 17        	jr z,1F
 424+ 9144
 425+ 9144              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9144
 427+ 9144 3A F4 86     	ld a,(Coordenada_X)
 428+ 9147 47           	ld b,a
 429+ 9148 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9149 79           	ld a,c
 431+ 914A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 914B 38 08        	jr c,2F
 433+ 914D 47           	ld b,a
 434+ 914E 79           	ld a,c
 435+ 914F 90           	sub b
 436+ 9150 32 26 87     	ld (Columnas),a
 437+ 9153 18 1B        	jr 4F
 438+ 9155 79           2 ld a,c
 439+ 9156 32 26 87     	ld (Columnas),a
 440+ 9159 18 15        	jr 4F
 441+ 915B
 442+ 915B              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 915B
 444+ 915B 3A F4 86     1 ld a,(Coordenada_X)
 445+ 915E 81           	add c
 446+ 915F 3D           	dec a
 447+ 9160 D6 1F        	sub $1f
 448+ 9162 38 08        	jr c,3F
 449+ 9164 47           	ld b,a
 450+ 9165 79           	ld a,c
 451+ 9166 90           	sub b
 452+ 9167 32 26 87     	ld (Columnas),a
 453+ 916A 18 04        	jr 4F
 454+ 916C 79           3 ld a,c
 455+ 916D 32 26 87     	ld (Columnas),a
 456+ 9170 D9           4 exx
 457+ 9171 4F           	ld c,a
 458+ 9172 D9           	exx
 459+ 9173 C9            ret
 460+ 9174
 461+ 9174              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9174              ;
 463+ 9174              ; 7/1/23
 464+ 9174              ;
 465+ 9174              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9174              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9174              ;
 468+ 9174              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9174              ;	DESTRUYE: HL,B Y A.
 470+ 9174
 471+ 9174 3A 02 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9177 FE 02        	cp 2
 473+ 9179 38 18        	jr c,1F
 474+ 917B 28 16        	jr z,1F
 475+ 917D E6 01        	and 1
 476+ 917F 28 0D        	jr z,3F
 477+ 9181
 478+ 9181              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9181
 480+ 9181 CD BD 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9184
 482+ 9184 7D           9 ld a,l
 483+ 9185 E6 1F        	and $1f
 484+ 9187 28 2A        	jr z,7F
 485+ 9189 2B           	dec hl
 486+ 918A 10 F8        	djnz 9B
 487+ 918C 18 25        	jr 7F
 488+ 918E
 489+ 918E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 918E
 491+ 918E 2A F0 86     3 ld hl,(Posicion_actual)
 492+ 9191 18 20        	jr 7F
 493+ 9193
 494+ 9193 28 14        1 jr z,2F
 495+ 9195
 496+ 9195              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9195
 498+ 9195 CD BD 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9198 7D           4 ld a,l
 500+ 9199 E6 1F        	and $1f
 501+ 919B 28 03        	jr z,6F
 502+ 919D 2B           	dec hl
 503+ 919E 10 F8        	djnz 4B
 504+ 91A0 06 0F        6 ld b,15
 505+ 91A2 CD 1E 92     5 call PreviousScan
 506+ 91A5 10 FB        	djnz 5B
 507+ 91A7 18 0A        	jr 7F
 508+ 91A9
 509+ 91A9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 91A9
 511+ 91A9 CD BD 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 91AC 06 0F        	ld b,15
 513+ 91AE CD 1E 92     8 call PreviousScan
 514+ 91B1 10 FB        	djnz 8B
 515+ 91B3
 516+ 91B3 E5           7 push hl
 517+ 91B4 DD E1        	pop ix
 518+ 91B6
 519+ 91B6 2A F2 86     	ld hl,(Puntero_objeto)
 520+ 91B9 E5           	push hl
 521+ 91BA FD E1        	pop iy
 522+ 91BC
 523+ 91BC C9           	ret
 524+ 91BD
 525+ 91BD              ; --------------------------------------------------------------------------------------------------------------------
 526+ 91BD              ;
 527+ 91BD              ;	2/1/23
 528+ 91BD              ;
 529+ 91BD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 91BD              ;
 531+ 91BD              ;	Tras esta rutina tenemos:
 532+ 91BD              ;
 533+ 91BD              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 91BD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 91BD              ;
 536+ 91BD              ;	DESTRUYE!!!!! HL,B y A.
 537+ 91BD
 538+ 91BD 2A F0 86     Operandos ld hl,(Posicion_actual)
 539+ 91C0 3A 26 87     	ld a,(Columnas)
 540+ 91C3 3D           	dec a
 541+ 91C4 20 01        	jr nz,1F
 542+ 91C6 3C           	inc a
 543+ 91C7 47           1 ld b,a
 544+ 91C8 C9           	ret
 545+ 91C9
 546+ 91C9              ; --------------------------------------------------------------------------------------------------------------------
 547+ 91C9              ;
 548+ 91C9              ;	3/1/23
 549+ 91C9              ;
 550+ 91C9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 91C9              ;
 552+ 91C9              ;	Destruye: A,B,HL y DE.
 553+ 91C9
 554+ 91C9              Define_rutina_de_impresion
 555+ 91C9
 556+ 91C9 3A EF 86     	ld a,(Columns)
 557+ 91CC 47           	ld b,a
 558+ 91CD 3A 26 87     	ld a,(Columnas)
 559+ 91D0 B8           	cp b
 560+ 91D1 20 0D        	jr nz,2f
 561+ 91D3
 562+ 91D3              ;	La entidad se imprime entera.
 563+ 91D3
 564+ 91D3 21 9F 92     	ld hl, Indice_entidades_completas
 565+ 91D6 E6 01        	and 1
 566+ 91D8 28 02        	jr z,1F
 567+ 91DA
 568+ 91DA 23           	inc hl
 569+ 91DB 23           	inc hl
 570+ 91DC
 571+ 91DC CD A6 89     1 call Extrae_address
 572+ 91DF C9           	ret		;	ret
 573+ 91E0
 574+ 91E0              ;	La entidad no se imprime entera en pantalla.
 575+ 91E0
 576+ 91E0 3A 02 87     2 ld a,(Cuad_objeto)
 577+ 91E3 E6 01        	and 1
 578+ 91E5 28 17        	jr z,3F
 579+ 91E7
 580+ 91E7              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 91E7
 582+ 91E7 21 A3 92     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 91EA 3A EF 86     4 ld a,(Columns)
 584+ 91ED E6 01        	and 1
 585+ 91EF 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 91F1
 587+ 91F1 23           	inc hl
 588+ 91F2 23           	inc hl
 589+ 91F3
 590+ 91F3 3A 26 87     	ld a,(Columnas)
 591+ 91F6 E6 01        	and 1
 592+ 91F8 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 91FA
 594+ 91FA 23           	inc hl
 595+ 91FB 23           	inc hl
 596+ 91FC
 597+ 91FC 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 91FE
 599+ 91FE 21 A9 92     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9201 18 E7        	jr 4B
 601+ 9203
 602+ 9203              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9203              ;
 604+ 9203              ;	Prepara_draw
 605+ 9203              ;
 606+ 9203              ;	Es una rutina de carga.
 607+ 9203              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9203              ;
 609+ 9203              ;	FUNCIONAMIENTO:
 610+ 9203              ;
 611+ 9203              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9203              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9203              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9203              ;
 615+ 9203              ;	DESTRUYE:
 616+ 9203              ;
 617+ 9203              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9203
 619+ 9203 21 EE 86     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9206 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9207 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9208 4E           	ld c,(hl)
 623+ 9209 2A F0 86     	ld hl,(Posicion_actual)
 624+ 920C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 920E C9           	ret
 626+ 920F
 627+ 920F              ;----------------------------------------------------------------------------------------------------------------
 628+ 920F              ;
 629+ 920F              ;	5/08/22
 630+ 920F              ;
 631+ 920F              ;   NextScan.
 632+ 920F              ;
 633+ 920F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 920F              ;
 635+ 920F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 920F              ;
 637+ 920F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 920F              ;
 639+ 920F              ;       DESTRUIDOS: AF y HL !!!
 640+ 920F              ;
 641+ 920F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 920F              ;
 643+ 920F
 644+ 920F 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9210 7C               ld a,h
 646+ 9211 E6 07            and 7
 647+ 9213 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9214
 649+ 9214 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9215 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9217 6F               ld l,a
 652+ 9218 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9219
 654+ 9219 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 921A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 921C 67               ld h,a
 657+ 921D C9               ret
 658+ 921E
 659+ 921E              ;----------------------------------------------------------------------------------------------------------------
 660+ 921E              ;
 661+ 921E              ;	5/08/22
 662+ 921E              ;
 663+ 921E              ;   PreviousScan.
 664+ 921E              ;
 665+ 921E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 921E              ;
 667+ 921E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 921E              ;
 669+ 921E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 921E              ;
 671+ 921E              ;       DESTRUIDOS: AF y HL !!!
 672+ 921E              ;
 673+ 921E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 921E              ;
 675+ 921E
 676+ 921E 7C           PreviousScan ld a,h
 677+ 921F 25               dec h               ; Dec H.
 678+ 9220 E6 07            and 7
 679+ 9222 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9223
 681+ 9223 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9224 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9226 6F               ld l,a
 684+ 9227 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9228
 686+ 9228 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9229 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 922B 67               ld h,a
 689+ 922C C9               ret
 690+ 922D
 691+ 922D              ; -----------------------------------------------------------------------------------
 692+ 922D              ;
 693+ 922D              ;	28/2/23
 694+ 922D              ;
 695+ 922D              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 922D              ;	Extrae fotos de Album_de_fotos.
 697+ 922D
 698+ 922D              Extrae_foto_entidades
 699+ 922D
 700+ 922D 3A 33 87     	ld a,(Numero_de_malotes)
 701+ 9230 A7           	and a
 702+ 9231 C8           	ret z
 703+ 9232 ED 73 38 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9236 31 00 70     	ld sp,Album_de_fotos
 705+ 9239
 706+ 9239 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 923B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 923C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 923D
 710+ 923D ED 73 3A 87  	ld (Stack_2),sp
 711+ 9241 ED 7B 38 87  	ld sp,(Stack)
 712+ 9245
 713+ 9245              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9245
 715+ 9245 3E CD        	ld a,$cd
 716+ 9247 32 4F 92     	ld (Imprime),a
 717+ 924A EB           	ex de,hl
 718+ 924B 22 50 92     	ld (Imprime+1),hl
 719+ 924E EB           	ex de,hl
 720+ 924F
 721+ 924F              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 924F
 723+ 924F 00 00 00     Imprime db 0,0,0
 724+ 9252
 725+ 9252 3A 33 87     	ld a,(Numero_de_malotes)
 726+ 9255 3D           	dec a
 727+ 9256 28 09        	jr z,1F
 728+ 9258 32 33 87      	ld (Numero_de_malotes),a
 729+ 925B
 730+ 925B ED 7B 3A 87   	ld sp,(Stack_2)
 731+ 925F 18 D8        	jr 2B
 732+ 9261
 733+ 9261 AF           1 xor a
 734+ 9262 32 3A 87     	ld (Stack_2),a
 735+ 9265 C9           	ret
 736+ 9266
 737+ 9266              ; -----------------------------------------------------------------------------------
 738+ 9266              ;
 739+ 9266              ;	28/2/23
 740+ 9266              ;
 741+ 9266              ;	Pinta los disparos generados.
 742+ 9266
 743+ 9266              Extrae_foto_disparos
 744+ 9266
 745+ 9266 3A 40 87     	ld a,(Numero_de_disparotes)
 746+ 9269 A7           	and a
 747+ 926A C8           	ret z
 748+ 926B ED 73 38 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 926F 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9272
 751+ 9272 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9274 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9275 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9276
 755+ 9276 ED 73 3A 87  	ld (Stack_2),sp
 756+ 927A ED 7B 38 87  	ld sp,(Stack)
 757+ 927E
 758+ 927E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 927E
 760+ 927E 3E CD        	ld a,$cd
 761+ 9280 32 88 92     	ld (Imprime2),a
 762+ 9283 EB           	ex de,hl
 763+ 9284 22 89 92     	ld (Imprime2+1),hl
 764+ 9287 EB           	ex de,hl
 765+ 9288
 766+ 9288              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9288
 768+ 9288 00 00 00     Imprime2 db 0,0,0
 769+ 928B
 770+ 928B 3A 40 87     	ld a,(Numero_de_disparotes)
 771+ 928E 3D           	dec a
 772+ 928F 28 09        	jr z,1F
 773+ 9291 32 40 87      	ld (Numero_de_disparotes),a
 774+ 9294
 775+ 9294 ED 7B 3A 87  	ld sp,(Stack_2)
 776+ 9298 18 D8        	jr 2B
 777+ 929A
 778+ 929A AF           1 xor a
 779+ 929B 32 3A 87     	ld (Stack_2),a
 780+ 929E C9           	ret
 781+ 929F
# file closed: Draw_XOR.asm
1116  929F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 929F              ;   índices de Rutinas de impresión.
   2+ 929F
   3+ 929F AF 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92A1 DC 92            defw Pinta_Amadeus_3x2
   5+ 92A3
   6+ 92A3 32 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92A5 D2 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92A7 86 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92A9
  10+ 92A9 5C 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92AB 60 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92AD 14 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92AF
  14+ 92AF
  15+ 92AF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92AF              ;
  17+ 92AF              ;   12/12/22
  18+ 92AF              ;
  19+ 92AF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92AF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92AF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92AF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92AF              ;
  24+ 92AF              ;   Modifica: DE y HL.
  25+ 92AF
  26+ 92AF ED 73 38 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92B3 FD F9        	ld sp,iy
  28+ 92B5 06 10            ld b,16
  29+ 92B7 D1           1 pop de
  30+ 92B8 7B               ld a,e
  31+ 92B9 AE               xor (hl)
  32+ 92BA 77           	ld (hl),a
  33+ 92BB 23           	inc hl
  34+ 92BC 7A               ld a,d
  35+ 92BD AE               xor (hl)
  36+ 92BE 77           	ld (hl),a
  37+ 92BF 2B           	dec hl
  38+ 92C0 24           	inc h
  39+ 92C1 7C               ld a,h
  40+ 92C2 E6 07            and 7
  41+ 92C4 20 0A            jr nz,2F
  42+ 92C6 7D               ld a,l
  43+ 92C7 C6 20            add a,$20
  44+ 92C9 6F               ld l,a
  45+ 92CA 38 04            jr c,2F
  46+ 92CC 7C               ld a,h
  47+ 92CD D6 08            sub 8
  48+ 92CF 67               ld h,a
  49+ 92D0 7C           2 ld a,h
  50+ 92D1 FE 58            cp $58
  51+ 92D3 28 02            jr z,3F
  52+ 92D5 10 E0            djnz 1B
  53+ 92D7 ED 7B 38 87  3 ld sp,(Stack)
  54+ 92DB C9           	ret
  55+ 92DC
  56+ 92DC ED 73 38 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 92E0 FD F9        	ld sp,iy
  58+ 92E2 06 08            ld b,8
  59+ 92E4 D1           1 pop de
  60+ 92E5 7B               ld a,e
  61+ 92E6 AE               xor (hl)
  62+ 92E7 77           	ld (hl),a
  63+ 92E8 23           	inc hl
  64+ 92E9 7A               ld a,d
  65+ 92EA AE               xor (hl)
  66+ 92EB 77           	ld (hl),a
  67+ 92EC 23           	inc hl
  68+ 92ED D1           	pop de
  69+ 92EE 7B               ld a,e
  70+ 92EF AE               xor (hl)
  71+ 92F0 77           	ld (hl),a
  72+ 92F1 2B           	dec hl
  73+ 92F2 2B           	dec hl
  74+ 92F3 24           	inc h
  75+ 92F4 7C               ld a,h
  76+ 92F5 E6 07            and 7
  77+ 92F7 20 0A            jr nz,2F
  78+ 92F9 7D               ld a,l
  79+ 92FA C6 20            add a,$20
  80+ 92FC 6F               ld l,a
  81+ 92FD 38 04            jr c,2F
  82+ 92FF 7C               ld a,h
  83+ 9300 D6 08            sub 8
  84+ 9302 67               ld h,a
  85+ 9303 7C           2 ld a,h
  86+ 9304 FE 58            cp $58
  87+ 9306 28 25            jr z,4F
  88+ 9308 7A               ld a,d
  89+ 9309 AE               xor (hl)
  90+ 930A 77               ld (hl),a
  91+ 930B D1           	pop de
  92+ 930C 23           	inc hl
  93+ 930D 7B               ld a,e
  94+ 930E AE               xor (hl)
  95+ 930F 77           	ld (hl),a
  96+ 9310 23           	inc hl
  97+ 9311 7A               ld a,d
  98+ 9312 AE               xor (hl)
  99+ 9313 77           	ld (hl),a
 100+ 9314 2B           	dec hl
 101+ 9315 2B           	dec hl
 102+ 9316 24           	inc h
 103+ 9317 7C               ld a,h
 104+ 9318 E6 07            and 7
 105+ 931A 20 0A            jr nz,3F
 106+ 931C 7D               ld a,l
 107+ 931D C6 20            add a,$20
 108+ 931F 6F               ld l,a
 109+ 9320 38 04            jr c,3F
 110+ 9322 7C               ld a,h
 111+ 9323 D6 08            sub 8
 112+ 9325 67               ld h,a
 113+ 9326 7C           3 ld a,h
 114+ 9327 FE 58            cp $58
 115+ 9329 28 02            jr z,4F
 116+ 932B 10 B7            djnz 1B
 117+ 932D ED 7B 38 87  4 ld sp,(Stack)
 118+ 9331 C9           	ret
 119+ 9332
 120+ 9332              ; ---------------------------------------------------
 121+ 9332
 122+ 9332 ED 73 38 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9336 FD F9        	ld sp,iy
 124+ 9338
 125+ 9338              ; >>>
 126+ 9338
 127+ 9338 06 10            ld b,16
 128+ 933A D1           1 pop de
 129+ 933B 7A           	ld a,d
 130+ 933C AE           	xor (hl)
 131+ 933D 77           	ld (hl),a
 132+ 933E 24           	inc h
 133+ 933F 7C               ld a,h
 134+ 9340 E6 07            and 7
 135+ 9342 20 0C            jr nz,2F
 136+ 9344 7D               ld a,l
 137+ 9345 C6 20            add a,$20
 138+ 9347 6F               ld l,a
 139+ 9348 38 06            jr c,2F
 140+ 934A 7C               ld a,h
 141+ 934B D6 08            sub 8
 142+ 934D 67               ld h,a
 143+ 934E 18 00            jr 2F
 144+ 9350 7C           2 ld a,h
 145+ 9351 FE 58            cp $58
 146+ 9353 28 02            jr z,3F
 147+ 9355 10 E3            djnz 1B
 148+ 9357 ED 7B 38 87  3 ld sp,(Stack)
 149+ 935B C9           	ret
 150+ 935C
 151+ 935C ED 73 38 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9360 FD F9        	ld sp,iy
 153+ 9362
 154+ 9362              ; >>>
 155+ 9362
 156+ 9362 06 10            ld b,16
 157+ 9364 D1           1 pop de
 158+ 9365 7B           	ld a,e
 159+ 9366 AE           	xor (hl)
 160+ 9367 77           	ld (hl),a
 161+ 9368 24           	inc h
 162+ 9369 7C               ld a,h
 163+ 936A E6 07            and 7
 164+ 936C 20 0C            jr nz,2F
 165+ 936E 7D               ld a,l
 166+ 936F C6 20            add a,$20
 167+ 9371 6F               ld l,a
 168+ 9372 38 06            jr c,2F
 169+ 9374 7C               ld a,h
 170+ 9375 D6 08            sub 8
 171+ 9377 67               ld h,a
 172+ 9378 18 00            jr 2F
 173+ 937A 7C           2 ld a,h
 174+ 937B FE 58            cp $58
 175+ 937D 28 02            jr z,3F
 176+ 937F 10 E3            djnz 1B
 177+ 9381 ED 7B 38 87  3 ld sp,(Stack)
 178+ 9385 C9           	ret
 179+ 9386
 180+ 9386              ; ---------------------------------------------------
 181+ 9386
 182+ 9386 ED 73 38 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 938A FD F9        	ld sp,iy
 184+ 938C 06 08            ld b,8
 185+ 938E D1           1 pop de
 186+ 938F 7A           	ld a,d
 187+ 9390 AE           	xor (hl)
 188+ 9391 77           	ld (hl),a
 189+ 9392 23           	inc hl
 190+ 9393 D1           	pop de
 191+ 9394 7B           	ld a,e
 192+ 9395 AE           	xor (hl)
 193+ 9396 77           	ld (hl),a
 194+ 9397 2B           	dec hl
 195+ 9398 24            	inc h
 196+ 9399 7C               ld a,h
 197+ 939A E6 07            and 7
 198+ 939C 20 0A            jr nz,2F
 199+ 939E 7D               ld a,l
 200+ 939F C6 20            add a,$20
 201+ 93A1 6F               ld l,a
 202+ 93A2 38 04            jr c,2F
 203+ 93A4 7C               ld a,h
 204+ 93A5 D6 08            sub 8
 205+ 93A7 67               ld h,a
 206+ 93A8 7C           2 ld a,h
 207+ 93A9 FE 58            cp $58
 208+ 93AB 28 20            jr z,4F
 209+ 93AD D1               pop de
 210+ 93AE 7B           	ld a,e
 211+ 93AF AE           	xor (hl)
 212+ 93B0 77           	ld (hl),a
 213+ 93B1 23           	inc hl
 214+ 93B2 7A           	ld a,d
 215+ 93B3 AE           	xor (hl)
 216+ 93B4 77           	ld (hl),a
 217+ 93B5 2B           	dec hl
 218+ 93B6 24           	inc h
 219+ 93B7 7C               ld a,h
 220+ 93B8 E6 07            and 7
 221+ 93BA 20 0A            jr nz,3F
 222+ 93BC 7D               ld a,l
 223+ 93BD C6 20            add a,$20
 224+ 93BF 6F               ld l,a
 225+ 93C0 38 04            jr c,3F
 226+ 93C2 7C               ld a,h
 227+ 93C3 D6 08            sub 8
 228+ 93C5 67               ld h,a
 229+ 93C6 7C           3 ld a,h
 230+ 93C7 FE 58            cp $58
 231+ 93C9 28 02            jr z,4F
 232+ 93CB 10 C1            djnz 1B
 233+ 93CD ED 7B 38 87  4 ld sp,(Stack)
 234+ 93D1 C9           	ret
 235+ 93D2
 236+ 93D2 ED 73 38 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 93D6 FD F9        	ld sp,iy
 238+ 93D8 06 08            ld b,8
 239+ 93DA D1           1 pop de
 240+ 93DB D1           	pop de
 241+ 93DC 7B           	ld a,e
 242+ 93DD AE           	xor (hl)
 243+ 93DE 77           	ld (hl),a
 244+ 93DF 24            	inc h
 245+ 93E0 7C               ld a,h
 246+ 93E1 E6 07            and 7
 247+ 93E3 20 0A            jr nz,2F
 248+ 93E5 7D               ld a,l
 249+ 93E6 C6 20            add a,$20
 250+ 93E8 6F               ld l,a
 251+ 93E9 38 04            jr c,2F
 252+ 93EB 7C               ld a,h
 253+ 93EC D6 08            sub 8
 254+ 93EE 67               ld h,a
 255+ 93EF 7C           2 ld a,h
 256+ 93F0 FE 58            cp $58
 257+ 93F2 28 1B            jr z,4F
 258+ 93F4 D1               pop de
 259+ 93F5 7A           	ld a,d
 260+ 93F6 AE           	xor (hl)
 261+ 93F7 77           	ld (hl),a
 262+ 93F8 24           	inc h
 263+ 93F9 7C               ld a,h
 264+ 93FA E6 07            and 7
 265+ 93FC 20 0A            jr nz,3F
 266+ 93FE 7D               ld a,l
 267+ 93FF C6 20            add a,$20
 268+ 9401 6F               ld l,a
 269+ 9402 38 04            jr c,3F
 270+ 9404 7C               ld a,h
 271+ 9405 D6 08            sub 8
 272+ 9407 67               ld h,a
 273+ 9408 7C           3 ld a,h
 274+ 9409 FE 58            cp $58
 275+ 940B 28 02            jr z,4F
 276+ 940D 10 CB            djnz 1B
 277+ 940F ED 7B 38 87  4 ld sp,(Stack)
 278+ 9413 C9           	ret
 279+ 9414
 280+ 9414 ED 73 38 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9418 FD F9        	ld sp,iy
 282+ 941A 06 08            ld b,8
 283+ 941C D1           1 pop de
 284+ 941D 7B           	ld a,e
 285+ 941E AE           	xor (hl)
 286+ 941F 77           	ld (hl),a
 287+ 9420 23           	inc hl
 288+ 9421 7A           	ld a,d
 289+ 9422 AE           	xor (hl)
 290+ 9423 77           	ld (hl),a
 291+ 9424 2B           	dec hl
 292+ 9425 24             	inc h
 293+ 9426 7C               ld a,h
 294+ 9427 E6 07            and 7
 295+ 9429 20 0A            jr nz,2F
 296+ 942B 7D               ld a,l
 297+ 942C C6 20            add a,$20
 298+ 942E 6F               ld l,a
 299+ 942F 38 04            jr c,2F
 300+ 9431 7C               ld a,h
 301+ 9432 D6 08            sub 8
 302+ 9434 67               ld h,a
 303+ 9435 7C           2 ld a,h
 304+ 9436 FE 58            cp $58
 305+ 9438 28 21            jr z,4F
 306+ 943A D1               pop de
 307+ 943B 7A           	ld a,d
 308+ 943C AE           	xor (hl)
 309+ 943D 77           	ld (hl),a
 310+ 943E 23           	inc hl
 311+ 943F D1               pop de
 312+ 9440 7B           	ld a,e
 313+ 9441 AE           	xor (hl)
 314+ 9442 77           	ld (hl),a
 315+ 9443 2B           	dec hl
 316+ 9444 24           	inc h
 317+ 9445 7C               ld a,h
 318+ 9446 E6 07            and 7
 319+ 9448 20 0A            jr nz,3F
 320+ 944A 7D               ld a,l
 321+ 944B C6 20            add a,$20
 322+ 944D 6F               ld l,a
 323+ 944E 38 04            jr c,3F
 324+ 9450 7C               ld a,h
 325+ 9451 D6 08            sub 8
 326+ 9453 67               ld h,a
 327+ 9454 7C           3 ld a,h
 328+ 9455 FE 58            cp $58
 329+ 9457 28 02            jr z,4F
 330+ 9459 10 C1            djnz 1B
 331+ 945B ED 7B 38 87  4 ld sp,(Stack)
 332+ 945F C9           	ret
 333+ 9460
 334+ 9460 ED 73 38 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9464 FD F9        	ld sp,iy
 336+ 9466 06 08            ld b,8
 337+ 9468 D1           1 pop de
 338+ 9469 7B           	ld a,e
 339+ 946A AE           	xor (hl)
 340+ 946B 77           	ld (hl),a
 341+ 946C 24            	inc h
 342+ 946D 7C               ld a,h
 343+ 946E E6 07            and 7
 344+ 9470 20 0A            jr nz,2F
 345+ 9472 7D               ld a,l
 346+ 9473 C6 20            add a,$20
 347+ 9475 6F               ld l,a
 348+ 9476 38 04            jr c,2F
 349+ 9478 7C               ld a,h
 350+ 9479 D6 08            sub 8
 351+ 947B 67               ld h,a
 352+ 947C 7C           2 ld a,h
 353+ 947D FE 58            cp $58
 354+ 947F 28 1C            jr z,4F
 355+ 9481 D1               pop de
 356+ 9482 7A           	ld a,d
 357+ 9483 AE           	xor (hl)
 358+ 9484 77           	ld (hl),a
 359+ 9485 24           	inc h
 360+ 9486 7C               ld a,h
 361+ 9487 E6 07            and 7
 362+ 9489 20 0A            jr nz,3F
 363+ 948B 7D               ld a,l
 364+ 948C C6 20            add a,$20
 365+ 948E 6F               ld l,a
 366+ 948F 38 04            jr c,3F
 367+ 9491 7C               ld a,h
 368+ 9492 D6 08            sub 8
 369+ 9494 67               ld h,a
 370+ 9495 7C           3 ld a,h
 371+ 9496 FE 58            cp $58
 372+ 9498 28 03            jr z,4F
 373+ 949A D1               pop de
 374+ 949B 10 CB            djnz 1B
 375+ 949D ED 7B 38 87  4 ld sp,(Stack)
 376+ 94A1 C9           	ret
 377+ 94A2
 378+ 94A2              ; ---------------------------------------------------
 379+ 94A2              ;
 380+ 94A2              ;   27/02/23
 381+ 94A2              ;
 382+ 94A2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94A2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94A2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94A2
 386+ 94A2 ED 73 38 87  Pinta_Disparo ld (Stack),sp
 387+ 94A6 FD F9            ld sp,iy
 388+ 94A8 06 02            ld b,2
 389+ 94AA D1           1 pop de
 390+ 94AB 7B               ld a,e
 391+ 94AC AE               xor (hl)
 392+ 94AD 77               ld (hl),a
 393+ 94AE 23               inc hl
 394+ 94AF 7A               ld a,d
 395+ 94B0 AE               xor (hl)
 396+ 94B1 77               ld (hl),a
 397+ 94B2 2B               dec hl
 398+ 94B3
 399+ 94B3 24               inc h
 400+ 94B4 7C               ld a,h
 401+ 94B5 E6 07            and 7
 402+ 94B7 20 0A            jr nz,2F
 403+ 94B9 7D               ld a,l
 404+ 94BA C6 20            add a,$20
 405+ 94BC 6F               ld l,a
 406+ 94BD 38 04            jr c,2F
 407+ 94BF 7C               ld a,h
 408+ 94C0 D6 08            sub 8
 409+ 94C2 67               ld h,a
 410+ 94C3 7C           2 ld a,h
 411+ 94C4 FE 58            cp $58
 412+ 94C6 28 02            jr z,3F
 413+ 94C8
 414+ 94C8 10 E0            djnz 1B
 415+ 94CA ED 7B 38 87  3 ld sp,(Stack)
 416+ 94CE C9               ret
 417+ 94CF
# file closed: Rutinas_de_impresion_sprites.asm
1117  94CF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94CF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94CF              ;
   3+ 94CF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94CF              ;
   5+ 94CF              ; *****************************************************************************************************************************************************************************************
   6+ 94CF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94CF
   8+ 94CF 7C           calcula_tercio ld a,h
   9+ 94D0 E6 18        	and $18
  10+ 94D2 CB 2F        	sra a
  11+ 94D4 CB 2F        	sra a
  12+ 94D6 CB 2F        	sra a
  13+ 94D8 C9           	ret
  14+ 94D9
# file closed: calcula_tercio.asm
1118  94D9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94D9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94D9              ;
   3+ 94D9              ;
   4+ 94D9              ;	CLS.
   5+ 94D9              ;
   6+ 94D9              ;	Limpia la pantalla y define sus atributos.
   7+ 94D9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94D9              ;
   9+ 94D9              ;	COLORES: 0 ..... NEGRO
  10+ 94D9              ;    		 1 ..... AZUL
  11+ 94D9              ; 			 2 ..... ROJO
  12+ 94D9              ;			 3 ..... MAGENTA
  13+ 94D9              ; 			 4 ..... VERDE
  14+ 94D9              ; 			 5 ..... CIAN
  15+ 94D9              ;			 6 ..... AMARILLO
  16+ 94D9              ; 			 7 ..... BLANCO
  17+ 94D9              ;
  18+ 94D9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94D9              ;
  20+ 94D9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94D9
  22+ 94D9
  23+ 94D9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94DC 11 01 40     	LD DE,$4001
  25+ 94DF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94E2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94E4 ED B0        	LDIR
  28+ 94E6 01 FF 02     	LD BC,767
  29+ 94E9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94EA ED B0        	LDIR
  31+ 94EC C9           	ret
  32+ 94ED
# file closed: Cls.asm
1119  94ED              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94ED              ; ******************************************************************************************************************************************************************************************
   2+ 94ED              ;
   3+ 94ED              ;   22/01/23
   4+ 94ED              ;
   5+ 94ED              ;	Mov_down
   6+ 94ED              ;
   7+ 94ED              ; 	Mueve el Sprite X px hacia abajo.
   8+ 94ED              ;
   9+ 94ED              ;
  10+ 94ED 21 1C 87     Mov_down ld hl,Ctrl_0
  11+ 94F0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 94F2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 94F2              ; 																	; _ en el caso de que no lo haya.
  14+ 94F2 3A 06 87     	ld a,(Vel_down)
  15+ 94F5 47           	ld b,a
  16+ 94F6 2A F0 86         ld hl,(Posicion_actual)
  17+ 94F9 CD CF 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 94FC E6 02        	and 2
  19+ 94FE 28 0F        	jr z,1F
  20+ 9500
  21+ 9500              ; Nos encontramos en el último tercio de pantalla.
  22+ 9500              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9500
  24+ 9500 7C           	ld a,h
  25+ 9501 FE 57        	cp $57
  26+ 9503 20 0A        	jr nz,1F
  27+ 9505 7D           	ld a,l
  28+ 9506 C6 20        	add $20
  29+ 9508 30 05        	jr nc,1F
  30+ 950A
  31+ 950A              ; ------------------------------
  32+ 950A CD E5 97     	call Reaparece_arriba
  33+ 950D              ;	call Reinicio
  34+ 950D              ; ------------------------------
  35+ 950D
  36+ 950D 18 08        	jr 3F
  37+ 950F CD 0F 92     1 call NextScan
  38+ 9512 22 F0 86     	ld (Posicion_actual),hl
  39+ 9515 10 E2            djnz 2B
  40+ 9517 CD FB 97     3 call Genera_coordenadas
  41+ 951A C9           	ret
  42+ 951B
  43+ 951B              ; ******************************************************************************************************************************************************************************************
  44+ 951B              ;
  45+ 951B              ;   22/01/23
  46+ 951B              ;
  47+ 951B              ;	Mov_up
  48+ 951B              ;
  49+ 951B              ; 	Mueve el Sprite hacia arriba.
  50+ 951B              ;
  51+ 951B              ;
  52+ 951B 21 1C 87     Mov_up ld hl,Ctrl_0
  53+ 951E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9520              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9520              ; 																		; _ en el caso de que no lo haya.
  56+ 9520 3A 05 87     	ld a,(Vel_up)
  57+ 9523 47           	ld b,a
  58+ 9524 2A F0 86     	ld hl,(Posicion_actual)
  59+ 9527 CD CF 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 952A A7           	and a
  61+ 952B 20 10        	jr nz,1F
  62+ 952D
  63+ 952D              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 952D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 952D
  66+ 952D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 952E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9530 20 0B            jr nz,1F
  69+ 9532 7D               ld a,l
  70+ 9533 D6 20            sub $20
  71+ 9535 30 06            jr nc,1F
  72+ 9537 25               dec h
  73+ 9538
  74+ 9538              ; -----------------------------
  75+ 9538 CD D5 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 953B              ;	call Reinicio
  77+ 953B              ; -----------------------------
  78+ 953B
  79+ 953B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 953D CD 1E 92     1 call PreviousScan
  81+ 9540 22 F0 86     	ld (Posicion_actual),hl
  82+ 9543 10 E2            djnz 3B
  83+ 9545 CD FB 97     2 call Genera_coordenadas
  84+ 9548 C9           	ret
  85+ 9549
  86+ 9549              ; ******************************************************************************************************************************************************************************************
  87+ 9549              ;
  88+ 9549              ;	19/10/22
  89+ 9549              ;
  90+ 9549              ;	Mov_right.
  91+ 9549              ;
  92+ 9549              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9549              ;
  94+ 9549
  95+ 9549 21 1C 87     Mov_right ld hl,Ctrl_0
  96+ 954C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 954E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 954E              ; 																	; _ en el caso de que no lo haya.
  99+ 954E 3A 1C 87     	ld a,(Ctrl_0)
 100+ 9551 CB 77        	bit 6,a
 101+ 9553 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9555
 103+ 9555 CD 83 97     	call Stop_Amadeus_right
 104+ 9558 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9559 18 4D        	jr 8F
 106+ 955B
 107+ 955B 3A F4 86     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 955E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9560 20 46        	jr nz,8F
 110+ 9562
 111+ 9562 3A F6 86     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9565 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9566 28 40        	jr z,8F
 114+ 9568
 115+ 9568              ; ---------- ---------- ----------
 116+ 9568              ;
 117+ 9568              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9568
 119+ 9568 3A 04 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 956B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 956D 28 11        	jr z,1F
 122+ 956F 38 06        	jr c,6F
 123+ 9571 FE 04        	cp 4
 124+ 9573 28 14        	jr z,7F
 125+ 9575 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9577
 127+ 9577              ; ---------- ---------- ----------
 128+ 9577              ;
 129+ 9577              ; Perfiles de velocidad
 130+ 9577              ;
 131+ 9577
 132+ 9577 3A F6 86     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 957A FE FE        	cp $fe
 134+ 957C 20 2A        	jr nz,8F
 135+ 957E 18 10        	jr 3F
 136+ 9580 3A F6 86     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9583 FE FD        	cp $fd
 138+ 9585 20 21        	jr nz,8F
 139+ 9587 18 07        	jr 3F
 140+ 9589 3A F6 86     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 958C FE FB        	cp $fb
 142+ 958E 20 18        	jr nz,8F
 143+ 9590
 144+ 9590              ; ---------- ---------- ----------
 145+ 9590
 146+ 9590              3
 147+ 9590 CD C3 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9593              ;	call Reinicio
 149+ 9593
 150+ 9593              ; ---------- ---------- ----------
 151+ 9593              ;
 152+ 9593              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9593
 154+ 9593 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9595 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9596 CD AF 95     	call DESPLZ_DER
 157+ 9599 C1           	pop bc
 158+ 959A 10 F9        	djnz 5B
 159+ 959C 2A F0 86     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 959F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 95A0 22 F0 86     	ld (Posicion_actual),hl
 162+ 95A3 CD FB 97     	call Genera_coordenadas
 163+ 95A6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 95A8
 165+ 95A8              ; ---------- ---------- ----------
 166+ 95A8
 167+ 95A8 2A F0 86     8 ld hl,(Posicion_actual)
 168+ 95AB CD AF 95     	call DESPLZ_DER
 169+ 95AE C9           2 ret
 170+ 95AF
 171+ 95AF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 95AF              ;
 173+ 95AF              ;	22/9/22
 174+ 95AF              ;
 175+ 95AF
 176+ 95AF CD BE 95     DESPLZ_DER call Desplaza_derecha
 177+ 95B2 CD 0A 96         call modifica_parametros_1er_DESPLZ_2
 178+ 95B5 CD 33 96         call Ciclo_completo
 179+ 95B8 21 1C 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 95BB CB FE        	set 7,(hl)
 181+ 95BD C9           	ret
 182+ 95BE
 183+ 95BE              ; ******************************************************************************************************************************************************************************************
 184+ 95BE              ;	15/02/23
 185+ 95BE              ;
 186+ 95BE
 187+ 95BE 3A 04 87     Desplaza_derecha ld a,(Vel_right)
 188+ 95C1 47           	ld b,a
 189+ 95C2 2A FC 86     	ld hl,(Puntero_DESPLZ_der)
 190+ 95C5 23           1 inc hl
 191+ 95C6 23           	inc hl
 192+ 95C7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 95C9 22 FC 86     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 95CC CD A6 89     	call Extrae_address
 195+ 95CF 22 F2 86     	ld (Puntero_objeto),hl
 196+ 95D2
 197+ 95D2              ; Modifica (Puntero_DESPLZ_izq).
 198+ 95D2
 199+ 95D2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 95D2              ; Cuántos movimientos hemos hecho ??
 201+ 95D2              ; DE contiene (Puntero_DESPLZ_der).
 202+ 95D2
 203+ 95D2 2A F8 86     7 ld hl,(Indice_Sprite_der)
 204+ 95D5 EB           	ex de,hl
 205+ 95D6 A7           	and a
 206+ 95D7 ED 52        	sbc hl,de
 207+ 95D9 CB 3D        	srl l
 208+ 95DB 3E 08        6 ld a,8
 209+ 95DD 95           	sub l
 210+ 95DE 30 1E        	jr nc,3F
 211+ 95E0
 212+ 95E0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 95E0              ; B="0".
 214+ 95E0
 215+ 95E0 04           4 inc b
 216+ 95E1 3C           	inc a
 217+ 95E2 20 FC        	jr nz,4B
 218+ 95E4 78           	ld a,b
 219+ 95E5 08           	ex af,af
 220+ 95E6 2A F8 86     	ld hl,(Indice_Sprite_der)
 221+ 95E9 23           5 inc hl
 222+ 95EA 23           	inc hl
 223+ 95EB 10 FC        	djnz 5B
 224+ 95ED 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 225+ 95F0 CD A6 89     	call Extrae_address
 226+ 95F3 22 F2 86     	ld (Puntero_objeto),hl
 227+ 95F6
 228+ 95F6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 95F6              ; _(Posicion_actual).
 230+ 95F6
 231+ 95F6 21 F0 86     	ld hl,Posicion_actual
 232+ 95F9 34           	inc (hl)
 233+ 95FA 08               ex af,af
 234+ 95FB 6F           	ld l,a
 235+ 95FC 18 DD        	jr 6B
 236+ 95FE
 237+ 95FE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 95FE
 239+ 95FE 47           3 ld b,a
 240+ 95FF 2A FA 86     	ld hl,(Indice_Sprite_izq)
 241+ 9602 23           2 inc hl
 242+ 9603 23           	inc hl
 243+ 9604 10 FC        	djnz 2B
 244+ 9606 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 245+ 9609 C9           8 ret
 246+ 960A
 247+ 960A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 960A              ;
 249+ 960A              ;	24/7/22
 250+ 960A              ;
 251+ 960A              ;	modifica_parametros_1er_DESPLZ_2
 252+ 960A              ;
 253+ 960A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 960A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 960A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 960A
 257+ 960A 3A F6 86     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 960D A7           	and a
 259+ 960E 20 1F        	jr nz,1F
 260+ 9610 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9612 32 F6 86         ld (CTRL_DESPLZ),a
 262+ 9615
 263+ 9615 21 EF 86     	ld hl,Columns
 264+ 9618 34           	inc (hl)
 265+ 9619 3A 02 87     	ld a,(Cuad_objeto)
 266+ 961C E6 01        	and 1
 267+ 961E 28 0F        	jr z,1F
 268+ 9620 2A F0 86     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9623 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9624 22 F0 86     	ld (Posicion_actual),hl
 271+ 9627 CD FB 97     	call Genera_coordenadas
 272+ 962A CD 8F 97     	call Inc_CTRL_DESPLZ
 273+ 962D 18 03        	jr 2F
 274+ 962F CD 8F 97     1 call Inc_CTRL_DESPLZ
 275+ 9632 C9           2 ret
 276+ 9633
 277+ 9633              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9633              ;
 279+ 9633              ;	24/7/22
 280+ 9633              ;
 281+ 9633              ;	Ciclo_completo.
 282+ 9633              ;
 283+ 9633              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9633              ;
 285+ 9633              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9633              ; 	Decrementamos (Columns).
 287+ 9633              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9633              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9633
 290+ 9633
 291+ 9633 3A F6 86     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9636 FE FF        	cp $ff
 293+ 9638 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 963A E6 F0        	and $f0
 295+ 963C 20 28        	jr nz,3F
 296+ 963E
 297+ 963E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 963E
 299+ 963E 3A F6 86     	ld a,(CTRL_DESPLZ)
 300+ 9641 47           	ld b,a
 301+ 9642 3E F8        	ld a,$f8
 302+ 9644 80           	add b
 303+ 9645 32 F6 86     	ld (CTRL_DESPLZ),a
 304+ 9648 18 1C        	jr 3F
 305+ 964A 21 EF 86     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 964D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 964E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 964F 32 F6 86     	ld (CTRL_DESPLZ),a
 309+ 9652 3A 02 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9655 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9657 20 0A        	jr nz,2F
 312+ 9659 2A F0 86     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 965C 23           	inc hl
 314+ 965D 22 F0 86     	ld (Posicion_actual),hl
 315+ 9660 CD FB 97     	call Genera_coordenadas
 316+ 9663
 317+ 9663              ; Inicia el puntero de Sprite.
 318+ 9663
 319+ 9663 CD BD 89     2 call Inicia_puntero_objeto_der
 320+ 9666 C9           3 ret
 321+ 9667
 322+ 9667              ; ******************************************************************************************************************************************************************************************
 323+ 9667              ;
 324+ 9667              ;	15/02/23
 325+ 9667              ;
 326+ 9667              ;	Mov_left.
 327+ 9667              ;
 328+ 9667              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9667              ;
 330+ 9667              Mov_left
 331+ 9667
 332+ 9667 21 1C 87     	ld hl,Ctrl_0
 333+ 966A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 966C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 966C              ; 																	; _ en el caso de que no lo haya.
 336+ 966C 3A 1C 87     	ld a,(Ctrl_0)
 337+ 966F CB 77        	bit 6,a
 338+ 9671 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9673
 340+ 9673 CD 89 97     	call Stop_Amadeus_left
 341+ 9676 C8           	ret z
 342+ 9677 20 4A        	jr nz,8F
 343+ 9679
 344+ 9679 3A F4 86     11 ld a,(Coordenada_X)
 345+ 967C A7           	and a
 346+ 967D 20 44        	jr nz,8F
 347+ 967F
 348+ 967F 3A F6 86     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9682 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9683 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9685
 352+ 9685              ; ---------- ---------- ----------
 353+ 9685
 354+ 9685 3A 03 87     	ld a,(Vel_left)
 355+ 9688 FE 02        	cp 2
 356+ 968A 28 0F        	jr z,1F
 357+ 968C 38 04        	jr c,6F
 358+ 968E FE 04        	cp 4
 359+ 9690 28 12        	jr z,7F
 360+ 9692
 361+ 9692              ; ---------- ---------- ----------
 362+ 9692
 363+ 9692 3A F6 86     6 ld a,(CTRL_DESPLZ)
 364+ 9695 FE F8        	cp $f8
 365+ 9697 20 2A        	jr nz,8F
 366+ 9699 18 10        	jr 4F
 367+ 969B 3A F6 86     1 ld a,(CTRL_DESPLZ)
 368+ 969E FE F9        	cp $f9
 369+ 96A0 20 21        	jr nz,8F
 370+ 96A2 18 07        	jr 4F
 371+ 96A4 3A F6 86     7 ld a,(CTRL_DESPLZ)
 372+ 96A7 FE FB        	cp $fb
 373+ 96A9 20 18        	jr nz,8F
 374+ 96AB
 375+ 96AB              ; ---------- ---------- ----------
 376+ 96AB
 377+ 96AB              4
 378+ 96AB CD B1 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 96AE              ;	call Reinicio
 380+ 96AE
 381+ 96AE              ; ---------- ---------- ----------
 382+ 96AE
 383+ 96AE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 96B0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 96B1
 386+ 96B1              ;	ld hl,(Indice_Sprite_izq)
 387+ 96B1              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 96B1
 389+ 96B1 CD CA 96     	call DESPLZ_IZQ
 390+ 96B4 C1           	pop bc
 391+ 96B5 10 F9        	djnz 5B
 392+ 96B7 2A F0 86     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 96BA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 96BB 22 F0 86     	ld (Posicion_actual),hl
 395+ 96BE CD FB 97     	call Genera_coordenadas
 396+ 96C1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 96C3
 398+ 96C3              ; ---------- ---------- ----------
 399+ 96C3
 400+ 96C3              ; Movemos, no hay recolocación.
 401+ 96C3
 402+ 96C3 2A F0 86     8 ld hl,(Posicion_actual)
 403+ 96C6 CD CA 96     	call DESPLZ_IZQ
 404+ 96C9 C9           2 ret
 405+ 96CA
 406+ 96CA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 96CA              ;
 408+ 96CA              ;	22/9/22
 409+ 96CA
 410+ 96CA              DESPLZ_IZQ
 411+ 96CA
 412+ 96CA CD D9 96     	call Desplaza_izquierda
 413+ 96CD CD 25 97         call modifica_parametros_1er_DESPLZ
 414+ 96D0 CD 4D 97     	call Ciclo_completo_2
 415+ 96D3 21 1C 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 96D6 CB BE        	res 7,(hl)
 417+ 96D8 C9           	ret
 418+ 96D9
 419+ 96D9              Desplaza_izquierda
 420+ 96D9
 421+ 96D9 3A 03 87     	ld a,(Vel_left)
 422+ 96DC 47           	ld b,a
 423+ 96DD 2A FE 86     	ld hl,(Puntero_DESPLZ_izq)
 424+ 96E0 23           1 inc hl
 425+ 96E1 23           	inc hl
 426+ 96E2 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 96E4 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 428+ 96E7 CD A6 89     	call Extrae_address
 429+ 96EA 22 F2 86     	ld (Puntero_objeto),hl
 430+ 96ED
 431+ 96ED              ; Modifica (Puntero_DESPLZ_der).
 432+ 96ED
 433+ 96ED              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 96ED              ; Cuántos movimientos hemos hecho ??
 435+ 96ED              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 96ED
 437+ 96ED 2A FA 86     7 ld hl,(Indice_Sprite_izq)
 438+ 96F0 EB           	ex de,hl
 439+ 96F1 A7           	and a
 440+ 96F2 ED 52        	sbc hl,de
 441+ 96F4 CB 3D        	srl l
 442+ 96F6 3E 08        6 ld a,8
 443+ 96F8 95           	sub l
 444+ 96F9 30 1E        	jr nc,3F
 445+ 96FB
 446+ 96FB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 96FB              ; B="0".
 448+ 96FB
 449+ 96FB 04           4 inc b
 450+ 96FC 3C           	inc a
 451+ 96FD 20 FC        	jr nz,4B
 452+ 96FF 78           	ld a,b
 453+ 9700 08           	ex af,af
 454+ 9701 2A FA 86     	ld hl,(Indice_Sprite_izq)
 455+ 9704 23           5 inc hl
 456+ 9705 23           	inc hl
 457+ 9706 10 FC        	djnz 5B
 458+ 9708 22 FE 86     	ld (Puntero_DESPLZ_izq),hl
 459+ 970B CD A6 89     	call Extrae_address
 460+ 970E 22 F2 86     	ld (Puntero_objeto),hl
 461+ 9711
 462+ 9711              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9711              ; _(Posicion_actual).
 464+ 9711
 465+ 9711 21 F0 86     	ld hl,Posicion_actual
 466+ 9714 35           	dec (hl)
 467+ 9715 08           	ex af,af
 468+ 9716 6F           	ld l,a
 469+ 9717 18 DD        	jr 6B
 470+ 9719
 471+ 9719              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9719
 473+ 9719 47           3 ld b,a
 474+ 971A 2A F8 86     	ld hl,(Indice_Sprite_der)
 475+ 971D 23           2 inc hl
 476+ 971E 23           	inc hl
 477+ 971F 10 FC        	djnz 2B
 478+ 9721 22 FC 86     	ld (Puntero_DESPLZ_der),hl
 479+ 9724 C9           8 ret
 480+ 9725
 481+ 9725              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9725              ;
 483+ 9725              ;	modifica_parametros_1er_DESPLZ
 484+ 9725              ;
 485+ 9725              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9725              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9725              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9725
 489+ 9725 3A F6 86     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9728 A7           	and a
 491+ 9729 20 1E        	jr nz,1F
 492+ 972B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 972C 32 F6 86         ld (CTRL_DESPLZ),a
 494+ 972F 21 EF 86     	ld hl,Columns
 495+ 9732 34           	inc (hl)
 496+ 9733 3A 02 87     	ld a,(Cuad_objeto)
 497+ 9736 E6 01        	and 1
 498+ 9738 20 0F        	jr nz,1F
 499+ 973A 2A F0 86     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 973D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 973E 22 F0 86     	ld (Posicion_actual),hl
 502+ 9741 CD FB 97     	call Genera_coordenadas
 503+ 9744 CD A0 97     	call Dec_CTRL_DESPLZ
 504+ 9747 18 03        	jr 2F
 505+ 9749 CD A0 97     1 call Dec_CTRL_DESPLZ
 506+ 974C C9           2 ret
 507+ 974D
 508+ 974D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 974D
 510+ 974D 3A F6 86     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9750 FE F7        	cp $f7
 512+ 9752 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9754 30 2C        	jr nc,3F
 514+ 9756
 515+ 9756              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9756
 517+ 9756 06 00        	ld b,0
 518+ 9758 04           4 inc b
 519+ 9759 3C           	inc a
 520+ 975A FE F7        	cp $f7
 521+ 975C 20 FA        	jr nz,4B
 522+ 975E 3E FF        	ld a,$ff
 523+ 9760 90           	sub b
 524+ 9761 32 F6 86     	ld (CTRL_DESPLZ),a
 525+ 9764 18 1C        	jr 3F
 526+ 9766
 527+ 9766              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9766
 529+ 9766 21 EF 86     1 ld hl,Columns
 530+ 9769 35           	dec (hl)
 531+ 976A AF           	xor a
 532+ 976B 32 F6 86     	ld (CTRL_DESPLZ),a
 533+ 976E 3A 02 87     	ld a,(Cuad_objeto)
 534+ 9771 E6 01        	and 1
 535+ 9773 28 0A        	jr z,2F
 536+ 9775 2A F0 86     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9778 2B           	dec hl
 538+ 9779 22 F0 86     	ld (Posicion_actual),hl
 539+ 977C CD FB 97     	call Genera_coordenadas
 540+ 977F
 541+ 977F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 977F
 543+ 977F CD D0 89     2 call Inicia_puntero_objeto_izq
 544+ 9782 C9           3 ret
 545+ 9783
 546+ 9783              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9783              ;
 548+ 9783              ;	19/10/22
 549+ 9783              ;
 550+ 9783              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9783              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9783
 553+ 9783 3A F4 86     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9786 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9788 C9           	ret
 556+ 9789
 557+ 9789              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9789              ;
 559+ 9789              ;	19/10/22
 560+ 9789              ;
 561+ 9789              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9789              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9789
 564+ 9789 3A F4 86     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 978C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 978E C9           	ret
 567+ 978F
 568+ 978F              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 978F              ;
 570+ 978F              ;	24/7/22
 571+ 978F              ;
 572+ 978F              ;	Inc_CTRL_DESPLZ
 573+ 978F              ;
 574+ 978F              ;
 575+ 978F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 978F
 577+ 978F 21 F6 86     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9792 3A 04 87     	ld a,(Vel_right)
 579+ 9795 A7           	and a
 580+ 9796 28 06        	jr z,1F
 581+ 9798 47           	ld b,a
 582+ 9799 34           3 inc (hl)
 583+ 979A 10 FD        	djnz 3B
 584+ 979C 18 01        	jr 2F
 585+ 979E 34           1 inc (hl)
 586+ 979F C9           2 ret
 587+ 97A0
 588+ 97A0              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 97A0              ;
 590+ 97A0              ;	5/2/23
 591+ 97A0              ;
 592+ 97A0              ;	Dec_CTRL_DESPLZ
 593+ 97A0              ;
 594+ 97A0              ;
 595+ 97A0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 97A0
 597+ 97A0 21 F6 86     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 97A3 3A 03 87     	ld a,(Vel_left)
 599+ 97A6 A7           	and a
 600+ 97A7 28 06        	jr z,1F
 601+ 97A9 47           	ld b,a
 602+ 97AA 35           3 dec (hl)
 603+ 97AB 10 FD        	djnz 3B
 604+ 97AD 18 01        	jr 2F
 605+ 97AF 35           1 dec (hl)
 606+ 97B0 C9           2 ret
 607+ 97B1
 608+ 97B1              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 97B1
 610+ 97B1 2A F0 86     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 97B4 01 1F 00     	ld bc,31
 612+ 97B7 A7           	and a
 613+ 97B8 ED 4A        	adc hl,bc
 614+ 97BA 22 F0 86     	ld (Posicion_actual),hl
 615+ 97BD 21 1C 87     	ld hl,Ctrl_0														; $xxx1
 616+ 97C0 CB C6        	set 0,(hl)
 617+ 97C2 C9           	ret
 618+ 97C3
 619+ 97C3              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 97C3
 621+ 97C3 2A F0 86     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 97C6 01 1F 00     	ld bc,31
 623+ 97C9 A7           	and a
 624+ 97CA ED 42        	sbc hl,bc
 625+ 97CC 22 F0 86     	ld (Posicion_actual),hl 											; $xx1x
 626+ 97CF 21 1C 87     	ld hl,Ctrl_0
 627+ 97D2 CB CE        	set 1,(hl)
 628+ 97D4 C9           	ret
 629+ 97D5
 630+ 97D5              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 97D5
 632+ 97D5 24           Reaparece_abajo inc h
 633+ 97D6 01 E0 17     	ld bc,$17e0
 634+ 97D9 A7           	and a
 635+ 97DA ED 4A        	adc hl,bc
 636+ 97DC 22 F0 86     	ld (Posicion_actual),hl
 637+ 97DF 21 1C 87     	ld hl,Ctrl_0
 638+ 97E2 CB D6        	set 2,(hl)
 639+ 97E4 C9           	ret
 640+ 97E5
 641+ 97E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 97E5
 643+ 97E5 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 97E8 A7           	and a
 645+ 97E9 ED 42        	sbc hl,bc
 646+ 97EB 22 F0 86     	ld (Posicion_actual),hl
 647+ 97EE 21 1C 87     	ld hl,Ctrl_0
 648+ 97F1 CB DE        	set 3,(hl)
 649+ 97F3 C9           	ret
 650+ 97F4
 651+ 97F4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 97F4
 653+ 97F4 2A 00 87     Reinicio ld hl,(Posicion_inicio)
 654+ 97F7 22 F0 86     	ld (Posicion_actual),hl
 655+ 97FA C9           	ret
# file closed: Direcciones.asm
1120  97FB              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 97FB              ; ------------------------------------------------------------------------
   2+ 97FB              ;
   3+ 97FB              ;	02/04/23
   4+ 97FB              ;
   5+ 97FB              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 97FB              ;	Fila superior "0", Columna izquierda "0".
   7+ 97FB              ;
   8+ 97FB              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 97FB              ;
  10+ 97FB              ;	Modifica: A,BC y DE.
  11+ 97FB
  12+ 97FB C5           Genera_coordenadas push bc
  13+ 97FC E5           	push hl
  14+ 97FD D5           	push de
  15+ 97FE
  16+ 97FE 2A F0 86     	ld hl,(Posicion_actual)
  17+ 9801
  18+ 9801 7D           	ld a,l
  19+ 9802 E6 1F        	and $1f
  20+ 9804 32 F4 86     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9807
  22+ 9807 CD CF 94     	call calcula_tercio
  23+ 980A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 980B
  25+ 980B 1E 00        	ld e,0
  26+ 980D 7D           	ld a,l
  27+ 980E E6 E0        	and $e0
  28+ 9810 28 01        	jr z,1F
  29+ 9812 04           	inc b
  30+ 9813
  31+ 9813 04           1 inc b
  32+ 9814 05           	dec b
  33+ 9815 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9817              ;														; _ , salimos.
  35+ 9817 1C           3 inc e
  36+ 9818 D6 20        	sub 32
  37+ 981A 20 FB        	jr nz,3B
  38+ 981C 10 F5        	djnz 1B
  39+ 981E
  40+ 981E 7B           2 ld a,e
  41+ 981F 32 F5 86     	ld (Coordenada_y),a
  42+ 9822
  43+ 9822 D1           	pop de
  44+ 9823 E1           	pop hl
  45+ 9824 C1           	pop bc
  46+ 9825
  47+ 9825 C9           	ret
  48+ 9826
  49+ 9826              ; ------------------------------------------------------------------------
  50+ 9826              ;	28/03/23
  51+ 9826              ;
  52+ 9826              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9826              ;	Fila superior "0", Columna izquierda "0".
  54+ 9826              ;
  55+ 9826              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9826              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9826              ;
  58+ 9826              ;		DE="$120d"
  59+ 9826              ;
  60+ 9826              ;		D, (Coordenada_X), Columnas, $12
  61+ 9826              ;		E, (Coordenada_y), Filas, $0d
  62+ 9826              ;
  63+ 9826              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9826
  65+ 9826              ;	Modifica: A,BC y DE.
  66+ 9826
  67+ 9826
  68+ 9826              Genera_coordenadas_disparo
  69+ 9826
  70+ 9826              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9826
  72+ 9826 7D           	ld a,l
  73+ 9827 E6 1F        	and $1f
  74+ 9829 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 982A CD CF 94     	call calcula_tercio
  76+ 982D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 982E 1E 00        	ld e,0
  78+ 9830 7D           	ld a,l
  79+ 9831 E6 E0        	and $e0
  80+ 9833 28 01        	jr z,1F
  81+ 9835 04           	inc b
  82+ 9836 1C           1 inc e
  83+ 9837 D6 20        	sub 32
  84+ 9839 20 FB        	jr nz,1B
  85+ 983B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 983D C9           	ret
  87+ 983E
# file closed: Genera_coordenadas.asm
1121  983E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 983E
   2+ 983E
   3+ 983E              ;   11/8/22
   4+ 983E              ;
   5+ 983E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 983E              ;
   7+ 983E              ;   Mov_obj.asm
   8+ 983E              ;
   9+ 983E              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 983E              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 983E              ;
  12+ 983E              ;   Codificación:
  13+ 983E              ;
  14+ 983E              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 983E
  16+ 983E              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 983E
  18+ 983E 02 40 00     Arriba db 2,%01000000,0
  19+ 9841 02 80 00     Abajo db 2,%10000000,0
  20+ 9844 02 20 00     Derecha db 2,%00100000,0
  21+ 9847 02 10 00     Izquierda db 2,%00010000,0
  22+ 984A 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 984E 60 42 60 40
  22+ 9852 63
  23+ 9853 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9857 22 A3 80 A0
  24+ 985B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 985F 84 A0 83 A0
  25+ 9863 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9867 80 A3 22 A0
  26+ 986B 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 986F 40 60 42 60
  27+ 9873 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9877
  29+ 9877 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 987B 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 987F 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9883 84 00
  32+ 9885 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9889 84 00
  33+ 988B 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 988F 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9893 1F 1F 1F 1F
  35+ 9897 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 989B 1F 1F 1F 1F
  35+ 989F 1F
  36+ 98A0 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 98A4 2F 2F 2F 2F
  36+ 98A8 2F 2F
  37+ 98AA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 98AE 2F 2F 00
  38+ 98B1
  39+ 98B1              ; ----- ----- ----- ----- -----
  40+ 98B1
  41+ 98B1 8F 98        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 98B3 8B 98        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 98B5 47 98        Indice_mov_Izquierda defw Izquierda
  44+ 98B7 44 98        Indice_mov_Derecha defw Derecha
  45+ 98B9 41 98        Indice_mov_Abajo defw Abajo
  46+ 98BB 3E 98        Indice_mov_Arriba defw Arriba
  47+ 98BD 7B 98        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 98BF 7F 98        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 98C1 77 98        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 98C3 85 98        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 98C5 4A 98        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 98C7              ; ----- ----- ----- ----- -----
  53+ 98C7
  54+ 98C7 3A 23 87     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 98CA A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 98CB 28 02            jr z,1F
  57+ 98CD 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 98CF 3A 24 87     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 98D2 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 98D4 32 24 87         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 98D7              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 98D7 2A 21 87         ld hl,(Puntero_mov)
  63+ 98DA 7E               ld a,(hl)
  64+ 98DB 32 23 87         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 98DE 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 98DF 22 21 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 98E2
  68+ 98E2 3A 25 87     Decoder ld a,(Repetimos_db)
  69+ 98E5 A7               and a
  70+ 98E6 20 0C            jr nz,12F
  71+ 98E8 2A 21 87         ld hl,(Puntero_mov)
  72+ 98EB 7E               ld a,(hl)
  73+ 98EC A7               and a
  74+ 98ED 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 98EF E6 0F            and $0f
  76+ 98F1 32 25 87         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 98F4              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 98F4 2A 21 87     12 ld hl,(Puntero_mov)
  79+ 98F7 CB 7E            bit 7,(hl)
  80+ 98F9 28 03            jr z,2F
  81+ 98FB CD ED 94         call Mov_down
  82+ 98FE 2A 21 87     2 ld hl, (Puntero_mov)
  83+ 9901 CB 76            bit 6,(hl)
  84+ 9903 28 03            jr z,3F
  85+ 9905 CD 1B 95         call Mov_up
  86+ 9908 2A 21 87     3 ld hl, (Puntero_mov)
  87+ 990B CB 6E            bit 5,(hl)
  88+ 990D 28 03            jr z,4F
  89+ 990F CD 49 95         call Mov_right
  90+ 9912 2A 21 87     4 ld hl, (Puntero_mov)
  91+ 9915 CB 66            bit 4,(hl)
  92+ 9917 28 03            jr z,5F
  93+ 9919 CD 67 96         call Mov_left
  94+ 991C
  95+ 991C              ; ---------- --------- --------- ---------- ----------
  96+ 991C
  97+ 991C 3A 25 87     5 ld a,(Repetimos_db)
  98+ 991F A7               and a
  99+ 9920 28 07            jr z,6F
 100+ 9922 3D               dec a
 101+ 9923 32 25 87         ld (Repetimos_db),a
 102+ 9926 28 01            jr z,6f
 103+ 9928 C9           11 ret
 104+ 9929 21 23 87     6 ld hl,Contador_db_mov
 105+ 992C 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 992D 2A 21 87         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9930 23               inc hl
 108+ 9931 22 21 87         ld (Puntero_mov),hl
 109+ 9934 18 F2            jr 11B
 110+ 9936 2A 1F 87     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9939 3A 24 87         ld a,(Incrementa_puntero)
 112+ 993C 47               ld b,a
 113+ 993D 23           8 inc hl
 114+ 993E 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9940 5E               ld e,(hl)
 116+ 9941 23               inc hl
 117+ 9942 56               ld d,(hl)
 118+ 9943 EB               ex de,hl
 119+ 9944 22 21 87         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9947 18 DF            jr 11B
 121+ 9949
 122+ 9949              ; ---------- --------- --------- ---------- ----------
 123+ 9949              ;
 124+ 9949              ;   11/8/22
 125+ 9949              ;
 126+ 9949              ;   Prepara_Puntero_mov
 127+ 9949
 128+ 9949 E5           Prepara_Puntero_mov push hl
 129+ 994A D5               push de
 130+ 994B 2A 1F 87         ld hl,(Puntero_indice_mov)
 131+ 994E 5E               ld e,(hl)
 132+ 994F 23               inc hl
 133+ 9950 56               ld d,(hl)
 134+ 9951 EB               ex de,hl
 135+ 9952 22 21 87         ld (Puntero_mov),hl
 136+ 9955 D1               pop de
 137+ 9956 E1               pop hl
 138+ 9957 C9               ret
 139+ 9958
 140+ 9958              ; ---------- --------- --------- ---------- ----------
 141+ 9958              ;
 142+ 9958              ;   11/8/22
 143+ 9958              ;
 144+ 9958              ;   Reinicia_el_movimiento
 145+ 9958
 146+ 9958 CD 49 99     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 995B AF               xor a
 148+ 995C 32 23 87         ld (Contador_db_mov),a
 149+ 995F 32 24 87         ld (Incrementa_puntero),a
 150+ 9962 C3 C7 98         jp Movimiento
 151+ 9965 C9               ret
 152+ 9966              ; ---------- --------- --------- ---------- ----------
 153+ 9966
 154+ 9966
 155+ 9966
 156+ 9966
 157+ 9966
 158+ 9966
 159+ 9966
 160+ 9966
 161+ 9966
 162+ 9966
 163+ 9966
 164+ 9966
 165+ 9966
 166+ 9966
 167+ 9966
 168+ 9966
 169+ 9966
 170+ 9966
# file closed: Patrones_de_mov.asm
1122  9966              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9966              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9966              ;
   3+ 9966              ;	3/1/23
   4+ 9966              ;
   5+ 9966              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9966
   7+ 9966              ;	ADC HL,SP	LD (addr),SP
   8+ 9966              ;	ADD HL,SP	LD SP,(addr)
   9+ 9966              ;	ADD IX,SP	LD SP,nn
  10+ 9966              ; 	ADD IY,SP	LD SP,HL
  11+ 9966              ;				LD SP,IX
  12+ 9966              ;	DEC SP		LD SP,IY
  13+ 9966
  14+ 9966              ;	EX (SP),HL
  15+ 9966              ;	EX (SP),IX
  16+ 9966              ;	EX (SP),IY
  17+ 9966
  18+ 9966              ;	INC SP
  19+ 9966
  20+ 9966
  21+ 9966                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 38 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 2B 87         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 3E 87         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 3C 87     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 3E 87         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 3C 87     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 38 87  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1123  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1124  7FE6
1125  7FE6              	SAVESNA "Pruebas.sna", START
1126  7FE6
1127  7FE6
1128  7FE6
# file closed: Banco_de_pruebas.asm
