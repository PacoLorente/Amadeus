# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 16 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DD 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 23 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 18 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 1F 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 1F 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 82 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 82 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 82 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 82 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8906
 305  8906              ;														DESCRIPCIÓN:
 306  8906              ;
 307  8906              ;														BIT 0,
 308  8906
 309  8906              ; Gestión de ENTIDADES y CAJAS.
 310  8906
 311  8906 00 00        Puntero_store_caja defw 0
 312  8908 00 00        Puntero_restore_caja defw 0
 313  890A 00 00        Indice_restore_caja defw 0
 314  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890D 00           Numero_parcial_de_entidades db 0
 316  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 317  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8910              ;														; _ (Numero_de_malotes)="0".
 321  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8914              ;														; _ puntero (Indice_entidades).
 324  8914
 325  8914
 326  8914              ;---------------------------------------------------------------------------------------------------------------
 327  8914              ;
 328  8914              ;	2/9/23
 329  8914              ;
 330  8914              ;	Álbumes.
 331  8914
 332  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8916              ;														; _variable para almacenar lo posición del puntero_
 334  8916              ; 														; _de pila, SP.
 335  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891A 00 00        Stack_snapshot defw 0
 339  891C 00 00        Stack_snapshot_disparos defw 0
 340  891E
 341  891E 00 00        End_Snapshot defw 0
 342  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8922              ;														; _el snapshot de los registros del siguiente disparo.
 345  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8924 00 00        End_Snapshot_1 defw 0
 348  8926 00 00        End_Snapshot_disparos_1 defw 0
 349  8928 00 00        End_Snapshot_2 defw 0
 350  892A 00 00        End_Snapshot_disparos_2 defw 0
 351  892C 00 00        End_Snapshot_3 defw 0
 352  892E 00 00        End_Snapshot_disparos_3 defw 0
 353  8930
 354  8930 00 00        Puntero_indice_album_de_fotos defw 0
 355  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8934
 357  8934 00 00        Puntero_indice_End_Snapshot defw 0
 358  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8938 00 00        Puntero_de_End_Snapshot defw 0
 360  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893C
 362  893C 00           Semaforo db 0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893D              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893D
 365  893D              ;---------------------------------------------------------------------------------------------------------------
 366  893D
 367  893D              ; Gestión de Disparos.
 368  893D
 369  893D 00           Numero_de_disparotes db 0
 370  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 371  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 372  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 373  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 374  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 375  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 376  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 377  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 378  8945              ;														; _produzca colisión.
 379  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 380  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 381  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 382  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 383  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 384  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 385  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 386  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 387  8950
 388  8950              ;---------------------------------------------------------------------------------------------------------------
 389  8950
 390  8950              ; Relojes y temporizaciones.
 391  8950
 392  8950 00           Contador_de_frames db 0
 393  8951 00           Contador_de_frames_2 db 0
 394  8952
 395  8952 04           Clock_explosion db 4
 396  8953 1E           Clock_Entidades_en_curso db 30
 397  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 398  8955              ;														; Repite la oleada de entidades.
 399  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 400  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 401  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 402  8958
 403  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 404  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 405  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 406  895B
 407  895B              ;---------------------------------------------------------------------------------------------------------------
 408  895B
 409  895B              ; Gestión de NIVELES.
 410  895B
 411  895B 00           Nivel db 0												; Nivel actual del juego.
 412  895C 00 00        Puntero_indice_NIVELES defw 0
 413  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 414  8960              ; 														; _ que definen el NIVEL.
 415  8960              ; Y todo comienza aquí .....
 416  8960              ;
 417  8960              ; Rutina principal *************************************************************************************************************************************************************************
 418  8960              ;
 419  8960              ;	14/11/22
 420  8960
 421  8960              START
 422  8960
 423  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 424  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 425  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 426  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 427  8969 F3           	DI
 428  896A
 429  896A 3E 07        	ld a,%00000111
 430  896C CD 4C 99     	call Cls
 431  896F
 432  896F CD 5B 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 433  8972
 434  8972              ; INICIALIZACIÓN.
 435  8972
 436  8972 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 437  8975
 438  8975 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 439  8978
 440  8978 CD 7D 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 441  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 442  897B CD 93 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 443  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 444  897E              ; ----------
 445  897E
 446  897E CD 0B 8D     	call Restore_entidad
 447  8981
 448  8981 21 0D 89     	ld hl,Numero_parcial_de_entidades
 449  8984 46           	ld b,(hl)
 450  8985 04           	inc b
 451  8986 05           	dec b
 452  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 453  8989
 454  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 455  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 456  8989              ;	Pintamos el resto de entidades:
 457  8989
 458  8989              ;	INICIA ENTIDADES !!!!!
 459  8989
 460  8989 C5           1 push bc  												; Guardo el contador de entidades.
 461  898A CD 4E 8B     	call Inicia_entidad
 462  898D C1           	pop bc
 463  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 464  8990
 465  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 466  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 467  8990
 468  8990 3A 03 89     	ld a,(Ctrl_1)
 469  8993 CB 5F        	bit 3,a
 470  8995 20 00        	jr nz,5F											; Loop
 471  8997
 472  8997              ; 	INICIA AMADEUS !!!!!
 473  8997
 474  8997              3
 475  8997
 476  8997              ;	call Restore_Amadeus
 477  8997              ;	call Inicia_Puntero_objeto
 478  8997              ;	call Draw
 479  8997              ;	call Guarda_foto_registros
 480  8997              ;	call Guarda_datos_de_borrado_Amadeus
 481  8997
 482  8997              ;	ld de,Amadeus_db
 483  8997              ;	call Store_Amadeus
 484  8997
 485  8997              ; 	INICIA DISPAROS !!!!!
 486  8997
 487  8997              ;	call Inicia_Puntero_Disparo_Entidades
 488  8997              ;	call Inicia_Puntero_Disparo_Amadeus
 489  8997
 490  8997              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 491  8997
 492  8997 CD 7D 8B     5 call Inicia_punteros_de_cajas
 493  899A CD 0B 8D     	call Restore_entidad
 494  899D
 495  899D 3A 03 89     	ld a,(Ctrl_1)
 496  89A0 CB 5F        	bit 3,a
 497  89A2 28 07        	jr z,6F
 498  89A4
 499  89A4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 500  89A4
 501  89A4 21 03 89     	ld hl,Ctrl_1
 502  89A7 CB 9E        	res 3,(hl)
 503  89A9 18 03        	jr Main
 504  89AB
 505  89AB
 506  89AB              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 507  89AB              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 508  89AB              ; _ para situarnos en el siguiente album.
 509  89AB
 510  89AB CD C4 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 511  89AE
 512  89AE
 513  89AE              ; ------------------------------------
 514  89AE
 515  89AE              Main
 516  89AE              ;
 517  89AE              ;	3/8/23
 518  89AE
 519  89AE              ; 	ei
 520  89AE
 521  89AE 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 522  89B1 47           	ld b,a
 523  89B2 3A 50 89     	ld a,(Contador_de_frames)
 524  89B5 B8           	cp b
 525  89B6 20 18        	jr nz,13F
 526  89B8
 527  89B8 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 528  89BB 47           	ld b,a
 529  89BC 3A 0E 89     	ld a,(Entidades_en_curso)
 530  89BF B8           	cp b
 531  89C0 28 0E        	jr z,13F
 532  89C2 30 0C        	jr nc,13F
 533  89C4
 534  89C4 3C           	inc a
 535  89C5 32 0E 89     	ld (Entidades_en_curso),a
 536  89C8
 537  89C8 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 538  89CB
 539  89CB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 540  89CB              ;! _ IMPREDECIBLE !!!!
 541  89CB
 542  89CB C6 64        	add 100
 543  89CD 32 53 89     	ld (Clock_Entidades_en_curso),a
 544  89D0
 545  89D0              ; Habilita disparos.
 546  89D0
 547  89D0 21 55 89     13 ld hl,Disparo_Amadeus
 548  89D3 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 549  89D6 CD 10 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 550  89D9
 551  89D9 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 552  89DC 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 553  89DF CD 10 9D     	call Habilita_disparos
 554  89E2
 555  89E2              ; COLISIONES.
 556  89E2
 557  89E2 CD 21 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 558  89E5
 559  89E5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 560  89E5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 561  89E5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 562  89E5
 563  89E5 AF           	xor a
 564  89E6 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 565  89E9
 566  89E9 CD 7D 8B     	call Inicia_punteros_de_cajas
 567  89EC CD 0B 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 568  89EF              ; 														; _ en DRAW.
 569  89EF 3A C6 88     	ld a,(Filas)
 570  89F2 A7           	and a
 571  89F3 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 572  89F5 CD 1D 8D     	call Incrementa_punteros_de_cajas
 573  89F8 18 F2        	jr 12B
 574  89FA
 575  89FA              ; ---------------------------------------------------------------------------------------
 576  89FA
 577  89FA 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 578  89FD 47               ld b,a
 579  89FE A7           	and a
 580  89FF 20 14        	jr nz,11F
 581  8A01
 582  8A01 21 03 89     	ld hl,Ctrl_1
 583  8A04 CB 66        	bit 4,(hl)
 584  8A06 C2 93 8A     	jp nz,16F
 585  8A09
 586  8A09 21 03 89     	ld hl,Ctrl_1
 587  8A0C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 588  8A0E
 589  8A0E 3A 50 89     	ld a,(Contador_de_frames)
 590  8A11 3C           	inc a
 591  8A12 32 54 89     	ld (Activa_recarga_cajas),a
 592  8A15
 593  8A15              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 594  8A15
 595  8A15 3A 0E 89     11 ld a,(Entidades_en_curso)
 596  8A18 A7           	and a
 597  8A19 CA 93 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 598  8A1C 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 599  8A1D
 600  8A1D              ; Código que ejecutamos con cada entidad:
 601  8A1D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 602  8A1D
 603  8A1D C5           15 push bc 												; Nº de entidades en curso.
 604  8A1E
 605  8A1E              ; Impacto ???
 606  8A1E
 607  8A1E 3A DF 88     	ld a,(Impacto)
 608  8A21 A7           	and a
 609  8A22 28 32        	jr z,8F
 610  8A24
 611  8A24              ; Hay Impacto en esta entidad.
 612  8A24
 613  8A24 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 614  8A27 35           	dec (hl)
 615  8A28 20 63        	jr nz,17F
 616  8A2A
 617  8A2A              ;! Velocidad de la animación de la explosión.
 618  8A2A
 619  8A2A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 620  8A2C              ;														; _,(velocidad de la explosión).
 621  8A2C
 622  8A2C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 623  8A2C 18 FE        	jr $
 624  8A2E
 625  8A2E CD CC 8D     	call Repone_datos_de_borrado
 626  8A31 CD 24 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 627  8A34
 628  8A34
 629  8A34              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 630  8A34
 631  8A34 3A 01 89     	ld a,(Ctrl_2)
 632  8A37 CB 4F        	bit 1,a
 633  8A39 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 634  8A3B
 635  8A3B              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 636  8A3B
 637  8A3B 3A CE 88     	ld a,(CTRL_DESPLZ)
 638  8A3E A7           	and a
 639  8A3F 20 08        	jr nz,18F
 640  8A41
 641  8A41 21 84 84     	ld hl,Indice_Explosion_2x2-2
 642  8A44 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 643  8A47 18 06        	jr 19F
 644  8A49
 645  8A49 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 646  8A4C 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 647  8A4F
 648  8A4F 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 649  8A52 CB CE        	set 1,(hl)
 650  8A54 18 22        	jr 7F
 651  8A56
 652  8A56              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 653  8A56              ; _con las coordenadas de la entidad almacenada en DRAW.
 654  8A56
 655  8A56 3A 03 89     8 ld a,(Ctrl_1)
 656  8A59 CB 57        	bit 2,a
 657  8A5B 28 1B        	jr z,7F
 658  8A5D
 659  8A5D 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 660  8A60 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 661  8A61              ;														; E contiene la coordenada_X del disparo.
 662  8A61 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 663  8A64              ;														; H FILA, (Coordenada_y de la entidad).
 664  8A64 A7           	and a
 665  8A65 ED 52        	sbc hl,de
 666  8A67
 667  8A67 CD 58 92     	call Determina_resultado_comparativa
 668  8A6A
 669  8A6A 78           	ld a,b
 670  8A6B A7           	and a
 671  8A6C 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 672  8A6E
 673  8A6E              ; ----- ----- -----
 674  8A6E
 675  8A6E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 676  8A70 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 677  8A73
 678  8A73 21 03 89     	ld hl,Ctrl_1
 679  8A76 CB 96        	res 2,(hl)
 680  8A78
 681  8A78 CD EA 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 682  8A7B
 683  8A7B 3A F0 88     	ld a,(Ctrl_0)
 684  8A7E CB 67        	bit 4,a
 685  8A80 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 686  8A82
 687  8A82              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 688  8A82              ; [[[
 689  8A82 CD A6 8D     	call Detecta_disparo_entidad
 690  8A85              ; ]]]
 691  8A85
 692  8A85 CD 5E 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 693  8A88              ;	call Guarda_datos_de_borrado
 694  8A88
 695  8A88 21 F0 88     	ld hl,Ctrl_0
 696  8A8B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 697  8A8D
 698  8A8D CD D0 8C     17 call Store_Restore_cajas
 699  8A90
 700  8A90 C1           	pop bc
 701  8A91 10 8A        	djnz 15B
 702  8A93
 703  8A93              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 704  8A93              ; Hemos gestionado todas las unidades.
 705  8A93              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 706  8A93
 707  8A93              ;	ld hl,Ctrl_1
 708  8A93              ;	res 2,(hl)
 709  8A93
 710  8A93 CD C4 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 711  8A96              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 712  8A96              ; ----------------------------------------
 713  8A96
 714  8A96 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 715  8A99 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 716  8A9B CA AE 89     	jp z,Main
 717  8A9E
 718  8A9E 3A 50 89     	ld a,(Contador_de_frames)
 719  8AA1 47           	ld b,a
 720  8AA2 3A 54 89     	ld a,(Activa_recarga_cajas)
 721  8AA5 B8           	cp b
 722  8AA6 28 08        	jr z,20F
 723  8AA8
 724  8AA8 21 03 89     	ld hl,Ctrl_1
 725  8AAB CB E6        	set 4,(hl)
 726  8AAD C3 AE 89     	jp Main
 727  8AB0
 728  8AB0 21 03 89     20 ld hl,Ctrl_1
 729  8AB3 CB A6        	res 4,(hl)
 730  8AB5
 731  8AB5 3A 50 89     	ld a,(Contador_de_frames)
 732  8AB8
 733  8AB8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 734  8AB8              ;! _ IMPREDECIBLE !!!!
 735  8AB8
 736  8AB8 C6 0A        	add 10
 737  8ABA 32 53 89     	ld (Clock_Entidades_en_curso),a
 738  8ABD
 739  8ABD C3 75 89     	jp 4B
 740  8AC0
 741  8AC0 C9           	ret
 742  8AC1
 743  8AC1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 744  8AC1
 745  8AC1              Gestiona_Amadeus
 746  8AC1
 747  8AC1 3E 04            ld a,4
 748  8AC3 D3 FE        	out ($fe),a											; Azul.
 749  8AC5
 750  8AC5 CD 32 8D     	call Restore_Amadeus
 751  8AC8
 752  8AC8              ;! Activa/desactiva impacto con Amadeus.
 753  8AC8
 754  8AC8 3A DF 88     	ld a,(Impacto)
 755  8ACB A7           	and a
 756  8ACC 20 FE        	jr nz,$
 757  8ACE
 758  8ACE CD 3B 8B     	call Mov_Amadeus
 759  8AD1
 760  8AD1 3A F0 88     	ld a,(Ctrl_0)
 761  8AD4 CB 67        	bit 4,a
 762  8AD6 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 763  8AD8
 764  8AD8 CD 5E 8B     	call Guarda_foto_entidad_a_pintar
 765  8ADB CD AC 8D     	call Guarda_datos_de_borrado_Amadeus
 766  8ADE
 767  8ADE 21 F0 88     14 ld hl,Ctrl_0
 768  8AE1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 769  8AE3
 770  8AE3 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 771  8AE6 CD 44 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 772  8AE9
 773  8AE9              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 774  8AE9
 775  8AE9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 776  8AE9
 777  8AE9              ;	call Calcula_numero_de_disparotes
 778  8AE9
 779  8AE9 C9           	ret
 780  8AEA
 781  8AEA              ; --------------------------------------------------------------------------------------------------------------
 782  8AEA              ;
 783  8AEA              ;	27/05/23
 784  8AEA
 785  8AEA              Mov_obj
 786  8AEA
 787  8AEA 3A 01 89     	ld a,(Ctrl_2)
 788  8AED CB 4F        	bit 1,a
 789  8AEF 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 790  8AF1
 791  8AF1              ; Explosión:
 792  8AF1
 793  8AF1 3A 02 89     	ld a,(Frames_explosion)
 794  8AF4 A7           	and a
 795  8AF5 20 11        	jr nz,4F
 796  8AF7
 797  8AF7              ; Una alimaña menos!!!!!!!!!1
 798  8AF7
 799  8AF7 CD 4D 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 800  8AFA 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 801  8AFD 35           	dec (hl)
 802  8AFE 21 0E 89     	ld hl,Entidades_en_curso
 803  8B01 35           	dec (hl)
 804  8B02 21 0C 89     	ld hl,Numero_de_entidades
 805  8B05 35           	dec (hl)
 806  8B06 18 32        	jr 3F
 807  8B08
 808  8B08              ; -----
 809  8B08
 810  8B08              ;	`Movemos´ la explosión.
 811  8B08
 812  8B08 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 813  8B0B 23           	inc hl
 814  8B0C 23           	inc hl
 815  8B0D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 816  8B10 CD 82 8C     	call Extrae_address
 817  8B13 22 CA 88     	ld (Puntero_objeto),hl
 818  8B16
 819  8B16 21 02 89     	ld hl,Frames_explosion
 820  8B19 35           	dec (hl)
 821  8B1A
 822  8B1A              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 823  8B1A 18 1E        	jr 3F
 824  8B1C
 825  8B1C AF           2 xor a
 826  8B1D 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 827  8B20
 828  8B20              ; Movemos Entidades malignas.
 829  8B20
 830  8B20 CD BB 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 831  8B23
 832  8B23 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 833  8B26 CB 67        	bit 4,a
 834  8B28 C8           	ret z
 835  8B29
 836  8B29              ; Ha habido desplazamiento de la entidad maligna.
 837  8B29              ; Ha llegado a zona de AMADEUS ???
 838  8B29
 839  8B29 3A CD 88     	ld a,(Coordenada_y)
 840  8B2C FE 14        	cp $14
 841  8B2E D4 E6 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 842  8B31              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 843  8B31              ; ---------
 844  8B31
 845  8B31 CD 65 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 846  8B34 CD CC 8D     	call Repone_datos_de_borrado
 847  8B37 CD 24 8C     	call Limpia_Variables_de_borrado
 848  8B3A
 849  8B3A C9           3 ret													; _de la misma.
 850  8B3B
 851  8B3B              ; --------------------------------------------------------------------------------------------------------------
 852  8B3B              ;
 853  8B3B              ;	29/1/23
 854  8B3B
 855  8B3B              Mov_Amadeus
 856  8B3B
 857  8B3B CD 6F 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 858  8B3E
 859  8B3E 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 860  8B41 CB 67        	bit 4,a
 861  8B43 C8           	ret z
 862  8B44
 863  8B44              ; ---------
 864  8B44
 865  8B44 CD 65 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 866  8B47 CD BC 8D     	call Repone_datos_de_borrado_Amadeus
 867  8B4A CD 24 8C     	call Limpia_Variables_de_borrado
 868  8B4D
 869  8B4D C9           	ret
 870  8B4E
 871  8B4E              ; -----------------------------------------------------------------------------------
 872  8B4E
 873  8B4E CD 88 8C     Inicia_entidad	call Inicia_Puntero_objeto
 874  8B51 CD 60 99     	call Recompone_posicion_inicio
 875  8B54 CD 3F 93     	call Draw
 876  8B57 CD A0 7F     	call Guarda_foto_registros
 877  8B5A              ;	call Guarda_datos_de_borrado
 878  8B5A CD D0 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 879  8B5D C9           	ret
 880  8B5E
 881  8B5E              ; --------------------------------------------------------------------------------------------------------------
 882  8B5E              ;
 883  8B5E              ;	31/08/23
 884  8B5E              ;
 885  8B5E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 886  8B5E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 887  8B5E
 888  8B5E              Guarda_foto_entidad_a_pintar
 889  8B5E
 890  8B5E              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 891  8B5E
 892  8B5E CD 3F 93     	call Draw
 893  8B61 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 894  8B64 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 895  8B65
 896  8B65              ; --------------------------------------------------------------------------------------------------------------
 897  8B65              ;
 898  8B65              ;	19/9/23
 899  8B65
 900  8B65 21 C6 88     Prepara_var_pintado ld hl,Filas
 901  8B68 11 E6 88     	ld de,Variables_de_pintado
 902  8B6B 01 08 00     	ld bc,8
 903  8B6E ED B0        	ldir
 904  8B70 C9           	ret
 905  8B71
 906  8B71              ; --------------------------------------------------------------------------------------------------------------
 907  8B71
 908  8B71 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 909  8B74 11 C6 88     	ld de,Filas
 910  8B77 01 08 00     	ld bc,8
 911  8B7A ED B0        	ldir
 912  8B7C C9           	ret
 913  8B7D
 914  8B7D              ; *************************************************************************************************************************************************************
 915  8B7D              ;
 916  8B7D              ; 8/1/23
 917  8B7D              ;
 918  8B7D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 919  8B7D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 920  8B7D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 921  8B7D
 922  8B7D              ; Destruye HL y DE !!!!!
 923  8B7D
 924  8B7D              Inicia_punteros_de_cajas
 925  8B7D
 926  8B7D 21 8C 85     	ld hl,Indice_de_cajas
 927  8B80 CD 82 8C         call Extrae_address
 928  8B83 22 06 89         ld (Puntero_store_caja),hl
 929  8B86 21 8E 85     	ld hl,Indice_de_cajas+2
 930  8B89 22 0A 89     	ld (Indice_restore_caja),hl
 931  8B8C CD 82 8C     	call Extrae_address
 932  8B8F 22 08 89     	ld (Puntero_restore_caja),hl
 933  8B92 C9               ret
 934  8B93
 935  8B93              ; ---------------------------------------------------------------
 936  8B93              ;
 937  8B93              ;	9/8/23
 938  8B93              ;
 939  8B93              ;	Inicialización y gestión de álbumes de fotos y cajas.
 940  8B93
 941  8B93              Inicia_punteros_de_albumes_y_malotes
 942  8B93
 943  8B93 21 EC 84     	ld hl,Indice_album_de_fotos
 944  8B96 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 945  8B99 CD 82 8C     	call Extrae_address
 946  8B9C 22 1A 89     	ld (Stack_snapshot),hl
 947  8B9F
 948  8B9F 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 949  8BA2 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 950  8BA5 CD 82 8C     	call Extrae_address
 951  8BA8 22 1C 89     	ld (Stack_snapshot_disparos),hl
 952  8BAB
 953  8BAB 21 FC 84     	ld hl,Indice_End_Snapshot
 954  8BAE 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 955  8BB1 CD 82 8C     	call Extrae_address
 956  8BB4 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 957  8BB7
 958  8BB7 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 959  8BBA 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 960  8BBD CD 82 8C     	call Extrae_address
 961  8BC0 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 962  8BC3
 963  8BC3 C9           	ret
 964  8BC4
 965  8BC4              ;	23/9/23
 966  8BC4
 967  8BC4              Avanza_puntero_de_album_de_fotos_y_malotes
 968  8BC4
 969  8BC4              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 970  8BC4
 971  8BC4              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 972  8BC4              ; Estamos en el último álbum del índice???.
 973  8BC4              ;
 974  8BC4
 975  8BC4 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 976  8BC7 01 F2 84     	ld bc,Indice_album_de_fotos+6
 977  8BCA A7           	and a
 978  8BCB ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 979  8BCD 20 0D        	jr nz,1F								 		; El buffer está lleno. HALT.
 980  8BCF
 981  8BCF              ; Estamos en Album_de_fotos_3.
 982  8BCF              ; Configuramos el semáforo de álbumes para indicar que todos están completos.
 983  8BCF
 984  8BCF 21 3C 89     	ld hl,Semaforo
 985  8BD2 CB DE        	set 3,(hl)
 986  8BD4
 987  8BD4 21 03 89     	ld hl,Ctrl_1
 988  8BD7 CB EE        	set 5,(hl)
 989  8BD9
 990  8BD9              ; Inicia con el buffer de video completo !!!
 991  8BD9
 992  8BD9 FB           	ei
 993  8BDA 76           	halt
 994  8BDB C9           	ret
 995  8BDC
 996  8BDC 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
 997  8BDF 23           	inc hl
 998  8BE0 23           	inc hl
 999  8BE1 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1000  8BE4 CD 82 8C     	call Extrae_address
1001  8BE7 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1002  8BEA
1003  8BEA 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1004  8BED 23           	inc hl
1005  8BEE 23           	inc hl
1006  8BEF 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1007  8BF2 CD 82 8C     	call Extrae_address
1008  8BF5 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1009  8BF8
1010  8BF8 CD 07 74     	call Actualiza_semaforo
1011  8BFB
1012  8BFB C9           	ret
1013  8BFC
1014  8BFC              ; *************************************************************************************************************************************************************
1015  8BFC              ;
1016  8BFC              ; 8/1/23
1017  8BFC              ;
1018  8BFC              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1019  8BFC
1020  8BFC 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1021  8BFF 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1022  8C02 C9           	ret
1023  8C03 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1024  8C06 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1025  8C09 C9           	ret
1026  8C0A
1027  8C0A              ; -------------------------------------------------------------------------------------------------------------
1028  8C0A              ;
1029  8C0A              ; 21/9/23
1030  8C0A              ;
1031  8C0A
1032  8C0A              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1033  8C0A
1034  8C0A              Limpia_album_Amadeus
1035  8C0A
1036  8C0A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1037  8C0D 7E           	ld a,(hl)
1038  8C0E A7           	and a
1039  8C0F C8           	ret z
1040  8C10
1041  8C10 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1042  8C13 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1043  8C16 01 0B 00     	ld bc,11
1044  8C19 AF           	xor a
1045  8C1A 77           	ld (hl),a
1046  8C1B ED B0        	ldir
1047  8C1D
1048  8C1D 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C20 22 22 89     	ld (End_Snapshot_Amadeus),hl
1050  8C23
1051  8C23 C9           	ret
1052  8C24
1053  8C24 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1054  8C27 11 E1 88     	ld de,Variables_de_borrado+1
1055  8C2A 01 05 00     	ld bc,5
1056  8C2D AF           	xor a
1057  8C2E 77           	ld (hl),a
1058  8C2F ED B0        	ldir
1059  8C31 C9           	ret
1060  8C32
1061  8C32              ; -------------------------------------------------------------------------------------------------------------
1062  8C32              ;
1063  8C32              ; 8/9/23
1064  8C32              ;
1065  8C32
1066  8C32              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1067  8C32              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1068  8C32
1069  8C32              Calcula_numero_de_malotes
1070  8C32
1071  8C32 21 00 70     	ld hl,Album_de_fotos
1072  8C35 EB           	ex de,hl
1073  8C36 2A 1E 89     	ld hl,(End_Snapshot)
1074  8C39
1075  8C39 7C           	ld a,h
1076  8C3A A7           	and a
1077  8C3B 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1078  8C3D
1079  8C3D 06 00        4 ld b,0
1080  8C3F 7D           	ld a,l
1081  8C40 93           	sub e
1082  8C41 28 07        	jr z,1F
1083  8C43
1084  8C43              ; Nº de malotes no es "0".
1085  8C43
1086  8C43 D6 06        2 sub 6
1087  8C45 04           	inc b
1088  8C46 A7           	and a
1089  8C47 20 FA        	jr nz,2B
1090  8C49 78           	ld a,b
1091  8C4A
1092  8C4A 32 0F 89     1 ld (Numero_de_malotes),a
1093  8C4D C9           	ret
1094  8C4E
1095  8C4E              ; -------------------------------------------------------------------------------------------------------------
1096  8C4E              ;
1097  8C4E              ; 8/9/23
1098  8C4E              ;
1099  8C4E
1100  8C4E              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1101  8C4E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1102  8C4E
1103  8C4E              Calcula_malotes_Amadeus
1104  8C4E
1105  8C4E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1106  8C51 EB           	ex de,hl
1107  8C52 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1108  8C55
1109  8C55 7C           	ld a,h
1110  8C56 A7           	and a
1111  8C57 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1112  8C59
1113  8C59 06 00        	ld b,0
1114  8C5B 7D           	ld a,l
1115  8C5C 93           	sub e
1116  8C5D 28 07        	jr z,1F
1117  8C5F
1118  8C5F              ; Nº de malotes no es "0".
1119  8C5F
1120  8C5F D6 06        2 sub 6
1121  8C61 04           	inc b
1122  8C62 A7           	and a
1123  8C63 20 FA        	jr nz,2B
1124  8C65 78           	ld a,b
1125  8C66
1126  8C66 32 0F 89     1 ld (Numero_de_malotes),a
1127  8C69 C9           	ret
1128  8C6A
1129  8C6A              ; -------------------------------------------------------------------------------------------------------------
1130  8C6A              ;
1131  8C6A              ; 28/2/23
1132  8C6A              ;
1133  8C6A
1134  8C6A              Calcula_numero_de_disparotes
1135  8C6A
1136  8C6A 21 50 71     	ld hl,Album_de_fotos_disparos
1137  8C6D EB           	ex de,hl
1138  8C6E 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1139  8C71
1140  8C71 06 00        	ld b,0
1141  8C73 7D           	ld a,l
1142  8C74 93           	sub e
1143  8C75 28 07        	jr z,1F
1144  8C77
1145  8C77              ; Nº de malotes no es "0".
1146  8C77
1147  8C77 D6 06        2 sub 6
1148  8C79 04           	inc b
1149  8C7A A7           	and a
1150  8C7B 20 FA        	jr nz,2B
1151  8C7D 78           	ld a,b
1152  8C7E
1153  8C7E 32 3D 89     1 ld (Numero_de_disparotes),a
1154  8C81 C9           	ret
1155  8C82
1156  8C82              ; *************************************************************************************************************************************************************
1157  8C82              ;
1158  8C82              ; 20/10/22
1159  8C82              ;
1160  8C82              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1161  8C82              ;
1162  8C82              ; Destruye el puntero y DE !!!!!
1163  8C82
1164  8C82 5E           Extrae_address ld e,(hl)
1165  8C83 23           	inc hl
1166  8C84 56           	ld d,(hl)
1167  8C85 2B           	dec hl
1168  8C86 EB           	ex de,hl
1169  8C87 C9           	ret
1170  8C88
1171  8C88              ; *************************************************************************************************************************************************************
1172  8C88              ;
1173  8C88              ;	7/2/23
1174  8C88              ;
1175  8C88              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1176  8C88              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1177  8C88              ;
1178  8C88              ;   Destruye HL y BC !!!!!,
1179  8C88              ;
1180  8C88              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1181  8C88              ;					"0" ..... Izquierda.
1182  8C88
1183  8C88              Inicia_Puntero_objeto
1184  8C88
1185  8C88 3A DA 88     	ld a,(Cuad_objeto)
1186  8C8B E6 01        	and 1
1187  8C8D F5           	push af
1188  8C8E CC AC 8C     	call z,Inicia_puntero_objeto_izq
1189  8C91 F1           	pop af
1190  8C92 28 2B        	jr z,1F
1191  8C94 CD 99 8C     	call Inicia_puntero_objeto_der
1192  8C97 18 26        	jr 1F
1193  8C99
1194  8C99              ; Arrancamos desde la parte izquierda de la pantalla.
1195  8C99              ; Iniciamos (Indice_Sprite_der).
1196  8C99
1197  8C99 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1198  8C9C 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1199  8C9F CD 82 8C     	call Extrae_address
1200  8CA2 22 CA 88     	ld (Puntero_objeto),hl
1201  8CA5
1202  8CA5 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1203  8CA8 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1204  8CAB C9           	ret
1205  8CAC
1206  8CAC              ; Arrancamos desde la parte derecha de la pantalla.
1207  8CAC              ; Iniciamos (Indice_Sprite_izq).
1208  8CAC
1209  8CAC 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1210  8CAF 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CB2 CD 82 8C     	call Extrae_address
1212  8CB5 22 CA 88     	ld (Puntero_objeto),hl
1213  8CB8
1214  8CB8 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1215  8CBB 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1216  8CBE C9           	ret
1217  8CBF
1218  8CBF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1219  8CBF
1220  8CBF 21 40 83     1 ld hl,Amadeus
1221  8CC2 ED 4B CA 88  	ld bc,(Puntero_objeto)
1222  8CC6 B7 ED 42     	sub hl,bc
1223  8CC9 C0           	ret nz
1224  8CCA 21 F0 88     	ld hl,Ctrl_0
1225  8CCD CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1226  8CCF C9           	ret 												; _de nuestra nave en los extremos.
1227  8CD0
1228  8CD0              ; *************************************************************************************************************************************************************
1229  8CD0              ;
1230  8CD0              ;	14/5/23
1231  8CD0              ;
1232  8CD0              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1233  8CD0              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1234  8CD0
1235  8CD0              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1236  8CD0              ;	_de la 2ª y 3ª entidad respectivamente.
1237  8CD0
1238  8CD0              Store_Restore_cajas
1239  8CD0
1240  8CD0 E5           	push hl
1241  8CD1 D5           	push de
1242  8CD2 C5            	push bc
1243  8CD3
1244  8CD3              ;	STORE !!!!!
1245  8CD3              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1246  8CD3
1247  8CD3 21 C6 88     	ld hl,Filas
1248  8CD6 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1249  8CDA 01 3D 00     	ld bc,61
1250  8CDD ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1251  8CDF
1252  8CDF              ; 	Entidad_sospechosa. 20/4/23
1253  8CDF
1254  8CDF 3A DF 88     	ld a,(Impacto)
1255  8CE2 A7           	and a
1256  8CE3 28 0C        	jr z,1F
1257  8CE5
1258  8CE5 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1259  8CE8 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1260  8CEB A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1261  8CEC ED 4A        	adc hl,bc 											; _ "0" más adelante.
1262  8CEE 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1263  8CF1
1264  8CF1              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1265  8CF1
1266  8CF1 2A 08 89     1 ld hl,(Puntero_restore_caja)
1267  8CF4 7E           	ld a,(hl)
1268  8CF5 A7           	and a
1269  8CF6 F5           	push af
1270  8CF7 28 08        	jr z,2F
1271  8CF9
1272  8CF9 11 C6 88     	ld de,Filas
1273  8CFC 01 3D 00     	ld bc,61
1274  8CFF ED B0        	ldir
1275  8D01
1276  8D01 CD 1D 8D     2 call Incrementa_punteros_de_cajas
1277  8D04
1278  8D04 F1           	pop af
1279  8D05 28 EA        	jr z,1B
1280  8D07
1281  8D07 C1           	pop bc
1282  8D08 D1           	pop de
1283  8D09 E1           	pop hl
1284  8D0A
1285  8D0A C9           	ret
1286  8D0B
1287  8D0B              ; **************************************************************************************************
1288  8D0B              ;
1289  8D0B              ;	12/05/23
1290  8D0B              ;
1291  8D0B              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1292  8D0B
1293  8D0B E5           Restore_entidad push hl
1294  8D0C D5           	push de
1295  8D0D C5            	push bc
1296  8D0E
1297  8D0E 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1298  8D11 11 C6 88     	ld de,Filas
1299  8D14 01 3D 00     	ld bc,61
1300  8D17 ED B0        	ldir
1301  8D19
1302  8D19 C1           	pop bc
1303  8D1A D1           	pop de
1304  8D1B E1           	pop hl
1305  8D1C C9           	ret
1306  8D1D
1307  8D1D              ; **************************************************************************************************
1308  8D1D              ;
1309  8D1D              ;	08/05/23
1310  8D1D              ;
1311  8D1D              ;	Incrementamos los dos punteros de entidades. (+1).
1312  8D1D
1313  8D1D              Incrementa_punteros_de_cajas
1314  8D1D
1315  8D1D 2A 08 89     	ld hl,(Puntero_restore_caja)
1316  8D20 22 06 89     	ld (Puntero_store_caja),hl
1317  8D23 2A 0A 89     	ld hl,(Indice_restore_caja)
1318  8D26 23           	inc hl
1319  8D27 23           	inc hl
1320  8D28 22 0A 89     	ld (Indice_restore_caja),hl
1321  8D2B CD 82 8C         call Extrae_address
1322  8D2E 22 08 89         ld (Puntero_restore_caja),hl
1323  8D31 C9               ret
1324  8D32
1325  8D32              ; **************************************************************************************************
1326  8D32              ;
1327  8D32              ;	25/01/23
1328  8D32              ;
1329  8D32              ;	Restore_Amadeus
1330  8D32              ;
1331  8D32              ;	Cargamos en DRAW los parámetros de Amadeus.
1332  8D32              ;
1333  8D32
1334  8D32 E5           Restore_Amadeus	push hl
1335  8D33 D5           	push de
1336  8D34 C5            	push bc
1337  8D35 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1338  8D38 11 C6 88     	ld de,Filas
1339  8D3B 01 3D 00     	ld bc,61
1340  8D3E ED B0        	ldir
1341  8D40 C1           	pop bc
1342  8D41 D1           	pop de
1343  8D42 E1           	pop hl
1344  8D43 C9           	ret
1345  8D44
1346  8D44              ; *************************************************************************************************************************************************************
1347  8D44              ;
1348  8D44              ;	29/04/23
1349  8D44              ;
1350  8D44              ;	Store_Amadeus
1351  8D44              ;
1352  8D44              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1353  8D44              ;
1354  8D44              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1355  8D44              ;
1356  8D44              ;	DESTRUYE: HL y BC y DE.
1357  8D44
1358  8D44 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1359  8D47 01 3D 00     	ld bc,61
1360  8D4A ED B0        	ldir
1361  8D4C C9           	ret
1362  8D4D
1363  8D4D              ; -----------------------------------------------------------
1364  8D4D              ;
1365  8D4D              ;	27/04/23
1366  8D4D              ;
1367  8D4D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1368  8D4D              ;
1369  8D4D              ;	Destruye: HL,BC,DE,A
1370  8D4D
1371  8D4D 21 C6 88     Borra_datos_entidad ld hl,Filas
1372  8D50 01 3C 00     	ld bc,60
1373  8D53 AF           	xor a
1374  8D54 77           	ld (hl),a
1375  8D55 11 C7 88     	ld de,Filas+1
1376  8D58 ED B0        	ldir
1377  8D5A C9           	ret
1378  8D5B
1379  8D5B              ; -----------------------------------------------------------
1380  8D5B
1381  8D5B              ; Teclado.
1382  8D5B
1383  8D5B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1384  8D5D DB FE        	in a,($fe)
1385  8D5F E6 01        	and $01
1386  8D61 28 02        	jr z,1f
1387  8D63 18 F6        	jr Pulsa_ENTER
1388  8D65 C9           1 ret
1389  8D66
1390  8D66              ; **************************************************************************************************
1391  8D66              ;
1392  8D66              ; Temporización.
1393  8D66
1394  8D66              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1395  8D66              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1396  8D66              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1397  8D66              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1398  8D66
1399  8D66              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1400  8D66              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1401  8D66              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1402  8D66
1403  8D66              ; A partir de $4f61 no hace falta DELAY.
1404  8D66
1405  8D66              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1406  8D66
1407  8D66 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1408  8D69 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1409  8D6A 78           	LD A,B
1410  8D6B A7           	AND A
1411  8D6C 20 FB        	JR NZ,wait
1412  8D6E C9           	RET
1413  8D6F
1414  8D6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1415  8D6F              ;
1416  8D6F              ;	5/3/23
1417  8D6F              ;
1418  8D6F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1419  8D6F
1420  8D6F              Movimiento_Amadeus
1421  8D6F
1422  8D6F              ; Disparo.
1423  8D6F
1424  8D6F 3A 55 89     	ld a,(Disparo_Amadeus)
1425  8D72 A7           	and a
1426  8D73 20 02        	jr nz,1F
1427  8D75 18 15        	jr 2F
1428  8D77
1429  8D77 3E F7        1 ld a,$f7													; "5" para disparar.
1430  8D79 DB FE        	in a,($fe)
1431  8D7B E6 10        	and $10
1432  8D7D
1433  8D7D F5           	push af
1434  8D7E CC 49 8E     	call z,Genera_disparo
1435  8D81 F1           	pop af
1436  8D82 20 08        	jr nz,2F
1437  8D84
1438  8D84 3A 55 89     	ld a,(Disparo_Amadeus)
1439  8D87 EE 01        	xor 1
1440  8D89 32 55 89     	ld (Disparo_Amadeus),a
1441  8D8C
1442  8D8C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1443  8D8E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1444  8D90 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1445  8D92 CC 1A 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1446  8D95
1447  8D95 3E F7        	ld a,$f7
1448  8D97 DB FE        	in a,($fe)
1449  8D99 E6 01        	and $01
1450  8D9B C8           	ret z
1451  8D9C
1452  8D9C 3E F7        	ld a,$f7
1453  8D9E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1454  8DA0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1455  8DA2 CC FC 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1456  8DA5 C9           	ret
1457  8DA6
1458  8DA6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1459  8DA6              ;
1460  8DA6              ;	Rutina provisional para que los malotes cagen balas.
1461  8DA6
1462  8DA6              Detecta_disparo_entidad
1463  8DA6
1464  8DA6 3A 58 89     	ld a,(Disparo_entidad)
1465  8DA9 A7           	and a
1466  8DAA C8           	ret z
1467  8DAB
1468  8DAB              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1469  8DAB
1470  8DAB              ;	ld a,$7f				; Detecta SPACE.
1471  8DAB              ;	in a,($fe)
1472  8DAB              ;	and 1
1473  8DAB              ;	ret nz
1474  8DAB
1475  8DAB              ;	call Genera_disparo
1476  8DAB C9           	ret
1477  8DAC
1478  8DAC              ; ----------------------------------------------------------------------
1479  8DAC              ;
1480  8DAC              ;	8/9/23
1481  8DAC
1482  8DAC 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1483  8DAF 2B            	dec hl
1484  8DB0 7E           	ld a,(hl)
1485  8DB1 A7           	and a
1486  8DB2 C8           	ret z										; Salimos si es álbum está vacío.
1487  8DB3
1488  8DB3 11 E5 88     	ld de,Variables_de_borrado+5
1489  8DB6 01 06 00     	ld bc,6
1490  8DB9 ED B8        	lddr
1491  8DBB C9           	ret
1492  8DBC
1493  8DBC              ; ----------------------------------------------------------------------
1494  8DBC              ;
1495  8DBC              ;	9/9/23
1496  8DBC
1497  8DBC              Repone_datos_de_borrado_Amadeus
1498  8DBC
1499  8DBC 21 E0 88     	ld hl,Variables_de_borrado
1500  8DBF 11 A0 72     	ld de,Album_de_fotos_Amadeus
1501  8DC2 01 06 00     	ld bc,6
1502  8DC5 ED B0        	ldir
1503  8DC7
1504  8DC7 EB           	ex de,hl
1505  8DC8 22 22 89     	ld (End_Snapshot_Amadeus),hl
1506  8DCB
1507  8DCB C9           	ret
1508  8DCC
1509  8DCC              ; ----------------------------------------------------------------------
1510  8DCC              ;
1511  8DCC              ;	18/9/23
1512  8DCC              ;
1513  8DCC
1514  8DCC              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1515  8DCC              ;	_ Album_de_fotos correspondiente.
1516  8DCC
1517  8DCC              ;	DI.
1518  8DCC
1519  8DCC              Repone_datos_de_borrado
1520  8DCC
1521  8DCC ED 5B 1A 89  	ld de,(Stack_snapshot)
1522  8DD0 21 E0 88     	ld hl,Variables_de_borrado
1523  8DD3 01 06 00     	ld bc,6
1524  8DD6 ED B0        	ldir
1525  8DD8
1526  8DD8 EB           	ex de,hl
1527  8DD9 22 1A 89     	ld (Stack_snapshot),hl
1528  8DDC
1529  8DDC C9           	ret
1530  8DDD
1531  8DDD              ; ----------------------------------------------------------------------
1532  8DDD              ;
1533  8DDD              ;	11/8/23
1534  8DDD
1535  8DDD              Gestiona_entidades
1536  8DDD
1537  8DDD              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1538  8DDD
1539  8DDD 3A 3C 89     	ld a,(Semaforo)
1540  8DE0 CB 47        	bit 0,a
1541  8DE2 28 FE        	jr z,$												;! STOP el buffer está vacío.
1542  8DE4
1543  8DE4              ;	call Extrae_foto_disparos
1544  8DE4              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1545  8DE4
1546  8DE4 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1547  8DE7
1548  8DE7              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1549  8DE7
1550  8DE7              ;	Album incompleto ?????
1551  8DE7              ;	Si es así, inicializamos el bit 4 de (Semaforo) y salimos de la rutina.
1552  8DE7
1553  8DE7 3A 3C 89     	ld a,(Semaforo)
1554  8DEA CB 6F        	bit 5,a
1555  8DEC 20 03        	jr nz,1F
1556  8DEE
1557  8DEE CB 67        	bit 4,a
1558  8DF0 C0           	ret nz
1559  8DF1
1560  8DF1              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1561  8DF1              ; Nos situamos al comienzo del último álbum.
1562  8DF1
1563  8DF1 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1564  8DF4 CD 82 8C     	call Extrae_address
1565  8DF7 22 1A 89     	ld (Stack_snapshot),hl
1566  8DFA
1567  8DFA              ;	En este punto:
1568  8DFA
1569  8DFA              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1570  8DFA              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1571  8DFA
1572  8DFA 21 03 89     	ld hl,Ctrl_1
1573  8DFD CB AE        	res 5,(hl)
1574  8DFF
1575  8DFF              ;	Album_de_fotos_3 vuelve a estar vacío.
1576  8DFF
1577  8DFF 21 3C 89     	ld hl,Semaforo
1578  8E02 CB AE        	res 5,(hl)
1579  8E04 CD 43 74     	call Actualiza_semaforo_2
1580  8E07
1581  8E07 C9           	ret
1582  8E08
1583  8E08              ; -----------------------------------------------------------------------------------
1584  8E08
1585  8E08              Pinta_Amadeus
1586  8E08
1587  8E08 3E 06        	ld a,6
1588  8E0A D3 FE            out ($fe),a										; Amarillo
1589  8E0C
1590  8E0C CD 4E 8C        	call Calcula_malotes_Amadeus
1591  8E0F CD CF 96     	call Extrae_foto_Amadeus
1592  8E12 CD 0A 8C     	call Limpia_album_Amadeus
1593  8E15
1594  8E15 C9           	ret
1595  8E16
1596  8E16              Pinta_entidades
1597  8E16
1598  8E16 3A 3C 89     	ld a,(Semaforo)
1599  8E19 CB 47        	bit 0,a
1600  8E1B C8           	ret z
1601  8E1C
1602  8E1C              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1603  8E1C
1604  8E1C CD 32 8C     	call Calcula_numero_de_malotes
1605  8E1F CD 4D 96     	call Extrae_foto_entidades
1606  8E22
1607  8E22 C9           	ret
1608  8E23
1609  8E23              ; -----------------------------------------------------------------------------------
1610  8E23
1611  8E23              Actualiza_relojes
1612  8E23
1613  8E23 21 50 89     	ld hl,Contador_de_frames
1614  8E26 7E           	ld a,(hl)
1615  8E27 FE FF        	cp $ff
1616  8E29 20 04        	jr nz,1F
1617  8E2B 34           	inc (hl)
1618  8E2C 21 51 89     	ld hl,Contador_de_frames_2
1619  8E2F 34           1 inc (hl)											; 0 - 255
1620  8E30 C9           	ret
1621  8E31
1622  8E31              ; ---------------------------------------------------------------
1623  8E31              ;
1624  8E31              ;	27/9/23
1625  8E31
1626  8E31              Guarda_parametros_DRAW
1627  8E31
1628  8E31 21 C6 88     	ld hl,Filas
1629  8E34 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1630  8E37 01 3D 00     	ld bc,61
1631  8E3A ED B0        	ldir
1632  8E3C C9           	ret
1633  8E3D
1634  8E3D              Recupera_parametros_DRAW
1635  8E3D
1636  8E3D 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1637  8E40 11 C6 88     	ld de,Filas
1638  8E43 01 3D 00     	ld bc,61
1639  8E46 ED B0        	ldir
1640  8E48 C9           	ret
1641  8E49
1642  8E49              ; ---------------------------------------------------------------
1643  8E49
1644  8E49              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E49              ; ******************************************************************************************************************************************************************************************
   2+ 8E49              ;
   3+ 8E49              ;   21/07/23
   4+ 8E49              ;
   5+ 8E49              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E49              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E49              ;
   8+ 8E49              ;
   9+ 8E49              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E49              ;
  11+ 8E49              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E49              ;               _ hacen las entidades hacia abajo.
  13+ 8E49              ;
  14+ 8E49              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E49              ;
  16+ 8E49              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E49              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E49              ;
  19+ 8E49              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E49              ;           _ la bala.
  21+ 8E49              ;
  22+ 8E49              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E49              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E49              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E49              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E49              ;           _ en el momento de generarse la bala)).
  27+ 8E49
  28+ 8E49              Genera_disparo
  29+ 8E49
  30+ 8E49              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E49              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E49              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E49              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E49              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E49              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E49              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E49
  38+ 8E49              ; Exclusiones:
  39+ 8E49
  40+ 8E49 3A DE 88         ld a,(Vel_down)
  41+ 8E4C 47               ld b,a
  42+ 8E4D 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E50 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E51 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E52 3A FD 88         ld a,(Columnas)
  46+ 8E55 47               ld b,a
  47+ 8E56 3A C7 88         ld a,(Columns)
  48+ 8E59 B8               cp b
  49+ 8E5A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E5B
  51+ 8E5B              ; ----- ----- -----
  52+ 8E5B
  53+ 8E5B 3A F0 88         ld a,(Ctrl_0)
  54+ 8E5E CB 77            bit 6,a
  55+ 8E60 20 06            jr nz,14F
  56+ 8E62
  57+ 8E62 3A CD 88         ld a,(Coordenada_y)
  58+ 8E65 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E67 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E68
  61+ 8E68 21 00 80     14 ld hl,Indice_disparo
  62+ 8E6B 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E6E 4F               ld c,a
  64+ 8E6F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E71              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E71              ;                                            ""        ""       "f9", B="1"
  67+ 8E71              ;                                            ""        ""       "fb", B="2"
  68+ 8E71              ;                                            ""        ""       "fb", B="3"
  69+ 8E71 A7               and a
  70+ 8E72 28 10            jr z,1F
  71+ 8E74 E6 01            and 1
  72+ 8E76 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E77
  74+ 8E77 79               ld a,c
  75+ 8E78 16 F9            ld d,$f9
  76+ 8E7A 23           2 inc hl
  77+ 8E7B 23               inc hl
  78+ 8E7C 04               inc b
  79+ 8E7D BA               cp d
  80+ 8E7E 28 04            jr z,1F
  81+ 8E80 14               inc d
  82+ 8E81 14               inc d
  83+ 8E82 18 F6            jr 2B
  84+ 8E84
  85+ 8E84 CD 82 8C     1 call Extrae_address
  86+ 8E87 E5               push hl
  87+ 8E88 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E8A DD 21 15 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E8E
  90+ 8E8E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E8E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E8E
  93+ 8E8E 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E91 CB 77            bit 6,a
  95+ 8E93 20 04            jr nz,19F
  96+ 8E95
  97+ 8E95 AF               xor a
  98+ 8E96 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E99
 100+ 8E99 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8E9C FE 02            cp 2
 102+ 8E9E 38 66            jr c,3F
 103+ 8EA0 28 64            jr z,3F
 104+ 8EA2
 105+ 8EA2              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EA2
 107+ 8EA2 E6 01            and 1
 108+ 8EA4 28 30            jr z,4F
 109+ 8EA6
 110+ 8EA6              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EA6              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EA6              ;
 113+ 8EA6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EA6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EA6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EA6
 117+ 8EA6 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8EA9
 119+ 8EA9              ;   Amadeus o entidad ???.
 120+ 8EA9
 121+ 8EA9 3A F0 88         ld a,(Ctrl_0)
 122+ 8EAC CB 77            bit 6,a
 123+ 8EAE 28 0A            jr z,8F
 124+ 8EB0
 125+ 8EB0              ; 	Dispara Amadeus.
 126+ 8EB0
 127+ 8EB0 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EB2 CD 3E 96         call PreviousScan
 129+ 8EB5 CD 3E 96         call PreviousScan
 130+ 8EB8
 131+ 8EB8              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EB8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EB8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EB8
 136+ 8EB8 18 11            jr 10F
 137+ 8EBA
 138+ 8EBA              ; 	Dispara Entidad.
 139+ 8EBA
 140+ 8EBA 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EBD              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EBD
 143+ 8EBD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EBD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EBD
 146+ 8EBD C5               push bc
 147+ 8EBE 06 10            ld b,16
 148+ 8EC0 CD 2F 96     9 call NextScan
 149+ 8EC3 10 FB            djnz 9B
 150+ 8EC5 C1               pop bc
 151+ 8EC6 CD 30 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EC9 18 06            jr 17F
 153+ 8ECB
 154+ 8ECB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8ECB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8ECB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8ECB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8ECB
 159+ 8ECB CD 30 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8ECE CD A5 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8ED1              ;                                                      ; _al generar el disparo.
 162+ 8ED1
 163+ 8ED1              ; 	LLegados a este punto tendremos:
 164+ 8ED1              ;
 165+ 8ED1              ;       Puntero_objeto_disparo en IY.
 166+ 8ED1              ;       Rutinas_de_impresion en IX.
 167+ 8ED1              ;       Puntero_de_impresion en HL.
 168+ 8ED1              ;       Impacto/Dirección en BC.
 169+ 8ED1
 170+ 8ED1 CD 38 8F     17 call Almacena_disparo
 171+ 8ED4 18 52            jr 6F                                             ; RET.
 172+ 8ED6
 173+ 8ED6              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8ED6              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8ED6              ;
 176+ 8ED6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8ED6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8ED6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8ED6
 180+ 8ED6 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8ED9
 182+ 8ED9              ;   Amadeus o entidad ???.
 183+ 8ED9
 184+ 8ED9 3A F0 88         ld a,(Ctrl_0)
 185+ 8EDC CB 77            bit 6,a
 186+ 8EDE 28 0A            jr z,11F
 187+ 8EE0
 188+ 8EE0              ; 	Dispara Amadeus.
 189+ 8EE0
 190+ 8EE0 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EE2 CD 3E 96         call PreviousScan
 192+ 8EE5 CD 3E 96         call PreviousScan
 193+ 8EE8
 194+ 8EE8              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EE8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EE8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EE8
 199+ 8EE8 18 11            jr 13F
 200+ 8EEA
 201+ 8EEA              ; 	Dispara Entidad.
 202+ 8EEA
 203+ 8EEA 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EED              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EED
 206+ 8EED              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EED              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EED
 209+ 8EED C5               push bc
 210+ 8EEE 06 10            ld b,16
 211+ 8EF0 CD 2F 96     12 call NextScan
 212+ 8EF3 10 FB            djnz 12B
 213+ 8EF5 C1               pop bc
 214+ 8EF6
 215+ 8EF6 CD 29 8F         call Ajusta_disparo_parte_derecha
 216+ 8EF9 18 06            jr 18F
 217+ 8EFB
 218+ 8EFB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EFB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EFB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EFB
 223+ 8EFB CD 29 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EFE CD A5 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F01              ;                                                       ; _al generar el disparo.
 226+ 8F01
 227+ 8F01              ; LLegados a este punto tendremos:
 228+ 8F01              ;
 229+ 8F01              ;       Puntero_objeto_disparo en IY.
 230+ 8F01              ;       Rutinas_de_impresion en IX.
 231+ 8F01              ;       Puntero_de_impresion en HL.
 232+ 8F01              ;       Impacto/Dirección en BC.
 233+ 8F01
 234+ 8F01 CD 38 8F     18 call Almacena_disparo
 235+ 8F04 18 22            jr 6F                                               ; RET.
 236+ 8F06
 237+ 8F06              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F06
 239+ 8F06 28 11        3 jr z,5F
 240+ 8F08
 241+ 8F08              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F08              ;
 243+ 8F08              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F08              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F08              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F08              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F08
 248+ 8F08              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F08              ;	   ""        ""       "f9", B="1"
 250+ 8F08              ;	   ""        ""       "fb", B="2"
 251+ 8F08              ; 	   ""        ""       "fb", B="3"
 252+ 8F08
 253+ 8F08 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F0B CD 2F 96     	call NextScan
 255+ 8F0E
 256+ 8F0E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F0E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F0E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F0E
 261+ 8F0E CD 30 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F11
 263+ 8F11              ; 	No se produce impacto. B="$80"
 264+ 8F11              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F11
 266+ 8F11 01 80 80         ld bc,$8080
 267+ 8F14
 268+ 8F14              ; 	LLegados a este punto tendremos:
 269+ 8F14              ;
 270+ 8F14              ;       Puntero_objeto_disparo en IY.
 271+ 8F14              ;       Rutinas_de_impresion en IX.
 272+ 8F14              ;       Puntero_de_impresion en HL.
 273+ 8F14              ;       Impacto/Dirección en BC.
 274+ 8F14
 275+ 8F14 CD 38 8F         call Almacena_disparo
 276+ 8F17 18 0F            jr 6F                                           ; RET.
 277+ 8F19
 278+ 8F19              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F19              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F19              ;
 281+ 8F19              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F19              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F19              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F19              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F19
 286+ 8F19 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F1C CD 2F 96     	call NextScan
 288+ 8F1F
 289+ 8F1F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F1F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F1F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F1F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F1F
 294+ 8F1F CD 29 8F         call Ajusta_disparo_parte_derecha
 295+ 8F22
 296+ 8F22              ; 	No se produce impacto. B="$80"
 297+ 8F22              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F22
 299+ 8F22 01 80 80     15 ld bc,$8080
 300+ 8F25
 301+ 8F25              ; 	LLegados a este punto tendremos:
 302+ 8F25              ;
 303+ 8F25              ;       Puntero_objeto_disparo en IY.
 304+ 8F25              ;       Rutinas_de_impresion en IX.
 305+ 8F25              ;       Puntero_de_impresion en HL.
 306+ 8F25              ;       Impacto/Dirección en BC.
 307+ 8F25
 308+ 8F25 CD 38 8F         call Almacena_disparo
 309+ 8F28
 310+ 8F28 C9           6 ret
 311+ 8F29
 312+ 8F29              ; ----------------------------------------------------------------
 313+ 8F29              ;
 314+ 8F29              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F29              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F29              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F29
 318+ 8F29 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F2A FE 02            cp 2
 320+ 8F2C 38 01            jr c,1F
 321+ 8F2E 23               inc hl
 322+ 8F2F C9           1 ret
 323+ 8F30
 324+ 8F30 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F31 FE 01        	cp 1
 326+ 8F33 20 01        	jr nz,1F
 327+ 8F35 2B           	dec hl
 328+ 8F36 2B           1 dec hl
 329+ 8F37 C9               ret
 330+ 8F38
 331+ 8F38              ; ----------------------------------------------------------------
 332+ 8F38              ;
 333+ 8F38              ;   25/02/23
 334+ 8F38              ;
 335+ 8F38              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F38              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F38              ;
 338+ 8F38              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F38              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F38
 341+ 8F38              Almacena_disparo
 342+ 8F38
 343+ 8F38 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F39 F1               pop af
 345+ 8F3A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F3B
 347+ 8F3B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F3C E6 01            and 1
 349+ 8F3E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F40              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F40              ; 	Dispara AMADEUS.
 352+ 8F40
 353+ 8F40              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F40              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F40              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F40              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F40
 358+ 8F40 C5               push bc
 359+ 8F41 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F44 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F47 A7               and a
 362+ 8F48 ED 42            sbc hl,bc
 363+ 8F4A CC 03 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F4D C1               pop bc
 365+ 8F4E 28 54            jr z,4F
 366+ 8F50
 367+ 8F50 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F53 23               inc hl
 369+ 8F54 23               inc hl
 370+ 8F55 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F58              ;                                                   ; _ Disparo_(+1).
 372+ 8F58 18 18            jr 2F
 373+ 8F5A
 374+ 8F5A              ; Dispara una entidad.
 375+ 8F5A
 376+ 8F5A C5           1 push bc
 377+ 8F5B 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F5E 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F61 A7               and a
 380+ 8F62 ED 42            sbc hl,bc
 381+ 8F64 CC FC 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F67 C1               pop bc
 383+ 8F68 28 3A            jr z,4F
 384+ 8F6A
 385+ 8F6A 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F6D 23               inc hl
 387+ 8F6E 23               inc hl
 388+ 8F6F 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F72              ;                                                   ; _ Disparo_(+1).
 390+ 8F72 CD 82 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F75              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F75              ;
 393+ 8F75              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F75              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F75              ;                                                     Puntero_de_impresion en HL.
 396+ 8F75              ;                                                     Impacto/Dirección en BC.
 397+ 8F75
 398+ 8F75 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F76 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F77 23               inc hl                                          ; _ al siguiente.
 401+ 8F78 A7               and a
 402+ 8F79 20 C0            jr nz,3B
 403+ 8F7B
 404+ 8F7B 08               ex af,af
 405+ 8F7C ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F80 F9               ld sp,hl
 407+ 8F81
 408+ 8F81 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F83 F5               push af                                         ; Puntero de impresión.
 410+ 8F84 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F86 C5               push bc                                         ; Control.
 412+ 8F87
 413+ 8F87 ED 7B 14 89      ld sp,(Stack)
 414+ 8F8B
 415+ 8F8B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F8B
 417+ 8F8B 21 03 89     	ld hl,Ctrl_1
 418+ 8F8E CB C6        	set 0,(hl)
 419+ 8F90
 420+ 8F90 DD E5        	push ix
 421+ 8F92 E1               pop hl
 422+ 8F93 F5               push af
 423+ 8F94 DD E1            pop ix
 424+ 8F96
 425+ 8F96 CD A0 7F     	call Guarda_foto_registros
 426+ 8F99
 427+ 8F99 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F9C CB 86        	res 0,(hl)
 429+ 8F9E
 430+ 8F9E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F9E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F9E
 433+ 8F9E CD 03 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FA1 CD FC 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FA4
 436+ 8FA4 C9           4 ret
 437+ 8FA5
 438+ 8FA5              ; ----------------------------------------------------------------
 439+ 8FA5              ;
 440+ 8FA5              ;   4/3/23
 441+ 8FA5              ;
 442+ 8FA5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FA5              ;   _ al generarse el disparo.
 444+ 8FA5              ;
 445+ 8FA5              ;       "$80" ..... No se produce colisión.
 446+ 8FA5              ;       "$81" ..... Se produce colisión.
 447+ 8FA5              ;
 448+ 8FA5              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FA5              ;         _ que forman el disparo.
 450+ 8FA5
 451+ 8FA5
 452+ 8FA5              Comprueba_Colision
 453+ 8FA5
 454+ 8FA5              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FA5
 456+ 8FA5 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FA7 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FA8
 459+ 8FA8 CD DE 8F         call Modifica_H_Velocidad_disparo
 460+ 8FAB
 461+ 8FAB 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FAC FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FAE 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FB0
 465+ 8FB0 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FB2 CD CE 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FB5
 468+ 8FB5 7B               ld a,e
 469+ 8FB6 E6 01            and 1
 470+ 8FB8 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FBA              ;                                                  ; _ para activar IMPACTO.
 472+ 8FBA E1               pop hl
 473+ 8FBB E5               push hl
 474+ 8FBC CD 2F 96         call NextScan
 475+ 8FBF
 476+ 8FBF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FC0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FC2 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FC4              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FC4 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FC6 CD CE 8F         call Bucle_2
 482+ 8FC9
 483+ 8FC9 43           1 ld b,e
 484+ 8FCA E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FCB FD E1            pop iy
 486+ 8FCD C9               ret
 487+ 8FCE
 488+ 8FCE              ; ---------- ----------
 489+ 8FCE
 490+ 8FCE 06 02        Bucle_2 ld b,2
 491+ 8FD0 FD 7E 00     2 ld a,(iy)
 492+ 8FD3 A6               and (hl)
 493+ 8FD4 28 02            jr z,1F
 494+ 8FD6 1E 81            ld e,$81
 495+ 8FD8 23           1 inc hl
 496+ 8FD9 FD 23            inc iy
 497+ 8FDB 10 F3            djnz 2B
 498+ 8FDD C9               ret
 499+ 8FDE
 500+ 8FDE              ; ---------- ----------
 501+ 8FDE              ;
 502+ 8FDE              ;   21/7/23
 503+ 8FDE
 504+ 8FDE              Modifica_H_Velocidad_disparo
 505+ 8FDE
 506+ 8FDE 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FE1 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FE3 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FE4 24               inc h
 510+ 8FE5
 511+ 8FE5 C9               ret
 512+ 8FE6
 513+ 8FE6              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FE6              ;
 515+ 8FE6              ;   11/04/23
 516+ 8FE6              ;
 517+ 8FE6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FE6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FE6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FE6              ;
 521+ 8FE6              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FE6
 523+ 8FE6              Compara_coordenadas_X
 524+ 8FE6
 525+ 8FE6              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FE6              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FE6
 528+ 8FE6              ; Preparamos registros:
 529+ 8FE6
 530+ 8FE6 21 CC 88         ld hl,Filas+6
 531+ 8FE9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FEA 23               inc hl
 533+ 8FEB 23               inc hl
 534+ 8FEC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FED 43               ld b,e
 536+ 8FEE
 537+ 8FEE 21 DA 88         ld hl,Filas+20
 538+ 8FF1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FF2 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 8FF5 CD 11 92         call Guarda_coordenadas_X
 541+ 8FF8
 542+ 8FF8              ; Preparamos registros:
 543+ 8FF8
 544+ 8FF8 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FFB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FFC 23               inc hl
 547+ 8FFD 23               inc hl
 548+ 8FFE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FFF 7B               ld a,e
 550+ 9000 08               ex af,af'
 551+ 9001 21 B2 85         ld hl,Amadeus_db+20
 552+ 9004 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9005 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 9008 CD 11 92         call Guarda_coordenadas_X
 555+ 900B
 556+ 900B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 900B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 900B
 559+ 900B 04               inc b
 560+ 900C 05               dec b
 561+ 900D 28 04            jr z,1F
 562+ 900F 06 03            ld b,3
 563+ 9011 18 02            jr 2F
 564+ 9013 06 02        1 ld b,2
 565+ 9015 08           2 ex af,af'
 566+ 9016 3C               inc a
 567+ 9017 3D               dec a
 568+ 9018 28 04            jr z,5F
 569+ 901A 0E 03            ld c,3
 570+ 901C 18 02            jr 6F
 571+ 901E 0E 02        5 ld c,2
 572+ 9020 79           6 ld a,c
 573+ 9021 08               ex af,af'
 574+ 9022 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 9025 1A           4 ld a,(de)
 576+ 9026 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9029 BE           3 cp (hl)
 578+ 902A 28 0E            jr z,7F
 579+ 902C 23               inc hl
 580+ 902D 0D               dec c
 581+ 902E 20 F9            jr nz,3B
 582+ 9030 13               inc de
 583+ 9031 08               ex af,af'
 584+ 9032 4F               ld c,a
 585+ 9033 08               ex af,af'
 586+ 9034 10 EF            djnz 4B
 587+ 9036
 588+ 9036              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9036
 590+ 9036 CD 4D 92     8 call Limpia_Coordenadas_X
 591+ 9039 C9               ret
 592+ 903A
 593+ 903A 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 903C 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 903F 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9042 CB D6            set 2,(hl)
 597+ 9044 18 F0            jr 8B
 598+ 9046
 599+ 9046              ; -----------------------------------------------------------------------
 600+ 9046              ;
 601+ 9046              ;   17/04/23
 602+ 9046              ;
 603+ 9046
 604+ 9046              Detecta_colision_nave_entidad
 605+ 9046
 606+ 9046              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9046
 608+ 9046 2A C8 88         ld hl,(Posicion_actual)
 609+ 9049 CD 8A 95         call Calcula_puntero_de_impresion
 610+ 904C
 611+ 904C              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 904C              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 904C
 614+ 904C DD E5            push ix
 615+ 904E E1               pop hl
 616+ 904F E5               push hl
 617+ 9050
 618+ 9050              ; ----- ----- -----
 619+ 9050 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9052 06 0A            ld b,10
 621+ 9054 CD 84 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9057 7B               ld a,e
 623+ 9058 FE 05            cp 5
 624+ 905A 38 0E            jr c,3F
 625+ 905C
 626+ 905C              ; LLegados a este punto:
 627+ 905C              ;
 628+ 905C              ;   HAY COLISIÓN !!!!!.
 629+ 905C              ;
 630+ 905C              ;   .db (Impacto) de Amadeus a "1".
 631+ 905C              ;   SET el bit3 de (Impacto2).
 632+ 905C              ;
 633+ 905C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 905C
 635+ 905C 21 B7 85         ld hl,Amadeus_db+25
 636+ 905F 36 01            ld (hl),1
 637+ 9061 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9064 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9066 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9068 18 18            jr 1F
 641+ 906A
 642+ 906A              ; -----
 643+ 906A
 644+ 906A E1           3 pop hl
 645+ 906B CD 2F 96         call NextScan
 646+ 906E E5               push hl
 647+ 906F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9070 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9072 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9074 30 0C            jr nc,1F
 651+ 9076              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9076 10 DC            djnz 2B
 653+ 9078
 654+ 9078              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9078
 656+ 9078              ; LLegados a este punto:
 657+ 9078              ;
 658+ 9078              ;   NO HAY COLISIÓN !!!!!.
 659+ 9078              ;
 660+ 9078              ;   .db (Impacto) de Amadeus a "0".
 661+ 9078              ;   RES el bit2 de (Impacto2).
 662+ 9078              ;
 663+ 9078              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9078              ;   Lo colocamos a "0".
 665+ 9078
 666+ 9078 21 42 89         ld hl,Impacto2
 667+ 907B CB 96            res 2,(hl)
 668+ 907D 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9080 36 00            ld (hl),0
 670+ 9082
 671+ 9082 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9083 C9               ret
 673+ 9084
 674+ 9084               ; ---------- ----------
 675+ 9084
 676+ 9084 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9085 3A C7 88         ld a,(Columns)
 678+ 9088 47               ld b,a
 679+ 9089 FD 7E 00     2 ld a,(iy)
 680+ 908C BE               cp (hl)
 681+ 908D 28 01            jr z,1F
 682+ 908F
 683+ 908F 1C               inc e
 684+ 9090
 685+ 9090 23           1 inc hl
 686+ 9091 FD 23            inc iy
 687+ 9093 10 F4            djnz 2B
 688+ 9095 C1               pop bc
 689+ 9096 C9               ret
 690+ 9097
 691+ 9097              ; -------------------------------------------------------------------------------------------------------------
 692+ 9097              ;
 693+ 9097              ;   13/03/23
 694+ 9097              ;
 695+ 9097              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9097              ;
 697+ 9097              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9097
 699+ 9097 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 909A 7E               ld a,(hl)
 701+ 909B A7               and a
 702+ 909C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 909D
 704+ 909D 44               ld b,h
 705+ 909E 4D               ld c,l
 706+ 909F 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 90A2 E5               push hl
 708+ 90A3 A7               and a
 709+ 90A4 ED 42            sbc hl,bc
 710+ 90A6 E5               push hl
 711+ 90A7 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90A8
 713+ 90A8 E1               pop hl
 714+ 90A9 54               ld d,h
 715+ 90AA 5D               ld e,l
 716+ 90AB 1B               dec de
 717+ 90AC ED B8            lddr                                                ; Limpiamos.
 718+ 90AE
 719+ 90AE 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90B1 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 90B4
 722+ 90B4 C9               ret
 723+ 90B5
 724+ 90B5              ; -------------------------------------------------------------------------------------------------------------
 725+ 90B5              ;
 726+ 90B5              ;   18/07/23
 727+ 90B5              ;
 728+ 90B5
 729+ 90B5              Motor_de_disparos
 730+ 90B5
 731+ 90B5              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90B5
 733+ 90B5 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90B8 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90BB
 736+ 90BB CD 82 8C     2 call Extrae_address
 737+ 90BE 7E               ld a,(hl)
 738+ 90BF A7               and a
 739+ 90C0 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90C2
 741+ 90C2              ; ----- ----- ----- ----- ----- -----
 742+ 90C2
 743+ 90C2 C5               push bc
 744+ 90C3 CD 87 91         call foto_disparo_a_borrar
 745+ 90C6
 746+ 90C6              ; Existe colisión con este disparo???
 747+ 90C6
 748+ 90C6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90C7 7E               ld a,(hl)
 750+ 90C8 2B               dec hl
 751+ 90C9 E6 01            and 1
 752+ 90CB 28 1D            jr z,9F
 753+ 90CD
 754+ 90CD              ;   En este punto:
 755+ 90CD              ;
 756+ 90CD              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90CD              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90CD              ;   _con la entidad).
 759+ 90CD              ;
 760+ 90CD              ;   Disparo_2A defw 0                                ; Control.
 761+ 90CD              ;    defw 0                                          ; Puntero objeto.
 762+ 90CD              ;    defw 0                                          ; Puntero de impresión.
 763+ 90CD              ;    defw 0                                          ; Rutina de impresión.
 764+ 90CD
 765+ 90CD E5               push hl
 766+ 90CE
 767+ 90CE 06 04            ld b,4
 768+ 90D0 23           19 inc hl
 769+ 90D1 10 FD            djnz 19B
 770+ 90D3
 771+ 90D3 CD 82 8C         call Extrae_address
 772+ 90D6 CD F8 9C         call Genera_coordenadas_disparo
 773+ 90D9
 774+ 90D9              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90D9
 776+ 90D9 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 90DC 72               ld (hl),d
 778+ 90DD 23               inc hl
 779+ 90DE 73               ld (hl),e
 780+ 90DF
 781+ 90DF              ; Elimino el disparo de la base de datos.
 782+ 90DF
 783+ 90DF E1               pop hl
 784+ 90E0 CD 06 92         call Elimina_disparo_de_base_de_datos
 785+ 90E3 21 42 89         ld hl,Impacto2
 786+ 90E6 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90E8
 788+ 90E8 18 06            jr 11F
 789+ 90EA
 790+ 90EA CD B0 91     9 call Mueve_disparo
 791+ 90ED CD 87 91         call foto_disparo_a_borrar
 792+ 90F0
 793+ 90F0 C1           11 pop bc
 794+ 90F1 18 04            jr 7F
 795+ 90F3
 796+ 90F3              ; ----- ----- ----- ----- ----- -----
 797+ 90F3
 798+ 90F3 ED 42        1 sbc hl,bc
 799+ 90F5 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90F7
 801+ 90F7 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90FA 23               inc hl
 803+ 90FB 23               inc hl
 804+ 90FC 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90FF 18 BA            jr 2B
 806+ 9101
 807+ 9101 CD 03 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9104              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9104
 810+ 9104              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9104
 812+ 9104 01 8A 85         ld bc,Disparo_11
 813+ 9107 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 910A
 815+ 910A CD 82 8C     5 call Extrae_address
 816+ 910D 7E               ld a,(hl)
 817+ 910E A7               and a
 818+ 910F 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9111
 820+ 9111              ; ----- ----- ----- ----- ----- -----
 821+ 9111
 822+ 9111 C5               push bc
 823+ 9112 CD 87 91         call foto_disparo_a_borrar
 824+ 9115
 825+ 9115              ; Existe colisión con este disparo???
 826+ 9115
 827+ 9115 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9116 7E               ld a,(hl)
 829+ 9117 2B               dec hl
 830+ 9118 E6 01            and 1
 831+ 911A 28 4D            jr z,10F
 832+ 911C
 833+ 911C              ;! La colisión se produce con Amadeus???
 834+ 911C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 911C
 836+ 911C E5               push hl
 837+ 911D
 838+ 911D 06 04            ld b,4
 839+ 911F 23           16 inc hl
 840+ 9120 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9122
 842+ 9122 CD 82 8C         call Extrae_address
 843+ 9125 CD F8 9C         call Genera_coordenadas_disparo
 844+ 9128
 845+ 9128 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9129 FE 16            cp $16
 847+ 912B 38 2A            jr c,15F
 848+ 912D
 849+ 912D
 850+ 912D              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 912D
 852+ 912D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 912E
 854+ 912E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 912E
 856+ 912E
 857+ 912E 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9131
 859+ 9131              ; Coordenada X de Amadeus en D.
 860+ 9131
 861+ 9131 7D               ld a,l
 862+ 9132 E6 1F            and $1F
 863+ 9134 57               ld d,a
 864+ 9135
 865+ 9135 21 A6 85         ld hl,Amadeus_db+8
 866+ 9138 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9139
 868+ 9139 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 913C CD 11 92         call Guarda_coordenadas_X
 870+ 913F
 871+ 913F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9140
 873+ 9140              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9140
 875+ 9140 06 02            ld b,2
 876+ 9142 C5           20 push bc
 877+ 9143
 878+ 9143 06 03            ld b,3
 879+ 9145 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 9148 7E           18 ld a,(hl)
 881+ 9149 BA               cp d
 882+ 914A 20 04            jr nz,17F
 883+ 914C
 884+ 914C              ;! Colisión Amadeus !!!!!!!!!!
 885+ 914C
 886+ 914C C1               pop bc
 887+ 914D E1               pop hl
 888+ 914E 18 0D            jr 14F
 889+ 9150
 890+ 9150 23           17 inc hl
 891+ 9151 10 F5            djnz 18B
 892+ 9153
 893+ 9153 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9154
 895+ 9154 C1               pop bc
 896+ 9155 10 EB            djnz 20B
 897+ 9157
 898+ 9157
 899+ 9157              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9157              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9157
 902+ 9157 E1           15 pop hl
 903+ 9158 23               inc hl
 904+ 9159 35               dec (hl)
 905+ 915A 2B               dec hl
 906+ 915B 18 0C            jr 10F
 907+ 915D
 908+ 915D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 915D              ; _ almacén de coordenadas_X de Amadeus.
 910+ 915D
 911+ 915D E5           14 push hl
 912+ 915E CD 06 92         call Elimina_disparo_de_base_de_datos
 913+ 9161 21 42 89         ld hl,Impacto2
 914+ 9164 CB CE            set 1,(hl)
 915+ 9166 E1               pop hl
 916+ 9167 18 06            jr 12F
 917+ 9169
 918+ 9169              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9169
 920+ 9169 CD B0 91     10 call Mueve_disparo
 921+ 916C CD 87 91         call foto_disparo_a_borrar
 922+ 916F C1           12 pop bc
 923+ 9170
 924+ 9170 18 04            jr 8F
 925+ 9172
 926+ 9172              ; ----- ----- ----- ----- ----- -----
 927+ 9172
 928+ 9172 ED 42        4 sbc hl,bc
 929+ 9174 28 0A            jr z,6F
 930+ 9176
 931+ 9176 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9179 23               inc hl
 933+ 917A 23               inc hl
 934+ 917B 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 917E 18 8A            jr 5B
 936+ 9180
 937+ 9180 CD FC 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9183 CD 4D 92         call Limpia_Coordenadas_X
 939+ 9186 C9               ret
 940+ 9187
 941+ 9187              ; ------------------------------------------------------------------
 942+ 9187
 943+ 9187              foto_disparo_a_borrar
 944+ 9187
 945+ 9187 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9188 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9189 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 918A
 949+ 918A E5               push hl
 950+ 918B 23               inc hl
 951+ 918C 23               inc hl
 952+ 918D ED 73 14 89      ld (Stack),sp
 953+ 9191 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9192 FD E1            pop iy
 955+ 9194 DD E1            pop ix
 956+ 9196 E1               pop hl
 957+ 9197 ED 7B 14 89      ld sp,(Stack)
 958+ 919B 3A 03 89         ld a,(Ctrl_1)
 959+ 919E CB C7            set 0,a
 960+ 91A0 32 03 89         ld (Ctrl_1),a
 961+ 91A3 CD A0 7F         call Guarda_foto_registros
 962+ 91A6 3A 03 89         ld a,(Ctrl_1)
 963+ 91A9 CB 87            res 0,a
 964+ 91AB 32 03 89         ld (Ctrl_1),a
 965+ 91AE E1               pop hl
 966+ 91AF C9               ret
 967+ 91B0
 968+ 91B0              ;---------------------------------------------------
 969+ 91B0              ;
 970+ 91B0              ;   18/07/23
 971+ 91B0              ;
 972+ 91B0
 973+ 91B0              Mueve_disparo
 974+ 91B0
 975+ 91B0              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91B0              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91B0              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91B0
 979+ 91B0 E5               push hl
 980+ 91B1
 981+ 91B1 7E               ld a,(hl)
 982+ 91B2
 983+ 91B2 06 04            ld b,4
 984+ 91B4 23           1 inc hl
 985+ 91B5 10 FD            djnz 1B
 986+ 91B7
 987+ 91B7              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91B7
 989+ 91B7 CD 82 8C         call Extrae_address
 990+ 91BA
 991+ 91BA E6 01            and 1
 992+ 91BC 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91BE
 994+ 91BE              ; Disparo hacia arriba, (Amadeus).
 995+ 91BE
 996+ 91BE              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91BE              ; _ de la dificultad.
 998+ 91BE
 999+ 91BE CD 3E 96         call PreviousScan
1000+ 91C1 CD 3E 96         call PreviousScan
1001+ 91C4 CD 3E 96         call PreviousScan
1002+ 91C7 CD 3E 96         call PreviousScan
1003+ 91CA
1004+ 91CA              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91CA
1006+ 91CA 7C               ld a,h
1007+ 91CB FE 40            cp $40
1008+ 91CD 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91CF
1010+ 91CF              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91CF
1012+ 91CF EB               ex de,hl
1013+ 91D0 06 04            ld b,4
1014+ 91D2 2B           6 dec hl
1015+ 91D3 10 FD            djnz 6B
1016+ 91D5
1017+ 91D5 CD 06 92         call Elimina_disparo_de_base_de_datos
1018+ 91D8 E1               pop hl
1019+ 91D9 18 10            jr 7F
1020+ 91DB
1021+ 91DB              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91DB              ; HL contiene el puntero de impresión del disparo.
1023+ 91DB              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91DB
1025+ 91DB D5           3 push de
1026+ 91DC C5               push bc
1027+ 91DD
1028+ 91DD CD A5 8F         call Comprueba_Colision
1029+ 91E0
1030+ 91E0              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91E0
1032+ 91E0 78               ld a,b
1033+ 91E1
1034+ 91E1 C1               pop bc
1035+ 91E2 D1               pop de
1036+ 91E3
1037+ 91E3 EB               ex de,hl
1038+ 91E4
1039+ 91E4 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91E5 23               inc hl                                      ; _ movimiento.
1041+ 91E6 72               ld (hl),d
1042+ 91E7
1043+ 91E7 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91E8
1045+ 91E8 23               inc hl                                      ; _ en curso.
1046+ 91E9 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91EA 2B               dec hl
1048+ 91EB
1049+ 91EB C9           7 ret
1050+ 91EC
1051+ 91EC              ; Disparo hacia abajo, (Entidad).
1052+ 91EC
1053+ 91EC 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91EF 47               ld b,a
1055+ 91F0
1056+ 91F0 CD 2F 96     4 call NextScan
1057+ 91F3 10 FB            djnz 4B
1058+ 91F5
1059+ 91F5              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91F5
1061+ 91F5 7C               ld a,h
1062+ 91F6 FE 58            cp $58
1063+ 91F8 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91FA
1065+ 91FA EB               ex de,hl
1066+ 91FB 06 04            ld b,4
1067+ 91FD 2B           5 dec hl
1068+ 91FE 10 FD            djnz 5B
1069+ 9200
1070+ 9200 CD 06 92         call Elimina_disparo_de_base_de_datos
1071+ 9203 E1               pop hl
1072+ 9204 18 E5            jr 7B
1073+ 9206
1074+ 9206              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9206
1076+ 9206 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9209 AF               xor a
1078+ 920A 77               ld (hl),a
1079+ 920B 54               ld d,h
1080+ 920C 5D               ld e,l
1081+ 920D 13               inc de
1082+ 920E ED B0            ldir
1083+ 9210 C9               ret
1084+ 9211
1085+ 9211              ; -----------------------------------------------------------------
1086+ 9211              ;
1087+ 9211              ;   19/7/23
1088+ 9211              ;
1089+ 9211              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9211              ;
1091+ 9211              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9211              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9211              ;
1094+ 9211              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9211              ;
1096+ 9211              ;   INPUTS:
1097+ 9211              ;
1098+ 9211              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9211              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9211
1101+ 9211              ;   MODIFICA: A, HL, BC y DE.
1102+ 9211
1103+ 9211              Guarda_coordenadas_X
1104+ 9211
1105+ 9211 7B               ld a,e
1106+ 9212 A7               and a
1107+ 9213 20 04            jr nz,1F
1108+ 9215
1109+ 9215 06 02            ld b,2
1110+ 9217 18 02            jr 2F
1111+ 9219
1112+ 9219 06 03        1 ld b,3
1113+ 921B 72           2 ld (hl),d
1114+ 921C 23               inc hl
1115+ 921D 14               inc d
1116+ 921E 10 FB            djnz 2B
1117+ 9220
1118+ 9220 C9               ret
1119+ 9221
1120+ 9221              ; -----------------------------------------------------------------
1121+ 9221              ;
1122+ 9221              ;   12/04/23
1123+ 9221              ;
1124+ 9221
1125+ 9221 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9224 A7               and a
1127+ 9225 C8               ret z
1128+ 9226
1129+ 9226 FE 04            cp 4
1130+ 9228 20 09            jr nz,1F
1131+ 922A
1132+ 922A
1133+ 922A              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 922A
1135+ 922A CD 46 90         call Detecta_colision_nave_entidad
1136+ 922D
1137+ 922D 21 42 89         ld hl,Impacto2
1138+ 9230 CB 5E            bit 3,(hl)
1139+ 9232 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9233
1141+ 9233              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9233              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9233
1144+ 9233 21 42 89     1 ld hl,Impacto2
1145+ 9236 CB 4E            bit 1,(hl)
1146+ 9238 28 07            jr z,2F
1147+ 923A
1148+ 923A 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 923D 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 923F 18 0B            jr 3F
1151+ 9241
1152+ 9241 21 42 89     2 ld hl,Impacto2
1153+ 9244 CB 46            bit 0,(hl)
1154+ 9246 C8               ret z
1155+ 9247
1156+ 9247              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9247
1158+ 9247 21 03 89         ld hl,Ctrl_1
1159+ 924A CB D6            set 2,(hl)
1160+ 924C
1161+ 924C C9           3 ret
1162+ 924D
1163+ 924D              ; -----------------------------------------------------------------
1164+ 924D              ;
1165+ 924D              ;   19/7/23
1166+ 924D              ;
1167+ 924D              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 924D
1169+ 924D AF           Limpia_Coordenadas_X xor a
1170+ 924E 06 06            ld b,6
1171+ 9250 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 9253 77           1 ld (hl),a
1173+ 9254 23               inc hl
1174+ 9255 10 FC            djnz 1B
1175+ 9257 C9               ret
1176+ 9258
1177+ 9258              ; -----------------------------------------------------------------
1178+ 9258              ;
1179+ 9258              ;   25/04/23
1180+ 9258              ;
1181+ 9258
1182+ 9258              Determina_resultado_comparativa
1183+ 9258
1184+ 9258              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9258              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9258              ;
1187+ 9258              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9258              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9258              ;
1190+ 9258              ;   SBC HL,DE
1191+ 9258
1192+ 9258              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9258              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9258
1195+ 9258              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9258              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9258
1198+ 9258
1199+ 9258 3A DA 88         ld a,(Cuad_objeto)
1200+ 925B FE 02            cp 2
1201+ 925D 28 26            jr z,2F
1202+ 925F 38 24            jr c,2F
1203+ 9261
1204+ 9261              ; Cuadrantes 3º y 4º
1205+ 9261
1206+ 9261 E6 01            and 1
1207+ 9263 28 10            jr z,4F
1208+ 9265
1209+ 9265              ; Cuadrante 3º
1210+ 9265
1211+ 9265 7C               ld a,h
1212+ 9266 06 00            ld b,0
1213+ 9268
1214+ 9268 CD F3 92         call Compara_cositas_H3
1215+ 926B
1216+ 926B 04               inc b
1217+ 926C 05               dec b
1218+ 926D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 926E
1220+ 926E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 926F 06 00            ld b,0
1222+ 9271
1223+ 9271 CD 05 93         call Compara_cositas_L3
1224+ 9274 C9               ret
1225+ 9275
1226+ 9275              ; Cuadrante 4º
1227+ 9275
1228+ 9275 7C           4 ld a,h
1229+ 9276 06 00            ld b,0
1230+ 9278
1231+ 9278 CD 17 93         call Compara_cositas_H4
1232+ 927B
1233+ 927B 04               inc b
1234+ 927C 05               dec b
1235+ 927D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 927E
1237+ 927E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 927F 06 00            ld b,0
1239+ 9281
1240+ 9281 CD 2D 93         call Compara_cositas_L4
1241+ 9284 C9               ret
1242+ 9285
1243+ 9285              ; Cuadrantes 1º y 2º.
1244+ 9285
1245+ 9285 28 10        2 jr z,3F
1246+ 9287
1247+ 9287              ; 1er Cuadrante
1248+ 9287
1249+ 9287 7C               ld a,h
1250+ 9288 06 00            ld b,0
1251+ 928A
1252+ 928A CD CB 92         call Compara_cositas_H1
1253+ 928D
1254+ 928D 04               inc b
1255+ 928E 05               dec b
1256+ 928F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9290
1258+ 9290 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9291 06 00            ld b,0
1260+ 9293
1261+ 9293 CD E1 92         call Compara_cositas_L1
1262+ 9296 C9               ret
1263+ 9297
1264+ 9297
1265+ 9297              ; 2º Cuadrante
1266+ 9297
1267+ 9297 7C           3 ld a,h
1268+ 9298 06 00            ld b,0
1269+ 929A
1270+ 929A CD A7 92         call Compara_cositas_H2
1271+ 929D
1272+ 929D 04               inc b
1273+ 929E 05               dec b
1274+ 929F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92A0
1276+ 92A0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92A1 06 00            ld b,0
1278+ 92A3
1279+ 92A3 CD B9 92         call Compara_cositas_L2
1280+ 92A6 C9               ret
1281+ 92A7
1282+ 92A7 A7           Compara_cositas_H2 and a
1283+ 92A8 28 0D            jr z,1F
1284+ 92AA              ;    cp $fd
1285+ 92AA              ;    jr z,1F
1286+ 92AA              ;    cp $fe
1287+ 92AA              ;    jr z,1F
1288+ 92AA FE FF            cp $ff
1289+ 92AC 28 09            jr z,1F
1290+ 92AE FE 01            cp $01
1291+ 92B0 28 05            jr z,1F
1292+ 92B2 FE 02            cp $02
1293+ 92B4 28 01            jr z,1F
1294+ 92B6 C0               ret nz
1295+ 92B7 04           1 inc b
1296+ 92B8 C9               ret
1297+ 92B9
1298+ 92B9 A7           Compara_cositas_L2 and a
1299+ 92BA 28 0D            jr z,1F
1300+ 92BC              ;    cp $fd
1301+ 92BC              ;    jr z,1F
1302+ 92BC FE FE            cp $fe
1303+ 92BE 28 09            jr z,1F
1304+ 92C0 FE FF            cp $ff
1305+ 92C2 28 05            jr z,1F
1306+ 92C4 FE 01            cp $01
1307+ 92C6 28 01            jr z,1F
1308+ 92C8              ;    cp $02
1309+ 92C8              ;    jr z,1F
1310+ 92C8 C0               ret nz
1311+ 92C9 04           1 inc b
1312+ 92CA C9               ret
1313+ 92CB
1314+ 92CB A7           Compara_cositas_H1 and a
1315+ 92CC 28 11            jr z,1F
1316+ 92CE              ;    cp $fd
1317+ 92CE              ;    jr z,1F
1318+ 92CE              ;    cp $fe
1319+ 92CE              ;    jr z,1F
1320+ 92CE FE FF            cp $ff
1321+ 92D0 28 0D            jr z,1F
1322+ 92D2 FE 01            cp $01
1323+ 92D4 28 09            jr z,1F
1324+ 92D6 FE 02            cp $02
1325+ 92D8 28 05            jr z,1F
1326+ 92DA FE 03            cp $03
1327+ 92DC 28 01            jr z,1F
1328+ 92DE C0               ret nz
1329+ 92DF 04           1 inc b
1330+ 92E0 C9               ret
1331+ 92E1
1332+ 92E1 A7           Compara_cositas_L1 and a
1333+ 92E2 28 0D            jr z,1F
1334+ 92E4              ;    cp $fd
1335+ 92E4              ;    jr z,1F
1336+ 92E4              ;    cp $fe
1337+ 92E4              ;    jr z,1F
1338+ 92E4              ;    cp $ff
1339+ 92E4              ;    jr z,1F
1340+ 92E4 FE 01            cp $01
1341+ 92E6 28 09            jr z,1F
1342+ 92E8 FE 02            cp $02
1343+ 92EA 28 05            jr z,1F
1344+ 92EC FE 03            cp $03
1345+ 92EE 28 01            jr z,1F
1346+ 92F0 C0               ret nz
1347+ 92F1 04           1 inc b
1348+ 92F2 C9               ret
1349+ 92F3
1350+ 92F3 A7           Compara_cositas_H3 and a
1351+ 92F4 28 0D            jr z,1F
1352+ 92F6              ;    cp $fd
1353+ 92F6              ;    jr z,1F
1354+ 92F6 FE FE            cp $fe
1355+ 92F8 28 09            jr z,1F
1356+ 92FA FE FF            cp $ff
1357+ 92FC 28 05            jr z,1F
1358+ 92FE FE 01            cp $01
1359+ 9300 28 01            jr z,1F
1360+ 9302              ;    cp $02
1361+ 9302              ;    jr z,1F
1362+ 9302              ;    cp $03
1363+ 9302              ;    jr z,1F
1364+ 9302 C0               ret nz
1365+ 9303 04           1 inc b
1366+ 9304 C9               ret
1367+ 9305
1368+ 9305 A7           Compara_cositas_L3 and a
1369+ 9306 28 0D            jr z,1F
1370+ 9308              ;    cp $fd
1371+ 9308              ;    jr z,1F
1372+ 9308              ;    cp $fe
1373+ 9308              ;    jr z,1F
1374+ 9308              ;    cp $ff
1375+ 9308              ;    jr z,1F
1376+ 9308 FE 01            cp $01
1377+ 930A 28 09            jr z,1F
1378+ 930C FE 02            cp $02
1379+ 930E 28 05            jr z,1F
1380+ 9310 FE 03            cp $03
1381+ 9312 28 01            jr z,1F
1382+ 9314 C0               ret nz
1383+ 9315 04           1 inc b
1384+ 9316 C9               ret
1385+ 9317
1386+ 9317 A7           Compara_cositas_H4 and a
1387+ 9318 28 11            jr z,1F
1388+ 931A FE FD            cp $fd
1389+ 931C 28 0D            jr z,1F
1390+ 931E FE FE            cp $fe
1391+ 9320 28 09            jr z,1F
1392+ 9322 FE FF            cp $ff
1393+ 9324 28 05            jr z,1F
1394+ 9326 FE 01            cp $01
1395+ 9328 28 01            jr z,1F
1396+ 932A              ;    cp $02
1397+ 932A              ;    jr z,1F
1398+ 932A              ;    cp $03
1399+ 932A              ;    jr z,1F
1400+ 932A C0               ret nz
1401+ 932B 04           1 inc b
1402+ 932C C9               ret
1403+ 932D
1404+ 932D A7           Compara_cositas_L4 and a
1405+ 932E 28 0D            jr z,1F
1406+ 9330              ;    cp $fd
1407+ 9330              ;    jr z,1F
1408+ 9330 FE FE            cp $fe
1409+ 9332 28 09            jr z,1F
1410+ 9334 FE FF            cp $ff
1411+ 9336 28 05            jr z,1F
1412+ 9338 FE 01            cp $01
1413+ 933A 28 01            jr z,1F
1414+ 933C              ;    cp $02
1415+ 933C              ;    jr z,1F
1416+ 933C              ;    cp $03
1417+ 933C              ;    jr z,1F
1418+ 933C C0               ret nz
1419+ 933D 04           1 inc b
1420+ 933E C9               ret
# file closed: Disparo.asm
1645  933F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 933F              ; ******************************************************************************************************************************************************************************************
   2+ 933F              ;
   3+ 933F              ; 26/06/23
   4+ 933F              ;
   5+ 933F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 933F
   7+ 933F CD 23 96     Draw call Prepara_draw
   8+ 9342 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9343 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9344 28 05        	jr z,2F
  11+ 9346
  12+ 9346 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9349 18 0C        	jr 1F
  14+ 934B
  15+ 934B 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 934E 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9351 CD E0 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9354              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9354 CD 83 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9357
  21+ 9357 3A F0 88     1 ld a,(Ctrl_0)
  22+ 935A CB 6F        	bit 5,a
  23+ 935C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 935E
  25+ 935E CD 76 93     	call Comprueba_limite_horizontal
  26+ 9361 CD 06 94     	call Comprueba_limite_vertical
  27+ 9364
  28+ 9364              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9364              ; -----------------------
  30+ 9364              ; -----------------------
  31+ 9364              ; -----------------------
  32+ 9364
  33+ 9364 CD 53 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9367 CD 8A 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 936A CD E9 95     	call Define_rutina_de_impresion
  36+ 936D
  37+ 936D 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9370 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9372 32 F0 88     	ld (Ctrl_0),a
  40+ 9375
  41+ 9375 C9           	ret
  42+ 9376
  43+ 9376              ; *******************************************************************************************************************************************************************************************
  44+ 9376              ;	21/01/23
  45+ 9376              ;
  46+ 9376              ; 	Comprueba_limite_horizontal.
  47+ 9376              ;
  48+ 9376              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9376              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9376              ;
  51+ 9376              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9376              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9376              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9376              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9376
  56+ 9376
  57+ 9376
  58+ 9376 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9379 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 937B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 937D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 937F 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9382 18 09            jr 6F
  64+ 9384 CB 5F        1 bit 3,a
  65+ 9386 28 0A            jr z,2F
  66+ 9388 E6 F7            and $f7
  67+ 938A 32 F0 88         ld (Ctrl_0),a
  68+ 938D CD E0 94     6 call Inicializacion
  69+ 9390 18 5B            jr 5F
  70+ 9392 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9393
  72+ 9393              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9393              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9393
  75+ 9393 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9394 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9397 CD 42 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 939A 67           	ld h,a
  79+ 939B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 939C CD 42 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 939F 67           	ld h,a
  82+ 93A0 A7           	and a
  83+ 93A1 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93A3 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93A4 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93A7 FE 02        	cp 2
  87+ 93A9 38 1E        	jr c,3F
  88+ 93AB 28 1C        	jr z,3F
  89+ 93AD 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93AE 28 23            jr z,7F
  91+ 93B0 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93B2 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93B4 E1           	pop hl
  94+ 93B5
  95+ 93B5              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93B5              ; _para indicar con E="2" en caso necesario.
  97+ 93B5
  98+ 93B5 E5               push hl
  99+ 93B6 C5               push bc
 100+ 93B7 CD 42 99     	call calcula_tercio
 101+ 93BA FE 01        	cp 1
 102+ 93BC 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93BE CD EE 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93C1 28 26            jr z,9F
 105+ 93C3 38 24            jr c,9F
 106+ 93C5 1E 00        11 ld e,0
 107+ 93C7 18 22            jr 8F
 108+ 93C9 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93CA 28 07        	jr z, 7F
 110+ 93CC 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93CE 1E 00         	ld e,0
 112+ 93D0 E1           	pop hl
 113+ 93D1 18 04        	jr 4F
 114+ 93D3 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93D5 18 15            jr 10F
 116+ 93D7
 117+ 93D7              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93D7              ; _para indicar con E="2" en caso necesario.
 119+ 93D7
 120+ 93D7 E5           4 push hl
 121+ 93D8 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93D9 CD 42 99     	call calcula_tercio
 123+ 93DC FE 01        	cp 1
 124+ 93DE 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93E0 CD EE 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93E3 28 04            jr z,9F
 127+ 93E5 30 02            jr nc,9F
 128+ 93E7 18 02        	jr 8F
 129+ 93E9 1E 02        9 ld e,2
 130+ 93EB C1           8 pop bc
 131+ 93EC E1           10 pop hl
 132+ 93ED C9           5 ret
 133+ 93EE
 134+ 93EE              ; --------------------
 135+ 93EE              ;
 136+ 93EE              ; 25/08/22
 137+ 93EE
 138+ 93EE CD 42 99     Comprueba_centro call calcula_tercio
 139+ 93F1 67               ld h,a
 140+ 93F2 08           	ex af,af
 141+ 93F3 FE 02        	cp 2
 142+ 93F5 38 07        	jr c,1F
 143+ 93F7 28 05        	jr z,1F
 144+ 93F9 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93FC 18 03        	jr 2F
 146+ 93FE 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9401 08           2 ex af,af
 148+ 9402 A7               and a
 149+ 9403 ED 42            sbc hl,bc
 150+ 9405 C9               ret
 151+ 9406
 152+ 9406              ; *********************************************************************************************************************************************************************************************
 153+ 9406              ;
 154+ 9406              ;   16/8/22
 155+ 9406              ;
 156+ 9406              ;	Comprueba_limite_vertical
 157+ 9406              ;
 158+ 9406              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9406              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9406              ;
 161+ 9406
 162+ 9406 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9409 7D           	ld a,l
 164+ 940A E6 1F        	and $1F
 165+ 940C 57           	ld d,a
 166+ 940D 3A 00 89     	ld a,(Limite_vertical)
 167+ 9410 BA           	cp d 											; Límite - Posición.
 168+ 9411 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9412 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9415 CB 47        	bit 0,a
 171+ 9417 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9419
 173+ 9419              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9419
 175+ 9419 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 941A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 941C
 178+ 941C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 941C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 941C
 181+ 941C 3A CC 88         ld a,(Coordenada_X)
 182+ 941F 16 0F            ld d,Centro_izquierda
 183+ 9421 A7               and a
 184+ 9422 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9423 28 1E            jr z,3F
 186+ 9425 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9427              ;                                                    ; _salimos sin modificar nada.
 188+ 9427 18 0E            jr 2F
 189+ 9429 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 942A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 942C
 192+ 942C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 942C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 942C
 195+ 942C 3A CC 88         ld a,(Coordenada_X)
 196+ 942F 16 10            ld d,Centro_derecha
 197+ 9431 A7               and a
 198+ 9432 92               sub d
 199+ 9433 28 0E            jr z,3F
 200+ 9435 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9437              ;                                                    ; _salimos sin modificar nada.
 202+ 9437 CB 43        2 bit 0,e
 203+ 9439 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 943B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 943C CD D0 94         call Modificaccionne
 206+ 943F C1           	pop bc
 207+ 9440 CD E0 94         call Inicializacion
 208+ 9443 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9444
 210+ 9444              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9444
 212+ 9444 C5           4 push bc
 213+ 9445 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9448 0A           	ld a,(bc)
 215+ 9449 3D           	dec a
 216+ 944A 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 944B 7D           	ld a,l
 218+ 944C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 944D CB 47        	bit 0,a
 220+ 944F 28 03        	jr z,5F
 221+ 9451 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9452 18 2E        	jr 7F
 223+ 9454
 224+ 9454              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9454
 226+ 9454 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9455 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9456 3A F0 88     	ld a,(Ctrl_0)
 229+ 9459 CB 4F        	bit 1,a
 230+ 945B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 945D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 945E
 233+ 945E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 945E
 235+ 945E 1C               inc e
 236+ 945F 1D               dec e
 237+ 9460 20 07            jr nz,12F
 238+ 9462 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9463 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9464 22 C8 88     	ld (Posicion_actual),hl
 241+ 9467 18 44        13 jr 9F
 242+ 9469 CB 43        12 bit 0,e
 243+ 946B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 946D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 946D C1           	pop bc
 246+ 946E 18 D3        	jr 3B
 247+ 9470 80           14 add b
 248+ 9471 6F               ld l,a
 249+ 9472 22 C8 88     	ld (Posicion_actual),hl
 250+ 9475 CD D0 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9478 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 947A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 947C 32 F0 88         ld (Ctrl_0),a
 254+ 947F F1           	pop af
 255+ 9480 18 2B        	jr 9F
 256+ 9482
 257+ 9482              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9482
 259+ 9482 F5           7 push af
 260+ 9483 3A F0 88     	ld a,(Ctrl_0)
 261+ 9486 CB 47        	bit 0,a
 262+ 9488 20 1D        	jr nz,8F
 263+ 948A F1           	pop af
 264+ 948B
 265+ 948B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 948B
 267+ 948B 1C           	inc e
 268+ 948C 1D               dec e
 269+ 948D 20 07            jr nz,10F
 270+ 948F 90           	sub b
 271+ 9490 6F               ld l,a
 272+ 9491 22 C8 88     	ld (Posicion_actual),hl
 273+ 9494 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9496              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9496 CB 43        10 bit 0,e
 276+ 9498 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 949A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 949A C1           	pop bc
 279+ 949B 18 A6        	jr 3B
 280+ 949D 90           16 sub b
 281+ 949E 6F               ld l,a
 282+ 949F 22 C8 88     	ld (Posicion_actual),hl
 283+ 94A2 CD D0 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94A5 18 06            jr 9F
 285+ 94A7 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94A9 32 F0 88         ld (Ctrl_0),a
 287+ 94AC F1           	pop af
 288+ 94AD C1           9 pop bc
 289+ 94AE 1E 00        	ld e,0
 290+ 94B0 CD E0 94         call Inicializacion
 291+ 94B3 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94B4 08           	ex af,af
 293+ 94B5 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94B6 18 8B            jr 3B
 295+ 94B8
 296+ 94B8              ; --------------------
 297+ 94B8
 298+ 94B8 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94BA CD 3E 96     1 call PreviousScan
 300+ 94BD 10 FB            djnz 1B
 301+ 94BF 22 C8 88     	ld (Posicion_actual),hl
 302+ 94C2 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94C3 C9           	ret
 304+ 94C4
 305+ 94C4              ; --------------------
 306+ 94C4
 307+ 94C4 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94C6 CD 2F 96     1 call NextScan
 309+ 94C9 10 FB            djnz 1B
 310+ 94CB 22 C8 88     	ld (Posicion_actual),hl
 311+ 94CE AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94CF C9           	ret
 313+ 94D0
 314+ 94D0              ; --------------------
 315+ 94D0              ;
 316+ 94D0              ;	22/01/23
 317+ 94D0              ;
 318+ 94D0              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94D0              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94D0              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94D0
 322+ 94D0
 323+ 94D0              Modificaccionne
 324+ 94D0
 325+ 94D0 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94D3 FE 02        	cp 2
 327+ 94D5 CC B8 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94D8 DC B8 94         call c,Modifica_Pos_actual
 329+ 94DB C8           	ret z
 330+ 94DC CD C4 94         call Modifica_Pos_actual2
 331+ 94DF C9               ret
 332+ 94E0
 333+ 94E0              ; *************************************************************************************************************************************************************************************************
 334+ 94E0              ;
 335+ 94E0              ;	13/8/22
 336+ 94E0              ;
 337+ 94E0              ;	Inicializacion
 338+ 94E0              ;
 339+ 94E0              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94E0              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94E0              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94E0              ;
 343+ 94E0              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94E0              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94E0              ;	_ desaparece/aparece.
 346+ 94E0
 347+ 94E0              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94E0              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94E0              ;
 350+ 94E0              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94E0              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94E0              ; 		   [E] ="0"
 353+ 94E0
 354+ 94E0              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94E0
 356+ 94E0 CD 42 99     Inicializacion call calcula_tercio
 357+ 94E3 28 36        	jr z,primit
 358+ 94E5 E6 02        	and 2
 359+ 94E7 20 07        	jr nz,segmit
 360+ 94E9 7D           	ld a,l
 361+ 94EA FE 7F        	cp $7f
 362+ 94EC 38 2D        	jr c,primit
 363+ 94EE 28 2B        	jr z,primit
 364+ 94F0 CD 4D 95     segmit call column
 365+ 94F3 38 13        	jr c,tercuad
 366+ 94F5 3E 04        cuarcuad ld a,4
 367+ 94F7 32 DA 88     	ld (Cuad_objeto),a
 368+ 94FA 21 20 48     	ld hl,$4820
 369+ 94FD 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9500 21 00 89     	ld hl,Limite_vertical
 371+ 9503 36 0D        	ld (hl),$0d
 372+ 9505 08           	ex af,af
 373+ 9506 18 3C        	jr 1F
 374+ 9508              tercuad
 375+ 9508 3E 03        	ld a,3
 376+ 950A 32 DA 88     	ld (Cuad_objeto),a
 377+ 950D 21 20 48     	ld hl,$4820
 378+ 9510 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9513 21 00 89     	ld hl,Limite_vertical
 380+ 9516 36 12        	ld (hl),$12
 381+ 9518 08           	ex af,af
 382+ 9519 18 29        	jr 1F
 383+ 951B CD 4D 95     primit call column
 384+ 951E 38 13        	jr c, primcuad
 385+ 9520              segcuad
 386+ 9520 3E 02        	ld a,2
 387+ 9522 32 DA 88     	ld (Cuad_objeto),a
 388+ 9525 21 C0 4F     	ld hl,$4fc0
 389+ 9528 22 FE 88     	ld (Limite_horizontal),hl
 390+ 952B 21 00 89     	ld hl,Limite_vertical
 391+ 952E 36 0D        	ld (hl),$0d
 392+ 9530 08           	ex af,af
 393+ 9531 18 11        	jr 1F
 394+ 9533              primcuad
 395+ 9533 3E 01        	ld a,1
 396+ 9535 32 DA 88     	ld (Cuad_objeto),a
 397+ 9538 21 C0 4F     	ld hl,$4fc0
 398+ 953B 22 FE 88     	ld (Limite_horizontal),hl
 399+ 953E 21 00 89     	ld hl,Limite_vertical
 400+ 9541 36 12        	ld (hl),$12
 401+ 9543 08           	ex af,af
 402+ 9544 CD CD 9C     1 call Genera_coordenadas
 403+ 9547 21 F0 88     	ld hl,Ctrl_0
 404+ 954A CB EE        	set 5,(hl)
 405+ 954C C9           	ret
 406+ 954D
 407+ 954D              ; ------------------------------------------------------------------------------------------------------------------
 408+ 954D
 409+ 954D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 954D              ;
 411+ 954D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 954D
 413+ 954D 7D           column ld a,l
 414+ 954E E6 1F        	and $1f
 415+ 9550 FE 10         	cp $10
 416+ 9552 C9            	ret
 417+ 9553
 418+ 9553              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9553              ;
 420+ 9553              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9553              ;
 422+ 9553              ; 14/12/22
 423+ 9553              ;
 424+ 9553              ;	Modifica: A y BC.
 425+ 9553
 426+ 9553 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9556 E6 01        	and 1
 428+ 9558 28 17        	jr z,1F
 429+ 955A
 430+ 955A              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 955A
 432+ 955A 3A CC 88     	ld a,(Coordenada_X)
 433+ 955D 47           	ld b,a
 434+ 955E 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 955F 79           	ld a,c
 436+ 9560 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9561 38 08        	jr c,2F
 438+ 9563 47           	ld b,a
 439+ 9564 79           	ld a,c
 440+ 9565 90           	sub b
 441+ 9566 32 FD 88     	ld (Columnas),a
 442+ 9569 18 1B        	jr 4F
 443+ 956B 79           2 ld a,c
 444+ 956C 32 FD 88     	ld (Columnas),a
 445+ 956F 18 15        	jr 4F
 446+ 9571
 447+ 9571              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9571
 449+ 9571 3A CC 88     1 ld a,(Coordenada_X)
 450+ 9574 81           	add c
 451+ 9575 3D           	dec a
 452+ 9576 D6 1F        	sub $1f
 453+ 9578 38 08        	jr c,3F
 454+ 957A 47           	ld b,a
 455+ 957B 79           	ld a,c
 456+ 957C 90           	sub b
 457+ 957D 32 FD 88     	ld (Columnas),a
 458+ 9580 18 04        	jr 4F
 459+ 9582 79           3 ld a,c
 460+ 9583 32 FD 88     	ld (Columnas),a
 461+ 9586 D9           4 exx
 462+ 9587 4F           	ld c,a
 463+ 9588 D9           	exx
 464+ 9589 C9            ret
 465+ 958A
 466+ 958A              ; --------------------------------------------------------------------------------------------------------------------
 467+ 958A              ;
 468+ 958A              ;   19/7/23
 469+ 958A              ;
 470+ 958A              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 958A              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 958A              ;
 473+ 958A              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 958A              ;			HL e IY Contienen (Puntero_objeto).
 475+ 958A              ;
 476+ 958A              ;	DESTRUYE: HL,B Y A.
 477+ 958A
 478+ 958A 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 958D FE 02        	cp 2
 480+ 958F 38 18        	jr c,1F
 481+ 9591 28 16        	jr z,1F
 482+ 9593 E6 01        	and 1
 483+ 9595 28 0D        	jr z,3F
 484+ 9597
 485+ 9597              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9597
 487+ 9597 CD DD 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 959A
 489+ 959A 7D           9 ld a,l
 490+ 959B E6 1F        	and $1f
 491+ 959D 28 2A        	jr z,7F
 492+ 959F 2B           	dec hl
 493+ 95A0 10 F8        	djnz 9B
 494+ 95A2 18 25        	jr 7F
 495+ 95A4
 496+ 95A4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95A4
 498+ 95A4 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95A7 18 20        	jr 7F
 500+ 95A9
 501+ 95A9 28 14        1 jr z,2F
 502+ 95AB
 503+ 95AB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95AB
 505+ 95AB CD DD 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95AE
 507+ 95AE 7D           4 ld a,l
 508+ 95AF E6 1F        	and $1f
 509+ 95B1 28 03        	jr z,6F
 510+ 95B3 2B           	dec hl
 511+ 95B4 10 F8        	djnz 4B
 512+ 95B6 06 0F        6 ld b,15
 513+ 95B8 CD 3E 96     5 call PreviousScan
 514+ 95BB 10 FB        	djnz 5B
 515+ 95BD 18 0A        	jr 7F
 516+ 95BF
 517+ 95BF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95BF
 519+ 95BF CD DD 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95C2 06 0F        	ld b,15
 521+ 95C4 CD 3E 96     8 call PreviousScan
 522+ 95C7 10 FB        	djnz 8B
 523+ 95C9
 524+ 95C9 E5           7 push hl
 525+ 95CA DD E1        	pop ix
 526+ 95CC
 527+ 95CC 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95CF E5           	push hl
 529+ 95D0 FD E1        	pop iy
 530+ 95D2
 531+ 95D2              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95D2
 533+ 95D2 3A F0 88     	ld a,(Ctrl_0)
 534+ 95D5 CB 77        	bit 6,a
 535+ 95D7 C8           	ret z
 536+ 95D8
 537+ 95D8              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95D8              ; _ entidad / Amadeus´.
 539+ 95D8
 540+ 95D8 DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95DC
 542+ 95DC C9           	ret
 543+ 95DD
 544+ 95DD              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95DD              ;
 546+ 95DD              ;	2/1/23
 547+ 95DD              ;
 548+ 95DD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95DD              ;
 550+ 95DD              ;	Tras esta rutina tenemos:
 551+ 95DD              ;
 552+ 95DD              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95DD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95DD              ;
 555+ 95DD              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95DD
 557+ 95DD 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95E0 3A FD 88     	ld a,(Columnas)
 559+ 95E3 3D           	dec a
 560+ 95E4 20 01        	jr nz,1F
 561+ 95E6 3C           	inc a
 562+ 95E7 47           1 ld b,a
 563+ 95E8 C9           	ret
 564+ 95E9
 565+ 95E9              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95E9              ;
 567+ 95E9              ;	3/1/23
 568+ 95E9              ;
 569+ 95E9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95E9              ;
 571+ 95E9              ;	Destruye: A,B,HL y DE.
 572+ 95E9
 573+ 95E9              Define_rutina_de_impresion
 574+ 95E9
 575+ 95E9 3A C7 88     	ld a,(Columns)
 576+ 95EC 47           	ld b,a
 577+ 95ED 3A FD 88     	ld a,(Columnas)
 578+ 95F0 B8           	cp b
 579+ 95F1 20 0D        	jr nz,2f
 580+ 95F3
 581+ 95F3              ;	La entidad se imprime entera.
 582+ 95F3
 583+ 95F3 21 12 97     	ld hl, Indice_entidades_completas
 584+ 95F6 E6 01        	and 1
 585+ 95F8 28 02        	jr z,1F
 586+ 95FA
 587+ 95FA 23           	inc hl
 588+ 95FB 23           	inc hl
 589+ 95FC
 590+ 95FC CD 82 8C     1 call Extrae_address
 591+ 95FF C9           	ret		;	ret
 592+ 9600
 593+ 9600              ;	La entidad no se imprime entera en pantalla.
 594+ 9600
 595+ 9600 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 9603 E6 01        	and 1
 597+ 9605 28 17        	jr z,3F
 598+ 9607
 599+ 9607              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9607
 601+ 9607 21 16 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 960A 3A C7 88     4 ld a,(Columns)
 603+ 960D E6 01        	and 1
 604+ 960F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9611
 606+ 9611 23           	inc hl
 607+ 9612 23           	inc hl
 608+ 9613
 609+ 9613 3A FD 88     	ld a,(Columnas)
 610+ 9616 E6 01        	and 1
 611+ 9618 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 961A
 613+ 961A 23           	inc hl
 614+ 961B 23           	inc hl
 615+ 961C
 616+ 961C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 961E
 618+ 961E 21 1C 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9621 18 E7        	jr 4B
 620+ 9623
 621+ 9623              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9623              ;
 623+ 9623              ;	Prepara_draw
 624+ 9623              ;
 625+ 9623              ;	Es una rutina de carga.
 626+ 9623              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9623              ;
 628+ 9623              ;	FUNCIONAMIENTO:
 629+ 9623              ;
 630+ 9623              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9623              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9623              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9623              ;
 634+ 9623              ;	DESTRUYE:
 635+ 9623              ;
 636+ 9623              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9623
 638+ 9623 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9626 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9627 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9628 4E           	ld c,(hl)
 642+ 9629 2A C8 88     	ld hl,(Posicion_actual)
 643+ 962C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 962E C9           	ret
 645+ 962F
 646+ 962F              ;----------------------------------------------------------------------------------------------------------------
 647+ 962F              ;
 648+ 962F              ;	5/08/22
 649+ 962F              ;
 650+ 962F              ;   NextScan.
 651+ 962F              ;
 652+ 962F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 962F              ;
 654+ 962F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 962F              ;
 656+ 962F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 962F              ;
 658+ 962F              ;       DESTRUIDOS: AF y HL !!!
 659+ 962F              ;
 660+ 962F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 962F              ;
 662+ 962F
 663+ 962F 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9630 7C               ld a,h
 665+ 9631 E6 07            and 7
 666+ 9633 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9634
 668+ 9634 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9635 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9637 6F               ld l,a
 671+ 9638 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9639
 673+ 9639 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 963A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 963C 67               ld h,a
 676+ 963D C9               ret
 677+ 963E
 678+ 963E              ;----------------------------------------------------------------------------------------------------------------
 679+ 963E              ;
 680+ 963E              ;	5/08/22
 681+ 963E              ;
 682+ 963E              ;   PreviousScan.
 683+ 963E              ;
 684+ 963E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 963E              ;
 686+ 963E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 963E              ;
 688+ 963E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 963E              ;
 690+ 963E              ;       DESTRUIDOS: AF y HL !!!
 691+ 963E              ;
 692+ 963E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 963E              ;
 694+ 963E
 695+ 963E 7C           PreviousScan ld a,h
 696+ 963F 25               dec h               ; Dec H.
 697+ 9640 E6 07            and 7
 698+ 9642 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9643
 700+ 9643 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9644 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9646 6F               ld l,a
 703+ 9647 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9648
 705+ 9648 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9649 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 964B 67               ld h,a
 708+ 964C C9               ret
 709+ 964D
 710+ 964D              ; -----------------------------------------------------------------------------------
 711+ 964D              ;
 712+ 964D              ;	31/7/23
 713+ 964D              ;
 714+ 964D              ;	Rutina principal de pintado de entidades.
 715+ 964D              ;	Extrae la foto del frame, (entidades).
 716+ 964D
 717+ 964D              Extrae_foto_entidades
 718+ 964D
 719+ 964D 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9650 7E           	ld a,(hl)
 721+ 9651 A7           	and a
 722+ 9652 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9653
 724+ 9653              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9653
 726+ 9653 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9656 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9657 C8           	ret z
 729+ 9658
 730+ 9658              ; -----------------------------------
 731+ 9658
 732+ 9658 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 965C 31 00 70     	ld sp,Album_de_fotos
 734+ 965F
 735+ 965F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9661 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9662 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9663
 739+ 9663 ED 73 16 89  	ld (Stack_2),sp
 740+ 9667 ED 7B 14 89  	ld sp,(Stack)
 741+ 966B
 742+ 966B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 966B
 744+ 966B 3E CD        	ld a,$cd
 745+ 966D 32 75 96     	ld (Imprime),a
 746+ 9670 EB           	ex de,hl
 747+ 9671 22 76 96     	ld (Imprime+1),hl
 748+ 9674 EB           	ex de,hl
 749+ 9675
 750+ 9675              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9675
 752+ 9675 00 00 00     Imprime db 0,0,0
 753+ 9678
 754+ 9678 ED 73 14 89  	ld (Stack),sp
 755+ 967C
 756+ 967C 3A 0F 89     	ld a,(Numero_de_malotes)
 757+ 967F 3D           	dec a
 758+ 9680 28 09        	jr z,1F
 759+ 9682 32 0F 89      	ld (Numero_de_malotes),a
 760+ 9685
 761+ 9685 ED 7B 16 89  	ld sp,(Stack_2)
 762+ 9689 18 D4        	jr 2B
 763+ 968B
 764+ 968B AF           1 xor a
 765+ 968C 32 16 89     	ld (Stack_2),a
 766+ 968F
 767+ 968F C9           	ret
 768+ 9690
 769+ 9690              ; -----------------------------------------------------------------------------------
 770+ 9690              ;
 771+ 9690              ;	28/2/23
 772+ 9690              ;
 773+ 9690              ;	Pinta los disparos generados.
 774+ 9690
 775+ 9690              Extrae_foto_disparos
 776+ 9690
 777+ 9690 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9693 7E               ld a,(hl)
 779+ 9694 A7               and a
 780+ 9695 C8               ret z
 781+ 9696
 782+ 9696 3A 3D 89     	ld a,(Numero_de_disparotes)
 783+ 9699 A7           	and a
 784+ 969A C8           	ret z
 785+ 969B ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 969F 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 96A2
 788+ 96A2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 96A4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 96A5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 96A6
 792+ 96A6 ED 73 16 89  	ld (Stack_2),sp
 793+ 96AA ED 7B 14 89  	ld sp,(Stack)
 794+ 96AE
 795+ 96AE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96AE
 797+ 96AE 3E CD        	ld a,$cd
 798+ 96B0 32 B8 96     	ld (Imprime2),a
 799+ 96B3 EB           	ex de,hl
 800+ 96B4 22 B9 96     	ld (Imprime2+1),hl
 801+ 96B7 EB           	ex de,hl
 802+ 96B8
 803+ 96B8              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96B8
 805+ 96B8 00 00 00     Imprime2 db 0,0,0
 806+ 96BB
 807+ 96BB 3A 3D 89     	ld a,(Numero_de_disparotes)
 808+ 96BE 3D           	dec a
 809+ 96BF 28 09        	jr z,1F
 810+ 96C1 32 3D 89      	ld (Numero_de_disparotes),a
 811+ 96C4
 812+ 96C4 ED 7B 16 89  	ld sp,(Stack_2)
 813+ 96C8 18 D8        	jr 2B
 814+ 96CA
 815+ 96CA AF           1 xor a
 816+ 96CB 32 16 89     	ld (Stack_2),a
 817+ 96CE C9           	ret
 818+ 96CF
 819+ 96CF              ; -----------------------------------------------------------------------------------
 820+ 96CF              ;
 821+ 96CF              ;	4/9/23
 822+ 96CF              ;
 823+ 96CF              ;	Rutina principal de pintado de Amadeus.
 824+ 96CF              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96CF
 826+ 96CF 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96D2 7E           	ld a,(hl)
 828+ 96D3 A7           	and a
 829+ 96D4 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96D5
 831+ 96D5 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96D8 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96D9 C8           	ret z
 834+ 96DA
 835+ 96DA              ; -----------------------------------
 836+ 96DA
 837+ 96DA ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96DE 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96E1
 840+ 96E1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96E3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96E4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96E5
 844+ 96E5 ED 73 16 89  	ld (Stack_2),sp
 845+ 96E9 ED 7B 14 89  	ld sp,(Stack)
 846+ 96ED
 847+ 96ED              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96ED
 849+ 96ED 3E CD        	ld a,$cd
 850+ 96EF 32 F7 96     	ld (Imprime_Amadeus),a
 851+ 96F2 EB           	ex de,hl
 852+ 96F3 22 F8 96     	ld (Imprime_Amadeus+1),hl
 853+ 96F6 EB           	ex de,hl
 854+ 96F7
 855+ 96F7              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96F7
 857+ 96F7 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96FA
 859+ 96FA ED 73 14 89  	ld (Stack),sp
 860+ 96FE
 861+ 96FE 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 9701 3D           	dec a
 863+ 9702 28 09        	jr z,1F
 864+ 9704 32 0F 89      	ld (Numero_de_malotes),a
 865+ 9707
 866+ 9707 ED 7B 16 89  	ld sp,(Stack_2)
 867+ 970B 18 D4        	jr 2B
 868+ 970D
 869+ 970D AF           1 xor a
 870+ 970E 32 16 89     	ld (Stack_2),a
 871+ 9711
 872+ 9711 C9           	ret
# file closed: Draw_XOR.asm
1646  9712              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9712              ;   índices de Rutinas de impresión.
   2+ 9712
   3+ 9712 22 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9714 4F 97            defw Pinta_Amadeus_3x2
   5+ 9716
   6+ 9716 A5 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9718 45 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 971A F9 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 971C
  10+ 971C CF 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 971E D3 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9720 87 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9722
  14+ 9722
  15+ 9722              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9722              ;
  17+ 9722              ;   12/12/22
  18+ 9722              ;
  19+ 9722              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9722              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9722              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9722              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9722              ;
  24+ 9722              ;   Modifica: DE y HL.
  25+ 9722
  26+ 9722 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9726 FD F9        	ld sp,iy
  28+ 9728 06 10            ld b,16
  29+ 972A D1           1 pop de
  30+ 972B 7B               ld a,e
  31+ 972C AE               xor (hl)
  32+ 972D 77           	ld (hl),a
  33+ 972E 23           	inc hl
  34+ 972F 7A               ld a,d
  35+ 9730 AE               xor (hl)
  36+ 9731 77           	ld (hl),a
  37+ 9732 2B           	dec hl
  38+ 9733 24           	inc h
  39+ 9734 7C               ld a,h
  40+ 9735 E6 07            and 7
  41+ 9737 20 0A            jr nz,2F
  42+ 9739 7D               ld a,l
  43+ 973A C6 20            add a,$20
  44+ 973C 6F               ld l,a
  45+ 973D 38 04            jr c,2F
  46+ 973F 7C               ld a,h
  47+ 9740 D6 08            sub 8
  48+ 9742 67               ld h,a
  49+ 9743 7C           2 ld a,h
  50+ 9744 FE 58            cp $58
  51+ 9746 28 02            jr z,3F
  52+ 9748 10 E0            djnz 1B
  53+ 974A ED 7B 14 89  3 ld sp,(Stack)
  54+ 974E C9           	ret
  55+ 974F
  56+ 974F ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9753 FD F9        	ld sp,iy
  58+ 9755 06 08            ld b,8
  59+ 9757 D1           1 pop de
  60+ 9758 7B               ld a,e
  61+ 9759 AE               xor (hl)
  62+ 975A 77           	ld (hl),a
  63+ 975B 23           	inc hl
  64+ 975C 7A               ld a,d
  65+ 975D AE               xor (hl)
  66+ 975E 77           	ld (hl),a
  67+ 975F 23           	inc hl
  68+ 9760 D1           	pop de
  69+ 9761 7B               ld a,e
  70+ 9762 AE               xor (hl)
  71+ 9763 77           	ld (hl),a
  72+ 9764 2B           	dec hl
  73+ 9765 2B           	dec hl
  74+ 9766 24           	inc h
  75+ 9767 7C               ld a,h
  76+ 9768 E6 07            and 7
  77+ 976A 20 0A            jr nz,2F
  78+ 976C 7D               ld a,l
  79+ 976D C6 20            add a,$20
  80+ 976F 6F               ld l,a
  81+ 9770 38 04            jr c,2F
  82+ 9772 7C               ld a,h
  83+ 9773 D6 08            sub 8
  84+ 9775 67               ld h,a
  85+ 9776 7C           2 ld a,h
  86+ 9777 FE 58            cp $58
  87+ 9779 28 25            jr z,4F
  88+ 977B 7A               ld a,d
  89+ 977C AE               xor (hl)
  90+ 977D 77               ld (hl),a
  91+ 977E D1           	pop de
  92+ 977F 23           	inc hl
  93+ 9780 7B               ld a,e
  94+ 9781 AE               xor (hl)
  95+ 9782 77           	ld (hl),a
  96+ 9783 23           	inc hl
  97+ 9784 7A               ld a,d
  98+ 9785 AE               xor (hl)
  99+ 9786 77           	ld (hl),a
 100+ 9787 2B           	dec hl
 101+ 9788 2B           	dec hl
 102+ 9789 24           	inc h
 103+ 978A 7C               ld a,h
 104+ 978B E6 07            and 7
 105+ 978D 20 0A            jr nz,3F
 106+ 978F 7D               ld a,l
 107+ 9790 C6 20            add a,$20
 108+ 9792 6F               ld l,a
 109+ 9793 38 04            jr c,3F
 110+ 9795 7C               ld a,h
 111+ 9796 D6 08            sub 8
 112+ 9798 67               ld h,a
 113+ 9799 7C           3 ld a,h
 114+ 979A FE 58            cp $58
 115+ 979C 28 02            jr z,4F
 116+ 979E 10 B7            djnz 1B
 117+ 97A0 ED 7B 14 89  4 ld sp,(Stack)
 118+ 97A4 C9           	ret
 119+ 97A5
 120+ 97A5              ; ---------------------------------------------------
 121+ 97A5
 122+ 97A5 ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97A9 FD F9        	ld sp,iy
 124+ 97AB
 125+ 97AB              ; >>>
 126+ 97AB
 127+ 97AB 06 10            ld b,16
 128+ 97AD D1           1 pop de
 129+ 97AE 7A           	ld a,d
 130+ 97AF AE           	xor (hl)
 131+ 97B0 77           	ld (hl),a
 132+ 97B1 24           	inc h
 133+ 97B2 7C               ld a,h
 134+ 97B3 E6 07            and 7
 135+ 97B5 20 0C            jr nz,2F
 136+ 97B7 7D               ld a,l
 137+ 97B8 C6 20            add a,$20
 138+ 97BA 6F               ld l,a
 139+ 97BB 38 06            jr c,2F
 140+ 97BD 7C               ld a,h
 141+ 97BE D6 08            sub 8
 142+ 97C0 67               ld h,a
 143+ 97C1 18 00            jr 2F
 144+ 97C3 7C           2 ld a,h
 145+ 97C4 FE 58            cp $58
 146+ 97C6 28 02            jr z,3F
 147+ 97C8 10 E3            djnz 1B
 148+ 97CA ED 7B 14 89  3 ld sp,(Stack)
 149+ 97CE C9           	ret
 150+ 97CF
 151+ 97CF ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97D3 FD F9        	ld sp,iy
 153+ 97D5
 154+ 97D5              ; >>>
 155+ 97D5
 156+ 97D5 06 10            ld b,16
 157+ 97D7 D1           1 pop de
 158+ 97D8 7B           	ld a,e
 159+ 97D9 AE           	xor (hl)
 160+ 97DA 77           	ld (hl),a
 161+ 97DB 24           	inc h
 162+ 97DC 7C               ld a,h
 163+ 97DD E6 07            and 7
 164+ 97DF 20 0C            jr nz,2F
 165+ 97E1 7D               ld a,l
 166+ 97E2 C6 20            add a,$20
 167+ 97E4 6F               ld l,a
 168+ 97E5 38 06            jr c,2F
 169+ 97E7 7C               ld a,h
 170+ 97E8 D6 08            sub 8
 171+ 97EA 67               ld h,a
 172+ 97EB 18 00            jr 2F
 173+ 97ED 7C           2 ld a,h
 174+ 97EE FE 58            cp $58
 175+ 97F0 28 02            jr z,3F
 176+ 97F2 10 E3            djnz 1B
 177+ 97F4 ED 7B 14 89  3 ld sp,(Stack)
 178+ 97F8 C9           	ret
 179+ 97F9
 180+ 97F9              ; ---------------------------------------------------
 181+ 97F9
 182+ 97F9 ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97FD FD F9        	ld sp,iy
 184+ 97FF 06 08            ld b,8
 185+ 9801 D1           1 pop de
 186+ 9802 7A           	ld a,d
 187+ 9803 AE           	xor (hl)
 188+ 9804 77           	ld (hl),a
 189+ 9805 23           	inc hl
 190+ 9806 D1           	pop de
 191+ 9807 7B           	ld a,e
 192+ 9808 AE           	xor (hl)
 193+ 9809 77           	ld (hl),a
 194+ 980A 2B           	dec hl
 195+ 980B 24            	inc h
 196+ 980C 7C               ld a,h
 197+ 980D E6 07            and 7
 198+ 980F 20 0A            jr nz,2F
 199+ 9811 7D               ld a,l
 200+ 9812 C6 20            add a,$20
 201+ 9814 6F               ld l,a
 202+ 9815 38 04            jr c,2F
 203+ 9817 7C               ld a,h
 204+ 9818 D6 08            sub 8
 205+ 981A 67               ld h,a
 206+ 981B 7C           2 ld a,h
 207+ 981C FE 58            cp $58
 208+ 981E 28 20            jr z,4F
 209+ 9820 D1               pop de
 210+ 9821 7B           	ld a,e
 211+ 9822 AE           	xor (hl)
 212+ 9823 77           	ld (hl),a
 213+ 9824 23           	inc hl
 214+ 9825 7A           	ld a,d
 215+ 9826 AE           	xor (hl)
 216+ 9827 77           	ld (hl),a
 217+ 9828 2B           	dec hl
 218+ 9829 24           	inc h
 219+ 982A 7C               ld a,h
 220+ 982B E6 07            and 7
 221+ 982D 20 0A            jr nz,3F
 222+ 982F 7D               ld a,l
 223+ 9830 C6 20            add a,$20
 224+ 9832 6F               ld l,a
 225+ 9833 38 04            jr c,3F
 226+ 9835 7C               ld a,h
 227+ 9836 D6 08            sub 8
 228+ 9838 67               ld h,a
 229+ 9839 7C           3 ld a,h
 230+ 983A FE 58            cp $58
 231+ 983C 28 02            jr z,4F
 232+ 983E 10 C1            djnz 1B
 233+ 9840 ED 7B 14 89  4 ld sp,(Stack)
 234+ 9844 C9           	ret
 235+ 9845
 236+ 9845 ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9849 FD F9        	ld sp,iy
 238+ 984B 06 08            ld b,8
 239+ 984D D1           1 pop de
 240+ 984E D1           	pop de
 241+ 984F 7B           	ld a,e
 242+ 9850 AE           	xor (hl)
 243+ 9851 77           	ld (hl),a
 244+ 9852 24            	inc h
 245+ 9853 7C               ld a,h
 246+ 9854 E6 07            and 7
 247+ 9856 20 0A            jr nz,2F
 248+ 9858 7D               ld a,l
 249+ 9859 C6 20            add a,$20
 250+ 985B 6F               ld l,a
 251+ 985C 38 04            jr c,2F
 252+ 985E 7C               ld a,h
 253+ 985F D6 08            sub 8
 254+ 9861 67               ld h,a
 255+ 9862 7C           2 ld a,h
 256+ 9863 FE 58            cp $58
 257+ 9865 28 1B            jr z,4F
 258+ 9867 D1               pop de
 259+ 9868 7A           	ld a,d
 260+ 9869 AE           	xor (hl)
 261+ 986A 77           	ld (hl),a
 262+ 986B 24           	inc h
 263+ 986C 7C               ld a,h
 264+ 986D E6 07            and 7
 265+ 986F 20 0A            jr nz,3F
 266+ 9871 7D               ld a,l
 267+ 9872 C6 20            add a,$20
 268+ 9874 6F               ld l,a
 269+ 9875 38 04            jr c,3F
 270+ 9877 7C               ld a,h
 271+ 9878 D6 08            sub 8
 272+ 987A 67               ld h,a
 273+ 987B 7C           3 ld a,h
 274+ 987C FE 58            cp $58
 275+ 987E 28 02            jr z,4F
 276+ 9880 10 CB            djnz 1B
 277+ 9882 ED 7B 14 89  4 ld sp,(Stack)
 278+ 9886 C9           	ret
 279+ 9887
 280+ 9887 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 988B FD F9        	ld sp,iy
 282+ 988D 06 08            ld b,8
 283+ 988F D1           1 pop de
 284+ 9890 7B           	ld a,e
 285+ 9891 AE           	xor (hl)
 286+ 9892 77           	ld (hl),a
 287+ 9893 23           	inc hl
 288+ 9894 7A           	ld a,d
 289+ 9895 AE           	xor (hl)
 290+ 9896 77           	ld (hl),a
 291+ 9897 2B           	dec hl
 292+ 9898 24             	inc h
 293+ 9899 7C               ld a,h
 294+ 989A E6 07            and 7
 295+ 989C 20 0A            jr nz,2F
 296+ 989E 7D               ld a,l
 297+ 989F C6 20            add a,$20
 298+ 98A1 6F               ld l,a
 299+ 98A2 38 04            jr c,2F
 300+ 98A4 7C               ld a,h
 301+ 98A5 D6 08            sub 8
 302+ 98A7 67               ld h,a
 303+ 98A8 7C           2 ld a,h
 304+ 98A9 FE 58            cp $58
 305+ 98AB 28 21            jr z,4F
 306+ 98AD D1               pop de
 307+ 98AE 7A           	ld a,d
 308+ 98AF AE           	xor (hl)
 309+ 98B0 77           	ld (hl),a
 310+ 98B1 23           	inc hl
 311+ 98B2 D1               pop de
 312+ 98B3 7B           	ld a,e
 313+ 98B4 AE           	xor (hl)
 314+ 98B5 77           	ld (hl),a
 315+ 98B6 2B           	dec hl
 316+ 98B7 24           	inc h
 317+ 98B8 7C               ld a,h
 318+ 98B9 E6 07            and 7
 319+ 98BB 20 0A            jr nz,3F
 320+ 98BD 7D               ld a,l
 321+ 98BE C6 20            add a,$20
 322+ 98C0 6F               ld l,a
 323+ 98C1 38 04            jr c,3F
 324+ 98C3 7C               ld a,h
 325+ 98C4 D6 08            sub 8
 326+ 98C6 67               ld h,a
 327+ 98C7 7C           3 ld a,h
 328+ 98C8 FE 58            cp $58
 329+ 98CA 28 02            jr z,4F
 330+ 98CC 10 C1            djnz 1B
 331+ 98CE ED 7B 14 89  4 ld sp,(Stack)
 332+ 98D2 C9           	ret
 333+ 98D3
 334+ 98D3 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98D7 FD F9        	ld sp,iy
 336+ 98D9 06 08            ld b,8
 337+ 98DB D1           1 pop de
 338+ 98DC 7B           	ld a,e
 339+ 98DD AE           	xor (hl)
 340+ 98DE 77           	ld (hl),a
 341+ 98DF 24            	inc h
 342+ 98E0 7C               ld a,h
 343+ 98E1 E6 07            and 7
 344+ 98E3 20 0A            jr nz,2F
 345+ 98E5 7D               ld a,l
 346+ 98E6 C6 20            add a,$20
 347+ 98E8 6F               ld l,a
 348+ 98E9 38 04            jr c,2F
 349+ 98EB 7C               ld a,h
 350+ 98EC D6 08            sub 8
 351+ 98EE 67               ld h,a
 352+ 98EF 7C           2 ld a,h
 353+ 98F0 FE 58            cp $58
 354+ 98F2 28 1C            jr z,4F
 355+ 98F4 D1               pop de
 356+ 98F5 7A           	ld a,d
 357+ 98F6 AE           	xor (hl)
 358+ 98F7 77           	ld (hl),a
 359+ 98F8 24           	inc h
 360+ 98F9 7C               ld a,h
 361+ 98FA E6 07            and 7
 362+ 98FC 20 0A            jr nz,3F
 363+ 98FE 7D               ld a,l
 364+ 98FF C6 20            add a,$20
 365+ 9901 6F               ld l,a
 366+ 9902 38 04            jr c,3F
 367+ 9904 7C               ld a,h
 368+ 9905 D6 08            sub 8
 369+ 9907 67               ld h,a
 370+ 9908 7C           3 ld a,h
 371+ 9909 FE 58            cp $58
 372+ 990B 28 03            jr z,4F
 373+ 990D D1               pop de
 374+ 990E 10 CB            djnz 1B
 375+ 9910 ED 7B 14 89  4 ld sp,(Stack)
 376+ 9914 C9           	ret
 377+ 9915
 378+ 9915              ; ---------------------------------------------------
 379+ 9915              ;
 380+ 9915              ;   27/02/23
 381+ 9915              ;
 382+ 9915              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9915              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9915              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9915
 386+ 9915 ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 9919 FD F9            ld sp,iy
 388+ 991B 06 03            ld b,3
 389+ 991D D1           1 pop de
 390+ 991E 7B               ld a,e
 391+ 991F AE               xor (hl)
 392+ 9920 77               ld (hl),a
 393+ 9921 23               inc hl
 394+ 9922 7A               ld a,d
 395+ 9923 AE               xor (hl)
 396+ 9924 77               ld (hl),a
 397+ 9925 2B               dec hl
 398+ 9926
 399+ 9926 24               inc h
 400+ 9927 7C               ld a,h
 401+ 9928 E6 07            and 7
 402+ 992A 20 0A            jr nz,2F
 403+ 992C 7D               ld a,l
 404+ 992D C6 20            add a,$20
 405+ 992F 6F               ld l,a
 406+ 9930 38 04            jr c,2F
 407+ 9932 7C               ld a,h
 408+ 9933 D6 08            sub 8
 409+ 9935 67               ld h,a
 410+ 9936 7C           2 ld a,h
 411+ 9937 FE 58            cp $58
 412+ 9939 28 02            jr z,3F
 413+ 993B
 414+ 993B 10 E0            djnz 1B
 415+ 993D ED 7B 14 89  3 ld sp,(Stack)
 416+ 9941 C9               ret
 417+ 9942
# file closed: Rutinas_de_impresion_sprites.asm
1647  9942              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9942              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9942              ;
   3+ 9942              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9942              ;
   5+ 9942              ; *****************************************************************************************************************************************************************************************
   6+ 9942              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9942
   8+ 9942 7C           calcula_tercio ld a,h
   9+ 9943 E6 18        	and $18
  10+ 9945 CB 2F        	sra a
  11+ 9947 CB 2F        	sra a
  12+ 9949 CB 2F        	sra a
  13+ 994B C9           	ret
  14+ 994C
# file closed: calcula_tercio.asm
1648  994C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 994C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 994C              ;
   3+ 994C              ;
   4+ 994C              ;	CLS.
   5+ 994C              ;
   6+ 994C              ;	Limpia la pantalla y define sus atributos.
   7+ 994C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 994C              ;
   9+ 994C              ;	COLORES: 0 ..... NEGRO
  10+ 994C              ;    		 1 ..... AZUL
  11+ 994C              ; 			 2 ..... ROJO
  12+ 994C              ;			 3 ..... MAGENTA
  13+ 994C              ; 			 4 ..... VERDE
  14+ 994C              ; 			 5 ..... CIAN
  15+ 994C              ;			 6 ..... AMARILLO
  16+ 994C              ; 			 7 ..... BLANCO
  17+ 994C              ;
  18+ 994C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 994C              ;
  20+ 994C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 994C
  22+ 994C
  23+ 994C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 994F 11 01 40     	LD DE,$4001
  25+ 9952 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9955 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9957 ED B0        	LDIR
  28+ 9959 01 FF 02     	LD BC,767
  29+ 995C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 995D ED B0        	LDIR
  31+ 995F C9           	ret
  32+ 9960
# file closed: Cls.asm
1649  9960              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9960              ; ******************************************************************************************************************************************************************************************
   2+ 9960              ;
   3+ 9960              ;   20/05/23
   4+ 9960              ;
   5+ 9960              ;	Recompone_posicion_inicio
   6+ 9960              ;
   7+ 9960              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9960              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9960              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9960              ;	_ a una u otra rutina.
  11+ 9960
  12+ 9960              Recompone_posicion_inicio
  13+ 9960
  14+ 9960 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 9963 7D           	ld a,l
  16+ 9964 E6 1F        	and $1f
  17+ 9966 28 16        	jr z,1F
  18+ 9968
  19+ 9968 FE 1F        	cp $1f
  20+ 996A 28 0D        	jr z,3F
  21+ 996C
  22+ 996C 21 01 89     	ld hl,Ctrl_2
  23+ 996F CB C6        	set 0,(hl)
  24+ 9971 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9974 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 9977 18 08        	jr 2F
  27+ 9979
  28+ 9979 CD 1A 9B     3 call Mov_left
  29+ 997C 18 03        	jr 2F
  30+ 997E
  31+ 997E CD FC 99     1 call Mov_right
  32+ 9981 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9984 22 CA 88     	ld (Puntero_objeto),hl
  34+ 9987 C9           	ret
  35+ 9988
  36+ 9988              ; ******************************************************************************************************************************************************************************************
  37+ 9988              ;
  38+ 9988              ;   27/05/23
  39+ 9988              ;
  40+ 9988              ;	Mov_down
  41+ 9988              ;
  42+ 9988              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9988              ;
  44+ 9988              ;
  45+ 9988              Mov_down
  46+ 9988
  47+ 9988 CD EA 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 998B              ;																	; _ repone (Puntero_objeto).
  49+ 998B 21 F0 88     	ld hl,Ctrl_0
  50+ 998E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9990              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9990              ; 																	; _ en el caso de que no lo haya.
  53+ 9990 3A DE 88     	ld a,(Vel_down)
  54+ 9993 47           	ld b,a
  55+ 9994 2A C8 88         ld hl,(Posicion_actual)
  56+ 9997 CD 42 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 999A E6 02        	and 2
  58+ 999C 28 0F        	jr z,1F
  59+ 999E
  60+ 999E              ; Nos encontramos en el último tercio de pantalla.
  61+ 999E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 999E
  63+ 999E 7C           	ld a,h
  64+ 999F FE 57        	cp $57
  65+ 99A1 20 0A        	jr nz,1F
  66+ 99A3
  67+ 99A3 7D           	ld a,l
  68+ 99A4 C6 20        	add $20
  69+ 99A6 30 05        	jr nc,1F
  70+ 99A8
  71+ 99A8              ; ------------------------------
  72+ 99A8              ;	call Reaparece_arriba
  73+ 99A8 CD A7 9C     	call Reinicio
  74+ 99AB              ; ------------------------------
  75+ 99AB
  76+ 99AB 18 08        	jr 3F
  77+ 99AD CD 2F 96     1 call NextScan
  78+ 99B0 22 C8 88     	ld (Posicion_actual),hl
  79+ 99B3 10 E2            djnz 2B
  80+ 99B5 CD CD 9C     3 call Genera_coordenadas
  81+ 99B8 C9           	ret
  82+ 99B9
  83+ 99B9              ; ******************************************************************************************************************************************************************************************
  84+ 99B9              ;
  85+ 99B9              ;   27/05/23
  86+ 99B9              ;
  87+ 99B9              ;	Mov_up
  88+ 99B9              ;
  89+ 99B9              ; 	Mueve el Sprite hacia arriba.
  90+ 99B9              ;
  91+ 99B9              ;
  92+ 99B9              Mov_up
  93+ 99B9
  94+ 99B9 CD EA 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99BC              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99BC 21 F0 88     	ld hl,Ctrl_0
  97+ 99BF CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99C1              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99C1              ; 																		; _ en el caso de que no lo haya.
 100+ 99C1 3A DD 88     	ld a,(Vel_up)
 101+ 99C4 47           	ld b,a
 102+ 99C5 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99C8 CD 42 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99CB A7           	and a
 105+ 99CC 20 10        	jr nz,1F
 106+ 99CE
 107+ 99CE              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99CE              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99CE
 110+ 99CE 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99CF FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99D1 20 0B            jr nz,1F
 113+ 99D3 7D               ld a,l
 114+ 99D4 D6 20            sub $20
 115+ 99D6 30 06            jr nc,1F
 116+ 99D8 25               dec h
 117+ 99D9
 118+ 99D9              ; -----------------------------
 119+ 99D9 CD 88 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99DC              ;	call Reinicio
 121+ 99DC              ; -----------------------------
 122+ 99DC
 123+ 99DC 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99DE CD 3E 96     1 call PreviousScan
 125+ 99E1 22 C8 88     	ld (Posicion_actual),hl
 126+ 99E4 10 E2            djnz 3B
 127+ 99E6 CD CD 9C     2 call Genera_coordenadas
 128+ 99E9 C9           	ret
 129+ 99EA
 130+ 99EA              ; -----------------------------
 131+ 99EA              ;
 132+ 99EA              ;	27/5/23
 133+ 99EA              ;
 134+ 99EA              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99EA              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99EA              ;
 137+ 99EA              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99EA              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99EA              ;
 140+ 99EA              ;	Modifica: A y (Puntero_objeto).
 141+ 99EA
 142+ 99EA 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99ED CB 47        	bit 0,a
 144+ 99EF C8           	ret z
 145+ 99F0 CB 87        	res 0,a
 146+ 99F2 32 01 89     	ld (Ctrl_2),a
 147+ 99F5 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 99F8 22 CA 88     	ld (Puntero_objeto),hl
 149+ 99FB C9           	ret
 150+ 99FC
 151+ 99FC              ; ******************************************************************************************************************************************************************************************
 152+ 99FC              ;
 153+ 99FC              ;	19/10/22
 154+ 99FC              ;
 155+ 99FC              ;	Mov_right.
 156+ 99FC              ;
 157+ 99FC              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99FC              ;
 159+ 99FC
 160+ 99FC 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 99FF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A01              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A01              ; 																	; _ en el caso de que no lo haya.
 164+ 9A01 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A04 CB 77        	bit 6,a
 166+ 9A06 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A08
 168+ 9A08 CD 36 9C     	call Stop_Amadeus_right
 169+ 9A0B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A0C 18 4D        	jr 8F
 171+ 9A0E
 172+ 9A0E 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A11 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A13 20 46        	jr nz,8F
 175+ 9A15
 176+ 9A15 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A18 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A19 28 40        	jr z,8F
 179+ 9A1B
 180+ 9A1B              ; ---------- ---------- ----------
 181+ 9A1B              ;
 182+ 9A1B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A1B
 184+ 9A1B 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A1E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A20 28 11        	jr z,1F
 187+ 9A22 38 06        	jr c,6F
 188+ 9A24 FE 04        	cp 4
 189+ 9A26 28 14        	jr z,7F
 190+ 9A28 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A2A
 192+ 9A2A              ; ---------- ---------- ----------
 193+ 9A2A              ;
 194+ 9A2A              ; Perfiles de velocidad
 195+ 9A2A              ;
 196+ 9A2A
 197+ 9A2A 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A2D FE FE        	cp $fe
 199+ 9A2F 20 2A        	jr nz,8F
 200+ 9A31 18 10        	jr 3F
 201+ 9A33 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A36 FE FD        	cp $fd
 203+ 9A38 20 21        	jr nz,8F
 204+ 9A3A 18 07        	jr 3F
 205+ 9A3C 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A3F FE FB        	cp $fb
 207+ 9A41 20 18        	jr nz,8F
 208+ 9A43
 209+ 9A43              ; ---------- ---------- ----------
 210+ 9A43
 211+ 9A43              3
 212+ 9A43 CD 76 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A46              ;	call Reinicio
 214+ 9A46
 215+ 9A46              ; ---------- ---------- ----------
 216+ 9A46              ;
 217+ 9A46              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A46
 219+ 9A46 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A48 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A49 CD 62 9A     	call DESPLZ_DER
 222+ 9A4C C1           	pop bc
 223+ 9A4D 10 F9        	djnz 5B
 224+ 9A4F 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A52 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A53 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A56 CD CD 9C     	call Genera_coordenadas
 228+ 9A59 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A5B
 230+ 9A5B              ; ---------- ---------- ----------
 231+ 9A5B
 232+ 9A5B 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A5E CD 62 9A     	call DESPLZ_DER
 234+ 9A61 C9           2 ret
 235+ 9A62
 236+ 9A62              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A62              ;
 238+ 9A62              ;	22/9/22
 239+ 9A62              ;
 240+ 9A62
 241+ 9A62 CD 71 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A65 CD BD 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A68 CD E6 9A         call Ciclo_completo
 244+ 9A6B 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A6E CB FE        	set 7,(hl)
 246+ 9A70 C9           	ret
 247+ 9A71
 248+ 9A71              ; ******************************************************************************************************************************************************************************************
 249+ 9A71              ;	15/02/23
 250+ 9A71              ;
 251+ 9A71
 252+ 9A71 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A74 47           	ld b,a
 254+ 9A75 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A78 23           1 inc hl
 256+ 9A79 23           	inc hl
 257+ 9A7A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A7C 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A7F CD 82 8C     	call Extrae_address
 260+ 9A82 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9A85
 262+ 9A85              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A85
 264+ 9A85              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A85              ; Cuántos movimientos hemos hecho ??
 266+ 9A85              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A85
 268+ 9A85 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A88 EB           	ex de,hl
 270+ 9A89 A7           	and a
 271+ 9A8A ED 52        	sbc hl,de
 272+ 9A8C CB 3D        	srl l
 273+ 9A8E 3E 08        6 ld a,8
 274+ 9A90 95           	sub l
 275+ 9A91 30 1E        	jr nc,3F
 276+ 9A93
 277+ 9A93              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A93              ; B="0".
 279+ 9A93
 280+ 9A93 04           4 inc b
 281+ 9A94 3C           	inc a
 282+ 9A95 20 FC        	jr nz,4B
 283+ 9A97 78           	ld a,b
 284+ 9A98 08           	ex af,af
 285+ 9A99 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9A9C 23           5 inc hl
 287+ 9A9D 23           	inc hl
 288+ 9A9E 10 FC        	djnz 5B
 289+ 9AA0 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AA3 CD 82 8C     	call Extrae_address
 291+ 9AA6 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9AA9
 293+ 9AA9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AA9              ; _(Posicion_actual).
 295+ 9AA9
 296+ 9AA9 21 C8 88     	ld hl,Posicion_actual
 297+ 9AAC 34           	inc (hl)
 298+ 9AAD 08               ex af,af
 299+ 9AAE 6F           	ld l,a
 300+ 9AAF 18 DD        	jr 6B
 301+ 9AB1
 302+ 9AB1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AB1
 304+ 9AB1 47           3 ld b,a
 305+ 9AB2 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AB5 23           2 inc hl
 307+ 9AB6 23           	inc hl
 308+ 9AB7 10 FC        	djnz 2B
 309+ 9AB9 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9ABC C9           8 ret
 311+ 9ABD
 312+ 9ABD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ABD              ;
 314+ 9ABD              ;	24/7/22
 315+ 9ABD              ;
 316+ 9ABD              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ABD              ;
 318+ 9ABD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ABD              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ABD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ABD
 322+ 9ABD 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AC0 A7           	and a
 324+ 9AC1 20 1F        	jr nz,1F
 325+ 9AC3 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AC5 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9AC8
 328+ 9AC8 21 C7 88     	ld hl,Columns
 329+ 9ACB 34           	inc (hl)
 330+ 9ACC 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9ACF E6 01        	and 1
 332+ 9AD1 28 0F        	jr z,1F
 333+ 9AD3 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AD6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AD7 22 C8 88     	ld (Posicion_actual),hl
 336+ 9ADA CD CD 9C     	call Genera_coordenadas
 337+ 9ADD CD 42 9C     	call Inc_CTRL_DESPLZ
 338+ 9AE0 18 03        	jr 2F
 339+ 9AE2 CD 42 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AE5 C9           2 ret
 341+ 9AE6
 342+ 9AE6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AE6              ;
 344+ 9AE6              ;	24/7/22
 345+ 9AE6              ;
 346+ 9AE6              ;	Ciclo_completo.
 347+ 9AE6              ;
 348+ 9AE6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AE6              ;
 350+ 9AE6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AE6              ; 	Decrementamos (Columns).
 352+ 9AE6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AE6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AE6
 355+ 9AE6
 356+ 9AE6 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AE9 FE FF        	cp $ff
 358+ 9AEB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AED E6 F0        	and $f0
 360+ 9AEF 20 28        	jr nz,3F
 361+ 9AF1
 362+ 9AF1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AF1
 364+ 9AF1 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9AF4 47           	ld b,a
 366+ 9AF5 3E F8        	ld a,$f8
 367+ 9AF7 80           	add b
 368+ 9AF8 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9AFB 18 1C        	jr 3F
 370+ 9AFD 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B00 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B01 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B02 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B05 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B08 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B0A 20 0A        	jr nz,2F
 377+ 9B0C 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B0F 23           	inc hl
 379+ 9B10 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B13 CD CD 9C     	call Genera_coordenadas
 381+ 9B16
 382+ 9B16              ; Inicia el puntero de Sprite.
 383+ 9B16
 384+ 9B16 CD 99 8C     2 call Inicia_puntero_objeto_der
 385+ 9B19 C9           3 ret
 386+ 9B1A
 387+ 9B1A              ; ******************************************************************************************************************************************************************************************
 388+ 9B1A              ;
 389+ 9B1A              ;	15/02/23
 390+ 9B1A              ;
 391+ 9B1A              ;	Mov_left.
 392+ 9B1A              ;
 393+ 9B1A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B1A              ;
 395+ 9B1A              Mov_left
 396+ 9B1A
 397+ 9B1A 21 F0 88     	ld hl,Ctrl_0
 398+ 9B1D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B1F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B1F              ; 																	; _ en el caso de que no lo haya.
 401+ 9B1F 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B22 CB 77        	bit 6,a
 403+ 9B24 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B26
 405+ 9B26 CD 3C 9C     	call Stop_Amadeus_left
 406+ 9B29 C8           	ret z
 407+ 9B2A 20 4A        	jr nz,8F
 408+ 9B2C
 409+ 9B2C 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B2F A7           	and a
 411+ 9B30 20 44        	jr nz,8F
 412+ 9B32
 413+ 9B32 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B35 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B36 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B38
 417+ 9B38              ; ---------- ---------- ----------
 418+ 9B38
 419+ 9B38 3A DB 88     	ld a,(Vel_left)
 420+ 9B3B FE 02        	cp 2
 421+ 9B3D 28 0F        	jr z,1F
 422+ 9B3F 38 04        	jr c,6F
 423+ 9B41 FE 04        	cp 4
 424+ 9B43 28 12        	jr z,7F
 425+ 9B45
 426+ 9B45              ; ---------- ---------- ----------
 427+ 9B45
 428+ 9B45 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B48 FE F8        	cp $f8
 430+ 9B4A 20 2A        	jr nz,8F
 431+ 9B4C 18 10        	jr 4F
 432+ 9B4E 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B51 FE F9        	cp $f9
 434+ 9B53 20 21        	jr nz,8F
 435+ 9B55 18 07        	jr 4F
 436+ 9B57 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B5A FE FB        	cp $fb
 438+ 9B5C 20 18        	jr nz,8F
 439+ 9B5E
 440+ 9B5E              ; ---------- ---------- ----------
 441+ 9B5E
 442+ 9B5E              4
 443+ 9B5E CD 64 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B61              ;	call Reinicio
 445+ 9B61
 446+ 9B61              ; ---------- ---------- ----------
 447+ 9B61
 448+ 9B61 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B63 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B64
 451+ 9B64              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B64              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B64
 454+ 9B64 CD 7D 9B     	call DESPLZ_IZQ
 455+ 9B67 C1           	pop bc
 456+ 9B68 10 F9        	djnz 5B
 457+ 9B6A 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B6D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B6E 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B71 CD CD 9C     	call Genera_coordenadas
 461+ 9B74 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B76
 463+ 9B76              ; ---------- ---------- ----------
 464+ 9B76
 465+ 9B76              ; Movemos, no hay recolocación.
 466+ 9B76
 467+ 9B76 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B79 CD 7D 9B     	call DESPLZ_IZQ
 469+ 9B7C C9           2 ret
 470+ 9B7D
 471+ 9B7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B7D              ;
 473+ 9B7D              ;	22/9/22
 474+ 9B7D
 475+ 9B7D              DESPLZ_IZQ
 476+ 9B7D
 477+ 9B7D CD 8C 9B     	call Desplaza_izquierda
 478+ 9B80 CD D8 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B83 CD 00 9C     	call Ciclo_completo_2
 480+ 9B86 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B89 CB BE        	res 7,(hl)
 482+ 9B8B C9           	ret
 483+ 9B8C
 484+ 9B8C              Desplaza_izquierda
 485+ 9B8C
 486+ 9B8C 3A DB 88     	ld a,(Vel_left)
 487+ 9B8F 47           	ld b,a
 488+ 9B90 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B93 23           1 inc hl
 490+ 9B94 23           	inc hl
 491+ 9B95 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B97 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B9A CD 82 8C     	call Extrae_address
 494+ 9B9D 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BA0
 496+ 9BA0              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BA0
 498+ 9BA0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BA0              ; Cuántos movimientos hemos hecho ??
 500+ 9BA0              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BA0
 502+ 9BA0 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BA3 EB           	ex de,hl
 504+ 9BA4 A7           	and a
 505+ 9BA5 ED 52        	sbc hl,de
 506+ 9BA7 CB 3D        	srl l
 507+ 9BA9 3E 08        6 ld a,8
 508+ 9BAB 95           	sub l
 509+ 9BAC 30 1E        	jr nc,3F
 510+ 9BAE
 511+ 9BAE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BAE              ; B="0".
 513+ 9BAE
 514+ 9BAE 04           4 inc b
 515+ 9BAF 3C           	inc a
 516+ 9BB0 20 FC        	jr nz,4B
 517+ 9BB2 78           	ld a,b
 518+ 9BB3 08           	ex af,af
 519+ 9BB4 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BB7 23           5 inc hl
 521+ 9BB8 23           	inc hl
 522+ 9BB9 10 FC        	djnz 5B
 523+ 9BBB 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BBE CD 82 8C     	call Extrae_address
 525+ 9BC1 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BC4
 527+ 9BC4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BC4              ; _(Posicion_actual).
 529+ 9BC4
 530+ 9BC4 21 C8 88     	ld hl,Posicion_actual
 531+ 9BC7 35           	dec (hl)
 532+ 9BC8 08           	ex af,af
 533+ 9BC9 6F           	ld l,a
 534+ 9BCA 18 DD        	jr 6B
 535+ 9BCC
 536+ 9BCC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BCC
 538+ 9BCC 47           3 ld b,a
 539+ 9BCD 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BD0 23           2 inc hl
 541+ 9BD1 23           	inc hl
 542+ 9BD2 10 FC        	djnz 2B
 543+ 9BD4 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BD7 C9           8 ret
 545+ 9BD8
 546+ 9BD8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BD8              ;
 548+ 9BD8              ;	modifica_parametros_1er_DESPLZ
 549+ 9BD8              ;
 550+ 9BD8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BD8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BD8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BD8
 554+ 9BD8 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BDB A7           	and a
 556+ 9BDC 20 1E        	jr nz,1F
 557+ 9BDE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BDF 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9BE2 21 C7 88     	ld hl,Columns
 560+ 9BE5 34           	inc (hl)
 561+ 9BE6 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9BE9 E6 01        	and 1
 563+ 9BEB 20 0F        	jr nz,1F
 564+ 9BED 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BF0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BF1 22 C8 88     	ld (Posicion_actual),hl
 567+ 9BF4 CD CD 9C     	call Genera_coordenadas
 568+ 9BF7 CD 53 9C     	call Dec_CTRL_DESPLZ
 569+ 9BFA 18 03        	jr 2F
 570+ 9BFC CD 53 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BFF C9           2 ret
 572+ 9C00
 573+ 9C00              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C00
 575+ 9C00 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C03 FE F7        	cp $f7
 577+ 9C05 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C07 30 2C        	jr nc,3F
 579+ 9C09
 580+ 9C09              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C09
 582+ 9C09 06 00        	ld b,0
 583+ 9C0B 04           4 inc b
 584+ 9C0C 3C           	inc a
 585+ 9C0D FE F7        	cp $f7
 586+ 9C0F 20 FA        	jr nz,4B
 587+ 9C11 3E FF        	ld a,$ff
 588+ 9C13 90           	sub b
 589+ 9C14 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C17 18 1C        	jr 3F
 591+ 9C19
 592+ 9C19              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C19
 594+ 9C19 21 C7 88     1 ld hl,Columns
 595+ 9C1C 35           	dec (hl)
 596+ 9C1D AF           	xor a
 597+ 9C1E 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C21 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C24 E6 01        	and 1
 600+ 9C26 28 0A        	jr z,2F
 601+ 9C28 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C2B 2B           	dec hl
 603+ 9C2C 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C2F CD CD 9C     	call Genera_coordenadas
 605+ 9C32
 606+ 9C32              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C32
 608+ 9C32 CD AC 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C35 C9           3 ret
 610+ 9C36
 611+ 9C36              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C36              ;
 613+ 9C36              ;	19/10/22
 614+ 9C36              ;
 615+ 9C36              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C36              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C36
 618+ 9C36 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C39 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C3B C9           	ret
 621+ 9C3C
 622+ 9C3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C3C              ;
 624+ 9C3C              ;	19/10/22
 625+ 9C3C              ;
 626+ 9C3C              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C3C              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C3C
 629+ 9C3C 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C3F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C41 C9           	ret
 632+ 9C42
 633+ 9C42              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C42              ;
 635+ 9C42              ;	24/7/22
 636+ 9C42              ;
 637+ 9C42              ;	Inc_CTRL_DESPLZ
 638+ 9C42              ;
 639+ 9C42              ;
 640+ 9C42              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C42
 642+ 9C42 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C45 3A DC 88     	ld a,(Vel_right)
 644+ 9C48 A7           	and a
 645+ 9C49 28 06        	jr z,1F
 646+ 9C4B 47           	ld b,a
 647+ 9C4C 34           3 inc (hl)
 648+ 9C4D 10 FD        	djnz 3B
 649+ 9C4F 18 01        	jr 2F
 650+ 9C51 34           1 inc (hl)
 651+ 9C52 C9           2 ret
 652+ 9C53
 653+ 9C53              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C53              ;
 655+ 9C53              ;	5/2/23
 656+ 9C53              ;
 657+ 9C53              ;	Dec_CTRL_DESPLZ
 658+ 9C53              ;
 659+ 9C53              ;
 660+ 9C53              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C53
 662+ 9C53 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C56 3A DB 88     	ld a,(Vel_left)
 664+ 9C59 A7           	and a
 665+ 9C5A 28 06        	jr z,1F
 666+ 9C5C 47           	ld b,a
 667+ 9C5D 35           3 dec (hl)
 668+ 9C5E 10 FD        	djnz 3B
 669+ 9C60 18 01        	jr 2F
 670+ 9C62 35           1 dec (hl)
 671+ 9C63 C9           2 ret
 672+ 9C64
 673+ 9C64              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C64
 675+ 9C64 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C67 01 1F 00     	ld bc,31
 677+ 9C6A A7           	and a
 678+ 9C6B ED 4A        	adc hl,bc
 679+ 9C6D 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C70 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C73 CB C6        	set 0,(hl)
 682+ 9C75 C9           	ret
 683+ 9C76
 684+ 9C76              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C76
 686+ 9C76 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C79 01 1F 00     	ld bc,31
 688+ 9C7C A7           	and a
 689+ 9C7D ED 42        	sbc hl,bc
 690+ 9C7F 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C82 21 F0 88     	ld hl,Ctrl_0
 692+ 9C85 CB CE        	set 1,(hl)
 693+ 9C87 C9           	ret
 694+ 9C88
 695+ 9C88              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C88
 697+ 9C88 24           Reaparece_abajo inc h
 698+ 9C89 01 E0 17     	ld bc,$17e0
 699+ 9C8C A7           	and a
 700+ 9C8D ED 4A        	adc hl,bc
 701+ 9C8F 22 C8 88     	ld (Posicion_actual),hl
 702+ 9C92 21 F0 88     	ld hl,Ctrl_0
 703+ 9C95 CB D6        	set 2,(hl)
 704+ 9C97 C9           	ret
 705+ 9C98
 706+ 9C98              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C98
 708+ 9C98 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C9B A7           	and a
 710+ 9C9C ED 42        	sbc hl,bc
 711+ 9C9E 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CA1 21 F0 88     	ld hl,Ctrl_0
 713+ 9CA4 CB DE        	set 3,(hl)
 714+ 9CA6 C9           	ret
 715+ 9CA7
 716+ 9CA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CA7              ;
 718+ 9CA7              ;	15/07/23
 719+ 9CA7
 720+ 9CA7              Reinicio
 721+ 9CA7
 722+ 9CA7              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CA7
 724+ 9CA7 AF           	xor a
 725+ 9CA8 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CAB CD C9 9C     	call Limpia_contenido_hl
 727+ 9CAE
 728+ 9CAE 21 C8 88     	ld hl,Posicion_actual
 729+ 9CB1 CD C9 9C     	call Limpia_contenido_hl
 730+ 9CB4
 731+ 9CB4 CD F9 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CB7 CD 83 9F     	call Inicia_Puntero_mov
 733+ 9CBA
 734+ 9CBA 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CBD 06 05        	ld b,5
 736+ 9CBF 77           1 ld (hl),a
 737+ 9CC0 23           	inc hl
 738+ 9CC1 10 FC        	djnz 1B
 739+ 9CC3
 740+ 9CC3 21 01 89     	ld hl,Ctrl_2
 741+ 9CC6 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CC8
 743+ 9CC8 C9           	ret
 744+ 9CC9
 745+ 9CC9 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CCA 23           	inc hl
 747+ 9CCB 77           	ld (hl),a
 748+ 9CCC C9           	ret
 749+ 9CCD
 750+ 9CCD
# file closed: Direcciones.asm
1650  9CCD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CCD              ; ------------------------------------------------------------------------
   2+ 9CCD              ;
   3+ 9CCD              ;	02/04/23
   4+ 9CCD              ;
   5+ 9CCD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CCD              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CCD              ;
   8+ 9CCD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CCD              ;
  10+ 9CCD              ;	Modifica: A,BC y DE.
  11+ 9CCD
  12+ 9CCD C5           Genera_coordenadas push bc
  13+ 9CCE E5           	push hl
  14+ 9CCF D5           	push de
  15+ 9CD0
  16+ 9CD0 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CD3
  18+ 9CD3 7D           	ld a,l
  19+ 9CD4 E6 1F        	and $1f
  20+ 9CD6 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CD9
  22+ 9CD9 CD 42 99     	call calcula_tercio
  23+ 9CDC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CDD
  25+ 9CDD 1E 00        	ld e,0
  26+ 9CDF 7D           	ld a,l
  27+ 9CE0 E6 E0        	and $e0
  28+ 9CE2 28 01        	jr z,1F
  29+ 9CE4 04           	inc b
  30+ 9CE5
  31+ 9CE5 04           1 inc b
  32+ 9CE6 05           	dec b
  33+ 9CE7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CE9              ;														; _ , salimos.
  35+ 9CE9 1C           3 inc e
  36+ 9CEA D6 20        	sub 32
  37+ 9CEC 20 FB        	jr nz,3B
  38+ 9CEE 10 F5        	djnz 1B
  39+ 9CF0
  40+ 9CF0 7B           2 ld a,e
  41+ 9CF1 32 CD 88     	ld (Coordenada_y),a
  42+ 9CF4
  43+ 9CF4 D1           	pop de
  44+ 9CF5 E1           	pop hl
  45+ 9CF6 C1           	pop bc
  46+ 9CF7
  47+ 9CF7 C9           	ret
  48+ 9CF8
  49+ 9CF8              ; ------------------------------------------------------------------------
  50+ 9CF8              ;	28/05/23
  51+ 9CF8              ;
  52+ 9CF8              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CF8              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CF8              ;
  55+ 9CF8              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CF8              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CF8              ;
  58+ 9CF8              ;		DE="$120d"
  59+ 9CF8              ;
  60+ 9CF8              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CF8              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CF8              ;
  63+ 9CF8              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CF8
  65+ 9CF8              ;	Modifica: A,BC y DE.
  66+ 9CF8
  67+ 9CF8
  68+ 9CF8              Genera_coordenadas_disparo
  69+ 9CF8
  70+ 9CF8              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CF8
  72+ 9CF8 7D           	ld a,l
  73+ 9CF9 E6 1F        	and $1f
  74+ 9CFB 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CFC CD 42 99     	call calcula_tercio
  76+ 9CFF 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D00 1E 00        	ld e,0
  78+ 9D02 7D           	ld a,l
  79+ 9D03 E6 E0        	and $e0
  80+ 9D05 28 01        	jr z,1F
  81+ 9D07 04           	inc b
  82+ 9D08 1C           1 inc e
  83+ 9D09 D6 20        	sub 32
  84+ 9D0B 20 FB        	jr nz,1B
  85+ 9D0D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D0F C9           	ret
  87+ 9D10
# file closed: Genera_coordenadas.asm
1651  9D10              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D10              ; Relojes y temporizaciones.
   2+ 9D10
   3+ 9D10              ; ------------------------------------------------------
   4+ 9D10              ;
   5+ 9D10              ;	16/7/23
   6+ 9D10              ;
   7+ 9D10              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D10              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D10              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D10              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D10              ;
  12+ 9D10              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D10              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D10
  15+ 9D10              ; Disparo_entidad db 1
  16+ 9D10              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D10              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D10
  19+ 9D10              Habilita_disparos
  20+ 9D10
  21+ 9D10 7E           	ld a,(hl)
  22+ 9D11 A7           	and a
  23+ 9D12 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D13
  25+ 9D13 EB           	ex de,hl
  26+ 9D14
  27+ 9D14 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D15 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D16
  30+ 9D16              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D16
  32+ 9D16 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D17 7E           	ld a,(hl)
  34+ 9D18 23           	inc hl
  35+ 9D19 77           	ld (hl),a
  36+ 9D1A
  37+ 9D1A EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D1B 3E 01        	ld a,1
  39+ 9D1D 77           	ld (hl),a
  40+ 9D1E C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1652  9D1F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D1F
   2+ 9D1F
   3+ 9D1F              ;   07/07/23
   4+ 9D1F              ;
   5+ 9D1F              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D1F              ;
   7+ 9D1F              ;   Codificación:
   8+ 9D1F              ;
   9+ 9D1F              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D1F              ;
  11+ 9D1F              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D1F              ;
  13+ 9D1F              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D1F              ;
  15+ 9D1F              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D1F              ;
  17+ 9D1F              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D1F              ;                               ..... %01000010 Vel_up 4
  19+ 9D1F              ;                                               Vel_down 2
  20+ 9D1F              ;                               ..... $42
  21+ 9D1F              ;
  22+ 9D1F              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D1F              ;
  24+ 9D1F              ;                               ..... %01000010 Vel_left 4
  25+ 9D1F              ;                                               Vel_right 2
  26+ 9D1F              ;                               ..... $42
  27+ 9D1F              ;
  28+ 9D1F              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D1F              ;
  30+ 9D1F              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D1F              ;
  32+ 9D1F              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D1F              ;
  34+ 9D1F              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D1F              ;                                     $53
  36+ 9D1F              ;
  37+ 9D1F              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D1F              ;
  39+ 9D1F              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D1F              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D1F              ;
  42+ 9D1F              ;                       Arriba ..... $81
  43+ 9D1F              ;                       Arriba - izquierda ..... $a1
  44+ 9D1F              ;                       Arriba - derecha ..... $91
  45+ 9D1F              ;
  46+ 9D1F              ;                       Abajo ..... $41
  47+ 9D1F              ;                       Abajo - izquierda ..... $61
  48+ 9D1F              ;                       Abajo - derecha ..... $51
  49+ 9D1F              ;
  50+ 9D1F              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D1F              ;
  52+ 9D1F              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D1F              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D1F              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D1F              ;
  56+ 9D1F              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D1F              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D1F              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D1F              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D1F              ;
  61+ 9D1F              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D1F              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D1F              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D1F              ;
  65+ 9D1F              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D1F              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D1F              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D1F              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D1F
  70+ 9D1F              ; ----- ----- ----- ----- -----
  71+ 9D1F
  72+ 9D1F 4B 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D21 53 9D            defw F_1
  74+ 9D23 5D 9D            defw F_2
  75+ 9D25 67 9D            defw Codo_abajo_derecha
  76+ 9D27 9B 9D            defw Derecha_y_subiendo
  77+ 9D29 A5 9D            defw Derecha_y_subiendo_1
  78+ 9D2B AF 9D            defw F_3
  79+ 9D2D B9 9D            defw F_4
  80+ 9D2F C3 9D            defw Derecha_y_bajando
  81+ 9D31 CD 9D            defw Derecha_y_bajando_1
  82+ 9D33 D7 9D            defw Derecha_y_bajando_2
  83+ 9D35 E1 9D            defw Codo_derecha_abajo
  84+ 9D37 11 9E            defw Codo_abajo_izq.
  85+ 9D39 45 9E            defw Izquierda_y_subiendo
  86+ 9D3B 4F 9E            defw Izquierda_y_subiendo_1
  87+ 9D3D 59 9E            defw F_5
  88+ 9D3F 63 9E            defw F_6
  89+ 9D41 6D 9E            defw Izquierda_y_bajando
  90+ 9D43 77 9E            defw Izquierda_y_bajando_1
  91+ 9D45 81 9E            defw Izquierda_y_bajando_2
  92+ 9D47 8B 9E            defw Codo_izquierda_abajo
  93+ 9D49 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D4B
  95+ 9D4B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D4F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D53
  98+ 9D53 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D57 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D5B 08 00
 100+ 9D5D 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D61 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D65 0F FE
 102+ 9D67
 103+ 9D67 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D6B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D6F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D73 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D77 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D7B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D7F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D83 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D87 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D8B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D8F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D93 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D97 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D9B
 117+ 9D9B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D9F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DA3 06 00
 119+ 9DA5
 120+ 9DA5 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DA9 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DAD 02 00
 122+ 9DAF
 123+ 9DAF 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DB3 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DB7 04 00
 125+ 9DB9 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DBD 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DC1 08 00
 127+ 9DC3
 128+ 9DC3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DC7 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DCB 02 00
 130+ 9DCD
 131+ 9DCD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DD1 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DD5 06 00
 133+ 9DD7
 134+ 9DD7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DDB 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DDF 06 00
 136+ 9DE1
 137+ 9DE1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DE1
 139+ 9DE1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DE5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DED 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DF1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DF5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DF9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E01 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E05 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E09 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E0D 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E11
 152+ 9E11 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E15 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E19 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E1D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E21 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E25 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E29 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E2D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E31 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E35 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E39 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E3D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E41 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E45
 166+ 9E45 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E49 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E4D 06 00
 168+ 9E4F
 169+ 9E4F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E53 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E57 02 00
 171+ 9E59
 172+ 9E59 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E5D 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E61 04 00
 174+ 9E63 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E67 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E6B 08 00
 176+ 9E6D
 177+ 9E6D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E71 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E75 02 00
 179+ 9E77
 180+ 9E77 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E7B 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E7F 06 00
 182+ 9E81
 183+ 9E81 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E85 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E89 06 00
 185+ 9E8B
 186+ 9E8B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E8F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E97 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E9B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E9F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EA3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EA7 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EAB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EAF 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EB3 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EB7 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EBB
 199+ 9EBB              ; ----- ----- ----- ----- -----
 200+ 9EBB              ;
 201+ 9EBB              ;   27/06/23
 202+ 9EBB
 203+ 9EBB              Movimiento
 204+ 9EBB
 205+ 9EBB              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EBB
 207+ 9EBB              ;    ld hl,(Posicion_actual)
 208+ 9EBB
 209+ 9EBB 3A 01 89         ld a,(Ctrl_2)
 210+ 9EBE CB 57            bit 2,a
 211+ 9EC0 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EC2
 213+ 9EC2 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EC5 7E               ld a,(hl)
 215+ 9EC6
 216+ 9EC6              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EC6
 218+ 9EC6              Inicia_desplazamiento.
 219+ 9EC6
 220+ 9EC6              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EC6
 222+ 9EC6 CD BA 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EC9
 224+ 9EC9              ; Iniciamos (Repetimos_mov).
 225+ 9EC9
 226+ 9EC9 7E               ld a,(hl)
 227+ 9ECA E6 0F            and $0f
 228+ 9ECC 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9ECF 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9ED2
 231+ 9ED2              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9ED2
 233+ 9ED2 23               inc hl
 234+ 9ED3 7E               ld a,(hl)
 235+ 9ED4 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9ED7 2B               dec hl
 237+ 9ED8
 238+ 9ED8 21 01 89         ld hl,Ctrl_2
 239+ 9EDB CB D6            set 2,(hl)
 240+ 9EDD
 241+ 9EDD              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EDD              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EDD
 244+ 9EDD              Desplazamiento_iniciado
 245+ 9EDD
 246+ 9EDD CD 8E 9F         call Aplica_desplazamiento
 247+ 9EE0
 248+ 9EE0 3A 01 89         ld a,(Ctrl_2)
 249+ 9EE3 CB 67            bit 4,a
 250+ 9EE5 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EE6
 252+ 9EE6 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EE9 35               dec (hl)
 254+ 9EEA C0               ret nz
 255+ 9EEB
 256+ 9EEB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EEB              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EEB              ; Analiza (Cola_de_desplazamiento).
 259+ 9EEB
 260+ 9EEB 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EEE A7               and a
 262+ 9EEF CC E3 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EF2 28 30            jr z,Reinicia_el_movimiento
 264+ 9EF4
 265+ 9EF4 FE FF            cp $ff
 266+ 9EF6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EF8
 268+ 9EF8 FE FE            cp $fe
 269+ 9EFA CC 67 9F         call z,Fijamos_bucle
 270+ 9EFD 28 25            jr z,Reinicia_el_movimiento
 271+ 9EFF
 272+ 9EFF FE FD            cp $fd
 273+ 9F01 20 11            jr nz,1F
 274+ 9F03
 275+ 9F03              ; ---
 276+ 9F03              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F03
 278+ 9F03 3A 01 89         ld a,(Ctrl_2)
 279+ 9F06 CB 5F            bit 3,a
 280+ 9F08 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F0A
 282+ 9F0A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F0A
 284+ 9F0A 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F0D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F0F
 287+ 9F0F CD 78 9F         call Inicia_Repetimos_movimiento
 288+ 9F12 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F14              ; ---
 290+ 9F14
 291+ 9F14 FE 01        1 cp 1
 292+ 9F16 CA 51 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F19
 294+ 9F19 3D               dec a
 295+ 9F1A 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F1D
 297+ 9F1D 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F20 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F23              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F23 C9               ret
 301+ 9F24
 302+ 9F24              Reinicia_el_movimiento
 303+ 9F24
 304+ 9F24 3A 01 89         ld a,(Ctrl_2)
 305+ 9F27 CB 5F            bit 3,a
 306+ 9F29 28 1B            jr z,2F
 307+ 9F2B
 308+ 9F2B              ; (Cola_de_desplazamiento)="254".
 309+ 9F2B
 310+ 9F2B 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F2E 35               dec (hl)
 312+ 9F2F 20 15            jr nz,2F
 313+ 9F31
 314+ 9F31              ; Fin de las repeticiones del último movimiento.
 315+ 9F31
 316+ 9F31 21 01 89         ld hl,Ctrl_2
 317+ 9F34 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F36
 319+ 9F36 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F39 23               inc hl
 321+ 9F3A 23               inc hl
 322+ 9F3B 23               inc hl
 323+ 9F3C 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F3F              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F3F 7E               ld a,(hl)
 326+ 9F40 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F43
 328+ 9F43 C3 EB 9E         jp Cola
 329+ 9F46
 330+ 9F46 CD 83 9F     2 call Inicia_Puntero_mov
 331+ 9F49
 332+ 9F49 21 01 89         ld hl,Ctrl_2
 333+ 9F4C CB 96            res 2,(hl)
 334+ 9F4E
 335+ 9F4E C3 BB 9E         jp Movimiento
 336+ 9F51
 337+ 9F51              Siguiente_desplazamiento
 338+ 9F51
 339+ 9F51              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F51              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F51
 342+ 9F51 21 01 89         ld hl,Ctrl_2
 343+ 9F54 CB 96            res 2,(hl)
 344+ 9F56
 345+ 9F56 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F59 23               inc hl
 347+ 9F5A 23               inc hl
 348+ 9F5B 22 F3 88         ld (Puntero_mov),hl
 349+ 9F5E
 350+ 9F5E 7E               ld a,(hl)
 351+ 9F5F A7               and a
 352+ 9F60 CC E3 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F63 CA 24 9F         jp z,Reinicia_el_movimiento
 354+ 9F66
 355+ 9F66 C9               ret
 356+ 9F67              ; Subrutinas -----------------------------------------
 357+ 9F67              ; ---------- --------- --------- ---------- ----------
 358+ 9F67              ;
 359+ 9F67              ;   24/07/23
 360+ 9F67              ;
 361+ 9F67              ;   Fijamos_bucle
 362+ 9F67              ;
 363+ 9F67              ;
 364+ 9F67
 365+ 9F67              Fijamos_bucle
 366+ 9F67
 367+ 9F67 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F6A 3C               inc a
 369+ 9F6B 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F6E
 371+ 9F6E CD E3 9F         call Incrementa_Puntero_indice_mov
 372+ 9F71 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F74 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F77 C9               ret
 375+ 9F78
 376+ 9F78              ; ---------- --------- --------- ---------- ----------
 377+ 9F78              ;
 378+ 9F78              ;   07/7/23
 379+ 9F78              ;
 380+ 9F78              ;   Inicia_Repetimos_movimiento
 381+ 9F78              ;
 382+ 9F78              ;
 383+ 9F78
 384+ 9F78              Inicia_Repetimos_movimiento
 385+ 9F78
 386+ 9F78              ; Iniciamos (Repetimos_movimiento).
 387+ 9F78
 388+ 9F78 DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F7C DD 7E 02         ld a,(ix+2)
 390+ 9F7F 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9F82
 392+ 9F82 C9               ret
 393+ 9F83
 394+ 9F83              ; ---------- --------- --------- ---------- ----------
 395+ 9F83              ;
 396+ 9F83              ;   26/6/23
 397+ 9F83              ;
 398+ 9F83              ;   Inicia_Puntero_mov
 399+ 9F83              ;
 400+ 9F83              ;
 401+ 9F83
 402+ 9F83 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F86 5E               ld e,(hl)
 404+ 9F87 23               inc hl
 405+ 9F88 56               ld d,(hl)
 406+ 9F89 EB               ex de,hl
 407+ 9F8A 22 F3 88         ld (Puntero_mov),hl
 408+ 9F8D C9               ret
 409+ 9F8E
 410+ 9F8E              ; ---------- --------- --------- ---------- ----------
 411+ 9F8E              ;
 412+ 9F8E              ;   27/06/23
 413+ 9F8E              ;
 414+ 9F8E              ;   Aplica_movimiento.
 415+ 9F8E
 416+ 9F8E              Aplica_desplazamiento
 417+ 9F8E
 418+ 9F8E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F8E
 420+ 9F8E 2A F3 88         ld hl, (Puntero_mov)
 421+ 9F91
 422+ 9F91 7E               ld a,(hl)
 423+ 9F92 E6 F0            and $f0
 424+ 9F94 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F95
 426+ 9F95 CB 7E            bit 7,(hl)
 427+ 9F97 28 03            jr z,1F
 428+ 9F99 CD B9 99         call Mov_up
 429+ 9F9C 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9F9F CB 76            bit 6,(hl)
 431+ 9FA1 28 03            jr z,2F
 432+ 9FA3 CD 88 99         call Mov_down
 433+ 9FA6 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9FA9 CB 6E            bit 5,(hl)
 435+ 9FAB 28 03            jr z,3F
 436+ 9FAD CD 1A 9B         call Mov_left
 437+ 9FB0 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9FB3 CB 66            bit 4,(hl)
 439+ 9FB5 C8               ret z
 440+ 9FB6 CD FC 99         call Mov_right
 441+ 9FB9 C9               ret
 442+ 9FBA
 443+ 9FBA              ; ---------- --------- --------- ---------- ----------
 444+ 9FBA              ;
 445+ 9FBA              ;   26/06/23
 446+ 9FBA              ;
 447+ 9FBA              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FBA
 449+ 9FBA              Ajusta_velocidad_desplazamiento
 450+ 9FBA
 451+ 9FBA              ; 1er byte de la cadena de movimiento.
 452+ 9FBA              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FBA
 454+ 9FBA CD D8 9F         call Extrae_nibble_alto
 455+ 9FBD
 456+ 9FBD 32 DD 88         ld (Vel_up),a
 457+ 9FC0 79               ld a,c
 458+ 9FC1 E6 0F            and $0f
 459+ 9FC3 32 DE 88         ld (Vel_down),a
 460+ 9FC6
 461+ 9FC6              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FC6              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FC6
 464+ 9FC6 23               inc hl
 465+ 9FC7 CD D8 9F         call Extrae_nibble_alto
 466+ 9FCA
 467+ 9FCA 32 DB 88         ld (Vel_left),a
 468+ 9FCD 79               ld a,c
 469+ 9FCE E6 0F            and $0f
 470+ 9FD0 32 DC 88         ld (Vel_right),a
 471+ 9FD3
 472+ 9FD3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FD3
 474+ 9FD3 23               inc hl
 475+ 9FD4 22 F3 88         ld (Puntero_mov),hl
 476+ 9FD7 C9               ret
 477+ 9FD8
 478+ 9FD8 06 04        Extrae_nibble_alto ld b,4
 479+ 9FDA 7E               ld a,(hl)
 480+ 9FDB 4F               ld c,a
 481+ 9FDC E6 F0            and $f0
 482+ 9FDE CB 3F        1 srl a
 483+ 9FE0 10 FC            djnz 1B
 484+ 9FE2 C9               ret
 485+ 9FE3
 486+ 9FE3              ; ---------- --------- --------- ---------- ----------
 487+ 9FE3              ;
 488+ 9FE3              ;   5/7/23
 489+ 9FE3              ;
 490+ 9FE3              ;   Incrementa_Puntero_indice_mov
 491+ 9FE3
 492+ 9FE3              Incrementa_Puntero_indice_mov
 493+ 9FE3
 494+ 9FE3 21 F7 88         ld hl,Incrementa_puntero
 495+ 9FE6 34               inc (hl)
 496+ 9FE7
 497+ 9FE7 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ 9FEA 01 02 00         ld bc,2
 499+ 9FED A7               and a
 500+ 9FEE 09               add hl,bc
 501+ 9FEF 22 F1 88         ld (Puntero_indice_mov),hl
 502+ 9FF2
 503+ 9FF2 7E               ld a,(hl)
 504+ 9FF3 A7               and a
 505+ 9FF4
 506+ 9FF4              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FF4
 508+ 9FF4              ;    jr z,$
 509+ 9FF4
 510+ 9FF4              ;! Reinicia el Patrón de movimiento.
 511+ 9FF4
 512+ 9FF4 CC F9 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FF7
 514+ 9FF7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FF8
 516+ 9FF8 C9               ret
 517+ 9FF9
 518+ 9FF9
 519+ 9FF9              ; ---------- --------- --------- ---------- ----------
 520+ 9FF9              ;
 521+ 9FF9              ;   24/07/23
 522+ 9FF9              ;
 523+ 9FF9              ;   Inicializa_Puntero_indice_mov
 524+ 9FF9
 525+ 9FF9              Inicializa_Puntero_indice_mov
 526+ 9FF9
 527+ 9FF9              ; Existe etiqueta de bucle principal???
 528+ 9FF9
 529+ 9FF9 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FFC 24               inc h
 531+ 9FFD 25               dec h
 532+ 9FFE 28 05            jr z,2F
 533+ A000
 534+ A000 22 F1 88         ld (Puntero_indice_mov),hl
 535+ A003 18 14            jr 3F
 536+ A005
 537+ A005              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A005
 539+ A005 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ A008 47               ld b,a
 541+ A009
 542+ A009 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ A00C 2B           1 dec hl
 544+ A00D 2B               dec hl
 545+ A00E 10 FC            djnz 1B
 546+ A010 22 F1 88         ld (Puntero_indice_mov),hl
 547+ A013
 548+ A013 AF               xor a
 549+ A014 32 F7 88         ld (Incrementa_puntero),a
 550+ A017 18 06            jr 4F
 551+ A019
 552+ A019 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A01C 32 F7 88         ld (Incrementa_puntero),a
 554+ A01F C9           4 ret
 555+ A020
 556+ A020
 557+ A020
# file closed: Patrones_de_mov.asm
1653  A020              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A020              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A020              ;
   3+ A020              ;	4/9/23
   4+ A020              ;
   5+ A020              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A020
   7+ A020              ;	ADC HL,SP	LD (addr),SP
   8+ A020              ;	ADD HL,SP	LD SP,(addr)
   9+ A020              ;	ADD IX,SP	LD SP,nn
  10+ A020              ; 	ADD IY,SP	LD SP,HL
  11+ A020              ;				LD SP,IX
  12+ A020              ;	DEC SP		LD SP,IY
  13+ A020
  14+ A020              ;	EX (SP),HL
  15+ A020              ;	EX (SP),IX
  16+ A020              ;	EX (SP),IY
  17+ A020
  18+ A020              ;	INC SP
  19+ A020
  20+ A020                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E6 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 03 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F0 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 03 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1C 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F0 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 22 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 14 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1A 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 14 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   19/10/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ; En 1er lugar consultamos el bit_4 de (Semaforo).
 127+ 72EC              ; Nos indica si existe algún album vacío.
 128+ 72EC
 129+ 72EC 3A 3C 89         ld a,(Semaforo)
 130+ 72EF CB 67            bit 4,a
 131+ 72F1 28 1F            jr z,7F
 132+ 72F3
 133+ 72F3 CB A7            res 4,a
 134+ 72F5 32 3C 89         ld (Semaforo),a
 135+ 72F8
 136+ 72F8              ; Album_de_fots_2 o Album_de_fotos_1 está vacío.
 137+ 72F8              ; Album_de_fotos_2 ???
 138+ 72F8
 139+ 72F8 CB 7F            bit 7,a                         ; bit_7 ="1". Indica que Album_de_fotos_2 está vacío.
 140+ 72FA 28 0F            jr z,8F                         ; Hay que "ordenar los álbumes". Volcamos Album_de_fotos_3 a Album_de_fotos_2.
 141+ 72FC
 142+ 72FC              ; Rellena Album_de_fotos_2
 143+ 72FC
 144+ 72FC CB BF            res 7,a
 145+ 72FE CB EF            set 5,a                         ; El bit_5 indica que el álbum ha sido reestructurado.
 146+ 7300 32 3C 89         ld (Semaforo),a
 147+ 7303
 148+ 7303 CD AC 73         call Album3_a_Album2
 149+ 7306 CD 23 74         call Actualiza_punteros_de_albumes
 150+ 7309
 151+ 7309 18 07            jr 7F
 152+ 730B
 153+ 730B              ; Album_de_fotos_1 está vacío.
 154+ 730B
 155+ 730B CB B7        8 res 6,a
 156+ 730D CB EF            set 5,a
 157+ 730F 32 3C 89         ld (Semaforo),a
 158+ 7312
 159+ 7312              ;    call Album2_a_Album1
 160+ 7312
 161+ 7312              ;   1-1-0-X Distribución actual de los álbumes.
 162+ 7312
 163+ 7312              ;   Está el buffer lleno ???
 164+ 7312
 165+ 7312              ;    ld a,(Ctrl_1)
 166+ 7312              ;    bit 5,a
 167+ 7312              ;    jr $
 168+ 7312
 169+ 7312              ;    call Album3_a_Album2
 170+ 7312              ;    call Actualiza_punteros_de_albumes
 171+ 7312
 172+ 7312              ;    ld a,(Contador_de_frames_2)
 173+ 7312              ;    ex af,af'
 174+ 7312              ;    ld a,(Contador_de_frames)
 175+ 7312              ;    jr $
 176+ 7312
 177+ 7312              ; #############################################################3
 178+ 7312
 179+ 7312              ;   En 1er lugar limpiamos el FRAME pintado.
 180+ 7312              ;   Vaciamos Album_de_fotos.
 181+ 7312
 182+ 7312              ;   Album_de_fotos. Contiene datos ???
 183+ 7312
 184+ 7312 21 01 70     7 ld hl,Album_de_fotos+1
 185+ 7315 7E               ld a,(hl)
 186+ 7316 A7               and a
 187+ 7317 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 188+ 7319
 189+ 7319              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 190+ 7319
 191+ 7319 2A 1E 89         ld hl,(End_Snapshot)
 192+ 731C 01 00 70         ld bc,Album_de_fotos
 193+ 731F 11 01 70         ld de,Album_de_fotos+1
 194+ 7322 AF               xor a
 195+ 7323 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 196+ 7324
 197+ 7324 CD FA 73         call Limpia_album
 198+ 7327
 199+ 7327 21 00 00         ld hl,0
 200+ 732A 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 201+ 732D
 202+ 732D              ; ----- ----- ----- -----
 203+ 732D
 204+ 732D              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 205+ 732D              ;   Album_de_fotos_1. Contiene un frame completo ???
 206+ 732D
 207+ 732D 3A 3C 89     3 ld a,(Semaforo)
 208+ 7330 CB 4F            bit 1,a
 209+ 7332 20 08            jr nz,4F
 210+ 7334
 211+ 7334              ;   Album_de_fotos_1 no está completo.
 212+ 7334
 213+ 7334 21 3C 89         ld hl,Semaforo
 214+ 7337 CB E6            set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 215+ 7339 CB 8E            res 1,(hl)
 216+ 733B C9               ret                         ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 217+ 733C
 218+ 733C              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 219+ 733C
 220+ 733C 21 55 70     4 ld hl,Album_de_fotos_1+1
 221+ 733F 7E               ld a,(hl)
 222+ 7340 A7               and a
 223+ 7341 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 224+ 7343
 225+ 7343              ; ----- ----- ----- -----
 226+ 7343              ; ----- ----- ----- -----
 227+ 7343
 228+ 7343              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 229+ 7343              ;   Actualiza (End_Snapshot).
 230+ 7343
 231+ 7343 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 232+ 7346 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 233+ 7349 11 00 70         ld de,Album_de_fotos        ; Destino.
 234+ 734C
 235+ 734C CD FA 73         call Limpia_album
 236+ 734F
 237+ 734F              ;   Calculamos (End_Snapshot)
 238+ 734F
 239+ 734F A7               and a
 240+ 7350 ED 4A            adc hl,bc
 241+ 7352 22 1E 89         ld (End_Snapshot),hl
 242+ 7355
 243+ 7355              ;   Limpiamos Album_de_fotos_1.
 244+ 7355
 245+ 7355 2A 24 89         ld hl,(End_Snapshot_1)
 246+ 7358 01 54 70         ld bc,Album_de_fotos_1
 247+ 735B 11 55 70         ld de,Album_de_fotos_1+1
 248+ 735E AF               xor a
 249+ 735F 02               ld (bc),a
 250+ 7360
 251+ 7360 CD FA 73         call Limpia_album
 252+ 7363
 253+ 7363 21 00 00         ld hl,0
 254+ 7366 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 255+ 7369
 256+ 7369              ; ----- ----- ----- -----
 257+ 7369
 258+ 7369              ;   Album_de_fotos_2. Contiene Frame completo ???
 259+ 7369
 260+ 7369 3A 3C 89     1 ld a,(Semaforo)
 261+ 736C CB 57            bit 2,a
 262+ 736E 20 17            jr nz,5F
 263+ 7370
 264+ 7370              ;   Album_de_fotos_2 no está completo.
 265+ 7370
 266+ 7370              ;   Ha sido reestructurado ???
 267+ 7370
 268+ 7370
 269+ 7370 3A 51 89         ld a,(Contador_de_frames_2)
 270+ 7373 08               ex af,af'
 271+ 7374 3A 50 89         ld a,(Contador_de_frames)
 272+ 7377 18 FE            jr $
 273+ 7379
 274+ 7379 3A 3C 89         ld a,(Semaforo)
 275+ 737C CB 6F            bit 5,a
 276+ 737E C0               ret nz
 277+ 737F
 278+ 737F 21 3C 89         ld hl,Semaforo
 279+ 7382 CB E6            set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 280+ 7384 CB F6            set 6,(hl)
 281+ 7386 C9               ret
 282+ 7387
 283+ 7387              ;   Album_de_fotos_2 contiene un FRAME completo. Datos ???.
 284+ 7387
 285+ 7387 21 A9 70     5 ld hl,Album_de_fotos_2+1
 286+ 738A 7E               ld a,(hl)
 287+ 738B A7               and a
 288+ 738C 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 289+ 738E
 290+ 738E              ; ----- ----- ----- -----
 291+ 738E              ; ----- ----- ----- -----
 292+ 738E              ; ----- ----- ----- -----
 293+ 738E
 294+ 738E              ;   Album_de_fotos_2 contiene un frame completo.
 295+ 738E              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 296+ 738E
 297+ 738E CD D3 73         call Album2_a_Album1
 298+ 7391
 299+ 7391              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 300+ 7391              ;   Album_de_fotos_3. Contiene un frame completo ???
 301+ 7391
 302+ 7391 3A 3C 89     2 ld a,(Semaforo)
 303+ 7394 CB 5F            bit 3,a
 304+ 7396 20 0E            jr nz,6F
 305+ 7398
 306+ 7398              ;   Album_de_fotos_3 no está completo.
 307+ 7398
 308+ 7398              ;   Ha sido reestructurado ???
 309+ 7398
 310+ 7398 3A 3C 89         ld a,(Semaforo)
 311+ 739B CB 6F            bit 5,a
 312+ 739D C0               ret nz
 313+ 739E
 314+ 739E 21 3C 89         ld hl,Semaforo
 315+ 73A1 CB E6            set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73A3 CB FE            set 7,(hl)                  ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73A5 C9               ret
 318+ 73A6
 319+ 73A6              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 320+ 73A6
 321+ 73A6 21 FD 70     6 ld hl,Album_de_fotos_3+1
 322+ 73A9 7E               ld a,(hl)
 323+ 73AA A7               and a
 324+ 73AB C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 325+ 73AC
 326+ 73AC              ; ----- ----- ----- -----
 327+ 73AC              ; ----- ----- ----- -----
 328+ 73AC              ; ----- ----- ----- -----
 329+ 73AC
 330+ 73AC              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2 y limpiamos Album_de_fotos_3.
 331+ 73AC
 332+ 73AC 2A 2C 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 333+ 73AF 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 334+ 73B2 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 335+ 73B5
 336+ 73B5 CD FA 73         call Limpia_album
 337+ 73B8
 338+ 73B8              ;   Actualizamos (End_Snapshot_2):
 339+ 73B8
 340+ 73B8 A7               and a
 341+ 73B9 ED 4A            adc hl,bc
 342+ 73BB 22 28 89         ld (End_Snapshot_2),hl
 343+ 73BE
 344+ 73BE              ;   Limpiamos Album_de_fotos_3.
 345+ 73BE
 346+ 73BE 2A 2C 89         ld hl,(End_Snapshot_3)
 347+ 73C1 01 FC 70         ld bc,Album_de_fotos_3
 348+ 73C4 11 FD 70         ld de,Album_de_fotos_3+1
 349+ 73C7 AF               xor a
 350+ 73C8 02               ld (bc),a
 351+ 73C9 CD FA 73         call Limpia_album
 352+ 73CC
 353+ 73CC              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 354+ 73CC              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 355+ 73CC
 356+ 73CC 21 00 00         ld hl,0
 357+ 73CF 22 2C 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 358+ 73D2 C9               ret
 359+ 73D3
 360+ 73D3 2A 28 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 361+ 73D6 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 362+ 73D9 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 363+ 73DC CD FA 73         call Limpia_album
 364+ 73DF
 365+ 73DF              ;   Actualizamos (End_Snapshot_1):
 366+ 73DF
 367+ 73DF A7               and a
 368+ 73E0 ED 4A            adc hl,bc
 369+ 73E2 22 24 89         ld (End_Snapshot_1),hl
 370+ 73E5
 371+ 73E5              ;   Limpiamos Album_de_fotos_2.
 372+ 73E5
 373+ 73E5 2A 28 89         ld hl,(End_Snapshot_2)
 374+ 73E8 01 A8 70         ld bc,Album_de_fotos_2
 375+ 73EB 11 A9 70         ld de,Album_de_fotos_2+1
 376+ 73EE AF               xor a
 377+ 73EF 02               ld (bc),a
 378+ 73F0 CD FA 73         call Limpia_album
 379+ 73F3 21 00 00         ld hl,0
 380+ 73F6 22 28 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 381+ 73F9 C9               ret
 382+ 73FA
 383+ 73FA
 384+ 73FA              ; ----------------------------------------------------
 385+ 73FA              ;
 386+ 73FA              ;   10/8/23
 387+ 73FA              ;
 388+ 73FA              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 389+ 73FA              ;
 390+ 73FA              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 391+ 73FA              ;           BC ..... Dirección de inicio del álbum.
 392+ 73FA              ;           DE ..... Dirección de inicio del álbum. +1
 393+ 73FA
 394+ 73FA              ;    ld hl,(End_Snapshot)
 395+ 73FA              ;    ld bc,Album_de_fotos
 396+ 73FA              ;    ld de,Album_de_fotos+1
 397+ 73FA
 398+ 73FA              ;   MODIFICA: A,HL,BC y DE.
 399+ 73FA
 400+ 73FA              Limpia_album
 401+ 73FA D5               push de                     ; Guardo DESTINO.
 402+ 73FB C5               push bc                     ; Guardo ORIGEN.
 403+ 73FC ED 42            sbc hl,bc
 404+ 73FE 4D               ld c,l
 405+ 73FF 44               ld b,h
 406+ 7400 E1               pop hl
 407+ 7401 C5               push bc
 408+ 7402 ED B0            ldir
 409+ 7404 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 410+ 7405 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 411+ 7406 C9               ret                         ; _ a otro).
 412+ 7407              ;
 413+ 7407
 414+ 7407              ; -----------------------------------------------
 415+ 7407              ;
 416+ 7407              ;   13/10/23
 417+ 7407
 418+ 7407              Actualiza_semaforo
 419+ 7407
 420+ 7407              ; Está activo el bit "Album_de_fotos" ???
 421+ 7407
 422+ 7407 3A 3C 89         ld a,(Semaforo)
 423+ 740A CB 47            bit 0,a
 424+ 740C 20 04            jr nz,1F
 425+ 740E CB C7            set 0,a                     ; Album_de_fotos COMPLETO.
 426+ 7410 18 0D            jr 2F
 427+ 7412 CB 4F        1 bit 1,a
 428+ 7414 20 04            jr nz,3F
 429+ 7416 CB CF            set 1,a                      ; Album_de_fotos_1 COMPLETO.
 430+ 7418 18 05            jr 2F
 431+ 741A CB 57        3 bit 2,a
 432+ 741C C0               ret nz
 433+ 741D CB D7            set 2,a                      ; Album_de_fotos_2 COMPLETO.
 434+ 741F 32 3C 89     2 ld (Semaforo),a
 435+ 7422 C9               ret
 436+ 7423
 437+ 7423              ; --------------------------------------------------------------------------------------------
 438+ 7423              ;
 439+ 7423              ;   20/10/23
 440+ 7423
 441+ 7423              Actualiza_punteros_de_albumes
 442+ 7423
 443+ 7423 2A 30 89         ld hl,(Puntero_indice_album_de_fotos)
 444+ 7426 2B               dec hl
 445+ 7427 2B               dec hl
 446+ 7428 22 30 89         ld (Puntero_indice_album_de_fotos),hl
 447+ 742B
 448+ 742B 2A 34 89         ld hl,(Puntero_indice_End_Snapshot)
 449+ 742E 2B               dec hl
 450+ 742F 2B               dec hl
 451+ 7430 22 34 89         ld (Puntero_indice_End_Snapshot),hl
 452+ 7433 CD 82 8C         call Extrae_address
 453+ 7436 22 38 89         ld (Puntero_de_End_Snapshot),hl
 454+ 7439
 455+ 7439 CD 82 8C         call Extrae_address
 456+ 743C 22 1A 89         ld (Stack_snapshot),hl
 457+ 743F
 458+ 743F CD 43 74         call Actualiza_semaforo_2
 459+ 7442
 460+ 7442 C9              ret
 461+ 7443
 462+ 7443              ; --------------------------------------------------------------------------------------------
 463+ 7443              ;
 464+ 7443              ;   20/10/23
 465+ 7443
 466+ 7443              Actualiza_semaforo_2
 467+ 7443
 468+ 7443 3A 3C 89         ld a,(Semaforo)
 469+ 7446 CB 5F            bit 3,a
 470+ 7448 28 04            jr z,2F
 471+ 744A CB 9F            res 3,a
 472+ 744C 18 0D            jr 1F
 473+ 744E CB 57        2 bit 2,a
 474+ 7450 28 04            jr z,3F
 475+ 7452 CB 97            res 2,a
 476+ 7454 18 05            jr 1F
 477+ 7456 CB 4F        3 bit 1,a
 478+ 7458 C8               ret z
 479+ 7459 CB 8F            res 1,a
 480+ 745B 32 3C 89     1 ld (Semaforo),a
 481+ 745E C9               ret
 482+ 745F
# file closed: Guarda_foto_registros.asm
1654  745F
1655  745F              	SAVESNA "Pruebas.sna", START
1656  745F
1657  745F
1658  745F
1659  745F
# file closed: Banco_de_pruebas.asm
