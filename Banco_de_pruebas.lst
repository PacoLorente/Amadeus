# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 3B 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD 4C A2     	call Pinta_disparos_Amadeus
  73  82F6 CD 1D 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 65 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 2D 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 63 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 63 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 66 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 3D 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 5A 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 54 89        	defw Disparo_2
  40+ 8927 4E 89        	defw Disparo_3
  41+ 8929 48 89        	defw Disparo_4
  42+ 892B 42 89        	defw Disparo_5
  43+ 892D 3C 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00           Disparo_7 db 0	     						; Control.
  49+ 8937
  50+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893A 00 00        	defw 0									; Puntero de impresión.
  52+ 893C 00           Disparo_6 db 0		    					; Control.
  53+ 893D
  54+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8940 00 00        	defw 0									; Puntero de impresión.
  56+ 8942 00           Disparo_5 db 0			    				; Control.
  57+ 8943
  58+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8946 00 00        	defw 0									; Puntero de impresión.
  60+ 8948 00           Disparo_4 db 0				     			; Control.
  61+ 8949
  62+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 894C 00 00        	defw 0									; Puntero de impresión.
  64+ 894E 00           Disparo_3 db 0					    		; Control.
  65+ 894F
  66+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8952 00 00        	defw 0									; Puntero de impresión.
  68+ 8954 00           Disparo_2 db 0						    	; Control.
  69+ 8955
  70+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 8958 00 00        	defw 0									; Puntero de impresión.
  72+ 895A 00           Disparo_1 db 0							    ; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 02           	db 2												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 148  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 B5 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 14           Nivel_1 db 20									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1	; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01 01 01 01
  17+ 8BA9 01 01 01 01
  17+ 8BAD 01 01 01 01
  17+ 8BB1 01 01 01 01
  18+ 8BB5
  19+ 8BB5 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BB6 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BBA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BBE 01 02
  22+ 8BC0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BC4 01 02
  23+ 8BC6
# file closed: Niveles.asm
 149  8BC6
 150  8BC6              ; --------------------------------------------------------------------------------
 151  8BC6              ;
 152  8BC6              ; 12/05/24
 153  8BC6              ;
 154  8BC6              ; Parámetros DRAW.
 155  8BC6              ;
 156  8BC6
 157  8BC6              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BC6
 159  8BC6 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BC7              ;															- Patrón de movimiento.
 161  8BC7 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BC8 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BC9
 164  8BC9 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BCA              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BCA
 167  8BCA              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BCA              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BCA              ; Ejemplos.
 170  8BCA
 171  8BCA              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BCA              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BCA              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BCA              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BCA              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BCA
 177  8BCA 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BCB              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BCB              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BCB
 181  8BCB 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BCD              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BCD
 184  8BCD 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BCF
 186  8BCF              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BCF
 188  8BCF 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BD1              ;														; _palabras que componen el "movimiento_masticado".
 190  8BD1
 191  8BD1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BD1
 193  8BD1 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BD2              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BD2              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BD2              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BD2              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BD2
 199  8BD2 00           Ctrl_2 db 0
 200  8BD3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BD3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BD3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BD3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BD3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BD3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BD3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BD3              ;
 208  8BD3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BD3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BD3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BD3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BD3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BD3              ;														BIT 4, ???
 214  8BD3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BD3
 216  8BD3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BD4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BD4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BD4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BD4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BD4              ;
 222  8BD4              ; 														DESCRIPCIÖN:
 223  8BD4              ;
 224  8BD4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BD4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BD4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BD4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BD4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BD4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BD4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BD4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BD4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BD4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BD4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BD4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BD4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BD4              ;
 238  8BD4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BD4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BD4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BD4
 242  8BD4              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BD4
 244  8BD4 00           Filas db 0												; Filas. [DRAW]
 245  8BD5 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BD6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BD8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BDA
 249  8BDA              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BDA
 251  8BDA 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BDB              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BDB              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BDB
 255  8BDB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BDB
 257  8BDB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BDB              ;
 259  8BDB              ;	COLORES: 0 ..... NEGRO
 260  8BDB              ;    		 1 ..... AZUL
 261  8BDB              ; 			 2 ..... ROJO
 262  8BDB              ;			 3 ..... MAGENTA
 263  8BDB              ; 			 4 ..... VERDE
 264  8BDB              ; 			 5 ..... CIAN
 265  8BDB              ;			 6 ..... AMARILLO
 266  8BDB              ; 			 7 ..... BLANCO
 267  8BDB
 268  8BDB 00 00        Indice_Sprite_der defw 0
 269  8BDD 00 00        Indice_Sprite_izq defw 0
 270  8BDF 00 00        Puntero_DESPLZ_der defw 0
 271  8BE1 00 00        Puntero_DESPLZ_izq defw 0
 272  8BE3
 273  8BE3 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BE5 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BE6 00           Columnas db 0
 276  8BE7 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BE9              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BE9 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BEA
 280  8BEA              ; variables de control general.
 281  8BEA
 282  8BEA 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BEB
 284  8BEB              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BEB
 286  8BEB              Perfiles_de_velocidad
 287  8BEB
 288  8BEB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BEC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BED 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BEE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BEF
 293  8BEF              ; Contadores de 16 bits.
 294  8BEF
 295  8BEF 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BF1 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BF3 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BF5 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BF7
 300  8BF7              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BF7
 302  8BF7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BF9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BFB 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BFD              ;
 306  8BFD              ;
 307  8BFD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BFE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BFE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BFE 00           Incrementa_puntero_backup db 0
 311  8BFF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8C00              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8C00 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8C01 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8C02 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8C03              ;
 317  8C03              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8C03              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8C03              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8C03              ;
 321  8C03              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8C03              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8C03              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8C03              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8C03              ;
 326  8C03              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8C03              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8C03              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8C03
 330  8C03 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8C04
 332  8C04              ;														DESCRIPCIÓN:
 333  8C04              ;
 334  8C04              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8C04              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8C04              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8C04              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8C04              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8C04              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8C04
 341  8C04              ;														BIT 3, Recarga de nueva oleada.
 342  8C04              ;														BIT 4, Recarga de nueva oleada.
 343  8C04              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8C04              ;														BIT 6, **** Frame completo.
 345  8C04              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8C04
 347  8C04 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8C06              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8C06              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8C06              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8C06
 352  8C06              ; Gestión de ENTIDADES y CAJAS.
 353  8C06
 354  8C06 00 00        Puntero_store_caja defw 0
 355  8C08 00 00        Puntero_restore_caja defw 0
 356  8C0A 00 00        Indice_restore_caja defw 0
 357  8C0C
 358  8C0C 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 359  8C0D 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 360  8C0E 00           Entidades_en_curso db 0									; Entidades en pantalla.
 361  8C0F
 362  8C0F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 363  8C11 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 364  8C13              ;														; _ puntero (Indice_entidades).
 365  8C13
 366  8C13              ;---------------------------------------------------------------------------------------------------------------
 367  8C13              ;
 368  8C13              ;	13/10/24
 369  8C13              ;
 370  8C13              ;	Álbumes.
 371  8C13
 372  8C13 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 373  8C15              ;														; _variable para almacenar lo posición del puntero_
 374  8C15              ; 														; _de pila, SP.
 375  8C15 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 376  8C17              ;														; La utiliza la rutina [Extrae_foto_registros].
 377  8C17
 378  8C17              ; Impresión. ----------------------------------------------------------------------------------------------------
 379  8C17
 380  8C17 00 00        Album_de_pintado defw 0
 381  8C19 00 00        Album_de_borrado defw 0
 382  8C1B 00 00        Album_de_pintado_Amadeus defw 0
 383  8C1D 00 00        Album_de_borrado_Amadeus defw 0
 384  8C1F
 385  8C1F 00 00        Album_de_pintado_disparos_Amadeus defw 0
 386  8C21 00 00        Album_de_borrado_disparos_Amadeus defw 0
 387  8C23
 388  8C23 00 00        Album_de_pintado_disparos_Entidades defw 0
 389  8C25 00 00        Album_de_borrado_disparos_Entidades defw 0
 390  8C27
 391  8C27
 392  8C27 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 393  8C29
 394  8C29 00           Num_de_bytes_album_de_disparos db 0
 395  8C2A 00           Num_de_bytes_album_de_disparos_borrado db 0
 396  8C2B
 397  8C2B 07           Numero_de_disparos_de_entidades db 7
 398  8C2C
 399  8C2C 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 400  8C2D 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 401  8C2E
 402  8C2E 00 00        Techo_Scanlines_album defw 0
 403  8C30 00 00        Techo_Scanlines_album_2 defw 0
 404  8C32 00           Switch db 0
 405  8C33 00 00        Techo defw 0
 406  8C35 00 00        Scanlines_album_SP defw 0
 407  8C37 00 89        India_SP defw Tabla_de_pintado
 408  8C39 03 89        India_2_SP defw Tabla_de_pintado+3
 409  8C3B
 410  8C3B 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 411  8C3C              ;
 412  8C3C              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 413  8C3C              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 414  8C3C              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 415  8C3C              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 416  8C3C              ;																Habilita el borrado/pintado de sprites.
 417  8C3C              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 418  8C3C              ;																_ a la baja.
 419  8C3C              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 420  8C3C              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 421  8C3C              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 422  8C3C              ; 																_ el último frame de la explosión de nuestra nave.
 423  8C3C              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 424  8C3C              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 425  8C3C
 426  8C3C 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 427  8C3D              ;
 428  8C3D              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 429  8C3D              ;
 430  8C3D              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 431  8C3D              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 432  8C3D              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 433  8C3D              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 434  8C3D              ;
 435  8C3D              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 436  8C3D              ;															_ masticados ya generados.
 437  8C3D              ;
 438  8C3D              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 439  8C3D              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 440  8C3D              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 441  8C3D              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 442  8C3D
 443  8C3D 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 444  8C3E              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 445  8C3E              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 446  8C3E
 447  8C3E              ; Gestión de Disparos.
 448  8C3E
 449  8C3E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 450  8C40 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 451  8C42 00           Impacto2 db 0											; Byte de control de impactos.
 452  8C43
 453  8C43              ;
 454  8C43              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 455  8C43              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 456  8C43              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 457  8C43              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 458  8C43
 459  8C43
 460  8C43
 461  8C43
 462  8C43
 463  8C43
 464  8C43
 465  8C43 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 466  8C45              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 467  8C45              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 468  8C45
 469  8C45 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 470  8C47              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 471  8C47 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 472  8C4A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 473  8C4A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 474  8C4D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 475  8C4D
 476  8C4D              ;---------------------------------------------------------------------------------------------------------------
 477  8C4D
 478  8C4D              ; Relojes y temporizaciones.
 479  8C4D
 480  8C4D 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 481  8C4E 05           Clock_explosion_Amadeus db 5
 482  8C4F 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 483  8C50
 484  8C50 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 485  8C52 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 486  8C54 00           Numero_rnd_disparos db 0
 487  8C55
 488  8C55 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 489  8C57 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 490  8C58              ;																		; Repite la oleada de entidades.
 491  8C58 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 492  8C59 A0           CLOCK_disparos_de_entidades db $a0
 493  8C5A
 494  8C5A              ;---------------------------------------------------------------------------------------------------------------
 495  8C5A
 496  8C5A              ; Gestión de NIVELES.
 497  8C5A
 498  8C5A 00           Nivel db 0												; Nivel actual del juego.
 499  8C5B 00 00        Puntero_indice_NIVELES defw 0
 500  8C5D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 501  8C5F              ; 														; _ que definen el NIVEL.
 502  8C5F
 503  8C5F              ; ---------------------------------------------------------------------------------------------------------------
 504  8C5F
 505  8C5F              ; Temporizaciones Shield.
 506  8C5F
 507  8C5F 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 508  8C63 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 509  8C65 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 510  8C66 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 511  8C67 00           Shield_3 db 0
 512  8C68
 513  8C68 03           Lives db 3
 514  8C69
 515  8C69              ; 	INICIO  *************************************************************************************************************************************************************************
 516  8C69              ;
 517  8C69              ;	5/1/24
 518  8C69
 519  8C69              START
 520  8C69
 521  8C69 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 522  8C6C 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 523  8C6E ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 524  8C70 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 525  8C72 F3           	DI
 526  8C73
 527  8C73              ; Limpiamos pantalla.
 528  8C73
 529  8C73              ;	ld a,%00000111
 530  8C73              ;	call Cls
 531  8C73 CD 22 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 532  8C76
 533  8C76              ; INICIALIZACIÓN.
 534  8C76
 535  8C76 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 536  8C78 CD 6F 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 537  8C7B
 538  8C7B CD B7 8E     	call Extrae_numero_aleatorio_y_avanza
 539  8C7E
 540  8C7E 6F           	ld l,a
 541  8C7F 26 00        	ld h,0
 542  8C81 22 55 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 543  8C84
 544  8C84              ;	Inicializa 1er Nivel.
 545  8C84
 546  8C84 21 94 8B     	ld hl,Indice_de_niveles
 547  8C87 22 5B 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 548  8C8A CD 9F 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 549  8C8D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 550  8C8D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 551  8C8D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 552  8C8D
 553  8C8D              ;	Inicia los álbumes de líneas.
 554  8C8D
 555  8C8D CD 70 90     	call Inicia_albumes_de_lineas
 556  8C90              ;
 557  8C90 CD 80 90     	call Inicia_albumes_de_lineas_Amadeus
 558  8C93 CD 8D 90     	call Inicia_albumes_de_disparos
 559  8C96
 560  8C96 CD E4 92     4 call Inicia_Entidades
 561  8C99 CD 47 93     	call Inicia_Amadeus
 562  8C9C
 563  8C9C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 564  8C9C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 565  8C9C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 566  8C9C
 567  8C9C 11 6D 89     	ld de,Amadeus_BOX
 568  8C9F CD 9A 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 569  8CA2 CD 8A 93     	call Limpiamos_bandeja_DRAW
 570  8CA5
 571  8CA5              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 572  8CA5
 573  8CA5 06 3C        	ld b,60
 574  8CA7 CD 70 9D     2 call Amadeus_a_izquierda
 575  8CAA 10 FB        	djnz 2B
 576  8CAC
 577  8CAC CD 4E 90     	call Genera_datos_de_impresion_Amadeus
 578  8CAF
 579  8CAF              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 580  8CAF
 581  8CAF CD A9 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 582  8CB2
 583  8CB2 CD 2D 91     	call Inicia_Shield
 584  8CB5
 585  8CB5 2A 35 8C     6 ld hl,(Scanlines_album_SP)
 586  8CB8 22 2E 8C     	ld (Techo_Scanlines_album),hl
 587  8CBB
 588  8CBB 2A 19 8C     	ld hl,(Album_de_borrado)
 589  8CBE 22 35 8C     	ld (Scanlines_album_SP),hl
 590  8CC1
 591  8CC1 21 00 89     	ld hl,Tabla_de_pintado
 592  8CC4 22 37 8C     	ld (India_SP),hl
 593  8CC7
 594  8CC7 21 3B 8C     	ld hl,Ctrl_3
 595  8CCA CB C6        	set 0,(hl) 											; Indica Frame completo.
 596  8CCC CB D6        	set 2,(hl)
 597  8CCE CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 598  8CD0
 599  8CD0 FB           	ei 													; Ha de apuntar a $5c3a.
 600  8CD1
 601  8CD1 76           	halt
 602  8CD2
 603  8CD2              ; ------------------------------------
 604  8CD2
 605  8CD2              Main
 606  8CD2              ;
 607  8CD2              ; 07/11/24.
 608  8CD2
 609  8CD2              ; Gestión de disparos.
 610  8CD2
 611  8CD2 CD 8C 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 612  8CD5 CD 63 9F     	call Motor_de_disparos_entidades
 613  8CD8 CD F8 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 614  8CDB
 615  8CDB              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 616  8CDB              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 617  8CDB              ; Este hecho lo indica el bit2 de (Impacto2).
 618  8CDB
 619  8CDB CD 95 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 620  8CDE
 621  8CDE              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 622  8CDE
 623  8CDE 21 59 8C     	ld hl,CLOCK_disparos_de_entidades
 624  8CE1 35           	dec (hl)
 625  8CE2 CC D3 8D     	call z,Autoriza_disparo_de_entidades
 626  8CE5
 627  8CE5 2A 55 8C     	ld hl,(Clock_next_entity)
 628  8CE8 ED 4B 78 5C  	ld bc,(FRAMES)
 629  8CEC A7           	and a
 630  8CED ED 42        	sbc hl,bc
 631  8CEF 20 16        	jr nz,1F
 632  8CF1
 633  8CF1              ; GESTIÓN DE ENTIDADES.
 634  8CF1
 635  8CF1              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 636  8CF1              ; _ (Clock_next_entity) para la siguiente entidad.
 637  8CF1
 638  8CF1              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 639  8CF1              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 640  8CF1              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 641  8CF1
 642  8CF1              ;	di
 643  8CF1              ;	jr $
 644  8CF1              ;	ei
 645  8CF1
 646  8CF1 21 0D 8C     	ld hl,Numero_parcial_de_entidades
 647  8CF4 46           	ld b,(hl)
 648  8CF5 3A 0E 8C     	ld a,(Entidades_en_curso)									; Entidades que hay en pantalla.
 649  8CF8 B8           	cp b
 650  8CF9 28 0C        	jr z,1F
 651  8CFB 30 0A        	jr nc,1F
 652  8CFD
 653  8CFD              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 654  8CFD
 655  8CFD 3C           	inc a
 656  8CFE 32 0E 8C     	ld (Entidades_en_curso),a
 657  8D01
 658  8D01              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 659  8D01
 660  8D01 CD B7 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 661  8D04 CD D3 8E     	call Define_Clock_next_entity
 662  8D07
 663  8D07 3A 0E 8C     1 ld a,(Entidades_en_curso)
 664  8D0A A7           	and a
 665  8D0B CA 7E 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 666  8D0E 47           	ld b,a												; No hay entidades que gestionar.
 667  8D0F
 668  8D0F              ; ( Código que ejecutamos con cada entidad: ).
 669  8D0F
 670  8D0F              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 671  8D0F              ;
 672  8D0F              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 673  8D0F
 674  8D0F 21 00 89     	ld hl,Tabla_de_pintado
 675  8D12 22 37 8C     	ld (India_SP),hl
 676  8D15
 677  8D15 21 3B 8C     	ld hl,Ctrl_3
 678  8D18 CB D6        	set 2,(hl)
 679  8D1A CD 61 8E     	call Change
 680  8D1D
 681  8D1D C5           2 push bc 												; Nº de entidades en curso.
 682  8D1E
 683  8D1E CD FA 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 684  8D21 ED 5B 35 8C  	ld de,(Scanlines_album_SP)
 685  8D25
 686  8D25              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 687  8D25
 688  8D25              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 689  8D25              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 690  8D25
 691  8D25 3A 42 8C     	ld a,(Impacto2)
 692  8D28 CB 5F        	bit 3,a
 693  8D2A C4 8F A1     	call nz,Compara_con_coordenadas_de_disparo
 694  8D2D
 695  8D2D 3A CA 8B     	ld a,(Impacto)
 696  8D30 CB 4F        	bit 1,a
 697  8D32 C4 0A 92     	call nz,Genera_explosion
 698  8D35 20 2A        	jr nz,Gestiona_siguiente_entidad
 699  8D37
 700  8D37 3A CA 8B     	ld a,(Impacto)
 701  8D3A A7           	and a
 702  8D3B 28 0C        	jr z,3F
 703  8D3D
 704  8D3D              ; IMPACTO en entidad por colisión con Amadeus.
 705  8D3D
 706  8D3D              ; 5/7/24
 707  8D3D              ; Nota importante:
 708  8D3D              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 709  8D3D              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 710  8D3D              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 711  8D3D
 712  8D3D 3A 71 89     	ld a,(Impacto_Amadeus)
 713  8D40 A7           	and a
 714  8D41 C4 0A 92     	call nz,Genera_explosion
 715  8D44 20 1B        	jr nz,Gestiona_siguiente_entidad
 716  8D46
 717  8D46              ; Falsa colisión !!!
 718  8D46
 719  8D46 32 CA 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 720  8D49
 721  8D49              ; -------------------------------------------
 722  8D49
 723  8D49 CD 17 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 724  8D4C CD 3F 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 725  8D4F CD 07 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 726  8D52 CD 0A 95     	call Genera_datos_de_impresion
 727  8D55 CD AD 93     	call Decrementa_Contador_de_mov_masticados
 728  8D58
 729  8D58              ; -------------------------------------------
 730  8D58
 731  8D58              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 732  8D58
 733  8D58 2A CB 8B     	ld hl,(Puntero_de_impresion)
 734  8D5B CD DE 94     	call Genera_coordenadas
 735  8D5E
 736  8D5E              ; TODO: Generamos disparo ???
 737  8D5E
 738  8D5E              ;	ld a,(Permiso_de_disparo_Entidades)
 739  8D5E              ;	and a
 740  8D5E              ;	call nz,Entidad_genera_disparo_si_procede
 741  8D5E
 742  8D5E CD 13 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 743  8D61
 744  8D61              Gestiona_siguiente_entidad
 745  8D61
 746  8D61 CD 7F 93      	call Store_Restore_cajas
 747  8D64 C1           	pop bc
 748  8D65 10 B6        	djnz 2B
 749  8D67
 750  8D67              ; Hemos gestionado todas las entidades.
 751  8D67              ; ----- ----- -----
 752  8D67
 753  8D67 CD 2B 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 754  8D6A CD 42 8F     	call Ordena_tabla_de_impresion
 755  8D6D CD A9 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 756  8D70
 757  8D70 CD E8 8E     	call Borra_diferencia
 758  8D73
 759  8D73 3A 3B 8C     	ld a,(Ctrl_3)
 760  8D76 CB 5F        	bit 3,a
 761  8D78 20 04        	jr nz,Gestion_de_Amadeus
 762  8D7A
 763  8D7A EB           	ex de,hl
 764  8D7B 71           	ld (hl),c
 765  8D7C 2C           	inc l
 766  8D7D 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 767  8D7E
 768  8D7E              ;! GESTIONA AMADEUS !!!!!!!!!!
 769  8D7E
 770  8D7E              Gestion_de_Amadeus
 771  8D7E
 772  8D7E 21 3B 8C     	ld hl,Ctrl_3
 773  8D81 CB 76        	bit 6,(hl)
 774  8D83 28 13        	jr z,Amadeus_vivo
 775  8D85
 776  8D85              ; Amadeus ha sido destruido.
 777  8D85              ; Decrementa (Temp_new_live).
 778  8D85
 779  8D85 21 4F 8C     	ld hl,Temp_new_live
 780  8D88 35           	dec (hl)
 781  8D89 20 26        	jr nz,End_frame
 782  8D8B
 783  8D8B              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 784  8D8B
 785  8D8B 21 68 8C     	ld hl,Lives
 786  8D8E 35           	dec (hl)
 787  8D8F
 788  8D8F              ;! Fin del juego
 789  8D8F
 790  8D8F F3           	di
 791  8D90 28 FE        	jr z,$
 792  8D92 FB           	ei
 793  8D93
 794  8D93              ; Nueva nave.
 795  8D93
 796  8D93 CD 05 8E     	call Reinicia_Amadeus
 797  8D96 18 19        	jr End_frame
 798  8D98
 799  8D98              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 800  8D98
 801  8D98              Amadeus_vivo
 802  8D98
 803  8D98 3A 71 89     	ld a,(Impacto_Amadeus)
 804  8D9B A7           	and a
 805  8D9C C4 3A 92     	call nz, Genera_explosion_Amadeus
 806  8D9F 20 10        	jr nz, End_frame
 807  8DA1
 808  8DA1 CD E7 91     	call Teclado
 809  8DA4 21 3B 8C     	ld hl,Ctrl_3
 810  8DA7
 811  8DA7 CB 6E        	bit 5,(hl)
 812  8DA9 28 06        	jr z,End_frame
 813  8DAB
 814  8DAB              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 815  8DAB
 816  8DAB CD 7C 8E     	call Change_Amadeus
 817  8DAE CD 4E 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 818  8DB1
 819  8DB1              End_frame
 820  8DB1
 821  8DB1              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 822  8DB1              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 823  8DB1
 824  8DB1 CD BA A0     	call Genera_datos_de_impresion_disparos_Entidades
 825  8DB4 CD 7E A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 826  8DB7 CD D4 A1     	call Calcula_bytes_pintado_disparos
 827  8DBA CD E1 A1     	call Limpia_album_de_pintado_disparos_entidades
 828  8DBD
 829  8DBD              ; ------------ ------------- --------------
 830  8DBD
 831  8DBD 2A 19 8C     	ld hl,(Album_de_borrado)
 832  8DC0 22 35 8C     	ld (Scanlines_album_SP),hl
 833  8DC3
 834  8DC3 21 3B 8C     	ld hl,Ctrl_3
 835  8DC6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 836  8DC8 CB 9E        	res 3,(hl)
 837  8DCA CB A6        	res 4,(hl)
 838  8DCC
 839  8DCC AF           	xor a
 840  8DCD D3 FE        	out ($fe),a
 841  8DCF
 842  8DCF 76           	halt
 843  8DD0
 844  8DD0              ; ----------------------------------------
 845  8DD0
 846  8DD0              ;	ld a,(Ctrl_1) 										; Existe Loop?
 847  8DD0              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 848  8DD0 CA D2 8C     	jp z,Main
 849  8DD3
 850  8DD3              ;------------------------------------------
 851  8DD3              ;
 852  8DD3              ;	07/11/24
 853  8DD3
 854  8DD3              Autoriza_disparo_de_entidades
 855  8DD3
 856  8DD3 3E 01        	ld a,1
 857  8DD5 32 2D 8C     	ld (Permiso_de_disparo_Entidades),a
 858  8DD8
 859  8DD8 3A 58 8C     	ld a,(Repone_CLOCK_disparos)
 860  8DDB FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 861  8DDD 38 02        	jr c,1F
 862  8DDF
 863  8DDF              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 864  8DDF              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 865  8DDF              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 866  8DDF
 867  8DDF D6 03        	sub 3
 868  8DE1
 869  8DE1 32 58 8C     1 ld (Repone_CLOCK_disparos),a
 870  8DE4 32 59 8C     	ld (CLOCK_disparos_de_entidades),a
 871  8DE7
 872  8DE7 C9           	ret
 873  8DE8
 874  8DE8              ;------------------------------------------
 875  8DE8              ;
 876  8DE8              ;	14/09/24
 877  8DE8              ;
 878  8DE8              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 879  8DE8
 880  8DE8              Entidad_genera_disparo_si_procede
 881  8DE8
 882  8DE8 2A 52 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 883  8DEB CB 06        	rlc (hl)
 884  8DED
 885  8DED DC 0A A1     	call c,Genera_disparo_de_entidad_maldosa
 886  8DF0
 887  8DF0 C9           	ret
 888  8DF1
 889  8DF1              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 890  8DF1              ;
 891  8DF1              ;	30/09/24
 892  8DF1
 893  8DF1              Actuaiza_sp_de_disparos_de_entidades
 894  8DF1
 895  8DF1 2A 52 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 896  8DF4 23           	inc hl
 897  8DF5 22 52 8C     	ld (Puntero_num_aleatorios_disparos),hl
 898  8DF8
 899  8DF8 11 FD 88     	ld de,Numeros_aleatorios+7
 900  8DFB 7B           	ld a,e
 901  8DFC 95           	sub l
 902  8DFD C0           	ret nz
 903  8DFE
 904  8DFE 21 F6 88     1 ld hl,Numeros_aleatorios
 905  8E01 22 52 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 906  8E04 C9           	ret
 907  8E05
 908  8E05              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 909  8E05              ;
 910  8E05              ;	24/07/24
 911  8E05
 912  8E05              Reinicia_Amadeus
 913  8E05
 914  8E05              ;	Reinicia posición y estado.
 915  8E05
 916  8E05 21 CF 50     	ld hl,$50cf
 917  8E08 22 72 89     	ld (p.imp.amadeus),hl
 918  8E0B 21 F0 E0     	ld hl,$e0f0
 919  8E0E 22 74 89     	ld (Pamm_Amadeus),hl
 920  8E11 21 3D 00     	ld hl,$003d
 921  8E14 22 76 89     	ld (Comm_Amadeus),hl
 922  8E17
 923  8E17              ;	limpiamos el álbum de borrado.
 924  8E17
 925  8E17 2A 1D 8C     	ld hl,(Album_de_borrado_Amadeus)
 926  8E1A
 927  8E1A AF           	xor a
 928  8E1B 77           	ld (hl),a
 929  8E1C
 930  8E1C E5           	push hl
 931  8E1D D1           	pop de
 932  8E1E 13           	inc de
 933  8E1F
 934  8E1F 01 23 00     	ld bc,35
 935  8E22 ED B0        	ldir
 936  8E24
 937  8E24 CD 4E 90     	call Genera_datos_de_impresion_Amadeus
 938  8E27
 939  8E27              ;	Reinicia temporizaciones.
 940  8E27
 941  8E27 CD 2D 91     	call Inicia_Shield
 942  8E2A
 943  8E2A 3E 5A        	ld a,90
 944  8E2C 32 65 8C     	ld (Shield),a
 945  8E2F
 946  8E2F 3E 64        	ld a,100
 947  8E31 32 4F 8C     	ld (Temp_new_live),a
 948  8E34
 949  8E34              ; 	Restauramos el FLAG: Amadeus vivo.
 950  8E34
 951  8E34 21 3B 8C     	ld hl,Ctrl_3
 952  8E37 CB B6        	res 6,(hl)
 953  8E39
 954  8E39              ;	Fuerza la impresión de la nave en el siguiente frame.
 955  8E39
 956  8E39 21 3B 8C      	ld hl,Ctrl_3
 957  8E3C CB EE        	set 5,(hl)
 958  8E3E
 959  8E3E C9           	ret
 960  8E3F
 961  8E3F              ; --------------------------------------------------------------------------------------------------------------
 962  8E3F              ;
 963  8E3F              ;	7/11/24
 964  8E3F
 965  8E3F              Ajusta_velocidad_entidad
 966  8E3F
 967  8E3F 3A D1 8B     	ld a,(Velocidad)
 968  8E42 A7           	and a
 969  8E43 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 970  8E44              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 971  8E44              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 972  8E44
 973  8E44
 974  8E44              ; Incrementa (Contador_de_vueltas)x2.
 975  8E44              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 976  8E44
 977  8E44              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 978  8E44              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 979  8E44              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 980  8E44              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 981  8E44              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 982  8E44
 983  8E44
 984  8E44 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 985  8E46 32 D1 8B     	ld (Velocidad),a
 986  8E49 E6 10        	and $10
 987  8E4B C8           	ret z
 988  8E4C
 989  8E4C              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 990  8E4C
 991  8E4C 3A C9 8B     	ld a,(Contador_de_vueltas)
 992  8E4F CB 2F        	sra a
 993  8E51 CB 2F        	sra a
 994  8E53 32 D1 8B     	ld (Velocidad),a
 995  8E56
 996  8E56 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 997  8E59 23           	inc hl
 998  8E5A 23           	inc hl
 999  8E5B 23           	inc hl
1000  8E5C 23           	inc hl
1001  8E5D 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1002  8E60
1003  8E60 C9           	ret
1004  8E61
1005  8E61              ; --------------------------------------------------------------------------------------------------------------
1006  8E61              ;
1007  8E61              ;	25/08/24
1008  8E61
1009  8E61              Change
1010  8E61
1011  8E61 3A 32 8C     	ld a,(Switch)
1012  8E64 EE 01        	xor 1
1013  8E66 32 32 8C     	ld (Switch),a
1014  8E69 2A 17 8C     	ld hl,(Album_de_pintado)
1015  8E6C ED 5B 19 8C  	ld de,(Album_de_borrado)
1016  8E70 EB           	ex de,hl
1017  8E71 22 17 8C     	ld (Album_de_pintado),hl
1018  8E74 22 35 8C     	ld (Scanlines_album_SP),hl
1019  8E77 ED 53 19 8C  	ld (Album_de_borrado),de
1020  8E7B C9           	ret
1021  8E7C
1022  8E7C              Change_Amadeus
1023  8E7C
1024  8E7C 2A 1B 8C     	ld hl,(Album_de_pintado_Amadeus)
1025  8E7F ED 5B 1D 8C  	ld de,(Album_de_borrado_Amadeus)
1026  8E83 EB           	ex de,hl
1027  8E84 22 1B 8C     	ld (Album_de_pintado_Amadeus),hl
1028  8E87 ED 53 1D 8C  	ld (Album_de_borrado_Amadeus),de
1029  8E8B C9           	ret
1030  8E8C
1031  8E8C              Change_Disparos
1032  8E8C
1033  8E8C              ; Álbumes de Amadeus.
1034  8E8C
1035  8E8C 2A 1F 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1036  8E8F ED 5B 21 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1037  8E93 EB           	ex de,hl
1038  8E94 22 1F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1039  8E97 ED 53 21 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1040  8E9B CD C9 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1041  8E9E
1042  8E9E              ; Álbumes de entidades.
1043  8E9E
1044  8E9E 2A 23 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1045  8EA1 ED 5B 25 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1046  8EA5 EB           	ex de,hl
1047  8EA6 22 23 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1048  8EA9 ED 53 25 8C  	ld (Album_de_borrado_disparos_Entidades),de
1049  8EAD 22 27 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1050  8EB0
1051  8EB0 3A 29 8C     	ld a,(Num_de_bytes_album_de_disparos)
1052  8EB3 32 2A 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1053  8EB6
1054  8EB6 C9           	ret
1055  8EB7
1056  8EB7              ; ------------------------------------
1057  8EB7              ;
1058  8EB7              ; 1/05/24
1059  8EB7
1060  8EB7              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1061  8EB7              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1062  8EB7
1063  8EB7              ;	DESTRUYE: HL,DE,A
1064  8EB7              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1065  8EB7
1066  8EB7              ;	Variables implicadas: (RND_SP).
1067  8EB7
1068  8EB7              Extrae_numero_aleatorio_y_avanza
1069  8EB7
1070  8EB7 21 00 89     	ld hl,Tabla_de_pintado
1071  8EBA EB           	ex de,hl
1072  8EBB 2A 50 8C     	ld hl,(RND_SP)
1073  8EBE EB           	ex de,hl
1074  8EBF A7           	and a
1075  8EC0 ED 52        	sbc hl,de
1076  8EC2
1077  8EC2 2A 50 8C     	ld hl,(RND_SP)
1078  8EC5 20 06        	jr nz,1F
1079  8EC7
1080  8EC7              ; Sitúa HL al principio de la tabla de nº aleatorios.
1081  8EC7
1082  8EC7 21 F6 88     	ld hl,Numeros_aleatorios
1083  8ECA 22 50 8C     	ld (RND_SP),HL
1084  8ECD
1085  8ECD              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1086  8ECD
1087  8ECD 7E           1 ld a,(hl)
1088  8ECE 23           	inc hl
1089  8ECF 22 50 8C     	ld (RND_SP),hl
1090  8ED2 C9           	ret
1091  8ED3
1092  8ED3              ; ------------------------------------
1093  8ED3              ;
1094  8ED3              ; 1/05/24
1095  8ED3
1096  8ED3              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1097  8ED3              ; (1 a 4 segundos).
1098  8ED3              ; Actualizamos (Clock_next_entity) con A.
1099  8ED3
1100  8ED3              ;	DESTRUYE: A y B.
1101  8ED3              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1102  8ED3              ;			 Actualiza (Clock_next_entity) con A.
1103  8ED3
1104  8ED3              ;	Variables implicadas: (Clock_next_entity).
1105  8ED3
1106  8ED3              ; Notas:
1107  8ED3
1108  8ED3              ; 	$32 1 seg.
1109  8ED3              ; 	$64 2 seg.
1110  8ED3              ; 	$96 3 seg.
1111  8ED3              ; 	$c8 4 seg.
1112  8ED3              ; 	$fa 5 seg.
1113  8ED3
1114  8ED3              ; $ffff 1310,7 seg, 22 minutos.
1115  8ED3
1116  8ED3              ;	$0100  5 seg. aproximadamente.
1117  8ED3              ;	$0200 10 seg. aproximadamente.
1118  8ED3              ;	$0300 15 seg. aproximadamente.
1119  8ED3              ;	$0400 20 seg. aproximadamente.
1120  8ED3              ;	$0500 25 seg. aproximadamente.
1121  8ED3              ;	$0600 30 seg. aproximadamente.
1122  8ED3
1123  8ED3              Define_Clock_next_entity
1124  8ED3
1125  8ED3 FE 34        	cp $34
1126  8ED5 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1127  8ED7
1128  8ED7              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1129  8ED7
1130  8ED7 4F           3 ld c,a
1131  8ED8 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1132  8EDA 2A 78 5C     	ld hl,(FRAMES)
1133  8EDD A7           	and a
1134  8EDE ED 4A        	adc hl,bc
1135  8EE0 22 55 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1136  8EE3 C9           	ret
1137  8EE4
1138  8EE4 3E 34        1 ld a,$34
1139  8EE6 18 EF        	jr 3B
1140  8EE8
1141  8EE8              ; ------------------------------------
1142  8EE8              ;
1143  8EE8              ; 18/03/24
1144  8EE8
1145  8EE8              Borra_diferencia
1146  8EE8
1147  8EE8 ED 4B 35 8C  	ld bc,(Scanlines_album_SP)
1148  8EEC
1149  8EEC 3A 32 8C     	ld a,(Switch)
1150  8EEF A7           	and a
1151  8EF0 28 08        	jr z,2F
1152  8EF2
1153  8EF2 2A 30 8C     	ld hl,(Techo_Scanlines_album_2)
1154  8EF5 11 30 8C     	ld de,Techo_Scanlines_album_2
1155  8EF8 18 06        	jr 3F
1156  8EFA
1157  8EFA 2A 2E 8C     2 ld hl,(Techo_Scanlines_album)
1158  8EFD 11 2E 8C     	ld de,Techo_Scanlines_album
1159  8F00
1160  8F00              ; Diferencia.
1161  8F00
1162  8F00 ED 42        3 sbc hl,bc
1163  8F02
1164  8F02 C8           	ret z
1165  8F03 D8           	ret c
1166  8F04
1167  8F04              ; Nuevo techo, (más bajo que el anterior).
1168  8F04              ; Fijamos nuevo techo y borramos bytes sobrantes.
1169  8F04
1170  8F04 EB           	ex de,hl
1171  8F05
1172  8F05 71           	ld (hl),c
1173  8F06 2C           	inc l
1174  8F07 70           	ld (hl),b
1175  8F08
1176  8F08 AF           	xor a
1177  8F09 43           	ld b,e
1178  8F0A
1179  8F0A 2A 35 8C     	ld hl,(Scanlines_album_SP)
1180  8F0D
1181  8F0D 77           1 ld (hl),a
1182  8F0E 23           	inc hl
1183  8F0F 10 FC        	djnz 1B
1184  8F11
1185  8F11              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1186  8F11
1187  8F11 21 3B 8C     	ld hl,Ctrl_3
1188  8F14 CB DE        	set 3,(hl)
1189  8F16
1190  8F16 C9           	ret
1191  8F17
1192  8F17              ; --------------------------------------------------------------------------------------------------------------
1193  8F17              ;
1194  8F17              ;	26/3/24
1195  8F17
1196  8F17              Recauda_informacion_de_entidad_en_curso
1197  8F17
1198  8F17              ; Almacena la Coordenada Y de la entidad en curso.
1199  8F17
1200  8F17              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1201  8F17
1202  8F17 3A C8 8B     	ld a,(Coordenada_y)
1203  8F1A 2A 37 8C     	ld hl,(India_SP)
1204  8F1D 77           	ld (hl),a
1205  8F1E 2C           	inc l
1206  8F1F
1207  8F1F              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1208  8F1F
1209  8F1F ED 5B 35 8C  	ld de,(Scanlines_album_SP)
1210  8F23
1211  8F23 73           	ld (hl),e
1212  8F24 2C           	inc l
1213  8F25 72           	ld (hl),d
1214  8F26 2C           	inc l
1215  8F27
1216  8F27 22 37 8C     	ld (India_SP),hl
1217  8F2A
1218  8F2A C9           	ret
1219  8F2B
1220  8F2B              ; --------------------------------------------------------------------------------------------------------------
1221  8F2B              ;
1222  8F2B              ;	27/03/24
1223  8F2B              ;
1224  8F2B
1225  8F2B              Inicializa_India_y_limpia_Tabla_de_impresion
1226  8F2B
1227  8F2B 2A 37 8C     	ld hl,(India_SP)
1228  8F2E 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1229  8F31
1230  8F31 79           	ld a,c
1231  8F32 95           	sub l
1232  8F33 28 06        	jr z,2F
1233  8F35 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1234  8F36              ;														; _ y pasamos a inicializar (India_SP).
1235  8F36 AF           	xor a
1236  8F37
1237  8F37 77           1 ld (hl),a
1238  8F38 2C           	inc l
1239  8F39 10 FC        	djnz 1B												; Limpia Tabla.
1240  8F3B
1241  8F3B 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1242  8F3E 22 37 8C     	ld (India_SP),hl
1243  8F41
1244  8F41 C9           	ret
1245  8F42
1246  8F42              ; --------------------------------------------------------------------------------------------------------------
1247  8F42              ;
1248  8F42              ;	31/3/24
1249  8F42
1250  8F42              Ordena_tabla_de_impresion
1251  8F42
1252  8F42              ; 5794 T/states.
1253  8F42              ; 6278 T/states.
1254  8F42              ; 5310 T/states.
1255  8F42
1256  8F42              ; Inicializamos punteros (India_SP) e (India_2_SP).
1257  8F42              ; Inicializamos contador de comparaciones, [C].
1258  8F42              ; Cargamos los registros A y B para efectuar comparación.
1259  8F42
1260  8F42 FD 2E 00     	ld iyl,0
1261  8F45
1262  8F45 3A 0E 8C     	ld a,(Entidades_en_curso)
1263  8F48 FE 04        	cp 4 	;	4
1264  8F4A D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1265  8F4B
1266  8F4B 3D           	dec a
1267  8F4C 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1268  8F4D 51           	ld d,c 										; Copia de respaldo.
1269  8F4E
1270  8F4E 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1271  8F4F
1272  8F4F 21 03 89     	ld hl,Tabla_de_pintado+3
1273  8F52 46           	ld b,(hl)
1274  8F53 22 39 8C     	ld (India_2_SP),hl
1275  8F56
1276  8F56 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1277  8F57 DC 7F 8F     	call c, Avanza_India_2_SP
1278  8F5A CC 7F 8F     	call z, Avanza_India_2_SP
1279  8F5D
1280  8F5D FD 2D        	dec iyl
1281  8F5F 28 18        	jr z,2F
1282  8F61
1283  8F61
1284  8F61              ; --------------------------------------------------------------------------------------------------------------
1285  8F61              ;
1286  8F61              ;	7/4/24
1287  8F61
1288  8F61              Trueque
1289  8F61
1290  8F61              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1291  8F61              ;  			A contiene en nº de fila de (India_SP).
1292  8F61              ;			HL contiene (India_2_SP).
1293  8F61
1294  8F61 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1295  8F62 E5           	push hl										; Preservo (India_2_SP).
1296  8F63
1297  8F63 ED 5B 37 8C  	ld de,(India_SP)
1298  8F67 EB           	ex de,hl
1299  8F68 70           	ld (hl),b
1300  8F69 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1301  8F6A
1302  8F6A CD AB 8F     	call Intercambia_1_byte
1303  8F6D CD AB 8F     	call Intercambia_1_byte
1304  8F70
1305  8F70
1306  8F70              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1307  8F70              ; Recuperamos (India_2_SP) en HL.
1308  8F70
1309  8F70 2A 37 8C     	ld hl,(India_SP)
1310  8F73 7E           	ld a,(hl)
1311  8F74
1312  8F74 E1           	pop hl
1313  8F75 D1           	pop de
1314  8F76
1315  8F76              ; --------------------------------------------------------------------------------------------------------------
1316  8F76
1317  8F76 CD 7F 8F     	call Avanza_India_2_SP
1318  8F79
1319  8F79 14           2 inc d
1320  8F7A 15           	dec d
1321  8F7B C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1322  8F7C 18 D8        	jr 1B
1323  8F7E
1324  8F7E C9           	ret
1325  8F7F
1326  8F7F              ; ----- ----- ----- ----- -----
1327  8F7F
1328  8F7F              Avanza_India_2_SP
1329  8F7F
1330  8F7F 0D           	dec c
1331  8F80 28 0A        	jr z,Avanza_punteros_indios
1332  8F82
1333  8F82 FD 2C        	inc iyl
1334  8F84
1335  8F84 2C           	inc l
1336  8F85 2C           	inc l
1337  8F86 2C           	inc l
1338  8F87
1339  8F87 46           	ld b,(hl)
1340  8F88 22 39 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1341  8F8B
1342  8F8B C9           	ret
1343  8F8C
1344  8F8C              ; ----- ----- ----- ----- -----
1345  8F8C
1346  8F8C              Avanza_punteros_indios
1347  8F8C
1348  8F8C 15           	dec d
1349  8F8D 28 15        	jr z,Prepara_salida
1350  8F8F
1351  8F8F 4A           	ld c,d
1352  8F90
1353  8F90 2A 37 8C     	ld hl,(India_SP)
1354  8F93 2C           	inc l
1355  8F94 2C           	inc l
1356  8F95 2C           	inc l
1357  8F96 7E           	ld a,(hl)
1358  8F97 22 37 8C     	ld (India_SP),hl
1359  8F9A
1360  8F9A 2C           	inc l
1361  8F9B 2C           	inc l
1362  8F9C 2C           	inc l
1363  8F9D 46           	ld b,(hl)
1364  8F9E 22 39 8C     	ld (India_2_SP),hl
1365  8FA1
1366  8FA1 FD 2C        	inc iyl
1367  8FA3
1368  8FA3 C9           	ret
1369  8FA4
1370  8FA4              Prepara_salida
1371  8FA4
1372  8FA4 21 00 89     	ld hl,Tabla_de_pintado
1373  8FA7 22 37 8C     	ld (India_SP),hl
1374  8FAA C9           	ret
1375  8FAB
1376  8FAB
1377  8FAB 2C           Intercambia_1_byte inc l
1378  8FAC 1C           	inc e
1379  8FAD 46           	ld b,(hl)
1380  8FAE 1A           	ld a,(de)
1381  8FAF EB           	ex de,hl
1382  8FB0 70           	ld (hl),b
1383  8FB1 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1384  8FB2 C9           	ret
1385  8FB3
1386  8FB3              ; -----------------------------------------------------------------------------------
1387  8FB3              ;
1388  8FB3              ;	20/01/24
1389  8FB3              ;
1390  8FB3              ;
1391  8FB3
1392  8FB3              Construye_movimientos_masticados_entidad
1393  8FB3
1394  8FB3 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1395  8FB6 E5           	push hl
1396  8FB7 CD FA 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1397  8FBA              ;															; _ el (Contador_de_mov_masticados).
1398  8FBA CD C5 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1399  8FBD              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1400  8FBD CD F6 99     	call Recompone_posicion_inicio
1401  8FC0
1402  8FC0 CD 26 97     1 call Draw
1403  8FC3 CD DF 8F     	call Guarda_movimiento_masticado
1404  8FC6
1405  8FC6 CD A3 9D     	call Movimiento
1406  8FC9
1407  8FC9 3A 3B 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1408  8FCC CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1409  8FCE 28 F0        	jr z,1B
1410  8FD0
1411  8FD0              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1412  8FD0              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1413  8FD0
1414  8FD0 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1415  8FD1 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1416  8FD4
1417  8FD4              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1418  8FD4
1419  8FD4 CD 07 9F     	call Situa_en_contador_general_de_mov_masticados
1420  8FD7
1421  8FD7              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1422  8FD7              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1423  8FD7
1424  8FD7 ED 4B CF 8B  	ld bc,(Contador_de_mov_masticados)
1425  8FDB
1426  8FDB 71           	ld (hl),c
1427  8FDC 23           	inc hl
1428  8FDD 70           	ld (hl),b
1429  8FDE
1430  8FDE C9           	ret
1431  8FDF
1432  8FDF              ; -----------------------------------------------------------------------------------
1433  8FDF              ;
1434  8FDF              ;	28/12/23
1435  8FDF              ;
1436  8FDF              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1437  8FDF              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1438  8FDF
1439  8FDF              Guarda_movimiento_masticado
1440  8FDF
1441  8FDF ED 73 13 8C  	ld (Stack),sp
1442  8FE3 ED 7B CD 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1443  8FE7
1444  8FE7 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1445  8FE9 FD E5            push iy 												; Pushea Puntero_objeto.
1446  8FEB
1447  8FEB ED 7B 13 8C      ld sp,(Stack)
1448  8FEF
1449  8FEF 2A CF 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1450  8FF2 23           	inc hl
1451  8FF3 22 CF 8B     	ld (Contador_de_mov_masticados),hl
1452  8FF6
1453  8FF6 CD FA 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1454  8FF9              ;															; _ el (Contador_de_mov_masticados).
1455  8FF9 C9               ret
1456  8FFA
1457  8FFA              ; --------------------------------------------------------------------------------------------------------------
1458  8FFA              ;
1459  8FFA              ;	12/1/24
1460  8FFA              ;
1461  8FFA              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1462  8FFA
1463  8FFA              Actualiza_Puntero_de_almacen_de_mov_masticados
1464  8FFA
1465  8FFA 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1466  8FFD 01 04 00     	ld bc,4
1467  9000 A7           	and a
1468  9001 ED 4A        	adc hl,bc
1469  9003 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1470  9006 C9           	ret
1471  9007
1472  9007              ; --------------------------------------------------------------------------------------------------------------
1473  9007              ;
1474  9007              ;	24/03/24
1475  9007              ;
1476  9007              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1477  9007              ;
1478  9007              ;	IX contiene el puntero de impresión.
1479  9007              ;	DE contiene (Puntero_objeto).
1480  9007
1481  9007
1482  9007              Cargamos_registros_con_mov_masticado
1483  9007
1484  9007 ED 73 13 8C  	ld (Stack),sp
1485  900B ED 7B CD 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1486  900F
1487  900F D1           	pop de 															; DE contiene Puntero_objeto
1488  9010 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1489  9012
1490  9012 ED 73 CD 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1491  9016 ED 7B 13 8C  	ld sp,(Stack)
1492  901A
1493  901A 7B           	ld a,e
1494  901B 82           	add d															; Comprueba si ya no hay datos en el almacén.
1495  901C
1496  901C CC B5 93     	call z,Reinicia_entidad_maliciosa
1497  901F
1498  901F C9           	ret
1499  9020
1500  9020              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1501  9020              ;
1502  9020              ;	22/7/24
1503  9020
1504  9020              Cargamos_registros_con_explosion
1505  9020
1506  9020
1507  9020 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1508  9023 CD BF 90     	call Extrae_address
1509  9026
1510  9026 5D           	ld e,l
1511  9027 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1512  9028
1513  9028 DD 2A CB 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1514  902C
1515  902C C9           	ret
1516  902D
1517  902D
1518  902D              Cargamos_registros_con_explosion_Amadeus
1519  902D
1520  902D 2A 74 89     	ld hl,(Pamm_Amadeus)
1521  9030 CD BF 90     	call Extrae_address
1522  9033
1523  9033 5D           	ld e,l
1524  9034 54           	ld d,h
1525  9035
1526  9035 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1527  9039
1528  9039 C9           	ret
1529  903A
1530  903A              ; --------------------------------------------------------------------------------------------------------------
1531  903A              ;
1532  903A              ;	17/06/24
1533  903A              ;
1534  903A              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1535  903A              ;
1536  903A              ;	IX contiene el puntero de impresión.
1537  903A              ;	DE contiene (Puntero_objeto).
1538  903A
1539  903A
1540  903A              Cargamos_registros_con_mov_masticado_Amadeus
1541  903A
1542  903A ED 73 13 8C  	ld (Stack),sp
1543  903E ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1544  9042 D1           	pop de 															; DE contiene Puntero_objeto
1545  9043 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1546  9045 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1547  9049 ED 7B 13 8C  	ld sp,(Stack)
1548  904D C9           	ret
1549  904E
1550  904E              ; ---------------------------------------------------------------------------------------------------------------------
1551  904E              ;
1552  904E              ;	18/6/24
1553  904E              ;
1554  904E              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1555  904E
1556  904E              Genera_datos_de_impresion_Amadeus
1557  904E
1558  904E 3A 71 89     	ld a,(Impacto_Amadeus)
1559  9051 A7           	and a
1560  9052 20 03        	jr nz,1F
1561  9054
1562  9054              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1563  9054              ; _apuntando a la correspondiente explosión.
1564  9054
1565  9054 CD 3A 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1566  9057
1567  9057 DD 7D        1 ld a,ixl
1568  9059 E6 1F        	and $1f
1569  905B 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1570  905E
1571  905E 2A 35 8C     	ld hl,(Scanlines_album_SP)
1572  9061 E5           	push hl
1573  9062
1574  9062 2A 1B 8C     	ld hl,(Album_de_pintado_Amadeus)
1575  9065 22 35 8C     	ld (Scanlines_album_SP),hl
1576  9068
1577  9068 CD 0A 95     	call Genera_datos_de_impresion
1578  906B
1579  906B E1           	pop hl
1580  906C 22 35 8C     	ld (Scanlines_album_SP),hl
1581  906F
1582  906F C9           	ret
1583  9070
1584  9070              ; ---------------------------------------------------------------------------------------------------------------------
1585  9070              ;
1586  9070              ;	13/03/24
1587  9070              ;
1588  9070              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1589  9070
1590  9070              Inicia_albumes_de_lineas
1591  9070
1592  9070 21 00 80     	ld hl,Scanlines_album
1593  9073 22 17 8C     	ld (Album_de_pintado),hl
1594  9076 22 35 8C     	ld (Scanlines_album_SP),hl
1595  9079
1596  9079 21 1A 81     	ld hl,Scanlines_album_2
1597  907C 22 19 8C     	ld (Album_de_borrado),hl
1598  907F
1599  907F C9           	ret
1600  9080
1601  9080              Inicia_albumes_de_lineas_Amadeus
1602  9080
1603  9080 21 34 82     	ld hl,Amadeus_scanlines_album
1604  9083 22 1B 8C     	ld (Album_de_pintado_Amadeus),hl
1605  9086 21 58 82     	ld hl,Amadeus_scanlines_album_2
1606  9089 22 1D 8C     	ld (Album_de_borrado_Amadeus),hl
1607  908C
1608  908C C9           	ret
1609  908D
1610  908D              Inicia_albumes_de_disparos
1611  908D
1612  908D 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1613  9090 22 1F 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1614  9093 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1615  9096 22 21 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1616  9099
1617  9099 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1618  909C 22 23 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1619  909F 22 27 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1620  90A2
1621  90A2 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1622  90A5 22 25 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1623  90A8
1624  90A8 C9           	ret
1625  90A9
1626  90A9              ; ---------------------------------------------------------------------------------------------------------------------
1627  90A9              ;
1628  90A9              ; 8/1/23
1629  90A9              ;
1630  90A9              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1631  90A9              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1632  90A9              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1633  90A9
1634  90A9              ; Destruye HL y DE !!!!!
1635  90A9
1636  90A9              Inicia_punteros_de_cajas
1637  90A9
1638  90A9 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1639  90AC CD BF 90         call Extrae_address
1640  90AF 22 06 8C         ld (Puntero_store_caja),hl
1641  90B2 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1642  90B5 22 0A 8C     	ld (Indice_restore_caja),hl
1643  90B8 CD BF 90     	call Extrae_address
1644  90BB 22 08 8C     	ld (Puntero_restore_caja),hl
1645  90BE C9               ret
1646  90BF
1647  90BF              ; *************************************************************************************************************************************************************
1648  90BF
1649  90BF              ;
1650  90BF              ; 20/10/22
1651  90BF              ;
1652  90BF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1653  90BF              ;
1654  90BF              ; Destruye el puntero y DE !!!!!
1655  90BF
1656  90BF 5E           Extrae_address ld e,(hl)
1657  90C0 23           	inc hl
1658  90C1 56           	ld d,(hl)
1659  90C2 2B           	dec hl
1660  90C3 EB           	ex de,hl
1661  90C4 C9           	ret
1662  90C5
1663  90C5              ; *************************************************************************************************************************************************************
1664  90C5              ;
1665  90C5              ;	20/1/24
1666  90C5              ;
1667  90C5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1668  90C5              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1669  90C5              ;
1670  90C5              ;   Destruye HL y BC !!!!!,
1671  90C5              ;
1672  90C5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1673  90C5              ;					"0" ..... Izquierda.
1674  90C5
1675  90C5              Inicia_Puntero_objeto
1676  90C5
1677  90C5 3A E5 8B     	ld a,(Cuad_objeto)
1678  90C8 E6 01        	and 1
1679  90CA F5           	push af
1680  90CB CC E7 90     	call z,Inicia_puntero_objeto_izq
1681  90CE F1           	pop af
1682  90CF C8           	ret z
1683  90D0 CD D4 90     	call Inicia_puntero_objeto_der
1684  90D3 C9           	ret
1685  90D4
1686  90D4              ; Arrancamos desde la parte izquierda de la pantalla.
1687  90D4              ; Iniciamos (Indice_Sprite_der).
1688  90D4
1689  90D4 2A DB 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1690  90D7 22 DF 8B     	ld (Puntero_DESPLZ_der),hl
1691  90DA CD BF 90     	call Extrae_address
1692  90DD 22 D8 8B     	ld (Puntero_objeto),hl
1693  90E0
1694  90E0 2A DD 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1695  90E3 22 E1 8B     	ld (Puntero_DESPLZ_izq),hl
1696  90E6 C9           	ret
1697  90E7
1698  90E7              ; Arrancamos desde la parte derecha de la pantalla.
1699  90E7              ; Iniciamos (Indice_Sprite_izq).
1700  90E7
1701  90E7 2A DD 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1702  90EA 22 E1 8B     	ld (Puntero_DESPLZ_izq),hl
1703  90ED CD BF 90     	call Extrae_address
1704  90F0 22 D8 8B     	ld (Puntero_objeto),hl
1705  90F3
1706  90F3 2A DB 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1707  90F6 22 DF 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1708  90F9 C9           	ret
1709  90FA
1710  90FA              ; **************************************************************************************************
1711  90FA              ;
1712  90FA              ;	06/07/24
1713  90FA              ;
1714  90FA              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1715  90FA
1716  90FA              Restore_entidad
1717  90FA
1718  90FA 2A 06 8C     	ld hl,(Puntero_store_caja)
1719  90FD 7E           	ld a,(hl)
1720  90FE A7           	and a
1721  90FF CC 0D 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1722  9102 28 F6        	jr z,Restore_entidad
1723  9104
1724  9104 11 C6 8B     	ld de,Bandeja_DRAW
1725  9107 01 0C 00     	ld bc,12
1726  910A ED B0        	ldir
1727  910C C9           	ret
1728  910D
1729  910D              ; **************************************************************************************************
1730  910D              ;
1731  910D              ;	08/05/23
1732  910D              ;
1733  910D              ;	Incrementamos los dos punteros de entidades. (+1).
1734  910D
1735  910D              Incrementa_punteros_de_cajas
1736  910D
1737  910D 2A 08 8C     	ld hl,(Puntero_restore_caja)
1738  9110 22 06 8C     	ld (Puntero_store_caja),hl
1739  9113 2A 0A 8C     	ld hl,(Indice_restore_caja)
1740  9116 23           	inc hl
1741  9117 23           	inc hl
1742  9118 22 0A 8C     	ld (Indice_restore_caja),hl
1743  911B CD BF 90         call Extrae_address
1744  911E 22 08 8C         ld (Puntero_restore_caja),hl
1745  9121 C9               ret
1746  9122
1747  9122              ; -----------------------------------------------------------
1748  9122
1749  9122              ; Teclado.
1750  9122
1751  9122 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1752  9124 DB FE        	in a,($fe)
1753  9126 E6 01        	and $01
1754  9128 28 02        	jr z,1f
1755  912A 18 F6        	jr Pulsa_ENTER
1756  912C C9           1 ret
1757  912D
1758  912D              ; **************************************************************************************************
1759  912D              ;
1760  912D              ; Temporización.
1761  912D
1762  912D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1763  912D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1764  912D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1765  912D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1766  912D
1767  912D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1768  912D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1769  912D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1770  912D
1771  912D              ; A partir de $4f61 no hace falta DELAY.
1772  912D
1773  912D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1774  912D
1775  912D              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1776  912D              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1777  912D              ;	LD A,B
1778  912D              ;	AND A
1779  912D              ;	JR NZ,wait
1780  912D              ;	RET
1781  912D
1782  912D              ; ---------------------------------------------------------------------------------------------------------------
1783  912D              ;
1784  912D              ;	13/07/24
1785  912D              ;
1786  912D
1787  912D              Inicia_Shield
1788  912D
1789  912D 21 5F 8C     	ld hl,Datos_Shield
1790  9130 22 63 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1791  9133
1792  9133 7E           	ld a,(hl)
1793  9134 32 66 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1794  9137
1795  9137 3E 01        	ld a,1
1796  9139 32 67 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1797  913C
1798  913C C9           	ret
1799  913D
1800  913D              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1801  913D              ;
1802  913D              ;	4/6/24
1803  913D              ;
1804  913D              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1805  913D              ;
1806  913D              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1807  913D              ;
1808  913D
1809  913D              Actualiza_pantalla
1810  913D
1811  913D 3E 02        	ld a,2
1812  913F D3 FE        	out ($fe),a
1813  9141
1814  9141 3A 3B 8C     	ld a,(Ctrl_3)
1815  9144 CB 57        	bit 2,a
1816  9146 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1817  9148
1818  9148              Borrando_entidades
1819  9148
1820  9148 2A 35 8C     	ld hl,(Scanlines_album_SP)
1821  914B CD BF 90     	call Extrae_address
1822  914E 24           	inc h
1823  914F 25           	dec h
1824  9150 28 05        	jr z,Pintando_entidades
1825  9152 CD 03 96     	call Pinta_Sprites
1826  9155 18 F1        	jr Borrando_entidades
1827  9157
1828  9157              Pintando_entidades
1829  9157
1830  9157 2A 37 8C     	ld hl,(India_SP)
1831  915A 2C           	inc l
1832  915B CD BF 90     	call Extrae_address
1833  915E 24           	inc h
1834  915F 25           	dec h
1835  9160 28 0E        	jr z,Ejecuta_escudo
1836  9162 1C           	inc e
1837  9163 1C           	inc e
1838  9164 ED 53 37 8C  	ld (India_SP),de
1839  9168 CD BF 90     	call Extrae_address
1840  916B CD 03 96     	call Pinta_Sprites
1841  916E 18 E7        	jr Pintando_entidades
1842  9170
1843  9170              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1844  9170
1845  9170              Ejecuta_escudo
1846  9170
1847  9170 3A 65 8C     	ld a,(Shield)
1848  9173 A7           	and a
1849  9174 20 2F        	jr nz,Aplica_Shield
1850  9176
1851  9176              Borrando_Amadeus
1852  9176
1853  9176 21 3B 8C     	ld hl,Ctrl_3
1854  9179 CB 6E        	bit 5,(hl)
1855  917B 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1856  917D
1857  917D 2A 1D 8C     	ld hl,(Album_de_borrado_Amadeus)
1858  9180 CD BF 90     	call Extrae_address
1859  9183 24           	inc h
1860  9184 25           	dec h
1861  9185 28 03        	jr z,Pintando_Amadeus
1862  9187 CD 03 96     	call Pinta_Sprites
1863  918A
1864  918A              Pintando_Amadeus
1865  918A
1866  918A 2A 1B 8C     	ld hl,(Album_de_pintado_Amadeus)
1867  918D CD BF 90     	call Extrae_address
1868  9190 24           	inc h
1869  9191 25           	dec h
1870  9192 28 03        	jr z,1F
1871  9194 CD 03 96     	call Pinta_Sprites
1872  9197
1873  9197              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1874  9197
1875  9197 21 3B 8C     1 ld hl,Ctrl_3
1876  919A CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1877  919C CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1878  919E CB AE        	res 5,(hl)
1879  91A0
1880  91A0 3E 01        	ld a,1												; Borde azul.
1881  91A2 D3 FE        	out ($fe),a
1882  91A4
1883  91A4 C9           	ret
1884  91A5
1885  91A5              Aplica_Shield
1886  91A5
1887  91A5              ;	Bit 1 "1" (Shield_3) Sólo borra.
1888  91A5              ;		  "0"     ""     Borra/Pinta.
1889  91A5              ;	Bit 2    ""  RET.	 No borra, no pinta.
1890  91A5
1891  91A5 21 67 8C     	ld hl,Shield_3
1892  91A8
1893  91A8 CB 5E        	bit 3,(hl)
1894  91AA 20 DE        	jr nz,Pintando_Amadeus
1895  91AC
1896  91AC CB 56        	bit 2,(hl)
1897  91AE 20 E7        	jr nz,1B
1898  91B0
1899  91B0 CB 4E        	bit 1,(hl)
1900  91B2 C4 B9 91     	call nz,Borra_Amadeus_shield
1901  91B5
1902  91B5 28 BF        	jr z,Borrando_Amadeus
1903  91B7 18 DE        	jr 1B
1904  91B9
1905  91B9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1906  91B9
1907  91B9              Borra_Amadeus_shield
1908  91B9
1909  91B9 3A 3B 8C     	ld a,(Ctrl_3)
1910  91BC CB 6F        	bit 5,a
1911  91BE 28 08        	jr z,1F
1912  91C0
1913  91C0 2A 1D 8C     	ld hl,(Album_de_borrado_Amadeus)
1914  91C3 CD BF 90     	call Extrae_address
1915  91C6 18 06        	jr 2F
1916  91C8
1917  91C8 2A 1B 8C     1 ld hl,(Album_de_pintado_Amadeus)
1918  91CB CD BF 90     	call Extrae_address
1919  91CE
1920  91CE CD 03 96     2 call Pinta_Sprites
1921  91D1
1922  91D1 AF           	xor a
1923  91D2 3C           	inc a											; Asegura NZ en la salida de la rutina.
1924  91D3
1925  91D3 C9           	ret
1926  91D4
1927  91D4              Pinta_Amadeus_shield
1928  91D4
1929  91D4 2A 1B 8C     	ld hl,(Album_de_pintado_Amadeus)
1930  91D7 CD BF 90     	call Extrae_address
1931  91DA CD 03 96     	call Pinta_Sprites
1932  91DD
1933  91DD AF           	xor a
1934  91DE 3C           	inc a											; Asegura NZ en la salida de la rutina.
1935  91DF
1936  91DF C9           	ret
1937  91E0
1938  91E0              Borra_Pinta_Amadeus_shield
1939  91E0
1940  91E0 CD B9 91     	call Borra_Amadeus_shield
1941  91E3 CD D4 91     	call Pinta_Amadeus_shield
1942  91E6 C9           	ret
1943  91E7
1944  91E7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1945  91E7              ;
1946  91E7              ;	19/6/24
1947  91E7              ;
1948  91E7
1949  91E7              Teclado
1950  91E7
1951  91E7              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1952  91E7
1953  91E7 3E F7        	ld a,$f7												; "5" para disparar.
1954  91E9 DB FE        	in a,($fe)
1955  91EB E6 10        	and $10
1956  91ED
1957  91ED CC 9D A2     	call z,Genera_disparo_Amadeus
1958  91F0
1959  91F0 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1960  91F2 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1961  91F4 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1962  91F6 CC 70 9D         call z,Amadeus_a_izquierda
1963  91F9
1964  91F9 3E F7        	ld a,$f7
1965  91FB DB FE        	in a,($fe)
1966  91FD E6 01        	and $01
1967  91FF C8           	ret z
1968  9200
1969  9200 3E F7        	ld a,$f7
1970  9202 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1971  9204 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1972  9206 CC 88 9D     	call z,Amadeus_a_derecha
1973  9209
1974  9209 C9           	ret
1975  920A
1976  920A              ; ------------------------------------------------------------------------------------------------------------------------
1977  920A              ;
1978  920A              ;	06/07/24
1979  920A              ;
1980  920A
1981  920A              Genera_explosion
1982  920A
1983  920A 21 4D 8C     	ld hl,Clock_explosion
1984  920D 35           	dec (hl)
1985  920E 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1986  9210
1987  9210              Borra_entidad_colisionada
1988  9210
1989  9210 CD 17 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1990  9213 CD 20 90     	call Cargamos_registros_con_explosion
1991  9216 CD 0A 95     	call Genera_datos_de_impresion
1992  9219
1993  9219 AF           	xor a
1994  921A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1995  921B
1996  921B C9           	ret
1997  921C
1998  921C              Siguiente_frame_explosion
1999  921C
2000  921C 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2001  921E
2002  921E              ; Avanza Frame de explosión.
2003  921E
2004  921E 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2005  9221 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2006  9224
2007  9224 79           	ld a,c
2008  9225 95           	sub l
2009  9226 20 0B        	jr nz,1F
2010  9228
2011  9228              ; Fín de la entidad !!!!!!!!!!!!!
2012  9228
2013  9228 21 0D 8C     	ld hl,Numero_parcial_de_entidades
2014  922B 35           	dec (hl)
2015  922C 23           	inc hl
2016  922D 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2017  922E
2018  922E CD 8A 93     	call Limpiamos_bandeja_DRAW
2019  9231 18 DD        	jr Borra_entidad_colisionada
2020  9233
2021  9233 23           1 inc hl
2022  9234 23           	inc hl
2023  9235 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2024  9238 18 D6        	jr Borra_entidad_colisionada
2025  923A
2026  923A              ; ----- ----- ----- ----- -----
2027  923A
2028  923A              Genera_explosion_Amadeus
2029  923A
2030  923A 21 4E 8C     	ld hl,Clock_explosion_Amadeus
2031  923D 35           	dec (hl)
2032  923E 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2033  9240
2034  9240              Borra_Amadeus_impactado
2035  9240
2036  9240 CD 7C 8E     	call Change_Amadeus
2037  9243 CD 2D 90     	call Cargamos_registros_con_explosion_Amadeus
2038  9246 CD 4E 90     	call Genera_datos_de_impresion_Amadeus
2039  9249
2040  9249 21 3B 8C     	ld hl,Ctrl_3
2041  924C CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2042  924E
2043  924E AF           	xor a
2044  924F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2045  9250
2046  9250 C9           	ret
2047  9251
2048  9251              Siguiente_frame_explosion_Amadeus
2049  9251
2050  9251 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2051  9253
2052  9253              ; Avanza Frame de explosión.
2053  9253
2054  9253 2A 74 89     	ld hl,(Pamm_Amadeus)
2055  9256 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2056  9259
2057  9259 79           	ld a,c
2058  925A 95           	sub l
2059  925B 20 0B        	jr nz,1F
2060  925D
2061  925D              ; Fín de Amadeus !!!!!!!!!!!!!
2062  925D              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2063  925D
2064  925D AF           	xor a
2065  925E 32 71 89     	ld (Impacto_Amadeus),a
2066  9261 21 3B 8C     	ld hl,Ctrl_3
2067  9264 CB F6        	set 6,(hl)
2068  9266
2069  9266 18 D8        	jr Borra_Amadeus_impactado
2070  9268
2071  9268 23           1 inc hl
2072  9269 23           	inc hl
2073  926A 22 74 89     	ld (Pamm_Amadeus),hl
2074  926D 18 D1        	jr Borra_Amadeus_impactado
2075  926F
2076  926F              ; ---------------------------------------------------------------
2077  926F
2078  926F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 926F              ; ******************************************************************************************************************************************************************************************
   2+ 926F              ;
   3+ 926F              ;   21/04/24
   4+ 926F              ;
   5+ 926F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 926F              ;   (XOR) bit a bit.
   7+ 926F              ;
   8+ 926F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 926F
  10+ 926F              Derivando_RND
  11+ 926F
  12+ 926F 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9272
  14+ 9272 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9274 C5               push bc
  16+ 9275              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9275 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9278              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9278
  20+ 9278 A7           6 and a                                 ; Carry a "0".
  21+ 9279 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 927B 30 02            jr nc,1F
  23+ 927D
  24+ 927D CB C1            set 0,c
  25+ 927F
  26+ 927F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9280 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9282 5F               ld e,a
  29+ 9283
  30+ 9283 7A               ld a,d
  31+ 9284 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9286 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9288
  34+ 9288 CB 3F            srl a
  35+ 928A
  36+ 928A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 928B
  38+ 928B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 928C 28 04            jr z,4F
  40+ 928E
  41+ 928E CB FF            set 7,a
  42+ 9290 18 02            jr 5F
  43+ 9292
  44+ 9292 CB BF        4 res 7,a
  45+ 9294
  46+ 9294 CB 21        5 sla c
  47+ 9296 10 E0            djnz 6B
  48+ 9298
  49+ 9298 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9299
  51+ 9299 77               ld (hl),a
  52+ 929A 23               inc hl
  53+ 929B C1               pop bc
  54+ 929C 10 D4            djnz 3B
  55+ 929E
  56+ 929E C9               ret
  57+ 929F
  58+ 929F
  59+ 929F
# file closed: RND_Derivando.asm
2079  929F              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 929F              ;---------------------------------------------------------------------------------------------------------------
   2+ 929F              ;
   3+ 929F              ;   8/3/24
   4+ 929F              ;
   5+ 929F              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 929F              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 929F              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 929F              ;	_ de la 1ª entidad del Nivel.
   9+ 929F              ;
  10+ 929F              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 929F
  12+ 929F              ;	MODIFICA: HL,DE y A.
  13+ 929F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 929F
  15+ 929F              Inicializa_Nivel
  16+ 929F
  17+ 929F 2A 5B 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92A2 CD BF 90     	call Extrae_address
  19+ 92A5 7E           	ld a,(hl)
  20+ 92A6 32 0C 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A9 23           	inc hl
  22+ 92AA CD B7 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92AD 22 5D 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92B0 CD C0 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B3
  26+ 92B3 CD D1 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92B6 C9           	ret
  28+ 92B7
  29+ 92B7              ; ----------------------
  30+ 92B7
  31+ 92B7 11 EB 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92BA 01 04 00     	ld bc,4
  33+ 92BD ED B0        	ldir
  34+ 92BF C9           	ret
  35+ 92C0
  36+ 92C0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C1 CD 5B 94         call Calcula_salto_en_BC
  38+ 92C4 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92C7 A7               and a
  40+ 92C8 ED 4A            adc hl,bc
  41+ 92CA CD BF 90         call Extrae_address
  42+ 92CD 22 F7 8B         ld (Puntero_indice_mov),hl
  43+ 92D0 C9               ret
  44+ 92D1
  45+ 92D1 3A C6 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D4 CD 5B 94     	call Calcula_salto_en_BC
  47+ 92D7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92DA A7               and a
  49+ 92DB ED 4A            adc hl,bc
  50+ 92DD CD BF 90         call Extrae_address
  51+ 92E0 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E3 C9           	ret
  53+ 92E4
  54+ 92E4              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E4              ;
  56+ 92E4              ;   5/1/24
  57+ 92E4              ;
  58+ 92E4              ;	Destruye A,BC,HL,DE
  59+ 92E4
  60+ 92E4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E4
  63+ 92E4              Inicia_Entidades
  64+ 92E4
  65+ 92E4              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E4
  67+ 92E4 CD A9 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92E7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92E7 CD A3 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92EA
  71+ 92EA 2A 5D 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92ED
  73+ 92ED 22 5D 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92F0
  75+ 92F0 CD 09 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F3
  77+ 92F3 2A 5D 8C     	ld hl,(Datos_de_nivel)
  78+ 92F6
  79+ 92F6              ; En este punto:
  80+ 92F6              ;
  81+ 92F6              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92F6              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92F6
  84+ 92F6 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92F7
  86+ 92F7 7E           	ld a,(hl)
  87+ 92F8 CD 75 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92FB
  89+ 92FB CD 6D 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92FE
  91+ 92FE              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92FE
  93+ 92FE CD 2B 94     	call Busca_mov_masticados_segun_tipo
  94+ 9301
  95+ 9301 A7           	and a
  96+ 9302 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9304
  98+ 9304              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9304
 100+ 9304              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9304              ;	_ de este tipo de entidad.
 102+ 9304
 103+ 9304 CD 07 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 9307 CD 14 9F     	call Transfiere_datos_de_contadores
 105+ 930A
 106+ 930A 18 06        	jr 4F
 107+ 930C
 108+ 930C CD B3 8F     3 call Construye_movimientos_masticados_entidad
 109+ 930F
 110+ 930F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 930F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 930F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 930F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 930F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 930F
 116+ 930F CD E9 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9312              ;																; _ Mov_masticados ya generados.
 118+ 9312
 119+ 9312 CD 07 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9315
 121+ 9315 DD E5        	push ix
 122+ 9317 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9318
 124+ 9318 D5           	push de
 125+ 9319 CD DE 94     	call Genera_coordenadas
 126+ 931C
 127+ 931C ED 5B 35 8C  	ld de,(Scanlines_album_SP)
 128+ 9320 CD 17 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9323 D1           	pop de
 130+ 9324
 131+ 9324 CD 0A 95     	call Genera_datos_de_impresion
 132+ 9327              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9327              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9327              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9327              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9327
 137+ 9327 CD AD 93     	call Decrementa_Contador_de_mov_masticados
 138+ 932A
 139+ 932A              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 932A
 141+ 932A ED 5B 06 8C  	ld de,(Puntero_store_caja)
 142+ 932E CD 9A 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9331
 144+ 9331 CD 8A 93     	call Limpiamos_bandeja_DRAW
 145+ 9334 CD 0D 91     	call Incrementa_punteros_de_cajas
 146+ 9337
 147+ 9337              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9337              ; _ entidad del Nivel.
 149+ 9337
 150+ 9337 3A 3C 8C     	ld a,(Ctrl_4)
 151+ 933A E6 F0        	and $f0
 152+ 933C 32 3C 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 933F
 154+ 933F              ; Siguiente entidad del Nivel.
 155+ 933F
 156+ 933F 2A 5D 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9342 23           	inc hl 														; _ entidad del Nivel.
 158+ 9343
 159+ 9343 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9344
 161+ 9344 10 A7        	djnz 2B
 162+ 9346
 163+ 9346 C9           	ret
 164+ 9347
 165+ 9347              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9347              ;
 167+ 9347              ;	27/5/24
 168+ 9347              ;
 169+ 9347              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9347              ;
 171+ 9347
 172+ 9347              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9347              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9347
 175+ 9347 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 934A CD 6D 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 934D
 178+ 934D
 179+ 934D              Construye_movimientos_masticados_Amadeus
 180+ 934D
 181+ 934D 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9350 CD FA 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9353              ;															; _ el (Contador_de_mov_masticados).
 184+ 9353 CD C5 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9356              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9356
 187+ 9356              ; Generamos movimientos masticados de Amadeus.
 188+ 9356
 189+ 9356 06 79        	ld b,121												; $0079, 121d.
 190+ 9358
 191+ 9358 C5           1 push bc
 192+ 9359 CD 26 97     	call Draw
 193+ 935C CD DF 8F     	call Guarda_movimiento_masticado
 194+ 935F
 195+ 935F CD 9A 9A     	call Mov_right
 196+ 9362 CD 9A 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9365
 198+ 9365 C1           	pop bc
 199+ 9366 10 F0        	djnz 1B
 200+ 9368
 201+ 9368              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9368
 203+ 9368              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9368              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9368
 206+ 9368 2A CD 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 936B 01 08 00     	ld bc,8
 208+ 936E A7           	and a
 209+ 936F ED 42        	sbc hl,bc
 210+ 9371 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9374
 212+ 9374 C9           	ret
 213+ 9375
 214+ 9375              ; ---------------------------------------------------------------------
 215+ 9375              ;
 216+ 9375              ;	10/02/24
 217+ 9375              ;
 218+ 9375              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9375              ;
 220+ 9375              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9375
 222+ 9375              Definicion_segun_tipo
 223+ 9375
 224+ 9375 CD 5B 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9378 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 937B CD 63 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 937E C9           	ret
 228+ 937F
 229+ 937F              ; ---------------------------------------------------------------------
 230+ 937F              ;
 231+ 937F              ;	6/7/24
 232+ 937F
 233+ 937F
 234+ 937F              Store_Restore_cajas
 235+ 937F
 236+ 937F ED 5B 06 8C  	ld de,(Puntero_store_caja)
 237+ 9383 CD 9A 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9386 CD 0D 91     	call Incrementa_punteros_de_cajas
 239+ 9389 C9           	ret
 240+ 938A
 241+ 938A              ; ---------------------------------------------------------------------
 242+ 938A              ;
 243+ 938A              ;	23/6/24
 244+ 938A              ;
 245+ 938A              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 938A              ;
 247+ 938A              ;	MODIFY: HL
 248+ 938A
 249+ 938A              Limpiamos_bandeja_DRAW
 250+ 938A
 251+ 938A ED 73 13 8C  	ld (Stack),sp
 252+ 938E 31 EB 8B     	ld sp,Vel_left
 253+ 9391
 254+ 9391 AF           	xor a
 255+ 9392 67           	ld h,a
 256+ 9393 6F           	ld l,a
 257+ 9394
 258+ 9394 E5           	push hl
 259+ 9395 E5           	push hl
 260+ 9396 E5           	push hl
 261+ 9397 E5           	push hl
 262+ 9398 E5           	push hl
 263+ 9399 E5           	push hl
 264+ 939A E5           	push hl
 265+ 939B E5           	push hl
 266+ 939C E5           	push hl
 267+ 939D E5           	push hl
 268+ 939E E5           	push hl
 269+ 939F E5           	push hl
 270+ 93A0 E5           	push hl
 271+ 93A1 E5           	push hl
 272+ 93A2 E5           	push hl
 273+ 93A3 E5           	push hl
 274+ 93A4 E5           	push hl
 275+ 93A5 E5           	push hl
 276+ 93A6
 277+ 93A6 33           	inc sp
 278+ 93A7
 279+ 93A7 E5           	push hl
 280+ 93A8 ED 7B 13 8C  	ld sp,(Stack)
 281+ 93AC
 282+ 93AC C9           	ret
 283+ 93AD
 284+ 93AD              ; ---------------------------------------------------------------------
 285+ 93AD              ;
 286+ 93AD              ;	24/03/24
 287+ 93AD
 288+ 93AD 2A CF 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93B0 2B           	dec hl
 290+ 93B1 22 CF 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B4 C9           	ret
 292+ 93B5
 293+ 93B5              ; ---------------------------------------------------------------------
 294+ 93B5              ;
 295+ 93B5              ;	7/11/24
 296+ 93B5
 297+ 93B5              Reinicia_entidad_maliciosa
 298+ 93B5
 299+ 93B5              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93B5
 301+ 93B5 CD 07 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93B8 CD 14 9F     	call Transfiere_datos_de_contadores
 303+ 93BB
 304+ 93BB              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93BB
 306+ 93BB 3A C6 8B     	ld a,(Tipo)
 307+ 93BE CD 75 93     	call Definicion_segun_tipo
 308+ 93C1
 309+ 93C1 E5           	push hl
 310+ 93C2 DD E1        	pop ix
 311+ 93C4
 312+ 93C4 DD 6E 0B     	ld l,(ix+11)
 313+ 93C7 DD 66 0C     	ld h,(ix+12)
 314+ 93CA
 315+ 93CA 22 CD 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93CD
 317+ 93CD CD 07 90     	call Cargamos_registros_con_mov_masticado
 318+ 93D0
 319+ 93D0              ; Incrementa (Contador_de_vueltas)x2.
 320+ 93D0              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 321+ 93D0
 322+ 93D0              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 323+ 93D0              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 324+ 93D0              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 325+ 93D0              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 326+ 93D0              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 327+ 93D0
 328+ 93D0 21 C9 8B     	ld hl,Contador_de_vueltas
 329+ 93D3 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 330+ 93D5
 331+ 93D5 7E           	ld a,(hl)
 332+ 93D6 CB 2F        	sra a
 333+ 93D8 CB 2F        	sra a
 334+ 93DA
 335+ 93DA 32 D1 8B     	ld (Velocidad),a
 336+ 93DD
 337+ 93DD 3E 40        	ld a,$40
 338+ 93DF BE           	cp (hl)
 339+ 93E0 C0           	ret nz
 340+ 93E1
 341+ 93E1              ; Límitador.
 342+ 93E1
 343+ 93E1              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 344+ 93E1
 345+ 93E1 CB 2E        	sra (hl)
 346+ 93E3 21 D1 8B     	ld hl,Velocidad
 347+ 93E6 CB 2E        	sra (hl)
 348+ 93E8
 349+ 93E8 C9           	ret
 350+ 93E9
 351+ 93E9              ; ---------------------------------------------------------------------
 352+ 93E9              ;
 353+ 93E9              ;	22/01/24
 354+ 93E9
 355+ 93E9 21 3C 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 356+ 93EC CB 46        	bit 0,(hl)
 357+ 93EE 20 0D        	jr nz,1F
 358+ 93F0 CB 4E        	bit 1,(hl)
 359+ 93F2 20 0C        	jr nz,2F
 360+ 93F4 CB 56        	bit 2,(hl)
 361+ 93F6 20 0B        	jr nz,3F
 362+ 93F8 CB 5E        	bit 3,(hl)
 363+ 93FA 20 0A        	jr nz,4F
 364+ 93FC C9           	ret
 365+ 93FD
 366+ 93FD CB E6        1 set 4,(hl)
 367+ 93FF C9           	ret
 368+ 9400 CB EE        2 set 5,(hl)
 369+ 9402 C9           	ret
 370+ 9403 CB F6        3 set 6,(hl)
 371+ 9405 C9           	ret
 372+ 9406 CB FE        4 set 7,(hl)
 373+ 9408 C9           	ret
 374+ 9409
 375+ 9409              ; ---------------------------------------------------------------------
 376+ 9409              ;
 377+ 9409              ;	23/01/24
 378+ 9409              ;
 379+ 9409              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 380+ 9409              ;
 381+ 9409              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 382+ 9409              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 383+ 9409              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 384+ 9409              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 385+ 9409
 386+ 9409              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 387+ 9409
 388+ 9409 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 389+ 940A 3D           	dec a
 390+ 940B 20 06        	jr nz,1F
 391+ 940D
 392+ 940D              ; --- Tipo_1
 393+ 940D
 394+ 940D 21 3C 8C     	ld hl,Ctrl_4
 395+ 9410 CB C6        	set 0,(hl)
 396+ 9412 C9           	ret
 397+ 9413
 398+ 9413 3D           1 dec a
 399+ 9414 20 06        	jr nz,2F
 400+ 9416
 401+ 9416              ; --- Tipo_2
 402+ 9416
 403+ 9416 21 3C 8C     	ld hl,Ctrl_4
 404+ 9419 CB CE        	set 1,(hl)
 405+ 941B C9           	ret
 406+ 941C
 407+ 941C 3D           2 dec a
 408+ 941D 20 06        	jr nz,3F
 409+ 941F
 410+ 941F              ; --- Tipo_3
 411+ 941F
 412+ 941F 21 3C 8C     	ld hl,Ctrl_4
 413+ 9422 CB D6        	set 2,(hl)
 414+ 9424 C9           	ret
 415+ 9425
 416+ 9425              ; --- Tipo_3
 417+ 9425
 418+ 9425 21 3C 8C     3 ld hl,Ctrl_4
 419+ 9428 CB D6        	set 2,(hl)
 420+ 942A C9           	ret
 421+ 942B
 422+ 942B              ; ---------------------------------------------------------------------
 423+ 942B              ;
 424+ 942B              ;	22/01/24
 425+ 942B
 426+ 942B 21 3C 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 427+ 942E CB 46        	bit 0,(hl)
 428+ 9430 20 0E        	jr nz,1F
 429+ 9432
 430+ 9432 CB 4E        	bit 1,(hl)
 431+ 9434 20 10        	jr nz,2F
 432+ 9436
 433+ 9436 CB 56        	bit 2,(hl)
 434+ 9438 20 12        	jr nz,3F
 435+ 943A
 436+ 943A CB 5E        	bit 3,(hl)
 437+ 943C 20 14        	jr nz,4F
 438+ 943E 18 19        	jr 6F
 439+ 9440
 440+ 9440              ; Entidad_de_Tipo_1.
 441+ 9440
 442+ 9440 CB 66        1 bit 4,(hl)
 443+ 9442 28 15        	jr z,6F
 444+ 9444 18 10        	jr 5F
 445+ 9446
 446+ 9446              ; Entidad_de_Tipo_2.
 447+ 9446
 448+ 9446 CB 6E        2 bit 5,(hl)
 449+ 9448 28 0F        	jr z,6F
 450+ 944A 18 0A        	jr 5F
 451+ 944C
 452+ 944C              ; Entidad_de_Tipo_3.
 453+ 944C
 454+ 944C CB 76        3 bit 6,(hl)
 455+ 944E 28 09        	jr z,6F
 456+ 9450 18 04        	jr 5F
 457+ 9452
 458+ 9452              ; Entidad_de_Tipo_4.
 459+ 9452
 460+ 9452 CB 7E        4 bit 7,(hl)
 461+ 9454 28 03        	jr z,6F
 462+ 9456
 463+ 9456              ; Esta entidad TIENE MOV_MASTICADOS.
 464+ 9456
 465+ 9456 AF           5 xor a
 466+ 9457 3C           	inc a
 467+ 9458 C9           	ret
 468+ 9459
 469+ 9459              ; Esta entidad NO TIENE MOV_MASTICADOS.
 470+ 9459
 471+ 9459 AF           6 xor a
 472+ 945A C9           	ret
 473+ 945B
 474+ 945B              ;	------------------------------------------------------------------------------------
 475+ 945B              ;
 476+ 945B              ;	12/01/24
 477+ 945B              ;
 478+ 945B              ;	INPUTS:	A contiene el (Tipo) de entidad.
 479+ 945B              ;
 480+ 945B              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 481+ 945B              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 482+ 945B
 483+ 945B CB 27        Calcula_salto_en_BC sla a
 484+ 945D D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 485+ 945F 4F           	ld c,a
 486+ 9460 06 00        	ld b,0
 487+ 9462 C9           	ret
 488+ 9463
 489+ 9463              ; ------------------------------------------------------------------
 490+ 9463              ;
 491+ 9463              ;	19/1/24
 492+ 9463              ;
 493+ 9463              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 494+ 9463              ;	Actualiza (Datos_de_entidad) con esa dirección.
 495+ 9463
 496+ 9463 A7           Situa_en_datos_de_definicion and a
 497+ 9464 ED 4A        	adc hl,bc
 498+ 9466 CD BF 90     	call Extrae_address
 499+ 9469 22 11 8C         ld (Datos_de_entidad),hl
 500+ 946C C9           	ret
 501+ 946D
 502+ 946D              ; ------------------------------------------------------------------
 503+ 946D
 504+ 946D              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 505+ 946D              ; 	inc de
 506+ 946D              ; 	inc de
 507+ 946D              ; 	ex de,hl
 508+ 946D              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 509+ 946D              ; 	ret
 510+ 946D
 511+ 946D              ; ----------------------------------------------------------------------------------------------------------
 512+ 946D              ;
 513+ 946D              ;	24/6/24
 514+ 946D              ;
 515+ 946D              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 516+ 946D              ;	_ de entidad.
 517+ 946D              ;
 518+ 946D              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 519+ 946D              ;
 520+ 946D              ;
 521+ 946D              ;	MODIFICA: HL,DE y BC
 522+ 946D
 523+ 946D
 524+ 946D              Definicion_de_entidad_a_bandeja_DRAW
 525+ 946D
 526+ 946D 11 C6 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 527+ 9470 7E           	ld a,(hl) 									; Volcamos Tipo.
 528+ 9471 12           	ld (de),a
 529+ 9472 23           	inc hl
 530+ 9473              ;
 531+ 9473 11 D4 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 532+ 9476 01 02 00     	ld bc,2
 533+ 9479 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 534+ 947B              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 535+ 947B 11 C9 8B     	ld de,Contador_de_vueltas
 536+ 947E 7E           	ld a,(hl)
 537+ 947F 12           	ld (de),a
 538+ 9480 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 539+ 9481
 540+ 9481 11 DB 8B     	ld de,Indice_Sprite_der
 541+ 9484 01 04 00     	ld bc,4
 542+ 9487 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 543+ 9489
 544+ 9489 11 E3 8B     	ld de,Posicion_inicio
 545+ 948C 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 546+ 948F ED B0        	ldir 									; Vuelco (Frames_explosion).
 547+ 9491
 548+ 9491 11 CD 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 549+ 9494 01 02 00     	ld bc,2
 550+ 9497 ED B0        	ldir
 551+ 9499
 552+ 9499 C9           	ret
 553+ 949A
 554+ 949A              ; ----------------------------------------------------------------------------------------------------------
 555+ 949A              ;
 556+ 949A              ;	1/8/24
 557+ 949A              ;
 558+ 949A
 559+ 949A              Parametros_de_bandeja_DRAW_a_caja
 560+ 949A
 561+ 949A 21 C6 8B     	ld hl,Bandeja_DRAW
 562+ 949D 01 0C 00     	ld bc,12
 563+ 94A0 ED B0        	ldir
 564+ 94A2 C9           	ret
 565+ 94A3
 566+ 94A3              ;---------------------------------------------------------------------------------------------------------------
 567+ 94A3              ;
 568+ 94A3              ;	5/1/24
 569+ 94A3              ;
 570+ 94A3              ;	INICIALIZA (Numero_parcial_de_entidades).
 571+ 94A3              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 572+ 94A3              ;
 573+ 94A3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 574+ 94A3              ;
 575+ 94A3              ;	(Numero_parcial_de_entidades)="7".
 576+ 94A3              ;
 577+ 94A3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 578+ 94A3              ;
 579+ 94A3              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 580+ 94A3              ;
 581+ 94A3              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 582+ 94A3              ;	MODIFICA: A y B.
 583+ 94A3              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 584+ 94A3
 585+ 94A3              Inicializa_Numero_parcial_de_entidades
 586+ 94A3
 587+ 94A3              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 588+ 94A3
 589+ 94A3 3A 0C 8C     	ld a,(Numero_de_entidades)
 590+ 94A6 A7           	and a
 591+ 94A7
 592+ 94A7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 593+ 94A7              ;	jr z,$
 594+ 94A7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 595+ 94A7
 596+ 94A7 20 03        	jr nz,3F
 597+ 94A9
 598+ 94A9              ; ---------- ---------- ----------
 599+ 94A9
 600+ 94A9              ;! RESET para pruebas. Omitir esta línea en modo normal.
 601+ 94A9              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 602+ 94A9
 603+ 94A9 CD 9F 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 604+ 94AC
 605+ 94AC              ; ---------- ---------- ----------
 606+ 94AC
 607+ 94AC 3A 0C 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 608+ 94AF FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 609+ 94B1 38 08        	jr c,1F
 610+ 94B3
 611+ 94B3              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 612+ 94B3              ; Actualizamos variables.
 613+ 94B3
 614+ 94B3 3E 07        	ld a,7
 615+ 94B5 32 0D 8C     	ld (Numero_parcial_de_entidades),a
 616+ 94B8 47           	ld b,a
 617+ 94B9 18 04        	jr 2F
 618+ 94BB
 619+ 94BB              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 620+ 94BB              ; (Numero_de_entidades)="0".
 621+ 94BB
 622+ 94BB 32 0D 8C     1 ld (Numero_parcial_de_entidades),a
 623+ 94BE 47           	ld b,a
 624+ 94BF C9           2 ret
 625+ 94C0
# file closed: Rutinas_de_inicio_y_niveles.asm
2080  94C0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C0              ;
   3+ 94C0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C0              ;
   5+ 94C0              ; *****************************************************************************************************************************************************************************************
   6+ 94C0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C0
   8+ 94C0 7C           calcula_tercio ld a,h
   9+ 94C1 E6 18        	and $18
  10+ 94C3 CB 2F        	sra a
  11+ 94C5 CB 2F        	sra a
  12+ 94C7 CB 2F        	sra a
  13+ 94C9 C9           	ret
  14+ 94CA
# file closed: calcula_tercio.asm
2081  94CA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94CA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94CA              ;
   3+ 94CA              ;
   4+ 94CA              ;	CLS.
   5+ 94CA              ;
   6+ 94CA              ;	Limpia la pantalla y define sus atributos.
   7+ 94CA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94CA              ;
   9+ 94CA              ;	COLORES: 0 ..... NEGRO
  10+ 94CA              ;    		 1 ..... AZUL
  11+ 94CA              ; 			 2 ..... ROJO
  12+ 94CA              ;			 3 ..... MAGENTA
  13+ 94CA              ; 			 4 ..... VERDE
  14+ 94CA              ; 			 5 ..... CIAN
  15+ 94CA              ;			 6 ..... AMARILLO
  16+ 94CA              ; 			 7 ..... BLANCO
  17+ 94CA              ;
  18+ 94CA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94CA              ;
  20+ 94CA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94CA
  22+ 94CA
  23+ 94CA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CD 11 01 40     	LD DE,$4001
  25+ 94D0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D5 ED B0        	LDIR
  28+ 94D7 01 FF 02     	LD BC,767
  29+ 94DA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94DB ED B0        	LDIR
  31+ 94DD C9           	ret
  32+ 94DE
# file closed: Cls.asm
2082  94DE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94DE              ; ------------------------------------------------------------------------
   2+ 94DE              ;
   3+ 94DE              ;	30/1/24
   4+ 94DE              ;
   5+ 94DE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94DE              ;	Fila superior "0", Columna izquierda "0".
   7+ 94DE              ;
   8+ 94DE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94DE              ;
  10+ 94DE              ;	Modifica: A,BC y DE.
  11+ 94DE
  12+ 94DE 7D           Genera_coordenadas ld a,l
  13+ 94DF E6 1F        	and $1f
  14+ 94E1 32 C7 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E4
  16+ 94E4 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94E5 FE 40        	cp $40
  18+ 94E7 38 1C        	jr c,4F
  19+ 94E9
  20+ 94E9 CD C0 94     	call calcula_tercio
  21+ 94EC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94ED
  23+ 94ED 1E 00        	ld e,0
  24+ 94EF 7D           	ld a,l
  25+ 94F0 E6 E0        	and $e0
  26+ 94F2 28 01        	jr z,1F
  27+ 94F4 04           	inc b
  28+ 94F5
  29+ 94F5 04           1 inc b
  30+ 94F6 05           	dec b
  31+ 94F7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F9              ;														; _ , salimos.
  33+ 94F9 1C           3 inc e
  34+ 94FA D6 20        	sub 32
  35+ 94FC 20 FB        	jr nz,3B
  36+ 94FE 10 F5        	djnz 1B
  37+ 9500
  38+ 9500 7B           2 ld a,e
  39+ 9501 32 C8 8B     	ld (Coordenada_y),a
  40+ 9504 C9           	ret
  41+ 9505
  42+ 9505 AF           4 xor a
  43+ 9506 32 C8 8B     	ld (Coordenada_y),a
  44+ 9509 C9           	ret
  45+ 950A
# file closed: Genera_coordenadas.asm
2083  950A              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 950A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 950A              ;
   3+ 950A              ;	20/09/24
   4+ 950A              ;
   5+ 950A              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 950A              ;   DE contiene Puntero_objeto.
   7+ 950A              ;   IX contiene el Puntero de impresión.
   8+ 950A
   9+ 950A              Genera_datos_de_impresion
  10+ 950A
  11+ 950A ED 73 13 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 950E
  13+ 950E 31 CD 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9511 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9513
  16+ 9513 2A 35 8C         ld hl,(Scanlines_album_SP)
  17+ 9516
  18+ 9516 3E 05            ld a,5
  19+ 9518 85               add l
  20+ 9519 6F               ld l,a
  21+ 951A
  22+ 951A F9               ld sp,hl
  23+ 951B 22 35 8C         ld (Scanlines_album_SP),hl
  24+ 951E
  25+ 951E 21 00 00         ld hl,0
  26+ 9521
  27+ 9521 DD E5            push ix
  28+ 9523 3B               dec sp
  29+ 9524 ED 7A            adc hl,sp
  30+ 9526 D5               push de
  31+ 9527
  32+ 9527              ; Recuperamos SP.
  33+ 9527
  34+ 9527 ED 7B 13 8C      ld sp,(Stack)
  35+ 952B
  36+ 952B E5               push hl
  37+ 952C F1               pop af
  38+ 952D 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 952E
  40+ 952E              ; Tenemos el encabezado listo.
  41+ 952E              ; Preparamos registros para generar los scanlines.
  42+ 952E
  43+ 952E DD E5            push ix
  44+ 9530 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9531
  46+ 9531 ED 5B 35 8C      ld de,(Scanlines_album_SP)
  47+ 9535
  48+ 9535              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9535              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9535
  51+ 9535 7C               ld a,h
  52+ 9536 FE 50            cp $50
  53+ 9538 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 953A
  55+ 953A 20 05            jr nz,2F
  56+ 953C
  57+ 953C 7D               ld a,l
  58+ 953D FE E0            cp $e0
  59+ 953F 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9541
  61+ 9541 7D           2 ld a,l
  62+ 9542 FE C0            cp $c0
  63+ 9544 D2 DA 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9547
  65+ 9547              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9547
  67+ 9547 CD D8 99         call NextScan
  68+ 954A EB               ex de,hl
  69+ 954B
  70+ 954B 73               ld (hl),e
  71+ 954C 23               inc hl
  72+ 954D 72               ld (hl),d
  73+ 954E 23               inc hl
  74+ 954F
  75+ 954F EB               ex de,hl
  76+ 9550
  77+ 9550 CD D8 99         call NextScan
  78+ 9553 EB               ex de,hl
  79+ 9554
  80+ 9554 73               ld (hl),e
  81+ 9555 23               inc hl
  82+ 9556 72               ld (hl),d
  83+ 9557 23               inc hl
  84+ 9558
  85+ 9558 EB               ex de,hl
  86+ 9559
  87+ 9559 CD D8 99         call NextScan
  88+ 955C EB               ex de,hl
  89+ 955D
  90+ 955D 73               ld (hl),e
  91+ 955E 23               inc hl
  92+ 955F 72               ld (hl),d
  93+ 9560 23               inc hl
  94+ 9561
  95+ 9561 EB               ex de,hl
  96+ 9562
  97+ 9562 CD D8 99         call NextScan
  98+ 9565 EB               ex de,hl
  99+ 9566
 100+ 9566 73               ld (hl),e
 101+ 9567 23               inc hl
 102+ 9568 72               ld (hl),d
 103+ 9569 23               inc hl
 104+ 956A
 105+ 956A EB               ex de,hl
 106+ 956B
 107+ 956B CD D8 99         call NextScan
 108+ 956E EB               ex de,hl
 109+ 956F
 110+ 956F 73               ld (hl),e
 111+ 9570 23               inc hl
 112+ 9571 72               ld (hl),d
 113+ 9572 23               inc hl
 114+ 9573
 115+ 9573 EB               ex de,hl
 116+ 9574
 117+ 9574 CD D8 99         call NextScan
 118+ 9577 EB               ex de,hl
 119+ 9578
 120+ 9578 73               ld (hl),e
 121+ 9579 23               inc hl
 122+ 957A 72               ld (hl),d
 123+ 957B 23               inc hl
 124+ 957C
 125+ 957C EB               ex de,hl
 126+ 957D
 127+ 957D CD D8 99         call NextScan
 128+ 9580 EB               ex de,hl
 129+ 9581
 130+ 9581 73               ld (hl),e
 131+ 9582 23               inc hl
 132+ 9583 72               ld (hl),d
 133+ 9584 23               inc hl
 134+ 9585
 135+ 9585 EB               ex de,hl
 136+ 9586
 137+ 9586 CD D8 99         call NextScan
 138+ 9589 EB               ex de,hl
 139+ 958A
 140+ 958A 73               ld (hl),e
 141+ 958B 23               inc hl
 142+ 958C 72               ld (hl),d
 143+ 958D 23               inc hl
 144+ 958E
 145+ 958E EB               ex de,hl
 146+ 958F
 147+ 958F CD D8 99         call NextScan
 148+ 9592 EB               ex de,hl
 149+ 9593
 150+ 9593 73               ld (hl),e
 151+ 9594 23               inc hl
 152+ 9595 72               ld (hl),d
 153+ 9596 23               inc hl
 154+ 9597
 155+ 9597 EB               ex de,hl
 156+ 9598
 157+ 9598 CD D8 99         call NextScan
 158+ 959B EB               ex de,hl
 159+ 959C
 160+ 959C 73               ld (hl),e
 161+ 959D 23               inc hl
 162+ 959E 72               ld (hl),d
 163+ 959F 23               inc hl
 164+ 95A0
 165+ 95A0 EB               ex de,hl
 166+ 95A1
 167+ 95A1 CD D8 99         call NextScan
 168+ 95A4 EB               ex de,hl
 169+ 95A5
 170+ 95A5 73               ld (hl),e
 171+ 95A6 23               inc hl
 172+ 95A7 72               ld (hl),d
 173+ 95A8 23               inc hl
 174+ 95A9
 175+ 95A9 EB               ex de,hl
 176+ 95AA
 177+ 95AA CD D8 99         call NextScan
 178+ 95AD EB               ex de,hl
 179+ 95AE
 180+ 95AE 73               ld (hl),e
 181+ 95AF 23               inc hl
 182+ 95B0 72               ld (hl),d
 183+ 95B1 23               inc hl
 184+ 95B2
 185+ 95B2 EB               ex de,hl
 186+ 95B3
 187+ 95B3 CD D8 99         call NextScan
 188+ 95B6 EB               ex de,hl
 189+ 95B7
 190+ 95B7 73               ld (hl),e
 191+ 95B8 23               inc hl
 192+ 95B9 72               ld (hl),d
 193+ 95BA 23               inc hl
 194+ 95BB
 195+ 95BB EB               ex de,hl
 196+ 95BC
 197+ 95BC CD D8 99         call NextScan
 198+ 95BF EB               ex de,hl
 199+ 95C0
 200+ 95C0 73               ld (hl),e
 201+ 95C1 23               inc hl
 202+ 95C2 72               ld (hl),d
 203+ 95C3 23               inc hl
 204+ 95C4
 205+ 95C4 EB               ex de,hl
 206+ 95C5
 207+ 95C5 CD D8 99         call NextScan
 208+ 95C8 EB               ex de,hl
 209+ 95C9
 210+ 95C9              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C9              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C9              ;   _ generar sus scanlines.
 213+ 95C9
 214+ 95C9              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C9
 216+ 95C9 73               ld (hl),e
 217+ 95CA 23               inc hl
 218+ 95CB 72               ld (hl),d
 219+ 95CC 23               inc hl
 220+ 95CD
 221+ 95CD              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95CD
 223+ 95CD 22 35 8C         ld (Scanlines_album_SP),hl
 224+ 95D0
 225+ 95D0 EB               ex de,hl
 226+ 95D1
 227+ 95D1              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D1
 229+ 95D1              ;    call NextScan
 230+ 95D1              ;    call NextScan
 231+ 95D1
 232+ 95D1 22 40 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D4
 234+ 95D4              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D4
 236+ 95D4 08               ex af,af
 237+ 95D5
 238+ 95D5 F5               push af
 239+ 95D6 E1               pop hl
 240+ 95D7
 241+ 95D7 36 10            ld (hl),16
 242+ 95D9
 243+ 95D9 C9               ret
 244+ 95DA
 245+ 95DA              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95DA
 247+ 95DA              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95DA
 249+ 95DA 3E 57            ld a,$57
 250+ 95DC 94               sub h
 251+ 95DD 47               ld b,a
 252+ 95DE
 253+ 95DE 3E DF            ld a,$df
 254+ 95E0 BD               cp l
 255+ 95E1 38 04            jr c,1F
 256+ 95E3
 257+ 95E3 3E 08            ld a,8
 258+ 95E5 80               add b
 259+ 95E6 47               ld b,a
 260+ 95E7
 261+ 95E7              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E7              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E7
 264+ 95E7 48           1 ld c,b
 265+ 95E8 0C               inc c
 266+ 95E9
 267+ 95E9 04               inc b
 268+ 95EA 05               dec b
 269+ 95EB 20 02            jr nz,3F
 270+ 95ED
 271+ 95ED 18 0B            jr 6F
 272+ 95EF
 273+ 95EF CD D8 99     3 call NextScan
 274+ 95F2 EB               ex de,hl
 275+ 95F3
 276+ 95F3 73               ld (hl),e
 277+ 95F4 23               inc hl
 278+ 95F5 72               ld (hl),d
 279+ 95F6 23               inc hl
 280+ 95F7
 281+ 95F7 EB               ex de,hl
 282+ 95F8 10 F5            djnz 3B
 283+ 95FA
 284+ 95FA ED 53 35 8C  6 ld (Scanlines_album_SP),de
 285+ 95FE
 286+ 95FE 08           5 ex af,af
 287+ 95FF F5               push af
 288+ 9600 E1               pop hl
 289+ 9601
 290+ 9601 71               ld (hl),c
 291+ 9602
 292+ 9602 C9               ret
 293+ 9603
# file closed: Genera_datos_de_impresion.asm
2084  9603              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9603              ; -----------------------------------------------------------------------------
   2+ 9603              ;
   3+ 9603              ;   11/03/24
   4+ 9603              ;
   5+ 9603
   6+ 9603              Pinta_Sprites
   7+ 9603
   8+ 9603              ;    ld hl,(Scanlines_album_SP)
   9+ 9603              ;    call Extrae_address
  10+ 9603
  11+ 9603              ;    inc h
  12+ 9603              ;    dec h
  13+ 9603              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9603
  15+ 9603 ED 73 13 8C      ld (Stack),sp
  16+ 9607
  17+ 9607 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9608              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9608 2C               inc l
  20+ 9609 2C               inc l
  21+ 960A
  22+ 960A 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 960B
  24+ 960B 2C               inc l
  25+ 960C F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960D
  27+ 960D              ;   Seleccionamos rutina de impresión:
  28+ 960D
  29+ 960D 3E 10            ld a,16
  30+ 960F B8               cp b
  31+ 9610 C2 0C 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9613
  33+ 9613              ;   Rutinas:
  34+ 9613
  35+ 9613              Pinta_rapido    ;   1520 t/states.
  36+ 9613
  37+ 9613 E1               pop hl
  38+ 9614
  39+ 9614 1A               ld a,(de)
  40+ 9615 AE               xor (hl)
  41+ 9616 77               ld (hl),a
  42+ 9617 2C               inc l
  43+ 9618 1C               inc e
  44+ 9619 1A               ld a,(de)
  45+ 961A AE               xor (hl)
  46+ 961B 77               ld (hl),a
  47+ 961C 2C               inc l
  48+ 961D 1C               inc e
  49+ 961E 1A               ld a,(de)
  50+ 961F AE               xor (hl)
  51+ 9620 77               ld (hl),a
  52+ 9621 13               inc de
  53+ 9622
  54+ 9622 E1               pop hl
  55+ 9623
  56+ 9623 1A               ld a,(de)
  57+ 9624 AE               xor (hl)
  58+ 9625 77               ld (hl),a
  59+ 9626 2C               inc l
  60+ 9627 1C               inc e
  61+ 9628 1A               ld a,(de)
  62+ 9629 AE               xor (hl)
  63+ 962A 77               ld (hl),a
  64+ 962B 2C               inc l
  65+ 962C 1C               inc e
  66+ 962D 1A               ld a,(de)
  67+ 962E AE               xor (hl)
  68+ 962F 77               ld (hl),a
  69+ 9630 13               inc de
  70+ 9631
  71+ 9631 E1               pop hl
  72+ 9632
  73+ 9632 1A               ld a,(de)
  74+ 9633 AE               xor (hl)
  75+ 9634 77               ld (hl),a
  76+ 9635 2C               inc l
  77+ 9636 1C               inc e
  78+ 9637 1A               ld a,(de)
  79+ 9638 AE               xor (hl)
  80+ 9639 77               ld (hl),a
  81+ 963A 2C               inc l
  82+ 963B 1C               inc e
  83+ 963C 1A               ld a,(de)
  84+ 963D AE               xor (hl)
  85+ 963E 77               ld (hl),a
  86+ 963F 13               inc de
  87+ 9640
  88+ 9640 E1               pop hl
  89+ 9641
  90+ 9641 1A               ld a,(de)
  91+ 9642 AE               xor (hl)
  92+ 9643 77               ld (hl),a
  93+ 9644 2C               inc l
  94+ 9645 1C               inc e
  95+ 9646 1A               ld a,(de)
  96+ 9647 AE               xor (hl)
  97+ 9648 77               ld (hl),a
  98+ 9649 2C               inc l
  99+ 964A 1C               inc e
 100+ 964B 1A               ld a,(de)
 101+ 964C AE               xor (hl)
 102+ 964D 77               ld (hl),a
 103+ 964E 13               inc de
 104+ 964F
 105+ 964F E1               pop hl
 106+ 9650
 107+ 9650 1A               ld a,(de)
 108+ 9651 AE               xor (hl)
 109+ 9652 77               ld (hl),a
 110+ 9653 2C               inc l
 111+ 9654 1C               inc e
 112+ 9655 1A               ld a,(de)
 113+ 9656 AE               xor (hl)
 114+ 9657 77               ld (hl),a
 115+ 9658 2C               inc l
 116+ 9659 1C               inc e
 117+ 965A 1A               ld a,(de)
 118+ 965B AE               xor (hl)
 119+ 965C 77               ld (hl),a
 120+ 965D 13               inc de
 121+ 965E
 122+ 965E E1               pop hl
 123+ 965F
 124+ 965F 1A               ld a,(de)
 125+ 9660 AE               xor (hl)
 126+ 9661 77               ld (hl),a
 127+ 9662 2C               inc l
 128+ 9663 1C               inc e
 129+ 9664 1A               ld a,(de)
 130+ 9665 AE               xor (hl)
 131+ 9666 77               ld (hl),a
 132+ 9667 2C               inc l
 133+ 9668 1C               inc e
 134+ 9669 1A               ld a,(de)
 135+ 966A AE               xor (hl)
 136+ 966B 77               ld (hl),a
 137+ 966C 13               inc de
 138+ 966D
 139+ 966D E1               pop hl
 140+ 966E
 141+ 966E 1A               ld a,(de)
 142+ 966F AE               xor (hl)
 143+ 9670 77               ld (hl),a
 144+ 9671 2C               inc l
 145+ 9672 1C               inc e
 146+ 9673 1A               ld a,(de)
 147+ 9674 AE               xor (hl)
 148+ 9675 77               ld (hl),a
 149+ 9676 2C               inc l
 150+ 9677 1C               inc e
 151+ 9678 1A               ld a,(de)
 152+ 9679 AE               xor (hl)
 153+ 967A 77               ld (hl),a
 154+ 967B 13               inc de
 155+ 967C
 156+ 967C E1               pop hl
 157+ 967D
 158+ 967D 1A               ld a,(de)
 159+ 967E AE               xor (hl)
 160+ 967F 77               ld (hl),a
 161+ 9680 2C               inc l
 162+ 9681 1C               inc e
 163+ 9682 1A               ld a,(de)
 164+ 9683 AE               xor (hl)
 165+ 9684 77               ld (hl),a
 166+ 9685 2C               inc l
 167+ 9686 1C               inc e
 168+ 9687 1A               ld a,(de)
 169+ 9688 AE               xor (hl)
 170+ 9689 77               ld (hl),a
 171+ 968A 13               inc de
 172+ 968B
 173+ 968B E1               pop hl
 174+ 968C
 175+ 968C 1A               ld a,(de)
 176+ 968D AE               xor (hl)
 177+ 968E 77               ld (hl),a
 178+ 968F 2C               inc l
 179+ 9690 1C               inc e
 180+ 9691 1A               ld a,(de)
 181+ 9692 AE               xor (hl)
 182+ 9693 77               ld (hl),a
 183+ 9694 2C               inc l
 184+ 9695 1C               inc e
 185+ 9696 1A               ld a,(de)
 186+ 9697 AE               xor (hl)
 187+ 9698 77               ld (hl),a
 188+ 9699 13               inc de
 189+ 969A
 190+ 969A E1               pop hl
 191+ 969B
 192+ 969B 1A               ld a,(de)
 193+ 969C AE               xor (hl)
 194+ 969D 77               ld (hl),a
 195+ 969E 2C               inc l
 196+ 969F 1C               inc e
 197+ 96A0 1A               ld a,(de)
 198+ 96A1 AE               xor (hl)
 199+ 96A2 77               ld (hl),a
 200+ 96A3 2C               inc l
 201+ 96A4 1C               inc e
 202+ 96A5 1A               ld a,(de)
 203+ 96A6 AE               xor (hl)
 204+ 96A7 77               ld (hl),a
 205+ 96A8 13               inc de
 206+ 96A9
 207+ 96A9 E1               pop hl
 208+ 96AA
 209+ 96AA 1A               ld a,(de)
 210+ 96AB AE               xor (hl)
 211+ 96AC 77               ld (hl),a
 212+ 96AD 2C               inc l
 213+ 96AE 1C               inc e
 214+ 96AF 1A               ld a,(de)
 215+ 96B0 AE               xor (hl)
 216+ 96B1 77               ld (hl),a
 217+ 96B2 2C               inc l
 218+ 96B3 1C               inc e
 219+ 96B4 1A               ld a,(de)
 220+ 96B5 AE               xor (hl)
 221+ 96B6 77               ld (hl),a
 222+ 96B7 13               inc de
 223+ 96B8
 224+ 96B8 E1               pop hl
 225+ 96B9
 226+ 96B9 1A               ld a,(de)
 227+ 96BA AE               xor (hl)
 228+ 96BB 77               ld (hl),a
 229+ 96BC 2C               inc l
 230+ 96BD 1C               inc e
 231+ 96BE 1A               ld a,(de)
 232+ 96BF AE               xor (hl)
 233+ 96C0 77               ld (hl),a
 234+ 96C1 2C               inc l
 235+ 96C2 1C               inc e
 236+ 96C3 1A               ld a,(de)
 237+ 96C4 AE               xor (hl)
 238+ 96C5 77               ld (hl),a
 239+ 96C6 13               inc de
 240+ 96C7
 241+ 96C7 E1               pop hl
 242+ 96C8
 243+ 96C8 1A               ld a,(de)
 244+ 96C9 AE               xor (hl)
 245+ 96CA 77               ld (hl),a
 246+ 96CB 2C               inc l
 247+ 96CC 1C               inc e
 248+ 96CD 1A               ld a,(de)
 249+ 96CE AE               xor (hl)
 250+ 96CF 77               ld (hl),a
 251+ 96D0 2C               inc l
 252+ 96D1 1C               inc e
 253+ 96D2 1A               ld a,(de)
 254+ 96D3 AE               xor (hl)
 255+ 96D4 77               ld (hl),a
 256+ 96D5 13               inc de
 257+ 96D6
 258+ 96D6 E1               pop hl
 259+ 96D7
 260+ 96D7 1A               ld a,(de)
 261+ 96D8 AE               xor (hl)
 262+ 96D9 77               ld (hl),a
 263+ 96DA 2C               inc l
 264+ 96DB 1C               inc e
 265+ 96DC 1A               ld a,(de)
 266+ 96DD AE               xor (hl)
 267+ 96DE 77               ld (hl),a
 268+ 96DF 2C               inc l
 269+ 96E0 1C               inc e
 270+ 96E1 1A               ld a,(de)
 271+ 96E2 AE               xor (hl)
 272+ 96E3 77               ld (hl),a
 273+ 96E4 13               inc de
 274+ 96E5
 275+ 96E5 E1               pop hl
 276+ 96E6
 277+ 96E6 1A               ld a,(de)
 278+ 96E7 AE               xor (hl)
 279+ 96E8 77               ld (hl),a
 280+ 96E9 2C               inc l
 281+ 96EA 1C               inc e
 282+ 96EB 1A               ld a,(de)
 283+ 96EC AE               xor (hl)
 284+ 96ED 77               ld (hl),a
 285+ 96EE 2C               inc l
 286+ 96EF 1C               inc e
 287+ 96F0 1A               ld a,(de)
 288+ 96F1 AE               xor (hl)
 289+ 96F2 77               ld (hl),a
 290+ 96F3 13               inc de
 291+ 96F4
 292+ 96F4 E1               pop hl
 293+ 96F5
 294+ 96F5 1A               ld a,(de)
 295+ 96F6 AE               xor (hl)
 296+ 96F7 77               ld (hl),a
 297+ 96F8 2C               inc l
 298+ 96F9 1C               inc e
 299+ 96FA 1A               ld a,(de)
 300+ 96FB AE               xor (hl)
 301+ 96FC 77               ld (hl),a
 302+ 96FD 2C               inc l
 303+ 96FE 1C               inc e
 304+ 96FF 1A               ld a,(de)
 305+ 9700 AE               xor (hl)
 306+ 9701 77               ld (hl),a
 307+ 9702 13               inc de
 308+ 9703
 309+ 9703 ED 73 35 8C      ld (Scanlines_album_SP),sp
 310+ 9707 ED 7B 13 8C      ld sp,(Stack)
 311+ 970B C9               ret
 312+ 970C
 313+ 970C              Pinta_lento
 314+ 970C
 315+ 970C E1           1 pop hl
 316+ 970D
 317+ 970D 1A               ld a,(de)
 318+ 970E AE               xor (hl)
 319+ 970F 77               ld (hl),a
 320+ 9710 2C               inc l
 321+ 9711 1C               inc e
 322+ 9712 1A               ld a,(de)
 323+ 9713 AE               xor (hl)
 324+ 9714 77               ld (hl),a
 325+ 9715 2C               inc l
 326+ 9716 1C               inc e
 327+ 9717 1A               ld a,(de)
 328+ 9718 AE               xor (hl)
 329+ 9719 77               ld (hl),a
 330+ 971A 13               inc de
 331+ 971B
 332+ 971B 10 EF            djnz 1B
 333+ 971D
 334+ 971D ED 73 35 8C      ld (Scanlines_album_SP),sp
 335+ 9721 ED 7B 13 8C      ld sp,(Stack)
 336+ 9725 C9               ret
# file closed: Pinta_Sprites.asm
2085  9726              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9726              ; ******************************************************************************************************************************************************************************************
   2+ 9726              ;
   3+ 9726              ; 26/06/23
   4+ 9726              ;
   5+ 9726              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9726
   7+ 9726              Draw
   8+ 9726
   9+ 9726 CD CC 99     	call Prepara_draw
  10+ 9729 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 972A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 972B 28 05        	jr z,2F
  13+ 972D
  14+ 972D 3A E5 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9730 18 0C        	jr 1F
  16+ 9732
  17+ 9732 2A E3 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9735 22 D6 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9738 CD C4 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 973B              ;													; _la esquina superior izquierda de la pantalla.
  21+ 973B
  22+ 973B CD 6B 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973E
  24+ 973E 3A D3 8B     1 ld a,(Ctrl_0)
  25+ 9741 CB 6F        	bit 5,a
  26+ 9743 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9745
  28+ 9745 CD 5A 97     	call Comprueba_limite_horizontal
  29+ 9748 CD EA 97     	call Comprueba_limite_vertical
  30+ 974B
  31+ 974B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 974B              ; -----------------------
  33+ 974B              ; -----------------------
  34+ 974B              ; -----------------------
  35+ 974B
  36+ 974B CD 40 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974E CD 77 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9751
  39+ 9751 3A D3 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9754 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9756 32 D3 8B     	ld (Ctrl_0),a
  42+ 9759
  43+ 9759 C9           	ret
  44+ 975A
  45+ 975A              ; *******************************************************************************************************************************************************************************************
  46+ 975A              ;	21/01/23
  47+ 975A              ;
  48+ 975A              ; 	Comprueba_limite_horizontal.
  49+ 975A              ;
  50+ 975A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 975A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 975A              ;
  53+ 975A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 975A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 975A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 975A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 975A
  58+ 975A
  59+ 975A
  60+ 975A 3A D3 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9761 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9763 32 D3 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9766 18 09            jr 6F
  66+ 9768 CB 5F        1 bit 3,a
  67+ 976A 28 0A            jr z,2F
  68+ 976C E6 F7            and $f7
  69+ 976E 32 D3 8B         ld (Ctrl_0),a
  70+ 9771 CD C4 98     6 call Inicializacion
  71+ 9774 18 5B            jr 5F
  72+ 9776 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9777
  74+ 9777              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9777              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9777
  77+ 9777 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9778 2A E7 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 977B CD C0 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977E 67           	ld h,a
  81+ 977F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9780 CD C0 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9783 67           	ld h,a
  84+ 9784 A7           	and a
  85+ 9785 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9787 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9788 3A E5 8B     	ld a,(Cuad_objeto)
  88+ 978B FE 02        	cp 2
  89+ 978D 38 1E        	jr c,3F
  90+ 978F 28 1C        	jr z,3F
  91+ 9791 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9792 28 23            jr z,7F
  93+ 9794 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9796 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9798 E1           	pop hl
  96+ 9799
  97+ 9799              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9799              ; _para indicar con E="2" en caso necesario.
  99+ 9799
 100+ 9799 E5               push hl
 101+ 979A C5               push bc
 102+ 979B CD C0 94     	call calcula_tercio
 103+ 979E FE 01        	cp 1
 104+ 97A0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A2 CD D2 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A5 28 26            jr z,9F
 107+ 97A7 38 24            jr c,9F
 108+ 97A9 1E 00        11 ld e,0
 109+ 97AB 18 22            jr 8F
 110+ 97AD 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AE 28 07        	jr z, 7F
 112+ 97B0 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B2 1E 00         	ld e,0
 114+ 97B4 E1           	pop hl
 115+ 97B5 18 04        	jr 4F
 116+ 97B7 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B9 18 15            jr 10F
 118+ 97BB
 119+ 97BB              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97BB              ; _para indicar con E="2" en caso necesario.
 121+ 97BB
 122+ 97BB E5           4 push hl
 123+ 97BC C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BD CD C0 94     	call calcula_tercio
 125+ 97C0 FE 01        	cp 1
 126+ 97C2 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C4 CD D2 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C7 28 04            jr z,9F
 129+ 97C9 30 02            jr nc,9F
 130+ 97CB 18 02        	jr 8F
 131+ 97CD 1E 02        9 ld e,2
 132+ 97CF C1           8 pop bc
 133+ 97D0 E1           10 pop hl
 134+ 97D1 C9           5 ret
 135+ 97D2
 136+ 97D2              ; --------------------
 137+ 97D2              ;
 138+ 97D2              ; 25/08/22
 139+ 97D2
 140+ 97D2 CD C0 94     Comprueba_centro call calcula_tercio
 141+ 97D5 67               ld h,a
 142+ 97D6 08           	ex af,af
 143+ 97D7 FE 02        	cp 2
 144+ 97D9 38 07        	jr c,1F
 145+ 97DB 28 05        	jr z,1F
 146+ 97DD 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E0 18 03        	jr 2F
 148+ 97E2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E5 08           2 ex af,af
 150+ 97E6 A7               and a
 151+ 97E7 ED 42            sbc hl,bc
 152+ 97E9 C9               ret
 153+ 97EA
 154+ 97EA              ; *********************************************************************************************************************************************************************************************
 155+ 97EA              ;
 156+ 97EA              ;   16/8/22
 157+ 97EA              ;
 158+ 97EA              ;	Comprueba_limite_vertical
 159+ 97EA              ;
 160+ 97EA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97EA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97EA              ;
 163+ 97EA
 164+ 97EA 2A D6 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97ED 7D           	ld a,l
 166+ 97EE E6 1F        	and $1F
 167+ 97F0 57           	ld d,a
 168+ 97F1 3A E9 8B     	ld a,(Limite_vertical)
 169+ 97F4 BA           	cp d 											; Límite - Posición.
 170+ 97F5 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F6 3A E5 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F9 CB 47        	bit 0,a
 173+ 97FB 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FD
 175+ 97FD              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FD
 177+ 97FD 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FE 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9800
 180+ 9800              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9800              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9800
 183+ 9800 3A C7 8B         ld a,(Coordenada_X)
 184+ 9803 16 0F            ld d,Centro_izquierda
 185+ 9805 A7               and a
 186+ 9806 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9807 28 1E            jr z,3F
 188+ 9809 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 980B              ;                                                    ; _salimos sin modificar nada.
 190+ 980B 18 0E            jr 2F
 191+ 980D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9810
 194+ 9810              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9810              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9810
 197+ 9810 3A C7 8B         ld a,(Coordenada_X)
 198+ 9813 16 10            ld d,Centro_derecha
 199+ 9815 A7               and a
 200+ 9816 92               sub d
 201+ 9817 28 0E            jr z,3F
 202+ 9819 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 981B              ;                                                    ; _salimos sin modificar nada.
 204+ 981B CB 43        2 bit 0,e
 205+ 981D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9820 CD B4 98         call Modificaccionne
 208+ 9823 C1           	pop bc
 209+ 9824 CD C4 98         call Inicializacion
 210+ 9827 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9828
 212+ 9828              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9828
 214+ 9828 C5           4 push bc
 215+ 9829 01 D5 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982C 0A           	ld a,(bc)
 217+ 982D 3D           	dec a
 218+ 982E 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982F 7D           	ld a,l
 220+ 9830 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9831 CB 47        	bit 0,a
 222+ 9833 28 03        	jr z,5F
 223+ 9835 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9836 18 2E        	jr 7F
 225+ 9838
 226+ 9838              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9838
 228+ 9838 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9839 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 983A 3A D3 8B     	ld a,(Ctrl_0)
 231+ 983D CB 4F        	bit 1,a
 232+ 983F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9841 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9842
 235+ 9842              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9842
 237+ 9842 1C               inc e
 238+ 9843 1D               dec e
 239+ 9844 20 07            jr nz,12F
 240+ 9846 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9847 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9848 22 D6 8B     	ld (Posicion_actual),hl
 243+ 984B 18 44        13 jr 9F
 244+ 984D CB 43        12 bit 0,e
 245+ 984F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9851              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9851 C1           	pop bc
 248+ 9852 18 D3        	jr 3B
 249+ 9854 80           14 add b
 250+ 9855 6F               ld l,a
 251+ 9856 22 D6 8B     	ld (Posicion_actual),hl
 252+ 9859 CD B4 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985C 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9860 32 D3 8B         ld (Ctrl_0),a
 256+ 9863 F1           	pop af
 257+ 9864 18 2B        	jr 9F
 258+ 9866
 259+ 9866              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9866
 261+ 9866 F5           7 push af
 262+ 9867 3A D3 8B     	ld a,(Ctrl_0)
 263+ 986A CB 47        	bit 0,a
 264+ 986C 20 1D        	jr nz,8F
 265+ 986E F1           	pop af
 266+ 986F
 267+ 986F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986F
 269+ 986F 1C           	inc e
 270+ 9870 1D               dec e
 271+ 9871 20 07            jr nz,10F
 272+ 9873 90           	sub b
 273+ 9874 6F               ld l,a
 274+ 9875 22 D6 8B     	ld (Posicion_actual),hl
 275+ 9878 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 987A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 987A CB 43        10 bit 0,e
 278+ 987C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987E C1           	pop bc
 281+ 987F 18 A6        	jr 3B
 282+ 9881 90           16 sub b
 283+ 9882 6F               ld l,a
 284+ 9883 22 D6 8B     	ld (Posicion_actual),hl
 285+ 9886 CD B4 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9889 18 06            jr 9F
 287+ 988B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988D 32 D3 8B         ld (Ctrl_0),a
 289+ 9890 F1           	pop af
 290+ 9891 C1           9 pop bc
 291+ 9892 1E 00        	ld e,0
 292+ 9894 CD C4 98         call Inicializacion
 293+ 9897 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9898 08           	ex af,af
 295+ 9899 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 989A 18 8B            jr 3B
 297+ 989C
 298+ 989C              ; --------------------
 299+ 989C
 300+ 989C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989E CD E7 99     1 call PreviousScan
 302+ 98A1 10 FB            djnz 1B
 303+ 98A3 22 D6 8B     	ld (Posicion_actual),hl
 304+ 98A6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A7 C9           	ret
 306+ 98A8
 307+ 98A8              ; --------------------
 308+ 98A8
 309+ 98A8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98AA CD D8 99     1 call NextScan
 311+ 98AD 10 FB            djnz 1B
 312+ 98AF 22 D6 8B     	ld (Posicion_actual),hl
 313+ 98B2 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B3 C9           	ret
 315+ 98B4
 316+ 98B4              ; --------------------
 317+ 98B4              ;
 318+ 98B4              ;	22/01/23
 319+ 98B4              ;
 320+ 98B4              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B4              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B4              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B4
 324+ 98B4
 325+ 98B4              Modificaccionne
 326+ 98B4
 327+ 98B4 3A E5 8B     	ld a,(Cuad_objeto)
 328+ 98B7 FE 02        	cp 2
 329+ 98B9 CC 9C 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BC DC 9C 98         call c,Modifica_Pos_actual
 331+ 98BF C8           	ret z
 332+ 98C0 CD A8 98         call Modifica_Pos_actual2
 333+ 98C3 C9               ret
 334+ 98C4
 335+ 98C4              ; *************************************************************************************************************************************************************************************************
 336+ 98C4              ;
 337+ 98C4              ;	13/8/22
 338+ 98C4              ;
 339+ 98C4              ;	Inicializacion
 340+ 98C4              ;
 341+ 98C4              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C4              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C4              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C4              ;
 345+ 98C4              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C4              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C4              ;	_ desaparece/aparece.
 348+ 98C4
 349+ 98C4              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C4              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C4              ;
 352+ 98C4              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C4              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C4              ; 		   [E] ="0"
 355+ 98C4
 356+ 98C4              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C4
 358+ 98C4 CD C0 94     Inicializacion call calcula_tercio
 359+ 98C7 28 36        	jr z,primit
 360+ 98C9 E6 02        	and 2
 361+ 98CB 20 07        	jr nz,segmit
 362+ 98CD 7D           	ld a,l
 363+ 98CE FE 7F        	cp $7f
 364+ 98D0 38 2D        	jr c,primit
 365+ 98D2 28 2B        	jr z,primit
 366+ 98D4 CD 3A 99     segmit call column
 367+ 98D7 38 13        	jr c,tercuad
 368+ 98D9 3E 04        cuarcuad ld a,4
 369+ 98DB 32 E5 8B     	ld (Cuad_objeto),a
 370+ 98DE 21 20 48     	ld hl,$4820
 371+ 98E1 22 E7 8B     	ld (Limite_horizontal),hl
 372+ 98E4 21 E9 8B     	ld hl,Limite_vertical
 373+ 98E7 36 0D        	ld (hl),$0d
 374+ 98E9 08           	ex af,af
 375+ 98EA 18 3C        	jr 1F
 376+ 98EC              tercuad
 377+ 98EC 3E 03        	ld a,3
 378+ 98EE 32 E5 8B     	ld (Cuad_objeto),a
 379+ 98F1 21 20 48     	ld hl,$4820
 380+ 98F4 22 E7 8B     	ld (Limite_horizontal),hl
 381+ 98F7 21 E9 8B     	ld hl,Limite_vertical
 382+ 98FA 36 12        	ld (hl),$12
 383+ 98FC 08           	ex af,af
 384+ 98FD 18 29        	jr 1F
 385+ 98FF CD 3A 99     primit call column
 386+ 9902 38 13        	jr c, primcuad
 387+ 9904              segcuad
 388+ 9904 3E 02        	ld a,2
 389+ 9906 32 E5 8B     	ld (Cuad_objeto),a
 390+ 9909 21 C0 4F     	ld hl,$4fc0
 391+ 990C 22 E7 8B     	ld (Limite_horizontal),hl
 392+ 990F 21 E9 8B     	ld hl,Limite_vertical
 393+ 9912 36 0D        	ld (hl),$0d
 394+ 9914 08           	ex af,af
 395+ 9915 18 11        	jr 1F
 396+ 9917              primcuad
 397+ 9917 3E 01        	ld a,1
 398+ 9919 32 E5 8B     	ld (Cuad_objeto),a
 399+ 991C 21 C0 4F     	ld hl,$4fc0
 400+ 991F 22 E7 8B     	ld (Limite_horizontal),hl
 401+ 9922 21 E9 8B     	ld hl,Limite_vertical
 402+ 9925 36 12        	ld (hl),$12
 403+ 9927 08           	ex af,af
 404+ 9928
 405+ 9928 C5           1 push bc
 406+ 9929 E5           	push hl
 407+ 992A D5           	push de
 408+ 992B
 409+ 992B 2A D6 8B     	ld hl,(Posicion_actual)
 410+ 992E CD DE 94     	call Genera_coordenadas
 411+ 9931
 412+ 9931 D1           	pop de
 413+ 9932 E1           	pop hl
 414+ 9933 C1           	pop bc
 415+ 9934
 416+ 9934 21 D3 8B     	ld hl,Ctrl_0
 417+ 9937 CB EE        	set 5,(hl)
 418+ 9939 C9           	ret
 419+ 993A
 420+ 993A              ; ------------------------------------------------------------------------------------------------------------------
 421+ 993A
 422+ 993A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 993A              ;
 424+ 993A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 993A
 426+ 993A 7D           column ld a,l
 427+ 993B E6 1F        	and $1f
 428+ 993D FE 10         	cp $10
 429+ 993F C9            	ret
 430+ 9940
 431+ 9940              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9940              ;
 433+ 9940              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9940              ;
 435+ 9940              ; 14/12/22
 436+ 9940              ;
 437+ 9940              ;	Modifica: A y BC.
 438+ 9940
 439+ 9940 3A E5 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9943 E6 01        	and 1
 441+ 9945 28 17        	jr z,1F
 442+ 9947
 443+ 9947              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9947
 445+ 9947 3A C7 8B     	ld a,(Coordenada_X)
 446+ 994A 47           	ld b,a
 447+ 994B 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994C 79           	ld a,c
 449+ 994D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994E 38 08        	jr c,2F
 451+ 9950 47           	ld b,a
 452+ 9951 79           	ld a,c
 453+ 9952 90           	sub b
 454+ 9953 32 E6 8B     	ld (Columnas),a
 455+ 9956 18 1B        	jr 4F
 456+ 9958 79           2 ld a,c
 457+ 9959 32 E6 8B     	ld (Columnas),a
 458+ 995C 18 15        	jr 4F
 459+ 995E
 460+ 995E              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995E
 462+ 995E 3A C7 8B     1 ld a,(Coordenada_X)
 463+ 9961 81           	add c
 464+ 9962 3D           	dec a
 465+ 9963 D6 1F        	sub $1f
 466+ 9965 38 08        	jr c,3F
 467+ 9967 47           	ld b,a
 468+ 9968 79           	ld a,c
 469+ 9969 90           	sub b
 470+ 996A 32 E6 8B     	ld (Columnas),a
 471+ 996D 18 04        	jr 4F
 472+ 996F 79           3 ld a,c
 473+ 9970 32 E6 8B     	ld (Columnas),a
 474+ 9973 D9           4 exx
 475+ 9974 4F           	ld c,a
 476+ 9975 D9           	exx
 477+ 9976 C9            ret
 478+ 9977
 479+ 9977              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9977              ;
 481+ 9977              ;   19/7/23
 482+ 9977              ;
 483+ 9977              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9977              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9977              ;
 486+ 9977              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9977              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9977              ;
 489+ 9977              ;	DESTRUYE: HL,B Y A.
 490+ 9977
 491+ 9977 3A E5 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 997A FE 02        	cp 2
 493+ 997C 38 18        	jr c,1F
 494+ 997E 28 16        	jr z,1F
 495+ 9980 E6 01        	and 1
 496+ 9982 28 0D        	jr z,3F
 497+ 9984
 498+ 9984              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9984
 500+ 9984 CD C0 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9987
 502+ 9987 7D           9 ld a,l
 503+ 9988 E6 1F        	and $1f
 504+ 998A 28 2A        	jr z,7F
 505+ 998C 2B           	dec hl
 506+ 998D 10 F8        	djnz 9B
 507+ 998F 18 25        	jr 7F
 508+ 9991
 509+ 9991              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9991
 511+ 9991 2A D6 8B     3 ld hl,(Posicion_actual)
 512+ 9994 18 20        	jr 7F
 513+ 9996
 514+ 9996 28 14        1 jr z,2F
 515+ 9998
 516+ 9998              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9998
 518+ 9998 CD C0 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 999B
 520+ 999B 7D           4 ld a,l
 521+ 999C E6 1F        	and $1f
 522+ 999E 28 03        	jr z,6F
 523+ 99A0 2B           	dec hl
 524+ 99A1 10 F8        	djnz 4B
 525+ 99A3 06 0F        6 ld b,15
 526+ 99A5 CD E7 99     5 call PreviousScan
 527+ 99A8 10 FB        	djnz 5B
 528+ 99AA 18 0A        	jr 7F
 529+ 99AC
 530+ 99AC              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AC
 532+ 99AC CD C0 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AF 06 0F        	ld b,15
 534+ 99B1 CD E7 99     8 call PreviousScan
 535+ 99B4 10 FB        	djnz 8B
 536+ 99B6
 537+ 99B6 E5           7 push hl
 538+ 99B7 DD E1        	pop ix
 539+ 99B9
 540+ 99B9 2A D8 8B     	ld hl,(Puntero_objeto)
 541+ 99BC E5           	push hl
 542+ 99BD FD E1        	pop iy
 543+ 99BF
 544+ 99BF C9           	ret
 545+ 99C0
 546+ 99C0              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C0              ;
 548+ 99C0              ;	2/1/23
 549+ 99C0              ;
 550+ 99C0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C0              ;
 552+ 99C0              ;	Tras esta rutina tenemos:
 553+ 99C0              ;
 554+ 99C0              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C0              ;
 557+ 99C0              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C0
 559+ 99C0 2A D6 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C3 3A E6 8B     	ld a,(Columnas)
 561+ 99C6 3D           	dec a
 562+ 99C7 20 01        	jr nz,1F
 563+ 99C9 3C           	inc a
 564+ 99CA 47           1 ld b,a
 565+ 99CB C9           	ret
 566+ 99CC
 567+ 99CC              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CC              ;
 569+ 99CC              ;	Prepara_draw
 570+ 99CC              ;
 571+ 99CC              ;	Es una rutina de carga.
 572+ 99CC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CC              ;
 574+ 99CC              ;	FUNCIONAMIENTO:
 575+ 99CC              ;
 576+ 99CC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CC              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CC              ;
 580+ 99CC              ;	DESTRUYE:
 581+ 99CC              ;
 582+ 99CC              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CC
 584+ 99CC 21 D4 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D1 4E           	ld c,(hl)
 588+ 99D2 2A D6 8B     	ld hl,(Posicion_actual)
 589+ 99D5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D7 C9           	ret
 591+ 99D8
 592+ 99D8              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D8              ;
 594+ 99D8              ;	5/08/22
 595+ 99D8              ;
 596+ 99D8              ;   NextScan.
 597+ 99D8              ;
 598+ 99D8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D8              ;
 600+ 99D8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D8              ;
 602+ 99D8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D8              ;
 604+ 99D8              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D8              ;
 606+ 99D8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D8              ;
 608+ 99D8
 609+ 99D8 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D9 7C               ld a,h
 611+ 99DA E6 07            and 7
 612+ 99DC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DD
 614+ 99DD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DE C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E0 6F               ld l,a
 617+ 99E1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E2
 619+ 99E2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E5 67               ld h,a
 622+ 99E6 C9               ret
 623+ 99E7
 624+ 99E7              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E7              ;
 626+ 99E7              ;	5/08/22
 627+ 99E7              ;
 628+ 99E7              ;   PreviousScan.
 629+ 99E7              ;
 630+ 99E7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E7              ;
 632+ 99E7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E7              ;
 634+ 99E7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E7              ;
 636+ 99E7              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E7              ;
 638+ 99E7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E7              ;
 640+ 99E7
 641+ 99E7 7C           PreviousScan ld a,h
 642+ 99E8 25               dec h               ; Dec H.
 643+ 99E9 E6 07            and 7
 644+ 99EB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EC
 646+ 99EC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99ED D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99EF 6F               ld l,a
 649+ 99F0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F1
 651+ 99F1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F4 67               ld h,a
 654+ 99F5 C9               ret
 655+ 99F6
 656+ 99F6
 657+ 99F6
 658+ 99F6
 659+ 99F6
 660+ 99F6
 661+ 99F6
 662+ 99F6
 663+ 99F6
 664+ 99F6
 665+ 99F6
 666+ 99F6
# file closed: Draw_XOR.asm
2086  99F6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F6
   2+ 99F6              ; ******************************************************************************************************************************************************************************************
   3+ 99F6              ;
   4+ 99F6              ;   20/05/23
   5+ 99F6              ;
   6+ 99F6              ;	Recompone_posicion_inicio
   7+ 99F6              ;
   8+ 99F6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F6              ;	_ a una u otra rutina.
  12+ 99F6
  13+ 99F6              Recompone_posicion_inicio
  14+ 99F6
  15+ 99F6 2A E3 8B     	ld hl,(Posicion_inicio)
  16+ 99F9 7D           	ld a,l
  17+ 99FA E6 1F        	and $1f
  18+ 99FC 28 16        	jr z,1F
  19+ 99FE
  20+ 99FE FE 1F        	cp $1f
  21+ 9A00 28 0D        	jr z,3F
  22+ 9A02
  23+ 9A02 21 D2 8B     	ld hl,Ctrl_2
  24+ 9A05 CB C6        	set 0,(hl)
  25+ 9A07 2A D8 8B     	ld hl,(Puntero_objeto)
  26+ 9A0A 22 04 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A0D 18 08        	jr 2F
  28+ 9A0F
  29+ 9A0F CD BD 9B     3 call Mov_left
  30+ 9A12 18 03        	jr 2F
  31+ 9A14
  32+ 9A14 CD 9A 9A     1 call Mov_right
  33+ 9A17 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A1A 22 D8 8B     	ld (Puntero_objeto),hl
  35+ 9A1D C9           	ret
  36+ 9A1E
  37+ 9A1E              ; ******************************************************************************************************************************************************************************************
  38+ 9A1E              ;
  39+ 9A1E              ;   27/05/23
  40+ 9A1E              ;
  41+ 9A1E              ;	Mov_down
  42+ 9A1E              ;
  43+ 9A1E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1E              ;
  45+ 9A1E              ;
  46+ 9A1E              Mov_down
  47+ 9A1E
  48+ 9A1E CD 88 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A21              ;																	; _ repone (Puntero_objeto).
  50+ 9A21 21 D3 8B     	ld hl,Ctrl_0
  51+ 9A24 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A26              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A26              ; 																	; _ en el caso de que no lo haya.
  54+ 9A26 3A EE 8B     	ld a,(Vel_down)
  55+ 9A29 47           	ld b,a
  56+ 9A2A 2A D6 8B         ld hl,(Posicion_actual)
  57+ 9A2D CD C0 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A30 E6 02        	and 2
  59+ 9A32 28 17        	jr z,1F
  60+ 9A34
  61+ 9A34              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A34              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A34
  64+ 9A34 7C           	ld a,h
  65+ 9A35 FE 57        	cp $57
  66+ 9A37 20 12        	jr nz,1F
  67+ 9A39
  68+ 9A39 7D           	ld a,l
  69+ 9A3A C6 20        	add $20
  70+ 9A3C 30 0D        	jr nc,1F
  71+ 9A3E
  72+ 9A3E              ; ------------------------------
  73+ 9A3E              ;
  74+ 9A3E              ;	12/01/24
  75+ 9A3E
  76+ 9A3E              ;	call Reaparece_arriba
  77+ 9A3E CD 4A 9D     	call Reinicio
  78+ 9A41
  79+ 9A41              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A41
  81+ 9A41 3A 3B 8C     	ld a,(Ctrl_3)
  82+ 9A44 CB CF        	set 1,a
  83+ 9A46 32 3B 8C     	ld (Ctrl_3),a
  84+ 9A49
  85+ 9A49 18 08        	jr 3F
  86+ 9A4B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A4B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A4B              ; ------------------------------
  89+ 9A4B
  90+ 9A4B CD D8 99     1 call NextScan
  91+ 9A4E 22 D6 8B     	ld (Posicion_actual),hl
  92+ 9A51 10 DA            djnz 2B
  93+ 9A53 CD DE 94     3 call Genera_coordenadas
  94+ 9A56 C9           	ret
  95+ 9A57
  96+ 9A57              ; ******************************************************************************************************************************************************************************************
  97+ 9A57              ;
  98+ 9A57              ;   27/05/23
  99+ 9A57              ;
 100+ 9A57              ;	Mov_up
 101+ 9A57              ;
 102+ 9A57              ; 	Mueve el Sprite hacia arriba.
 103+ 9A57              ;
 104+ 9A57              ;
 105+ 9A57              Mov_up
 106+ 9A57
 107+ 9A57 CD 88 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A5A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A5A 21 D3 8B     	ld hl,Ctrl_0
 110+ 9A5D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5F              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5F 3A ED 8B     	ld a,(Vel_up)
 114+ 9A62 47           	ld b,a
 115+ 9A63 2A D6 8B     	ld hl,(Posicion_actual)
 116+ 9A66 CD C0 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A69 A7           	and a
 118+ 9A6A 20 10        	jr nz,1F
 119+ 9A6C
 120+ 9A6C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6C
 123+ 9A6C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6F 20 0B            jr nz,1F
 126+ 9A71 7D               ld a,l
 127+ 9A72 D6 20            sub $20
 128+ 9A74 30 06            jr nc,1F
 129+ 9A76 25               dec h
 130+ 9A77
 131+ 9A77              ; -----------------------------
 132+ 9A77 CD 2B 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A7A              ;	call Reinicio
 134+ 9A7A              ; -----------------------------
 135+ 9A7A
 136+ 9A7A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7C CD E7 99     1 call PreviousScan
 138+ 9A7F 22 D6 8B     	ld (Posicion_actual),hl
 139+ 9A82 10 E2            djnz 3B
 140+ 9A84 CD DE 94     2 call Genera_coordenadas
 141+ 9A87 C9           	ret
 142+ 9A88
 143+ 9A88              ; -----------------------------
 144+ 9A88              ;
 145+ 9A88              ;	27/5/23
 146+ 9A88              ;
 147+ 9A88              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A88              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A88              ;
 150+ 9A88              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A88              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A88              ;
 153+ 9A88              ;	Modifica: A y (Puntero_objeto).
 154+ 9A88
 155+ 9A88 3A D2 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A8B CB 47        	bit 0,a
 157+ 9A8D C8           	ret z
 158+ 9A8E CB 87        	res 0,a
 159+ 9A90 32 D2 8B     	ld (Ctrl_2),a
 160+ 9A93 2A 04 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A96 22 D8 8B     	ld (Puntero_objeto),hl
 162+ 9A99 C9           	ret
 163+ 9A9A
 164+ 9A9A              ; ******************************************************************************************************************************************************************************************
 165+ 9A9A              ;
 166+ 9A9A              ;	19/10/22
 167+ 9A9A              ;
 168+ 9A9A              ;	Mov_right.
 169+ 9A9A              ;
 170+ 9A9A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A9A              ;
 172+ 9A9A
 173+ 9A9A 3A D3 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9D CB 77        	bit 6,a
 175+ 9A9F 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA1
 177+ 9AA1 CD D9 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA5
 180+ 9AA5 21 D3 8B     	ld hl,Ctrl_0
 181+ 9AA8 CB E6        	set 4,(hl)
 182+ 9AAA 18 52        	jr 8F
 183+ 9AAC
 184+ 9AAC 21 D3 8B     10 ld hl,Ctrl_0
 185+ 9AAF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB1              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB1 3A C7 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB6 20 46        	jr nz,8F
 191+ 9AB8
 192+ 9AB8 3A DA 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ABB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABC 28 40        	jr z,8F
 195+ 9ABE
 196+ 9ABE              ; ---------- ---------- ----------
 197+ 9ABE              ;
 198+ 9ABE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABE
 200+ 9ABE 3A EC 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC3 28 11        	jr z,1F
 203+ 9AC5 38 06        	jr c,6F
 204+ 9AC7 FE 04        	cp 4
 205+ 9AC9 28 14        	jr z,7F
 206+ 9ACB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACD
 208+ 9ACD              ; ---------- ---------- ----------
 209+ 9ACD              ;
 210+ 9ACD              ; Perfiles de velocidad
 211+ 9ACD              ;
 212+ 9ACD
 213+ 9ACD 3A DA 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD0 FE FE        	cp $fe
 215+ 9AD2 20 2A        	jr nz,8F
 216+ 9AD4 18 10        	jr 3F
 217+ 9AD6 3A DA 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD9 FE FD        	cp $fd
 219+ 9ADB 20 21        	jr nz,8F
 220+ 9ADD 18 07        	jr 3F
 221+ 9ADF 3A DA 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE2 FE FB        	cp $fb
 223+ 9AE4 20 18        	jr nz,8F
 224+ 9AE6
 225+ 9AE6              ; ---------- ---------- ----------
 226+ 9AE6
 227+ 9AE6              3
 228+ 9AE6 CD 19 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE9              ;	call Reinicio
 230+ 9AE9
 231+ 9AE9              ; ---------- ---------- ----------
 232+ 9AE9              ;
 233+ 9AE9              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE9
 235+ 9AE9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AEB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEC CD 05 9B     	call DESPLZ_DER
 238+ 9AEF C1           	pop bc
 239+ 9AF0 10 F9        	djnz 5B
 240+ 9AF2 2A D6 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF5 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF6 22 D6 8B     	ld (Posicion_actual),hl
 243+ 9AF9 CD DE 94     	call Genera_coordenadas
 244+ 9AFC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFE
 246+ 9AFE              ; ---------- ---------- ----------
 247+ 9AFE
 248+ 9AFE 2A D6 8B     8 ld hl,(Posicion_actual)
 249+ 9B01 CD 05 9B     	call DESPLZ_DER
 250+ 9B04 C9           2 ret
 251+ 9B05
 252+ 9B05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B05              ;
 254+ 9B05              ;	22/9/22
 255+ 9B05              ;
 256+ 9B05
 257+ 9B05 CD 14 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B08 CD 60 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B0B CD 89 9B         call Ciclo_completo
 260+ 9B0E 21 D3 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B11 CB FE        	set 7,(hl)
 262+ 9B13 C9           	ret
 263+ 9B14
 264+ 9B14              ; ******************************************************************************************************************************************************************************************
 265+ 9B14              ;	15/02/23
 266+ 9B14              ;
 267+ 9B14
 268+ 9B14 3A EC 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B17 47           	ld b,a
 270+ 9B18 2A DF 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B1B 23           1 inc hl
 272+ 9B1C 23           	inc hl
 273+ 9B1D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1F 22 DF 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B22 CD BF 90     	call Extrae_address
 276+ 9B25 22 D8 8B     	ld (Puntero_objeto),hl
 277+ 9B28
 278+ 9B28              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B28
 280+ 9B28              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B28              ; Cuántos movimientos hemos hecho ??
 282+ 9B28              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B28
 284+ 9B28 2A DB 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B2B EB           	ex de,hl
 286+ 9B2C A7           	and a
 287+ 9B2D ED 52        	sbc hl,de
 288+ 9B2F CB 3D        	srl l
 289+ 9B31 3E 08        6 ld a,8
 290+ 9B33 95           	sub l
 291+ 9B34 30 1E        	jr nc,3F
 292+ 9B36
 293+ 9B36              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B36              ; B="0".
 295+ 9B36
 296+ 9B36 04           4 inc b
 297+ 9B37 3C           	inc a
 298+ 9B38 20 FC        	jr nz,4B
 299+ 9B3A 78           	ld a,b
 300+ 9B3B 08           	ex af,af
 301+ 9B3C 2A DB 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B3F 23           5 inc hl
 303+ 9B40 23           	inc hl
 304+ 9B41 10 FC        	djnz 5B
 305+ 9B43 22 DF 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B46 CD BF 90     	call Extrae_address
 307+ 9B49 22 D8 8B     	ld (Puntero_objeto),hl
 308+ 9B4C
 309+ 9B4C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4C              ; _(Posicion_actual).
 311+ 9B4C
 312+ 9B4C 21 D6 8B     	ld hl,Posicion_actual
 313+ 9B4F 34           	inc (hl)
 314+ 9B50 08               ex af,af
 315+ 9B51 6F           	ld l,a
 316+ 9B52 18 DD        	jr 6B
 317+ 9B54
 318+ 9B54              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B54
 320+ 9B54 47           3 ld b,a
 321+ 9B55 2A DD 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B58 23           2 inc hl
 323+ 9B59 23           	inc hl
 324+ 9B5A 10 FC        	djnz 2B
 325+ 9B5C 22 E1 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5F C9           8 ret
 327+ 9B60
 328+ 9B60              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B60              ;
 330+ 9B60              ;	24/7/22
 331+ 9B60              ;
 332+ 9B60              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B60              ;
 334+ 9B60              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B60              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B60              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B60
 338+ 9B60 3A DA 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B63 A7           	and a
 340+ 9B64 20 1F        	jr nz,1F
 341+ 9B66 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B68 32 DA 8B         ld (CTRL_DESPLZ),a
 343+ 9B6B
 344+ 9B6B 21 D5 8B     	ld hl,Columns
 345+ 9B6E 34           	inc (hl)
 346+ 9B6F 3A E5 8B     	ld a,(Cuad_objeto)
 347+ 9B72 E6 01        	and 1
 348+ 9B74 28 0F        	jr z,1F
 349+ 9B76 2A D6 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B79 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B7A 22 D6 8B     	ld (Posicion_actual),hl
 352+ 9B7D CD DE 94     	call Genera_coordenadas
 353+ 9B80 CD E5 9C     	call Inc_CTRL_DESPLZ
 354+ 9B83 18 03        	jr 2F
 355+ 9B85 CD E5 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B88 C9           2 ret
 357+ 9B89
 358+ 9B89              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B89              ;
 360+ 9B89              ;	24/7/22
 361+ 9B89              ;
 362+ 9B89              ;	Ciclo_completo.
 363+ 9B89              ;
 364+ 9B89              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B89              ;
 366+ 9B89              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B89              ; 	Decrementamos (Columns).
 368+ 9B89              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B89              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B89
 371+ 9B89
 372+ 9B89 3A DA 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8C FE FF        	cp $ff
 374+ 9B8E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B90 E6 F0        	and $f0
 376+ 9B92 20 28        	jr nz,3F
 377+ 9B94
 378+ 9B94              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B94
 380+ 9B94 3A DA 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B97 47           	ld b,a
 382+ 9B98 3E F8        	ld a,$f8
 383+ 9B9A 80           	add b
 384+ 9B9B 32 DA 8B     	ld (CTRL_DESPLZ),a
 385+ 9B9E 18 1C        	jr 3F
 386+ 9BA0 21 D5 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA5 32 DA 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA8 3A E5 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BAB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAD 20 0A        	jr nz,2F
 393+ 9BAF 2A D6 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB2 23           	inc hl
 395+ 9BB3 22 D6 8B     	ld (Posicion_actual),hl
 396+ 9BB6 CD DE 94     	call Genera_coordenadas
 397+ 9BB9
 398+ 9BB9              ; Inicia el puntero de Sprite.
 399+ 9BB9
 400+ 9BB9 CD D4 90     2 call Inicia_puntero_objeto_der
 401+ 9BBC C9           3 ret
 402+ 9BBD
 403+ 9BBD              ; ******************************************************************************************************************************************************************************************
 404+ 9BBD              ;
 405+ 9BBD              ;	15/02/23
 406+ 9BBD              ;
 407+ 9BBD              ;	Mov_left.
 408+ 9BBD              ;
 409+ 9BBD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBD              ;
 411+ 9BBD              Mov_left
 412+ 9BBD
 413+ 9BBD 21 D3 8B     	ld hl,Ctrl_0
 414+ 9BC0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC2              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC2 3A D3 8B     	ld a,(Ctrl_0)
 418+ 9BC5 CB 77        	bit 6,a
 419+ 9BC7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC9
 421+ 9BC9 CD DF 9C     	call Stop_Amadeus_left
 422+ 9BCC C8           	ret z
 423+ 9BCD 20 4A        	jr nz,8F
 424+ 9BCF
 425+ 9BCF 3A C7 8B     11 ld a,(Coordenada_X)
 426+ 9BD2 A7           	and a
 427+ 9BD3 20 44        	jr nz,8F
 428+ 9BD5
 429+ 9BD5 3A DA 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BDB
 433+ 9BDB              ; ---------- ---------- ----------
 434+ 9BDB
 435+ 9BDB 3A EB 8B     	ld a,(Vel_left)
 436+ 9BDE FE 02        	cp 2
 437+ 9BE0 28 0F        	jr z,1F
 438+ 9BE2 38 04        	jr c,6F
 439+ 9BE4 FE 04        	cp 4
 440+ 9BE6 28 12        	jr z,7F
 441+ 9BE8
 442+ 9BE8              ; ---------- ---------- ----------
 443+ 9BE8
 444+ 9BE8 3A DA 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BEB FE F8        	cp $f8
 446+ 9BED 20 2A        	jr nz,8F
 447+ 9BEF 18 10        	jr 4F
 448+ 9BF1 3A DA 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF4 FE F9        	cp $f9
 450+ 9BF6 20 21        	jr nz,8F
 451+ 9BF8 18 07        	jr 4F
 452+ 9BFA 3A DA 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BFD FE FB        	cp $fb
 454+ 9BFF 20 18        	jr nz,8F
 455+ 9C01
 456+ 9C01              ; ---------- ---------- ----------
 457+ 9C01
 458+ 9C01              4
 459+ 9C01 CD 07 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C04              ;	call Reinicio
 461+ 9C04
 462+ 9C04              ; ---------- ---------- ----------
 463+ 9C04
 464+ 9C04 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C06 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C07
 467+ 9C07              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C07              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C07
 470+ 9C07 CD 20 9C     	call DESPLZ_IZQ
 471+ 9C0A C1           	pop bc
 472+ 9C0B 10 F9        	djnz 5B
 473+ 9C0D 2A D6 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C10 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C11 22 D6 8B     	ld (Posicion_actual),hl
 476+ 9C14 CD DE 94     	call Genera_coordenadas
 477+ 9C17 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C19
 479+ 9C19              ; ---------- ---------- ----------
 480+ 9C19
 481+ 9C19              ; Movemos, no hay recolocación.
 482+ 9C19
 483+ 9C19 2A D6 8B     8 ld hl,(Posicion_actual)
 484+ 9C1C CD 20 9C     	call DESPLZ_IZQ
 485+ 9C1F C9           2 ret
 486+ 9C20
 487+ 9C20              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C20              ;
 489+ 9C20              ;	22/9/22
 490+ 9C20
 491+ 9C20              DESPLZ_IZQ
 492+ 9C20
 493+ 9C20 CD 2F 9C     	call Desplaza_izquierda
 494+ 9C23 CD 7B 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C26 CD A3 9C     	call Ciclo_completo_2
 496+ 9C29 21 D3 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2C CB BE        	res 7,(hl)
 498+ 9C2E C9           	ret
 499+ 9C2F
 500+ 9C2F              Desplaza_izquierda
 501+ 9C2F
 502+ 9C2F 3A EB 8B     	ld a,(Vel_left)
 503+ 9C32 47           	ld b,a
 504+ 9C33 2A E1 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C36 23           1 inc hl
 506+ 9C37 23           	inc hl
 507+ 9C38 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C3A 22 E1 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3D CD BF 90     	call Extrae_address
 510+ 9C40 22 D8 8B     	ld (Puntero_objeto),hl
 511+ 9C43
 512+ 9C43              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C43
 514+ 9C43              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C43              ; Cuántos movimientos hemos hecho ??
 516+ 9C43              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C43
 518+ 9C43 2A DD 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C46 EB           	ex de,hl
 520+ 9C47 A7           	and a
 521+ 9C48 ED 52        	sbc hl,de
 522+ 9C4A CB 3D        	srl l
 523+ 9C4C 3E 08        6 ld a,8
 524+ 9C4E 95           	sub l
 525+ 9C4F 30 1E        	jr nc,3F
 526+ 9C51
 527+ 9C51              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C51              ; B="0".
 529+ 9C51
 530+ 9C51 04           4 inc b
 531+ 9C52 3C           	inc a
 532+ 9C53 20 FC        	jr nz,4B
 533+ 9C55 78           	ld a,b
 534+ 9C56 08           	ex af,af
 535+ 9C57 2A DD 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C5A 23           5 inc hl
 537+ 9C5B 23           	inc hl
 538+ 9C5C 10 FC        	djnz 5B
 539+ 9C5E 22 E1 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C61 CD BF 90     	call Extrae_address
 541+ 9C64 22 D8 8B     	ld (Puntero_objeto),hl
 542+ 9C67
 543+ 9C67              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C67              ; _(Posicion_actual).
 545+ 9C67
 546+ 9C67 21 D6 8B     	ld hl,Posicion_actual
 547+ 9C6A 35           	dec (hl)
 548+ 9C6B 08           	ex af,af
 549+ 9C6C 6F           	ld l,a
 550+ 9C6D 18 DD        	jr 6B
 551+ 9C6F
 552+ 9C6F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6F
 554+ 9C6F 47           3 ld b,a
 555+ 9C70 2A DB 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C73 23           2 inc hl
 557+ 9C74 23           	inc hl
 558+ 9C75 10 FC        	djnz 2B
 559+ 9C77 22 DF 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C7A C9           8 ret
 561+ 9C7B
 562+ 9C7B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C7B              ;
 564+ 9C7B              ;	modifica_parametros_1er_DESPLZ
 565+ 9C7B              ;
 566+ 9C7B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C7B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C7B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C7B
 570+ 9C7B 3A DA 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7E A7           	and a
 572+ 9C7F 20 1E        	jr nz,1F
 573+ 9C81 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C82 32 DA 8B         ld (CTRL_DESPLZ),a
 575+ 9C85 21 D5 8B     	ld hl,Columns
 576+ 9C88 34           	inc (hl)
 577+ 9C89 3A E5 8B     	ld a,(Cuad_objeto)
 578+ 9C8C E6 01        	and 1
 579+ 9C8E 20 0F        	jr nz,1F
 580+ 9C90 2A D6 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C93 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C94 22 D6 8B     	ld (Posicion_actual),hl
 583+ 9C97 CD DE 94     	call Genera_coordenadas
 584+ 9C9A CD F6 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9D 18 03        	jr 2F
 586+ 9C9F CD F6 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA2 C9           2 ret
 588+ 9CA3
 589+ 9CA3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA3
 591+ 9CA3 3A DA 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA6 FE F7        	cp $f7
 593+ 9CA8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CAA 30 2C        	jr nc,3F
 595+ 9CAC
 596+ 9CAC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAC
 598+ 9CAC 06 00        	ld b,0
 599+ 9CAE 04           4 inc b
 600+ 9CAF 3C           	inc a
 601+ 9CB0 FE F7        	cp $f7
 602+ 9CB2 20 FA        	jr nz,4B
 603+ 9CB4 3E FF        	ld a,$ff
 604+ 9CB6 90           	sub b
 605+ 9CB7 32 DA 8B     	ld (CTRL_DESPLZ),a
 606+ 9CBA 18 1C        	jr 3F
 607+ 9CBC
 608+ 9CBC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBC
 610+ 9CBC 21 D5 8B     1 ld hl,Columns
 611+ 9CBF 35           	dec (hl)
 612+ 9CC0 AF           	xor a
 613+ 9CC1 32 DA 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC4 3A E5 8B     	ld a,(Cuad_objeto)
 615+ 9CC7 E6 01        	and 1
 616+ 9CC9 28 0A        	jr z,2F
 617+ 9CCB 2A D6 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCE 2B           	dec hl
 619+ 9CCF 22 D6 8B     	ld (Posicion_actual),hl
 620+ 9CD2 CD DE 94     	call Genera_coordenadas
 621+ 9CD5
 622+ 9CD5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD5
 624+ 9CD5 CD E7 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD8 C9           3 ret
 626+ 9CD9
 627+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD9              ;
 629+ 9CD9              ;	19/10/22
 630+ 9CD9              ;
 631+ 9CD9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD9
 634+ 9CD9 3A C7 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDE C9           	ret
 637+ 9CDF
 638+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDF              ;
 640+ 9CDF              ;	19/10/22
 641+ 9CDF              ;
 642+ 9CDF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDF
 645+ 9CDF 3A C7 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE2 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE4 C9           	ret
 648+ 9CE5
 649+ 9CE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE5              ;
 651+ 9CE5              ;	24/7/22
 652+ 9CE5              ;
 653+ 9CE5              ;	Inc_CTRL_DESPLZ
 654+ 9CE5              ;
 655+ 9CE5              ;
 656+ 9CE5              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE5
 658+ 9CE5 21 DA 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE8 3A EC 8B     	ld a,(Vel_right)
 660+ 9CEB A7           	and a
 661+ 9CEC 28 06        	jr z,1F
 662+ 9CEE 47           	ld b,a
 663+ 9CEF 34           3 inc (hl)
 664+ 9CF0 10 FD        	djnz 3B
 665+ 9CF2 18 01        	jr 2F
 666+ 9CF4 34           1 inc (hl)
 667+ 9CF5 C9           2 ret
 668+ 9CF6
 669+ 9CF6              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF6              ;
 671+ 9CF6              ;	5/2/23
 672+ 9CF6              ;
 673+ 9CF6              ;	Dec_CTRL_DESPLZ
 674+ 9CF6              ;
 675+ 9CF6              ;
 676+ 9CF6              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF6
 678+ 9CF6 21 DA 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF9 3A EB 8B     	ld a,(Vel_left)
 680+ 9CFC A7           	and a
 681+ 9CFD 28 06        	jr z,1F
 682+ 9CFF 47           	ld b,a
 683+ 9D00 35           3 dec (hl)
 684+ 9D01 10 FD        	djnz 3B
 685+ 9D03 18 01        	jr 2F
 686+ 9D05 35           1 dec (hl)
 687+ 9D06 C9           2 ret
 688+ 9D07
 689+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D07
 691+ 9D07 2A D6 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D0A 01 1F 00     	ld bc,31
 693+ 9D0D A7           	and a
 694+ 9D0E ED 4A        	adc hl,bc
 695+ 9D10 22 D6 8B     	ld (Posicion_actual),hl
 696+ 9D13 21 D3 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D16 CB C6        	set 0,(hl)
 698+ 9D18 C9           	ret
 699+ 9D19
 700+ 9D19              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D19
 702+ 9D19 2A D6 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1C 01 1F 00     	ld bc,31
 704+ 9D1F A7           	and a
 705+ 9D20 ED 42        	sbc hl,bc
 706+ 9D22 22 D6 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D25 21 D3 8B     	ld hl,Ctrl_0
 708+ 9D28 CB CE        	set 1,(hl)
 709+ 9D2A C9           	ret
 710+ 9D2B
 711+ 9D2B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D2B
 713+ 9D2B 24           Reaparece_abajo inc h
 714+ 9D2C 01 E0 17     	ld bc,$17e0
 715+ 9D2F A7           	and a
 716+ 9D30 ED 4A        	adc hl,bc
 717+ 9D32 22 D6 8B     	ld (Posicion_actual),hl
 718+ 9D35 21 D3 8B     	ld hl,Ctrl_0
 719+ 9D38 CB D6        	set 2,(hl)
 720+ 9D3A C9           	ret
 721+ 9D3B
 722+ 9D3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D3B
 724+ 9D3B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3E A7           	and a
 726+ 9D3F ED 42        	sbc hl,bc
 727+ 9D41 22 D6 8B     	ld (Posicion_actual),hl
 728+ 9D44 21 D3 8B     	ld hl,Ctrl_0
 729+ 9D47 CB DE        	set 3,(hl)
 730+ 9D49 C9           	ret
 731+ 9D4A
 732+ 9D4A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D4A              ;
 734+ 9D4A              ;	15/07/23
 735+ 9D4A
 736+ 9D4A              Reinicio
 737+ 9D4A
 738+ 9D4A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D4A
 740+ 9D4A AF           	xor a
 741+ 9D4B 21 FB 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4E CD 6C 9D     	call Limpia_contenido_hl
 743+ 9D51
 744+ 9D51 21 D6 8B     	ld hl,Posicion_actual
 745+ 9D54 CD 6C 9D     	call Limpia_contenido_hl
 746+ 9D57
 747+ 9D57 CD C0 92     	call Inicializa_Puntero_indice_mov
 748+ 9D5A CD 6B 9E     	call Inicia_Puntero_mov
 749+ 9D5D
 750+ 9D5D 21 FD 8B     	ld hl,Incrementa_puntero
 751+ 9D60 06 05        	ld b,5
 752+ 9D62 77           1 ld (hl),a
 753+ 9D63 23           	inc hl
 754+ 9D64 10 FC        	djnz 1B
 755+ 9D66
 756+ 9D66 21 D2 8B     	ld hl,Ctrl_2
 757+ 9D69 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D6B
 759+ 9D6B C9           	ret
 760+ 9D6C
 761+ 9D6C 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6D 23           	inc hl
 763+ 9D6E 77           	ld (hl),a
 764+ 9D6F C9           	ret
 765+ 9D70
 766+ 9D70              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D70              ;
 768+ 9D70              ;	18/6/24
 769+ 9D70              ;
 770+ 9D70
 771+ 9D70              Amadeus_a_izquierda
 772+ 9D70
 773+ 9D70              ;	Actualiza contador de movimientos.
 774+ 9D70
 775+ 9D70 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D73 35           	dec (hl)
 777+ 9D74 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D76
 779+ 9D76 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D79 2B           	dec hl
 781+ 9D7A 2B           	dec hl
 782+ 9D7B 2B           	dec hl
 783+ 9D7C 2B           	dec hl
 784+ 9D7D 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D80
 786+ 9D80 21 3B 8C     	ld hl,Ctrl_3
 787+ 9D83 CB EE        	set 5,(hl)
 788+ 9D85
 789+ 9D85 C9           	ret
 790+ 9D86
 791+ 9D86 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D87 C9           	ret
 793+ 9D88
 794+ 9D88
 795+ 9D88              Amadeus_a_derecha
 796+ 9D88
 797+ 9D88              ;	Actualiza contador de movimientos.
 798+ 9D88
 799+ 9D88 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D8B 34           	inc (hl)
 801+ 9D8C 3E 7A        	ld a,$7a
 802+ 9D8E BE           	cp (hl)
 803+ 9D8F 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D91
 805+ 9D91 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D94 23           	inc hl
 807+ 9D95 23           	inc hl
 808+ 9D96 23           	inc hl
 809+ 9D97 23           	inc hl
 810+ 9D98 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D9B
 812+ 9D9B 21 3B 8C     	ld hl,Ctrl_3
 813+ 9D9E CB EE        	set 5,(hl)
 814+ 9DA0 C9           	ret
 815+ 9DA1
 816+ 9DA1 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA2 C9           	ret
# file closed: Direcciones.asm
2087  9DA3              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA3              ; ----- ----- ----- ----- -----
   2+ 9DA3              ;
   3+ 9DA3              ;   28/12/23
   4+ 9DA3
   5+ 9DA3              Movimiento
   6+ 9DA3
   7+ 9DA3              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA3
   9+ 9DA3 3A D2 8B         ld a,(Ctrl_2)
  10+ 9DA6 CB 57            bit 2,a
  11+ 9DA8 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DAA
  13+ 9DAA 2A F9 8B         ld hl,(Puntero_mov)
  14+ 9DAD 7E               ld a,(hl)
  15+ 9DAE
  16+ 9DAE              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAE
  18+ 9DAE              Inicia_desplazamiento.
  19+ 9DAE
  20+ 9DAE              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAE
  22+ 9DAE CD A1 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB1
  24+ 9DB1              ; Iniciamos (Repetimos_mov).
  25+ 9DB1
  26+ 9DB1 7E               ld a,(hl)
  27+ 9DB2 E6 0F            and $0f
  28+ 9DB4 32 FF 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB7 32 00 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DBA
  31+ 9DBA              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DBA
  33+ 9DBA 23               inc hl
  34+ 9DBB 7E               ld a,(hl)
  35+ 9DBC 32 02 8C         ld (Cola_de_desplazamiento),a
  36+ 9DBF 2B               dec hl
  37+ 9DC0
  38+ 9DC0 21 D2 8B         ld hl,Ctrl_2
  39+ 9DC3 CB D6            set 2,(hl)
  40+ 9DC5
  41+ 9DC5              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC5              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC5
  44+ 9DC5              Desplazamiento_iniciado
  45+ 9DC5
  46+ 9DC5 CD 75 9E         call Aplica_desplazamiento
  47+ 9DC8
  48+ 9DC8              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC8
  50+ 9DC8 3A 3B 8C         ld a,(Ctrl_3)
  51+ 9DCB CB 4F            bit 1,a
  52+ 9DCD C0               ret nz
  53+ 9DCE
  54+ 9DCE 21 FF 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD1 35               dec (hl)
  56+ 9DD2 C0               ret nz
  57+ 9DD3
  58+ 9DD3              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD3              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD3              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD3
  62+ 9DD3 3A 02 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD6 A7               and a
  64+ 9DD7 CC CA 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DDA 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDC
  67+ 9DDC FE FF            cp $ff
  68+ 9DDE 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE0
  70+ 9DE0 FE FE            cp $fe
  71+ 9DE2 CC 4F 9E         call z,Fijamos_bucle
  72+ 9DE5 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE7
  74+ 9DE7 FE FD            cp $fd
  75+ 9DE9 20 11            jr nz,1F
  76+ 9DEB
  77+ 9DEB              ; ---
  78+ 9DEB              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DEB
  80+ 9DEB 3A D2 8B         ld a,(Ctrl_2)
  81+ 9DEE CB 5F            bit 3,a
  82+ 9DF0 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF2
  84+ 9DF2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF2
  86+ 9DF2 21 D2 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF7
  89+ 9DF7 CD 60 9E         call Inicia_Repetimos_movimiento
  90+ 9DFA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFC              ; ---
  92+ 9DFC
  93+ 9DFC FE 01        1 cp 1
  94+ 9DFE CA 39 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E01
  96+ 9E01 3D               dec a
  97+ 9E02 32 02 8C         ld (Cola_de_desplazamiento),a
  98+ 9E05
  99+ 9E05 3A 00 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E08 32 FF 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E0B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E0B C9               ret
 103+ 9E0C
 104+ 9E0C              Reinicia_el_movimiento
 105+ 9E0C
 106+ 9E0C 3A D2 8B         ld a,(Ctrl_2)
 107+ 9E0F CB 5F            bit 3,a
 108+ 9E11 28 1B            jr z,2F
 109+ 9E13
 110+ 9E13              ; (Cola_de_desplazamiento)="254".
 111+ 9E13
 112+ 9E13 21 01 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E16 35               dec (hl)
 114+ 9E17 20 15            jr nz,2F
 115+ 9E19
 116+ 9E19              ; Fin de las repeticiones del último movimiento.
 117+ 9E19
 118+ 9E19 21 D2 8B         ld hl,Ctrl_2
 119+ 9E1C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1E
 121+ 9E1E 2A F9 8B         ld hl,(Puntero_mov)
 122+ 9E21 23               inc hl
 123+ 9E22 23               inc hl
 124+ 9E23 23               inc hl
 125+ 9E24 22 F9 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E27              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E27 7E               ld a,(hl)
 128+ 9E28 32 02 8C         ld (Cola_de_desplazamiento),a
 129+ 9E2B
 130+ 9E2B C3 D3 9D         jp Cola
 131+ 9E2E
 132+ 9E2E CD 6B 9E     2 call Inicia_Puntero_mov
 133+ 9E31
 134+ 9E31 21 D2 8B         ld hl,Ctrl_2
 135+ 9E34 CB 96            res 2,(hl)
 136+ 9E36
 137+ 9E36 C3 A3 9D         jp Movimiento
 138+ 9E39
 139+ 9E39              Siguiente_desplazamiento
 140+ 9E39
 141+ 9E39              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E39              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E39
 144+ 9E39 21 D2 8B         ld hl,Ctrl_2
 145+ 9E3C CB 96            res 2,(hl)
 146+ 9E3E
 147+ 9E3E 2A F9 8B         ld hl,(Puntero_mov)
 148+ 9E41 23               inc hl
 149+ 9E42 23               inc hl
 150+ 9E43 22 F9 8B         ld (Puntero_mov),hl
 151+ 9E46
 152+ 9E46 7E               ld a,(hl)
 153+ 9E47 A7               and a
 154+ 9E48 CC CA 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E4B CA 0C 9E         jp z,Reinicia_el_movimiento
 156+ 9E4E
 157+ 9E4E C9               ret
 158+ 9E4F
 159+ 9E4F              ; Subrutinas -----------------------------------------
 160+ 9E4F              ; ---------- --------- --------- ---------- ----------
 161+ 9E4F              ;
 162+ 9E4F              ;   24/07/23
 163+ 9E4F              ;
 164+ 9E4F              ;   Fijamos_bucle
 165+ 9E4F              ;
 166+ 9E4F              ;
 167+ 9E4F
 168+ 9E4F              Fijamos_bucle
 169+ 9E4F
 170+ 9E4F 3A FD 8B         ld a,(Incrementa_puntero)
 171+ 9E52 3C               inc a
 172+ 9E53 32 FE 8B         ld (Incrementa_puntero_backup),a
 173+ 9E56
 174+ 9E56 CD CA 9E         call Incrementa_Puntero_indice_mov
 175+ 9E59 2A F7 8B         ld hl,(Puntero_indice_mov)
 176+ 9E5C 22 FB 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5F C9               ret
 178+ 9E60
 179+ 9E60              ; ---------- --------- --------- ---------- ----------
 180+ 9E60              ;
 181+ 9E60              ;   07/7/23
 182+ 9E60              ;
 183+ 9E60              ;   Inicia_Repetimos_movimiento
 184+ 9E60              ;
 185+ 9E60              ;
 186+ 9E60
 187+ 9E60              Inicia_Repetimos_movimiento
 188+ 9E60
 189+ 9E60              ; Iniciamos (Repetimos_movimiento).
 190+ 9E60
 191+ 9E60 DD 2A F9 8B      ld ix,(Puntero_mov)
 192+ 9E64 DD 7E 02         ld a,(ix+2)
 193+ 9E67 32 01 8C         ld (Repetimos_movimiento),a
 194+ 9E6A
 195+ 9E6A C9               ret
 196+ 9E6B
 197+ 9E6B              ; ---------- --------- --------- ---------- ----------
 198+ 9E6B              ;
 199+ 9E6B              ;   26/6/23
 200+ 9E6B              ;
 201+ 9E6B              ;   Inicia_Puntero_mov
 202+ 9E6B              ;
 203+ 9E6B              ;
 204+ 9E6B
 205+ 9E6B 2A F7 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6E CD BF 90         call Extrae_address
 207+ 9E71 22 F9 8B         ld (Puntero_mov),hl
 208+ 9E74 C9               ret
 209+ 9E75
 210+ 9E75              ; ---------- --------- --------- ---------- ----------
 211+ 9E75              ;
 212+ 9E75              ;   27/06/23
 213+ 9E75              ;
 214+ 9E75              ;   Aplica_movimiento.
 215+ 9E75
 216+ 9E75              Aplica_desplazamiento
 217+ 9E75
 218+ 9E75              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E75
 220+ 9E75 2A F9 8B         ld hl, (Puntero_mov)
 221+ 9E78
 222+ 9E78 7E               ld a,(hl)
 223+ 9E79 E6 F0            and $f0
 224+ 9E7B C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7C
 226+ 9E7C CB 7E            bit 7,(hl)
 227+ 9E7E 28 03            jr z,1F
 228+ 9E80 CD 57 9A         call Mov_up
 229+ 9E83 2A F9 8B     1 ld hl, (Puntero_mov)
 230+ 9E86 CB 76            bit 6,(hl)
 231+ 9E88 28 03            jr z,2F
 232+ 9E8A CD 1E 9A         call Mov_down
 233+ 9E8D
 234+ 9E8D              ; Se ha aplicado reinicio ???
 235+ 9E8D              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8D
 237+ 9E8D              ;    ld a,(Ctrl_3)
 238+ 9E8D              ;    bit 1,a
 239+ 9E8D              ;    ret nz
 240+ 9E8D
 241+ 9E8D 2A F9 8B     2 ld hl, (Puntero_mov)
 242+ 9E90 CB 6E            bit 5,(hl)
 243+ 9E92 28 03            jr z,3F
 244+ 9E94 CD BD 9B         call Mov_left
 245+ 9E97 2A F9 8B     3 ld hl, (Puntero_mov)
 246+ 9E9A CB 66            bit 4,(hl)
 247+ 9E9C C8               ret z
 248+ 9E9D CD 9A 9A         call Mov_right
 249+ 9EA0 C9               ret
 250+ 9EA1
 251+ 9EA1              ; ---------- --------- --------- ---------- ----------
 252+ 9EA1              ;
 253+ 9EA1              ;   26/06/23
 254+ 9EA1              ;
 255+ 9EA1              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA1
 257+ 9EA1              Ajusta_velocidad_desplazamiento
 258+ 9EA1
 259+ 9EA1              ; 1er byte de la cadena de movimiento.
 260+ 9EA1              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA1
 262+ 9EA1 CD BF 9E         call Extrae_nibble_alto
 263+ 9EA4
 264+ 9EA4 32 ED 8B         ld (Vel_up),a
 265+ 9EA7 79               ld a,c
 266+ 9EA8 E6 0F            and $0f
 267+ 9EAA 32 EE 8B         ld (Vel_down),a
 268+ 9EAD
 269+ 9EAD              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAD              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAD
 272+ 9EAD 23               inc hl
 273+ 9EAE CD BF 9E         call Extrae_nibble_alto
 274+ 9EB1
 275+ 9EB1 32 EB 8B         ld (Vel_left),a
 276+ 9EB4 79               ld a,c
 277+ 9EB5 E6 0F            and $0f
 278+ 9EB7 32 EC 8B         ld (Vel_right),a
 279+ 9EBA
 280+ 9EBA              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EBA
 282+ 9EBA 23               inc hl
 283+ 9EBB 22 F9 8B         ld (Puntero_mov),hl
 284+ 9EBE C9               ret
 285+ 9EBF
 286+ 9EBF 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC1 7E               ld a,(hl)
 288+ 9EC2 4F               ld c,a
 289+ 9EC3 E6 F0            and $f0
 290+ 9EC5 CB 3F        1 srl a
 291+ 9EC7 10 FC            djnz 1B
 292+ 9EC9 C9               ret
 293+ 9ECA
 294+ 9ECA              ; ---------- --------- --------- ---------- ----------
 295+ 9ECA              ;
 296+ 9ECA              ;   5/7/23
 297+ 9ECA              ;
 298+ 9ECA              ;   Incrementa_Puntero_indice_mov
 299+ 9ECA
 300+ 9ECA              Incrementa_Puntero_indice_mov
 301+ 9ECA
 302+ 9ECA 21 FD 8B         ld hl,Incrementa_puntero
 303+ 9ECD 34               inc (hl)
 304+ 9ECE
 305+ 9ECE 2A F7 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED1 01 02 00         ld bc,2
 307+ 9ED4 A7               and a
 308+ 9ED5 09               add hl,bc
 309+ 9ED6 22 F7 8B         ld (Puntero_indice_mov),hl
 310+ 9ED9
 311+ 9ED9 7E               ld a,(hl)
 312+ 9EDA A7               and a
 313+ 9EDB
 314+ 9EDB              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EDB
 316+ 9EDB              ;    jr z,$
 317+ 9EDB
 318+ 9EDB              ;! Reinicia el Patrón de movimiento.
 319+ 9EDB
 320+ 9EDB CC E0 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDE
 322+ 9EDE AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDF
 324+ 9EDF C9               ret
 325+ 9EE0
 326+ 9EE0              ; ---------- --------- --------- ---------- ----------
 327+ 9EE0              ;
 328+ 9EE0              ;   15/01/24
 329+ 9EE0              ;
 330+ 9EE0              ;   Inicializa_Puntero_indice_mov
 331+ 9EE0
 332+ 9EE0              Inicializa_Puntero_indice_mov_2
 333+ 9EE0
 334+ 9EE0              ; Existe etiqueta de bucle principal???
 335+ 9EE0
 336+ 9EE0 2A FB 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE3 24               inc h
 338+ 9EE4 25               dec h
 339+ 9EE5 28 05            jr z,2F
 340+ 9EE7
 341+ 9EE7 22 F7 8B         ld (Puntero_indice_mov),hl
 342+ 9EEA 18 14            jr 3F
 343+ 9EEC
 344+ 9EEC              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEC
 346+ 9EEC 3A FD 8B     2 ld a,(Incrementa_puntero)
 347+ 9EEF 47               ld b,a
 348+ 9EF0
 349+ 9EF0 2A F7 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF3 2B           1 dec hl
 351+ 9EF4 2B               dec hl
 352+ 9EF5 10 FC            djnz 1B
 353+ 9EF7 22 F7 8B         ld (Puntero_indice_mov),hl
 354+ 9EFA
 355+ 9EFA AF               xor a
 356+ 9EFB 32 FD 8B         ld (Incrementa_puntero),a
 357+ 9EFE 18 06            jr 4F
 358+ 9F00
 359+ 9F00 3A FE 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F03 32 FD 8B         ld (Incrementa_puntero),a
 361+ 9F06 C9           4 ret
 362+ 9F07
 363+ 9F07              ; ----------------------------------------------------------------------
 364+ 9F07              ;
 365+ 9F07              ;   30/01/24
 366+ 9F07              ;
 367+ 9F07              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F07
 369+ 9F07 3A C6 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F0A CD 5B 94         call Calcula_salto_en_BC
 371+ 9F0D 21 EF 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F10 A7               and a
 373+ 9F11 ED 4A            adc hl,bc
 374+ 9F13 C9               ret
 375+ 9F14
 376+ 9F14              ; ----------------------------------------------------------------------
 377+ 9F14              ;
 378+ 9F14              ;   30/01/24
 379+ 9F14              ;
 380+ 9F14              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F14              ;
 382+ 9F14              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F14
 384+ 9F14 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F15 23               inc hl
 386+ 9F16 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F17 69               ld l,c
 388+ 9F18 60               ld h,b
 389+ 9F19 22 CF 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1C C9               ret
 391+ 9F1D
# file closed: Movimiento.asm
2088  9F1D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1D              ; --------------------------------------------------------------------------------------
   2+ 9F1D              ;
   3+ 9F1D              ;   25/10/24
   4+ 9F1D              ;
   5+ 9F1D
   6+ 9F1D              Pinta_disparos_Entidades
   7+ 9F1D
   8+ 9F1D ED 73 13 8C      ld (Stack),sp
   9+ 9F21 ED 7B 25 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F25
  11+ 9F25 3E 02            ld a,2
  12+ 9F27 08               ex af,af
  13+ 9F28
  14+ 9F28 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F2A              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F2A              ;                                     _ No encontraría "0".
  17+ 9F2A FD E1        4 pop iy
  18+ 9F2C D1               pop de                          ; 1er .db IYL
  19+ 9F2D              ;                                   ; 2º  .db IYH
  20+ 9F2D              ;                                   ; 3er .db E.
  21+ 9F2D              ;   Album vacío ???
  22+ 9F2D
  23+ 9F2D FD 7D            ld a,iyl
  24+ 9F2F FD 84            add iyh
  25+ 9F31 83               add e
  26+ 9F32 28 1F            jr z,1F
  27+ 9F34
  28+ 9F34              ;   Imprime album, (contiene datos).
  29+ 9F34
  30+ 9F34 3B               dec sp
  31+ 9F35
  32+ 9F35 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F36
  34+ 9F36              ; Imprime el 1er scanline del disparo.
  35+ 9F36
  36+ 9F36 FD 7D            ld a,iyl
  37+ 9F38 AE               xor (hl)
  38+ 9F39 77               ld (hl),a
  39+ 9F3A
  40+ 9F3A 2C               inc l
  41+ 9F3B
  42+ 9F3B FD 7C            ld a,iyh
  43+ 9F3D AE               xor (hl)
  44+ 9F3E 77               ld (hl),a
  45+ 9F3F
  46+ 9F3F 2C               inc l
  47+ 9F40
  48+ 9F40 7B               ld a,e
  49+ 9F41 AE               xor (hl)
  50+ 9F42 77               ld (hl),a
  51+ 9F43
  52+ 9F43              ; Imprime el 2º scanline del disparo.
  53+ 9F43
  54+ 9F43 E1               pop hl
  55+ 9F44
  56+ 9F44 FD 7D            ld a,iyl
  57+ 9F46 AE               xor (hl)
  58+ 9F47 77               ld (hl),a
  59+ 9F48
  60+ 9F48 2C               inc l
  61+ 9F49
  62+ 9F49 FD 7C            ld a,iyh
  63+ 9F4B AE               xor (hl)
  64+ 9F4C 77               ld (hl),a
  65+ 9F4D
  66+ 9F4D 2C               inc l
  67+ 9F4E
  68+ 9F4E 7B               ld a,e
  69+ 9F4F AE               xor (hl)
  70+ 9F50 77               ld (hl),a
  71+ 9F51
  72+ 9F51 10 D7            djnz 4B
  73+ 9F53
  74+ 9F53 08           1 ex af,af
  75+ 9F54 3D               dec a
  76+ 9F55 20 05            jr nz,2F
  77+ 9F57
  78+ 9F57 ED 7B 13 8C      ld sp,(Stack)
  79+ 9F5B C9               ret
  80+ 9F5C
  81+ 9F5C ED 7B 23 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F60 08               ex af,af
  83+ 9F61 18 C5            jr 3B
  84+ 9F63
  85+ 9F63              ; --------------------------------------------------------------------------------------
  86+ 9F63              ;
  87+ 9F63              ;   30/10/24
  88+ 9F63              ;
  89+ 9F63
  90+ 9F63              Motor_de_disparos_entidades
  91+ 9F63
  92+ 9F63 3A 2B 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F66 FE 07            cp 7
  94+ 9F68 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F69
  96+ 9F69 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F6B 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F6E
  99+ 9F6E CD BF 90     1 call Extrae_address
 100+ 9F71 1C               inc e
 101+ 9F72 1C               inc e
 102+ 9F73 ED 53 3E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F77
 104+ 9F77               ; Caja vacía ???
 105+ 9F77
 106+ 9F77 2D               dec l
 107+ 9F78 7E               ld a,(hl)
 108+ 9F79 A7               and a
 109+ 9F7A 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F7C
 111+ 9F7C              ; --- Trabajamos con caja:
 112+ 9F7C
 113+ 9F7C 2C               inc l
 114+ 9F7D
 115+ 9F7D              ; --- Existe posibilidad de impacto ???
 116+ 9F7D
 117+ 9F7D CB 46            bit 0,(hl)
 118+ 9F7F C4 BF 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F82 20 37            jr nz,3F
 120+ 9F84
 121+ 9F84 CD 46 A0         call Rota_disparo_si_procede
 122+ 9F87
 123+ 9F87              ; ------------------------------------------------------------
 124+ 9F87
 125+ 9F87 2D               dec l
 126+ 9F88 2D               dec l
 127+ 9F89
 128+ 9F89 CD BF 90         call Extrae_address
 129+ 9F8C
 130+ 9F8C              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F8C              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F8C
 133+ 9F8C 3A 3D 8C         ld a,(Ctrl_5)
 134+ 9F8F CB 57            bit 2,a
 135+ 9F91 28 09            jr z,4F
 136+ 9F93
 137+ 9F93 CB 97            res 2,a
 138+ 9F95 32 3D 8C         ld (Ctrl_5),a
 139+ 9F98 2C               inc l
 140+ 9F99 2C               inc l
 141+ 9F9A 18 0C            jr 5F
 142+ 9F9C
 143+ 9F9C CB 5F        4 bit 3,a
 144+ 9F9E 28 08            jr z,5F
 145+ 9FA0
 146+ 9FA0 CB 9F            res 3,a
 147+ 9FA2 32 3D 8C         ld (Ctrl_5),a
 148+ 9FA5 2D               dec l
 149+ 9FA6 2D               dec l
 150+ 9FA7 2D               dec l
 151+ 9FA8
 152+ 9FA8              ; ---------------------------------------------------------------------
 153+ 9FA8
 154+ 9FA8              ;! Velocidad del disparo de entidades.
 155+ 9FA8
 156+ 9FA8 CD D8 99     5 call NextScan
 157+ 9FAB CD D8 99         call NextScan
 158+ 9FAE
 159+ 9FAE              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FAE
 161+ 9FAE CD 23 A0         call Fin_de_disparo_de_entidad
 162+ 9FB1
 163+ 9FB1 EB               ex de,hl
 164+ 9FB2
 165+ 9FB2 73               ld (hl),e
 166+ 9FB3 23               inc hl
 167+ 9FB4 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FB5
 169+ 9FB5 2A 3E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FB8 18 02            jr 2F
 171+ 9FBA
 172+ 9FBA C9               ret
 173+ 9FBB
 174+ 9FBB EB           3 ex de,hl
 175+ 9FBC 10 B0        2 djnz 1B
 176+ 9FBE
 177+ 9FBE C9               ret
 178+ 9FBF
 179+ 9FBF              ; ------------- ------------- ------------
 180+ 9FBF              ;
 181+ 9FBF              ;   1/11/24
 182+ 9FBF
 183+ 9FBF              Comprueba_impacto_con_Amadeus
 184+ 9FBF
 185+ 9FBF              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FBF              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FBF
 188+ 9FBF              ;   Modificamos registros, así que guardamos ...
 189+ 9FBF
 190+ 9FBF C5               push bc
 191+ 9FC0 E5               push hl
 192+ 9FC1 D5               push de
 193+ 9FC2
 194+ 9FC2 2D               dec l
 195+ 9FC3 2D               dec l
 196+ 9FC4
 197+ 9FC4 CD BF 90         call Extrae_address
 198+ 9FC7
 199+ 9FC7 3A 6E 89         ld a,(CX_Amadeus)
 200+ 9FCA 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FCB
 202+ 9FCB 7D               ld a,l
 203+ 9FCC E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FCE
 205+ 9FCE 06 03            ld b,3
 206+ 9FD0
 207+ 9FD0 B9           1 cp c
 208+ 9FD1 28 15            jr z,Coincidencia
 209+ 9FD3 0C               inc c
 210+ 9FD4 10 FA            djnz 1B
 211+ 9FD6
 212+ 9FD6 0D               dec c
 213+ 9FD7 0D               dec c
 214+ 9FD8 0D               dec c
 215+ 9FD9
 216+ 9FD9 3C               inc a
 217+ 9FDA B9               cp c
 218+ 9FDB 28 0B            jr z,Coincidencia
 219+ 9FDD
 220+ 9FDD 3C               inc a
 221+ 9FDE B9               cp c
 222+ 9FDF 28 07            jr z,Coincidencia
 223+ 9FE1
 224+ 9FE1 D1           2 pop de
 225+ 9FE2 E1               pop hl
 226+ 9FE3 C1               pop bc
 227+ 9FE4
 228+ 9FE4              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FE4
 230+ 9FE4 CB 86            res 0,(hl)
 231+ 9FE6 AF               xor a                       ; Z before RET.
 232+ 9FE7 C9               ret
 233+ 9FE8
 234+ 9FE8              Coincidencia
 235+ 9FE8
 236+ 9FE8              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FE8              ;   Existe posibilidad de impacto.
 238+ 9FE8              ;   Vamos a averiguarlo ...
 239+ 9FE8
 240+ 9FE8 1D               dec e
 241+ 9FE9 1D               dec e
 242+ 9FEA 1D               dec e
 243+ 9FEB
 244+ 9FEB              ; DE en Puntero_objeto del disparo.
 245+ 9FEB              ; HL en Puntero_de_impresión del disparo.
 246+ 9FEB
 247+ 9FEB              ; Comparador:
 248+ 9FEB
 249+ 9FEB 06 03            ld b,3
 250+ 9FED
 251+ 9FED 1A           3 ld a,(de)
 252+ 9FEE 4F               ld c,a
 253+ 9FEF A6               and (hl)
 254+ 9FF0 B9               cp c
 255+ 9FF1 20 06            jr nz,Amadeus_impactado
 256+ 9FF3
 257+ 9FF3 2C               inc l
 258+ 9FF4 1C               inc e
 259+ 9FF5
 260+ 9FF5 10 F6            djnz 3B
 261+ 9FF7
 262+ 9FF7 18 E8            jr 2B
 263+ 9FF9
 264+ 9FF9              Amadeus_impactado
 265+ 9FF9
 266+ 9FF9              ; Borramos disparo.
 267+ 9FF9
 268+ 9FF9 D1               pop de
 269+ 9FFA E1               pop hl
 270+ 9FFB
 271+ 9FFB E5               push hl
 272+ 9FFC D5               push de
 273+ 9FFD
 274+ 9FFD CD B1 A0         call Borra_6_bytes
 275+ A000
 276+ A000 21 2B 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A003 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A004
 279+ A004              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A004
 281+ A004 21 71 89         ld hl,Impacto_Amadeus
 282+ A007 36 01            ld (hl),1
 283+ A009
 284+ A009              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A009              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A009
 287+ A009 3A 72 89         ld a,(p.imp.amadeus)
 288+ A00C FE DE            cp $de
 289+ A00E 20 04            jr nz,1F
 290+ A010
 291+ A010 3D               dec a
 292+ A011 32 72 89         ld (p.imp.amadeus),a
 293+ A014
 294+ A014              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A014
 296+ A014 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A017 21 74 89         ld hl,Pamm_Amadeus
 298+ A01A
 299+ A01A 73               ld (hl),e
 300+ A01B 23               inc hl
 301+ A01C 72               ld (hl),d
 302+ A01D
 303+ A01D D1               pop de
 304+ A01E E1               pop hl
 305+ A01F C1               pop bc
 306+ A020
 307+ A020 AF               xor a
 308+ A021 3C               inc a               ; NZ before RET.
 309+ A022 C9               ret
 310+ A023
 311+ A023              ; ------------- ------------- ------------
 312+ A023              ;
 313+ A023              ;   31/10/24
 314+ A023
 315+ A023              Fin_de_disparo_de_entidad
 316+ A023
 317+ A023              ; Estamos en zona de Amadeus ??
 318+ A023
 319+ A023 7C               ld a,h
 320+ A024 FE 54            cp $54
 321+ A026 38 0D            jr c,1F
 322+ A028
 323+ A028 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A029
 325+ A029 5D               ld e,l
 326+ A02A 54               ld d,h
 327+ A02B
 328+ A02B 21 E0 57         ld hl,$57e0
 329+ A02E ED 52            sbc hl,de
 330+ A030
 331+ A030 38 6F            jr c,Elimina_disparo_entidad
 332+ A032
 333+ A032 6B               ld l,e
 334+ A033 62               ld h,d
 335+ A034
 336+ A034 D1               pop de
 337+ A035
 338+ A035 7C           1 ld a,h
 339+ A036 FE 50            cp $50
 340+ A038 D8               ret c
 341+ A039
 342+ A039 7D               ld a,l
 343+ A03A FE C0            cp $c0
 344+ A03C D8               ret c
 345+ A03D
 346+ A03D              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A03D              ; Así podremos comprobar si hay colisión más adelante.
 348+ A03D
 349+ A03D 1C               inc e
 350+ A03E 1C               inc e
 351+ A03F
 352+ A03F EB               ex de,hl
 353+ A040 CB C6            set 0,(hl)
 354+ A042 EB               ex de,hl
 355+ A043
 356+ A043 1D               dec e
 357+ A044 1D               dec e
 358+ A045
 359+ A045 C9               ret
 360+ A046
 361+ A046              ; ----------------------------------------------------------
 362+ A046              ;
 363+ A046              ;   08/10/24
 364+ A046
 365+ A046              ;   Estructura de un disparo de entidades.
 366+ A046
 367+ A046              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A046              ; 	defw 0											; Puntero de impresión.
 369+ A046              ;	defw 0											; Control.
 370+ A046
 371+ A046              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A046              ;   _de la entidad en el momento de disparar.
 373+ A046
 374+ A046              ;   El byte alto muestra la siguiente información:
 375+ A046              ;
 376+ A046              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A046              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A046              ;
 379+ A046              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A046              ;
 381+ A046              ;                        10xx ..... Izquierda.
 382+ A046              ;                        01xx ..... Derecha.
 383+ A046              ;                        00xx ..... Recto.
 384+ A046
 385+ A046              Rota_disparo_si_procede
 386+ A046
 387+ A046              ;   Nos situamos en el byte alto de (Control).
 388+ A046
 389+ A046 CB 76            bit 6,(hl)
 390+ A048 20 2D            jr nz,Rota_a_derecha
 391+ A04A CB 7E            bit 7,(hl)
 392+ A04C C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A04D
 394+ A04D              Rota_a_izq
 395+ A04D
 396+ A04D E5               push hl
 397+ A04E
 398+ A04E 7D               ld a,l
 399+ A04F D6 05            sub 5
 400+ A051 6F               ld l,a
 401+ A052
 402+ A052 E5               push hl
 403+ A053 FD E1            pop iy
 404+ A055
 405+ A055 A7               and a
 406+ A056
 407+ A056 FD CB 02 16      rl (iy+02)
 408+ A05A FD CB 01 16      rl (iy+01)
 409+ A05E FD CB 00 16      rl (iy+00)
 410+ A062
 411+ A062 30 3B            jr nc,Exit
 412+ A064
 413+ A064              ; Desplazamiento completo hasta Carry.
 414+ A064              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A064
 416+ A064 FD 36 02 03      ld (iy+02),$03
 417+ A068 FD 36 01 00      ld (iy+01),$00
 418+ A06C FD 36 00 00      ld (iy+00),$00
 419+ A070
 420+ A070 21 3D 8C         ld hl,Ctrl_5
 421+ A073 CB DE            set 3,(hl)
 422+ A075
 423+ A075 18 28            jr Exit
 424+ A077
 425+ A077              Rota_a_derecha
 426+ A077
 427+ A077 E5               push hl
 428+ A078
 429+ A078 7D               ld a,l
 430+ A079 D6 05            sub 5
 431+ A07B 6F               ld l,a
 432+ A07C
 433+ A07C E5               push hl
 434+ A07D FD E1            pop iy
 435+ A07F
 436+ A07F A7               and a
 437+ A080
 438+ A080 FD CB 00 1E      rr (iy+00)
 439+ A084 FD CB 01 1E      rr (iy+01)
 440+ A088 FD CB 02 1E      rr (iy+02)
 441+ A08C
 442+ A08C 30 11            jr nc,Exit
 443+ A08E
 444+ A08E              ; Desplazamiento completo hasta Carry.
 445+ A08E              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A08E
 447+ A08E FD 36 00 01      ld (iy+00),$01
 448+ A092 FD 36 01 80      ld (iy+01),$80
 449+ A096 FD 36 02 00      ld (iy+02),$00
 450+ A09A
 451+ A09A 21 3D 8C         ld hl,Ctrl_5
 452+ A09D CB D6            set 2,(hl)
 453+ A09F
 454+ A09F E1           Exit pop hl
 455+ A0A0 C9               ret
 456+ A0A1
 457+ A0A1              ; ------------ ----------- ------------
 458+ A0A1              ;
 459+ A0A1              ;   25/9/24
 460+ A0A1
 461+ A0A1              Elimina_disparo_entidad
 462+ A0A1
 463+ A0A1 21 2B 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0A4 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0A5
 466+ A0A5 E1               pop hl
 467+ A0A6 E5               push hl
 468+ A0A7
 469+ A0A7 2C               inc l
 470+ A0A8 2C               inc l
 471+ A0A9
 472+ A0A9 CD B1 A0         call Borra_6_bytes
 473+ A0AC
 474+ A0AC D1               pop de
 475+ A0AD
 476+ A0AD 21 00 00         ld hl,0
 477+ A0B0
 478+ A0B0 C9               ret
 479+ A0B1
 480+ A0B1              ; ----- ----- ----- ----- -----
 481+ A0B1
 482+ A0B1              Borra_6_bytes
 483+ A0B1
 484+ A0B1 16 06            ld d,6                                                    ; Contador
 485+ A0B3 AF               xor a                                                     ; Borrador
 486+ A0B4 77           1 ld (hl),a
 487+ A0B5 2D               dec l
 488+ A0B6 15               dec d
 489+ A0B7 20 FB            jr nz,1B
 490+ A0B9
 491+ A0B9 C9               ret
 492+ A0BA
 493+ A0BA              ; --------------------------------------------------------------------------------------
 494+ A0BA              ;
 495+ A0BA              ;   12/10/24
 496+ A0BA              ;
 497+ A0BA
 498+ A0BA              Genera_datos_de_impresion_disparos_Entidades
 499+ A0BA
 500+ A0BA 3E 07            ld a,7
 501+ A0BC 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0BD
 503+ A0BD              ; ---------------
 504+ A0BD
 505+ A0BD              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0BD
 507+ A0BD 21 23 89          ld hl,Indice_de_disparos_entidades
 508+ A0C0
 509+ A0C0 CD BF 90     1 call Extrae_address
 510+ A0C3
 511+ A0C3 13               inc de
 512+ A0C4 13               inc de
 513+ A0C5
 514+ A0C5 ED 53 3E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0C9
 516+ A0C9 2D               dec l
 517+ A0CA 7E               ld a,(hl)
 518+ A0CB A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0CC 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0CE
 521+ A0CE              ; ----- ----- ----- -----
 522+ A0CE
 523+ A0CE 2D               dec l
 524+ A0CF CD BF 90         call Extrae_address
 525+ A0D2 E5               push hl
 526+ A0D3
 527+ A0D3 1D               dec e
 528+ A0D4
 529+ A0D4 EB               ex de,hl
 530+ A0D5
 531+ A0D5 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0D6 2D               dec l
 533+ A0D7 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0D8 2D               dec l
 535+ A0D9 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0DA
 537+ A0DA E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0DB
 539+ A0DB              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0DB
 541+ A0DB FD 2A 27 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0DF FD 73 00         ld (iy+0),e
 543+ A0E2 FD 70 01         ld (iy+1),b
 544+ A0E5 FD 71 02         ld (iy+2),c
 545+ A0E8
 546+ A0E8 FD 75 03         ld (iy+3),l
 547+ A0EB FD 74 04         ld (iy+4),h
 548+ A0EE
 549+ A0EE CD D8 99         call NextScan
 550+ A0F1
 551+ A0F1 FD 75 05         ld (iy+5),l
 552+ A0F4 FD 74 06         ld (iy+6),h
 553+ A0F7
 554+ A0F7 FD E5            push iy
 555+ A0F9 E1               pop hl
 556+ A0FA
 557+ A0FA 3E 07            ld a,7
 558+ A0FC 85               add l
 559+ A0FD 6F               ld l,a
 560+ A0FE
 561+ A0FE 22 27 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A101
 563+ A101              ; ----- ----- ----- -----
 564+ A101
 565+ A101              Situa_en_siguiente_caja
 566+ A101
 567+ A101 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A102 3D               dec a
 569+ A103 C8               ret z
 570+ A104
 571+ A104 08               ex af,af
 572+ A105 2A 3E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A108 18 B6            jr 1B
 574+ A10A
 575+ A10A              ; --------------------------------------------------------------------------------------
 576+ A10A              ;
 577+ A10A              ;   12/10/24
 578+ A10A              ;
 579+ A10A
 580+ A10A              Genera_disparo_de_entidad_maldosa
 581+ A10A
 582+ A10A              ;   Estructura de un disparo de entidades.
 583+ A10A
 584+ A10A              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A10A              ; 	defw 0											; Puntero de impresión.
 586+ A10A              ;	defw 0											; Control.
 587+ A10A
 588+ A10A              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A10A              ;   _de la entidad en el momento de disparar.
 590+ A10A
 591+ A10A              ;   El byte de control muestra la siguiente información:
 592+ A10A
 593+ A10A              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A10A              ;
 595+ A10A              ;                        10xx ..... Izquierda.
 596+ A10A              ;                        01xx ..... Derecha.
 597+ A10A              ;                        00xx ..... Recto.
 598+ A10A
 599+ A10A              ;*  Exclusiones.
 600+ A10A
 601+ A10A              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A10A              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A10A
 604+ A10A 3A 2B 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A10D A7               and a
 606+ A10E C8               ret z
 607+ A10F
 608+ A10F 3A C8 8B         ld a,(Coordenada_y)
 609+ A112 A7               and a
 610+ A113 C8               ret z
 611+ A114
 612+ A114 3D               dec a
 613+ A115 C8               ret z
 614+ A116
 615+ A116 FE 10            cp 16
 616+ A118 D0               ret nc
 617+ A119
 618+ A119              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A119              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A119              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A119
 622+ A119 21 2D 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A11C 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A11D
 625+ A11D              ;   Decrementa el numero de disparos de entidades.
 626+ A11D
 627+ A11D 21 2B 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A120 35               dec (hl)
 629+ A121
 630+ A121 21 23 89         ld hl,Indice_de_disparos_entidades
 631+ A124
 632+ A124 CD BF 90     1 call Extrae_address
 633+ A127
 634+ A127 13               inc de
 635+ A128 13               inc de
 636+ A129
 637+ A129 ED 53 3E 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A12D
 639+ A12D              ;   Comprobamos si la caja está vacía.
 640+ A12D
 641+ A12D 2D               dec l
 642+ A12E 7E               ld a,(hl)
 643+ A12F A7               and a
 644+ A130 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A132 2C               inc l
 646+ A133
 647+ A133              ;   Caja vacía, vamos a generar un disparo.
 648+ A133              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A133
 650+ A133 CD 54 A1         call Genera_byte_inclinacion
 651+ A136
 652+ A136 7E               ld a,(hl)
 653+ A137 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A138
 655+ A138 2D               dec l
 656+ A139
 657+ A139 CD 70 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A13C
 659+ A13C 70               ld (hl),b
 660+ A13D 2D               dec l
 661+ A13E 71               ld (hl),c
 662+ A13F
 663+ A13F 2D               dec l
 664+ A140
 665+ A140              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A140
 667+ A140 FD 7E 02         ld a,(iy+02)
 668+ A143 77               ld (hl),a
 669+ A144 2D               dec l
 670+ A145
 671+ A145 FD 7E 01         ld a,(iy+01)
 672+ A148 77               ld (hl),a
 673+ A149 2D               dec l
 674+ A14A
 675+ A14A FD 7E 00         ld a,(iy+00)
 676+ A14D 77               ld (hl),a
 677+ A14E
 678+ A14E C9               ret
 679+ A14F
 680+ A14F              ;   --- --- ---
 681+ A14F
 682+ A14F              Situa_en_siguiente_disparo
 683+ A14F
 684+ A14F 2A 3E 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A152 18 D0            jr 1B
 686+ A154
 687+ A154              ; --------------------------------------------------------------------------------------
 688+ A154              ;
 689+ A154              ;   09/10/24
 690+ A154              ;
 691+ A154
 692+ A154              Genera_byte_inclinacion
 693+ A154
 694+ A154              ; Determina tendencia del disparo.
 695+ A154
 696+ A154 3A 6E 89         ld a,(CX_Amadeus)
 697+ A157 47               ld b,a
 698+ A158 3A C7 8B         ld a,(Coordenada_X)
 699+ A15B 90               sub b
 700+ A15C 38 07            jr c,Disparo_a_derecha
 701+ A15E
 702+ A15E FE 06        Disparo_a_izquierda cp 6
 703+ A160
 704+ A160 D8               ret c
 705+ A161 C8               ret z
 706+ A162
 707+ A162 CB FE            set 7,(hl)
 708+ A164 C9               ret
 709+ A165
 710+ A165 47           Disparo_a_derecha ld b,a
 711+ A166 3E FF            ld a,$ff
 712+ A168 90               sub b
 713+ A169
 714+ A169 FE 05            cp 5
 715+ A16B
 716+ A16B D8               ret c
 717+ A16C C8               ret z
 718+ A16D
 719+ A16D CB F6            set 6,(hl)
 720+ A16F C9               ret
 721+ A170
 722+ A170              ; --------------------------------------------------------------------------------------
 723+ A170              ;
 724+ A170              ;   09/10/24
 725+ A170              ;
 726+ A170
 727+ A170              Modifica_puntero_de_impresion
 728+ A170
 729+ A170              ;   Puntero de impresión del disparo en BC.
 730+ A170
 731+ A170 E5               push hl
 732+ A171
 733+ A171 2A 40 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A174 CD D8 99         call NextScan
 735+ A177
 736+ A177 4D               ld c,l
 737+ A178 44               ld b,h
 738+ A179
 739+ A179 E1               pop hl
 740+ A17A
 741+ A17A 08               ex af,af
 742+ A17B CB 77            bit 6,a
 743+ A17D 28 06            jr z,1F
 744+ A17F
 745+ A17F FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A183 0C               inc c
 747+ A184 C9               ret
 748+ A185
 749+ A185 CB 7F        1 bit 7,a
 750+ A187 28 F6            jr z,2B
 751+ A189
 752+ A189 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A18D 0D               dec c
 754+ A18E
 755+ A18E C9               ret
 756+ A18F
 757+ A18F              ; --------------------------------------------------------------------------------------
 758+ A18F              ;
 759+ A18F              ;   31/08/24
 760+ A18F              ;
 761+ A18F
 762+ A18F              Compara_con_coordenadas_de_disparo
 763+ A18F
 764+ A18F 3A C8 8B         ld a,(Coordenada_y)
 765+ A192 47               ld b,a
 766+ A193 3A 45 8C         ld a,(Coordenadas_disparo_certero)
 767+ A196 90               sub b
 768+ A197
 769+ A197              ; A = "0" ok
 770+ A197              ; A = "1" ok
 771+ A197
 772+ A197 28 08            jr z,Comprueba_coordenada_X
 773+ A199 3D               dec a
 774+ A19A 28 05            jr z,Comprueba_coordenada_X
 775+ A19C
 776+ A19C              ; A = "$ff" ok
 777+ A19C
 778+ A19C FE FE            cp $fe
 779+ A19E 28 01            jr z,Comprueba_coordenada_X
 780+ A1A0
 781+ A1A0 C9               ret
 782+ A1A1
 783+ A1A1              Comprueba_coordenada_X
 784+ A1A1
 785+ A1A1 3A C7 8B         ld a,(Coordenada_X)
 786+ A1A4 47               ld b,a
 787+ A1A5 21 46 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1A8 7E               ld a,(hl)
 789+ A1A9 90               sub b
 790+ A1AA
 791+ A1AA              ; A = "0" ok
 792+ A1AA              ; A = "1" ok
 793+ A1AA
 794+ A1AA 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1AC 3D               dec a
 796+ A1AD 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1AF
 798+ A1AF              ; A = "2" ok
 799+ A1AF
 800+ A1AF 3D               dec a
 801+ A1B0 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1B2
 803+ A1B2              ; A = "$ff"
 804+ A1B2
 805+ A1B2 FE FD            cp $fd
 806+ A1B4 C0               ret nz
 807+ A1B5
 808+ A1B5              Activa_Impacto_en_entidad
 809+ A1B5
 810+ A1B5              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1B5
 812+ A1B5 3E 02            ld a,2
 813+ A1B7 32 CA 8B         ld (Impacto),a
 814+ A1BA
 815+ A1BA              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1BA
 817+ A1BA 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1BD 21 CD 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1C0
 820+ A1C0 73               ld (hl),e
 821+ A1C1 23               inc hl
 822+ A1C2 72               ld (hl),d
 823+ A1C3
 824+ A1C3              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1C3
 826+ A1C3 21 42 8C         ld hl,Impacto2
 827+ A1C6 CB 9E            res 3,(hl)
 828+ A1C8
 829+ A1C8 C9               ret
 830+ A1C9
 831+ A1C9              ; --------------------------------------------------------------------------------------
 832+ A1C9              ;
 833+ A1C9              ;   13/10/24
 834+ A1C9              ;
 835+ A1C9
 836+ A1C9              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1C9
 838+ A1C9              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1C9
 840+ A1C9 2A 1F 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1CC 06 06            ld b,6
 842+ A1CE AF               xor a
 843+ A1CF 77           1 ld (hl),a
 844+ A1D0 2C               inc l
 845+ A1D1 10 FC            djnz 1B
 846+ A1D3
 847+ A1D3 C9               ret
 848+ A1D4
 849+ A1D4              ; --------------------------------------------------------------------------------------
 850+ A1D4              ;
 851+ A1D4              ;   29/09/24
 852+ A1D4              ;
 853+ A1D4
 854+ A1D4              Calcula_bytes_pintado_disparos
 855+ A1D4
 856+ A1D4 2A 23 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1D7 45               ld b,l
 858+ A1D8 2A 27 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1DB 7D               ld a,l
 860+ A1DC
 861+ A1DC 90               sub b
 862+ A1DD 32 29 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1E0
 864+ A1E0 C9               ret
 865+ A1E1
 866+ A1E1              ; --------------------------------------------------------------------------------------
 867+ A1E1              ;
 868+ A1E1              ;   26/10/24
 869+ A1E1              ;
 870+ A1E1              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1E1              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1E1              ;   _disparos que el álbum del FRAME actual).
 873+ A1E1
 874+ A1E1              Limpia_album_de_pintado_disparos_entidades
 875+ A1E1
 876+ A1E1 21 2A 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1E4 7E               ld a,(hl)
 878+ A1E5 2D               dec l
 879+ A1E6 46               ld b,(hl)
 880+ A1E7 90               sub b
 881+ A1E8
 882+ A1E8 D8               ret c
 883+ A1E9 C8               ret z
 884+ A1EA
 885+ A1EA F5               push af
 886+ A1EB 80               add b
 887+ A1EC 77               ld (hl),a
 888+ A1ED F1               pop af
 889+ A1EE
 890+ A1EE              ; Clean.
 891+ A1EE
 892+ A1EE 47           2 ld b,a
 893+ A1EF AF               xor a
 894+ A1F0 2A 27 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1F3 77           1 ld (hl),a
 896+ A1F4 23               inc hl
 897+ A1F5 10 FC            djnz 1B
 898+ A1F7
 899+ A1F7 C9               ret
 900+ A1F8
 901+ A1F8              ; --------------------------------------------------------------------------------------
 902+ A1F8              ;
 903+ A1F8              ;   29/09/24
 904+ A1F8              ;
 905+ A1F8
 906+ A1F8              Motor_Disparos_Amadeus
 907+ A1F8
 908+ A1F8 21 20 89         ld hl,Disparo_Amad+1
 909+ A1FB
 910+ A1FB 34               inc (hl)
 911+ A1FC 35               dec (hl)
 912+ A1FD
 913+ A1FD C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1FE
 915+ A1FE              ;   Esta caja contiene un disparo.
 916+ A1FE
 917+ A1FE CD 05 A2         call Consulta_Impacto
 918+ A201 CC 1E A2         call z,Mueve_disparo_Amadeus
 919+ A204
 920+ A204 C9               ret
 921+ A205
 922+ A205              ; ----------------------
 923+ A205              ;
 924+ A205              ;
 925+ A205              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A205              ;
 927+ A205              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A205
 929+ A205
 930+ A205              Consulta_Impacto
 931+ A205
 932+ A205              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A205              ;   _sea lo más coherente posible.
 934+ A205
 935+ A205 E5               push hl
 936+ A206 2B               dec hl
 937+ A207 CD FA A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A20A E1               pop hl
 939+ A20B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A20C
 941+ A20C C8               ret z
 942+ A20D
 943+ A20D 3A 42 8C         ld a,(Impacto2)
 944+ A210 CB DF            set 3,a
 945+ A212 32 42 8C         ld (Impacto2),a
 946+ A215
 947+ A215 E5               push hl
 948+ A216 CD E7 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A219 E1               pop hl
 950+ A21A CD 37 A2         call Elimina_disparo_Amadeus
 951+ A21D
 952+ A21D C9               ret
 953+ A21E
 954+ A21E              ; ----------------------
 955+ A21E              ;
 956+ A21E              ;
 957+ A21E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A21E
 959+ A21E              Mueve_disparo_Amadeus
 960+ A21E
 961+ A21E CD BF 90         call Extrae_address
 962+ A221
 963+ A221 CD E7 99         call PreviousScan
 964+ A224 CD E7 99         call PreviousScan
 965+ A227 CD E7 99         call PreviousScan
 966+ A22A CD E7 99         call PreviousScan
 967+ A22D
 968+ A22D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A22D
 970+ A22D 7C               ld a,h
 971+ A22E D6 40            sub $40
 972+ A230 EB               ex de,hl
 973+ A231 38 04            jr c,Elimina_disparo_Amadeus
 974+ A233
 975+ A233               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A233
 977+ A233 73               ld (hl),e
 978+ A234 23               inc hl
 979+ A235 72               ld (hl),d
 980+ A236
 981+ A236 C9               ret
 982+ A237
 983+ A237              ; ----------------------
 984+ A237              ;
 985+ A237              ;   29/9/24
 986+ A237
 987+ A237              Elimina_disparo_Amadeus
 988+ A237
 989+ A237              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A237              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A237
 992+ A237              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A237              ;   	defw 0											; Puntero de impresión.
 994+ A237
 995+ A237 2B               dec hl
 996+ A238 2B               dec hl
 997+ A239
 998+ A239 AF               xor a
 999+ A23A 77               ld (hl),a
1000+ A23B 23               inc hl
1001+ A23C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A23D
1003+ A23D 23               inc hl
1004+ A23E 77               ld (hl),a
1005+ A23F 23               inc hl
1006+ A240 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A241
1008+ A241 3E 01            ld a,1
1009+ A243 32 2C 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A246
1011+ A246 CD C9 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A249
1013+ A249 AF               xor a
1014+ A24A 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A24B
1016+ A24B C9               ret
1017+ A24C
1018+ A24C              ; --------------------------------------------------------------------------------------
1019+ A24C              ;
1020+ A24C              ;   13/10/24
1021+ A24C              ;
1022+ A24C
1023+ A24C              Pinta_disparos_Amadeus
1024+ A24C
1025+ A24C 06 02            ld b,2
1026+ A24E ED 73 13 8C      ld (Stack),sp
1027+ A252 ED 7B 21 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A256 D1           3 pop de
1029+ A257 14               inc d
1030+ A258 15               dec d
1031+ A259 28 1C            jr z,1F
1032+ A25B E1               pop hl
1033+ A25C
1034+ A25C              Imprime_scanlines_en_pantalla
1035+ A25C
1036+ A25C              ; 1er scanline
1037+ A25C
1038+ A25C 1A               ld a,(de)
1039+ A25D AE               xor (hl)
1040+ A25E 77               ld (hl),a
1041+ A25F
1042+ A25F 1C               inc e
1043+ A260 2C               inc l
1044+ A261
1045+ A261 1A               ld a,(de)
1046+ A262 AE               xor (hl)
1047+ A263 77               ld (hl),a
1048+ A264
1049+ A264 1D               dec e
1050+ A265 E1               pop hl
1051+ A266
1052+ A266              ; 2º scanline
1053+ A266
1054+ A266 1A               ld a,(de)
1055+ A267 AE               xor (hl)
1056+ A268 77               ld (hl),a
1057+ A269
1058+ A269 1C               inc e
1059+ A26A 2C               inc l
1060+ A26B
1061+ A26B 1A               ld a,(de)
1062+ A26C AE               xor (hl)
1063+ A26D 77               ld (hl),a
1064+ A26E
1065+ A26E 1D               dec e
1066+ A26F
1067+ A26F 18 06            jr 1F
1068+ A271
1069+ A271 ED 7B 1F 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A275 18 DF            jr 3B
1071+ A277 10 F8        1 djnz 2B
1072+ A279 ED 7B 13 8C      ld sp,(Stack)
1073+ A27D C9               ret
1074+ A27E
1075+ A27E              ; --------------------------------------------------------------------------------------
1076+ A27E              ;
1077+ A27E              ;   13/10/24
1078+ A27E              ;
1079+ A27E              ;   Modifica: HL,BC y DE.
1080+ A27E
1081+ A27E
1082+ A27E              Genera_datos_de_impresion_disparos_Amadeus
1083+ A27E
1084+ A27E ED 73 13 8C      ld (Stack),sp
1085+ A282 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A285 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A286
1088+ A286 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A287 15               dec d
1090+ A288
1091+ A288 28 0E            jr z,Salida
1092+ A28A
1093+ A28A              Genera_scanlines_de_disparo_Amadeus
1094+ A28A
1095+ A28A E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A28B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A28B ED 7B 1F 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A28F
1099+ A28F C1               pop bc
1100+ A290 C1               pop bc
1101+ A291 C1               pop bc
1102+ A292
1103+ A292 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A293 CD E7 99         call PreviousScan
1105+ A296 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A297 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A298
1108+ A298              Salida
1109+ A298
1110+ A298 ED 7B 13 8C      ld sp,(Stack)
1111+ A29C
1112+ A29C C9               ret
1113+ A29D
1114+ A29D              ; --------------------------------------------------------------------------------------
1115+ A29D              ;
1116+ A29D              ;   12/09/24
1117+ A29D              ;
1118+ A29D
1119+ A29D              Genera_disparo_Amadeus
1120+ A29D
1121+ A29D              ;*  Exclusiones.
1122+ A29D
1123+ A29D 3A 2C 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2A0 A7               and a
1125+ A2A1 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2A2
1127+ A2A2 3D               dec a
1128+ A2A3 32 2C 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2A6
1130+ A2A6              Define_puntero_objeto_disparo
1131+ A2A6
1132+ A2A6              ;   Inicializamos contador.
1133+ A2A6
1134+ A2A6 06 00            ld b,0
1135+ A2A8
1136+ A2A8 2A 72 89         ld hl,(p.imp.amadeus)
1137+ A2AB 2C               inc l
1138+ A2AC
1139+ A2AC 3E 80            ld a,$80
1140+ A2AE BE               cp (hl)
1141+ A2AF 28 0D            jr z,1F
1142+ A2B1
1143+ A2B1 04               inc b
1144+ A2B2
1145+ A2B2 3E 60            ld a,$60
1146+ A2B4 BE               cp (hl)
1147+ A2B5 28 07            jr z,1F
1148+ A2B7
1149+ A2B7
1150+ A2B7 04               inc b
1151+ A2B8
1152+ A2B8 3E 18            ld a,$18
1153+ A2BA BE               cp (hl)
1154+ A2BB 28 01            jr z,1F
1155+ A2BD
1156+ A2BD 04               inc b
1157+ A2BE
1158+ A2BE              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2BE
1160+ A2BE              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2BE
1162+ A2BE CD E7 99     1 call PreviousScan
1163+ A2C1
1164+ A2C1 78               ld a,b
1165+ A2C2 CB 3F            srl a
1166+ A2C4 28 03            jr z,4F
1167+ A2C6
1168+ A2C6              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2C6 E5               push hl
1170+ A2C7 18 02            jr 5F
1171+ A2C9 2D           4 dec l
1172+ A2CA E5               push hl
1173+ A2CB              ; ---
1174+ A2CB
1175+ A2CB              ;   Calcula el Puntero_objeto del disparo.
1176+ A2CB
1177+ A2CB 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2CE 04               inc b
1179+ A2CF 05               dec b
1180+ A2D0 28 04            jr z,2F
1181+ A2D2
1182+ A2D2              ;   Nos desplazamos por el índice de disparos.
1183+ A2D2
1184+ A2D2 2C           3 inc l
1185+ A2D3 2C               inc l
1186+ A2D4 10 FC            djnz 3B
1187+ A2D6
1188+ A2D6              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2D6 CD BF 90     2 call Extrae_address
1190+ A2D9 E5               push hl
1191+ A2DA              ; ---
1192+ A2DA
1193+ A2DA              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2DA              ; HL en el 1er .db de la caja.
1195+ A2DA
1196+ A2DA 21 1F 89         ld hl,Disparo_Amad
1197+ A2DD
1198+ A2DD 06 02            ld b,2
1199+ A2DF
1200+ A2DF D1           6 pop de
1201+ A2E0 73               ld (hl),e
1202+ A2E1 23               inc hl
1203+ A2E2 72               ld (hl),d
1204+ A2E3 23               inc hl
1205+ A2E4
1206+ A2E4 10 F9            djnz 6B
1207+ A2E6
1208+ A2E6 C9               ret
1209+ A2E7
1210+ A2E7              Genera_coordenadas_de_disparo_Amadeus
1211+ A2E7
1212+ A2E7              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2E7              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2E7              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2E7
1216+ A2E7 CD BF 90         call Extrae_address
1217+ A2EA CD DE 94         call Genera_coordenadas
1218+ A2ED
1219+ A2ED 3D               dec a
1220+ A2EE
1221+ A2EE 21 45 8C         ld hl,Coordenadas_disparo_certero
1222+ A2F1 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2F2 23               inc hl
1224+ A2F3 3A C7 8B         ld a,(Coordenada_X)
1225+ A2F6 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2F7
1227+ A2F7 AF               xor a
1228+ A2F8 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2F9
1230+ A2F9 C9               ret
1231+ A2FA
1232+ A2FA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2FA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2FA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2FA
1236+ A2FA              ; ----------------------------------------------
1237+ A2FA              ;
1238+ A2FA              ;   27/08/24
1239+ A2FA              ;
1240+ A2FA              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2FA              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2FA
1243+ A2FA              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2FA
1245+ A2FA              Extraccion_de_datos
1246+ A2FA
1247+ A2FA 13               inc de
1248+ A2FB 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2FC
1250+ A2FC 5E               ld e,(hl)
1251+ A2FD 23               inc hl
1252+ A2FE 56               ld d,(hl)
1253+ A2FF
1254+ A2FF 23               inc hl
1255+ A300
1256+ A300 4E               ld c,(hl)
1257+ A301 23               inc hl
1258+ A302 46               ld b,(hl)
1259+ A303
1260+ A303 C5               push bc
1261+ A304 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A305
1263+ A305              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A305
1265+ A305 CD E7 99         call PreviousScan
1266+ A308 CD E7 99         call PreviousScan
1267+ A30B
1268+ A30B              Detecta_impacto_
1269+ A30B
1270+ A30B 1A               ld a,(de)
1271+ A30C A6               and (hl)
1272+ A30D C0               ret nz
1273+ A30E
1274+ A30E 13               inc de
1275+ A30F 23               inc hl
1276+ A310
1277+ A310 1A               ld a,(de)
1278+ A311 A6               and (hl)
1279+ A312 C9               ret
1280+ A313
1281+ A313              ; -------------------------------------------------------------------------------------------------------------
1282+ A313              ;
1283+ A313              ;   8/8/24
1284+ A313              ;
1285+ A313              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A313              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A313              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A313              ;
1289+ A313              ;   MODIFICA: HL,DE,BC y A.
1290+ A313              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A313              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A313
1293+ A313              Colision_Entidad_Amadeus
1294+ A313
1295+ A313              ; Posible contacto de entidad con Amadeus. ?????
1296+ A313
1297+ A313              ; Exclusiones:
1298+ A313
1299+ A313 3A 65 8C         ld a,(Shield)
1300+ A316 A7               and a
1301+ A317 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A318
1303+ A318 21 3B 8C         ld hl,Ctrl_3
1304+ A31B CB 76            bit 6,(hl)
1305+ A31D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A31E
1307+ A31E 21 42 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A321 CB 56            bit 2,(hl)
1309+ A323 C0               ret nz
1310+ A324
1311+ A324 3A C8 8B     	ld a,(Coordenada_y)
1312+ A327 FE 14        	cp $14
1313+ A329 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A32A
1315+ A32A 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A32D A7               and a
1317+ A32E C0               ret nz
1318+ A32F
1319+ A32F              Genera_coordenadas_X
1320+ A32F
1321+ A32F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A32F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A32F
1324+ A32F              ;   Limpiamos almacenes.
1325+ A32F
1326+ A32F              ;    call Limpia_Coordenadas_X
1327+ A32F
1328+ A32F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A32F
1330+ A32F 21 47 8C         ld hl,Coordenadas_X_Entidad
1331+ A332 3A C7 8B         ld a,(Coordenada_X)
1332+ A335 CD 57 A3         call Guarda_coordenadas_X
1333+ A338
1334+ A338              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A338
1336+ A338 3A 6E 89         ld a,(CX_Amadeus)
1337+ A33B CD 57 A3         call Guarda_coordenadas_X
1338+ A33E CD 6B A3         call Compara_coordenadas_X
1339+ A341 C0               ret nz
1340+ A342
1341+ A342 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A344 32 CA 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A347
1344+ A347 2A 06 8C         ld hl,(Puntero_store_caja)
1345+ A34A 2C               inc l
1346+ A34B 2C               inc l
1347+ A34C 2C               inc l
1348+ A34D 2C               inc l
1349+ A34E 22 43 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A351
1351+ A351 21 42 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A354 CB D6            set 2,(hl)
1353+ A356
1354+ A356 C9               ret
1355+ A357
1356+ A357               ; ----- ----- ----- ----- -----
1357+ A357
1358+ A357 77           Guarda_coordenadas_X ld (hl),a
1359+ A358 3C               inc a
1360+ A359 2C               inc l
1361+ A35A 77               ld (hl),a
1362+ A35B 3C               inc a
1363+ A35C 2C               inc l
1364+ A35D 77               ld (hl),a
1365+ A35E 2C               inc l
1366+ A35F C9               ret
1367+ A360
1368+ A360 AF           Limpia_Coordenadas_X xor a
1369+ A361 06 06            ld b,6
1370+ A363 21 4A 8C         ld hl,Coordenadas_X_Amadeus
1371+ A366 77           1 ld (hl),a
1372+ A367 23               inc hl
1373+ A368 10 FC            djnz 1B
1374+ A36A C9               ret
1375+ A36B
1376+ A36B              ; ----- ----- ----- ----- -----
1377+ A36B
1378+ A36B              Compara_coordenadas_X
1379+ A36B
1380+ A36B DD 21 47 8C      ld ix,Coordenadas_X_Entidad
1381+ A36F DD 7E 00         ld a,(ix+0)
1382+ A372 CD 80 A3         call Comparando
1383+ A375 C8               ret z
1384+ A376
1385+ A376 3C               inc a
1386+ A377 CD 8F A3         call Comparando_1
1387+ A37A C8               ret z
1388+ A37B
1389+ A37B 3C               inc a
1390+ A37C CD 8F A3         call Comparando_1
1391+ A37F C9               ret
1392+ A380
1393+ A380              ; ----- ----- ----- ----- -----
1394+ A380              ;
1395+ A380              ;   4/12/23
1396+ A380              ;
1397+ A380              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A380
1399+ A380              Comparando
1400+ A380
1401+ A380 DD 2C            inc ixl
1402+ A382 DD 2C            inc ixl
1403+ A384 DD 2C            inc ixl
1404+ A386
1405+ A386 DD 46 00         ld b,(ix+0)
1406+ A389 DD 4E 01         ld c,(ix+1)
1407+ A38C DD 56 02         ld d,(ix+2)
1408+ A38F
1409+ A38F B8           Comparando_1 cp b
1410+ A390 C8               ret z
1411+ A391 B9               cp c
1412+ A392 C8               ret z
1413+ A393 BA               cp d
1414+ A394 C9               ret
1415+ A395
1416+ A395              ; -----------------------------------------------------------------------
1417+ A395              ;
1418+ A395              ;   04/7/24
1419+ A395              ;
1420+ A395
1421+ A395              Detecta_colision_nave_entidad
1422+ A395
1423+ A395              ; Exclusiones:
1424+ A395
1425+ A395              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A395
1427+ A395 21 42 8C     	ld hl,Impacto2
1428+ A398 CB 56        	bit 2,(hl)
1429+ A39A C8           	ret z
1430+ A39B
1431+ A39B              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A39B
1433+ A39B 2A 74 89         ld hl,(Pamm_Amadeus)
1434+ A39E CD BF 90         call Extrae_address
1435+ A3A1 54               ld d,h
1436+ A3A2 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A3A3
1438+ A3A3 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3A6 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3A8 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3AB
1442+ A3AB C5           1 push bc
1443+ A3AC 06 03            ld b,3
1444+ A3AE E5               push hl
1445+ A3AF
1446+ A3AF              ; .db
1447+ A3AF
1448+ A3AF 1A           3 ld a,(de)
1449+ A3B0 A7               and a
1450+ A3B1 20 03            jr nz,4F
1451+ A3B3
1452+ A3B3 2C               inc l
1453+ A3B4 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3B6
1455+ A3B6 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3B8 28 04            jr z,2F
1457+ A3BA
1458+ A3BA              ; Impacto.
1459+ A3BA FD 2D            dec iyl
1460+ A3BC 28 22            jr z,5F
1461+ A3BE
1462+ A3BE 1C           2 inc e
1463+ A3BF 10 EE            djnz 3B
1464+ A3C1
1465+ A3C1 E1               pop hl
1466+ A3C2
1467+ A3C2              ; Hay salto de línea en el puntero de impresión ???
1468+ A3C2
1469+ A3C2 7C               ld a,h
1470+ A3C3 D6 57            sub $57
1471+ A3C5 20 0A            jr nz,6F
1472+ A3C7
1473+ A3C7              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3C7
1475+ A3C7 2A 72 89         ld hl,(p.imp.amadeus)
1476+ A3CA 3E 20            ld a,$20
1477+ A3CC A7               and a
1478+ A3CD 85               add l
1479+ A3CE 6F               ld l,a
1480+ A3CF 18 01            jr 7F
1481+ A3D1
1482+ A3D1 24           6 inc h
1483+ A3D2
1484+ A3D2 C1           7 pop bc
1485+ A3D3 10 D6            djnz 1B
1486+ A3D5
1487+ A3D5              ;   Fin de la comparativa.
1488+ A3D5
1489+ A3D5              ;   NO HAY COLISIÓN !!!!!.
1490+ A3D5              ;
1491+ A3D5              ;   .db (Impacto) de Amadeus a "0".
1492+ A3D5              ;   RES el bit2 de (Impacto2).
1493+ A3D5              ;
1494+ A3D5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3D5              ;   Lo colocamos a "0".
1496+ A3D5
1497+ A3D5 21 42 8C         ld hl,Impacto2
1498+ A3D8 CB 96            res 2,(hl)
1499+ A3DA 2A 43 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3DD 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3DF C9               ret
1502+ A3E0
1503+ A3E0              ;   COLISIÓN !!!!!.
1504+ A3E0              ;
1505+ A3E0              ;   .db (Impacto) de Amadeus a "1".
1506+ A3E0              ;   SET el bit3 de (Impacto2).
1507+ A3E0              ;
1508+ A3E0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3E0
1510+ A3E0 E1           5 pop hl
1511+ A3E1 C1               pop bc
1512+ A3E2
1513+ A3E2 21 71 89         ld hl,Impacto_Amadeus
1514+ A3E5 36 01            ld (hl),1
1515+ A3E7 21 42 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3EA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3EC
1518+ A3EC 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3EF 2A 43 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3F2
1521+ A3F2 23               inc hl
1522+ A3F3 23               inc hl
1523+ A3F4 23               inc hl
1524+ A3F5
1525+ A3F5 73               ld (hl),e
1526+ A3F6 23               inc hl
1527+ A3F7 72               ld (hl),d
1528+ A3F8
1529+ A3F8              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3F8
1531+ A3F8 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3FB 21 74 89         ld hl,Pamm_Amadeus
1533+ A3FE
1534+ A3FE 73               ld (hl),e
1535+ A3FF 23               inc hl
1536+ A400 72               ld (hl),d
1537+ A401
1538+ A401 C9               ret
1539+ A402
1540+ A402
1541+ A402
# file closed: Disparo.asm
2089  A402
2090  A402              	SAVESNA "Pruebas.sna", START
2091  A402
2092  A402
2093  A402
2094  A402
# file closed: Banco_de_pruebas.asm
