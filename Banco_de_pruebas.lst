# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 24 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD F5 9E     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 66 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 76 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD A2 94     	call Cls
 517  8CA2 CD 5B 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD A8 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD EA 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3 CD 0A 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 529  8CB6 CD D8 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 530  8CB9              ;														   _reponiendo entidades eliminadas.
 531  8CB9 CD 3E 93     	call Prepara_Cajas_de_Entidades
 532  8CBC
 533  8CBC
 534  8CBC              ;	Inicia los álbumes de líneas.
 535  8CBC
 536  8CBC CD A9 90     	call Inicia_albumes_de_lineas
 537  8CBF              ;
 538  8CBF CD B9 90     	call Inicia_albumes_de_lineas_Amadeus
 539  8CC2 CD C6 90     	call Inicia_albumes_de_disparos
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD 8D 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD 71 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD D0 93     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 48 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD 87 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD E2 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 66 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD BF 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 3B 9F     	call Motor_de_disparos_entidades
 596  8D04 CD D0 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD 6D A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 06 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD EA 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 06 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B1 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD 94 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A CD 33 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 663  8D4D ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 664  8D51
 665  8D51              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D51
 667  8D51              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D51              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D51
 670  8D51 3A 6C 8C     	ld a,(Impacto2)
 671  8D54 CB 5F        	bit 3,a
 672  8D56 C4 67 A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D59
 674  8D59 3A F2 8B     	ld a,(Impacto)
 675  8D5C CB 4F        	bit 1,a
 676  8D5E C4 43 92     	call nz,Genera_explosion
 677  8D61 20 31        	jr nz,Gestiona_siguiente_entidad
 678  8D63
 679  8D63 3A F2 8B     	ld a,(Impacto)
 680  8D66 A7           	and a
 681  8D67 28 0C        	jr z,3F
 682  8D69
 683  8D69              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D69
 685  8D69              ; 5/7/24
 686  8D69              ; Nota importante:
 687  8D69              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D69              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D69              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D69
 691  8D69 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D6C A7           	and a
 693  8D6D C4 43 92     	call nz,Genera_explosion
 694  8D70 20 22        	jr nz,Gestiona_siguiente_entidad
 695  8D72
 696  8D72              ; Falsa colisión !!!
 697  8D72
 698  8D72 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D75
 700  8D75              ; -------------------------------------------
 701  8D75
 702  8D75 CD 4A 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D78 CD 72 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D7B CD 3A 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 705  8D7E CD E2 94     	call Genera_datos_de_impresion
 706  8D81 CD F3 93     	call Decrementa_Contador_de_mov_masticados
 707  8D84
 708  8D84              ; -------------------------------------------
 709  8D84
 710  8D84              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 711  8D84
 712  8D84 2A F3 8B     	ld hl,(Puntero_de_impresion)
 713  8D87 CD B6 94     	call Genera_coordenadas
 714  8D8A
 715  8D8A              ; TODO: Generamos disparo ???
 716  8D8A
 717  8D8A 3A 57 8C     	ld a,(Permiso_de_disparo_Entidades)
 718  8D8D A7           	and a
 719  8D8E C4 1B 8E     	call nz,Entidad_genera_disparo_si_procede
 720  8D91
 721  8D91 CD EB A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 722  8D94
 723  8D94              Gestiona_siguiente_entidad
 724  8D94
 725  8D94 CD C5 93      	call Store_Restore_cajas
 726  8D97 C1           	pop bc
 727  8D98 10 AF        	djnz 2B
 728  8D9A
 729  8D9A              ; Hemos gestionado todas las entidades.
 730  8D9A              ; ----- ----- -----
 731  8D9A
 732  8D9A CD 5E 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 733  8D9D CD 75 8F     	call Ordena_tabla_de_impresion
 734  8DA0 CD E2 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 735  8DA3
 736  8DA3 CD 1B 8F     	call Borra_diferencia
 737  8DA6
 738  8DA6 3A 65 8C     	ld a,(Ctrl_3)
 739  8DA9 CB 5F        	bit 3,a
 740  8DAB 20 04        	jr nz,Gestion_de_Amadeus
 741  8DAD
 742  8DAD EB           	ex de,hl
 743  8DAE 71           	ld (hl),c
 744  8DAF 2C           	inc l
 745  8DB0 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 746  8DB1
 747  8DB1              ;! GESTIONA AMADEUS !!!!!!!!!!
 748  8DB1
 749  8DB1              Gestion_de_Amadeus
 750  8DB1
 751  8DB1 21 65 8C     	ld hl,Ctrl_3
 752  8DB4 CB 76        	bit 6,(hl)
 753  8DB6 28 13        	jr z,Amadeus_vivo
 754  8DB8
 755  8DB8              ; Amadeus ha sido destruido.
 756  8DB8              ; Decrementa (Temp_new_live).
 757  8DB8
 758  8DB8 21 79 8C     	ld hl,Temp_new_live
 759  8DBB 35           	dec (hl)
 760  8DBC 20 26        	jr nz,End_frame
 761  8DBE
 762  8DBE              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 763  8DBE
 764  8DBE 21 92 8C     	ld hl,Lives
 765  8DC1 35           	dec (hl)
 766  8DC2
 767  8DC2              ;! Fin del juego
 768  8DC2
 769  8DC2 F3           	di
 770  8DC3 28 FE        	jr z,$
 771  8DC5 FB           	ei
 772  8DC6
 773  8DC6              ; Nueva nave.
 774  8DC6
 775  8DC6 CD 38 8E     	call Reinicia_Amadeus
 776  8DC9 18 19        	jr End_frame
 777  8DCB
 778  8DCB              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 779  8DCB
 780  8DCB              Amadeus_vivo
 781  8DCB
 782  8DCB 3A BB 89     	ld a,(Impacto_Amadeus)
 783  8DCE A7           	and a
 784  8DCF C4 73 92     	call nz, Genera_explosion_Amadeus
 785  8DD2 20 10        	jr nz, End_frame
 786  8DD4
 787  8DD4 CD 20 92     	call Teclado
 788  8DD7 21 65 8C     	ld hl,Ctrl_3
 789  8DDA
 790  8DDA CB 6E        	bit 5,(hl)
 791  8DDC 28 06        	jr z,End_frame
 792  8DDE
 793  8DDE              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 794  8DDE
 795  8DDE CD AF 8E     	call Change_Amadeus
 796  8DE1 CD 87 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 797  8DE4
 798  8DE4              End_frame
 799  8DE4
 800  8DE4              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 801  8DE4              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 802  8DE4
 803  8DE4 CD 92 A0     	call Genera_datos_de_impresion_disparos_Entidades
 804  8DE7 CD 56 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 805  8DEA CD AC A1     	call Calcula_bytes_pintado_disparos
 806  8DED CD B9 A1     	call Limpia_album_de_pintado_disparos_entidades
 807  8DF0
 808  8DF0              ; ------------ ------------- --------------
 809  8DF0
 810  8DF0 2A 43 8C     	ld hl,(Album_de_borrado)
 811  8DF3 22 5F 8C     	ld (Scanlines_album_SP),hl
 812  8DF6
 813  8DF6 21 65 8C     	ld hl,Ctrl_3
 814  8DF9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 815  8DFB CB 9E        	res 3,(hl)
 816  8DFD CB A6        	res 4,(hl)
 817  8DFF
 818  8DFF AF           	xor a
 819  8E00 D3 FE        	out ($fe),a
 820  8E02
 821  8E02 76           	halt
 822  8E03
 823  8E03              ; ----------------------------------------
 824  8E03
 825  8E03              ;	ld a,(Ctrl_1) 										; Existe Loop?
 826  8E03              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 827  8E03 CA FE 8C     	jp z,Main
 828  8E06
 829  8E06              ;------------------------------------------
 830  8E06              ;
 831  8E06              ;	07/11/24
 832  8E06
 833  8E06              Autoriza_disparo_de_entidades
 834  8E06
 835  8E06 3E 01        	ld a,1
 836  8E08 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 837  8E0B
 838  8E0B 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 839  8E0E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 840  8E10 38 02        	jr c,1F
 841  8E12
 842  8E12              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 843  8E12              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 844  8E12              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 845  8E12
 846  8E12 D6 03        	sub 3
 847  8E14
 848  8E14 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 849  8E17 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 850  8E1A
 851  8E1A C9           	ret
 852  8E1B
 853  8E1B              ;------------------------------------------
 854  8E1B              ;
 855  8E1B              ;	14/09/24
 856  8E1B              ;
 857  8E1B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 858  8E1B
 859  8E1B              Entidad_genera_disparo_si_procede
 860  8E1B
 861  8E1B 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 862  8E1E CB 06        	rlc (hl)
 863  8E20
 864  8E20 DC E2 A0     	call c,Genera_disparo_de_entidad_maldosa
 865  8E23
 866  8E23 C9           	ret
 867  8E24
 868  8E24              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 869  8E24              ;
 870  8E24              ;	30/09/24
 871  8E24
 872  8E24              Actuaiza_sp_de_disparos_de_entidades
 873  8E24
 874  8E24 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 875  8E27 23           	inc hl
 876  8E28 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 877  8E2B
 878  8E2B 11 FD 88     	ld de,Numeros_aleatorios+7
 879  8E2E 7B           	ld a,e
 880  8E2F 95           	sub l
 881  8E30 C0           	ret nz
 882  8E31
 883  8E31 21 F6 88     1 ld hl,Numeros_aleatorios
 884  8E34 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 885  8E37 C9           	ret
 886  8E38
 887  8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 888  8E38              ;
 889  8E38              ;	24/07/24
 890  8E38
 891  8E38              Reinicia_Amadeus
 892  8E38
 893  8E38              ;	Reinicia posición y estado.
 894  8E38
 895  8E38 21 CF 50     	ld hl,$50cf
 896  8E3B 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 897  8E3E 21 CC DC     	ld hl,$dccc
 898  8E41 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 899  8E44 21 3D 00     	ld hl,$003d
 900  8E47 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 901  8E4A
 902  8E4A              ;	limpiamos el álbum de borrado.
 903  8E4A
 904  8E4A 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 905  8E4D
 906  8E4D AF           	xor a
 907  8E4E 77           	ld (hl),a
 908  8E4F
 909  8E4F E5           	push hl
 910  8E50 D1           	pop de
 911  8E51 13           	inc de
 912  8E52
 913  8E52 01 23 00     	ld bc,35
 914  8E55 ED B0        	ldir
 915  8E57
 916  8E57 CD 87 90     	call Genera_datos_de_impresion_Amadeus
 917  8E5A
 918  8E5A              ;	Reinicia temporizaciones.
 919  8E5A
 920  8E5A CD 66 91     	call Inicia_Shield
 921  8E5D
 922  8E5D 3E 5A        	ld a,90
 923  8E5F 32 8F 8C     	ld (Shield),a
 924  8E62
 925  8E62 3E 64        	ld a,100
 926  8E64 32 79 8C     	ld (Temp_new_live),a
 927  8E67
 928  8E67              ; 	Restauramos el FLAG: Amadeus vivo.
 929  8E67
 930  8E67 21 65 8C     	ld hl,Ctrl_3
 931  8E6A CB B6        	res 6,(hl)
 932  8E6C
 933  8E6C              ;	Fuerza la impresión de la nave en el siguiente frame.
 934  8E6C
 935  8E6C 21 65 8C      	ld hl,Ctrl_3
 936  8E6F CB EE        	set 5,(hl)
 937  8E71
 938  8E71 C9           	ret
 939  8E72
 940  8E72              ; --------------------------------------------------------------------------------------------------------------
 941  8E72              ;
 942  8E72              ;	7/11/24
 943  8E72
 944  8E72              Ajusta_velocidad_entidad
 945  8E72
 946  8E72 3A F9 8B     	ld a,(Velocidad)
 947  8E75 A7           	and a
 948  8E76 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 949  8E77              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 950  8E77              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 951  8E77
 952  8E77
 953  8E77              ; Incrementa (Contador_de_vueltas)x2.
 954  8E77              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 955  8E77
 956  8E77              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 957  8E77              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 958  8E77              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 959  8E77              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 960  8E77              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 961  8E77
 962  8E77
 963  8E77 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 964  8E79 32 F9 8B     	ld (Velocidad),a
 965  8E7C E6 10        	and $10
 966  8E7E C8           	ret z
 967  8E7F
 968  8E7F              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 969  8E7F
 970  8E7F 3A F1 8B     	ld a,(Contador_de_vueltas)
 971  8E82 CB 2F        	sra a
 972  8E84 CB 2F        	sra a
 973  8E86 32 F9 8B     	ld (Velocidad),a
 974  8E89
 975  8E89 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 976  8E8C 23           	inc hl
 977  8E8D 23           	inc hl
 978  8E8E 23           	inc hl
 979  8E8F 23           	inc hl
 980  8E90 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 981  8E93
 982  8E93 C9           	ret
 983  8E94
 984  8E94              ; --------------------------------------------------------------------------------------------------------------
 985  8E94              ;
 986  8E94              ;	25/08/24
 987  8E94
 988  8E94              Change
 989  8E94
 990  8E94 3A 5C 8C     	ld a,(Switch)
 991  8E97 EE 01        	xor 1
 992  8E99 32 5C 8C     	ld (Switch),a
 993  8E9C 2A 41 8C     	ld hl,(Album_de_pintado)
 994  8E9F ED 5B 43 8C  	ld de,(Album_de_borrado)
 995  8EA3 EB           	ex de,hl
 996  8EA4 22 41 8C     	ld (Album_de_pintado),hl
 997  8EA7 22 5F 8C     	ld (Scanlines_album_SP),hl
 998  8EAA ED 53 43 8C  	ld (Album_de_borrado),de
 999  8EAE C9           	ret
1000  8EAF
1001  8EAF              Change_Amadeus
1002  8EAF
1003  8EAF 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1004  8EB2 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1005  8EB6 EB           	ex de,hl
1006  8EB7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1007  8EBA ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1008  8EBE C9           	ret
1009  8EBF
1010  8EBF              Change_Disparos
1011  8EBF
1012  8EBF              ; Álbumes de Amadeus.
1013  8EBF
1014  8EBF 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1015  8EC2 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1016  8EC6 EB           	ex de,hl
1017  8EC7 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1018  8ECA ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1019  8ECE CD A1 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1020  8ED1
1021  8ED1              ; Álbumes de entidades.
1022  8ED1
1023  8ED1 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1024  8ED4 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1025  8ED8 EB           	ex de,hl
1026  8ED9 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1027  8EDC ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1028  8EE0 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1029  8EE3
1030  8EE3 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1031  8EE6 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1032  8EE9
1033  8EE9 C9           	ret
1034  8EEA
1035  8EEA              ; ------------------------------------
1036  8EEA              ;
1037  8EEA              ; 1/05/24
1038  8EEA
1039  8EEA              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1040  8EEA              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1041  8EEA
1042  8EEA              ;	DESTRUYE: HL,DE,A
1043  8EEA              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1044  8EEA
1045  8EEA              ;	Variables implicadas: (RND_SP).
1046  8EEA
1047  8EEA              Extrae_numero_aleatorio_y_avanza
1048  8EEA
1049  8EEA 21 00 89     	ld hl,Tabla_de_pintado
1050  8EED EB           	ex de,hl
1051  8EEE 2A 7A 8C     	ld hl,(RND_SP)
1052  8EF1 EB           	ex de,hl
1053  8EF2 A7           	and a
1054  8EF3 ED 52        	sbc hl,de
1055  8EF5
1056  8EF5 2A 7A 8C     	ld hl,(RND_SP)
1057  8EF8 20 06        	jr nz,1F
1058  8EFA
1059  8EFA              ; Sitúa HL al principio de la tabla de nº aleatorios.
1060  8EFA
1061  8EFA 21 F6 88     	ld hl,Numeros_aleatorios
1062  8EFD 22 7A 8C     	ld (RND_SP),HL
1063  8F00
1064  8F00              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1065  8F00
1066  8F00 7E           1 ld a,(hl)
1067  8F01 23           	inc hl
1068  8F02 22 7A 8C     	ld (RND_SP),hl
1069  8F05 C9           	ret
1070  8F06
1071  8F06              ; ------------------------------------
1072  8F06              ;
1073  8F06              ; 1/05/24
1074  8F06
1075  8F06              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1076  8F06              ; (1 a 4 segundos).
1077  8F06              ; Actualizamos (Clock_next_entity) con A.
1078  8F06
1079  8F06              ;	DESTRUYE: A y B.
1080  8F06              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1081  8F06              ;			 Actualiza (Clock_next_entity) con A.
1082  8F06
1083  8F06              ;	Variables implicadas: (Clock_next_entity).
1084  8F06
1085  8F06              ; Notas:
1086  8F06
1087  8F06              ; 	$32 1 seg.
1088  8F06              ; 	$64 2 seg.
1089  8F06              ; 	$96 3 seg.
1090  8F06              ; 	$c8 4 seg.
1091  8F06              ; 	$fa 5 seg.
1092  8F06
1093  8F06              ; $ffff 1310,7 seg, 22 minutos.
1094  8F06
1095  8F06              ;	$0100  5 seg. aproximadamente.
1096  8F06              ;	$0200 10 seg. aproximadamente.
1097  8F06              ;	$0300 15 seg. aproximadamente.
1098  8F06              ;	$0400 20 seg. aproximadamente.
1099  8F06              ;	$0500 25 seg. aproximadamente.
1100  8F06              ;	$0600 30 seg. aproximadamente.
1101  8F06
1102  8F06              Define_Clock_next_entity
1103  8F06
1104  8F06 FE 34        	cp $34
1105  8F08 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1106  8F0A
1107  8F0A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1108  8F0A
1109  8F0A 4F           3 ld c,a
1110  8F0B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1111  8F0D 2A 78 5C     	ld hl,(FRAMES)
1112  8F10 A7           	and a
1113  8F11 ED 4A        	adc hl,bc
1114  8F13 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1115  8F16 C9           	ret
1116  8F17
1117  8F17 3E 34        1 ld a,$34
1118  8F19 18 EF        	jr 3B
1119  8F1B
1120  8F1B              ; ------------------------------------
1121  8F1B              ;
1122  8F1B              ; 18/03/24
1123  8F1B
1124  8F1B              Borra_diferencia
1125  8F1B
1126  8F1B ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1127  8F1F
1128  8F1F 3A 5C 8C     	ld a,(Switch)
1129  8F22 A7           	and a
1130  8F23 28 08        	jr z,2F
1131  8F25
1132  8F25 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1133  8F28 11 5A 8C     	ld de,Techo_Scanlines_album_2
1134  8F2B 18 06        	jr 3F
1135  8F2D
1136  8F2D 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1137  8F30 11 58 8C     	ld de,Techo_Scanlines_album
1138  8F33
1139  8F33              ; Diferencia.
1140  8F33
1141  8F33 ED 42        3 sbc hl,bc
1142  8F35
1143  8F35 C8           	ret z
1144  8F36 D8           	ret c
1145  8F37
1146  8F37              ; Nuevo techo, (más bajo que el anterior).
1147  8F37              ; Fijamos nuevo techo y borramos bytes sobrantes.
1148  8F37
1149  8F37 EB           	ex de,hl
1150  8F38
1151  8F38 71           	ld (hl),c
1152  8F39 2C           	inc l
1153  8F3A 70           	ld (hl),b
1154  8F3B
1155  8F3B AF           	xor a
1156  8F3C 43           	ld b,e
1157  8F3D
1158  8F3D 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1159  8F40
1160  8F40 77           1 ld (hl),a
1161  8F41 23           	inc hl
1162  8F42 10 FC        	djnz 1B
1163  8F44
1164  8F44              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1165  8F44
1166  8F44 21 65 8C     	ld hl,Ctrl_3
1167  8F47 CB DE        	set 3,(hl)
1168  8F49
1169  8F49 C9           	ret
1170  8F4A
1171  8F4A              ; --------------------------------------------------------------------------------------------------------------
1172  8F4A              ;
1173  8F4A              ;	26/3/24
1174  8F4A
1175  8F4A              Recauda_informacion_de_entidad_en_curso
1176  8F4A
1177  8F4A              ; Almacena la Coordenada Y de la entidad en curso.
1178  8F4A
1179  8F4A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1180  8F4A
1181  8F4A 3A F0 8B     	ld a,(Coordenada_y)
1182  8F4D 2A 61 8C     	ld hl,(India_SP)
1183  8F50 77           	ld (hl),a
1184  8F51 2C           	inc l
1185  8F52
1186  8F52              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1187  8F52
1188  8F52 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1189  8F56
1190  8F56 73           	ld (hl),e
1191  8F57 2C           	inc l
1192  8F58 72           	ld (hl),d
1193  8F59 2C           	inc l
1194  8F5A
1195  8F5A 22 61 8C     	ld (India_SP),hl
1196  8F5D
1197  8F5D C9           	ret
1198  8F5E
1199  8F5E              ; --------------------------------------------------------------------------------------------------------------
1200  8F5E              ;
1201  8F5E              ;	27/03/24
1202  8F5E              ;
1203  8F5E
1204  8F5E              Inicializa_India_y_limpia_Tabla_de_impresion
1205  8F5E
1206  8F5E 2A 61 8C     	ld hl,(India_SP)
1207  8F61 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1208  8F64
1209  8F64 79           	ld a,c
1210  8F65 95           	sub l
1211  8F66 28 06        	jr z,2F
1212  8F68 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1213  8F69              ;														; _ y pasamos a inicializar (India_SP).
1214  8F69 AF           	xor a
1215  8F6A
1216  8F6A 77           1 ld (hl),a
1217  8F6B 2C           	inc l
1218  8F6C 10 FC        	djnz 1B												; Limpia Tabla.
1219  8F6E
1220  8F6E 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1221  8F71 22 61 8C     	ld (India_SP),hl
1222  8F74
1223  8F74 C9           	ret
1224  8F75
1225  8F75              ; --------------------------------------------------------------------------------------------------------------
1226  8F75              ;
1227  8F75              ;	31/3/24
1228  8F75
1229  8F75              Ordena_tabla_de_impresion
1230  8F75
1231  8F75              ; 5794 T/states.
1232  8F75              ; 6278 T/states.
1233  8F75              ; 5310 T/states.
1234  8F75
1235  8F75              ; Inicializamos punteros (India_SP) e (India_2_SP).
1236  8F75              ; Inicializamos contador de comparaciones, [C].
1237  8F75              ; Cargamos los registros A y B para efectuar comparación.
1238  8F75
1239  8F75 FD 2E 00     	ld iyl,0
1240  8F78
1241  8F78 3A 38 8C     	ld a,(Entidades_en_curso)
1242  8F7B FE 04        	cp 4 	;	4
1243  8F7D D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1244  8F7E
1245  8F7E 3D           	dec a
1246  8F7F 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1247  8F80 51           	ld d,c 										; Copia de respaldo.
1248  8F81
1249  8F81 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1250  8F82
1251  8F82 21 03 89     	ld hl,Tabla_de_pintado+3
1252  8F85 46           	ld b,(hl)
1253  8F86 22 63 8C     	ld (India_2_SP),hl
1254  8F89
1255  8F89 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1256  8F8A DC B2 8F     	call c, Avanza_India_2_SP
1257  8F8D CC B2 8F     	call z, Avanza_India_2_SP
1258  8F90
1259  8F90 FD 2D        	dec iyl
1260  8F92 28 18        	jr z,2F
1261  8F94
1262  8F94
1263  8F94              ; --------------------------------------------------------------------------------------------------------------
1264  8F94              ;
1265  8F94              ;	7/4/24
1266  8F94
1267  8F94              Trueque
1268  8F94
1269  8F94              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1270  8F94              ;  			A contiene en nº de fila de (India_SP).
1271  8F94              ;			HL contiene (India_2_SP).
1272  8F94
1273  8F94 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1274  8F95 E5           	push hl										; Preservo (India_2_SP).
1275  8F96
1276  8F96 ED 5B 61 8C  	ld de,(India_SP)
1277  8F9A EB           	ex de,hl
1278  8F9B 70           	ld (hl),b
1279  8F9C 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1280  8F9D
1281  8F9D CD DE 8F     	call Intercambia_1_byte
1282  8FA0 CD DE 8F     	call Intercambia_1_byte
1283  8FA3
1284  8FA3
1285  8FA3              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1286  8FA3              ; Recuperamos (India_2_SP) en HL.
1287  8FA3
1288  8FA3 2A 61 8C     	ld hl,(India_SP)
1289  8FA6 7E           	ld a,(hl)
1290  8FA7
1291  8FA7 E1           	pop hl
1292  8FA8 D1           	pop de
1293  8FA9
1294  8FA9              ; --------------------------------------------------------------------------------------------------------------
1295  8FA9
1296  8FA9 CD B2 8F     	call Avanza_India_2_SP
1297  8FAC
1298  8FAC 14           2 inc d
1299  8FAD 15           	dec d
1300  8FAE C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1301  8FAF 18 D8        	jr 1B
1302  8FB1
1303  8FB1 C9           	ret
1304  8FB2
1305  8FB2              ; ----- ----- ----- ----- -----
1306  8FB2
1307  8FB2              Avanza_India_2_SP
1308  8FB2
1309  8FB2 0D           	dec c
1310  8FB3 28 0A        	jr z,Avanza_punteros_indios
1311  8FB5
1312  8FB5 FD 2C        	inc iyl
1313  8FB7
1314  8FB7 2C           	inc l
1315  8FB8 2C           	inc l
1316  8FB9 2C           	inc l
1317  8FBA
1318  8FBA 46           	ld b,(hl)
1319  8FBB 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1320  8FBE
1321  8FBE C9           	ret
1322  8FBF
1323  8FBF              ; ----- ----- ----- ----- -----
1324  8FBF
1325  8FBF              Avanza_punteros_indios
1326  8FBF
1327  8FBF 15           	dec d
1328  8FC0 28 15        	jr z,Prepara_salida
1329  8FC2
1330  8FC2 4A           	ld c,d
1331  8FC3
1332  8FC3 2A 61 8C     	ld hl,(India_SP)
1333  8FC6 2C           	inc l
1334  8FC7 2C           	inc l
1335  8FC8 2C           	inc l
1336  8FC9 7E           	ld a,(hl)
1337  8FCA 22 61 8C     	ld (India_SP),hl
1338  8FCD
1339  8FCD 2C           	inc l
1340  8FCE 2C           	inc l
1341  8FCF 2C           	inc l
1342  8FD0 46           	ld b,(hl)
1343  8FD1 22 63 8C     	ld (India_2_SP),hl
1344  8FD4
1345  8FD4 FD 2C        	inc iyl
1346  8FD6
1347  8FD6 C9           	ret
1348  8FD7
1349  8FD7              Prepara_salida
1350  8FD7
1351  8FD7 21 00 89     	ld hl,Tabla_de_pintado
1352  8FDA 22 61 8C     	ld (India_SP),hl
1353  8FDD C9           	ret
1354  8FDE
1355  8FDE
1356  8FDE 2C           Intercambia_1_byte inc l
1357  8FDF 1C           	inc e
1358  8FE0 46           	ld b,(hl)
1359  8FE1 1A           	ld a,(de)
1360  8FE2 EB           	ex de,hl
1361  8FE3 70           	ld (hl),b
1362  8FE4 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1363  8FE5 C9           	ret
1364  8FE6
1365  8FE6              ; -----------------------------------------------------------------------------------
1366  8FE6              ;
1367  8FE6              ;	20/01/24
1368  8FE6              ;
1369  8FE6              ;
1370  8FE6
1371  8FE6              Construye_movimientos_masticados_entidad
1372  8FE6
1373  8FE6 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1374  8FE9 E5           	push hl
1375  8FEA CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1376  8FED              ;															; _ el (Contador_de_mov_masticados).
1377  8FED CD FE 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1378  8FF0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1379  8FF0 CD CE 99     	call Recompone_posicion_inicio
1380  8FF3
1381  8FF3 CD FE 96     1 call Draw
1382  8FF6 CD 12 90     	call Guarda_movimiento_masticado
1383  8FF9
1384  8FF9 CD 7B 9D     	call Movimiento
1385  8FFC
1386  8FFC 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1387  8FFF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1388  9001 28 F0        	jr z,1B
1389  9003
1390  9003              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1391  9003              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1392  9003
1393  9003 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1394  9004 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1395  9007
1396  9007              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1397  9007
1398  9007 CD DF 9E     	call Situa_en_contador_general_de_mov_masticados
1399  900A
1400  900A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1401  900A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1402  900A
1403  900A ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1404  900E
1405  900E 71           	ld (hl),c
1406  900F 23           	inc hl
1407  9010 70           	ld (hl),b
1408  9011
1409  9011 C9           	ret
1410  9012
1411  9012              ; -----------------------------------------------------------------------------------
1412  9012              ;
1413  9012              ;	28/12/23
1414  9012              ;
1415  9012              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1416  9012              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1417  9012
1418  9012              Guarda_movimiento_masticado
1419  9012
1420  9012 ED 73 3D 8C  	ld (Stack),sp
1421  9016 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1422  901A
1423  901A DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1424  901C FD E5            push iy 												; Pushea Puntero_objeto.
1425  901E
1426  901E ED 7B 3D 8C      ld sp,(Stack)
1427  9022
1428  9022 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1429  9025 23           	inc hl
1430  9026 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1431  9029
1432  9029 CD 2D 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1433  902C              ;															; _ el (Contador_de_mov_masticados).
1434  902C C9               ret
1435  902D
1436  902D              ; --------------------------------------------------------------------------------------------------------------
1437  902D              ;
1438  902D              ;	12/1/24
1439  902D              ;
1440  902D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1441  902D
1442  902D              Actualiza_Puntero_de_almacen_de_mov_masticados
1443  902D
1444  902D 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1445  9030 01 04 00     	ld bc,4
1446  9033 A7           	and a
1447  9034 ED 4A        	adc hl,bc
1448  9036 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1449  9039 C9           	ret
1450  903A
1451  903A              ; --------------------------------------------------------------------------------------------------------------
1452  903A              ;
1453  903A              ;	19/11/24
1454  903A              ;
1455  903A              ;	INPUT:	HL está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.
1456  903A              ;
1457  903A              ;	OUTPUT:	IX contiene el puntero de impresión.
1458  903A              ;			DE contiene (Puntero_objeto).
1459  903A              ;
1460  903A              ;	ACTUALIZA: (Puntero_de_almacen_de_mov_masticados) de la correspondiente entidad.
1461  903A              ;
1462  903A              ;	MODIFICA: HL,BC,AF,DE,IX
1463  903A
1464  903A              Cargamos_registros_con_mov_masticado
1465  903A
1466  903A CD F8 90     	call Extrae_address
1467  903D
1468  903D ED 73 3D 8C  	ld (Stack),sp
1469  9041 F9           	ld sp,hl
1470  9042
1471  9042              ; DE está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.											;
1472  9042
1473  9042 C1           	pop bc 															; BC contiene Puntero_objeto
1474  9043 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1475  9045
1476  9045 AF           	xor a
1477  9046 67           	ld h,a
1478  9047 6C           	ld l,h															; HL="0".
1479  9048
1480  9048 39           	add hl,sp
1481  9049
1482  9049 EB           	ex de,hl														; (Puntero_de_almacen_de_mov_masticados) actualizado en DE.
1483  904A              ;																	; HL está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.
1484  904A
1485  904A 73           	ld (hl),e
1486  904B 2C           	inc l
1487  904C 72           	ld (hl),d														; (Puntero_de_almacen_de_mov_masticados) actualizado en entidad.
1488  904D
1489  904D ED 7B 3D 8C  	ld sp,(Stack)
1490  9051
1491  9051 C5           	push bc
1492  9052 D1           	pop de															; (Puntero_objeto) en DE.
1493  9053
1494  9053 7B           	ld a,e
1495  9054 82           	add d															; Comprueba si ya no hay datos en el almacén.
1496  9055
1497  9055 CC FB 93     	call z,Reinicia_entidad_maliciosa
1498  9058
1499  9058 C9           	ret
1500  9059
1501  9059              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1502  9059              ;
1503  9059              ;	22/7/24
1504  9059
1505  9059              Cargamos_registros_con_explosion
1506  9059
1507  9059
1508  9059 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1509  905C CD F8 90     	call Extrae_address
1510  905F
1511  905F 5D           	ld e,l
1512  9060 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1513  9061
1514  9061 DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1515  9065
1516  9065 C9           	ret
1517  9066
1518  9066
1519  9066              Cargamos_registros_con_explosion_Amadeus
1520  9066
1521  9066 2A BE 89     	ld hl,(Pamm_Amadeus)
1522  9069 CD F8 90     	call Extrae_address
1523  906C
1524  906C 5D           	ld e,l
1525  906D 54           	ld d,h
1526  906E
1527  906E DD 2A BC 89  	ld ix,(p.imp.amadeus)
1528  9072
1529  9072 C9           	ret
1530  9073
1531  9073              ; --------------------------------------------------------------------------------------------------------------
1532  9073              ;
1533  9073              ;	17/06/24
1534  9073              ;
1535  9073              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1536  9073              ;
1537  9073              ;	IX contiene el puntero de impresión.
1538  9073              ;	DE contiene (Puntero_objeto).
1539  9073
1540  9073
1541  9073              Cargamos_registros_con_mov_masticado_Amadeus
1542  9073
1543  9073 ED 73 3D 8C  	ld (Stack),sp
1544  9077 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1545  907B D1           	pop de 															; DE contiene Puntero_objeto
1546  907C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1547  907E DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1548  9082 ED 7B 3D 8C  	ld sp,(Stack)
1549  9086 C9           	ret
1550  9087
1551  9087              ; ---------------------------------------------------------------------------------------------------------------------
1552  9087              ;
1553  9087              ;	18/6/24
1554  9087              ;
1555  9087              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1556  9087
1557  9087              Genera_datos_de_impresion_Amadeus
1558  9087
1559  9087 3A BB 89     	ld a,(Impacto_Amadeus)
1560  908A A7           	and a
1561  908B 20 03        	jr nz,1F
1562  908D
1563  908D              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1564  908D              ; _apuntando a la correspondiente explosión.
1565  908D
1566  908D CD 73 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1567  9090
1568  9090 DD 7D        1 ld a,ixl
1569  9092 E6 1F        	and $1f
1570  9094 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1571  9097
1572  9097 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1573  909A E5           	push hl
1574  909B
1575  909B 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1576  909E 22 5F 8C     	ld (Scanlines_album_SP),hl
1577  90A1
1578  90A1 CD E2 94     	call Genera_datos_de_impresion
1579  90A4
1580  90A4 E1           	pop hl
1581  90A5 22 5F 8C     	ld (Scanlines_album_SP),hl
1582  90A8
1583  90A8 C9           	ret
1584  90A9
1585  90A9              ; ---------------------------------------------------------------------------------------------------------------------
1586  90A9              ;
1587  90A9              ;	13/03/24
1588  90A9              ;
1589  90A9              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1590  90A9
1591  90A9              Inicia_albumes_de_lineas
1592  90A9
1593  90A9 21 00 80     	ld hl,Scanlines_album
1594  90AC 22 41 8C     	ld (Album_de_pintado),hl
1595  90AF 22 5F 8C     	ld (Scanlines_album_SP),hl
1596  90B2
1597  90B2 21 1A 81     	ld hl,Scanlines_album_2
1598  90B5 22 43 8C     	ld (Album_de_borrado),hl
1599  90B8
1600  90B8 C9           	ret
1601  90B9
1602  90B9              Inicia_albumes_de_lineas_Amadeus
1603  90B9
1604  90B9 21 34 82     	ld hl,Amadeus_scanlines_album
1605  90BC 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1606  90BF 21 58 82     	ld hl,Amadeus_scanlines_album_2
1607  90C2 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1608  90C5
1609  90C5 C9           	ret
1610  90C6
1611  90C6              Inicia_albumes_de_disparos
1612  90C6
1613  90C6 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1614  90C9 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1615  90CC 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1616  90CF 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1617  90D2
1618  90D2 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1619  90D5 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1620  90D8 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1621  90DB
1622  90DB 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1623  90DE 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1624  90E1
1625  90E1 C9           	ret
1626  90E2
1627  90E2              ; ---------------------------------------------------------------------------------------------------------------------
1628  90E2              ;
1629  90E2              ; 8/1/23
1630  90E2              ;
1631  90E2              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1632  90E2              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1633  90E2              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1634  90E2
1635  90E2              ; Destruye HL y DE !!!!!
1636  90E2
1637  90E2              Inicia_punteros_de_cajas
1638  90E2
1639  90E2 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1640  90E5 CD F8 90         call Extrae_address
1641  90E8 22 2E 8C         ld (Puntero_store_caja),hl
1642  90EB 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1643  90EE 22 32 8C     	ld (Indice_restore_caja),hl
1644  90F1 CD F8 90     	call Extrae_address
1645  90F4 22 30 8C     	ld (Puntero_restore_caja),hl
1646  90F7 C9               ret
1647  90F8
1648  90F8              ; *************************************************************************************************************************************************************
1649  90F8
1650  90F8              ;
1651  90F8              ; 20/10/22
1652  90F8              ;
1653  90F8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1654  90F8              ;
1655  90F8              ; Destruye el puntero y DE !!!!!
1656  90F8
1657  90F8 5E           Extrae_address ld e,(hl)
1658  90F9 23           	inc hl
1659  90FA 56           	ld d,(hl)
1660  90FB 2B           	dec hl
1661  90FC EB           	ex de,hl
1662  90FD C9           	ret
1663  90FE
1664  90FE              ; *************************************************************************************************************************************************************
1665  90FE              ;
1666  90FE              ;	20/1/24
1667  90FE              ;
1668  90FE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1669  90FE              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1670  90FE              ;
1671  90FE              ;   Destruye HL y BC !!!!!,
1672  90FE              ;
1673  90FE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1674  90FE              ;					"0" ..... Izquierda.
1675  90FE
1676  90FE              Inicia_Puntero_objeto
1677  90FE
1678  90FE 3A 0D 8C     	ld a,(Cuad_objeto)
1679  9101 E6 01        	and 1
1680  9103 F5           	push af
1681  9104 CC 20 91     	call z,Inicia_puntero_objeto_izq
1682  9107 F1           	pop af
1683  9108 C8           	ret z
1684  9109 CD 0D 91     	call Inicia_puntero_objeto_der
1685  910C C9           	ret
1686  910D
1687  910D              ; Arrancamos desde la parte izquierda de la pantalla.
1688  910D              ; Iniciamos (Indice_Sprite_der).
1689  910D
1690  910D 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1691  9110 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1692  9113 CD F8 90     	call Extrae_address
1693  9116 22 00 8C     	ld (Puntero_objeto),hl
1694  9119
1695  9119 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1696  911C 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1697  911F C9           	ret
1698  9120
1699  9120              ; Arrancamos desde la parte derecha de la pantalla.
1700  9120              ; Iniciamos (Indice_Sprite_izq).
1701  9120
1702  9120 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1703  9123 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1704  9126 CD F8 90     	call Extrae_address
1705  9129 22 00 8C     	ld (Puntero_objeto),hl
1706  912C
1707  912C 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1708  912F 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1709  9132 C9           	ret
1710  9133
1711  9133              ; **************************************************************************************************
1712  9133              ;
1713  9133              ;	06/07/24
1714  9133              ;
1715  9133              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1716  9133
1717  9133              Restore_entidad
1718  9133
1719  9133 2A 2E 8C     	ld hl,(Puntero_store_caja)
1720  9136 7E           	ld a,(hl)
1721  9137 A7           	and a
1722  9138 CC 46 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1723  913B 28 F6        	jr z,Restore_entidad
1724  913D
1725  913D 11 EE 8B     	ld de,Bandeja_DRAW
1726  9140 01 0C 00     	ld bc,12
1727  9143 ED B0        	ldir
1728  9145 C9           	ret
1729  9146
1730  9146              ; **************************************************************************************************
1731  9146              ;
1732  9146              ;	08/05/23
1733  9146              ;
1734  9146              ;	Incrementamos los dos punteros de entidades. (+1).
1735  9146
1736  9146              Incrementa_punteros_de_cajas
1737  9146
1738  9146 2A 30 8C     	ld hl,(Puntero_restore_caja)
1739  9149 22 2E 8C     	ld (Puntero_store_caja),hl
1740  914C 2A 32 8C     	ld hl,(Indice_restore_caja)
1741  914F 23           	inc hl
1742  9150 23           	inc hl
1743  9151 22 32 8C     	ld (Indice_restore_caja),hl
1744  9154 CD F8 90         call Extrae_address
1745  9157 22 30 8C         ld (Puntero_restore_caja),hl
1746  915A C9               ret
1747  915B
1748  915B              ; -----------------------------------------------------------
1749  915B
1750  915B              ; Teclado.
1751  915B
1752  915B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1753  915D DB FE        	in a,($fe)
1754  915F E6 01        	and $01
1755  9161 28 02        	jr z,1f
1756  9163 18 F6        	jr Pulsa_ENTER
1757  9165 C9           1 ret
1758  9166
1759  9166              ; **************************************************************************************************
1760  9166              ;
1761  9166              ; Temporización.
1762  9166
1763  9166              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1764  9166              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1765  9166              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1766  9166              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1767  9166
1768  9166              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1769  9166              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1770  9166              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1771  9166
1772  9166              ; A partir de $4f61 no hace falta DELAY.
1773  9166
1774  9166              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1775  9166
1776  9166              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1777  9166              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1778  9166              ;	LD A,B
1779  9166              ;	AND A
1780  9166              ;	JR NZ,wait
1781  9166              ;	RET
1782  9166
1783  9166              ; ---------------------------------------------------------------------------------------------------------------
1784  9166              ;
1785  9166              ;	13/07/24
1786  9166              ;
1787  9166
1788  9166              Inicia_Shield
1789  9166
1790  9166 21 89 8C     	ld hl,Datos_Shield
1791  9169 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1792  916C
1793  916C 7E           	ld a,(hl)
1794  916D 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1795  9170
1796  9170 3E 01        	ld a,1
1797  9172 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1798  9175
1799  9175 C9           	ret
1800  9176
1801  9176              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1802  9176              ;
1803  9176              ;	4/6/24
1804  9176              ;
1805  9176              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1806  9176              ;
1807  9176              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1808  9176              ;
1809  9176
1810  9176              Actualiza_pantalla
1811  9176
1812  9176 3E 02        	ld a,2
1813  9178 D3 FE        	out ($fe),a
1814  917A
1815  917A 3A 65 8C     	ld a,(Ctrl_3)
1816  917D CB 57        	bit 2,a
1817  917F 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1818  9181
1819  9181              Borrando_entidades
1820  9181
1821  9181 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1822  9184 CD F8 90     	call Extrae_address
1823  9187 24           	inc h
1824  9188 25           	dec h
1825  9189 28 05        	jr z,Pintando_entidades
1826  918B CD DB 95     	call Pinta_Sprites
1827  918E 18 F1        	jr Borrando_entidades
1828  9190
1829  9190              Pintando_entidades
1830  9190
1831  9190 2A 61 8C     	ld hl,(India_SP)
1832  9193 2C           	inc l
1833  9194 CD F8 90     	call Extrae_address
1834  9197 24           	inc h
1835  9198 25           	dec h
1836  9199 28 0E        	jr z,Ejecuta_escudo
1837  919B 1C           	inc e
1838  919C 1C           	inc e
1839  919D ED 53 61 8C  	ld (India_SP),de
1840  91A1 CD F8 90     	call Extrae_address
1841  91A4 CD DB 95     	call Pinta_Sprites
1842  91A7 18 E7        	jr Pintando_entidades
1843  91A9
1844  91A9              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1845  91A9
1846  91A9              Ejecuta_escudo
1847  91A9
1848  91A9 3A 8F 8C     	ld a,(Shield)
1849  91AC A7           	and a
1850  91AD 20 2F        	jr nz,Aplica_Shield
1851  91AF
1852  91AF              Borrando_Amadeus
1853  91AF
1854  91AF 21 65 8C     	ld hl,Ctrl_3
1855  91B2 CB 6E        	bit 5,(hl)
1856  91B4 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1857  91B6
1858  91B6 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1859  91B9 CD F8 90     	call Extrae_address
1860  91BC 24           	inc h
1861  91BD 25           	dec h
1862  91BE 28 03        	jr z,Pintando_Amadeus
1863  91C0 CD DB 95     	call Pinta_Sprites
1864  91C3
1865  91C3              Pintando_Amadeus
1866  91C3
1867  91C3 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1868  91C6 CD F8 90     	call Extrae_address
1869  91C9 24           	inc h
1870  91CA 25           	dec h
1871  91CB 28 03        	jr z,1F
1872  91CD CD DB 95     	call Pinta_Sprites
1873  91D0
1874  91D0              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1875  91D0
1876  91D0 21 65 8C     1 ld hl,Ctrl_3
1877  91D3 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1878  91D5 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1879  91D7 CB AE        	res 5,(hl)
1880  91D9
1881  91D9 3E 01        	ld a,1												; Borde azul.
1882  91DB D3 FE        	out ($fe),a
1883  91DD
1884  91DD C9           	ret
1885  91DE
1886  91DE              Aplica_Shield
1887  91DE
1888  91DE              ;	Bit 1 "1" (Shield_3) Sólo borra.
1889  91DE              ;		  "0"     ""     Borra/Pinta.
1890  91DE              ;	Bit 2    ""  RET.	 No borra, no pinta.
1891  91DE
1892  91DE 21 91 8C     	ld hl,Shield_3
1893  91E1
1894  91E1 CB 5E        	bit 3,(hl)
1895  91E3 20 DE        	jr nz,Pintando_Amadeus
1896  91E5
1897  91E5 CB 56        	bit 2,(hl)
1898  91E7 20 E7        	jr nz,1B
1899  91E9
1900  91E9 CB 4E        	bit 1,(hl)
1901  91EB C4 F2 91     	call nz,Borra_Amadeus_shield
1902  91EE
1903  91EE 28 BF        	jr z,Borrando_Amadeus
1904  91F0 18 DE        	jr 1B
1905  91F2
1906  91F2              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1907  91F2
1908  91F2              Borra_Amadeus_shield
1909  91F2
1910  91F2 3A 65 8C     	ld a,(Ctrl_3)
1911  91F5 CB 6F        	bit 5,a
1912  91F7 28 08        	jr z,1F
1913  91F9
1914  91F9 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1915  91FC CD F8 90     	call Extrae_address
1916  91FF 18 06        	jr 2F
1917  9201
1918  9201 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1919  9204 CD F8 90     	call Extrae_address
1920  9207
1921  9207 CD DB 95     2 call Pinta_Sprites
1922  920A
1923  920A AF           	xor a
1924  920B 3C           	inc a											; Asegura NZ en la salida de la rutina.
1925  920C
1926  920C C9           	ret
1927  920D
1928  920D              Pinta_Amadeus_shield
1929  920D
1930  920D 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1931  9210 CD F8 90     	call Extrae_address
1932  9213 CD DB 95     	call Pinta_Sprites
1933  9216
1934  9216 AF           	xor a
1935  9217 3C           	inc a											; Asegura NZ en la salida de la rutina.
1936  9218
1937  9218 C9           	ret
1938  9219
1939  9219              Borra_Pinta_Amadeus_shield
1940  9219
1941  9219 CD F2 91     	call Borra_Amadeus_shield
1942  921C CD 0D 92     	call Pinta_Amadeus_shield
1943  921F C9           	ret
1944  9220
1945  9220              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1946  9220              ;
1947  9220              ;	19/6/24
1948  9220              ;
1949  9220
1950  9220              Teclado
1951  9220
1952  9220              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1953  9220
1954  9220 3E F7        	ld a,$f7												; "5" para disparar.
1955  9222 DB FE        	in a,($fe)
1956  9224 E6 10        	and $10
1957  9226
1958  9226 CC 75 A2     	call z,Genera_disparo_Amadeus
1959  9229
1960  9229 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1961  922B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1962  922D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1963  922F CC 48 9D         call z,Amadeus_a_izquierda
1964  9232
1965  9232 3E F7        	ld a,$f7
1966  9234 DB FE        	in a,($fe)
1967  9236 E6 01        	and $01
1968  9238 C8           	ret z
1969  9239
1970  9239 3E F7        	ld a,$f7
1971  923B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1972  923D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1973  923F CC 60 9D     	call z,Amadeus_a_derecha
1974  9242
1975  9242 C9           	ret
1976  9243
1977  9243              ; ------------------------------------------------------------------------------------------------------------------------
1978  9243              ;
1979  9243              ;	06/07/24
1980  9243              ;
1981  9243
1982  9243              Genera_explosion
1983  9243
1984  9243 21 77 8C     	ld hl,Clock_explosion
1985  9246 35           	dec (hl)
1986  9247 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1987  9249
1988  9249              Borra_entidad_colisionada
1989  9249
1990  9249 CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1991  924C CD 59 90     	call Cargamos_registros_con_explosion
1992  924F CD E2 94     	call Genera_datos_de_impresion
1993  9252
1994  9252 AF           	xor a
1995  9253 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1996  9254
1997  9254 C9           	ret
1998  9255
1999  9255              Siguiente_frame_explosion
2000  9255
2001  9255 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2002  9257
2003  9257              ; Avanza Frame de explosión.
2004  9257
2005  9257 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2006  925A 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2007  925D
2008  925D 79           	ld a,c
2009  925E 95           	sub l
2010  925F 20 0B        	jr nz,1F
2011  9261
2012  9261              ; Fín de la entidad !!!!!!!!!!!!!
2013  9261
2014  9261 21 37 8C     	ld hl,Numero_parcial_de_entidades
2015  9264 35           	dec (hl)
2016  9265 23           	inc hl
2017  9266 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2018  9267
2019  9267 CD D0 93     	call Limpiamos_bandeja_DRAW
2020  926A 18 DD        	jr Borra_entidad_colisionada
2021  926C
2022  926C 23           1 inc hl
2023  926D 23           	inc hl
2024  926E 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2025  9271 18 D6        	jr Borra_entidad_colisionada
2026  9273
2027  9273              ; ----- ----- ----- ----- -----
2028  9273
2029  9273              Genera_explosion_Amadeus
2030  9273
2031  9273 21 78 8C     	ld hl,Clock_explosion_Amadeus
2032  9276 35           	dec (hl)
2033  9277 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2034  9279
2035  9279              Borra_Amadeus_impactado
2036  9279
2037  9279 CD AF 8E     	call Change_Amadeus
2038  927C CD 66 90     	call Cargamos_registros_con_explosion_Amadeus
2039  927F CD 87 90     	call Genera_datos_de_impresion_Amadeus
2040  9282
2041  9282 21 65 8C     	ld hl,Ctrl_3
2042  9285 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2043  9287
2044  9287 AF           	xor a
2045  9288 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2046  9289
2047  9289 C9           	ret
2048  928A
2049  928A              Siguiente_frame_explosion_Amadeus
2050  928A
2051  928A 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2052  928C
2053  928C              ; Avanza Frame de explosión.
2054  928C
2055  928C 2A BE 89     	ld hl,(Pamm_Amadeus)
2056  928F 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2057  9292
2058  9292 79           	ld a,c
2059  9293 95           	sub l
2060  9294 20 0B        	jr nz,1F
2061  9296
2062  9296              ; Fín de Amadeus !!!!!!!!!!!!!
2063  9296              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2064  9296
2065  9296 AF           	xor a
2066  9297 32 BB 89     	ld (Impacto_Amadeus),a
2067  929A 21 65 8C     	ld hl,Ctrl_3
2068  929D CB F6        	set 6,(hl)
2069  929F
2070  929F 18 D8        	jr Borra_Amadeus_impactado
2071  92A1
2072  92A1 23           1 inc hl
2073  92A2 23           	inc hl
2074  92A3 22 BE 89     	ld (Pamm_Amadeus),hl
2075  92A6 18 D1        	jr Borra_Amadeus_impactado
2076  92A8
2077  92A8              ; ---------------------------------------------------------------
2078  92A8
2079  92A8              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92A8              ; ******************************************************************************************************************************************************************************************
   2+ 92A8              ;
   3+ 92A8              ;   21/04/24
   4+ 92A8              ;
   5+ 92A8              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92A8              ;   (XOR) bit a bit.
   7+ 92A8              ;
   8+ 92A8              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92A8
  10+ 92A8              Derivando_RND
  11+ 92A8
  12+ 92A8 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92AB
  14+ 92AB ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92AD C5               push bc
  16+ 92AE              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92AE 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92B1              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92B1
  20+ 92B1 A7           6 and a                                 ; Carry a "0".
  21+ 92B2 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92B4 30 02            jr nc,1F
  23+ 92B6
  24+ 92B6 CB C1            set 0,c
  25+ 92B8
  26+ 92B8 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92B9 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92BB 5F               ld e,a
  29+ 92BC
  30+ 92BC 7A               ld a,d
  31+ 92BD E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92BF 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92C1
  34+ 92C1 CB 3F            srl a
  35+ 92C3
  36+ 92C3 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92C4
  38+ 92C4 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92C5 28 04            jr z,4F
  40+ 92C7
  41+ 92C7 CB FF            set 7,a
  42+ 92C9 18 02            jr 5F
  43+ 92CB
  44+ 92CB CB BF        4 res 7,a
  45+ 92CD
  46+ 92CD CB 21        5 sla c
  47+ 92CF 10 E0            djnz 6B
  48+ 92D1
  49+ 92D1 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92D2
  51+ 92D2 77               ld (hl),a
  52+ 92D3 23               inc hl
  53+ 92D4 C1               pop bc
  54+ 92D5 10 D4            djnz 3B
  55+ 92D7
  56+ 92D7 C9               ret
  57+ 92D8
  58+ 92D8
  59+ 92D8
# file closed: RND_Derivando.asm
2080  92D8              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92D8              ;---------------------------------------------------------------------------------------------------------------
   2+ 92D8              ;
   3+ 92D8              ;   13/11/24
   4+ 92D8
   5+ 92D8              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92D8
   7+ 92D8              Genera_movimientos_masticados_del_nivel
   8+ 92D8
   9+ 92D8              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92D8
  11+ 92D8              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92D8              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92D8              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92D8
  15+ 92D8 2D           	dec l
  16+ 92D9 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92DA 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92DB 4E           	ld c,(hl)
  19+ 92DC
  20+ 92DC E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92DD C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 92DE
  23+ 92DE              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 92DE
  25+ 92DE 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 92DF
  27+ 92DF CD 1D 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 92E2
  29+ 92E2              ;	Caja Master inicializada ???
  30+ 92E2
  31+ 92E2 7E           	ld a,(hl)
  32+ 92E3 A7           	and a
  33+ 92E4 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 92E6
  35+ 92E6              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 92E6
  37+ 92E6 C1           	pop bc
  38+ 92E7 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 92E8 C5           	push bc
  40+ 92E9
  41+ 92E9 CD BB 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 92EC CD 44 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 92EF
  44+ 92EF 3A EE 8B     	ld a,(Tipo)
  45+ 92F2 CD 2D 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 92F5
  47+ 92F5              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 92F5
  49+ 92F5              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 92F5              ;	ld a,(hl)
  51+ 92F5              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 92F5
  53+ 92F5              ;	ld hl,Posicion_inicio
  54+ 92F5              ;	ld (hl),a
  55+ 92F5
  56+ 92F5              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 92F5              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 92F5
  59+ 92F5 CD E6 8F     	call Construye_movimientos_masticados_entidad
  60+ 92F8
  61+ 92F8 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 92FB CD F8 90     	call Extrae_address
  63+ 92FE
  64+ 92FE 5D           	ld e,l
  65+ 92FF 54           	ld d,h
  66+ 9300
  67+ 9300 CD 71 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9303
  69+ 9303              Movimientos_masticados_construidos
  70+ 9303
  71+ 9303 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9304
  73+ 9304 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9305 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9306
  76+ 9306 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9307 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9309
  79+ 9309 C9           	ret
  80+ 930A
  81+ 930A              ;---------------------------------------------------------------------------------------------------------------
  82+ 930A              ;
  83+ 930A              ;   9/11/24
  84+ 930A              ;
  85+ 930A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 930A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 930A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 930A              ;	_ de la 1ª entidad del Nivel.
  89+ 930A              ;
  90+ 930A              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 930A
  92+ 930A              ;	MODIFICA: HL,DE y A.
  93+ 930A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 930A
  95+ 930A              Inicializa_1er_Nivel
  96+ 930A
  97+ 930A              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 930A
  99+ 930A 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 930D CD F8 90     	call Extrae_address
 101+ 9310 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9314
 103+ 9314 7E           	ld a,(hl)
 104+ 9315 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9318
 106+ 9318 2C           	inc l
 107+ 9319 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 931C
 109+ 931C C9           	ret
 110+ 931D
 111+ 931D              ; ----------------------
 112+ 931D              ;
 113+ 931D              ;	13/11/24
 114+ 931D              ;
 115+ 931D
 116+ 931D              Situa_en_Caja_Master
 117+ 931D
 118+ 931D CD 2F 94         call Calcula_salto_en_BC
 119+ 9320 21 61 89         ld hl,Indice_de_cajas_master
 120+ 9323 A7               and a
 121+ 9324 ED 4A            adc hl,bc
 122+ 9326 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 9329 CD F8 90     	call Extrae_address
 124+ 932C C9           	ret
 125+ 932D
 126+ 932D              ; ----------------------
 127+ 932D
 128+ 932D              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 932D              ; 	ld bc,4
 130+ 932D              ; 	ldir
 131+ 932D              ; 	ret
 132+ 932D
 133+ 932D 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 932E CD 2F 94         call Calcula_salto_en_BC
 135+ 9331 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9334 A7               and a
 137+ 9335 ED 4A            adc hl,bc
 138+ 9337 CD F8 90         call Extrae_address
 139+ 933A 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 933D C9               ret
 141+ 933E
 142+ 933E              ;---------------------------------------------------------------------------------------------------------------
 143+ 933E              ;
 144+ 933E              ;   13/11/24
 145+ 933E              ;
 146+ 933E              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 933E
 148+ 933E
 149+ 933E              Prepara_Cajas_de_Entidades
 150+ 933E
 151+ 933E              ; Preparamos los punteros de las cajas de entidades:
 152+ 933E
 153+ 933E CD E2 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9341              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9341 CD 7A 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9344
 157+ 9344 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9347
 159+ 9347              ; En este punto:
 160+ 9347              ;
 161+ 9347              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9347              ; B contiene (Numero_parcial_de_entidades).
 163+ 9347
 164+ 9347 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9348
 166+ 9348 7E           	ld a,(hl)
 167+ 9349
 168+ 9349 CD 1D 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 934C
 170+ 934C ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9350 01 0C 00     	ld bc,12
 172+ 9353 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 173+ 9355              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 174+ 9355
 175+ 9355 EB           	ex de,hl
 176+ 9356 7D           	ld a,l
 177+ 9357 D6 05        	sub 5
 178+ 9359 6F           	ld l,a														; HL está situado en el .defw (Puntero_de_impresion) de la entidad.
 179+ 935A
 180+ 935A CD 3A 90     	call Cargamos_registros_con_mov_masticado
 181+ 935D
 182+ 935D              ;			IX contiene el puntero de impresión.
 183+ 935D              ;			DE contiene (Puntero_objeto).
 184+ 935D
 185+ 935D 18 FE        	jr $
 186+ 935F
 187+ 935F CD B6 94     	call Genera_coordenadas
 188+ 9362
 189+ 9362 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 190+ 9366
 191+ 9366 CD 4A 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 192+ 9369 D1           	pop de
 193+ 936A
 194+ 936A CD E2 94     	call Genera_datos_de_impresion
 195+ 936D              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 196+ 936D              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 197+ 936D              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 198+ 936D              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 199+ 936D
 200+ 936D CD F3 93     	call Decrementa_Contador_de_mov_masticados
 201+ 9370
 202+ 9370              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 203+ 9370
 204+ 9370 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 205+ 9374 CD 71 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 206+ 9377
 207+ 9377 CD D0 93     	call Limpiamos_bandeja_DRAW
 208+ 937A CD 46 91     	call Incrementa_punteros_de_cajas
 209+ 937D
 210+ 937D              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 211+ 937D              ; _ entidad del Nivel.
 212+ 937D
 213+ 937D 3A 66 8C     	ld a,(Ctrl_4)
 214+ 9380 E6 F0        	and $f0
 215+ 9382 32 66 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 216+ 9385
 217+ 9385              ; Siguiente entidad del Nivel.
 218+ 9385
 219+ 9385 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 220+ 9388 23           	inc hl 														; _ entidad del Nivel.
 221+ 9389
 222+ 9389 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 223+ 938A
 224+ 938A 10 BB        	djnz 1B
 225+ 938C
 226+ 938C C9           	ret
 227+ 938D
 228+ 938D              ; -------------------------------------------------------------------------------------------------------------------
 229+ 938D              ;
 230+ 938D              ;	27/5/24
 231+ 938D              ;
 232+ 938D              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 233+ 938D              ;
 234+ 938D
 235+ 938D              ; 	Cargamos la definición de Amadeus en DRAW.
 236+ 938D              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 237+ 938D
 238+ 938D 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 239+ 9390 CD 44 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 240+ 9393
 241+ 9393
 242+ 9393              Construye_movimientos_masticados_Amadeus
 243+ 9393
 244+ 9393 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 245+ 9396 CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 246+ 9399              ;															; _ el (Contador_de_mov_masticados).
 247+ 9399 CD FE 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 248+ 939C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 249+ 939C
 250+ 939C              ; Generamos movimientos masticados de Amadeus.
 251+ 939C
 252+ 939C 06 79        	ld b,121												; $0079, 121d.
 253+ 939E
 254+ 939E C5           1 push bc
 255+ 939F CD FE 96     	call Draw
 256+ 93A2 CD 12 90     	call Guarda_movimiento_masticado
 257+ 93A5
 258+ 93A5 CD 72 9A     	call Mov_right
 259+ 93A8 CD 72 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 260+ 93AB
 261+ 93AB C1           	pop bc
 262+ 93AC 10 F0        	djnz 1B
 263+ 93AE
 264+ 93AE              ; Todos los movimientos masticados de Amadeus se han creado.
 265+ 93AE
 266+ 93AE              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 267+ 93AE              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 268+ 93AE
 269+ 93AE 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 270+ 93B1 01 08 00     	ld bc,8
 271+ 93B4 A7           	and a
 272+ 93B5 ED 42        	sbc hl,bc
 273+ 93B7 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 274+ 93BA
 275+ 93BA C9           	ret
 276+ 93BB
 277+ 93BB              ; ---------------------------------------------------------------------
 278+ 93BB              ;
 279+ 93BB              ;	10/02/24
 280+ 93BB              ;
 281+ 93BB              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 282+ 93BB              ;
 283+ 93BB              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 284+ 93BB
 285+ 93BB              Definicion_segun_tipo
 286+ 93BB
 287+ 93BB CD 2F 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 288+ 93BE 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 289+ 93C1 CD 3A 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 290+ 93C4 C9           	ret
 291+ 93C5
 292+ 93C5              ; ---------------------------------------------------------------------
 293+ 93C5              ;
 294+ 93C5              ;	6/7/24
 295+ 93C5
 296+ 93C5
 297+ 93C5              Store_Restore_cajas
 298+ 93C5
 299+ 93C5 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 300+ 93C9 CD 71 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 301+ 93CC CD 46 91     	call Incrementa_punteros_de_cajas
 302+ 93CF C9           	ret
 303+ 93D0
 304+ 93D0              ; ---------------------------------------------------------------------
 305+ 93D0              ;
 306+ 93D0              ;	23/6/24
 307+ 93D0              ;
 308+ 93D0              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 309+ 93D0              ;
 310+ 93D0              ;	MODIFY: HL
 311+ 93D0
 312+ 93D0              Limpiamos_bandeja_DRAW
 313+ 93D0
 314+ 93D0 ED 73 3D 8C  	ld (Stack),sp
 315+ 93D4 31 13 8C     	ld sp,Vel_left
 316+ 93D7
 317+ 93D7 AF           	xor a
 318+ 93D8 67           	ld h,a
 319+ 93D9 6F           	ld l,a
 320+ 93DA
 321+ 93DA E5           	push hl
 322+ 93DB E5           	push hl
 323+ 93DC E5           	push hl
 324+ 93DD E5           	push hl
 325+ 93DE E5           	push hl
 326+ 93DF E5           	push hl
 327+ 93E0 E5           	push hl
 328+ 93E1 E5           	push hl
 329+ 93E2 E5           	push hl
 330+ 93E3 E5           	push hl
 331+ 93E4 E5           	push hl
 332+ 93E5 E5           	push hl
 333+ 93E6 E5           	push hl
 334+ 93E7 E5           	push hl
 335+ 93E8 E5           	push hl
 336+ 93E9 E5           	push hl
 337+ 93EA E5           	push hl
 338+ 93EB E5           	push hl
 339+ 93EC
 340+ 93EC 33           	inc sp
 341+ 93ED
 342+ 93ED E5           	push hl
 343+ 93EE ED 7B 3D 8C  	ld sp,(Stack)
 344+ 93F2
 345+ 93F2 C9           	ret
 346+ 93F3
 347+ 93F3              ; ---------------------------------------------------------------------
 348+ 93F3              ;
 349+ 93F3              ;	24/03/24
 350+ 93F3
 351+ 93F3 2A F7 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 352+ 93F6 2B           	dec hl
 353+ 93F7 22 F7 8B     	ld (Contador_de_mov_masticados),hl
 354+ 93FA C9           	ret
 355+ 93FB
 356+ 93FB              ; ---------------------------------------------------------------------
 357+ 93FB              ;
 358+ 93FB              ;	7/11/24
 359+ 93FB
 360+ 93FB              Reinicia_entidad_maliciosa
 361+ 93FB
 362+ 93FB              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 363+ 93FB
 364+ 93FB CD DF 9E     	call Situa_en_contador_general_de_mov_masticados
 365+ 93FE CD EC 9E     	call Transfiere_datos_de_contadores
 366+ 9401
 367+ 9401              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 368+ 9401
 369+ 9401 3A EE 8B     	ld a,(Tipo)
 370+ 9404 CD BB 93     	call Definicion_segun_tipo
 371+ 9407
 372+ 9407 E5           	push hl
 373+ 9408 DD E1        	pop ix
 374+ 940A
 375+ 940A DD 6E 0B     	ld l,(ix+11)
 376+ 940D DD 66 0C     	ld h,(ix+12)
 377+ 9410
 378+ 9410 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 379+ 9413
 380+ 9413 CD 3A 90     	call Cargamos_registros_con_mov_masticado
 381+ 9416
 382+ 9416              ; Incrementa (Contador_de_vueltas)x2.
 383+ 9416              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 384+ 9416
 385+ 9416              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 386+ 9416              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 387+ 9416              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 388+ 9416              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 389+ 9416              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 390+ 9416
 391+ 9416 21 F1 8B     	ld hl,Contador_de_vueltas
 392+ 9419 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 393+ 941B
 394+ 941B 7E           	ld a,(hl)
 395+ 941C CB 2F        	sra a
 396+ 941E CB 2F        	sra a
 397+ 9420
 398+ 9420 32 F9 8B     	ld (Velocidad),a
 399+ 9423
 400+ 9423 3E 40        	ld a,$40
 401+ 9425 BE           	cp (hl)
 402+ 9426 C0           	ret nz
 403+ 9427
 404+ 9427              ; Límitador.
 405+ 9427
 406+ 9427              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 407+ 9427
 408+ 9427 CB 2E        	sra (hl)
 409+ 9429 21 F9 8B     	ld hl,Velocidad
 410+ 942C CB 2E        	sra (hl)
 411+ 942E
 412+ 942E C9           	ret
 413+ 942F
 414+ 942F              ;	------------------------------------------------------------------------------------
 415+ 942F              ;
 416+ 942F              ;	09/11/24
 417+ 942F              ;
 418+ 942F              ;	INPUTS:	A contiene el (Tipo) de entidad.
 419+ 942F              ;
 420+ 942F              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 421+ 942F              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 422+ 942F
 423+ 942F A7           Calcula_salto_en_BC and a
 424+ 9430 28 04        	jr z,1F
 425+ 9432 CB 27        	sla a
 426+ 9434 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 427+ 9436 4F           1 ld c,a
 428+ 9437 06 00        	ld b,0
 429+ 9439 C9           	ret
 430+ 943A
 431+ 943A              ; ------------------------------------------------------------------
 432+ 943A              ;
 433+ 943A              ;	19/1/24
 434+ 943A              ;
 435+ 943A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 436+ 943A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 437+ 943A
 438+ 943A A7           Situa_en_datos_de_definicion and a
 439+ 943B ED 4A        	adc hl,bc
 440+ 943D CD F8 90     	call Extrae_address
 441+ 9440 22 3B 8C         ld (Datos_de_entidad),hl
 442+ 9443 C9           	ret
 443+ 9444
 444+ 9444              ; ------------------------------------------------------------------
 445+ 9444
 446+ 9444              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 447+ 9444              ; 	inc de
 448+ 9444              ; 	inc de
 449+ 9444              ; 	ex de,hl
 450+ 9444              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 451+ 9444              ; 	ret
 452+ 9444
 453+ 9444              ; ----------------------------------------------------------------------------------------------------------
 454+ 9444              ;
 455+ 9444              ;	24/6/24
 456+ 9444              ;
 457+ 9444              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 458+ 9444              ;	_ de entidad.
 459+ 9444              ;
 460+ 9444              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 461+ 9444              ;
 462+ 9444              ;
 463+ 9444              ;	MODIFICA: HL,DE y BC
 464+ 9444
 465+ 9444
 466+ 9444              Definicion_de_entidad_a_bandeja_DRAW
 467+ 9444
 468+ 9444 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 469+ 9447 7E           	ld a,(hl) 									; Volcamos Tipo.
 470+ 9448 12           	ld (de),a
 471+ 9449 23           	inc hl
 472+ 944A              ;
 473+ 944A 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 474+ 944D 01 02 00     	ld bc,2
 475+ 9450 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 476+ 9452              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 477+ 9452 11 F1 8B     	ld de,Contador_de_vueltas
 478+ 9455 7E           	ld a,(hl)
 479+ 9456 12           	ld (de),a
 480+ 9457 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 481+ 9458
 482+ 9458 11 03 8C     	ld de,Indice_Sprite_der
 483+ 945B 01 04 00     	ld bc,4
 484+ 945E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 485+ 9460
 486+ 9460 11 0B 8C     	ld de,Posicion_inicio
 487+ 9463 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 488+ 9466 ED B0        	ldir 									; Vuelco (Frames_explosion).
 489+ 9468
 490+ 9468 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 946B 01 02 00     	ld bc,2
 492+ 946E ED B0        	ldir
 493+ 9470
 494+ 9470 C9           	ret
 495+ 9471
 496+ 9471              ; ----------------------------------------------------------------------------------------------------------
 497+ 9471              ;
 498+ 9471              ;	1/8/24
 499+ 9471              ;
 500+ 9471
 501+ 9471              Parametros_de_bandeja_DRAW_a_caja
 502+ 9471
 503+ 9471 21 EE 8B     	ld hl,Bandeja_DRAW
 504+ 9474 01 0C 00     	ld bc,12
 505+ 9477 ED B0        	ldir
 506+ 9479 C9           	ret
 507+ 947A
 508+ 947A              ;---------------------------------------------------------------------------------------------------------------
 509+ 947A              ;
 510+ 947A              ;	13/11/24
 511+ 947A              ;
 512+ 947A              ;	INICIALIZA (Numero_parcial_de_entidades).
 513+ 947A              ;
 514+ 947A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 515+ 947A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 516+ 947A
 517+ 947A              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 518+ 947A              ;			- Actualiza (Numero_de_entidades).
 519+ 947A
 520+ 947A              ;	MODIFICA: A y B.
 521+ 947A
 522+ 947A
 523+ 947A              Inicializa_Numero_parcial_de_entidades
 524+ 947A
 525+ 947A 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 526+ 947D FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 527+ 947F 38 0E        	jr c,1F
 528+ 9481 28 0C        	jr z,1F
 529+ 9483
 530+ 9483              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 531+ 9483              ; Actualizamos variables.
 532+ 9483
 533+ 9483 D6 06        	sub 6
 534+ 9485 32 36 8C     	ld (Numero_de_entidades),a
 535+ 9488 3E 06        	ld a,6
 536+ 948A 32 37 8C     	ld (Numero_parcial_de_entidades),a
 537+ 948D 47           	ld b,a
 538+ 948E C9           	ret
 539+ 948F
 540+ 948F              ; El nº total de entidades no supera el nº de cajas de entidades.
 541+ 948F              ; (Numero_de_entidades)="0".
 542+ 948F
 543+ 948F 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 544+ 9492 47           	ld b,a
 545+ 9493 AF           	xor a
 546+ 9494 32 36 8C     	ld (Numero_de_entidades),a
 547+ 9497 C9           	ret
 548+ 9498
# file closed: Rutinas_de_inicio_y_niveles.asm
2081  9498              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9498              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9498              ;
   3+ 9498              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9498              ;
   5+ 9498              ; *****************************************************************************************************************************************************************************************
   6+ 9498              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9498
   8+ 9498 7C           calcula_tercio ld a,h
   9+ 9499 E6 18        	and $18
  10+ 949B CB 2F        	sra a
  11+ 949D CB 2F        	sra a
  12+ 949F CB 2F        	sra a
  13+ 94A1 C9           	ret
  14+ 94A2
# file closed: calcula_tercio.asm
2082  94A2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94A2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94A2              ;
   3+ 94A2              ;
   4+ 94A2              ;	CLS.
   5+ 94A2              ;
   6+ 94A2              ;	Limpia la pantalla y define sus atributos.
   7+ 94A2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94A2              ;
   9+ 94A2              ;	COLORES: 0 ..... NEGRO
  10+ 94A2              ;    		 1 ..... AZUL
  11+ 94A2              ; 			 2 ..... ROJO
  12+ 94A2              ;			 3 ..... MAGENTA
  13+ 94A2              ; 			 4 ..... VERDE
  14+ 94A2              ; 			 5 ..... CIAN
  15+ 94A2              ;			 6 ..... AMARILLO
  16+ 94A2              ; 			 7 ..... BLANCO
  17+ 94A2              ;
  18+ 94A2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94A2              ;
  20+ 94A2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94A2
  22+ 94A2
  23+ 94A2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94A5 11 01 40     	LD DE,$4001
  25+ 94A8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94AB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94AD ED B0        	LDIR
  28+ 94AF 01 FF 02     	LD BC,767
  29+ 94B2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94B3 ED B0        	LDIR
  31+ 94B5 C9           	ret
  32+ 94B6
# file closed: Cls.asm
2083  94B6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94B6              ; ------------------------------------------------------------------------
   2+ 94B6              ;
   3+ 94B6              ;	30/1/24
   4+ 94B6              ;
   5+ 94B6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94B6              ;	Fila superior "0", Columna izquierda "0".
   7+ 94B6              ;
   8+ 94B6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94B6              ;
  10+ 94B6              ;	Modifica: A,BC y DE.
  11+ 94B6
  12+ 94B6              Genera_coordenadas
  13+ 94B6
  14+ 94B6 7D           	ld a,l
  15+ 94B7 E6 1F        	and $1f
  16+ 94B9 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  17+ 94BC
  18+ 94BC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  19+ 94BD FE 40        	cp $40
  20+ 94BF 38 1C        	jr c,4F
  21+ 94C1
  22+ 94C1 CD 98 94     	call calcula_tercio
  23+ 94C4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 94C5
  25+ 94C5 1E 00        	ld e,0
  26+ 94C7 7D           	ld a,l
  27+ 94C8 E6 E0        	and $e0
  28+ 94CA 28 01        	jr z,1F
  29+ 94CC 04           	inc b
  30+ 94CD
  31+ 94CD 04           1 inc b
  32+ 94CE 05           	dec b
  33+ 94CF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 94D1              ;														; _ , salimos.
  35+ 94D1 1C           3 inc e
  36+ 94D2 D6 20        	sub 32
  37+ 94D4 20 FB        	jr nz,3B
  38+ 94D6 10 F5        	djnz 1B
  39+ 94D8
  40+ 94D8 7B           2 ld a,e
  41+ 94D9 32 F0 8B     	ld (Coordenada_y),a
  42+ 94DC C9           	ret
  43+ 94DD
  44+ 94DD AF           4 xor a
  45+ 94DE 32 F0 8B     	ld (Coordenada_y),a
  46+ 94E1 C9           	ret
  47+ 94E2
# file closed: Genera_coordenadas.asm
2084  94E2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94E2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94E2              ;
   3+ 94E2              ;	20/09/24
   4+ 94E2              ;
   5+ 94E2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94E2              ;   DE contiene Puntero_objeto.
   7+ 94E2              ;   IX contiene el Puntero de impresión.
   8+ 94E2
   9+ 94E2              Genera_datos_de_impresion
  10+ 94E2
  11+ 94E2 ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94E6
  13+ 94E6 31 F5 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94E9 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94EB
  16+ 94EB 2A 5F 8C         ld hl,(Scanlines_album_SP)
  17+ 94EE
  18+ 94EE 3E 05            ld a,5
  19+ 94F0 85               add l
  20+ 94F1 6F               ld l,a
  21+ 94F2
  22+ 94F2 F9               ld sp,hl
  23+ 94F3 22 5F 8C         ld (Scanlines_album_SP),hl
  24+ 94F6
  25+ 94F6 21 00 00         ld hl,0
  26+ 94F9
  27+ 94F9 DD E5            push ix
  28+ 94FB 3B               dec sp
  29+ 94FC ED 7A            adc hl,sp
  30+ 94FE D5               push de
  31+ 94FF
  32+ 94FF              ; Recuperamos SP.
  33+ 94FF
  34+ 94FF ED 7B 3D 8C      ld sp,(Stack)
  35+ 9503
  36+ 9503 E5               push hl
  37+ 9504 F1               pop af
  38+ 9505 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9506
  40+ 9506              ; Tenemos el encabezado listo.
  41+ 9506              ; Preparamos registros para generar los scanlines.
  42+ 9506
  43+ 9506 DD E5            push ix
  44+ 9508 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9509
  46+ 9509 ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  47+ 950D
  48+ 950D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 950D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 950D
  51+ 950D 7C               ld a,h
  52+ 950E FE 50            cp $50
  53+ 9510 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9512
  55+ 9512 20 05            jr nz,2F
  56+ 9514
  57+ 9514 7D               ld a,l
  58+ 9515 FE E0            cp $e0
  59+ 9517 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9519
  61+ 9519 7D           2 ld a,l
  62+ 951A FE C0            cp $c0
  63+ 951C D2 B2 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 951F
  65+ 951F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 951F
  67+ 951F CD B0 99         call NextScan
  68+ 9522 EB               ex de,hl
  69+ 9523
  70+ 9523 73               ld (hl),e
  71+ 9524 23               inc hl
  72+ 9525 72               ld (hl),d
  73+ 9526 23               inc hl
  74+ 9527
  75+ 9527 EB               ex de,hl
  76+ 9528
  77+ 9528 CD B0 99         call NextScan
  78+ 952B EB               ex de,hl
  79+ 952C
  80+ 952C 73               ld (hl),e
  81+ 952D 23               inc hl
  82+ 952E 72               ld (hl),d
  83+ 952F 23               inc hl
  84+ 9530
  85+ 9530 EB               ex de,hl
  86+ 9531
  87+ 9531 CD B0 99         call NextScan
  88+ 9534 EB               ex de,hl
  89+ 9535
  90+ 9535 73               ld (hl),e
  91+ 9536 23               inc hl
  92+ 9537 72               ld (hl),d
  93+ 9538 23               inc hl
  94+ 9539
  95+ 9539 EB               ex de,hl
  96+ 953A
  97+ 953A CD B0 99         call NextScan
  98+ 953D EB               ex de,hl
  99+ 953E
 100+ 953E 73               ld (hl),e
 101+ 953F 23               inc hl
 102+ 9540 72               ld (hl),d
 103+ 9541 23               inc hl
 104+ 9542
 105+ 9542 EB               ex de,hl
 106+ 9543
 107+ 9543 CD B0 99         call NextScan
 108+ 9546 EB               ex de,hl
 109+ 9547
 110+ 9547 73               ld (hl),e
 111+ 9548 23               inc hl
 112+ 9549 72               ld (hl),d
 113+ 954A 23               inc hl
 114+ 954B
 115+ 954B EB               ex de,hl
 116+ 954C
 117+ 954C CD B0 99         call NextScan
 118+ 954F EB               ex de,hl
 119+ 9550
 120+ 9550 73               ld (hl),e
 121+ 9551 23               inc hl
 122+ 9552 72               ld (hl),d
 123+ 9553 23               inc hl
 124+ 9554
 125+ 9554 EB               ex de,hl
 126+ 9555
 127+ 9555 CD B0 99         call NextScan
 128+ 9558 EB               ex de,hl
 129+ 9559
 130+ 9559 73               ld (hl),e
 131+ 955A 23               inc hl
 132+ 955B 72               ld (hl),d
 133+ 955C 23               inc hl
 134+ 955D
 135+ 955D EB               ex de,hl
 136+ 955E
 137+ 955E CD B0 99         call NextScan
 138+ 9561 EB               ex de,hl
 139+ 9562
 140+ 9562 73               ld (hl),e
 141+ 9563 23               inc hl
 142+ 9564 72               ld (hl),d
 143+ 9565 23               inc hl
 144+ 9566
 145+ 9566 EB               ex de,hl
 146+ 9567
 147+ 9567 CD B0 99         call NextScan
 148+ 956A EB               ex de,hl
 149+ 956B
 150+ 956B 73               ld (hl),e
 151+ 956C 23               inc hl
 152+ 956D 72               ld (hl),d
 153+ 956E 23               inc hl
 154+ 956F
 155+ 956F EB               ex de,hl
 156+ 9570
 157+ 9570 CD B0 99         call NextScan
 158+ 9573 EB               ex de,hl
 159+ 9574
 160+ 9574 73               ld (hl),e
 161+ 9575 23               inc hl
 162+ 9576 72               ld (hl),d
 163+ 9577 23               inc hl
 164+ 9578
 165+ 9578 EB               ex de,hl
 166+ 9579
 167+ 9579 CD B0 99         call NextScan
 168+ 957C EB               ex de,hl
 169+ 957D
 170+ 957D 73               ld (hl),e
 171+ 957E 23               inc hl
 172+ 957F 72               ld (hl),d
 173+ 9580 23               inc hl
 174+ 9581
 175+ 9581 EB               ex de,hl
 176+ 9582
 177+ 9582 CD B0 99         call NextScan
 178+ 9585 EB               ex de,hl
 179+ 9586
 180+ 9586 73               ld (hl),e
 181+ 9587 23               inc hl
 182+ 9588 72               ld (hl),d
 183+ 9589 23               inc hl
 184+ 958A
 185+ 958A EB               ex de,hl
 186+ 958B
 187+ 958B CD B0 99         call NextScan
 188+ 958E EB               ex de,hl
 189+ 958F
 190+ 958F 73               ld (hl),e
 191+ 9590 23               inc hl
 192+ 9591 72               ld (hl),d
 193+ 9592 23               inc hl
 194+ 9593
 195+ 9593 EB               ex de,hl
 196+ 9594
 197+ 9594 CD B0 99         call NextScan
 198+ 9597 EB               ex de,hl
 199+ 9598
 200+ 9598 73               ld (hl),e
 201+ 9599 23               inc hl
 202+ 959A 72               ld (hl),d
 203+ 959B 23               inc hl
 204+ 959C
 205+ 959C EB               ex de,hl
 206+ 959D
 207+ 959D CD B0 99         call NextScan
 208+ 95A0 EB               ex de,hl
 209+ 95A1
 210+ 95A1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95A1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95A1              ;   _ generar sus scanlines.
 213+ 95A1
 214+ 95A1              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95A1
 216+ 95A1 73               ld (hl),e
 217+ 95A2 23               inc hl
 218+ 95A3 72               ld (hl),d
 219+ 95A4 23               inc hl
 220+ 95A5
 221+ 95A5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95A5
 223+ 95A5 22 5F 8C         ld (Scanlines_album_SP),hl
 224+ 95A8
 225+ 95A8 EB               ex de,hl
 226+ 95A9
 227+ 95A9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95A9
 229+ 95A9              ;    call NextScan
 230+ 95A9              ;    call NextScan
 231+ 95A9
 232+ 95A9 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95AC
 234+ 95AC              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95AC
 236+ 95AC 08               ex af,af
 237+ 95AD
 238+ 95AD F5               push af
 239+ 95AE E1               pop hl
 240+ 95AF
 241+ 95AF 36 10            ld (hl),16
 242+ 95B1
 243+ 95B1 C9               ret
 244+ 95B2
 245+ 95B2              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95B2
 247+ 95B2              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95B2
 249+ 95B2 3E 57            ld a,$57
 250+ 95B4 94               sub h
 251+ 95B5 47               ld b,a
 252+ 95B6
 253+ 95B6 3E DF            ld a,$df
 254+ 95B8 BD               cp l
 255+ 95B9 38 04            jr c,1F
 256+ 95BB
 257+ 95BB 3E 08            ld a,8
 258+ 95BD 80               add b
 259+ 95BE 47               ld b,a
 260+ 95BF
 261+ 95BF              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95BF              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95BF
 264+ 95BF 48           1 ld c,b
 265+ 95C0 0C               inc c
 266+ 95C1
 267+ 95C1 04               inc b
 268+ 95C2 05               dec b
 269+ 95C3 20 02            jr nz,3F
 270+ 95C5
 271+ 95C5 18 0B            jr 6F
 272+ 95C7
 273+ 95C7 CD B0 99     3 call NextScan
 274+ 95CA EB               ex de,hl
 275+ 95CB
 276+ 95CB 73               ld (hl),e
 277+ 95CC 23               inc hl
 278+ 95CD 72               ld (hl),d
 279+ 95CE 23               inc hl
 280+ 95CF
 281+ 95CF EB               ex de,hl
 282+ 95D0 10 F5            djnz 3B
 283+ 95D2
 284+ 95D2 ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 285+ 95D6
 286+ 95D6 08           5 ex af,af
 287+ 95D7 F5               push af
 288+ 95D8 E1               pop hl
 289+ 95D9
 290+ 95D9 71               ld (hl),c
 291+ 95DA
 292+ 95DA C9               ret
 293+ 95DB
# file closed: Genera_datos_de_impresion.asm
2085  95DB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95DB              ; -----------------------------------------------------------------------------
   2+ 95DB              ;
   3+ 95DB              ;   11/03/24
   4+ 95DB              ;
   5+ 95DB
   6+ 95DB              Pinta_Sprites
   7+ 95DB
   8+ 95DB              ;    ld hl,(Scanlines_album_SP)
   9+ 95DB              ;    call Extrae_address
  10+ 95DB
  11+ 95DB              ;    inc h
  12+ 95DB              ;    dec h
  13+ 95DB              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95DB
  15+ 95DB ED 73 3D 8C      ld (Stack),sp
  16+ 95DF
  17+ 95DF EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95E0              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95E0 2C               inc l
  20+ 95E1 2C               inc l
  21+ 95E2
  22+ 95E2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95E3
  24+ 95E3 2C               inc l
  25+ 95E4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95E5
  27+ 95E5              ;   Seleccionamos rutina de impresión:
  28+ 95E5
  29+ 95E5 3E 10            ld a,16
  30+ 95E7 B8               cp b
  31+ 95E8 C2 E4 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95EB
  33+ 95EB              ;   Rutinas:
  34+ 95EB
  35+ 95EB              Pinta_rapido    ;   1520 t/states.
  36+ 95EB
  37+ 95EB E1               pop hl
  38+ 95EC
  39+ 95EC 1A               ld a,(de)
  40+ 95ED AE               xor (hl)
  41+ 95EE 77               ld (hl),a
  42+ 95EF 2C               inc l
  43+ 95F0 1C               inc e
  44+ 95F1 1A               ld a,(de)
  45+ 95F2 AE               xor (hl)
  46+ 95F3 77               ld (hl),a
  47+ 95F4 2C               inc l
  48+ 95F5 1C               inc e
  49+ 95F6 1A               ld a,(de)
  50+ 95F7 AE               xor (hl)
  51+ 95F8 77               ld (hl),a
  52+ 95F9 13               inc de
  53+ 95FA
  54+ 95FA E1               pop hl
  55+ 95FB
  56+ 95FB 1A               ld a,(de)
  57+ 95FC AE               xor (hl)
  58+ 95FD 77               ld (hl),a
  59+ 95FE 2C               inc l
  60+ 95FF 1C               inc e
  61+ 9600 1A               ld a,(de)
  62+ 9601 AE               xor (hl)
  63+ 9602 77               ld (hl),a
  64+ 9603 2C               inc l
  65+ 9604 1C               inc e
  66+ 9605 1A               ld a,(de)
  67+ 9606 AE               xor (hl)
  68+ 9607 77               ld (hl),a
  69+ 9608 13               inc de
  70+ 9609
  71+ 9609 E1               pop hl
  72+ 960A
  73+ 960A 1A               ld a,(de)
  74+ 960B AE               xor (hl)
  75+ 960C 77               ld (hl),a
  76+ 960D 2C               inc l
  77+ 960E 1C               inc e
  78+ 960F 1A               ld a,(de)
  79+ 9610 AE               xor (hl)
  80+ 9611 77               ld (hl),a
  81+ 9612 2C               inc l
  82+ 9613 1C               inc e
  83+ 9614 1A               ld a,(de)
  84+ 9615 AE               xor (hl)
  85+ 9616 77               ld (hl),a
  86+ 9617 13               inc de
  87+ 9618
  88+ 9618 E1               pop hl
  89+ 9619
  90+ 9619 1A               ld a,(de)
  91+ 961A AE               xor (hl)
  92+ 961B 77               ld (hl),a
  93+ 961C 2C               inc l
  94+ 961D 1C               inc e
  95+ 961E 1A               ld a,(de)
  96+ 961F AE               xor (hl)
  97+ 9620 77               ld (hl),a
  98+ 9621 2C               inc l
  99+ 9622 1C               inc e
 100+ 9623 1A               ld a,(de)
 101+ 9624 AE               xor (hl)
 102+ 9625 77               ld (hl),a
 103+ 9626 13               inc de
 104+ 9627
 105+ 9627 E1               pop hl
 106+ 9628
 107+ 9628 1A               ld a,(de)
 108+ 9629 AE               xor (hl)
 109+ 962A 77               ld (hl),a
 110+ 962B 2C               inc l
 111+ 962C 1C               inc e
 112+ 962D 1A               ld a,(de)
 113+ 962E AE               xor (hl)
 114+ 962F 77               ld (hl),a
 115+ 9630 2C               inc l
 116+ 9631 1C               inc e
 117+ 9632 1A               ld a,(de)
 118+ 9633 AE               xor (hl)
 119+ 9634 77               ld (hl),a
 120+ 9635 13               inc de
 121+ 9636
 122+ 9636 E1               pop hl
 123+ 9637
 124+ 9637 1A               ld a,(de)
 125+ 9638 AE               xor (hl)
 126+ 9639 77               ld (hl),a
 127+ 963A 2C               inc l
 128+ 963B 1C               inc e
 129+ 963C 1A               ld a,(de)
 130+ 963D AE               xor (hl)
 131+ 963E 77               ld (hl),a
 132+ 963F 2C               inc l
 133+ 9640 1C               inc e
 134+ 9641 1A               ld a,(de)
 135+ 9642 AE               xor (hl)
 136+ 9643 77               ld (hl),a
 137+ 9644 13               inc de
 138+ 9645
 139+ 9645 E1               pop hl
 140+ 9646
 141+ 9646 1A               ld a,(de)
 142+ 9647 AE               xor (hl)
 143+ 9648 77               ld (hl),a
 144+ 9649 2C               inc l
 145+ 964A 1C               inc e
 146+ 964B 1A               ld a,(de)
 147+ 964C AE               xor (hl)
 148+ 964D 77               ld (hl),a
 149+ 964E 2C               inc l
 150+ 964F 1C               inc e
 151+ 9650 1A               ld a,(de)
 152+ 9651 AE               xor (hl)
 153+ 9652 77               ld (hl),a
 154+ 9653 13               inc de
 155+ 9654
 156+ 9654 E1               pop hl
 157+ 9655
 158+ 9655 1A               ld a,(de)
 159+ 9656 AE               xor (hl)
 160+ 9657 77               ld (hl),a
 161+ 9658 2C               inc l
 162+ 9659 1C               inc e
 163+ 965A 1A               ld a,(de)
 164+ 965B AE               xor (hl)
 165+ 965C 77               ld (hl),a
 166+ 965D 2C               inc l
 167+ 965E 1C               inc e
 168+ 965F 1A               ld a,(de)
 169+ 9660 AE               xor (hl)
 170+ 9661 77               ld (hl),a
 171+ 9662 13               inc de
 172+ 9663
 173+ 9663 E1               pop hl
 174+ 9664
 175+ 9664 1A               ld a,(de)
 176+ 9665 AE               xor (hl)
 177+ 9666 77               ld (hl),a
 178+ 9667 2C               inc l
 179+ 9668 1C               inc e
 180+ 9669 1A               ld a,(de)
 181+ 966A AE               xor (hl)
 182+ 966B 77               ld (hl),a
 183+ 966C 2C               inc l
 184+ 966D 1C               inc e
 185+ 966E 1A               ld a,(de)
 186+ 966F AE               xor (hl)
 187+ 9670 77               ld (hl),a
 188+ 9671 13               inc de
 189+ 9672
 190+ 9672 E1               pop hl
 191+ 9673
 192+ 9673 1A               ld a,(de)
 193+ 9674 AE               xor (hl)
 194+ 9675 77               ld (hl),a
 195+ 9676 2C               inc l
 196+ 9677 1C               inc e
 197+ 9678 1A               ld a,(de)
 198+ 9679 AE               xor (hl)
 199+ 967A 77               ld (hl),a
 200+ 967B 2C               inc l
 201+ 967C 1C               inc e
 202+ 967D 1A               ld a,(de)
 203+ 967E AE               xor (hl)
 204+ 967F 77               ld (hl),a
 205+ 9680 13               inc de
 206+ 9681
 207+ 9681 E1               pop hl
 208+ 9682
 209+ 9682 1A               ld a,(de)
 210+ 9683 AE               xor (hl)
 211+ 9684 77               ld (hl),a
 212+ 9685 2C               inc l
 213+ 9686 1C               inc e
 214+ 9687 1A               ld a,(de)
 215+ 9688 AE               xor (hl)
 216+ 9689 77               ld (hl),a
 217+ 968A 2C               inc l
 218+ 968B 1C               inc e
 219+ 968C 1A               ld a,(de)
 220+ 968D AE               xor (hl)
 221+ 968E 77               ld (hl),a
 222+ 968F 13               inc de
 223+ 9690
 224+ 9690 E1               pop hl
 225+ 9691
 226+ 9691 1A               ld a,(de)
 227+ 9692 AE               xor (hl)
 228+ 9693 77               ld (hl),a
 229+ 9694 2C               inc l
 230+ 9695 1C               inc e
 231+ 9696 1A               ld a,(de)
 232+ 9697 AE               xor (hl)
 233+ 9698 77               ld (hl),a
 234+ 9699 2C               inc l
 235+ 969A 1C               inc e
 236+ 969B 1A               ld a,(de)
 237+ 969C AE               xor (hl)
 238+ 969D 77               ld (hl),a
 239+ 969E 13               inc de
 240+ 969F
 241+ 969F E1               pop hl
 242+ 96A0
 243+ 96A0 1A               ld a,(de)
 244+ 96A1 AE               xor (hl)
 245+ 96A2 77               ld (hl),a
 246+ 96A3 2C               inc l
 247+ 96A4 1C               inc e
 248+ 96A5 1A               ld a,(de)
 249+ 96A6 AE               xor (hl)
 250+ 96A7 77               ld (hl),a
 251+ 96A8 2C               inc l
 252+ 96A9 1C               inc e
 253+ 96AA 1A               ld a,(de)
 254+ 96AB AE               xor (hl)
 255+ 96AC 77               ld (hl),a
 256+ 96AD 13               inc de
 257+ 96AE
 258+ 96AE E1               pop hl
 259+ 96AF
 260+ 96AF 1A               ld a,(de)
 261+ 96B0 AE               xor (hl)
 262+ 96B1 77               ld (hl),a
 263+ 96B2 2C               inc l
 264+ 96B3 1C               inc e
 265+ 96B4 1A               ld a,(de)
 266+ 96B5 AE               xor (hl)
 267+ 96B6 77               ld (hl),a
 268+ 96B7 2C               inc l
 269+ 96B8 1C               inc e
 270+ 96B9 1A               ld a,(de)
 271+ 96BA AE               xor (hl)
 272+ 96BB 77               ld (hl),a
 273+ 96BC 13               inc de
 274+ 96BD
 275+ 96BD E1               pop hl
 276+ 96BE
 277+ 96BE 1A               ld a,(de)
 278+ 96BF AE               xor (hl)
 279+ 96C0 77               ld (hl),a
 280+ 96C1 2C               inc l
 281+ 96C2 1C               inc e
 282+ 96C3 1A               ld a,(de)
 283+ 96C4 AE               xor (hl)
 284+ 96C5 77               ld (hl),a
 285+ 96C6 2C               inc l
 286+ 96C7 1C               inc e
 287+ 96C8 1A               ld a,(de)
 288+ 96C9 AE               xor (hl)
 289+ 96CA 77               ld (hl),a
 290+ 96CB 13               inc de
 291+ 96CC
 292+ 96CC E1               pop hl
 293+ 96CD
 294+ 96CD 1A               ld a,(de)
 295+ 96CE AE               xor (hl)
 296+ 96CF 77               ld (hl),a
 297+ 96D0 2C               inc l
 298+ 96D1 1C               inc e
 299+ 96D2 1A               ld a,(de)
 300+ 96D3 AE               xor (hl)
 301+ 96D4 77               ld (hl),a
 302+ 96D5 2C               inc l
 303+ 96D6 1C               inc e
 304+ 96D7 1A               ld a,(de)
 305+ 96D8 AE               xor (hl)
 306+ 96D9 77               ld (hl),a
 307+ 96DA 13               inc de
 308+ 96DB
 309+ 96DB ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 96DF ED 7B 3D 8C      ld sp,(Stack)
 311+ 96E3 C9               ret
 312+ 96E4
 313+ 96E4              Pinta_lento
 314+ 96E4
 315+ 96E4 E1           1 pop hl
 316+ 96E5
 317+ 96E5 1A               ld a,(de)
 318+ 96E6 AE               xor (hl)
 319+ 96E7 77               ld (hl),a
 320+ 96E8 2C               inc l
 321+ 96E9 1C               inc e
 322+ 96EA 1A               ld a,(de)
 323+ 96EB AE               xor (hl)
 324+ 96EC 77               ld (hl),a
 325+ 96ED 2C               inc l
 326+ 96EE 1C               inc e
 327+ 96EF 1A               ld a,(de)
 328+ 96F0 AE               xor (hl)
 329+ 96F1 77               ld (hl),a
 330+ 96F2 13               inc de
 331+ 96F3
 332+ 96F3 10 EF            djnz 1B
 333+ 96F5
 334+ 96F5 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 96F9 ED 7B 3D 8C      ld sp,(Stack)
 336+ 96FD C9               ret
# file closed: Pinta_Sprites.asm
2086  96FE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96FE              ; ******************************************************************************************************************************************************************************************
   2+ 96FE              ;
   3+ 96FE              ; 26/06/23
   4+ 96FE              ;
   5+ 96FE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96FE
   7+ 96FE              Draw
   8+ 96FE
   9+ 96FE CD A4 99     	call Prepara_draw
  10+ 9701 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9702 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9703 28 05        	jr z,2F
  13+ 9705
  14+ 9705 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9708 18 0C        	jr 1F
  16+ 970A
  17+ 970A 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 970D 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9710 CD 9C 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9713              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9713
  22+ 9713 CD 43 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9716
  24+ 9716 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 9719 CB 6F        	bit 5,a
  26+ 971B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 971D
  28+ 971D CD 32 97     	call Comprueba_limite_horizontal
  29+ 9720 CD C2 97     	call Comprueba_limite_vertical
  30+ 9723
  31+ 9723              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9723              ; -----------------------
  33+ 9723              ; -----------------------
  34+ 9723              ; -----------------------
  35+ 9723
  36+ 9723 CD 18 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9726 CD 4F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9729
  39+ 9729 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 972C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 972E 32 FB 8B     	ld (Ctrl_0),a
  42+ 9731
  43+ 9731 C9           	ret
  44+ 9732
  45+ 9732              ; *******************************************************************************************************************************************************************************************
  46+ 9732              ;	21/01/23
  47+ 9732              ;
  48+ 9732              ; 	Comprueba_limite_horizontal.
  49+ 9732              ;
  50+ 9732              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9732              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9732              ;
  53+ 9732              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9732              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9732              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9732              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9732
  58+ 9732
  59+ 9732
  60+ 9732 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9735 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9737 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9739 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 973B 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 973E 18 09            jr 6F
  66+ 9740 CB 5F        1 bit 3,a
  67+ 9742 28 0A            jr z,2F
  68+ 9744 E6 F7            and $f7
  69+ 9746 32 FB 8B         ld (Ctrl_0),a
  70+ 9749 CD 9C 98     6 call Inicializacion
  71+ 974C 18 5B            jr 5F
  72+ 974E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 974F
  74+ 974F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 974F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 974F
  77+ 974F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9750 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9753 CD 98 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9756 67           	ld h,a
  81+ 9757 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9758 CD 98 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 975B 67           	ld h,a
  84+ 975C A7           	and a
  85+ 975D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 975F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9760 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 9763 FE 02        	cp 2
  89+ 9765 38 1E        	jr c,3F
  90+ 9767 28 1C        	jr z,3F
  91+ 9769 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 976A 28 23            jr z,7F
  93+ 976C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 976E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9770 E1           	pop hl
  96+ 9771
  97+ 9771              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9771              ; _para indicar con E="2" en caso necesario.
  99+ 9771
 100+ 9771 E5               push hl
 101+ 9772 C5               push bc
 102+ 9773 CD 98 94     	call calcula_tercio
 103+ 9776 FE 01        	cp 1
 104+ 9778 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 977A CD AA 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 977D 28 26            jr z,9F
 107+ 977F 38 24            jr c,9F
 108+ 9781 1E 00        11 ld e,0
 109+ 9783 18 22            jr 8F
 110+ 9785 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9786 28 07        	jr z, 7F
 112+ 9788 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 978A 1E 00         	ld e,0
 114+ 978C E1           	pop hl
 115+ 978D 18 04        	jr 4F
 116+ 978F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9791 18 15            jr 10F
 118+ 9793
 119+ 9793              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9793              ; _para indicar con E="2" en caso necesario.
 121+ 9793
 122+ 9793 E5           4 push hl
 123+ 9794 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9795 CD 98 94     	call calcula_tercio
 125+ 9798 FE 01        	cp 1
 126+ 979A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 979C CD AA 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 979F 28 04            jr z,9F
 129+ 97A1 30 02            jr nc,9F
 130+ 97A3 18 02        	jr 8F
 131+ 97A5 1E 02        9 ld e,2
 132+ 97A7 C1           8 pop bc
 133+ 97A8 E1           10 pop hl
 134+ 97A9 C9           5 ret
 135+ 97AA
 136+ 97AA              ; --------------------
 137+ 97AA              ;
 138+ 97AA              ; 25/08/22
 139+ 97AA
 140+ 97AA CD 98 94     Comprueba_centro call calcula_tercio
 141+ 97AD 67               ld h,a
 142+ 97AE 08           	ex af,af
 143+ 97AF FE 02        	cp 2
 144+ 97B1 38 07        	jr c,1F
 145+ 97B3 28 05        	jr z,1F
 146+ 97B5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97B8 18 03        	jr 2F
 148+ 97BA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97BD 08           2 ex af,af
 150+ 97BE A7               and a
 151+ 97BF ED 42            sbc hl,bc
 152+ 97C1 C9               ret
 153+ 97C2
 154+ 97C2              ; *********************************************************************************************************************************************************************************************
 155+ 97C2              ;
 156+ 97C2              ;   16/8/22
 157+ 97C2              ;
 158+ 97C2              ;	Comprueba_limite_vertical
 159+ 97C2              ;
 160+ 97C2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C2              ;
 163+ 97C2
 164+ 97C2 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97C5 7D           	ld a,l
 166+ 97C6 E6 1F        	and $1F
 167+ 97C8 57           	ld d,a
 168+ 97C9 3A 11 8C     	ld a,(Limite_vertical)
 169+ 97CC BA           	cp d 											; Límite - Posición.
 170+ 97CD 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97CE 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D1 CB 47        	bit 0,a
 173+ 97D3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97D5
 175+ 97D5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97D5
 177+ 97D5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97D6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97D8
 180+ 97D8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97D8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97D8
 183+ 97D8 3A EF 8B         ld a,(Coordenada_X)
 184+ 97DB 16 0F            ld d,Centro_izquierda
 185+ 97DD A7               and a
 186+ 97DE 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97DF 28 1E            jr z,3F
 188+ 97E1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97E3              ;                                                    ; _salimos sin modificar nada.
 190+ 97E3 18 0E            jr 2F
 191+ 97E5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97E6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97E8
 194+ 97E8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97E8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97E8
 197+ 97E8 3A EF 8B         ld a,(Coordenada_X)
 198+ 97EB 16 10            ld d,Centro_derecha
 199+ 97ED A7               and a
 200+ 97EE 92               sub d
 201+ 97EF 28 0E            jr z,3F
 202+ 97F1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97F3              ;                                                    ; _salimos sin modificar nada.
 204+ 97F3 CB 43        2 bit 0,e
 205+ 97F5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97F7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97F8 CD 8C 98         call Modificaccionne
 208+ 97FB C1           	pop bc
 209+ 97FC CD 9C 98         call Inicializacion
 210+ 97FF C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9800
 212+ 9800              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9800
 214+ 9800 C5           4 push bc
 215+ 9801 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9804 0A           	ld a,(bc)
 217+ 9805 3D           	dec a
 218+ 9806 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9807 7D           	ld a,l
 220+ 9808 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9809 CB 47        	bit 0,a
 222+ 980B 28 03        	jr z,5F
 223+ 980D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 980E 18 2E        	jr 7F
 225+ 9810
 226+ 9810              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9810
 228+ 9810 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9811 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9812 3A FB 8B     	ld a,(Ctrl_0)
 231+ 9815 CB 4F        	bit 1,a
 232+ 9817 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9819 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 981A
 235+ 981A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 981A
 237+ 981A 1C               inc e
 238+ 981B 1D               dec e
 239+ 981C 20 07            jr nz,12F
 240+ 981E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 981F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9820 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9823 18 44        13 jr 9F
 244+ 9825 CB 43        12 bit 0,e
 245+ 9827 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9829              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9829 C1           	pop bc
 248+ 982A 18 D3        	jr 3B
 249+ 982C 80           14 add b
 250+ 982D 6F               ld l,a
 251+ 982E 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9831 CD 8C 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9834 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9836 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9838 32 FB 8B         ld (Ctrl_0),a
 256+ 983B F1           	pop af
 257+ 983C 18 2B        	jr 9F
 258+ 983E
 259+ 983E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 983E
 261+ 983E F5           7 push af
 262+ 983F 3A FB 8B     	ld a,(Ctrl_0)
 263+ 9842 CB 47        	bit 0,a
 264+ 9844 20 1D        	jr nz,8F
 265+ 9846 F1           	pop af
 266+ 9847
 267+ 9847              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9847
 269+ 9847 1C           	inc e
 270+ 9848 1D               dec e
 271+ 9849 20 07            jr nz,10F
 272+ 984B 90           	sub b
 273+ 984C 6F               ld l,a
 274+ 984D 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9850 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9852              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9852 CB 43        10 bit 0,e
 278+ 9854 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9856              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9856 C1           	pop bc
 281+ 9857 18 A6        	jr 3B
 282+ 9859 90           16 sub b
 283+ 985A 6F               ld l,a
 284+ 985B 22 FE 8B     	ld (Posicion_actual),hl
 285+ 985E CD 8C 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9861 18 06            jr 9F
 287+ 9863 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9865 32 FB 8B         ld (Ctrl_0),a
 289+ 9868 F1           	pop af
 290+ 9869 C1           9 pop bc
 291+ 986A 1E 00        	ld e,0
 292+ 986C CD 9C 98         call Inicializacion
 293+ 986F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9870 08           	ex af,af
 295+ 9871 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9872 18 8B            jr 3B
 297+ 9874
 298+ 9874              ; --------------------
 299+ 9874
 300+ 9874 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9876 CD BF 99     1 call PreviousScan
 302+ 9879 10 FB            djnz 1B
 303+ 987B 22 FE 8B     	ld (Posicion_actual),hl
 304+ 987E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 987F C9           	ret
 306+ 9880
 307+ 9880              ; --------------------
 308+ 9880
 309+ 9880 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9882 CD B0 99     1 call NextScan
 311+ 9885 10 FB            djnz 1B
 312+ 9887 22 FE 8B     	ld (Posicion_actual),hl
 313+ 988A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 988B C9           	ret
 315+ 988C
 316+ 988C              ; --------------------
 317+ 988C              ;
 318+ 988C              ;	22/01/23
 319+ 988C              ;
 320+ 988C              ;	E="1". Hemos cambiado de cuadrante.
 321+ 988C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 988C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 988C
 324+ 988C
 325+ 988C              Modificaccionne
 326+ 988C
 327+ 988C 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 988F FE 02        	cp 2
 329+ 9891 CC 74 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9894 DC 74 98         call c,Modifica_Pos_actual
 331+ 9897 C8           	ret z
 332+ 9898 CD 80 98         call Modifica_Pos_actual2
 333+ 989B C9               ret
 334+ 989C
 335+ 989C              ; *************************************************************************************************************************************************************************************************
 336+ 989C              ;
 337+ 989C              ;	13/8/22
 338+ 989C              ;
 339+ 989C              ;	Inicializacion
 340+ 989C              ;
 341+ 989C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 989C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 989C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 989C              ;
 345+ 989C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 989C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 989C              ;	_ desaparece/aparece.
 348+ 989C
 349+ 989C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 989C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 989C              ;
 352+ 989C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 989C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 989C              ; 		   [E] ="0"
 355+ 989C
 356+ 989C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 989C
 358+ 989C CD 98 94     Inicializacion call calcula_tercio
 359+ 989F 28 36        	jr z,primit
 360+ 98A1 E6 02        	and 2
 361+ 98A3 20 07        	jr nz,segmit
 362+ 98A5 7D           	ld a,l
 363+ 98A6 FE 7F        	cp $7f
 364+ 98A8 38 2D        	jr c,primit
 365+ 98AA 28 2B        	jr z,primit
 366+ 98AC CD 12 99     segmit call column
 367+ 98AF 38 13        	jr c,tercuad
 368+ 98B1 3E 04        cuarcuad ld a,4
 369+ 98B3 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98B6 21 20 48     	ld hl,$4820
 371+ 98B9 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98BC 21 11 8C     	ld hl,Limite_vertical
 373+ 98BF 36 0D        	ld (hl),$0d
 374+ 98C1 08           	ex af,af
 375+ 98C2 18 3C        	jr 1F
 376+ 98C4              tercuad
 377+ 98C4 3E 03        	ld a,3
 378+ 98C6 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98C9 21 20 48     	ld hl,$4820
 380+ 98CC 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 98CF 21 11 8C     	ld hl,Limite_vertical
 382+ 98D2 36 12        	ld (hl),$12
 383+ 98D4 08           	ex af,af
 384+ 98D5 18 29        	jr 1F
 385+ 98D7 CD 12 99     primit call column
 386+ 98DA 38 13        	jr c, primcuad
 387+ 98DC              segcuad
 388+ 98DC 3E 02        	ld a,2
 389+ 98DE 32 0D 8C     	ld (Cuad_objeto),a
 390+ 98E1 21 C0 4F     	ld hl,$4fc0
 391+ 98E4 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 98E7 21 11 8C     	ld hl,Limite_vertical
 393+ 98EA 36 0D        	ld (hl),$0d
 394+ 98EC 08           	ex af,af
 395+ 98ED 18 11        	jr 1F
 396+ 98EF              primcuad
 397+ 98EF 3E 01        	ld a,1
 398+ 98F1 32 0D 8C     	ld (Cuad_objeto),a
 399+ 98F4 21 C0 4F     	ld hl,$4fc0
 400+ 98F7 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 98FA 21 11 8C     	ld hl,Limite_vertical
 402+ 98FD 36 12        	ld (hl),$12
 403+ 98FF 08           	ex af,af
 404+ 9900
 405+ 9900 C5           1 push bc
 406+ 9901 E5           	push hl
 407+ 9902 D5           	push de
 408+ 9903
 409+ 9903 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 9906 CD B6 94     	call Genera_coordenadas
 411+ 9909
 412+ 9909 D1           	pop de
 413+ 990A E1           	pop hl
 414+ 990B C1           	pop bc
 415+ 990C
 416+ 990C 21 FB 8B     	ld hl,Ctrl_0
 417+ 990F CB EE        	set 5,(hl)
 418+ 9911 C9           	ret
 419+ 9912
 420+ 9912              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9912
 422+ 9912              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9912              ;
 424+ 9912              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9912
 426+ 9912 7D           column ld a,l
 427+ 9913 E6 1F        	and $1f
 428+ 9915 FE 10         	cp $10
 429+ 9917 C9            	ret
 430+ 9918
 431+ 9918              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9918              ;
 433+ 9918              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9918              ;
 435+ 9918              ; 14/12/22
 436+ 9918              ;
 437+ 9918              ;	Modifica: A y BC.
 438+ 9918
 439+ 9918 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 991B E6 01        	and 1
 441+ 991D 28 17        	jr z,1F
 442+ 991F
 443+ 991F              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 991F
 445+ 991F 3A EF 8B     	ld a,(Coordenada_X)
 446+ 9922 47           	ld b,a
 447+ 9923 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9924 79           	ld a,c
 449+ 9925 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9926 38 08        	jr c,2F
 451+ 9928 47           	ld b,a
 452+ 9929 79           	ld a,c
 453+ 992A 90           	sub b
 454+ 992B 32 0E 8C     	ld (Columnas),a
 455+ 992E 18 1B        	jr 4F
 456+ 9930 79           2 ld a,c
 457+ 9931 32 0E 8C     	ld (Columnas),a
 458+ 9934 18 15        	jr 4F
 459+ 9936
 460+ 9936              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9936
 462+ 9936 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 9939 81           	add c
 464+ 993A 3D           	dec a
 465+ 993B D6 1F        	sub $1f
 466+ 993D 38 08        	jr c,3F
 467+ 993F 47           	ld b,a
 468+ 9940 79           	ld a,c
 469+ 9941 90           	sub b
 470+ 9942 32 0E 8C     	ld (Columnas),a
 471+ 9945 18 04        	jr 4F
 472+ 9947 79           3 ld a,c
 473+ 9948 32 0E 8C     	ld (Columnas),a
 474+ 994B D9           4 exx
 475+ 994C 4F           	ld c,a
 476+ 994D D9           	exx
 477+ 994E C9            ret
 478+ 994F
 479+ 994F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 994F              ;
 481+ 994F              ;   19/7/23
 482+ 994F              ;
 483+ 994F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 994F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 994F              ;
 486+ 994F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 994F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 994F              ;
 489+ 994F              ;	DESTRUYE: HL,B Y A.
 490+ 994F
 491+ 994F 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9952 FE 02        	cp 2
 493+ 9954 38 18        	jr c,1F
 494+ 9956 28 16        	jr z,1F
 495+ 9958 E6 01        	and 1
 496+ 995A 28 0D        	jr z,3F
 497+ 995C
 498+ 995C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 995C
 500+ 995C CD 98 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 995F
 502+ 995F 7D           9 ld a,l
 503+ 9960 E6 1F        	and $1f
 504+ 9962 28 2A        	jr z,7F
 505+ 9964 2B           	dec hl
 506+ 9965 10 F8        	djnz 9B
 507+ 9967 18 25        	jr 7F
 508+ 9969
 509+ 9969              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9969
 511+ 9969 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 996C 18 20        	jr 7F
 513+ 996E
 514+ 996E 28 14        1 jr z,2F
 515+ 9970
 516+ 9970              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9970
 518+ 9970 CD 98 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9973
 520+ 9973 7D           4 ld a,l
 521+ 9974 E6 1F        	and $1f
 522+ 9976 28 03        	jr z,6F
 523+ 9978 2B           	dec hl
 524+ 9979 10 F8        	djnz 4B
 525+ 997B 06 0F        6 ld b,15
 526+ 997D CD BF 99     5 call PreviousScan
 527+ 9980 10 FB        	djnz 5B
 528+ 9982 18 0A        	jr 7F
 529+ 9984
 530+ 9984              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9984
 532+ 9984 CD 98 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9987 06 0F        	ld b,15
 534+ 9989 CD BF 99     8 call PreviousScan
 535+ 998C 10 FB        	djnz 8B
 536+ 998E
 537+ 998E E5           7 push hl
 538+ 998F DD E1        	pop ix
 539+ 9991
 540+ 9991 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 9994 E5           	push hl
 542+ 9995 FD E1        	pop iy
 543+ 9997
 544+ 9997 C9           	ret
 545+ 9998
 546+ 9998              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9998              ;
 548+ 9998              ;	2/1/23
 549+ 9998              ;
 550+ 9998              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9998              ;
 552+ 9998              ;	Tras esta rutina tenemos:
 553+ 9998              ;
 554+ 9998              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9998              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9998              ;
 557+ 9998              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9998
 559+ 9998 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 999B 3A 0E 8C     	ld a,(Columnas)
 561+ 999E 3D           	dec a
 562+ 999F 20 01        	jr nz,1F
 563+ 99A1 3C           	inc a
 564+ 99A2 47           1 ld b,a
 565+ 99A3 C9           	ret
 566+ 99A4
 567+ 99A4              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99A4              ;
 569+ 99A4              ;	Prepara_draw
 570+ 99A4              ;
 571+ 99A4              ;	Es una rutina de carga.
 572+ 99A4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99A4              ;
 574+ 99A4              ;	FUNCIONAMIENTO:
 575+ 99A4              ;
 576+ 99A4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99A4              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99A4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99A4              ;
 580+ 99A4              ;	DESTRUYE:
 581+ 99A4              ;
 582+ 99A4              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99A4
 584+ 99A4 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99A7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99A8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99A9 4E           	ld c,(hl)
 588+ 99AA 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99AD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99AF C9           	ret
 591+ 99B0
 592+ 99B0              ;----------------------------------------------------------------------------------------------------------------
 593+ 99B0              ;
 594+ 99B0              ;	5/08/22
 595+ 99B0              ;
 596+ 99B0              ;   NextScan.
 597+ 99B0              ;
 598+ 99B0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99B0              ;
 600+ 99B0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99B0              ;
 602+ 99B0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99B0              ;
 604+ 99B0              ;       DESTRUIDOS: AF y HL !!!
 605+ 99B0              ;
 606+ 99B0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99B0              ;
 608+ 99B0
 609+ 99B0 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B1 7C               ld a,h
 611+ 99B2 E6 07            and 7
 612+ 99B4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99B5
 614+ 99B5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99B6 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99B8 6F               ld l,a
 617+ 99B9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99BA
 619+ 99BA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99BB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99BD 67               ld h,a
 622+ 99BE C9               ret
 623+ 99BF
 624+ 99BF              ;----------------------------------------------------------------------------------------------------------------
 625+ 99BF              ;
 626+ 99BF              ;	5/08/22
 627+ 99BF              ;
 628+ 99BF              ;   PreviousScan.
 629+ 99BF              ;
 630+ 99BF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99BF              ;
 632+ 99BF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99BF              ;
 634+ 99BF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99BF              ;
 636+ 99BF              ;       DESTRUIDOS: AF y HL !!!
 637+ 99BF              ;
 638+ 99BF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99BF              ;
 640+ 99BF
 641+ 99BF 7C           PreviousScan ld a,h
 642+ 99C0 25               dec h               ; Dec H.
 643+ 99C1 E6 07            and 7
 644+ 99C3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99C4
 646+ 99C4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99C5 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99C7 6F               ld l,a
 649+ 99C8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99C9
 651+ 99C9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99CA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99CC 67               ld h,a
 654+ 99CD C9               ret
 655+ 99CE
 656+ 99CE
 657+ 99CE
 658+ 99CE
 659+ 99CE
 660+ 99CE
 661+ 99CE
 662+ 99CE
 663+ 99CE
 664+ 99CE
 665+ 99CE
 666+ 99CE
# file closed: Draw_XOR.asm
2087  99CE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99CE
   2+ 99CE              ; ******************************************************************************************************************************************************************************************
   3+ 99CE              ;
   4+ 99CE              ;   20/05/23
   5+ 99CE              ;
   6+ 99CE              ;	Recompone_posicion_inicio
   7+ 99CE              ;
   8+ 99CE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99CE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99CE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99CE              ;	_ a una u otra rutina.
  12+ 99CE
  13+ 99CE              Recompone_posicion_inicio
  14+ 99CE
  15+ 99CE 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 99D1 7D           	ld a,l
  17+ 99D2 E6 1F        	and $1f
  18+ 99D4 28 16        	jr z,1F
  19+ 99D6
  20+ 99D6 FE 1F        	cp $1f
  21+ 99D8 28 0D        	jr z,3F
  22+ 99DA
  23+ 99DA 21 FA 8B     	ld hl,Ctrl_2
  24+ 99DD CB C6        	set 0,(hl)
  25+ 99DF 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 99E2 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 99E5 18 08        	jr 2F
  28+ 99E7
  29+ 99E7 CD 95 9B     3 call Mov_left
  30+ 99EA 18 03        	jr 2F
  31+ 99EC
  32+ 99EC CD 72 9A     1 call Mov_right
  33+ 99EF 21 80 F8     2 ld hl,Sprite_vacio
  34+ 99F2 22 00 8C     	ld (Puntero_objeto),hl
  35+ 99F5 C9           	ret
  36+ 99F6
  37+ 99F6              ; ******************************************************************************************************************************************************************************************
  38+ 99F6              ;
  39+ 99F6              ;   27/05/23
  40+ 99F6              ;
  41+ 99F6              ;	Mov_down
  42+ 99F6              ;
  43+ 99F6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99F6              ;
  45+ 99F6              ;
  46+ 99F6              Mov_down
  47+ 99F6
  48+ 99F6 CD 60 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99F9              ;																	; _ repone (Puntero_objeto).
  50+ 99F9 21 FB 8B     	ld hl,Ctrl_0
  51+ 99FC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99FE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99FE              ; 																	; _ en el caso de que no lo haya.
  54+ 99FE 3A 16 8C     	ld a,(Vel_down)
  55+ 9A01 47           	ld b,a
  56+ 9A02 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A05 CD 98 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A08 E6 02        	and 2
  59+ 9A0A 28 17        	jr z,1F
  60+ 9A0C
  61+ 9A0C              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A0C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A0C
  64+ 9A0C 7C           	ld a,h
  65+ 9A0D FE 57        	cp $57
  66+ 9A0F 20 12        	jr nz,1F
  67+ 9A11
  68+ 9A11 7D           	ld a,l
  69+ 9A12 C6 20        	add $20
  70+ 9A14 30 0D        	jr nc,1F
  71+ 9A16
  72+ 9A16              ; ------------------------------
  73+ 9A16              ;
  74+ 9A16              ;	12/01/24
  75+ 9A16
  76+ 9A16              ;	call Reaparece_arriba
  77+ 9A16 CD 22 9D     	call Reinicio
  78+ 9A19
  79+ 9A19              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A19
  81+ 9A19 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A1C CB CF        	set 1,a
  83+ 9A1E 32 65 8C     	ld (Ctrl_3),a
  84+ 9A21
  85+ 9A21 18 08        	jr 3F
  86+ 9A23              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A23              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A23              ; ------------------------------
  89+ 9A23
  90+ 9A23 CD B0 99     1 call NextScan
  91+ 9A26 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A29 10 DA            djnz 2B
  93+ 9A2B CD B6 94     3 call Genera_coordenadas
  94+ 9A2E C9           	ret
  95+ 9A2F
  96+ 9A2F              ; ******************************************************************************************************************************************************************************************
  97+ 9A2F              ;
  98+ 9A2F              ;   27/05/23
  99+ 9A2F              ;
 100+ 9A2F              ;	Mov_up
 101+ 9A2F              ;
 102+ 9A2F              ; 	Mueve el Sprite hacia arriba.
 103+ 9A2F              ;
 104+ 9A2F              ;
 105+ 9A2F              Mov_up
 106+ 9A2F
 107+ 9A2F CD 60 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A32              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A32 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A35 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A37              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A37              ; 																		; _ en el caso de que no lo haya.
 113+ 9A37 3A 15 8C     	ld a,(Vel_up)
 114+ 9A3A 47           	ld b,a
 115+ 9A3B 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A3E CD 98 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A41 A7           	and a
 118+ 9A42 20 10        	jr nz,1F
 119+ 9A44
 120+ 9A44              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A44              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A44
 123+ 9A44 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A45 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A47 20 0B            jr nz,1F
 126+ 9A49 7D               ld a,l
 127+ 9A4A D6 20            sub $20
 128+ 9A4C 30 06            jr nc,1F
 129+ 9A4E 25               dec h
 130+ 9A4F
 131+ 9A4F              ; -----------------------------
 132+ 9A4F CD 03 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A52              ;	call Reinicio
 134+ 9A52              ; -----------------------------
 135+ 9A52
 136+ 9A52 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A54 CD BF 99     1 call PreviousScan
 138+ 9A57 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A5A 10 E2            djnz 3B
 140+ 9A5C CD B6 94     2 call Genera_coordenadas
 141+ 9A5F C9           	ret
 142+ 9A60
 143+ 9A60              ; -----------------------------
 144+ 9A60              ;
 145+ 9A60              ;	27/5/23
 146+ 9A60              ;
 147+ 9A60              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A60              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A60              ;
 150+ 9A60              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A60              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A60              ;
 153+ 9A60              ;	Modifica: A y (Puntero_objeto).
 154+ 9A60
 155+ 9A60 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A63 CB 47        	bit 0,a
 157+ 9A65 C8           	ret z
 158+ 9A66 CB 87        	res 0,a
 159+ 9A68 32 FA 8B     	ld (Ctrl_2),a
 160+ 9A6B 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A6E 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9A71 C9           	ret
 163+ 9A72
 164+ 9A72              ; ******************************************************************************************************************************************************************************************
 165+ 9A72              ;
 166+ 9A72              ;	19/10/22
 167+ 9A72              ;
 168+ 9A72              ;	Mov_right.
 169+ 9A72              ;
 170+ 9A72              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A72              ;
 172+ 9A72
 173+ 9A72 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A75 CB 77        	bit 6,a
 175+ 9A77 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A79
 177+ 9A79 CD B1 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A7C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A7D
 180+ 9A7D 21 FB 8B     	ld hl,Ctrl_0
 181+ 9A80 CB E6        	set 4,(hl)
 182+ 9A82 18 52        	jr 8F
 183+ 9A84
 184+ 9A84 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9A87 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A89              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A89              ; 																	; _ en el caso de que no lo haya.
 188+ 9A89 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A8C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A8E 20 46        	jr nz,8F
 191+ 9A90
 192+ 9A90 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A93 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A94 28 40        	jr z,8F
 195+ 9A96
 196+ 9A96              ; ---------- ---------- ----------
 197+ 9A96              ;
 198+ 9A96              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A96
 200+ 9A96 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A99 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A9B 28 11        	jr z,1F
 203+ 9A9D 38 06        	jr c,6F
 204+ 9A9F FE 04        	cp 4
 205+ 9AA1 28 14        	jr z,7F
 206+ 9AA3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AA5
 208+ 9AA5              ; ---------- ---------- ----------
 209+ 9AA5              ;
 210+ 9AA5              ; Perfiles de velocidad
 211+ 9AA5              ;
 212+ 9AA5
 213+ 9AA5 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AA8 FE FE        	cp $fe
 215+ 9AAA 20 2A        	jr nz,8F
 216+ 9AAC 18 10        	jr 3F
 217+ 9AAE 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB1 FE FD        	cp $fd
 219+ 9AB3 20 21        	jr nz,8F
 220+ 9AB5 18 07        	jr 3F
 221+ 9AB7 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ABA FE FB        	cp $fb
 223+ 9ABC 20 18        	jr nz,8F
 224+ 9ABE
 225+ 9ABE              ; ---------- ---------- ----------
 226+ 9ABE
 227+ 9ABE              3
 228+ 9ABE CD F1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC1              ;	call Reinicio
 230+ 9AC1
 231+ 9AC1              ; ---------- ---------- ----------
 232+ 9AC1              ;
 233+ 9AC1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC1
 235+ 9AC1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AC3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AC4 CD DD 9A     	call DESPLZ_DER
 238+ 9AC7 C1           	pop bc
 239+ 9AC8 10 F9        	djnz 5B
 240+ 9ACA 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ACD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ACE 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9AD1 CD B6 94     	call Genera_coordenadas
 244+ 9AD4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AD6
 246+ 9AD6              ; ---------- ---------- ----------
 247+ 9AD6
 248+ 9AD6 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9AD9 CD DD 9A     	call DESPLZ_DER
 250+ 9ADC C9           2 ret
 251+ 9ADD
 252+ 9ADD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ADD              ;
 254+ 9ADD              ;	22/9/22
 255+ 9ADD              ;
 256+ 9ADD
 257+ 9ADD CD EC 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AE0 CD 38 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AE3 CD 61 9B         call Ciclo_completo
 260+ 9AE6 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AE9 CB FE        	set 7,(hl)
 262+ 9AEB C9           	ret
 263+ 9AEC
 264+ 9AEC              ; ******************************************************************************************************************************************************************************************
 265+ 9AEC              ;	15/02/23
 266+ 9AEC              ;
 267+ 9AEC
 268+ 9AEC 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9AEF 47           	ld b,a
 270+ 9AF0 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AF3 23           1 inc hl
 272+ 9AF4 23           	inc hl
 273+ 9AF5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AF7 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AFA CD F8 90     	call Extrae_address
 276+ 9AFD 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B00
 278+ 9B00              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B00
 280+ 9B00              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B00              ; Cuántos movimientos hemos hecho ??
 282+ 9B00              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B00
 284+ 9B00 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B03 EB           	ex de,hl
 286+ 9B04 A7           	and a
 287+ 9B05 ED 52        	sbc hl,de
 288+ 9B07 CB 3D        	srl l
 289+ 9B09 3E 08        6 ld a,8
 290+ 9B0B 95           	sub l
 291+ 9B0C 30 1E        	jr nc,3F
 292+ 9B0E
 293+ 9B0E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B0E              ; B="0".
 295+ 9B0E
 296+ 9B0E 04           4 inc b
 297+ 9B0F 3C           	inc a
 298+ 9B10 20 FC        	jr nz,4B
 299+ 9B12 78           	ld a,b
 300+ 9B13 08           	ex af,af
 301+ 9B14 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B17 23           5 inc hl
 303+ 9B18 23           	inc hl
 304+ 9B19 10 FC        	djnz 5B
 305+ 9B1B 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B1E CD F8 90     	call Extrae_address
 307+ 9B21 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B24
 309+ 9B24              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B24              ; _(Posicion_actual).
 311+ 9B24
 312+ 9B24 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B27 34           	inc (hl)
 314+ 9B28 08               ex af,af
 315+ 9B29 6F           	ld l,a
 316+ 9B2A 18 DD        	jr 6B
 317+ 9B2C
 318+ 9B2C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B2C
 320+ 9B2C 47           3 ld b,a
 321+ 9B2D 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B30 23           2 inc hl
 323+ 9B31 23           	inc hl
 324+ 9B32 10 FC        	djnz 2B
 325+ 9B34 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B37 C9           8 ret
 327+ 9B38
 328+ 9B38              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B38              ;
 330+ 9B38              ;	24/7/22
 331+ 9B38              ;
 332+ 9B38              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B38              ;
 334+ 9B38              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B38              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B38              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B38
 338+ 9B38 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B3B A7           	and a
 340+ 9B3C 20 1F        	jr nz,1F
 341+ 9B3E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B40 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B43
 344+ 9B43 21 FD 8B     	ld hl,Columns
 345+ 9B46 34           	inc (hl)
 346+ 9B47 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B4A E6 01        	and 1
 348+ 9B4C 28 0F        	jr z,1F
 349+ 9B4E 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B51 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B52 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B55 CD B6 94     	call Genera_coordenadas
 353+ 9B58 CD BD 9C     	call Inc_CTRL_DESPLZ
 354+ 9B5B 18 03        	jr 2F
 355+ 9B5D CD BD 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B60 C9           2 ret
 357+ 9B61
 358+ 9B61              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B61              ;
 360+ 9B61              ;	24/7/22
 361+ 9B61              ;
 362+ 9B61              ;	Ciclo_completo.
 363+ 9B61              ;
 364+ 9B61              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B61              ;
 366+ 9B61              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B61              ; 	Decrementamos (Columns).
 368+ 9B61              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B61              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B61
 371+ 9B61
 372+ 9B61 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B64 FE FF        	cp $ff
 374+ 9B66 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B68 E6 F0        	and $f0
 376+ 9B6A 20 28        	jr nz,3F
 377+ 9B6C
 378+ 9B6C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B6C
 380+ 9B6C 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B6F 47           	ld b,a
 382+ 9B70 3E F8        	ld a,$f8
 383+ 9B72 80           	add b
 384+ 9B73 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9B76 18 1C        	jr 3F
 386+ 9B78 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B7B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B7C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B7D 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9B80 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B83 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B85 20 0A        	jr nz,2F
 393+ 9B87 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B8A 23           	inc hl
 395+ 9B8B 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9B8E CD B6 94     	call Genera_coordenadas
 397+ 9B91
 398+ 9B91              ; Inicia el puntero de Sprite.
 399+ 9B91
 400+ 9B91 CD 0D 91     2 call Inicia_puntero_objeto_der
 401+ 9B94 C9           3 ret
 402+ 9B95
 403+ 9B95              ; ******************************************************************************************************************************************************************************************
 404+ 9B95              ;
 405+ 9B95              ;	15/02/23
 406+ 9B95              ;
 407+ 9B95              ;	Mov_left.
 408+ 9B95              ;
 409+ 9B95              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B95              ;
 411+ 9B95              Mov_left
 412+ 9B95
 413+ 9B95 21 FB 8B     	ld hl,Ctrl_0
 414+ 9B98 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B9A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B9A              ; 																	; _ en el caso de que no lo haya.
 417+ 9B9A 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9B9D CB 77        	bit 6,a
 419+ 9B9F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA1
 421+ 9BA1 CD B7 9C     	call Stop_Amadeus_left
 422+ 9BA4 C8           	ret z
 423+ 9BA5 20 4A        	jr nz,8F
 424+ 9BA7
 425+ 9BA7 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BAA A7           	and a
 427+ 9BAB 20 44        	jr nz,8F
 428+ 9BAD
 429+ 9BAD 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BB0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BB3
 433+ 9BB3              ; ---------- ---------- ----------
 434+ 9BB3
 435+ 9BB3 3A 13 8C     	ld a,(Vel_left)
 436+ 9BB6 FE 02        	cp 2
 437+ 9BB8 28 0F        	jr z,1F
 438+ 9BBA 38 04        	jr c,6F
 439+ 9BBC FE 04        	cp 4
 440+ 9BBE 28 12        	jr z,7F
 441+ 9BC0
 442+ 9BC0              ; ---------- ---------- ----------
 443+ 9BC0
 444+ 9BC0 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BC3 FE F8        	cp $f8
 446+ 9BC5 20 2A        	jr nz,8F
 447+ 9BC7 18 10        	jr 4F
 448+ 9BC9 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BCC FE F9        	cp $f9
 450+ 9BCE 20 21        	jr nz,8F
 451+ 9BD0 18 07        	jr 4F
 452+ 9BD2 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BD5 FE FB        	cp $fb
 454+ 9BD7 20 18        	jr nz,8F
 455+ 9BD9
 456+ 9BD9              ; ---------- ---------- ----------
 457+ 9BD9
 458+ 9BD9              4
 459+ 9BD9 CD DF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BDC              ;	call Reinicio
 461+ 9BDC
 462+ 9BDC              ; ---------- ---------- ----------
 463+ 9BDC
 464+ 9BDC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BDE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BDF
 467+ 9BDF              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BDF              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BDF
 470+ 9BDF CD F8 9B     	call DESPLZ_IZQ
 471+ 9BE2 C1           	pop bc
 472+ 9BE3 10 F9        	djnz 5B
 473+ 9BE5 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BE8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BE9 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9BEC CD B6 94     	call Genera_coordenadas
 477+ 9BEF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF1
 479+ 9BF1              ; ---------- ---------- ----------
 480+ 9BF1
 481+ 9BF1              ; Movemos, no hay recolocación.
 482+ 9BF1
 483+ 9BF1 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9BF4 CD F8 9B     	call DESPLZ_IZQ
 485+ 9BF7 C9           2 ret
 486+ 9BF8
 487+ 9BF8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BF8              ;
 489+ 9BF8              ;	22/9/22
 490+ 9BF8
 491+ 9BF8              DESPLZ_IZQ
 492+ 9BF8
 493+ 9BF8 CD 07 9C     	call Desplaza_izquierda
 494+ 9BFB CD 53 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BFE CD 7B 9C     	call Ciclo_completo_2
 496+ 9C01 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C04 CB BE        	res 7,(hl)
 498+ 9C06 C9           	ret
 499+ 9C07
 500+ 9C07              Desplaza_izquierda
 501+ 9C07
 502+ 9C07 3A 13 8C     	ld a,(Vel_left)
 503+ 9C0A 47           	ld b,a
 504+ 9C0B 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C0E 23           1 inc hl
 506+ 9C0F 23           	inc hl
 507+ 9C10 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C12 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C15 CD F8 90     	call Extrae_address
 510+ 9C18 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C1B
 512+ 9C1B              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C1B
 514+ 9C1B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C1B              ; Cuántos movimientos hemos hecho ??
 516+ 9C1B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C1B
 518+ 9C1B 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C1E EB           	ex de,hl
 520+ 9C1F A7           	and a
 521+ 9C20 ED 52        	sbc hl,de
 522+ 9C22 CB 3D        	srl l
 523+ 9C24 3E 08        6 ld a,8
 524+ 9C26 95           	sub l
 525+ 9C27 30 1E        	jr nc,3F
 526+ 9C29
 527+ 9C29              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C29              ; B="0".
 529+ 9C29
 530+ 9C29 04           4 inc b
 531+ 9C2A 3C           	inc a
 532+ 9C2B 20 FC        	jr nz,4B
 533+ 9C2D 78           	ld a,b
 534+ 9C2E 08           	ex af,af
 535+ 9C2F 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C32 23           5 inc hl
 537+ 9C33 23           	inc hl
 538+ 9C34 10 FC        	djnz 5B
 539+ 9C36 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C39 CD F8 90     	call Extrae_address
 541+ 9C3C 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C3F
 543+ 9C3F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C3F              ; _(Posicion_actual).
 545+ 9C3F
 546+ 9C3F 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C42 35           	dec (hl)
 548+ 9C43 08           	ex af,af
 549+ 9C44 6F           	ld l,a
 550+ 9C45 18 DD        	jr 6B
 551+ 9C47
 552+ 9C47              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C47
 554+ 9C47 47           3 ld b,a
 555+ 9C48 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C4B 23           2 inc hl
 557+ 9C4C 23           	inc hl
 558+ 9C4D 10 FC        	djnz 2B
 559+ 9C4F 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C52 C9           8 ret
 561+ 9C53
 562+ 9C53              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C53              ;
 564+ 9C53              ;	modifica_parametros_1er_DESPLZ
 565+ 9C53              ;
 566+ 9C53              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C53              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C53              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C53
 570+ 9C53 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C56 A7           	and a
 572+ 9C57 20 1E        	jr nz,1F
 573+ 9C59 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C5A 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C5D 21 FD 8B     	ld hl,Columns
 576+ 9C60 34           	inc (hl)
 577+ 9C61 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C64 E6 01        	and 1
 579+ 9C66 20 0F        	jr nz,1F
 580+ 9C68 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C6B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C6C 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9C6F CD B6 94     	call Genera_coordenadas
 584+ 9C72 CD CE 9C     	call Dec_CTRL_DESPLZ
 585+ 9C75 18 03        	jr 2F
 586+ 9C77 CD CE 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C7A C9           2 ret
 588+ 9C7B
 589+ 9C7B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C7B
 591+ 9C7B 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C7E FE F7        	cp $f7
 593+ 9C80 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C82 30 2C        	jr nc,3F
 595+ 9C84
 596+ 9C84              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C84
 598+ 9C84 06 00        	ld b,0
 599+ 9C86 04           4 inc b
 600+ 9C87 3C           	inc a
 601+ 9C88 FE F7        	cp $f7
 602+ 9C8A 20 FA        	jr nz,4B
 603+ 9C8C 3E FF        	ld a,$ff
 604+ 9C8E 90           	sub b
 605+ 9C8F 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9C92 18 1C        	jr 3F
 607+ 9C94
 608+ 9C94              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C94
 610+ 9C94 21 FD 8B     1 ld hl,Columns
 611+ 9C97 35           	dec (hl)
 612+ 9C98 AF           	xor a
 613+ 9C99 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9C9C 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9C9F E6 01        	and 1
 616+ 9CA1 28 0A        	jr z,2F
 617+ 9CA3 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CA6 2B           	dec hl
 619+ 9CA7 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CAA CD B6 94     	call Genera_coordenadas
 621+ 9CAD
 622+ 9CAD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CAD
 624+ 9CAD CD 20 91     2 call Inicia_puntero_objeto_izq
 625+ 9CB0 C9           3 ret
 626+ 9CB1
 627+ 9CB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB1              ;
 629+ 9CB1              ;	19/10/22
 630+ 9CB1              ;
 631+ 9CB1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB1
 634+ 9CB1 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CB4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CB6 C9           	ret
 637+ 9CB7
 638+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CB7              ;
 640+ 9CB7              ;	19/10/22
 641+ 9CB7              ;
 642+ 9CB7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CB7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CB7
 645+ 9CB7 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CBA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CBC C9           	ret
 648+ 9CBD
 649+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CBD              ;
 651+ 9CBD              ;	24/7/22
 652+ 9CBD              ;
 653+ 9CBD              ;	Inc_CTRL_DESPLZ
 654+ 9CBD              ;
 655+ 9CBD              ;
 656+ 9CBD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CBD
 658+ 9CBD 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CC0 3A 14 8C     	ld a,(Vel_right)
 660+ 9CC3 A7           	and a
 661+ 9CC4 28 06        	jr z,1F
 662+ 9CC6 47           	ld b,a
 663+ 9CC7 34           3 inc (hl)
 664+ 9CC8 10 FD        	djnz 3B
 665+ 9CCA 18 01        	jr 2F
 666+ 9CCC 34           1 inc (hl)
 667+ 9CCD C9           2 ret
 668+ 9CCE
 669+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CCE              ;
 671+ 9CCE              ;	5/2/23
 672+ 9CCE              ;
 673+ 9CCE              ;	Dec_CTRL_DESPLZ
 674+ 9CCE              ;
 675+ 9CCE              ;
 676+ 9CCE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CCE
 678+ 9CCE 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD1 3A 13 8C     	ld a,(Vel_left)
 680+ 9CD4 A7           	and a
 681+ 9CD5 28 06        	jr z,1F
 682+ 9CD7 47           	ld b,a
 683+ 9CD8 35           3 dec (hl)
 684+ 9CD9 10 FD        	djnz 3B
 685+ 9CDB 18 01        	jr 2F
 686+ 9CDD 35           1 dec (hl)
 687+ 9CDE C9           2 ret
 688+ 9CDF
 689+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CDF
 691+ 9CDF 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE2 01 1F 00     	ld bc,31
 693+ 9CE5 A7           	and a
 694+ 9CE6 ED 4A        	adc hl,bc
 695+ 9CE8 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9CEB 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CEE CB C6        	set 0,(hl)
 698+ 9CF0 C9           	ret
 699+ 9CF1
 700+ 9CF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF1
 702+ 9CF1 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CF4 01 1F 00     	ld bc,31
 704+ 9CF7 A7           	and a
 705+ 9CF8 ED 42        	sbc hl,bc
 706+ 9CFA 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CFD 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D00 CB CE        	set 1,(hl)
 709+ 9D02 C9           	ret
 710+ 9D03
 711+ 9D03              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D03
 713+ 9D03 24           Reaparece_abajo inc h
 714+ 9D04 01 E0 17     	ld bc,$17e0
 715+ 9D07 A7           	and a
 716+ 9D08 ED 4A        	adc hl,bc
 717+ 9D0A 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D0D 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D10 CB D6        	set 2,(hl)
 720+ 9D12 C9           	ret
 721+ 9D13
 722+ 9D13              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D13
 724+ 9D13 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D16 A7           	and a
 726+ 9D17 ED 42        	sbc hl,bc
 727+ 9D19 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D1C 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D1F CB DE        	set 3,(hl)
 730+ 9D21 C9           	ret
 731+ 9D22
 732+ 9D22              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D22              ;
 734+ 9D22              ;	15/07/23
 735+ 9D22
 736+ 9D22              Reinicio
 737+ 9D22
 738+ 9D22              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D22
 740+ 9D22 AF           	xor a
 741+ 9D23 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D26 CD 44 9D     	call Limpia_contenido_hl
 743+ 9D29
 744+ 9D29 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D2C CD 44 9D     	call Limpia_contenido_hl
 746+ 9D2F
 747+ 9D2F CD 2D 93     	call Situa_Puntero_indice_mov
 748+ 9D32 CD 43 9E     	call Inicia_Puntero_mov
 749+ 9D35
 750+ 9D35 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D38 06 05        	ld b,5
 752+ 9D3A 77           1 ld (hl),a
 753+ 9D3B 23           	inc hl
 754+ 9D3C 10 FC        	djnz 1B
 755+ 9D3E
 756+ 9D3E 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D41 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D43
 759+ 9D43 C9           	ret
 760+ 9D44
 761+ 9D44 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D45 23           	inc hl
 763+ 9D46 77           	ld (hl),a
 764+ 9D47 C9           	ret
 765+ 9D48
 766+ 9D48              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D48              ;
 768+ 9D48              ;	18/6/24
 769+ 9D48              ;
 770+ 9D48
 771+ 9D48              Amadeus_a_izquierda
 772+ 9D48
 773+ 9D48              ;	Actualiza contador de movimientos.
 774+ 9D48
 775+ 9D48 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D4B 35           	dec (hl)
 777+ 9D4C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D4E
 779+ 9D4E 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D51 2B           	dec hl
 781+ 9D52 2B           	dec hl
 782+ 9D53 2B           	dec hl
 783+ 9D54 2B           	dec hl
 784+ 9D55 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D58
 786+ 9D58 21 65 8C     	ld hl,Ctrl_3
 787+ 9D5B CB EE        	set 5,(hl)
 788+ 9D5D
 789+ 9D5D C9           	ret
 790+ 9D5E
 791+ 9D5E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D5F C9           	ret
 793+ 9D60
 794+ 9D60
 795+ 9D60              Amadeus_a_derecha
 796+ 9D60
 797+ 9D60              ;	Actualiza contador de movimientos.
 798+ 9D60
 799+ 9D60 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D63 34           	inc (hl)
 801+ 9D64 3E 7A        	ld a,$7a
 802+ 9D66 BE           	cp (hl)
 803+ 9D67 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D69
 805+ 9D69 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D6C 23           	inc hl
 807+ 9D6D 23           	inc hl
 808+ 9D6E 23           	inc hl
 809+ 9D6F 23           	inc hl
 810+ 9D70 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D73
 812+ 9D73 21 65 8C     	ld hl,Ctrl_3
 813+ 9D76 CB EE        	set 5,(hl)
 814+ 9D78 C9           	ret
 815+ 9D79
 816+ 9D79 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D7A C9           	ret
# file closed: Direcciones.asm
2088  9D7B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D7B              ; ----- ----- ----- ----- -----
   2+ 9D7B              ;
   3+ 9D7B              ;   28/12/23
   4+ 9D7B
   5+ 9D7B              Movimiento
   6+ 9D7B
   7+ 9D7B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D7B
   9+ 9D7B 3A FA 8B         ld a,(Ctrl_2)
  10+ 9D7E CB 57            bit 2,a
  11+ 9D80 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D82
  13+ 9D82 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9D85 7E               ld a,(hl)
  15+ 9D86
  16+ 9D86              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D86
  18+ 9D86              Inicia_desplazamiento.
  19+ 9D86
  20+ 9D86              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D86
  22+ 9D86 CD 79 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D89
  24+ 9D89              ; Iniciamos (Repetimos_mov).
  25+ 9D89
  26+ 9D89 7E               ld a,(hl)
  27+ 9D8A E6 0F            and $0f
  28+ 9D8C 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9D8F 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D92
  31+ 9D92              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D92
  33+ 9D92 23               inc hl
  34+ 9D93 7E               ld a,(hl)
  35+ 9D94 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9D97 2B               dec hl
  37+ 9D98
  38+ 9D98 21 FA 8B         ld hl,Ctrl_2
  39+ 9D9B CB D6            set 2,(hl)
  40+ 9D9D
  41+ 9D9D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D9D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D9D
  44+ 9D9D              Desplazamiento_iniciado
  45+ 9D9D
  46+ 9D9D CD 4D 9E         call Aplica_desplazamiento
  47+ 9DA0
  48+ 9DA0              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DA0
  50+ 9DA0 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DA3 CB 4F            bit 1,a
  52+ 9DA5 C0               ret nz
  53+ 9DA6
  54+ 9DA6 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DA9 35               dec (hl)
  56+ 9DAA C0               ret nz
  57+ 9DAB
  58+ 9DAB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DAB              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DAB              ; Analiza (Cola_de_desplazamiento).
  61+ 9DAB
  62+ 9DAB 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DAE A7               and a
  64+ 9DAF CC A2 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB2 28 30            jr z,Reinicia_el_movimiento
  66+ 9DB4
  67+ 9DB4 FE FF            cp $ff
  68+ 9DB6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DB8
  70+ 9DB8 FE FE            cp $fe
  71+ 9DBA CC 27 9E         call z,Fijamos_bucle
  72+ 9DBD 28 25            jr z,Reinicia_el_movimiento
  73+ 9DBF
  74+ 9DBF FE FD            cp $fd
  75+ 9DC1 20 11            jr nz,1F
  76+ 9DC3
  77+ 9DC3              ; ---
  78+ 9DC3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DC3
  80+ 9DC3 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DC6 CB 5F            bit 3,a
  82+ 9DC8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DCA
  84+ 9DCA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DCA
  86+ 9DCA 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DCD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DCF
  89+ 9DCF CD 38 9E         call Inicia_Repetimos_movimiento
  90+ 9DD2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DD4              ; ---
  92+ 9DD4
  93+ 9DD4 FE 01        1 cp 1
  94+ 9DD6 CA 11 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DD9
  96+ 9DD9 3D               dec a
  97+ 9DDA 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9DDD
  99+ 9DDD 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DE0 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DE3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DE3 C9               ret
 103+ 9DE4
 104+ 9DE4              Reinicia_el_movimiento
 105+ 9DE4
 106+ 9DE4 3A FA 8B         ld a,(Ctrl_2)
 107+ 9DE7 CB 5F            bit 3,a
 108+ 9DE9 28 1B            jr z,2F
 109+ 9DEB
 110+ 9DEB              ; (Cola_de_desplazamiento)="254".
 111+ 9DEB
 112+ 9DEB 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DEE 35               dec (hl)
 114+ 9DEF 20 15            jr nz,2F
 115+ 9DF1
 116+ 9DF1              ; Fin de las repeticiones del último movimiento.
 117+ 9DF1
 118+ 9DF1 21 FA 8B         ld hl,Ctrl_2
 119+ 9DF4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DF6
 121+ 9DF6 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9DF9 23               inc hl
 123+ 9DFA 23               inc hl
 124+ 9DFB 23               inc hl
 125+ 9DFC 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DFF              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DFF 7E               ld a,(hl)
 128+ 9E00 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E03
 130+ 9E03 C3 AB 9D         jp Cola
 131+ 9E06
 132+ 9E06 CD 43 9E     2 call Inicia_Puntero_mov
 133+ 9E09
 134+ 9E09 21 FA 8B         ld hl,Ctrl_2
 135+ 9E0C CB 96            res 2,(hl)
 136+ 9E0E
 137+ 9E0E C3 7B 9D         jp Movimiento
 138+ 9E11
 139+ 9E11              Siguiente_desplazamiento
 140+ 9E11
 141+ 9E11              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E11              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E11
 144+ 9E11 21 FA 8B         ld hl,Ctrl_2
 145+ 9E14 CB 96            res 2,(hl)
 146+ 9E16
 147+ 9E16 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E19 23               inc hl
 149+ 9E1A 23               inc hl
 150+ 9E1B 22 21 8C         ld (Puntero_mov),hl
 151+ 9E1E
 152+ 9E1E 7E               ld a,(hl)
 153+ 9E1F A7               and a
 154+ 9E20 CC A2 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E23 CA E4 9D         jp z,Reinicia_el_movimiento
 156+ 9E26
 157+ 9E26 C9               ret
 158+ 9E27
 159+ 9E27              ; Subrutinas -----------------------------------------
 160+ 9E27              ; ---------- --------- --------- ---------- ----------
 161+ 9E27              ;
 162+ 9E27              ;   24/07/23
 163+ 9E27              ;
 164+ 9E27              ;   Fijamos_bucle
 165+ 9E27              ;
 166+ 9E27              ;
 167+ 9E27
 168+ 9E27              Fijamos_bucle
 169+ 9E27
 170+ 9E27 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E2A 3C               inc a
 172+ 9E2B 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E2E
 174+ 9E2E CD A2 9E         call Incrementa_Puntero_indice_mov
 175+ 9E31 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E34 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E37 C9               ret
 178+ 9E38
 179+ 9E38              ; ---------- --------- --------- ---------- ----------
 180+ 9E38              ;
 181+ 9E38              ;   07/7/23
 182+ 9E38              ;
 183+ 9E38              ;   Inicia_Repetimos_movimiento
 184+ 9E38              ;
 185+ 9E38              ;
 186+ 9E38
 187+ 9E38              Inicia_Repetimos_movimiento
 188+ 9E38
 189+ 9E38              ; Iniciamos (Repetimos_movimiento).
 190+ 9E38
 191+ 9E38 DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E3C DD 7E 02         ld a,(ix+2)
 193+ 9E3F 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E42
 195+ 9E42 C9               ret
 196+ 9E43
 197+ 9E43              ; ---------- --------- --------- ---------- ----------
 198+ 9E43              ;
 199+ 9E43              ;   26/6/23
 200+ 9E43              ;
 201+ 9E43              ;   Inicia_Puntero_mov
 202+ 9E43              ;
 203+ 9E43              ;
 204+ 9E43
 205+ 9E43 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E46 CD F8 90         call Extrae_address
 207+ 9E49 22 21 8C         ld (Puntero_mov),hl
 208+ 9E4C C9               ret
 209+ 9E4D
 210+ 9E4D              ; ---------- --------- --------- ---------- ----------
 211+ 9E4D              ;
 212+ 9E4D              ;   27/06/23
 213+ 9E4D              ;
 214+ 9E4D              ;   Aplica_movimiento.
 215+ 9E4D
 216+ 9E4D              Aplica_desplazamiento
 217+ 9E4D
 218+ 9E4D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E4D
 220+ 9E4D 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E50
 222+ 9E50 7E               ld a,(hl)
 223+ 9E51 E6 F0            and $f0
 224+ 9E53 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E54
 226+ 9E54 CB 7E            bit 7,(hl)
 227+ 9E56 28 03            jr z,1F
 228+ 9E58 CD 2F 9A         call Mov_up
 229+ 9E5B 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E5E CB 76            bit 6,(hl)
 231+ 9E60 28 03            jr z,2F
 232+ 9E62 CD F6 99         call Mov_down
 233+ 9E65
 234+ 9E65              ; Se ha aplicado reinicio ???
 235+ 9E65              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E65
 237+ 9E65              ;    ld a,(Ctrl_3)
 238+ 9E65              ;    bit 1,a
 239+ 9E65              ;    ret nz
 240+ 9E65
 241+ 9E65 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E68 CB 6E            bit 5,(hl)
 243+ 9E6A 28 03            jr z,3F
 244+ 9E6C CD 95 9B         call Mov_left
 245+ 9E6F 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9E72 CB 66            bit 4,(hl)
 247+ 9E74 C8               ret z
 248+ 9E75 CD 72 9A         call Mov_right
 249+ 9E78 C9               ret
 250+ 9E79
 251+ 9E79              ; ---------- --------- --------- ---------- ----------
 252+ 9E79              ;
 253+ 9E79              ;   26/06/23
 254+ 9E79              ;
 255+ 9E79              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E79
 257+ 9E79              Ajusta_velocidad_desplazamiento
 258+ 9E79
 259+ 9E79              ; 1er byte de la cadena de movimiento.
 260+ 9E79              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E79
 262+ 9E79 CD 97 9E         call Extrae_nibble_alto
 263+ 9E7C
 264+ 9E7C 32 15 8C         ld (Vel_up),a
 265+ 9E7F 79               ld a,c
 266+ 9E80 E6 0F            and $0f
 267+ 9E82 32 16 8C         ld (Vel_down),a
 268+ 9E85
 269+ 9E85              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E85              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E85
 272+ 9E85 23               inc hl
 273+ 9E86 CD 97 9E         call Extrae_nibble_alto
 274+ 9E89
 275+ 9E89 32 13 8C         ld (Vel_left),a
 276+ 9E8C 79               ld a,c
 277+ 9E8D E6 0F            and $0f
 278+ 9E8F 32 14 8C         ld (Vel_right),a
 279+ 9E92
 280+ 9E92              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E92
 282+ 9E92 23               inc hl
 283+ 9E93 22 21 8C         ld (Puntero_mov),hl
 284+ 9E96 C9               ret
 285+ 9E97
 286+ 9E97 06 04        Extrae_nibble_alto ld b,4
 287+ 9E99 7E               ld a,(hl)
 288+ 9E9A 4F               ld c,a
 289+ 9E9B E6 F0            and $f0
 290+ 9E9D CB 3F        1 srl a
 291+ 9E9F 10 FC            djnz 1B
 292+ 9EA1 C9               ret
 293+ 9EA2
 294+ 9EA2              ; ---------- --------- --------- ---------- ----------
 295+ 9EA2              ;
 296+ 9EA2              ;   5/7/23
 297+ 9EA2              ;
 298+ 9EA2              ;   Incrementa_Puntero_indice_mov
 299+ 9EA2
 300+ 9EA2              Incrementa_Puntero_indice_mov
 301+ 9EA2
 302+ 9EA2 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EA5 34               inc (hl)
 304+ 9EA6
 305+ 9EA6 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9EA9 01 02 00         ld bc,2
 307+ 9EAC A7               and a
 308+ 9EAD 09               add hl,bc
 309+ 9EAE 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EB1
 311+ 9EB1 7E               ld a,(hl)
 312+ 9EB2 A7               and a
 313+ 9EB3
 314+ 9EB3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EB3
 316+ 9EB3              ;    jr z,$
 317+ 9EB3
 318+ 9EB3              ;! Reinicia el Patrón de movimiento.
 319+ 9EB3
 320+ 9EB3 CC B8 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EB6
 322+ 9EB6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EB7
 324+ 9EB7 C9               ret
 325+ 9EB8
 326+ 9EB8              ; ---------- --------- --------- ---------- ----------
 327+ 9EB8              ;
 328+ 9EB8              ;   15/01/24
 329+ 9EB8              ;
 330+ 9EB8              ;   Inicializa_Puntero_indice_mov
 331+ 9EB8
 332+ 9EB8              Inicializa_Puntero_indice_mov_2
 333+ 9EB8
 334+ 9EB8              ; Existe etiqueta de bucle principal???
 335+ 9EB8
 336+ 9EB8 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EBB 24               inc h
 338+ 9EBC 25               dec h
 339+ 9EBD 28 05            jr z,2F
 340+ 9EBF
 341+ 9EBF 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EC2 18 14            jr 3F
 343+ 9EC4
 344+ 9EC4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EC4
 346+ 9EC4 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9EC7 47               ld b,a
 348+ 9EC8
 349+ 9EC8 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9ECB 2B           1 dec hl
 351+ 9ECC 2B               dec hl
 352+ 9ECD 10 FC            djnz 1B
 353+ 9ECF 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9ED2
 355+ 9ED2 AF               xor a
 356+ 9ED3 32 25 8C         ld (Incrementa_puntero),a
 357+ 9ED6 18 06            jr 4F
 358+ 9ED8
 359+ 9ED8 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9EDB 32 25 8C         ld (Incrementa_puntero),a
 361+ 9EDE C9           4 ret
 362+ 9EDF
 363+ 9EDF              ; ----------------------------------------------------------------------
 364+ 9EDF              ;
 365+ 9EDF              ;   30/01/24
 366+ 9EDF              ;
 367+ 9EDF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EDF
 369+ 9EDF 3A EE 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE2 CD 2F 94         call Calcula_salto_en_BC
 371+ 9EE5 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EE8 A7               and a
 373+ 9EE9 ED 4A            adc hl,bc
 374+ 9EEB C9               ret
 375+ 9EEC
 376+ 9EEC              ; ----------------------------------------------------------------------
 377+ 9EEC              ;
 378+ 9EEC              ;   30/01/24
 379+ 9EEC              ;
 380+ 9EEC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EEC              ;
 382+ 9EEC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EEC
 384+ 9EEC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EED 23               inc hl
 386+ 9EEE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EEF 69               ld l,c
 388+ 9EF0 60               ld h,b
 389+ 9EF1 22 F7 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EF4 C9               ret
 391+ 9EF5
# file closed: Movimiento.asm
2089  9EF5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EF5              ; --------------------------------------------------------------------------------------
   2+ 9EF5              ;
   3+ 9EF5              ;   25/10/24
   4+ 9EF5              ;
   5+ 9EF5
   6+ 9EF5              Pinta_disparos_Entidades
   7+ 9EF5
   8+ 9EF5 ED 73 3D 8C      ld (Stack),sp
   9+ 9EF9 ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9EFD
  11+ 9EFD 3E 02            ld a,2
  12+ 9EFF 08               ex af,af
  13+ 9F00
  14+ 9F00 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F02              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F02              ;                                     _ No encontraría "0".
  17+ 9F02 FD E1        4 pop iy
  18+ 9F04 D1               pop de                          ; 1er .db IYL
  19+ 9F05              ;                                   ; 2º  .db IYH
  20+ 9F05              ;                                   ; 3er .db E.
  21+ 9F05              ;   Album vacío ???
  22+ 9F05
  23+ 9F05 FD 7D            ld a,iyl
  24+ 9F07 FD 84            add iyh
  25+ 9F09 83               add e
  26+ 9F0A 28 1F            jr z,1F
  27+ 9F0C
  28+ 9F0C              ;   Imprime album, (contiene datos).
  29+ 9F0C
  30+ 9F0C 3B               dec sp
  31+ 9F0D
  32+ 9F0D E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F0E
  34+ 9F0E              ; Imprime el 1er scanline del disparo.
  35+ 9F0E
  36+ 9F0E FD 7D            ld a,iyl
  37+ 9F10 AE               xor (hl)
  38+ 9F11 77               ld (hl),a
  39+ 9F12
  40+ 9F12 2C               inc l
  41+ 9F13
  42+ 9F13 FD 7C            ld a,iyh
  43+ 9F15 AE               xor (hl)
  44+ 9F16 77               ld (hl),a
  45+ 9F17
  46+ 9F17 2C               inc l
  47+ 9F18
  48+ 9F18 7B               ld a,e
  49+ 9F19 AE               xor (hl)
  50+ 9F1A 77               ld (hl),a
  51+ 9F1B
  52+ 9F1B              ; Imprime el 2º scanline del disparo.
  53+ 9F1B
  54+ 9F1B E1               pop hl
  55+ 9F1C
  56+ 9F1C FD 7D            ld a,iyl
  57+ 9F1E AE               xor (hl)
  58+ 9F1F 77               ld (hl),a
  59+ 9F20
  60+ 9F20 2C               inc l
  61+ 9F21
  62+ 9F21 FD 7C            ld a,iyh
  63+ 9F23 AE               xor (hl)
  64+ 9F24 77               ld (hl),a
  65+ 9F25
  66+ 9F25 2C               inc l
  67+ 9F26
  68+ 9F26 7B               ld a,e
  69+ 9F27 AE               xor (hl)
  70+ 9F28 77               ld (hl),a
  71+ 9F29
  72+ 9F29 10 D7            djnz 4B
  73+ 9F2B
  74+ 9F2B 08           1 ex af,af
  75+ 9F2C 3D               dec a
  76+ 9F2D 20 05            jr nz,2F
  77+ 9F2F
  78+ 9F2F ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F33 C9               ret
  80+ 9F34
  81+ 9F34 ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F38 08               ex af,af
  83+ 9F39 18 C5            jr 3B
  84+ 9F3B
  85+ 9F3B              ; --------------------------------------------------------------------------------------
  86+ 9F3B              ;
  87+ 9F3B              ;   30/10/24
  88+ 9F3B              ;
  89+ 9F3B
  90+ 9F3B              Motor_de_disparos_entidades
  91+ 9F3B
  92+ 9F3B 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F3E FE 07            cp 7
  94+ 9F40 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F41
  96+ 9F41 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F43 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F46
  99+ 9F46 CD F8 90     1 call Extrae_address
 100+ 9F49 1C               inc e
 101+ 9F4A 1C               inc e
 102+ 9F4B ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F4F
 104+ 9F4F               ; Caja vacía ???
 105+ 9F4F
 106+ 9F4F 2D               dec l
 107+ 9F50 7E               ld a,(hl)
 108+ 9F51 A7               and a
 109+ 9F52 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F54
 111+ 9F54              ; --- Trabajamos con caja:
 112+ 9F54
 113+ 9F54 2C               inc l
 114+ 9F55
 115+ 9F55              ; --- Existe posibilidad de impacto ???
 116+ 9F55
 117+ 9F55 CB 46            bit 0,(hl)
 118+ 9F57 C4 97 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F5A 20 37            jr nz,3F
 120+ 9F5C
 121+ 9F5C CD 1E A0         call Rota_disparo_si_procede
 122+ 9F5F
 123+ 9F5F              ; ------------------------------------------------------------
 124+ 9F5F
 125+ 9F5F 2D               dec l
 126+ 9F60 2D               dec l
 127+ 9F61
 128+ 9F61 CD F8 90         call Extrae_address
 129+ 9F64
 130+ 9F64              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F64              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F64
 133+ 9F64 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F67 CB 57            bit 2,a
 135+ 9F69 28 09            jr z,4F
 136+ 9F6B
 137+ 9F6B CB 97            res 2,a
 138+ 9F6D 32 67 8C         ld (Ctrl_5),a
 139+ 9F70 2C               inc l
 140+ 9F71 2C               inc l
 141+ 9F72 18 0C            jr 5F
 142+ 9F74
 143+ 9F74 CB 5F        4 bit 3,a
 144+ 9F76 28 08            jr z,5F
 145+ 9F78
 146+ 9F78 CB 9F            res 3,a
 147+ 9F7A 32 67 8C         ld (Ctrl_5),a
 148+ 9F7D 2D               dec l
 149+ 9F7E 2D               dec l
 150+ 9F7F 2D               dec l
 151+ 9F80
 152+ 9F80              ; ---------------------------------------------------------------------
 153+ 9F80
 154+ 9F80              ;! Velocidad del disparo de entidades.
 155+ 9F80
 156+ 9F80 CD B0 99     5 call NextScan
 157+ 9F83 CD B0 99         call NextScan
 158+ 9F86
 159+ 9F86              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9F86
 161+ 9F86 CD FB 9F         call Fin_de_disparo_de_entidad
 162+ 9F89
 163+ 9F89 EB               ex de,hl
 164+ 9F8A
 165+ 9F8A 73               ld (hl),e
 166+ 9F8B 23               inc hl
 167+ 9F8C 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9F8D
 169+ 9F8D 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9F90 18 02            jr 2F
 171+ 9F92
 172+ 9F92 C9               ret
 173+ 9F93
 174+ 9F93 EB           3 ex de,hl
 175+ 9F94 10 B0        2 djnz 1B
 176+ 9F96
 177+ 9F96 C9               ret
 178+ 9F97
 179+ 9F97              ; ------------- ------------- ------------
 180+ 9F97              ;
 181+ 9F97              ;   1/11/24
 182+ 9F97
 183+ 9F97              Comprueba_impacto_con_Amadeus
 184+ 9F97
 185+ 9F97              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9F97              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9F97
 188+ 9F97              ;   Modificamos registros, así que guardamos ...
 189+ 9F97
 190+ 9F97 C5               push bc
 191+ 9F98 E5               push hl
 192+ 9F99 D5               push de
 193+ 9F9A
 194+ 9F9A 2D               dec l
 195+ 9F9B 2D               dec l
 196+ 9F9C
 197+ 9F9C CD F8 90         call Extrae_address
 198+ 9F9F
 199+ 9F9F 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FA2 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FA3
 202+ 9FA3 7D               ld a,l
 203+ 9FA4 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FA6
 205+ 9FA6 06 03            ld b,3
 206+ 9FA8
 207+ 9FA8 B9           1 cp c
 208+ 9FA9 28 15            jr z,Coincidencia
 209+ 9FAB 0C               inc c
 210+ 9FAC 10 FA            djnz 1B
 211+ 9FAE
 212+ 9FAE 0D               dec c
 213+ 9FAF 0D               dec c
 214+ 9FB0 0D               dec c
 215+ 9FB1
 216+ 9FB1 3C               inc a
 217+ 9FB2 B9               cp c
 218+ 9FB3 28 0B            jr z,Coincidencia
 219+ 9FB5
 220+ 9FB5 3C               inc a
 221+ 9FB6 B9               cp c
 222+ 9FB7 28 07            jr z,Coincidencia
 223+ 9FB9
 224+ 9FB9 D1           2 pop de
 225+ 9FBA E1               pop hl
 226+ 9FBB C1               pop bc
 227+ 9FBC
 228+ 9FBC              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FBC
 230+ 9FBC CB 86            res 0,(hl)
 231+ 9FBE AF               xor a                       ; Z before RET.
 232+ 9FBF C9               ret
 233+ 9FC0
 234+ 9FC0              Coincidencia
 235+ 9FC0
 236+ 9FC0              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FC0              ;   Existe posibilidad de impacto.
 238+ 9FC0              ;   Vamos a averiguarlo ...
 239+ 9FC0
 240+ 9FC0 1D               dec e
 241+ 9FC1 1D               dec e
 242+ 9FC2 1D               dec e
 243+ 9FC3
 244+ 9FC3              ; DE en Puntero_objeto del disparo.
 245+ 9FC3              ; HL en Puntero_de_impresión del disparo.
 246+ 9FC3
 247+ 9FC3              ; Comparador:
 248+ 9FC3
 249+ 9FC3 06 03            ld b,3
 250+ 9FC5
 251+ 9FC5 1A           3 ld a,(de)
 252+ 9FC6 4F               ld c,a
 253+ 9FC7 A6               and (hl)
 254+ 9FC8 B9               cp c
 255+ 9FC9 20 06            jr nz,Amadeus_impactado
 256+ 9FCB
 257+ 9FCB 2C               inc l
 258+ 9FCC 1C               inc e
 259+ 9FCD
 260+ 9FCD 10 F6            djnz 3B
 261+ 9FCF
 262+ 9FCF 18 E8            jr 2B
 263+ 9FD1
 264+ 9FD1              Amadeus_impactado
 265+ 9FD1
 266+ 9FD1              ; Borramos disparo.
 267+ 9FD1
 268+ 9FD1 D1               pop de
 269+ 9FD2 E1               pop hl
 270+ 9FD3
 271+ 9FD3 E5               push hl
 272+ 9FD4 D5               push de
 273+ 9FD5
 274+ 9FD5 CD 89 A0         call Borra_6_bytes
 275+ 9FD8
 276+ 9FD8 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FDB 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9FDC
 279+ 9FDC              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9FDC
 281+ 9FDC 21 BB 89         ld hl,Impacto_Amadeus
 282+ 9FDF 36 01            ld (hl),1
 283+ 9FE1
 284+ 9FE1              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FE1              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FE1
 287+ 9FE1 3A BC 89         ld a,(p.imp.amadeus)
 288+ 9FE4 FE DE            cp $de
 289+ 9FE6 20 04            jr nz,1F
 290+ 9FE8
 291+ 9FE8 3D               dec a
 292+ 9FE9 32 BC 89         ld (p.imp.amadeus),a
 293+ 9FEC
 294+ 9FEC              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ 9FEC
 296+ 9FEC 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ 9FEF 21 BE 89         ld hl,Pamm_Amadeus
 298+ 9FF2
 299+ 9FF2 73               ld (hl),e
 300+ 9FF3 23               inc hl
 301+ 9FF4 72               ld (hl),d
 302+ 9FF5
 303+ 9FF5 D1               pop de
 304+ 9FF6 E1               pop hl
 305+ 9FF7 C1               pop bc
 306+ 9FF8
 307+ 9FF8 AF               xor a
 308+ 9FF9 3C               inc a               ; NZ before RET.
 309+ 9FFA C9               ret
 310+ 9FFB
 311+ 9FFB              ; ------------- ------------- ------------
 312+ 9FFB              ;
 313+ 9FFB              ;   31/10/24
 314+ 9FFB
 315+ 9FFB              Fin_de_disparo_de_entidad
 316+ 9FFB
 317+ 9FFB              ; Estamos en zona de Amadeus ??
 318+ 9FFB
 319+ 9FFB 7C               ld a,h
 320+ 9FFC FE 54            cp $54
 321+ 9FFE 38 0D            jr c,1F
 322+ A000
 323+ A000 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A001
 325+ A001 5D               ld e,l
 326+ A002 54               ld d,h
 327+ A003
 328+ A003 21 E0 57         ld hl,$57e0
 329+ A006 ED 52            sbc hl,de
 330+ A008
 331+ A008 38 6F            jr c,Elimina_disparo_entidad
 332+ A00A
 333+ A00A 6B               ld l,e
 334+ A00B 62               ld h,d
 335+ A00C
 336+ A00C D1               pop de
 337+ A00D
 338+ A00D 7C           1 ld a,h
 339+ A00E FE 50            cp $50
 340+ A010 D8               ret c
 341+ A011
 342+ A011 7D               ld a,l
 343+ A012 FE C0            cp $c0
 344+ A014 D8               ret c
 345+ A015
 346+ A015              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A015              ; Así podremos comprobar si hay colisión más adelante.
 348+ A015
 349+ A015 1C               inc e
 350+ A016 1C               inc e
 351+ A017
 352+ A017 EB               ex de,hl
 353+ A018 CB C6            set 0,(hl)
 354+ A01A EB               ex de,hl
 355+ A01B
 356+ A01B 1D               dec e
 357+ A01C 1D               dec e
 358+ A01D
 359+ A01D C9               ret
 360+ A01E
 361+ A01E              ; ----------------------------------------------------------
 362+ A01E              ;
 363+ A01E              ;   08/10/24
 364+ A01E
 365+ A01E              ;   Estructura de un disparo de entidades.
 366+ A01E
 367+ A01E              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A01E              ; 	defw 0											; Puntero de impresión.
 369+ A01E              ;	defw 0											; Control.
 370+ A01E
 371+ A01E              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A01E              ;   _de la entidad en el momento de disparar.
 373+ A01E
 374+ A01E              ;   El byte alto muestra la siguiente información:
 375+ A01E              ;
 376+ A01E              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A01E              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A01E              ;
 379+ A01E              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A01E              ;
 381+ A01E              ;                        10xx ..... Izquierda.
 382+ A01E              ;                        01xx ..... Derecha.
 383+ A01E              ;                        00xx ..... Recto.
 384+ A01E
 385+ A01E              Rota_disparo_si_procede
 386+ A01E
 387+ A01E              ;   Nos situamos en el byte alto de (Control).
 388+ A01E
 389+ A01E CB 76            bit 6,(hl)
 390+ A020 20 2D            jr nz,Rota_a_derecha
 391+ A022 CB 7E            bit 7,(hl)
 392+ A024 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A025
 394+ A025              Rota_a_izq
 395+ A025
 396+ A025 E5               push hl
 397+ A026
 398+ A026 7D               ld a,l
 399+ A027 D6 05            sub 5
 400+ A029 6F               ld l,a
 401+ A02A
 402+ A02A E5               push hl
 403+ A02B FD E1            pop iy
 404+ A02D
 405+ A02D A7               and a
 406+ A02E
 407+ A02E FD CB 02 16      rl (iy+02)
 408+ A032 FD CB 01 16      rl (iy+01)
 409+ A036 FD CB 00 16      rl (iy+00)
 410+ A03A
 411+ A03A 30 3B            jr nc,Exit
 412+ A03C
 413+ A03C              ; Desplazamiento completo hasta Carry.
 414+ A03C              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A03C
 416+ A03C FD 36 02 03      ld (iy+02),$03
 417+ A040 FD 36 01 00      ld (iy+01),$00
 418+ A044 FD 36 00 00      ld (iy+00),$00
 419+ A048
 420+ A048 21 67 8C         ld hl,Ctrl_5
 421+ A04B CB DE            set 3,(hl)
 422+ A04D
 423+ A04D 18 28            jr Exit
 424+ A04F
 425+ A04F              Rota_a_derecha
 426+ A04F
 427+ A04F E5               push hl
 428+ A050
 429+ A050 7D               ld a,l
 430+ A051 D6 05            sub 5
 431+ A053 6F               ld l,a
 432+ A054
 433+ A054 E5               push hl
 434+ A055 FD E1            pop iy
 435+ A057
 436+ A057 A7               and a
 437+ A058
 438+ A058 FD CB 00 1E      rr (iy+00)
 439+ A05C FD CB 01 1E      rr (iy+01)
 440+ A060 FD CB 02 1E      rr (iy+02)
 441+ A064
 442+ A064 30 11            jr nc,Exit
 443+ A066
 444+ A066              ; Desplazamiento completo hasta Carry.
 445+ A066              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A066
 447+ A066 FD 36 00 01      ld (iy+00),$01
 448+ A06A FD 36 01 80      ld (iy+01),$80
 449+ A06E FD 36 02 00      ld (iy+02),$00
 450+ A072
 451+ A072 21 67 8C         ld hl,Ctrl_5
 452+ A075 CB D6            set 2,(hl)
 453+ A077
 454+ A077 E1           Exit pop hl
 455+ A078 C9               ret
 456+ A079
 457+ A079              ; ------------ ----------- ------------
 458+ A079              ;
 459+ A079              ;   25/9/24
 460+ A079
 461+ A079              Elimina_disparo_entidad
 462+ A079
 463+ A079 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A07C 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A07D
 466+ A07D E1               pop hl
 467+ A07E E5               push hl
 468+ A07F
 469+ A07F 2C               inc l
 470+ A080 2C               inc l
 471+ A081
 472+ A081 CD 89 A0         call Borra_6_bytes
 473+ A084
 474+ A084 D1               pop de
 475+ A085
 476+ A085 21 00 00         ld hl,0
 477+ A088
 478+ A088 C9               ret
 479+ A089
 480+ A089              ; ----- ----- ----- ----- -----
 481+ A089
 482+ A089              Borra_6_bytes
 483+ A089
 484+ A089 16 06            ld d,6                                                    ; Contador
 485+ A08B AF               xor a                                                     ; Borrador
 486+ A08C 77           1 ld (hl),a
 487+ A08D 2D               dec l
 488+ A08E 15               dec d
 489+ A08F 20 FB            jr nz,1B
 490+ A091
 491+ A091 C9               ret
 492+ A092
 493+ A092              ; --------------------------------------------------------------------------------------
 494+ A092              ;
 495+ A092              ;   12/10/24
 496+ A092              ;
 497+ A092
 498+ A092              Genera_datos_de_impresion_disparos_Entidades
 499+ A092
 500+ A092 3E 07            ld a,7
 501+ A094 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A095
 503+ A095              ; ---------------
 504+ A095
 505+ A095              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A095
 507+ A095 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A098
 509+ A098 CD F8 90     1 call Extrae_address
 510+ A09B
 511+ A09B 13               inc de
 512+ A09C 13               inc de
 513+ A09D
 514+ A09D ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0A1
 516+ A0A1 2D               dec l
 517+ A0A2 7E               ld a,(hl)
 518+ A0A3 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0A4 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0A6
 521+ A0A6              ; ----- ----- ----- -----
 522+ A0A6
 523+ A0A6 2D               dec l
 524+ A0A7 CD F8 90         call Extrae_address
 525+ A0AA E5               push hl
 526+ A0AB
 527+ A0AB 1D               dec e
 528+ A0AC
 529+ A0AC EB               ex de,hl
 530+ A0AD
 531+ A0AD 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0AE 2D               dec l
 533+ A0AF 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0B0 2D               dec l
 535+ A0B1 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0B2
 537+ A0B2 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0B3
 539+ A0B3              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0B3
 541+ A0B3 FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0B7 FD 73 00         ld (iy+0),e
 543+ A0BA FD 70 01         ld (iy+1),b
 544+ A0BD FD 71 02         ld (iy+2),c
 545+ A0C0
 546+ A0C0 FD 75 03         ld (iy+3),l
 547+ A0C3 FD 74 04         ld (iy+4),h
 548+ A0C6
 549+ A0C6 CD B0 99         call NextScan
 550+ A0C9
 551+ A0C9 FD 75 05         ld (iy+5),l
 552+ A0CC FD 74 06         ld (iy+6),h
 553+ A0CF
 554+ A0CF FD E5            push iy
 555+ A0D1 E1               pop hl
 556+ A0D2
 557+ A0D2 3E 07            ld a,7
 558+ A0D4 85               add l
 559+ A0D5 6F               ld l,a
 560+ A0D6
 561+ A0D6 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0D9
 563+ A0D9              ; ----- ----- ----- -----
 564+ A0D9
 565+ A0D9              Situa_en_siguiente_caja
 566+ A0D9
 567+ A0D9 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0DA 3D               dec a
 569+ A0DB C8               ret z
 570+ A0DC
 571+ A0DC 08               ex af,af
 572+ A0DD 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A0E0 18 B6            jr 1B
 574+ A0E2
 575+ A0E2              ; --------------------------------------------------------------------------------------
 576+ A0E2              ;
 577+ A0E2              ;   12/10/24
 578+ A0E2              ;
 579+ A0E2
 580+ A0E2              Genera_disparo_de_entidad_maldosa
 581+ A0E2
 582+ A0E2              ;   Estructura de un disparo de entidades.
 583+ A0E2
 584+ A0E2              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A0E2              ; 	defw 0											; Puntero de impresión.
 586+ A0E2              ;	defw 0											; Control.
 587+ A0E2
 588+ A0E2              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A0E2              ;   _de la entidad en el momento de disparar.
 590+ A0E2
 591+ A0E2              ;   El byte de control muestra la siguiente información:
 592+ A0E2
 593+ A0E2              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A0E2              ;
 595+ A0E2              ;                        10xx ..... Izquierda.
 596+ A0E2              ;                        01xx ..... Derecha.
 597+ A0E2              ;                        00xx ..... Recto.
 598+ A0E2
 599+ A0E2              ;*  Exclusiones.
 600+ A0E2
 601+ A0E2              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A0E2              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A0E2
 604+ A0E2 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A0E5 A7               and a
 606+ A0E6 C8               ret z
 607+ A0E7
 608+ A0E7 3A F0 8B         ld a,(Coordenada_y)
 609+ A0EA A7               and a
 610+ A0EB C8               ret z
 611+ A0EC
 612+ A0EC 3D               dec a
 613+ A0ED C8               ret z
 614+ A0EE
 615+ A0EE FE 10            cp 16
 616+ A0F0 D0               ret nc
 617+ A0F1
 618+ A0F1              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A0F1              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A0F1              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A0F1
 622+ A0F1 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A0F4 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A0F5
 625+ A0F5              ;   Decrementa el numero de disparos de entidades.
 626+ A0F5
 627+ A0F5 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A0F8 35               dec (hl)
 629+ A0F9
 630+ A0F9 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A0FC
 632+ A0FC CD F8 90     1 call Extrae_address
 633+ A0FF
 634+ A0FF 13               inc de
 635+ A100 13               inc de
 636+ A101
 637+ A101 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A105
 639+ A105              ;   Comprobamos si la caja está vacía.
 640+ A105
 641+ A105 2D               dec l
 642+ A106 7E               ld a,(hl)
 643+ A107 A7               and a
 644+ A108 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A10A 2C               inc l
 646+ A10B
 647+ A10B              ;   Caja vacía, vamos a generar un disparo.
 648+ A10B              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A10B
 650+ A10B CD 2C A1         call Genera_byte_inclinacion
 651+ A10E
 652+ A10E 7E               ld a,(hl)
 653+ A10F 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A110
 655+ A110 2D               dec l
 656+ A111
 657+ A111 CD 48 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A114
 659+ A114 70               ld (hl),b
 660+ A115 2D               dec l
 661+ A116 71               ld (hl),c
 662+ A117
 663+ A117 2D               dec l
 664+ A118
 665+ A118              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A118
 667+ A118 FD 7E 02         ld a,(iy+02)
 668+ A11B 77               ld (hl),a
 669+ A11C 2D               dec l
 670+ A11D
 671+ A11D FD 7E 01         ld a,(iy+01)
 672+ A120 77               ld (hl),a
 673+ A121 2D               dec l
 674+ A122
 675+ A122 FD 7E 00         ld a,(iy+00)
 676+ A125 77               ld (hl),a
 677+ A126
 678+ A126 C9               ret
 679+ A127
 680+ A127              ;   --- --- ---
 681+ A127
 682+ A127              Situa_en_siguiente_disparo
 683+ A127
 684+ A127 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A12A 18 D0            jr 1B
 686+ A12C
 687+ A12C              ; --------------------------------------------------------------------------------------
 688+ A12C              ;
 689+ A12C              ;   09/10/24
 690+ A12C              ;
 691+ A12C
 692+ A12C              Genera_byte_inclinacion
 693+ A12C
 694+ A12C              ; Determina tendencia del disparo.
 695+ A12C
 696+ A12C 3A B8 89         ld a,(CX_Amadeus)
 697+ A12F 47               ld b,a
 698+ A130 3A EF 8B         ld a,(Coordenada_X)
 699+ A133 90               sub b
 700+ A134 38 07            jr c,Disparo_a_derecha
 701+ A136
 702+ A136 FE 06        Disparo_a_izquierda cp 6
 703+ A138
 704+ A138 D8               ret c
 705+ A139 C8               ret z
 706+ A13A
 707+ A13A CB FE            set 7,(hl)
 708+ A13C C9               ret
 709+ A13D
 710+ A13D 47           Disparo_a_derecha ld b,a
 711+ A13E 3E FF            ld a,$ff
 712+ A140 90               sub b
 713+ A141
 714+ A141 FE 05            cp 5
 715+ A143
 716+ A143 D8               ret c
 717+ A144 C8               ret z
 718+ A145
 719+ A145 CB F6            set 6,(hl)
 720+ A147 C9               ret
 721+ A148
 722+ A148              ; --------------------------------------------------------------------------------------
 723+ A148              ;
 724+ A148              ;   09/10/24
 725+ A148              ;
 726+ A148
 727+ A148              Modifica_puntero_de_impresion
 728+ A148
 729+ A148              ;   Puntero de impresión del disparo en BC.
 730+ A148
 731+ A148 E5               push hl
 732+ A149
 733+ A149 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A14C CD B0 99         call NextScan
 735+ A14F
 736+ A14F 4D               ld c,l
 737+ A150 44               ld b,h
 738+ A151
 739+ A151 E1               pop hl
 740+ A152
 741+ A152 08               ex af,af
 742+ A153 CB 77            bit 6,a
 743+ A155 28 06            jr z,1F
 744+ A157
 745+ A157 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A15B 0C               inc c
 747+ A15C C9               ret
 748+ A15D
 749+ A15D CB 7F        1 bit 7,a
 750+ A15F 28 F6            jr z,2B
 751+ A161
 752+ A161 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A165 0D               dec c
 754+ A166
 755+ A166 C9               ret
 756+ A167
 757+ A167              ; --------------------------------------------------------------------------------------
 758+ A167              ;
 759+ A167              ;   31/08/24
 760+ A167              ;
 761+ A167
 762+ A167              Compara_con_coordenadas_de_disparo
 763+ A167
 764+ A167 3A F0 8B         ld a,(Coordenada_y)
 765+ A16A 47               ld b,a
 766+ A16B 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A16E 90               sub b
 768+ A16F
 769+ A16F              ; A = "0" ok
 770+ A16F              ; A = "1" ok
 771+ A16F
 772+ A16F 28 08            jr z,Comprueba_coordenada_X
 773+ A171 3D               dec a
 774+ A172 28 05            jr z,Comprueba_coordenada_X
 775+ A174
 776+ A174              ; A = "$ff" ok
 777+ A174
 778+ A174 FE FE            cp $fe
 779+ A176 28 01            jr z,Comprueba_coordenada_X
 780+ A178
 781+ A178 C9               ret
 782+ A179
 783+ A179              Comprueba_coordenada_X
 784+ A179
 785+ A179 3A EF 8B         ld a,(Coordenada_X)
 786+ A17C 47               ld b,a
 787+ A17D 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A180 7E               ld a,(hl)
 789+ A181 90               sub b
 790+ A182
 791+ A182              ; A = "0" ok
 792+ A182              ; A = "1" ok
 793+ A182
 794+ A182 28 09            jr z,Activa_Impacto_en_entidad
 795+ A184 3D               dec a
 796+ A185 28 06            jr z,Activa_Impacto_en_entidad
 797+ A187
 798+ A187              ; A = "2" ok
 799+ A187
 800+ A187 3D               dec a
 801+ A188 28 03            jr z,Activa_Impacto_en_entidad
 802+ A18A
 803+ A18A              ; A = "$ff"
 804+ A18A
 805+ A18A FE FD            cp $fd
 806+ A18C C0               ret nz
 807+ A18D
 808+ A18D              Activa_Impacto_en_entidad
 809+ A18D
 810+ A18D              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A18D
 812+ A18D 3E 02            ld a,2
 813+ A18F 32 F2 8B         ld (Impacto),a
 814+ A192
 815+ A192              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A192
 817+ A192 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A195 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A198
 820+ A198 73               ld (hl),e
 821+ A199 23               inc hl
 822+ A19A 72               ld (hl),d
 823+ A19B
 824+ A19B              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A19B
 826+ A19B 21 6C 8C         ld hl,Impacto2
 827+ A19E CB 9E            res 3,(hl)
 828+ A1A0
 829+ A1A0 C9               ret
 830+ A1A1
 831+ A1A1              ; --------------------------------------------------------------------------------------
 832+ A1A1              ;
 833+ A1A1              ;   13/10/24
 834+ A1A1              ;
 835+ A1A1
 836+ A1A1              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1A1
 838+ A1A1              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1A1
 840+ A1A1 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1A4 06 06            ld b,6
 842+ A1A6 AF               xor a
 843+ A1A7 77           1 ld (hl),a
 844+ A1A8 2C               inc l
 845+ A1A9 10 FC            djnz 1B
 846+ A1AB
 847+ A1AB C9               ret
 848+ A1AC
 849+ A1AC              ; --------------------------------------------------------------------------------------
 850+ A1AC              ;
 851+ A1AC              ;   29/09/24
 852+ A1AC              ;
 853+ A1AC
 854+ A1AC              Calcula_bytes_pintado_disparos
 855+ A1AC
 856+ A1AC 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1AF 45               ld b,l
 858+ A1B0 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1B3 7D               ld a,l
 860+ A1B4
 861+ A1B4 90               sub b
 862+ A1B5 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1B8
 864+ A1B8 C9               ret
 865+ A1B9
 866+ A1B9              ; --------------------------------------------------------------------------------------
 867+ A1B9              ;
 868+ A1B9              ;   26/10/24
 869+ A1B9              ;
 870+ A1B9              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1B9              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1B9              ;   _disparos que el álbum del FRAME actual).
 873+ A1B9
 874+ A1B9              Limpia_album_de_pintado_disparos_entidades
 875+ A1B9
 876+ A1B9 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1BC 7E               ld a,(hl)
 878+ A1BD 2D               dec l
 879+ A1BE 46               ld b,(hl)
 880+ A1BF 90               sub b
 881+ A1C0
 882+ A1C0 D8               ret c
 883+ A1C1 C8               ret z
 884+ A1C2
 885+ A1C2 F5               push af
 886+ A1C3 80               add b
 887+ A1C4 77               ld (hl),a
 888+ A1C5 F1               pop af
 889+ A1C6
 890+ A1C6              ; Clean.
 891+ A1C6
 892+ A1C6 47           2 ld b,a
 893+ A1C7 AF               xor a
 894+ A1C8 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1CB 77           1 ld (hl),a
 896+ A1CC 23               inc hl
 897+ A1CD 10 FC            djnz 1B
 898+ A1CF
 899+ A1CF C9               ret
 900+ A1D0
 901+ A1D0              ; --------------------------------------------------------------------------------------
 902+ A1D0              ;
 903+ A1D0              ;   29/09/24
 904+ A1D0              ;
 905+ A1D0
 906+ A1D0              Motor_Disparos_Amadeus
 907+ A1D0
 908+ A1D0 21 26 89         ld hl,Disparo_Amad+1
 909+ A1D3
 910+ A1D3 34               inc (hl)
 911+ A1D4 35               dec (hl)
 912+ A1D5
 913+ A1D5 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1D6
 915+ A1D6              ;   Esta caja contiene un disparo.
 916+ A1D6
 917+ A1D6 CD DD A1         call Consulta_Impacto
 918+ A1D9 CC F6 A1         call z,Mueve_disparo_Amadeus
 919+ A1DC
 920+ A1DC C9               ret
 921+ A1DD
 922+ A1DD              ; ----------------------
 923+ A1DD              ;
 924+ A1DD              ;
 925+ A1DD              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A1DD              ;
 927+ A1DD              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A1DD
 929+ A1DD
 930+ A1DD              Consulta_Impacto
 931+ A1DD
 932+ A1DD              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A1DD              ;   _sea lo más coherente posible.
 934+ A1DD
 935+ A1DD E5               push hl
 936+ A1DE 2B               dec hl
 937+ A1DF CD D2 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A1E2 E1               pop hl
 939+ A1E3 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A1E4
 941+ A1E4 C8               ret z
 942+ A1E5
 943+ A1E5 3A 6C 8C         ld a,(Impacto2)
 944+ A1E8 CB DF            set 3,a
 945+ A1EA 32 6C 8C         ld (Impacto2),a
 946+ A1ED
 947+ A1ED E5               push hl
 948+ A1EE CD BF A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A1F1 E1               pop hl
 950+ A1F2 CD 0F A2         call Elimina_disparo_Amadeus
 951+ A1F5
 952+ A1F5 C9               ret
 953+ A1F6
 954+ A1F6              ; ----------------------
 955+ A1F6              ;
 956+ A1F6              ;
 957+ A1F6              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A1F6
 959+ A1F6              Mueve_disparo_Amadeus
 960+ A1F6
 961+ A1F6 CD F8 90         call Extrae_address
 962+ A1F9
 963+ A1F9 CD BF 99         call PreviousScan
 964+ A1FC CD BF 99         call PreviousScan
 965+ A1FF CD BF 99         call PreviousScan
 966+ A202 CD BF 99         call PreviousScan
 967+ A205
 968+ A205              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A205
 970+ A205 7C               ld a,h
 971+ A206 D6 40            sub $40
 972+ A208 EB               ex de,hl
 973+ A209 38 04            jr c,Elimina_disparo_Amadeus
 974+ A20B
 975+ A20B               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A20B
 977+ A20B 73               ld (hl),e
 978+ A20C 23               inc hl
 979+ A20D 72               ld (hl),d
 980+ A20E
 981+ A20E C9               ret
 982+ A20F
 983+ A20F              ; ----------------------
 984+ A20F              ;
 985+ A20F              ;   29/9/24
 986+ A20F
 987+ A20F              Elimina_disparo_Amadeus
 988+ A20F
 989+ A20F              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A20F              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A20F
 992+ A20F              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A20F              ;   	defw 0											; Puntero de impresión.
 994+ A20F
 995+ A20F 2B               dec hl
 996+ A210 2B               dec hl
 997+ A211
 998+ A211 AF               xor a
 999+ A212 77               ld (hl),a
1000+ A213 23               inc hl
1001+ A214 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A215
1003+ A215 23               inc hl
1004+ A216 77               ld (hl),a
1005+ A217 23               inc hl
1006+ A218 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A219
1008+ A219 3E 01            ld a,1
1009+ A21B 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A21E
1011+ A21E CD A1 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A221
1013+ A221 AF               xor a
1014+ A222 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A223
1016+ A223 C9               ret
1017+ A224
1018+ A224              ; --------------------------------------------------------------------------------------
1019+ A224              ;
1020+ A224              ;   13/10/24
1021+ A224              ;
1022+ A224
1023+ A224              Pinta_disparos_Amadeus
1024+ A224
1025+ A224 06 02            ld b,2
1026+ A226 ED 73 3D 8C      ld (Stack),sp
1027+ A22A ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A22E D1           3 pop de
1029+ A22F 14               inc d
1030+ A230 15               dec d
1031+ A231 28 1C            jr z,1F
1032+ A233 E1               pop hl
1033+ A234
1034+ A234              Imprime_scanlines_en_pantalla
1035+ A234
1036+ A234              ; 1er scanline
1037+ A234
1038+ A234 1A               ld a,(de)
1039+ A235 AE               xor (hl)
1040+ A236 77               ld (hl),a
1041+ A237
1042+ A237 1C               inc e
1043+ A238 2C               inc l
1044+ A239
1045+ A239 1A               ld a,(de)
1046+ A23A AE               xor (hl)
1047+ A23B 77               ld (hl),a
1048+ A23C
1049+ A23C 1D               dec e
1050+ A23D E1               pop hl
1051+ A23E
1052+ A23E              ; 2º scanline
1053+ A23E
1054+ A23E 1A               ld a,(de)
1055+ A23F AE               xor (hl)
1056+ A240 77               ld (hl),a
1057+ A241
1058+ A241 1C               inc e
1059+ A242 2C               inc l
1060+ A243
1061+ A243 1A               ld a,(de)
1062+ A244 AE               xor (hl)
1063+ A245 77               ld (hl),a
1064+ A246
1065+ A246 1D               dec e
1066+ A247
1067+ A247 18 06            jr 1F
1068+ A249
1069+ A249 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A24D 18 DF            jr 3B
1071+ A24F 10 F8        1 djnz 2B
1072+ A251 ED 7B 3D 8C      ld sp,(Stack)
1073+ A255 C9               ret
1074+ A256
1075+ A256              ; --------------------------------------------------------------------------------------
1076+ A256              ;
1077+ A256              ;   13/10/24
1078+ A256              ;
1079+ A256              ;   Modifica: HL,BC y DE.
1080+ A256
1081+ A256
1082+ A256              Genera_datos_de_impresion_disparos_Amadeus
1083+ A256
1084+ A256 ED 73 3D 8C      ld (Stack),sp
1085+ A25A 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A25D D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A25E
1088+ A25E 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A25F 15               dec d
1090+ A260
1091+ A260 28 0E            jr z,Salida
1092+ A262
1093+ A262              Genera_scanlines_de_disparo_Amadeus
1094+ A262
1095+ A262 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A263              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A263 ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A267
1099+ A267 C1               pop bc
1100+ A268 C1               pop bc
1101+ A269 C1               pop bc
1102+ A26A
1103+ A26A E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A26B CD BF 99         call PreviousScan
1105+ A26E E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A26F D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A270
1108+ A270              Salida
1109+ A270
1110+ A270 ED 7B 3D 8C      ld sp,(Stack)
1111+ A274
1112+ A274 C9               ret
1113+ A275
1114+ A275              ; --------------------------------------------------------------------------------------
1115+ A275              ;
1116+ A275              ;   12/09/24
1117+ A275              ;
1118+ A275
1119+ A275              Genera_disparo_Amadeus
1120+ A275
1121+ A275              ;*  Exclusiones.
1122+ A275
1123+ A275 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A278 A7               and a
1125+ A279 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A27A
1127+ A27A 3D               dec a
1128+ A27B 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A27E
1130+ A27E              Define_puntero_objeto_disparo
1131+ A27E
1132+ A27E              ;   Inicializamos contador.
1133+ A27E
1134+ A27E 06 00            ld b,0
1135+ A280
1136+ A280 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A283 2C               inc l
1138+ A284
1139+ A284 3E 80            ld a,$80
1140+ A286 BE               cp (hl)
1141+ A287 28 0D            jr z,1F
1142+ A289
1143+ A289 04               inc b
1144+ A28A
1145+ A28A 3E 60            ld a,$60
1146+ A28C BE               cp (hl)
1147+ A28D 28 07            jr z,1F
1148+ A28F
1149+ A28F
1150+ A28F 04               inc b
1151+ A290
1152+ A290 3E 18            ld a,$18
1153+ A292 BE               cp (hl)
1154+ A293 28 01            jr z,1F
1155+ A295
1156+ A295 04               inc b
1157+ A296
1158+ A296              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A296
1160+ A296              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A296
1162+ A296 CD BF 99     1 call PreviousScan
1163+ A299
1164+ A299 78               ld a,b
1165+ A29A CB 3F            srl a
1166+ A29C 28 03            jr z,4F
1167+ A29E
1168+ A29E              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A29E E5               push hl
1170+ A29F 18 02            jr 5F
1171+ A2A1 2D           4 dec l
1172+ A2A2 E5               push hl
1173+ A2A3              ; ---
1174+ A2A3
1175+ A2A3              ;   Calcula el Puntero_objeto del disparo.
1176+ A2A3
1177+ A2A3 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2A6 04               inc b
1179+ A2A7 05               dec b
1180+ A2A8 28 04            jr z,2F
1181+ A2AA
1182+ A2AA              ;   Nos desplazamos por el índice de disparos.
1183+ A2AA
1184+ A2AA 2C           3 inc l
1185+ A2AB 2C               inc l
1186+ A2AC 10 FC            djnz 3B
1187+ A2AE
1188+ A2AE              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2AE CD F8 90     2 call Extrae_address
1190+ A2B1 E5               push hl
1191+ A2B2              ; ---
1192+ A2B2
1193+ A2B2              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2B2              ; HL en el 1er .db de la caja.
1195+ A2B2
1196+ A2B2 21 25 89         ld hl,Disparo_Amad
1197+ A2B5
1198+ A2B5 06 02            ld b,2
1199+ A2B7
1200+ A2B7 D1           6 pop de
1201+ A2B8 73               ld (hl),e
1202+ A2B9 23               inc hl
1203+ A2BA 72               ld (hl),d
1204+ A2BB 23               inc hl
1205+ A2BC
1206+ A2BC 10 F9            djnz 6B
1207+ A2BE
1208+ A2BE C9               ret
1209+ A2BF
1210+ A2BF              Genera_coordenadas_de_disparo_Amadeus
1211+ A2BF
1212+ A2BF              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2BF              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2BF              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2BF
1216+ A2BF CD F8 90         call Extrae_address
1217+ A2C2 CD B6 94         call Genera_coordenadas
1218+ A2C5
1219+ A2C5 3D               dec a
1220+ A2C6
1221+ A2C6 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2C9 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2CA 23               inc hl
1224+ A2CB 3A EF 8B         ld a,(Coordenada_X)
1225+ A2CE 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2CF
1227+ A2CF AF               xor a
1228+ A2D0 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2D1
1230+ A2D1 C9               ret
1231+ A2D2
1232+ A2D2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2D2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2D2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2D2
1236+ A2D2              ; ----------------------------------------------
1237+ A2D2              ;
1238+ A2D2              ;   27/08/24
1239+ A2D2              ;
1240+ A2D2              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2D2              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2D2
1243+ A2D2              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2D2
1245+ A2D2              Extraccion_de_datos
1246+ A2D2
1247+ A2D2 13               inc de
1248+ A2D3 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2D4
1250+ A2D4 5E               ld e,(hl)
1251+ A2D5 23               inc hl
1252+ A2D6 56               ld d,(hl)
1253+ A2D7
1254+ A2D7 23               inc hl
1255+ A2D8
1256+ A2D8 4E               ld c,(hl)
1257+ A2D9 23               inc hl
1258+ A2DA 46               ld b,(hl)
1259+ A2DB
1260+ A2DB C5               push bc
1261+ A2DC E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A2DD
1263+ A2DD              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A2DD
1265+ A2DD CD BF 99         call PreviousScan
1266+ A2E0 CD BF 99         call PreviousScan
1267+ A2E3
1268+ A2E3              Detecta_impacto_
1269+ A2E3
1270+ A2E3 1A               ld a,(de)
1271+ A2E4 A6               and (hl)
1272+ A2E5 C0               ret nz
1273+ A2E6
1274+ A2E6 13               inc de
1275+ A2E7 23               inc hl
1276+ A2E8
1277+ A2E8 1A               ld a,(de)
1278+ A2E9 A6               and (hl)
1279+ A2EA C9               ret
1280+ A2EB
1281+ A2EB              ; -------------------------------------------------------------------------------------------------------------
1282+ A2EB              ;
1283+ A2EB              ;   8/8/24
1284+ A2EB              ;
1285+ A2EB              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A2EB              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A2EB              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A2EB              ;
1289+ A2EB              ;   MODIFICA: HL,DE,BC y A.
1290+ A2EB              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A2EB              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A2EB
1293+ A2EB              Colision_Entidad_Amadeus
1294+ A2EB
1295+ A2EB              ; Posible contacto de entidad con Amadeus. ?????
1296+ A2EB
1297+ A2EB              ; Exclusiones:
1298+ A2EB
1299+ A2EB 3A 8F 8C         ld a,(Shield)
1300+ A2EE A7               and a
1301+ A2EF C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A2F0
1303+ A2F0 21 65 8C         ld hl,Ctrl_3
1304+ A2F3 CB 76            bit 6,(hl)
1305+ A2F5 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A2F6
1307+ A2F6 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A2F9 CB 56            bit 2,(hl)
1309+ A2FB C0               ret nz
1310+ A2FC
1311+ A2FC 3A F0 8B     	ld a,(Coordenada_y)
1312+ A2FF FE 14        	cp $14
1313+ A301 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A302
1315+ A302 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A305 A7               and a
1317+ A306 C0               ret nz
1318+ A307
1319+ A307              Genera_coordenadas_X
1320+ A307
1321+ A307              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A307              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A307
1324+ A307              ;   Limpiamos almacenes.
1325+ A307
1326+ A307              ;    call Limpia_Coordenadas_X
1327+ A307
1328+ A307              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A307
1330+ A307 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A30A 3A EF 8B         ld a,(Coordenada_X)
1332+ A30D CD 2F A3         call Guarda_coordenadas_X
1333+ A310
1334+ A310              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A310
1336+ A310 3A B8 89         ld a,(CX_Amadeus)
1337+ A313 CD 2F A3         call Guarda_coordenadas_X
1338+ A316 CD 43 A3         call Compara_coordenadas_X
1339+ A319 C0               ret nz
1340+ A31A
1341+ A31A 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A31C 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A31F
1344+ A31F 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A322 2C               inc l
1346+ A323 2C               inc l
1347+ A324 2C               inc l
1348+ A325 2C               inc l
1349+ A326 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A329
1351+ A329 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A32C CB D6            set 2,(hl)
1353+ A32E
1354+ A32E C9               ret
1355+ A32F
1356+ A32F               ; ----- ----- ----- ----- -----
1357+ A32F
1358+ A32F 77           Guarda_coordenadas_X ld (hl),a
1359+ A330 3C               inc a
1360+ A331 2C               inc l
1361+ A332 77               ld (hl),a
1362+ A333 3C               inc a
1363+ A334 2C               inc l
1364+ A335 77               ld (hl),a
1365+ A336 2C               inc l
1366+ A337 C9               ret
1367+ A338
1368+ A338 AF           Limpia_Coordenadas_X xor a
1369+ A339 06 06            ld b,6
1370+ A33B 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A33E 77           1 ld (hl),a
1372+ A33F 23               inc hl
1373+ A340 10 FC            djnz 1B
1374+ A342 C9               ret
1375+ A343
1376+ A343              ; ----- ----- ----- ----- -----
1377+ A343
1378+ A343              Compara_coordenadas_X
1379+ A343
1380+ A343 DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A347 DD 7E 00         ld a,(ix+0)
1382+ A34A CD 58 A3         call Comparando
1383+ A34D C8               ret z
1384+ A34E
1385+ A34E 3C               inc a
1386+ A34F CD 67 A3         call Comparando_1
1387+ A352 C8               ret z
1388+ A353
1389+ A353 3C               inc a
1390+ A354 CD 67 A3         call Comparando_1
1391+ A357 C9               ret
1392+ A358
1393+ A358              ; ----- ----- ----- ----- -----
1394+ A358              ;
1395+ A358              ;   4/12/23
1396+ A358              ;
1397+ A358              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A358
1399+ A358              Comparando
1400+ A358
1401+ A358 DD 2C            inc ixl
1402+ A35A DD 2C            inc ixl
1403+ A35C DD 2C            inc ixl
1404+ A35E
1405+ A35E DD 46 00         ld b,(ix+0)
1406+ A361 DD 4E 01         ld c,(ix+1)
1407+ A364 DD 56 02         ld d,(ix+2)
1408+ A367
1409+ A367 B8           Comparando_1 cp b
1410+ A368 C8               ret z
1411+ A369 B9               cp c
1412+ A36A C8               ret z
1413+ A36B BA               cp d
1414+ A36C C9               ret
1415+ A36D
1416+ A36D              ; -----------------------------------------------------------------------
1417+ A36D              ;
1418+ A36D              ;   04/7/24
1419+ A36D              ;
1420+ A36D
1421+ A36D              Detecta_colision_nave_entidad
1422+ A36D
1423+ A36D              ; Exclusiones:
1424+ A36D
1425+ A36D              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A36D
1427+ A36D 21 6C 8C     	ld hl,Impacto2
1428+ A370 CB 56        	bit 2,(hl)
1429+ A372 C8           	ret z
1430+ A373
1431+ A373              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A373
1433+ A373 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A376 CD F8 90         call Extrae_address
1435+ A379 54               ld d,h
1436+ A37A 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A37B
1438+ A37B 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A37E 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A380 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A383
1442+ A383 C5           1 push bc
1443+ A384 06 03            ld b,3
1444+ A386 E5               push hl
1445+ A387
1446+ A387              ; .db
1447+ A387
1448+ A387 1A           3 ld a,(de)
1449+ A388 A7               and a
1450+ A389 20 03            jr nz,4F
1451+ A38B
1452+ A38B 2C               inc l
1453+ A38C 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A38E
1455+ A38E ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A390 28 04            jr z,2F
1457+ A392
1458+ A392              ; Impacto.
1459+ A392 FD 2D            dec iyl
1460+ A394 28 22            jr z,5F
1461+ A396
1462+ A396 1C           2 inc e
1463+ A397 10 EE            djnz 3B
1464+ A399
1465+ A399 E1               pop hl
1466+ A39A
1467+ A39A              ; Hay salto de línea en el puntero de impresión ???
1468+ A39A
1469+ A39A 7C               ld a,h
1470+ A39B D6 57            sub $57
1471+ A39D 20 0A            jr nz,6F
1472+ A39F
1473+ A39F              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A39F
1475+ A39F 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A3A2 3E 20            ld a,$20
1477+ A3A4 A7               and a
1478+ A3A5 85               add l
1479+ A3A6 6F               ld l,a
1480+ A3A7 18 01            jr 7F
1481+ A3A9
1482+ A3A9 24           6 inc h
1483+ A3AA
1484+ A3AA C1           7 pop bc
1485+ A3AB 10 D6            djnz 1B
1486+ A3AD
1487+ A3AD              ;   Fin de la comparativa.
1488+ A3AD
1489+ A3AD              ;   NO HAY COLISIÓN !!!!!.
1490+ A3AD              ;
1491+ A3AD              ;   .db (Impacto) de Amadeus a "0".
1492+ A3AD              ;   RES el bit2 de (Impacto2).
1493+ A3AD              ;
1494+ A3AD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3AD              ;   Lo colocamos a "0".
1496+ A3AD
1497+ A3AD 21 6C 8C         ld hl,Impacto2
1498+ A3B0 CB 96            res 2,(hl)
1499+ A3B2 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3B5 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3B7 C9               ret
1502+ A3B8
1503+ A3B8              ;   COLISIÓN !!!!!.
1504+ A3B8              ;
1505+ A3B8              ;   .db (Impacto) de Amadeus a "1".
1506+ A3B8              ;   SET el bit3 de (Impacto2).
1507+ A3B8              ;
1508+ A3B8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3B8
1510+ A3B8 E1           5 pop hl
1511+ A3B9 C1               pop bc
1512+ A3BA
1513+ A3BA 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3BD 36 01            ld (hl),1
1515+ A3BF 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3C2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3C4
1518+ A3C4 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3C7 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3CA
1521+ A3CA 23               inc hl
1522+ A3CB 23               inc hl
1523+ A3CC 23               inc hl
1524+ A3CD
1525+ A3CD 73               ld (hl),e
1526+ A3CE 23               inc hl
1527+ A3CF 72               ld (hl),d
1528+ A3D0
1529+ A3D0              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3D0
1531+ A3D0 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3D3 21 BE 89         ld hl,Pamm_Amadeus
1533+ A3D6
1534+ A3D6 73               ld (hl),e
1535+ A3D7 23               inc hl
1536+ A3D8 72               ld (hl),d
1537+ A3D9
1538+ A3D9 C9               ret
1539+ A3DA
1540+ A3DA
1541+ A3DA
# file closed: Disparo.asm
2090  A3DA
2091  A3DA              	SAVESNA "Pruebas.sna", START
2092  A3DA
2093  A3DA
2094  A3DA
2095  A3DA
# file closed: Banco_de_pruebas.asm
