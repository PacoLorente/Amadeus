# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 6F 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD D2 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD A3 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 99 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD BA 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 97 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 97 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9A 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD D8 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 EB 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 0F           Nivel_1 db 15									; Nº de entidades.
  16+ 8BDC 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BE0 01
  17+ 8BE1 01 01 01 01  	db 1,1,1,1,1
  17+ 8BE5 01
  18+ 8BE6 01 01 01 01  	db 1,1,1,1,1
  18+ 8BEA 01
  19+ 8BEB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BEC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 8BF0 01 02
  21+ 8BF2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8BF6 01 02
  22+ 8BF8
# file closed: Niveles.asm
 150  8BF8
 151  8BF8              ; --------------------------------------------------------------------------------
 152  8BF8              ;
 153  8BF8              ; 12/05/24
 154  8BF8              ;
 155  8BF8              ; Parámetros DRAW.
 156  8BF8              ;
 157  8BF8
 158  8BF8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BF8
 160  8BF8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BF9              ;															- Patrón de movimiento.
 162  8BF9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BFB
 165  8BFB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BFC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BFC
 168  8BFC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BFC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BFC              ; Ejemplos.
 171  8BFC
 172  8BFC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BFC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BFC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BFC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BFC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BFC
 178  8BFC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BFD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BFD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BFD
 182  8BFD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BFF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BFF
 185  8BFF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C01
 187  8C01              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C01
 189  8C01 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C03              ;														; _palabras que componen el "movimiento_masticado".
 191  8C03
 192  8C03              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C03
 194  8C03 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C04              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C04              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C04              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C04              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C04
 200  8C04 00           Ctrl_2 db 0
 201  8C05              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C05              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C05              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C05              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C05              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C05              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C05              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C05              ;
 209  8C05              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C05              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C05              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C05              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C05              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C05              ;														BIT 4, ???
 215  8C05              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C05
 217  8C05 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C06              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C06              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C06              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C06              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C06              ;
 223  8C06              ; 														DESCRIPCIÖN:
 224  8C06              ;
 225  8C06              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C06              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C06              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C06              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C06              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C06              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C06              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C06              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C06              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C06              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C06              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C06              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C06              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C06              ;
 239  8C06              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C06              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C06              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C06
 243  8C06              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C06
 245  8C06 00           Filas db 0												; Filas. [DRAW]
 246  8C07 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C08 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C0C
 250  8C0C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C0C
 252  8C0C 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C0D              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C0D              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C0D
 256  8C0D              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C0D
 258  8C0D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C0D              ;
 260  8C0D              ;	COLORES: 0 ..... NEGRO
 261  8C0D              ;    		 1 ..... AZUL
 262  8C0D              ; 			 2 ..... ROJO
 263  8C0D              ;			 3 ..... MAGENTA
 264  8C0D              ; 			 4 ..... VERDE
 265  8C0D              ; 			 5 ..... CIAN
 266  8C0D              ;			 6 ..... AMARILLO
 267  8C0D              ; 			 7 ..... BLANCO
 268  8C0D
 269  8C0D 00 00        Indice_Sprite_der defw 0
 270  8C0F 00 00        Indice_Sprite_izq defw 0
 271  8C11 00 00        Puntero_DESPLZ_der defw 0
 272  8C13 00 00        Puntero_DESPLZ_izq defw 0
 273  8C15
 274  8C15 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C17 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C18 00           Columnas db 0
 277  8C19 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C1B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C1B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C1C
 281  8C1C              ; variables de control general.
 282  8C1C
 283  8C1C 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C1D
 285  8C1D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C1D
 287  8C1D              Perfiles_de_velocidad
 288  8C1D
 289  8C1D 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C1E 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C1F 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C20 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C21
 294  8C21              ; Contadores de 16 bits.
 295  8C21
 296  8C21 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C23 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C25 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C27 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C29
 301  8C29              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C29
 303  8C29 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C2B 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C2D 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C2F              ;
 307  8C2F              ;
 308  8C2F 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C30              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C30              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C30 00           Incrementa_puntero_backup db 0
 312  8C31 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C32              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C32 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C33 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C34 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C35              ;
 318  8C35              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C35              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C35              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C35              ;
 322  8C35              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C35              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C35              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C35              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C35              ;
 327  8C35              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C35              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C35              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C35
 331  8C35 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C36
 333  8C36              ;														DESCRIPCIÓN:
 334  8C36              ;
 335  8C36              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C36              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C36              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C36              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C36              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C36              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C36
 342  8C36              ;														BIT 3, Recarga de nueva oleada.
 343  8C36              ;														BIT 4, Recarga de nueva oleada.
 344  8C36              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C36              ;														BIT 6, **** Frame completo.
 346  8C36              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C36
 348  8C36 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C38              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C38              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C38              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C38
 353  8C38              ; Gestión de ENTIDADES y CAJAS.
 354  8C38
 355  8C38 00 00        Puntero_store_caja defw 0
 356  8C3A 00 00        Puntero_restore_caja defw 0
 357  8C3C 00 00        Indice_restore_caja defw 0
 358  8C3E 00 00        Puntero_indice_master defw 0
 359  8C40
 360  8C40 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C41 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C42 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C43
 364  8C43 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C45 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C47              ;														; _ puntero (Indice_entidades).
 367  8C47
 368  8C47              ;---------------------------------------------------------------------------------------------------------------
 369  8C47              ;
 370  8C47              ;	13/10/24
 371  8C47              ;
 372  8C47              ;	Álbumes.
 373  8C47
 374  8C47 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C49              ;														; _variable para almacenar lo posición del puntero_
 376  8C49              ; 														; _de pila, SP.
 377  8C49 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C4B              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C4B
 380  8C4B              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C4B
 382  8C4B 00 00        Album_de_pintado defw 0
 383  8C4D 00 00        Album_de_borrado defw 0
 384  8C4F 00 00        Album_de_pintado_Amadeus defw 0
 385  8C51 00 00        Album_de_borrado_Amadeus defw 0
 386  8C53
 387  8C53 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C55 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C57
 390  8C57 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C59 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C5B
 393  8C5B
 394  8C5B 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C5D
 396  8C5D 00           Num_de_bytes_album_de_disparos db 0
 397  8C5E 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C5F
 399  8C5F 07           Numero_de_disparos_de_entidades db 7
 400  8C60
 401  8C60 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C61 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C62
 404  8C62 00 00        Techo_Scanlines_album defw 0
 405  8C64 00 00        Techo_Scanlines_album_2 defw 0
 406  8C66 00           Switch db 0
 407  8C67 00 00        Techo defw 0
 408  8C69 00 00        Scanlines_album_SP defw 0
 409  8C6B 00 89        India_SP defw Tabla_de_pintado
 410  8C6D 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C6F
 412  8C6F 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C70              ;
 414  8C70              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C70              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C70              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C70              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C70              ;																Habilita el borrado/pintado de sprites.
 419  8C70              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C70              ;																_ a la baja.
 421  8C70              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C70              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C70              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C70              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C70              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C70              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C70
 428  8C70 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C71              ;
 430  8C71              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C71
 432  8C71 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C72              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C72              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C72
 436  8C72              ; Gestión de Disparos.
 437  8C72
 438  8C72 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C74 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C76 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C77
 442  8C77              ;
 443  8C77              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C77              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C77              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C77              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C77
 448  8C77
 449  8C77
 450  8C77
 451  8C77
 452  8C77
 453  8C77
 454  8C77 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C79              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C79              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C79
 458  8C79 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C7B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C7B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C7E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C7E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C81              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C81
 465  8C81              ;---------------------------------------------------------------------------------------------------------------
 466  8C81
 467  8C81              ; Relojes y temporizaciones.
 468  8C81
 469  8C81 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C82 05           Clock_explosion_Amadeus db 5
 471  8C83 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C84
 473  8C84 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C86 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C88 00           Numero_rnd_disparos db 0
 476  8C89
 477  8C89 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C8B 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C8C              ;																		; Repite la oleada de entidades.
 480  8C8C A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 481  8C8D A0           CLOCK_disparos_de_entidades db $a0
 482  8C8E
 483  8C8E              ;---------------------------------------------------------------------------------------------------------------
 484  8C8E
 485  8C8E              ; Gestión de NIVELES.
 486  8C8E
 487  8C8E 00           Nivel db 0												; Nivel actual del juego.
 488  8C8F 00 00        Puntero_indice_NIVELES defw 0
 489  8C91 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 490  8C93              ; 														; _ que definen el NIVEL.
 491  8C93
 492  8C93              ; ---------------------------------------------------------------------------------------------------------------
 493  8C93
 494  8C93              ; Temporizaciones Shield.
 495  8C93
 496  8C93 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 497  8C97 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 498  8C99 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 499  8C9A 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 500  8C9B 00           Shield_3 db 0
 501  8C9C
 502  8C9C 07           Lives db 7
 503  8C9D
 504  8C9D              ; 	INICIO  *************************************************************************************************************************************************************************
 505  8C9D              ;
 506  8C9D              ;	13/11/24
 507  8C9D
 508  8C9D              START
 509  8C9D
 510  8C9D 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 511  8CA0 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 512  8CA2 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 513  8CA4 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 514  8CA6 F3           	DI
 515  8CA7
 516  8CA7              ; Limpiamos pantalla.
 517  8CA7
 518  8CA7 3E 07        	ld a,%00000111
 519  8CA9 CD 54 95     	call Cls
 520  8CAC CD AF 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 521  8CAF
 522  8CAF              INICIALIZACION
 523  8CAF
 524  8CAF 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 525  8CB1 CD 4D 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 526  8CB4 CD 2E 8F     	call Extrae_numero_aleatorio_y_avanza
 527  8CB7 6F           	ld l,a
 528  8CB8 26 00        	ld h,0
 529  8CBA 22 89 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8CBD
 531  8CBD              ;	Inicia los álbumes de líneas.
 532  8CBD
 533  8CBD CD 01 91     	call Inicia_albumes_de_lineas
 534  8CC0 CD 11 91     	call Inicia_albumes_de_lineas_Amadeus
 535  8CC3 CD 1E 91     	call Inicia_albumes_de_disparos
 536  8CC6
 537  8CC6              ;	Inicia 1er Nivel.
 538  8CC6
 539  8CC6 CD AF 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 540  8CC9 CD 7D 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 541  8CCC              ;														   _reponiendo entidades eliminadas.
 542  8CCC CD E3 93     	call Prepara_Cajas_de_Entidades
 543  8CCF
 544  8CCF CD 34 94     	call Inicia_Amadeus
 545  8CD2
 546  8CD2              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CD2              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CD2              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CD2 11 AE 89     	ld de,Amadeus_BOX
 550  8CD5 CD 23 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 551  8CD8 CD 77 94     	call Limpiamos_bandeja_DRAW
 552  8CDB
 553  8CDB              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 554  8CDB
 555  8CDB 06 3C        	ld b,60
 556  8CDD CD F5 9D     2 call Amadeus_a_izquierda
 557  8CE0 10 FB        	djnz 2B
 558  8CE2
 559  8CE2 CD DF 90     	call Genera_datos_de_impresion_Amadeus
 560  8CE5
 561  8CE5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 562  8CE5
 563  8CE5 CD 3A 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 564  8CE8
 565  8CE8 CD BA 91     	call Inicia_Shield
 566  8CEB
 567  8CEB 2A 69 8C     6 ld hl,(Scanlines_album_SP)
 568  8CEE 22 62 8C     	ld (Techo_Scanlines_album),hl
 569  8CF1
 570  8CF1 2A 4D 8C     	ld hl,(Album_de_borrado)
 571  8CF4 22 69 8C     	ld (Scanlines_album_SP),hl
 572  8CF7
 573  8CF7 21 00 89     	ld hl,Tabla_de_pintado
 574  8CFA 22 6B 8C     	ld (India_SP),hl
 575  8CFD
 576  8CFD 21 6F 8C     	ld hl,Ctrl_3
 577  8D00 CB C6        	set 0,(hl) 											; Indica Frame completo.
 578  8D02 CB D6        	set 2,(hl)
 579  8D04 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 580  8D06
 581  8D06 FB           	ei 													; Ha de apuntar a $5c3a.
 582  8D07
 583  8D07 76           	halt
 584  8D08
 585  8D08              ; ------------------------------------
 586  8D08
 587  8D08              Main
 588  8D08              ;
 589  8D08              ; 07/11/24.
 590  8D08
 591  8D08              ; Gestión de disparos.
 592  8D08
 593  8D08 CD 03 8F     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 594  8D0B CD E9 9F     	call Motor_de_disparos_entidades
 595  8D0E CD 7E A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 596  8D11
 597  8D11              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 598  8D11              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 599  8D11              ; Este hecho lo indica el bit2 de (Impacto2).
 600  8D11
 601  8D11 CD 1F A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 602  8D14
 603  8D14              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 604  8D14
 605  8D14 21 8D 8C     	ld hl,CLOCK_disparos_de_entidades
 606  8D17 35           	dec (hl)
 607  8D18 CC 44 8E     	call z,Autoriza_disparo_de_entidades
 608  8D1B
 609  8D1B 2A 89 8C     	ld hl,(Clock_next_entity)
 610  8D1E ED 4B 78 5C  	ld bc,(FRAMES)
 611  8D22 A7           	and a
 612  8D23 ED 42        	sbc hl,bc
 613  8D25 20 1B        	jr nz,1F
 614  8D27
 615  8D27              ; GESTIÓN DE ENTIDADES.
 616  8D27
 617  8D27              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 618  8D27              ; _ (Clock_next_entity) para la siguiente entidad.
 619  8D27
 620  8D27              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 621  8D27              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 622  8D27              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 623  8D27
 624  8D27 21 41 8C     	ld hl,Numero_parcial_de_entidades
 625  8D2A 46           	ld b,(hl)
 626  8D2B 3A 42 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 627  8D2E B8           	cp b
 628  8D2F 28 11        	jr z,1F
 629  8D31 30 0F        	jr nc,1F
 630  8D33
 631  8D33              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 632  8D33
 633  8D33 3C           	inc a
 634  8D34 32 42 8C     	ld (Entidades_en_curso),a
 635  8D37
 636  8D37 21 70 8C     	ld hl,Ctrl_4
 637  8D3A CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 638  8D3C
 639  8D3C              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 640  8D3C
 641  8D3C CD 2E 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 642  8D3F CD 4A 8F     	call Define_Clock_next_entity
 643  8D42
 644  8D42 3A 42 8C     1 ld a,(Entidades_en_curso)
 645  8D45 A7           	and a
 646  8D46 CA EA 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 647  8D49 47           	ld b,a													; No hay entidades que gestionar.
 648  8D4A
 649  8D4A              ; ( Código que ejecutamos con cada entidad: ).
 650  8D4A
 651  8D4A              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 652  8D4A              ;
 653  8D4A              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 654  8D4A
 655  8D4A 21 00 89     	ld hl,Tabla_de_pintado
 656  8D4D 22 6B 8C     	ld (India_SP),hl
 657  8D50
 658  8D50 21 6F 8C     	ld hl,Ctrl_3
 659  8D53 CB D6        	set 2,(hl)
 660  8D55 CD D8 8E     	call Change
 661  8D58
 662  8D58 C5           2 push bc 												; Nº de entidades en curso.
 663  8D59
 664  8D59 DD 2A 38 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 665  8D5D CD 8B 91     	call Salta_caja_de_entidades_vacia
 666  8D60
 667  8D60              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 668  8D60
 669  8D60 DD 7E 00     	ld a,(ix+0)
 670  8D63 CB 7F        	bit 7,a
 671  8D65 28 11        	jr z,5F
 672  8D67
 673  8D67              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 674  8D67
 675  8D67 21 70 8C     	ld hl,Ctrl_4
 676  8D6A CB 46        	bit 0,(hl)
 677  8D6C CC 9A 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 678  8D6F 28 E8        	jr z,6B
 679  8D71
 680  8D71 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 681  8D73 CB BF        	res 7,a
 682  8D75 DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 683  8D78
 684  8D78              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 685  8D78              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 686  8D78
 687  8D78 3A 76 8C     5 ld a,(Impacto2)
 688  8D7B CB 5F        	bit 3,a
 689  8D7D C4 15 A2     	call nz,Compara_con_coordenadas_de_disparo
 690  8D80
 691  8D80              ; Existe colisión entre esta entidad y Amadeus ???
 692  8D80
 693  8D80 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 694  8D83 CB 4F        	bit 1,a
 695  8D85 C4 A5 92     	call nz,Genera_explosion
 696  8D88 20 43        	jr nz,Gestiona_siguiente_entidad
 697  8D8A
 698  8D8A DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 699  8D8D A7           	and a
 700  8D8E 28 0C        	jr z,3F
 701  8D90
 702  8D90              ; IMPACTO en entidad por colisión con Amadeus.
 703  8D90
 704  8D90              ; 5/7/24
 705  8D90              ; Nota importante:
 706  8D90              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 707  8D90              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 708  8D90              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 709  8D90
 710  8D90 3A B2 89     	ld a,(Impacto_Amadeus)
 711  8D93 A7           	and a
 712  8D94 C4 A5 92     	call nz,Genera_explosion
 713  8D97 20 34        	jr nz,Gestiona_siguiente_entidad
 714  8D99
 715  8D99              ; Falsa colisión !!!
 716  8D99
 717  8D99 32 FC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 718  8D9C
 719  8D9C              ; -------------------------------------------
 720  8D9C
 721  8D9C CD 8E 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 722  8D9F CD B0 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 723  8DA2 CD 7E 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 724  8DA5
 725  8DA5 DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 726  8DA7 DD 2A FD 8B  	ld ix,(Puntero_de_impresion)
 727  8DAB CD 94 95     	call Genera_datos_de_impresion
 728  8DAE DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 729  8DB0
 730  8DB0 CD 9A 94     	call Decrementa_Contador_de_mov_masticados
 731  8DB3
 732  8DB3              ; -------------------------------------------
 733  8DB3
 734  8DB3              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 735  8DB3
 736  8DB3 2A FD 8B     	ld hl,(Puntero_de_impresion)
 737  8DB6 CD 68 95     	call Genera_coordenadas
 738  8DB9
 739  8DB9 ED 4B F9 8B  	ld bc,(Coordenada_X)
 740  8DBD
 741  8DBD DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 742  8DC0 DD 70 02     	ld (ix+2),b
 743  8DC3
 744  8DC3              ; TODO: Generamos disparo ???
 745  8DC3
 746  8DC3 3A 61 8C     	ld a,(Permiso_de_disparo_Entidades)
 747  8DC6 A7           	and a
 748  8DC7 C4 59 8E     	call nz,Entidad_genera_disparo_si_procede
 749  8DCA
 750  8DCA CD 99 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 751  8DCD
 752  8DCD              Gestiona_siguiente_entidad
 753  8DCD
 754  8DCD CD 9A 91     	call Incrementa_punteros_de_cajas
 755  8DD0
 756  8DD0 C1           	pop bc
 757  8DD1 10 85        	djnz 2B
 758  8DD3
 759  8DD3              ; Hemos gestionado todas las entidades.
 760  8DD3              ; ----- ----- -----
 761  8DD3
 762  8DD3 CD A2 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 763  8DD6 CD B9 8F     	call Ordena_tabla_de_impresion
 764  8DD9 CD 3A 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 765  8DDC
 766  8DDC CD 5F 8F     	call Borra_diferencia
 767  8DDF
 768  8DDF 3A 6F 8C     	ld a,(Ctrl_3)
 769  8DE2 CB 5F        	bit 3,a
 770  8DE4 20 04        	jr nz,Gestion_de_Amadeus
 771  8DE6
 772  8DE6 EB           	ex de,hl
 773  8DE7 71           	ld (hl),c
 774  8DE8 2C           	inc l
 775  8DE9 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 776  8DEA
 777  8DEA              ;! GESTIONA AMADEUS !!!!!!!!!!
 778  8DEA
 779  8DEA              Gestion_de_Amadeus
 780  8DEA
 781  8DEA 21 6F 8C     	ld hl,Ctrl_3
 782  8DED CB 76        	bit 6,(hl)
 783  8DEF 28 13        	jr z,Amadeus_vivo
 784  8DF1
 785  8DF1              ; Amadeus ha sido destruido.
 786  8DF1              ; Decrementa (Temp_new_live).
 787  8DF1
 788  8DF1 21 83 8C     	ld hl,Temp_new_live
 789  8DF4 35           	dec (hl)
 790  8DF5 20 26        	jr nz,End_frame
 791  8DF7
 792  8DF7              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 793  8DF7
 794  8DF7 21 9C 8C     	ld hl,Lives
 795  8DFA 35           	dec (hl)
 796  8DFB
 797  8DFB              ;! Fin del juego
 798  8DFB
 799  8DFB F3           	di
 800  8DFC 28 FE        	jr z,$
 801  8DFE FB           	ei
 802  8DFF
 803  8DFF              ; Nueva nave.
 804  8DFF
 805  8DFF CD 76 8E     	call Reinicia_Amadeus
 806  8E02 18 19        	jr End_frame
 807  8E04
 808  8E04              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 809  8E04
 810  8E04              Amadeus_vivo
 811  8E04
 812  8E04 3A B2 89     	ld a,(Impacto_Amadeus)
 813  8E07 A7           	and a
 814  8E08 C4 18 93     	call nz, Genera_explosion_Amadeus
 815  8E0B 20 10        	jr nz, End_frame
 816  8E0D
 817  8E0D CD 82 92     	call Teclado
 818  8E10 21 6F 8C     	ld hl,Ctrl_3
 819  8E13
 820  8E13 CB 6E        	bit 5,(hl)
 821  8E15 28 06        	jr z,End_frame
 822  8E17
 823  8E17              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 824  8E17
 825  8E17 CD F3 8E     	call Change_Amadeus
 826  8E1A CD DF 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 827  8E1D
 828  8E1D              End_frame
 829  8E1D
 830  8E1D              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 831  8E1D              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 832  8E1D
 833  8E1D CD 40 A1     	call Genera_datos_de_impresion_disparos_Entidades
 834  8E20 CD 04 A3     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 835  8E23 CD 5A A2     	call Calcula_bytes_pintado_disparos
 836  8E26 CD 67 A2     	call Limpia_album_de_pintado_disparos_entidades
 837  8E29
 838  8E29              ; ------------ ------------- --------------
 839  8E29
 840  8E29 2A 4D 8C     	ld hl,(Album_de_borrado)
 841  8E2C 22 69 8C     	ld (Scanlines_album_SP),hl
 842  8E2F
 843  8E2F 21 6F 8C     	ld hl,Ctrl_3
 844  8E32 CB C6        	set 0,(hl) 											; Indica Frame completo.
 845  8E34 CB 9E        	res 3,(hl)
 846  8E36 CB A6        	res 4,(hl)
 847  8E38
 848  8E38 21 70 8C     	ld hl,Ctrl_4
 849  8E3B CB 86        	res 0,(hl)
 850  8E3D
 851  8E3D AF           	xor a
 852  8E3E D3 FE        	out ($fe),a
 853  8E40
 854  8E40 76           	halt
 855  8E41
 856  8E41              ; ----------------------------------------
 857  8E41
 858  8E41              ;	ld a,(Ctrl_1) 										; Existe Loop?
 859  8E41              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 860  8E41 CA 08 8D     	jp z,Main
 861  8E44
 862  8E44              ;------------------------------------------
 863  8E44              ;
 864  8E44              ;	07/11/24
 865  8E44
 866  8E44              Autoriza_disparo_de_entidades
 867  8E44
 868  8E44 3E 01        	ld a,1
 869  8E46 32 61 8C     	ld (Permiso_de_disparo_Entidades),a
 870  8E49
 871  8E49 3A 8C 8C     	ld a,(Repone_CLOCK_disparos)
 872  8E4C FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 873  8E4E 38 02        	jr c,1F
 874  8E50
 875  8E50              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 876  8E50              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 877  8E50              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 878  8E50
 879  8E50 D6 03        	sub 3
 880  8E52
 881  8E52 32 8C 8C     1 ld (Repone_CLOCK_disparos),a
 882  8E55 32 8D 8C     	ld (CLOCK_disparos_de_entidades),a
 883  8E58
 884  8E58 C9           	ret
 885  8E59
 886  8E59              ;------------------------------------------
 887  8E59              ;
 888  8E59              ;	14/09/24
 889  8E59              ;
 890  8E59              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 891  8E59
 892  8E59              Entidad_genera_disparo_si_procede
 893  8E59
 894  8E59 2A 86 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 895  8E5C CB 06        	rlc (hl)
 896  8E5E
 897  8E5E DC 90 A1     	call c,Genera_disparo_de_entidad_maldosa
 898  8E61
 899  8E61 C9           	ret
 900  8E62
 901  8E62              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 902  8E62              ;
 903  8E62              ;	30/09/24
 904  8E62
 905  8E62              Actuaiza_sp_de_disparos_de_entidades
 906  8E62
 907  8E62 2A 86 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 908  8E65 23           	inc hl
 909  8E66 22 86 8C     	ld (Puntero_num_aleatorios_disparos),hl
 910  8E69
 911  8E69 11 FD 88     	ld de,Numeros_aleatorios+7
 912  8E6C 7B           	ld a,e
 913  8E6D 95           	sub l
 914  8E6E C0           	ret nz
 915  8E6F
 916  8E6F 21 F6 88     1 ld hl,Numeros_aleatorios
 917  8E72 22 86 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 918  8E75 C9           	ret
 919  8E76
 920  8E76              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 921  8E76              ;
 922  8E76              ;	24/07/24
 923  8E76
 924  8E76              Reinicia_Amadeus
 925  8E76
 926  8E76              ;	Reinicia posición y estado.
 927  8E76
 928  8E76 21 CF 50     	ld hl,$50cf
 929  8E79 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 930  8E7C 21 CC DC     	ld hl,$dccc
 931  8E7F 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 932  8E82 21 3D 00     	ld hl,$003d
 933  8E85 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 934  8E88
 935  8E88              ;	limpiamos el álbum de borrado.
 936  8E88
 937  8E88 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
 938  8E8B
 939  8E8B AF           	xor a
 940  8E8C 77           	ld (hl),a
 941  8E8D
 942  8E8D E5           	push hl
 943  8E8E D1           	pop de
 944  8E8F 13           	inc de
 945  8E90
 946  8E90 01 23 00     	ld bc,35
 947  8E93 ED B0        	ldir
 948  8E95
 949  8E95 CD DF 90     	call Genera_datos_de_impresion_Amadeus
 950  8E98
 951  8E98              ;	Reinicia temporizaciones.
 952  8E98
 953  8E98 CD BA 91     	call Inicia_Shield
 954  8E9B
 955  8E9B 3E 5A        	ld a,90
 956  8E9D 32 99 8C     	ld (Shield),a
 957  8EA0
 958  8EA0 3E 64        	ld a,100
 959  8EA2 32 83 8C     	ld (Temp_new_live),a
 960  8EA5
 961  8EA5              ; 	Restauramos el FLAG: Amadeus vivo.
 962  8EA5
 963  8EA5 21 6F 8C     	ld hl,Ctrl_3
 964  8EA8 CB B6        	res 6,(hl)
 965  8EAA
 966  8EAA              ;	Fuerza la impresión de la nave en el siguiente frame.
 967  8EAA
 968  8EAA 21 6F 8C      	ld hl,Ctrl_3
 969  8EAD CB EE        	set 5,(hl)
 970  8EAF
 971  8EAF C9           	ret
 972  8EB0
 973  8EB0              ; --------------------------------------------------------------------------------------------------------------
 974  8EB0              ;
 975  8EB0              ;	23/11/24
 976  8EB0
 977  8EB0              Ajusta_velocidad_entidad
 978  8EB0
 979  8EB0 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 980  8EB3 A7           	and a
 981  8EB4 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 982  8EB5              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 983  8EB5              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 984  8EB5
 985  8EB5
 986  8EB5              ; Incrementa (Contador_de_vueltas)x2.
 987  8EB5              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 988  8EB5
 989  8EB5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 990  8EB5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 991  8EB5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 992  8EB5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 993  8EB5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 994  8EB5
 995  8EB5
 996  8EB5 CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 997  8EB7 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 998  8EBA E6 10        	and $10
 999  8EBC C8           	ret z
1000  8EBD
1001  8EBD              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1002  8EBD
1003  8EBD DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1004  8EC0 CB 2F        	sra a
1005  8EC2 CB 2F        	sra a
1006  8EC4 DD 77 0B     	ld (ix+11),a
1007  8EC7
1008  8EC7 DD 6E 07     	ld l,(ix+7)
1009  8ECA DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1010  8ECD
1011  8ECD              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1012  8ECD 23           	inc hl
1013  8ECE 23           	inc hl
1014  8ECF 23           	inc hl
1015  8ED0 23           	inc hl
1016  8ED1              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1017  8ED1
1018  8ED1 DD 75 07     	ld (ix+7),l
1019  8ED4 DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1020  8ED7
1021  8ED7 C9           	ret
1022  8ED8
1023  8ED8              ; --------------------------------------------------------------------------------------------------------------
1024  8ED8              ;
1025  8ED8              ;	25/08/24
1026  8ED8
1027  8ED8              Change
1028  8ED8
1029  8ED8 3A 66 8C     	ld a,(Switch)
1030  8EDB EE 01        	xor 1
1031  8EDD 32 66 8C     	ld (Switch),a
1032  8EE0 2A 4B 8C     	ld hl,(Album_de_pintado)
1033  8EE3 ED 5B 4D 8C  	ld de,(Album_de_borrado)
1034  8EE7 EB           	ex de,hl
1035  8EE8 22 4B 8C     	ld (Album_de_pintado),hl
1036  8EEB 22 69 8C     	ld (Scanlines_album_SP),hl
1037  8EEE ED 53 4D 8C  	ld (Album_de_borrado),de
1038  8EF2 C9           	ret
1039  8EF3
1040  8EF3              Change_Amadeus
1041  8EF3
1042  8EF3 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1043  8EF6 ED 5B 51 8C  	ld de,(Album_de_borrado_Amadeus)
1044  8EFA EB           	ex de,hl
1045  8EFB 22 4F 8C     	ld (Album_de_pintado_Amadeus),hl
1046  8EFE ED 53 51 8C  	ld (Album_de_borrado_Amadeus),de
1047  8F02 C9           	ret
1048  8F03
1049  8F03              Change_Disparos
1050  8F03
1051  8F03              ; Álbumes de Amadeus.
1052  8F03
1053  8F03 2A 53 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1054  8F06 ED 5B 55 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1055  8F0A EB           	ex de,hl
1056  8F0B 22 53 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1057  8F0E ED 53 55 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1058  8F12 CD 4F A2     	call Limpia_album_de_pintado_disparos_Amadeus
1059  8F15
1060  8F15              ; Álbumes de entidades.
1061  8F15
1062  8F15 2A 57 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1063  8F18 ED 5B 59 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1064  8F1C EB           	ex de,hl
1065  8F1D 22 57 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1066  8F20 ED 53 59 8C  	ld (Album_de_borrado_disparos_Entidades),de
1067  8F24 22 5B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1068  8F27
1069  8F27 3A 5D 8C     	ld a,(Num_de_bytes_album_de_disparos)
1070  8F2A 32 5E 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1071  8F2D
1072  8F2D C9           	ret
1073  8F2E
1074  8F2E              ; ------------------------------------
1075  8F2E              ;
1076  8F2E              ; 1/05/24
1077  8F2E
1078  8F2E              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1079  8F2E              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1080  8F2E
1081  8F2E              ;	DESTRUYE: HL,DE,A
1082  8F2E              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1083  8F2E
1084  8F2E              ;	Variables implicadas: (RND_SP).
1085  8F2E
1086  8F2E              Extrae_numero_aleatorio_y_avanza
1087  8F2E
1088  8F2E 21 00 89     	ld hl,Tabla_de_pintado
1089  8F31 EB           	ex de,hl
1090  8F32 2A 84 8C     	ld hl,(RND_SP)
1091  8F35 EB           	ex de,hl
1092  8F36 A7           	and a
1093  8F37 ED 52        	sbc hl,de
1094  8F39
1095  8F39 2A 84 8C     	ld hl,(RND_SP)
1096  8F3C 20 06        	jr nz,1F
1097  8F3E
1098  8F3E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1099  8F3E
1100  8F3E 21 F6 88     	ld hl,Numeros_aleatorios
1101  8F41 22 84 8C     	ld (RND_SP),HL
1102  8F44
1103  8F44              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1104  8F44
1105  8F44 7E           1 ld a,(hl)
1106  8F45 23           	inc hl
1107  8F46 22 84 8C     	ld (RND_SP),hl
1108  8F49 C9           	ret
1109  8F4A
1110  8F4A              ; ------------------------------------
1111  8F4A              ;
1112  8F4A              ; 1/05/24
1113  8F4A
1114  8F4A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1115  8F4A              ; (1 a 4 segundos).
1116  8F4A              ; Actualizamos (Clock_next_entity) con A.
1117  8F4A
1118  8F4A              ;	DESTRUYE: A y B.
1119  8F4A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1120  8F4A              ;			 Actualiza (Clock_next_entity) con A.
1121  8F4A
1122  8F4A              ;	Variables implicadas: (Clock_next_entity).
1123  8F4A
1124  8F4A              ; Notas:
1125  8F4A
1126  8F4A              ; 	$32 1 seg.
1127  8F4A              ; 	$64 2 seg.
1128  8F4A              ; 	$96 3 seg.
1129  8F4A              ; 	$c8 4 seg.
1130  8F4A              ; 	$fa 5 seg.
1131  8F4A
1132  8F4A              ; $ffff 1310,7 seg, 22 minutos.
1133  8F4A
1134  8F4A              ;	$0100  5 seg. aproximadamente.
1135  8F4A              ;	$0200 10 seg. aproximadamente.
1136  8F4A              ;	$0300 15 seg. aproximadamente.
1137  8F4A              ;	$0400 20 seg. aproximadamente.
1138  8F4A              ;	$0500 25 seg. aproximadamente.
1139  8F4A              ;	$0600 30 seg. aproximadamente.
1140  8F4A
1141  8F4A              Define_Clock_next_entity
1142  8F4A
1143  8F4A FE 34        	cp $34
1144  8F4C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1145  8F4E
1146  8F4E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1147  8F4E
1148  8F4E 4F           3 ld c,a
1149  8F4F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1150  8F51 2A 78 5C     	ld hl,(FRAMES)
1151  8F54 A7           	and a
1152  8F55 ED 4A        	adc hl,bc
1153  8F57 22 89 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1154  8F5A C9           	ret
1155  8F5B
1156  8F5B 3E 34        1 ld a,$34
1157  8F5D 18 EF        	jr 3B
1158  8F5F
1159  8F5F              ; ------------------------------------
1160  8F5F              ;
1161  8F5F              ; 18/03/24
1162  8F5F
1163  8F5F              Borra_diferencia
1164  8F5F
1165  8F5F ED 4B 69 8C  	ld bc,(Scanlines_album_SP)
1166  8F63
1167  8F63 3A 66 8C     	ld a,(Switch)
1168  8F66 A7           	and a
1169  8F67 28 08        	jr z,2F
1170  8F69
1171  8F69 2A 64 8C     	ld hl,(Techo_Scanlines_album_2)
1172  8F6C 11 64 8C     	ld de,Techo_Scanlines_album_2
1173  8F6F 18 06        	jr 3F
1174  8F71
1175  8F71 2A 62 8C     2 ld hl,(Techo_Scanlines_album)
1176  8F74 11 62 8C     	ld de,Techo_Scanlines_album
1177  8F77
1178  8F77              ; Diferencia.
1179  8F77
1180  8F77 ED 42        3 sbc hl,bc
1181  8F79
1182  8F79 C8           	ret z
1183  8F7A D8           	ret c
1184  8F7B
1185  8F7B              ; Nuevo techo, (más bajo que el anterior).
1186  8F7B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1187  8F7B
1188  8F7B EB           	ex de,hl
1189  8F7C
1190  8F7C 71           	ld (hl),c
1191  8F7D 2C           	inc l
1192  8F7E 70           	ld (hl),b
1193  8F7F
1194  8F7F AF           	xor a
1195  8F80 43           	ld b,e
1196  8F81
1197  8F81 2A 69 8C     	ld hl,(Scanlines_album_SP)
1198  8F84
1199  8F84 77           1 ld (hl),a
1200  8F85 23           	inc hl
1201  8F86 10 FC        	djnz 1B
1202  8F88
1203  8F88              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1204  8F88
1205  8F88 21 6F 8C     	ld hl,Ctrl_3
1206  8F8B CB DE        	set 3,(hl)
1207  8F8D
1208  8F8D C9           	ret
1209  8F8E
1210  8F8E              ; --------------------------------------------------------------------------------------------------------------
1211  8F8E              ;
1212  8F8E              ;	23/11/24
1213  8F8E              ;
1214  8F8E              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1215  8F8E
1216  8F8E              Entidad_a_Tabla_de_pintado
1217  8F8E
1218  8F8E              ; Almacena la Coordenada Y de la entidad en curso.
1219  8F8E
1220  8F8E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1221  8F8E
1222  8F8E DD 7E 02     	ld a,(ix+2)
1223  8F91 2A 6B 8C     	ld hl,(India_SP)
1224  8F94 77           	ld (hl),a
1225  8F95 2C           	inc l
1226  8F96
1227  8F96              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1228  8F96
1229  8F96 ED 5B 69 8C  	ld de,(Scanlines_album_SP)
1230  8F9A
1231  8F9A 73           	ld (hl),e
1232  8F9B 2C           	inc l
1233  8F9C 72           	ld (hl),d
1234  8F9D 2C           	inc l
1235  8F9E
1236  8F9E 22 6B 8C     	ld (India_SP),hl
1237  8FA1
1238  8FA1 C9           	ret
1239  8FA2
1240  8FA2              ; --------------------------------------------------------------------------------------------------------------
1241  8FA2              ;
1242  8FA2              ;	27/03/24
1243  8FA2              ;
1244  8FA2
1245  8FA2              Inicializa_India_y_limpia_Tabla_de_impresion
1246  8FA2
1247  8FA2 2A 6B 8C     	ld hl,(India_SP)
1248  8FA5 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1249  8FA8
1250  8FA8 79           	ld a,c
1251  8FA9 95           	sub l
1252  8FAA 28 06        	jr z,2F
1253  8FAC 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1254  8FAD              ;														; _ y pasamos a inicializar (India_SP).
1255  8FAD AF           	xor a
1256  8FAE
1257  8FAE 77           1 ld (hl),a
1258  8FAF 2C           	inc l
1259  8FB0 10 FC        	djnz 1B												; Limpia Tabla.
1260  8FB2
1261  8FB2 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1262  8FB5 22 6B 8C     	ld (India_SP),hl
1263  8FB8
1264  8FB8 C9           	ret
1265  8FB9
1266  8FB9              ; --------------------------------------------------------------------------------------------------------------
1267  8FB9              ;
1268  8FB9              ;	31/3/24
1269  8FB9
1270  8FB9              Ordena_tabla_de_impresion
1271  8FB9
1272  8FB9              ; 5794 T/states.
1273  8FB9              ; 6278 T/states.
1274  8FB9              ; 5310 T/states.
1275  8FB9
1276  8FB9              ; Inicializamos punteros (India_SP) e (India_2_SP).
1277  8FB9              ; Inicializamos contador de comparaciones, [C].
1278  8FB9              ; Cargamos los registros A y B para efectuar comparación.
1279  8FB9
1280  8FB9 FD 2E 00     	ld iyl,0
1281  8FBC
1282  8FBC 3A 42 8C     	ld a,(Entidades_en_curso)
1283  8FBF FE 04        	cp 4 	;	4
1284  8FC1 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1285  8FC2
1286  8FC2 3D           	dec a
1287  8FC3 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1288  8FC4 51           	ld d,c 										; Copia de respaldo.
1289  8FC5
1290  8FC5 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1291  8FC6
1292  8FC6 21 03 89     	ld hl,Tabla_de_pintado+3
1293  8FC9 46           	ld b,(hl)
1294  8FCA 22 6D 8C     	ld (India_2_SP),hl
1295  8FCD
1296  8FCD B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1297  8FCE DC F6 8F     	call c, Avanza_India_2_SP
1298  8FD1 CC F6 8F     	call z, Avanza_India_2_SP
1299  8FD4
1300  8FD4 FD 2D        	dec iyl
1301  8FD6 28 18        	jr z,2F
1302  8FD8
1303  8FD8
1304  8FD8              ; --------------------------------------------------------------------------------------------------------------
1305  8FD8              ;
1306  8FD8              ;	7/4/24
1307  8FD8
1308  8FD8              Trueque
1309  8FD8
1310  8FD8              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1311  8FD8              ;  			A contiene en nº de fila de (India_SP).
1312  8FD8              ;			HL contiene (India_2_SP).
1313  8FD8
1314  8FD8 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1315  8FD9 E5           	push hl										; Preservo (India_2_SP).
1316  8FDA
1317  8FDA ED 5B 6B 8C  	ld de,(India_SP)
1318  8FDE EB           	ex de,hl
1319  8FDF 70           	ld (hl),b
1320  8FE0 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1321  8FE1
1322  8FE1 CD 22 90     	call Intercambia_1_byte
1323  8FE4 CD 22 90     	call Intercambia_1_byte
1324  8FE7
1325  8FE7
1326  8FE7              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1327  8FE7              ; Recuperamos (India_2_SP) en HL.
1328  8FE7
1329  8FE7 2A 6B 8C     	ld hl,(India_SP)
1330  8FEA 7E           	ld a,(hl)
1331  8FEB
1332  8FEB E1           	pop hl
1333  8FEC D1           	pop de
1334  8FED
1335  8FED              ; --------------------------------------------------------------------------------------------------------------
1336  8FED
1337  8FED CD F6 8F     	call Avanza_India_2_SP
1338  8FF0
1339  8FF0 14           2 inc d
1340  8FF1 15           	dec d
1341  8FF2 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1342  8FF3 18 D8        	jr 1B
1343  8FF5
1344  8FF5 C9           	ret
1345  8FF6
1346  8FF6              ; ----- ----- ----- ----- -----
1347  8FF6
1348  8FF6              Avanza_India_2_SP
1349  8FF6
1350  8FF6 0D           	dec c
1351  8FF7 28 0A        	jr z,Avanza_punteros_indios
1352  8FF9
1353  8FF9 FD 2C        	inc iyl
1354  8FFB
1355  8FFB 2C           	inc l
1356  8FFC 2C           	inc l
1357  8FFD 2C           	inc l
1358  8FFE
1359  8FFE 46           	ld b,(hl)
1360  8FFF 22 6D 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1361  9002
1362  9002 C9           	ret
1363  9003
1364  9003              ; ----- ----- ----- ----- -----
1365  9003
1366  9003              Avanza_punteros_indios
1367  9003
1368  9003 15           	dec d
1369  9004 28 15        	jr z,Prepara_salida
1370  9006
1371  9006 4A           	ld c,d
1372  9007
1373  9007 2A 6B 8C     	ld hl,(India_SP)
1374  900A 2C           	inc l
1375  900B 2C           	inc l
1376  900C 2C           	inc l
1377  900D 7E           	ld a,(hl)
1378  900E 22 6B 8C     	ld (India_SP),hl
1379  9011
1380  9011 2C           	inc l
1381  9012 2C           	inc l
1382  9013 2C           	inc l
1383  9014 46           	ld b,(hl)
1384  9015 22 6D 8C     	ld (India_2_SP),hl
1385  9018
1386  9018 FD 2C        	inc iyl
1387  901A
1388  901A C9           	ret
1389  901B
1390  901B              Prepara_salida
1391  901B
1392  901B 21 00 89     	ld hl,Tabla_de_pintado
1393  901E 22 6B 8C     	ld (India_SP),hl
1394  9021 C9           	ret
1395  9022
1396  9022
1397  9022 2C           Intercambia_1_byte inc l
1398  9023 1C           	inc e
1399  9024 46           	ld b,(hl)
1400  9025 1A           	ld a,(de)
1401  9026 EB           	ex de,hl
1402  9027 70           	ld (hl),b
1403  9028 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1404  9029 C9           	ret
1405  902A
1406  902A              ; -----------------------------------------------------------------------------------
1407  902A              ;
1408  902A              ;	20/01/24
1409  902A              ;
1410  902A              ;
1411  902A
1412  902A              Construye_movimientos_masticados_entidad
1413  902A
1414  902A 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1415  902D E5           	push hl
1416  902E CD 71 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1417  9031              ;															; _ el (Contador_de_mov_masticados).
1418  9031 CD 56 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1419  9034              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1420  9034 CD 7B 9A     	call Recompone_posicion_inicio
1421  9037
1422  9037 CD AB 97     1 call Draw
1423  903A CD 56 90     	call Guarda_movimiento_masticado
1424  903D
1425  903D CD 28 9E     	call Movimiento
1426  9040
1427  9040 3A 6F 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1428  9043 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1429  9045 28 F0        	jr z,1B
1430  9047
1431  9047              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1432  9047              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1433  9047
1434  9047 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1435  9048 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1436  904B
1437  904B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1438  904B
1439  904B CD 8C 9F     	call Situa_en_contador_general_de_mov_masticados
1440  904E
1441  904E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1442  904E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1443  904E
1444  904E ED 4B 01 8C  	ld bc,(Contador_de_mov_masticados)
1445  9052
1446  9052 71           	ld (hl),c
1447  9053 23           	inc hl
1448  9054 70           	ld (hl),b
1449  9055
1450  9055 C9           	ret
1451  9056
1452  9056              ; -----------------------------------------------------------------------------------
1453  9056              ;
1454  9056              ;	28/12/23
1455  9056              ;
1456  9056              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1457  9056              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1458  9056
1459  9056              Guarda_movimiento_masticado
1460  9056
1461  9056 ED 73 47 8C  	ld (Stack),sp
1462  905A ED 7B FF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1463  905E
1464  905E DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1465  9060 FD E5            push iy 												; Pushea Puntero_objeto.
1466  9062
1467  9062 ED 7B 47 8C      ld sp,(Stack)
1468  9066
1469  9066 2A 01 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1470  9069 23           	inc hl
1471  906A 22 01 8C     	ld (Contador_de_mov_masticados),hl
1472  906D
1473  906D CD 71 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1474  9070              ;															; _ el (Contador_de_mov_masticados).
1475  9070 C9               ret
1476  9071
1477  9071              ; --------------------------------------------------------------------------------------------------------------
1478  9071              ;
1479  9071              ;	12/1/24
1480  9071              ;
1481  9071              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1482  9071
1483  9071              Actualiza_Puntero_de_almacen_de_mov_masticados
1484  9071
1485  9071 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1486  9074 01 04 00     	ld bc,4
1487  9077 A7           	and a
1488  9078 ED 4A        	adc hl,bc
1489  907A 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1490  907D C9           	ret
1491  907E
1492  907E              ; ------------------------------------------
1493  907E              ;
1494  907E              ;	23/11/24
1495  907E              ;
1496  907E              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1497  907E
1498  907E
1499  907E              Obtenemos_puntero_de_impresion
1500  907E
1501  907E DD 6E 07     	ld l,(ix+7)
1502  9081 DD 66 08     	ld h,(ix+8)
1503  9084
1504  9084              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1505  9084
1506  9084 ED 73 47 8C  	ld (Stack),sp
1507  9088 F9           	ld sp,hl
1508  9089
1509  9089 AF           	xor a
1510  908A 67           	ld h,a
1511  908B 6C           	ld l,h															; ld hl,"0"
1512  908C
1513  908C D1           	pop de															; (Puntero_objeto) en DE.
1514  908D C1           	pop bc
1515  908E
1516  908E              ; 	Almacena (Puntero_de_impresion) en caja.
1517  908E
1518  908E DD 71 05     	ld (ix+5),c
1519  9091 DD 70 06     	ld (ix+6),b
1520  9094
1521  9094 ED 43 FD 8B  	ld (Puntero_de_impresion),bc
1522  9098
1523  9098              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1524  9098
1525  9098 39           	add hl,sp
1526  9099 DD 75 07     	ld (ix+7),l
1527  909C DD 74 08     	ld (ix+8),h
1528  909F
1529  909F C1           	pop bc
1530  90A0
1531  90A0 79           	ld a,c
1532  90A1 80           	add b															; Comprueba si ya no hay datos en el almacén.
1533  90A2
1534  90A2 ED 7B 47 8C  	ld sp,(Stack)
1535  90A6
1536  90A6 CC A8 94     	call z,Reinicia_entidad_maliciosa
1537  90A9
1538  90A9 C9           	ret
1539  90AA
1540  90AA              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1541  90AA              ;
1542  90AA              ;	25/11/24
1543  90AA
1544  90AA              Cargamos_registros_con_explosion
1545  90AA
1546  90AA DD 6E 07     	ld l,(ix+7)
1547  90AD DD 66 08     	ld h,(ix+8)
1548  90B0 CD 50 91     	call Extrae_address
1549  90B3 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1550  90B4
1551  90B4 DD 6E 05     	ld l,(ix+5)
1552  90B7 DD 66 06     	ld h,(ix+6)
1553  90BA
1554  90BA E5           	push hl
1555  90BB DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1556  90BD
1557  90BD C9           	ret
1558  90BE
1559  90BE
1560  90BE              Cargamos_registros_con_explosion_Amadeus
1561  90BE
1562  90BE 2A B5 89     	ld hl,(Pamm_Amadeus)
1563  90C1 CD 50 91     	call Extrae_address
1564  90C4
1565  90C4 5D           	ld e,l
1566  90C5 54           	ld d,h
1567  90C6
1568  90C6 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1569  90CA
1570  90CA C9           	ret
1571  90CB
1572  90CB              ; --------------------------------------------------------------------------------------------------------------
1573  90CB              ;
1574  90CB              ;	17/06/24
1575  90CB              ;
1576  90CB              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1577  90CB              ;
1578  90CB              ;	IX contiene el puntero de impresión.
1579  90CB              ;	DE contiene (Puntero_objeto).
1580  90CB
1581  90CB
1582  90CB              Cargamos_registros_con_mov_masticado_Amadeus
1583  90CB
1584  90CB ED 73 47 8C  	ld (Stack),sp
1585  90CF ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1586  90D3 D1           	pop de 															; DE contiene Puntero_objeto
1587  90D4 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1588  90D6 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1589  90DA ED 7B 47 8C  	ld sp,(Stack)
1590  90DE C9           	ret
1591  90DF
1592  90DF              ; ---------------------------------------------------------------------------------------------------------------------
1593  90DF              ;
1594  90DF              ;	18/6/24
1595  90DF              ;
1596  90DF              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1597  90DF
1598  90DF              Genera_datos_de_impresion_Amadeus
1599  90DF
1600  90DF 3A B2 89     	ld a,(Impacto_Amadeus)
1601  90E2 A7           	and a
1602  90E3 20 03        	jr nz,1F
1603  90E5
1604  90E5              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1605  90E5              ; _apuntando a la correspondiente explosión.
1606  90E5
1607  90E5 CD CB 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1608  90E8
1609  90E8 DD 7D        1 ld a,ixl
1610  90EA E6 1F        	and $1f
1611  90EC 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1612  90EF
1613  90EF 2A 69 8C     	ld hl,(Scanlines_album_SP)
1614  90F2 E5           	push hl
1615  90F3
1616  90F3 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1617  90F6 22 69 8C     	ld (Scanlines_album_SP),hl
1618  90F9
1619  90F9 CD 94 95     	call Genera_datos_de_impresion
1620  90FC
1621  90FC E1           	pop hl
1622  90FD 22 69 8C     	ld (Scanlines_album_SP),hl
1623  9100
1624  9100 C9           	ret
1625  9101
1626  9101              ; ---------------------------------------------------------------------------------------------------------------------
1627  9101              ;
1628  9101              ;	13/03/24
1629  9101              ;
1630  9101              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1631  9101
1632  9101              Inicia_albumes_de_lineas
1633  9101
1634  9101 21 00 80     	ld hl,Scanlines_album
1635  9104 22 4B 8C     	ld (Album_de_pintado),hl
1636  9107 22 69 8C     	ld (Scanlines_album_SP),hl
1637  910A
1638  910A 21 1A 81     	ld hl,Scanlines_album_2
1639  910D 22 4D 8C     	ld (Album_de_borrado),hl
1640  9110
1641  9110 C9           	ret
1642  9111
1643  9111              Inicia_albumes_de_lineas_Amadeus
1644  9111
1645  9111 21 34 82     	ld hl,Amadeus_scanlines_album
1646  9114 22 4F 8C     	ld (Album_de_pintado_Amadeus),hl
1647  9117 21 58 82     	ld hl,Amadeus_scanlines_album_2
1648  911A 22 51 8C     	ld (Album_de_borrado_Amadeus),hl
1649  911D
1650  911D C9           	ret
1651  911E
1652  911E              Inicia_albumes_de_disparos
1653  911E
1654  911E 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1655  9121 22 53 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1656  9124 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1657  9127 22 55 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1658  912A
1659  912A 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1660  912D 22 57 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1661  9130 22 5B 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1662  9133
1663  9133 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1664  9136 22 59 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1665  9139
1666  9139 C9           	ret
1667  913A
1668  913A              ; ---------------------------------------------------------------------------------------------------------------------
1669  913A              ;
1670  913A              ; 8/1/23
1671  913A              ;
1672  913A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1673  913A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1674  913A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1675  913A
1676  913A              ; Destruye HL y DE !!!!!
1677  913A
1678  913A              Inicia_punteros_de_cajas
1679  913A
1680  913A 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1681  913D CD 50 91         call Extrae_address
1682  9140 22 38 8C         ld (Puntero_store_caja),hl
1683  9143 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1684  9146 22 3C 8C     	ld (Indice_restore_caja),hl
1685  9149 CD 50 91     	call Extrae_address
1686  914C 22 3A 8C     	ld (Puntero_restore_caja),hl
1687  914F C9               ret
1688  9150
1689  9150              ; *************************************************************************************************************************************************************
1690  9150
1691  9150              ;
1692  9150              ; 20/10/22
1693  9150              ;
1694  9150              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1695  9150              ;
1696  9150              ; Destruye el puntero y DE !!!!!
1697  9150
1698  9150 5E           Extrae_address ld e,(hl)
1699  9151 23           	inc hl
1700  9152 56           	ld d,(hl)
1701  9153 2B           	dec hl
1702  9154 EB           	ex de,hl
1703  9155 C9           	ret
1704  9156
1705  9156              ; *************************************************************************************************************************************************************
1706  9156              ;
1707  9156              ;	20/1/24
1708  9156              ;
1709  9156              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1710  9156              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1711  9156              ;
1712  9156              ;   Destruye HL y BC !!!!!,
1713  9156              ;
1714  9156              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1715  9156              ;					"0" ..... Izquierda.
1716  9156
1717  9156              Inicia_Puntero_objeto
1718  9156
1719  9156 3A 17 8C     	ld a,(Cuad_objeto)
1720  9159 E6 01        	and 1
1721  915B F5           	push af
1722  915C CC 78 91     	call z,Inicia_puntero_objeto_izq
1723  915F F1           	pop af
1724  9160 C8           	ret z
1725  9161 CD 65 91     	call Inicia_puntero_objeto_der
1726  9164 C9           	ret
1727  9165
1728  9165              ; Arrancamos desde la parte izquierda de la pantalla.
1729  9165              ; Iniciamos (Indice_Sprite_der).
1730  9165
1731  9165 2A 0D 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1732  9168 22 11 8C     	ld (Puntero_DESPLZ_der),hl
1733  916B CD 50 91     	call Extrae_address
1734  916E 22 0A 8C     	ld (Puntero_objeto),hl
1735  9171
1736  9171 2A 0F 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1737  9174 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
1738  9177 C9           	ret
1739  9178
1740  9178              ; Arrancamos desde la parte derecha de la pantalla.
1741  9178              ; Iniciamos (Indice_Sprite_izq).
1742  9178
1743  9178 2A 0F 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1744  917B 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
1745  917E CD 50 91     	call Extrae_address
1746  9181 22 0A 8C     	ld (Puntero_objeto),hl
1747  9184
1748  9184 2A 0D 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1749  9187 22 11 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1750  918A C9           	ret
1751  918B
1752  918B              ; **************************************************************************************************
1753  918B              ;
1754  918B              ;	27/11/24
1755  918B              ;
1756  918B              ;	INPUT: IX contiene (Puntero_store_caja).
1757  918B              ;
1758  918B              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1759  918B
1760  918B              Salta_caja_de_entidades_vacia
1761  918B
1762  918B DD 7E 00     	ld a,(ix+0)
1763  918E A7           	and a
1764  918F C0           	ret nz
1765  9190
1766  9190 CD 9A 91     	call Incrementa_punteros_de_cajas
1767  9193 DD 2A 38 8C  	ld ix,(Puntero_store_caja)
1768  9197 18 F2        	jr Salta_caja_de_entidades_vacia
1769  9199
1770  9199 C9           	ret
1771  919A
1772  919A              ; **************************************************************************************************
1773  919A              ;
1774  919A              ;	08/05/23
1775  919A              ;
1776  919A              ;	Incrementamos los dos punteros de entidades. (+1).
1777  919A
1778  919A              Incrementa_punteros_de_cajas
1779  919A
1780  919A 2A 3A 8C     	ld hl,(Puntero_restore_caja)
1781  919D 22 38 8C     	ld (Puntero_store_caja),hl
1782  91A0 2A 3C 8C     	ld hl,(Indice_restore_caja)
1783  91A3 23           	inc hl
1784  91A4 23           	inc hl
1785  91A5 22 3C 8C     	ld (Indice_restore_caja),hl
1786  91A8 CD 50 91         call Extrae_address
1787  91AB 22 3A 8C         ld (Puntero_restore_caja),hl
1788  91AE C9               ret
1789  91AF
1790  91AF              ; -----------------------------------------------------------
1791  91AF
1792  91AF              ; Teclado.
1793  91AF
1794  91AF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1795  91B1 DB FE        	in a,($fe)
1796  91B3 E6 01        	and $01
1797  91B5 28 02        	jr z,1f
1798  91B7 18 F6        	jr Pulsa_ENTER
1799  91B9 C9           1 ret
1800  91BA
1801  91BA              ; **************************************************************************************************
1802  91BA              ;
1803  91BA              ; Temporización.
1804  91BA
1805  91BA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1806  91BA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1807  91BA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1808  91BA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1809  91BA
1810  91BA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1811  91BA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1812  91BA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1813  91BA
1814  91BA              ; A partir de $4f61 no hace falta DELAY.
1815  91BA
1816  91BA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1817  91BA
1818  91BA              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1819  91BA              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1820  91BA              ;	LD A,B
1821  91BA              ;	AND A
1822  91BA              ;	JR NZ,wait
1823  91BA              ;	RET
1824  91BA
1825  91BA              ; ---------------------------------------------------------------------------------------------------------------
1826  91BA              ;
1827  91BA              ;	13/07/24
1828  91BA              ;
1829  91BA
1830  91BA              Inicia_Shield
1831  91BA
1832  91BA 21 93 8C     	ld hl,Datos_Shield
1833  91BD 22 97 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1834  91C0
1835  91C0 7E           	ld a,(hl)
1836  91C1 32 9A 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1837  91C4
1838  91C4 3E 01        	ld a,1
1839  91C6 32 9B 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1840  91C9
1841  91C9 C9           	ret
1842  91CA
1843  91CA              ; ---------- ---------- ---------- ---------- ----------
1844  91CA              ;
1845  91CA              ;	30/11/24
1846  91CA              ;
1847  91CA              ;	Limpia la caja de entidades de una entidad eliminada.
1848  91CA              ;
1849  91CA              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1850  91CA              ;	MODIFY: A,BC,DE y HL.
1851  91CA
1852  91CA              Limpia_caja_de_entidades
1853  91CA
1854  91CA DD E5        	push ix
1855  91CC E1           	pop hl
1856  91CD AF           	xor a
1857  91CE 77           	ld (hl),a
1858  91CF 5D           	ld e,l
1859  91D0 54           	ld d,h
1860  91D1 1C           	inc e
1861  91D2 01 0B 00     	ld bc,11
1862  91D5 ED B0        	ldir
1863  91D7 C9           	ret
1864  91D8
1865  91D8              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1866  91D8              ;
1867  91D8              ;	4/6/24
1868  91D8              ;
1869  91D8              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1870  91D8              ;
1871  91D8              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1872  91D8              ;
1873  91D8
1874  91D8              Actualiza_pantalla
1875  91D8
1876  91D8 3E 02        	ld a,2
1877  91DA D3 FE        	out ($fe),a
1878  91DC
1879  91DC 3A 6F 8C     	ld a,(Ctrl_3)
1880  91DF CB 57        	bit 2,a
1881  91E1 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1882  91E3
1883  91E3              Borrando_entidades
1884  91E3
1885  91E3 2A 69 8C     	ld hl,(Scanlines_album_SP)
1886  91E6 CD 50 91     	call Extrae_address
1887  91E9 24           	inc h
1888  91EA 25           	dec h
1889  91EB 28 05        	jr z,Pintando_entidades
1890  91ED CD 88 96     	call Pinta_Sprites
1891  91F0 18 F1        	jr Borrando_entidades
1892  91F2
1893  91F2              Pintando_entidades
1894  91F2
1895  91F2 2A 6B 8C     	ld hl,(India_SP)
1896  91F5 2C           	inc l
1897  91F6 CD 50 91     	call Extrae_address
1898  91F9 24           	inc h
1899  91FA 25           	dec h
1900  91FB 28 0E        	jr z,Ejecuta_escudo
1901  91FD 1C           	inc e
1902  91FE 1C           	inc e
1903  91FF ED 53 6B 8C  	ld (India_SP),de
1904  9203 CD 50 91     	call Extrae_address
1905  9206 CD 88 96     	call Pinta_Sprites
1906  9209 18 E7        	jr Pintando_entidades
1907  920B
1908  920B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1909  920B
1910  920B              Ejecuta_escudo
1911  920B
1912  920B 3A 99 8C     	ld a,(Shield)
1913  920E A7           	and a
1914  920F 20 2F        	jr nz,Aplica_Shield
1915  9211
1916  9211              Borrando_Amadeus
1917  9211
1918  9211 21 6F 8C     	ld hl,Ctrl_3
1919  9214 CB 6E        	bit 5,(hl)
1920  9216 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1921  9218
1922  9218 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
1923  921B CD 50 91     	call Extrae_address
1924  921E 24           	inc h
1925  921F 25           	dec h
1926  9220 28 03        	jr z,Pintando_Amadeus
1927  9222 CD 88 96     	call Pinta_Sprites
1928  9225
1929  9225              Pintando_Amadeus
1930  9225
1931  9225 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1932  9228 CD 50 91     	call Extrae_address
1933  922B 24           	inc h
1934  922C 25           	dec h
1935  922D 28 03        	jr z,1F
1936  922F CD 88 96     	call Pinta_Sprites
1937  9232
1938  9232              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1939  9232
1940  9232 21 6F 8C     1 ld hl,Ctrl_3
1941  9235 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1942  9237 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1943  9239 CB AE        	res 5,(hl)
1944  923B
1945  923B 3E 01        	ld a,1												; Borde azul.
1946  923D D3 FE        	out ($fe),a
1947  923F
1948  923F C9           	ret
1949  9240
1950  9240              Aplica_Shield
1951  9240
1952  9240              ;	Bit 1 "1" (Shield_3) Sólo borra.
1953  9240              ;		  "0"     ""     Borra/Pinta.
1954  9240              ;	Bit 2    ""  RET.	 No borra, no pinta.
1955  9240
1956  9240 21 9B 8C     	ld hl,Shield_3
1957  9243
1958  9243 CB 5E        	bit 3,(hl)
1959  9245 20 DE        	jr nz,Pintando_Amadeus
1960  9247
1961  9247 CB 56        	bit 2,(hl)
1962  9249 20 E7        	jr nz,1B
1963  924B
1964  924B CB 4E        	bit 1,(hl)
1965  924D C4 54 92     	call nz,Borra_Amadeus_shield
1966  9250
1967  9250 28 BF        	jr z,Borrando_Amadeus
1968  9252 18 DE        	jr 1B
1969  9254
1970  9254              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1971  9254
1972  9254              Borra_Amadeus_shield
1973  9254
1974  9254 3A 6F 8C     	ld a,(Ctrl_3)
1975  9257 CB 6F        	bit 5,a
1976  9259 28 08        	jr z,1F
1977  925B
1978  925B 2A 51 8C     	ld hl,(Album_de_borrado_Amadeus)
1979  925E CD 50 91     	call Extrae_address
1980  9261 18 06        	jr 2F
1981  9263
1982  9263 2A 4F 8C     1 ld hl,(Album_de_pintado_Amadeus)
1983  9266 CD 50 91     	call Extrae_address
1984  9269
1985  9269 CD 88 96     2 call Pinta_Sprites
1986  926C
1987  926C AF           	xor a
1988  926D 3C           	inc a											; Asegura NZ en la salida de la rutina.
1989  926E
1990  926E C9           	ret
1991  926F
1992  926F              Pinta_Amadeus_shield
1993  926F
1994  926F 2A 4F 8C     	ld hl,(Album_de_pintado_Amadeus)
1995  9272 CD 50 91     	call Extrae_address
1996  9275 CD 88 96     	call Pinta_Sprites
1997  9278
1998  9278 AF           	xor a
1999  9279 3C           	inc a											; Asegura NZ en la salida de la rutina.
2000  927A
2001  927A C9           	ret
2002  927B
2003  927B              Borra_Pinta_Amadeus_shield
2004  927B
2005  927B CD 54 92     	call Borra_Amadeus_shield
2006  927E CD 6F 92     	call Pinta_Amadeus_shield
2007  9281 C9           	ret
2008  9282
2009  9282              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2010  9282              ;
2011  9282              ;	19/6/24
2012  9282              ;
2013  9282
2014  9282              Teclado
2015  9282
2016  9282              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2017  9282
2018  9282 3E F7        	ld a,$f7												; "5" para disparar.
2019  9284 DB FE        	in a,($fe)
2020  9286 E6 10        	and $10
2021  9288
2022  9288 CC 23 A3     	call z,Genera_disparo_Amadeus
2023  928B
2024  928B 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2025  928D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2026  928F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2027  9291 CC F5 9D         call z,Amadeus_a_izquierda
2028  9294
2029  9294 3E F7        	ld a,$f7
2030  9296 DB FE        	in a,($fe)
2031  9298 E6 01        	and $01
2032  929A C8           	ret z
2033  929B
2034  929B 3E F7        	ld a,$f7
2035  929D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2036  929F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2037  92A1 CC 0D 9E     	call z,Amadeus_a_derecha
2038  92A4
2039  92A4 C9           	ret
2040  92A5
2041  92A5              ; ------------------------------------------------------------------------------------------------------------------------
2042  92A5              ;
2043  92A5              ;	06/07/24
2044  92A5              ;
2045  92A5
2046  92A5              Genera_explosion
2047  92A5
2048  92A5 21 81 8C     	ld hl,Clock_explosion
2049  92A8 35           	dec (hl)
2050  92A9 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2051  92AB
2052  92AB              Borra_entidad_colisionada
2053  92AB
2054  92AB CD 8E 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2055  92AE
2056  92AE DD E5        	push ix
2057  92B0 CD AA 90     	call Cargamos_registros_con_explosion
2058  92B3 CD 94 95     	call Genera_datos_de_impresion
2059  92B6 DD E1        	pop ix
2060  92B8
2061  92B8 AF           	xor a
2062  92B9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2063  92BA
2064  92BA C9           	ret
2065  92BB
2066  92BB              Siguiente_frame_explosion
2067  92BB
2068  92BB 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2069  92BD
2070  92BD              ; Avanza Frame de explosión.
2071  92BD
2072  92BD DD 6E 07     	ld l,(ix+7)
2073  92C0 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2074  92C3
2075  92C3 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2076  92C6
2077  92C6 79           	ld a,c
2078  92C7 95           	sub l
2079  92C8 20 44        	jr nz,1F
2080  92CA
2081  92CA
2082  92CA              ; Fín de la entidad !!!!!!!!!!!!!
2083  92CA              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2084  92CA
2085  92CA              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2086  92CA              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2087  92CA              ; Entidades_en_curso db 0								; Entidades en pantalla.
2088  92CA
2089  92CA              ; La entidad eliminada, es la última del nivel ?
2090  92CA
2091  92CA 3A 40 8C     	ld a,(Numero_de_entidades)
2092  92CD A7           	and a
2093  92CE 28 2F        	jr z,2F
2094  92D0
2095  92D0              ; Decrementa (Numero_de_entidades)
2096  92D0
2097  92D0 3D           	dec a
2098  92D1 32 40 8C     	ld (Numero_de_entidades),a
2099  92D4 21 42 8C     	ld hl,Entidades_en_curso
2100  92D7 35           	dec (hl)
2101  92D8
2102  92D8              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2103  92D8              ; IX apunta al 1er .db de la entidad eliminada.
2104  92D8
2105  92D8 2A 3E 8C     	ld hl,(Puntero_indice_master)
2106  92DB CD 50 91     	call Extrae_address
2107  92DE
2108  92DE DD E5        	push ix
2109  92E0 D1           	pop de
2110  92E1
2111  92E1 01 0C 00     	ld bc,12
2112  92E4 ED B0        	ldir
2113  92E6
2114  92E6              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2115  92E6
2116  92E6 CD 7E 90     	call Obtenemos_puntero_de_impresion
2117  92E9
2118  92E9 DD 6E 05     	ld l,(ix+5)
2119  92EC 2C           	inc l
2120  92ED DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2121  92F0
2122  92F0 CD 68 95     	call Genera_coordenadas
2123  92F3
2124  92F3 ED 4B F9 8B  	ld bc,(Coordenada_X)
2125  92F7
2126  92F7 DD 71 01     	ld (ix+1),c
2127  92FA DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2128  92FD
2129  92FD 18 AC        	jr Borra_entidad_colisionada
2130  92FF
2131  92FF              ; (Numero_de_entidades) = "0". (Numero_parcial_de_entidades)="0" ???
2132  92FF
2133  92FF 21 41 8C     2 ld hl,Numero_parcial_de_entidades
2134  9302 35           	dec (hl)
2135  9303
2136  9303 F3           	di
2137  9304 28 FE        	jr z,$
2138  9306 FB           	ei																;! Nivel superado !!!!!!!!!!!!!!!
2139  9307
2140  9307              	; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2141  9307
2142  9307 23           	inc hl
2143  9308 35           	dec (hl)
2144  9309
2145  9309 CD CA 91     	call Limpia_caja_de_entidades
2146  930C 18 9D        	jr Borra_entidad_colisionada
2147  930E
2148  930E 23           1 inc hl
2149  930F 23           	inc hl
2150  9310
2151  9310 DD 75 07     	ld (ix+7),l
2152  9313 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2153  9316
2154  9316 18 93        	jr Borra_entidad_colisionada
2155  9318
2156  9318              ; ----- ----- ----- ----- -----
2157  9318
2158  9318              Genera_explosion_Amadeus
2159  9318
2160  9318 21 82 8C     	ld hl,Clock_explosion_Amadeus
2161  931B 35           	dec (hl)
2162  931C 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2163  931E
2164  931E              Borra_Amadeus_impactado
2165  931E
2166  931E CD F3 8E     	call Change_Amadeus
2167  9321 CD BE 90     	call Cargamos_registros_con_explosion_Amadeus
2168  9324 CD DF 90     	call Genera_datos_de_impresion_Amadeus
2169  9327
2170  9327 21 6F 8C     	ld hl,Ctrl_3
2171  932A CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2172  932C
2173  932C AF           	xor a
2174  932D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2175  932E
2176  932E C9           	ret
2177  932F
2178  932F              Siguiente_frame_explosion_Amadeus
2179  932F
2180  932F 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2181  9331
2182  9331              ; Avanza Frame de explosión.
2183  9331
2184  9331 2A B5 89     	ld hl,(Pamm_Amadeus)
2185  9334 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2186  9337
2187  9337 79           	ld a,c
2188  9338 95           	sub l
2189  9339 20 0B        	jr nz,1F
2190  933B
2191  933B              ; Fín de Amadeus !!!!!!!!!!!!!
2192  933B              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2193  933B
2194  933B AF           	xor a
2195  933C 32 B2 89     	ld (Impacto_Amadeus),a
2196  933F 21 6F 8C     	ld hl,Ctrl_3
2197  9342 CB F6        	set 6,(hl)
2198  9344
2199  9344 18 D8        	jr Borra_Amadeus_impactado
2200  9346
2201  9346 23           1 inc hl
2202  9347 23           	inc hl
2203  9348 22 B5 89     	ld (Pamm_Amadeus),hl
2204  934B 18 D1        	jr Borra_Amadeus_impactado
2205  934D
2206  934D              ; ---------------------------------------------------------------
2207  934D
2208  934D              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 934D              ; ******************************************************************************************************************************************************************************************
   2+ 934D              ;
   3+ 934D              ;   21/04/24
   4+ 934D              ;
   5+ 934D              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 934D              ;   (XOR) bit a bit.
   7+ 934D              ;
   8+ 934D              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 934D
  10+ 934D              Derivando_RND
  11+ 934D
  12+ 934D 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9350
  14+ 9350 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9352 C5               push bc
  16+ 9353              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9353 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9356              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9356
  20+ 9356 A7           6 and a                                 ; Carry a "0".
  21+ 9357 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9359 30 02            jr nc,1F
  23+ 935B
  24+ 935B CB C1            set 0,c
  25+ 935D
  26+ 935D 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 935E E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9360 5F               ld e,a
  29+ 9361
  30+ 9361 7A               ld a,d
  31+ 9362 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9364 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9366
  34+ 9366 CB 3F            srl a
  35+ 9368
  36+ 9368 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9369
  38+ 9369 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 936A 28 04            jr z,4F
  40+ 936C
  41+ 936C CB FF            set 7,a
  42+ 936E 18 02            jr 5F
  43+ 9370
  44+ 9370 CB BF        4 res 7,a
  45+ 9372
  46+ 9372 CB 21        5 sla c
  47+ 9374 10 E0            djnz 6B
  48+ 9376
  49+ 9376 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9377
  51+ 9377 77               ld (hl),a
  52+ 9378 23               inc hl
  53+ 9379 C1               pop bc
  54+ 937A 10 D4            djnz 3B
  55+ 937C
  56+ 937C C9               ret
  57+ 937D
  58+ 937D
  59+ 937D
# file closed: RND_Derivando.asm
2209  937D              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 937D              ;---------------------------------------------------------------------------------------------------------------
   2+ 937D              ;
   3+ 937D              ;   13/11/24
   4+ 937D
   5+ 937D              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 937D
   7+ 937D              Genera_movimientos_masticados_del_nivel
   8+ 937D
   9+ 937D              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 937D
  11+ 937D              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 937D              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 937D              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 937D
  15+ 937D 2D           	dec l
  16+ 937E 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 937F 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9380 4E           	ld c,(hl)
  19+ 9381
  20+ 9381 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9382 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9383
  23+ 9383              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9383
  25+ 9383 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9384
  27+ 9384 CD C2 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9387
  29+ 9387              ;	Caja Master inicializada ???
  30+ 9387
  31+ 9387 7E           	ld a,(hl)
  32+ 9388 A7           	and a
  33+ 9389 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 938B
  35+ 938B              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 938B
  37+ 938B C1           	pop bc
  38+ 938C 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 938D C5           	push bc
  40+ 938E
  41+ 938E CD 62 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9391 CD F6 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9394
  44+ 9394 3A F8 8B     	ld a,(Tipo)
  45+ 9397 CD D2 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 939A
  47+ 939A              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 939A
  49+ 939A              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 939A              ;	ld a,(hl)
  51+ 939A              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 939A
  53+ 939A              ;	ld hl,Posicion_inicio
  54+ 939A              ;	ld (hl),a
  55+ 939A
  56+ 939A              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 939A              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 939A
  59+ 939A CD 2A 90     	call Construye_movimientos_masticados_entidad
  60+ 939D
  61+ 939D 2A 3E 8C     	ld hl,(Puntero_indice_master)
  62+ 93A0 CD 50 91     	call Extrae_address
  63+ 93A3
  64+ 93A3 5D           	ld e,l
  65+ 93A4 54           	ld d,h
  66+ 93A5
  67+ 93A5 CD 23 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 93A8
  69+ 93A8              Movimientos_masticados_construidos
  70+ 93A8
  71+ 93A8 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 93A9
  73+ 93A9 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 93AA 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 93AB
  76+ 93AB 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 93AC 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 93AE
  79+ 93AE C9           	ret
  80+ 93AF
  81+ 93AF              ;---------------------------------------------------------------------------------------------------------------
  82+ 93AF              ;
  83+ 93AF              ;   9/11/24
  84+ 93AF              ;
  85+ 93AF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 93AF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 93AF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 93AF              ;	_ de la 1ª entidad del Nivel.
  89+ 93AF              ;
  90+ 93AF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 93AF
  92+ 93AF              ;	MODIFICA: HL,DE y A.
  93+ 93AF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 93AF
  95+ 93AF              Inicializa_1er_Nivel
  96+ 93AF
  97+ 93AF              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 93AF
  99+ 93AF 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 93B2 CD 50 91     	call Extrae_address
 101+ 93B5 ED 53 8F 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 93B9
 103+ 93B9 7E           	ld a,(hl)
 104+ 93BA 32 40 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 93BD
 106+ 93BD 2C           	inc l
 107+ 93BE 22 91 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 93C1
 109+ 93C1 C9           	ret
 110+ 93C2
 111+ 93C2              ; ----------------------
 112+ 93C2              ;
 113+ 93C2              ;	13/11/24
 114+ 93C2              ;
 115+ 93C2
 116+ 93C2              Situa_en_Caja_Master
 117+ 93C2
 118+ 93C2 CD E1 94         call Calcula_salto_en_BC
 119+ 93C5 21 58 89         ld hl,Indice_de_cajas_master
 120+ 93C8 A7               and a
 121+ 93C9 ED 4A            adc hl,bc
 122+ 93CB 22 3E 8C       	ld (Puntero_indice_master),hl
 123+ 93CE CD 50 91     	call Extrae_address
 124+ 93D1 C9           	ret
 125+ 93D2
 126+ 93D2              ; ----------------------
 127+ 93D2
 128+ 93D2              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 93D2              ; 	ld bc,4
 130+ 93D2              ; 	ldir
 131+ 93D2              ; 	ret
 132+ 93D2
 133+ 93D2 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 93D3 CD E1 94         call Calcula_salto_en_BC
 135+ 93D6 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 93D9 A7               and a
 137+ 93DA ED 4A            adc hl,bc
 138+ 93DC CD 50 91         call Extrae_address
 139+ 93DF 22 29 8C         ld (Puntero_indice_mov),hl
 140+ 93E2 C9               ret
 141+ 93E3
 142+ 93E3              ;---------------------------------------------------------------------------------------------------------------
 143+ 93E3              ;
 144+ 93E3              ;   13/11/24
 145+ 93E3              ;
 146+ 93E3              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 93E3
 148+ 93E3
 149+ 93E3              Prepara_Cajas_de_Entidades
 150+ 93E3
 151+ 93E3              ; Preparamos los punteros de las cajas de entidades:
 152+ 93E3
 153+ 93E3 CD 3A 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 93E6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 93E6 CD 2C 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 93E9
 157+ 93E9 2A 91 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 93EC
 159+ 93EC              ; En este punto:
 160+ 93EC              ;
 161+ 93EC              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 93EC              ; B contiene (Numero_parcial_de_entidades).
 163+ 93EC
 164+ 93EC C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 93ED
 166+ 93ED 7E           	ld a,(hl)
 167+ 93EE
 168+ 93EE CD C2 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 93F1
 170+ 93F1 ED 5B 38 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 93F5
 172+ 93F5 D5           	push de
 173+ 93F6 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 93F8
 175+ 93F8 01 0C 00     	ld bc,12
 176+ 93FB ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 93FD              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 93FD
 179+ 93FD              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 93FD              ;
 181+ 93FD              ;
 182+ 93FD              ; ------------------------------------------------------ IX
 183+ 93FD              ; ------------------------------------------------------ IX
 184+ 93FD              ; ------------------------------------------------------ IX
 185+ 93FD              ; ------------------------------------------------------ IX
 186+ 93FD
 187+ 93FD DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 93FF
 189+ 93FF CD 7E 90     	call Obtenemos_puntero_de_impresion
 190+ 9402
 191+ 9402 DD 6E 05     	ld l,(ix+5)
 192+ 9405 2C           	inc l
 193+ 9406 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 9409
 195+ 9409 D5           	push de														; Push (Puntero_objeto).
 196+ 940A E5           	push hl														; Push (Puntero_de_impresion).
 197+ 940B
 198+ 940B CD 68 95     	call Genera_coordenadas
 199+ 940E
 200+ 940E ED 4B F9 8B  	ld bc,(Coordenada_X)
 201+ 9412
 202+ 9412 DD 71 01     	ld (ix+1),c
 203+ 9415 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 9418
 205+ 9418 CD 8E 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 941B
 207+ 941B DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 941D D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 941E
 210+ 941E CD 94 95     	call Genera_datos_de_impresion
 211+ 9421
 212+ 9421 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 9423
 214+ 9423              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 9423
 216+ 9423 CD 9A 94     	call Decrementa_Contador_de_mov_masticados
 217+ 9426 CD 77 94     	call Limpiamos_bandeja_DRAW
 218+ 9429 CD 9A 91     	call Incrementa_punteros_de_cajas
 219+ 942C
 220+ 942C              ; Siguiente entidad del Nivel.
 221+ 942C
 222+ 942C 2A 91 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 942F 23           	inc hl 														; _ entidad del Nivel.
 224+ 9430
 225+ 9430 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 9431
 227+ 9431 10 B9        	djnz 1B
 228+ 9433
 229+ 9433 C9           	ret
 230+ 9434
 231+ 9434              ; -------------------------------------------------------------------------------------------------------------------
 232+ 9434              ;
 233+ 9434              ;	27/5/24
 234+ 9434              ;
 235+ 9434              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 9434              ;
 237+ 9434
 238+ 9434              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 9434              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 9434
 241+ 9434 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 9437 CD F6 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 943A
 244+ 943A
 245+ 943A              Construye_movimientos_masticados_Amadeus
 246+ 943A
 247+ 943A 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 943D CD 71 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 9440              ;															; _ el (Contador_de_mov_masticados).
 250+ 9440 CD 56 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 9443              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 9443
 253+ 9443              ; Generamos movimientos masticados de Amadeus.
 254+ 9443
 255+ 9443 06 79        	ld b,121												; $0079, 121d.
 256+ 9445
 257+ 9445 C5           1 push bc
 258+ 9446 CD AB 97     	call Draw
 259+ 9449 CD 56 90     	call Guarda_movimiento_masticado
 260+ 944C
 261+ 944C CD 1F 9B     	call Mov_right
 262+ 944F CD 1F 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 9452
 264+ 9452 C1           	pop bc
 265+ 9453 10 F0        	djnz 1B
 266+ 9455
 267+ 9455              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 9455
 269+ 9455              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 9455              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 9455
 272+ 9455 2A FF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 9458 01 08 00     	ld bc,8
 274+ 945B A7           	and a
 275+ 945C ED 42        	sbc hl,bc
 276+ 945E 22 FF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 9461
 278+ 9461 C9           	ret
 279+ 9462
 280+ 9462              ; ---------------------------------------------------------------------
 281+ 9462              ;
 282+ 9462              ;	10/02/24
 283+ 9462              ;
 284+ 9462              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 9462              ;
 286+ 9462              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 9462
 288+ 9462              Definicion_segun_tipo
 289+ 9462
 290+ 9462 CD E1 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 9465 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9468 CD EC 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 946B C9           	ret
 294+ 946C
 295+ 946C              ; ---------------------------------------------------------------------
 296+ 946C              ;
 297+ 946C              ;	6/7/24
 298+ 946C
 299+ 946C
 300+ 946C              Store_Restore_cajas
 301+ 946C
 302+ 946C ED 5B 38 8C  	ld de,(Puntero_store_caja)
 303+ 9470 CD 23 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9473 CD 9A 91     	call Incrementa_punteros_de_cajas
 305+ 9476 C9           	ret
 306+ 9477
 307+ 9477              ; ---------------------------------------------------------------------
 308+ 9477              ;
 309+ 9477              ;	23/6/24
 310+ 9477              ;
 311+ 9477              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9477              ;
 313+ 9477              ;	MODIFY: HL
 314+ 9477
 315+ 9477              Limpiamos_bandeja_DRAW
 316+ 9477
 317+ 9477 ED 73 47 8C  	ld (Stack),sp
 318+ 947B 31 1D 8C     	ld sp,Vel_left
 319+ 947E
 320+ 947E AF           	xor a
 321+ 947F 67           	ld h,a
 322+ 9480 6F           	ld l,a
 323+ 9481
 324+ 9481 E5           	push hl
 325+ 9482 E5           	push hl
 326+ 9483 E5           	push hl
 327+ 9484 E5           	push hl
 328+ 9485 E5           	push hl
 329+ 9486 E5           	push hl
 330+ 9487 E5           	push hl
 331+ 9488 E5           	push hl
 332+ 9489 E5           	push hl
 333+ 948A E5           	push hl
 334+ 948B E5           	push hl
 335+ 948C E5           	push hl
 336+ 948D E5           	push hl
 337+ 948E E5           	push hl
 338+ 948F E5           	push hl
 339+ 9490 E5           	push hl
 340+ 9491 E5           	push hl
 341+ 9492 E5           	push hl
 342+ 9493
 343+ 9493 33           	inc sp
 344+ 9494
 345+ 9494 E5           	push hl
 346+ 9495 ED 7B 47 8C  	ld sp,(Stack)
 347+ 9499
 348+ 9499 C9           	ret
 349+ 949A
 350+ 949A              ; ---------------------------------------------------------------------
 351+ 949A              ;
 352+ 949A              ;	23/11/24
 353+ 949A              ;
 354+ 949A              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 949A
 356+ 949A              Decrementa_Contador_de_mov_masticados
 357+ 949A
 358+ 949A DD 6E 09     	ld l,(ix+9)
 359+ 949D DD 66 0A     	ld h,(ix+10)
 360+ 94A0
 361+ 94A0 2B           	dec hl
 362+ 94A1
 363+ 94A1 DD 75 09     	ld (ix+9),l
 364+ 94A4 DD 74 0A     	ld (ix+10),h
 365+ 94A7
 366+ 94A7 C9           	ret
 367+ 94A8
 368+ 94A8              ; ---------------------------------------------------------------------
 369+ 94A8              ;
 370+ 94A8              ;	24/11/24
 371+ 94A8
 372+ 94A8              Reinicia_entidad_maliciosa
 373+ 94A8
 374+ 94A8              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 94A8
 376+ 94A8 CD 8C 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 94AB CD 99 9F     	call Transfiere_datos_de_contadores
 378+ 94AE
 379+ 94AE              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 94AE
 381+ 94AE DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 94B1 CD 62 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 94B4
 384+ 94B4 7D           	ld a,l
 385+ 94B5 C6 0B        	add 11
 386+ 94B7 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 94B8
 388+ 94B8 CD 50 91     	call Extrae_address
 389+ 94BB
 390+ 94BB DD 75 07     	ld (ix+7),l
 391+ 94BE DD 74 08     	ld (ix+8),h
 392+ 94C1
 393+ 94C1 CD 7E 90     	call Obtenemos_puntero_de_impresion
 394+ 94C4
 395+ 94C4              ; Incrementa (Contador_de_vueltas)x2.
 396+ 94C4              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 94C4
 398+ 94C4              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 94C4              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 94C4              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 94C4              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 94C4              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 94C4
 404+ 94C4 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 94C8
 406+ 94C8 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 94CB CB 2F        	sra a
 408+ 94CD CB 2F        	sra a
 409+ 94CF
 410+ 94CF DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 94D2
 412+ 94D2 3E 40        	ld a,$40
 413+ 94D4 DD BE 03     	cp (ix+3)
 414+ 94D7 C0           	ret nz
 415+ 94D8
 416+ 94D8              ; Límitador.
 417+ 94D8
 418+ 94D8              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 94D8
 420+ 94D8 DD CB 03 2E  	sra (ix+3)
 421+ 94DC DD CB 0B 2E  	sra (ix+11)
 422+ 94E0
 423+ 94E0 C9           	ret
 424+ 94E1
 425+ 94E1              ;	------------------------------------------------------------------------------------
 426+ 94E1              ;
 427+ 94E1              ;	09/11/24
 428+ 94E1              ;
 429+ 94E1              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 94E1              ;
 431+ 94E1              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 94E1              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 94E1
 434+ 94E1 A7           Calcula_salto_en_BC and a
 435+ 94E2 28 04        	jr z,1F
 436+ 94E4 CB 27        	sla a
 437+ 94E6 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 94E8 4F           1 ld c,a
 439+ 94E9 06 00        	ld b,0
 440+ 94EB C9           	ret
 441+ 94EC
 442+ 94EC              ; ------------------------------------------------------------------
 443+ 94EC              ;
 444+ 94EC              ;	19/1/24
 445+ 94EC              ;
 446+ 94EC              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 94EC              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 94EC
 449+ 94EC A7           Situa_en_datos_de_definicion and a
 450+ 94ED ED 4A        	adc hl,bc
 451+ 94EF CD 50 91     	call Extrae_address
 452+ 94F2 22 45 8C         ld (Datos_de_entidad),hl
 453+ 94F5 C9           	ret
 454+ 94F6
 455+ 94F6              ; ----------------------------------------------------------------------------------------------------------
 456+ 94F6              ;
 457+ 94F6              ;	24/6/24
 458+ 94F6              ;
 459+ 94F6              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 94F6              ;	_ de entidad.
 461+ 94F6              ;
 462+ 94F6              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 94F6              ;
 464+ 94F6              ;
 465+ 94F6              ;	MODIFICA: HL,DE y BC
 466+ 94F6
 467+ 94F6
 468+ 94F6              Definicion_de_entidad_a_bandeja_DRAW
 469+ 94F6
 470+ 94F6 11 F8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 94F9 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 94FA 12           	ld (de),a
 473+ 94FB 23           	inc hl
 474+ 94FC              ;
 475+ 94FC 11 06 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 94FF 01 02 00     	ld bc,2
 477+ 9502 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 9504              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 9504 11 FB 8B     	ld de,Contador_de_vueltas
 480+ 9507 7E           	ld a,(hl)
 481+ 9508 12           	ld (de),a
 482+ 9509 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 950A
 484+ 950A 11 0D 8C     	ld de,Indice_Sprite_der
 485+ 950D 01 04 00     	ld bc,4
 486+ 9510 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 9512
 488+ 9512 11 15 8C     	ld de,Posicion_inicio
 489+ 9515 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 9518 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 951A
 492+ 951A 11 FF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 951D 01 02 00     	ld bc,2
 494+ 9520 ED B0        	ldir
 495+ 9522
 496+ 9522 C9           	ret
 497+ 9523
 498+ 9523              ; ----------------------------------------------------------------------------------------------------------
 499+ 9523              ;
 500+ 9523              ;	1/8/24
 501+ 9523              ;
 502+ 9523
 503+ 9523              Parametros_de_bandeja_DRAW_a_caja
 504+ 9523
 505+ 9523 21 F8 8B     	ld hl,Bandeja_DRAW
 506+ 9526 01 0C 00     	ld bc,12
 507+ 9529 ED B0        	ldir
 508+ 952B C9           	ret
 509+ 952C
 510+ 952C              ;---------------------------------------------------------------------------------------------------------------
 511+ 952C              ;
 512+ 952C              ;	13/11/24
 513+ 952C              ;
 514+ 952C              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 952C              ;
 516+ 952C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 952C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 952C
 519+ 952C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 952C              ;			- Actualiza (Numero_de_entidades).
 521+ 952C
 522+ 952C              ;	MODIFICA: A y B.
 523+ 952C
 524+ 952C
 525+ 952C              Inicializa_Numero_parcial_de_entidades
 526+ 952C
 527+ 952C 3A 40 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 952F FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 9531 38 0E        	jr c,1F
 530+ 9533 28 0C        	jr z,1F
 531+ 9535
 532+ 9535              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 9535              ; Actualizamos variables.
 534+ 9535
 535+ 9535 D6 06        	sub 6
 536+ 9537 32 40 8C     	ld (Numero_de_entidades),a
 537+ 953A 3E 06        	ld a,6
 538+ 953C 32 41 8C     	ld (Numero_parcial_de_entidades),a
 539+ 953F 47           	ld b,a
 540+ 9540 C9           	ret
 541+ 9541
 542+ 9541              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 9541              ; (Numero_de_entidades)="0".
 544+ 9541
 545+ 9541 32 41 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 9544 47           	ld b,a
 547+ 9545 AF           	xor a
 548+ 9546 32 40 8C     	ld (Numero_de_entidades),a
 549+ 9549 C9           	ret
 550+ 954A
# file closed: Rutinas_de_inicio_y_niveles.asm
2210  954A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 954A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 954A              ;
   3+ 954A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 954A              ;
   5+ 954A              ; *****************************************************************************************************************************************************************************************
   6+ 954A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 954A
   8+ 954A 7C           calcula_tercio ld a,h
   9+ 954B E6 18        	and $18
  10+ 954D CB 2F        	sra a
  11+ 954F CB 2F        	sra a
  12+ 9551 CB 2F        	sra a
  13+ 9553 C9           	ret
  14+ 9554
# file closed: calcula_tercio.asm
2211  9554              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9554              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9554              ;
   3+ 9554              ;
   4+ 9554              ;	CLS.
   5+ 9554              ;
   6+ 9554              ;	Limpia la pantalla y define sus atributos.
   7+ 9554              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9554              ;
   9+ 9554              ;	COLORES: 0 ..... NEGRO
  10+ 9554              ;    		 1 ..... AZUL
  11+ 9554              ; 			 2 ..... ROJO
  12+ 9554              ;			 3 ..... MAGENTA
  13+ 9554              ; 			 4 ..... VERDE
  14+ 9554              ; 			 5 ..... CIAN
  15+ 9554              ;			 6 ..... AMARILLO
  16+ 9554              ; 			 7 ..... BLANCO
  17+ 9554              ;
  18+ 9554              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9554              ;
  20+ 9554              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9554
  22+ 9554
  23+ 9554 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9557 11 01 40     	LD DE,$4001
  25+ 955A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 955D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 955F ED B0        	LDIR
  28+ 9561 01 FF 02     	LD BC,767
  29+ 9564 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9565 ED B0        	LDIR
  31+ 9567 C9           	ret
  32+ 9568
# file closed: Cls.asm
2212  9568              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9568              ; ------------------------------------------------------------------------
   2+ 9568              ;
   3+ 9568              ;	30/1/24
   4+ 9568              ;
   5+ 9568              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9568              ;	Fila superior "0", Columna izquierda "0".
   7+ 9568              ;
   8+ 9568              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9568              ;
  10+ 9568              ;	Modifica: A,BC y DE.
  11+ 9568
  12+ 9568              Genera_coordenadas
  13+ 9568
  14+ 9568 7D           	ld a,l
  15+ 9569 E6 1F        	and $1f
  16+ 956B
  17+ 956B 32 F9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 956E
  19+ 956E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 956F FE 40        	cp $40
  21+ 9571 38 1C        	jr c,4F
  22+ 9573
  23+ 9573 CD 4A 95     	call calcula_tercio
  24+ 9576 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9577
  26+ 9577 1E 00        	ld e,0
  27+ 9579 7D           	ld a,l
  28+ 957A E6 E0        	and $e0
  29+ 957C 28 01        	jr z,1F
  30+ 957E 04           	inc b
  31+ 957F
  32+ 957F 04           1 inc b
  33+ 9580 05           	dec b
  34+ 9581 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9583              ;														; _ , salimos.
  36+ 9583 1C           3 inc e
  37+ 9584 D6 20        	sub 32
  38+ 9586 20 FB        	jr nz,3B
  39+ 9588 10 F5        	djnz 1B
  40+ 958A
  41+ 958A 7B           2 ld a,e
  42+ 958B 32 FA 8B     	ld (Coordenada_y),a
  43+ 958E C9           	ret
  44+ 958F
  45+ 958F AF           4 xor a
  46+ 9590 32 FA 8B     	ld (Coordenada_y),a
  47+ 9593 C9           	ret
  48+ 9594
# file closed: Genera_coordenadas.asm
2213  9594              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9594              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9594              ;
   3+ 9594              ;	20/09/24
   4+ 9594              ;
   5+ 9594              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9594              ;   DE contiene Puntero_objeto.
   7+ 9594              ;   IX contiene el Puntero de impresión.
   8+ 9594
   9+ 9594              Genera_datos_de_impresion
  10+ 9594
  11+ 9594 ED 73 47 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9598
  13+ 9598 2A 69 8C         ld hl,(Scanlines_album_SP)
  14+ 959B
  15+ 959B 3E 05            ld a,5
  16+ 959D 85               add l
  17+ 959E 6F               ld l,a
  18+ 959F
  19+ 959F F9               ld sp,hl
  20+ 95A0 22 69 8C         ld (Scanlines_album_SP),hl
  21+ 95A3
  22+ 95A3 21 00 00         ld hl,0
  23+ 95A6
  24+ 95A6 DD E5            push ix
  25+ 95A8 3B               dec sp
  26+ 95A9 ED 7A            adc hl,sp
  27+ 95AB D5               push de
  28+ 95AC
  29+ 95AC              ; Recuperamos SP.
  30+ 95AC
  31+ 95AC ED 7B 47 8C      ld sp,(Stack)
  32+ 95B0
  33+ 95B0 E5               push hl
  34+ 95B1 F1               pop af
  35+ 95B2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95B3
  37+ 95B3              ; Tenemos el encabezado listo.
  38+ 95B3              ; Preparamos registros para generar los scanlines.
  39+ 95B3
  40+ 95B3 DD E5            push ix
  41+ 95B5 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95B6
  43+ 95B6 ED 5B 69 8C      ld de,(Scanlines_album_SP)
  44+ 95BA
  45+ 95BA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95BA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95BA
  48+ 95BA 7C               ld a,h
  49+ 95BB FE 50            cp $50
  50+ 95BD 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95BF
  52+ 95BF 20 05            jr nz,2F
  53+ 95C1
  54+ 95C1 7D               ld a,l
  55+ 95C2 FE E0            cp $e0
  56+ 95C4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95C6
  58+ 95C6 7D           2 ld a,l
  59+ 95C7 FE C0            cp $c0
  60+ 95C9 D2 5F 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95CC
  62+ 95CC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95CC
  64+ 95CC CD 5D 9A         call NextScan
  65+ 95CF EB               ex de,hl
  66+ 95D0
  67+ 95D0 73               ld (hl),e
  68+ 95D1 23               inc hl
  69+ 95D2 72               ld (hl),d
  70+ 95D3 23               inc hl
  71+ 95D4
  72+ 95D4 EB               ex de,hl
  73+ 95D5
  74+ 95D5 CD 5D 9A         call NextScan
  75+ 95D8 EB               ex de,hl
  76+ 95D9
  77+ 95D9 73               ld (hl),e
  78+ 95DA 23               inc hl
  79+ 95DB 72               ld (hl),d
  80+ 95DC 23               inc hl
  81+ 95DD
  82+ 95DD EB               ex de,hl
  83+ 95DE
  84+ 95DE CD 5D 9A         call NextScan
  85+ 95E1 EB               ex de,hl
  86+ 95E2
  87+ 95E2 73               ld (hl),e
  88+ 95E3 23               inc hl
  89+ 95E4 72               ld (hl),d
  90+ 95E5 23               inc hl
  91+ 95E6
  92+ 95E6 EB               ex de,hl
  93+ 95E7
  94+ 95E7 CD 5D 9A         call NextScan
  95+ 95EA EB               ex de,hl
  96+ 95EB
  97+ 95EB 73               ld (hl),e
  98+ 95EC 23               inc hl
  99+ 95ED 72               ld (hl),d
 100+ 95EE 23               inc hl
 101+ 95EF
 102+ 95EF EB               ex de,hl
 103+ 95F0
 104+ 95F0 CD 5D 9A         call NextScan
 105+ 95F3 EB               ex de,hl
 106+ 95F4
 107+ 95F4 73               ld (hl),e
 108+ 95F5 23               inc hl
 109+ 95F6 72               ld (hl),d
 110+ 95F7 23               inc hl
 111+ 95F8
 112+ 95F8 EB               ex de,hl
 113+ 95F9
 114+ 95F9 CD 5D 9A         call NextScan
 115+ 95FC EB               ex de,hl
 116+ 95FD
 117+ 95FD 73               ld (hl),e
 118+ 95FE 23               inc hl
 119+ 95FF 72               ld (hl),d
 120+ 9600 23               inc hl
 121+ 9601
 122+ 9601 EB               ex de,hl
 123+ 9602
 124+ 9602 CD 5D 9A         call NextScan
 125+ 9605 EB               ex de,hl
 126+ 9606
 127+ 9606 73               ld (hl),e
 128+ 9607 23               inc hl
 129+ 9608 72               ld (hl),d
 130+ 9609 23               inc hl
 131+ 960A
 132+ 960A EB               ex de,hl
 133+ 960B
 134+ 960B CD 5D 9A         call NextScan
 135+ 960E EB               ex de,hl
 136+ 960F
 137+ 960F 73               ld (hl),e
 138+ 9610 23               inc hl
 139+ 9611 72               ld (hl),d
 140+ 9612 23               inc hl
 141+ 9613
 142+ 9613 EB               ex de,hl
 143+ 9614
 144+ 9614 CD 5D 9A         call NextScan
 145+ 9617 EB               ex de,hl
 146+ 9618
 147+ 9618 73               ld (hl),e
 148+ 9619 23               inc hl
 149+ 961A 72               ld (hl),d
 150+ 961B 23               inc hl
 151+ 961C
 152+ 961C EB               ex de,hl
 153+ 961D
 154+ 961D CD 5D 9A         call NextScan
 155+ 9620 EB               ex de,hl
 156+ 9621
 157+ 9621 73               ld (hl),e
 158+ 9622 23               inc hl
 159+ 9623 72               ld (hl),d
 160+ 9624 23               inc hl
 161+ 9625
 162+ 9625 EB               ex de,hl
 163+ 9626
 164+ 9626 CD 5D 9A         call NextScan
 165+ 9629 EB               ex de,hl
 166+ 962A
 167+ 962A 73               ld (hl),e
 168+ 962B 23               inc hl
 169+ 962C 72               ld (hl),d
 170+ 962D 23               inc hl
 171+ 962E
 172+ 962E EB               ex de,hl
 173+ 962F
 174+ 962F CD 5D 9A         call NextScan
 175+ 9632 EB               ex de,hl
 176+ 9633
 177+ 9633 73               ld (hl),e
 178+ 9634 23               inc hl
 179+ 9635 72               ld (hl),d
 180+ 9636 23               inc hl
 181+ 9637
 182+ 9637 EB               ex de,hl
 183+ 9638
 184+ 9638 CD 5D 9A         call NextScan
 185+ 963B EB               ex de,hl
 186+ 963C
 187+ 963C 73               ld (hl),e
 188+ 963D 23               inc hl
 189+ 963E 72               ld (hl),d
 190+ 963F 23               inc hl
 191+ 9640
 192+ 9640 EB               ex de,hl
 193+ 9641
 194+ 9641 CD 5D 9A         call NextScan
 195+ 9644 EB               ex de,hl
 196+ 9645
 197+ 9645 73               ld (hl),e
 198+ 9646 23               inc hl
 199+ 9647 72               ld (hl),d
 200+ 9648 23               inc hl
 201+ 9649
 202+ 9649 EB               ex de,hl
 203+ 964A
 204+ 964A CD 5D 9A         call NextScan
 205+ 964D EB               ex de,hl
 206+ 964E
 207+ 964E              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 964E              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 964E              ;   _ generar sus scanlines.
 210+ 964E
 211+ 964E              ;    ld (Puntero_de_impresion_disparo),de
 212+ 964E
 213+ 964E 73               ld (hl),e
 214+ 964F 23               inc hl
 215+ 9650 72               ld (hl),d
 216+ 9651 23               inc hl
 217+ 9652
 218+ 9652              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9652
 220+ 9652 22 69 8C         ld (Scanlines_album_SP),hl
 221+ 9655
 222+ 9655 EB               ex de,hl
 223+ 9656
 224+ 9656              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9656
 226+ 9656              ;    call NextScan
 227+ 9656              ;    call NextScan
 228+ 9656
 229+ 9656 22 74 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9659
 231+ 9659              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9659
 233+ 9659 08               ex af,af
 234+ 965A
 235+ 965A F5               push af
 236+ 965B E1               pop hl
 237+ 965C
 238+ 965C 36 10            ld (hl),16
 239+ 965E
 240+ 965E C9               ret
 241+ 965F
 242+ 965F              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 965F
 244+ 965F              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 965F
 246+ 965F 3E 57            ld a,$57
 247+ 9661 94               sub h
 248+ 9662 47               ld b,a
 249+ 9663
 250+ 9663 3E DF            ld a,$df
 251+ 9665 BD               cp l
 252+ 9666 38 04            jr c,1F
 253+ 9668
 254+ 9668 3E 08            ld a,8
 255+ 966A 80               add b
 256+ 966B 47               ld b,a
 257+ 966C
 258+ 966C              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 966C              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 966C
 261+ 966C 48           1 ld c,b
 262+ 966D 0C               inc c
 263+ 966E
 264+ 966E 04               inc b
 265+ 966F 05               dec b
 266+ 9670 20 02            jr nz,3F
 267+ 9672
 268+ 9672 18 0B            jr 6F
 269+ 9674
 270+ 9674 CD 5D 9A     3 call NextScan
 271+ 9677 EB               ex de,hl
 272+ 9678
 273+ 9678 73               ld (hl),e
 274+ 9679 23               inc hl
 275+ 967A 72               ld (hl),d
 276+ 967B 23               inc hl
 277+ 967C
 278+ 967C EB               ex de,hl
 279+ 967D 10 F5            djnz 3B
 280+ 967F
 281+ 967F ED 53 69 8C  6 ld (Scanlines_album_SP),de
 282+ 9683
 283+ 9683 08           5 ex af,af
 284+ 9684 F5               push af
 285+ 9685 E1               pop hl
 286+ 9686
 287+ 9686 71               ld (hl),c
 288+ 9687
 289+ 9687 C9               ret
 290+ 9688
# file closed: Genera_datos_de_impresion.asm
2214  9688              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9688              ; -----------------------------------------------------------------------------
   2+ 9688              ;
   3+ 9688              ;   11/03/24
   4+ 9688              ;
   5+ 9688
   6+ 9688              Pinta_Sprites
   7+ 9688
   8+ 9688              ;    ld hl,(Scanlines_album_SP)
   9+ 9688              ;    call Extrae_address
  10+ 9688
  11+ 9688              ;    inc h
  12+ 9688              ;    dec h
  13+ 9688              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9688
  15+ 9688 ED 73 47 8C      ld (Stack),sp
  16+ 968C
  17+ 968C EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 968D              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 968D 2C               inc l
  20+ 968E 2C               inc l
  21+ 968F
  22+ 968F 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9690
  24+ 9690 2C               inc l
  25+ 9691 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9692
  27+ 9692              ;   Seleccionamos rutina de impresión:
  28+ 9692
  29+ 9692 3E 10            ld a,16
  30+ 9694 B8               cp b
  31+ 9695 C2 91 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9698
  33+ 9698              ;   Rutinas:
  34+ 9698
  35+ 9698              Pinta_rapido    ;   1520 t/states.
  36+ 9698
  37+ 9698 E1               pop hl
  38+ 9699
  39+ 9699 1A               ld a,(de)
  40+ 969A AE               xor (hl)
  41+ 969B 77               ld (hl),a
  42+ 969C 2C               inc l
  43+ 969D 1C               inc e
  44+ 969E 1A               ld a,(de)
  45+ 969F AE               xor (hl)
  46+ 96A0 77               ld (hl),a
  47+ 96A1 2C               inc l
  48+ 96A2 1C               inc e
  49+ 96A3 1A               ld a,(de)
  50+ 96A4 AE               xor (hl)
  51+ 96A5 77               ld (hl),a
  52+ 96A6 13               inc de
  53+ 96A7
  54+ 96A7 E1               pop hl
  55+ 96A8
  56+ 96A8 1A               ld a,(de)
  57+ 96A9 AE               xor (hl)
  58+ 96AA 77               ld (hl),a
  59+ 96AB 2C               inc l
  60+ 96AC 1C               inc e
  61+ 96AD 1A               ld a,(de)
  62+ 96AE AE               xor (hl)
  63+ 96AF 77               ld (hl),a
  64+ 96B0 2C               inc l
  65+ 96B1 1C               inc e
  66+ 96B2 1A               ld a,(de)
  67+ 96B3 AE               xor (hl)
  68+ 96B4 77               ld (hl),a
  69+ 96B5 13               inc de
  70+ 96B6
  71+ 96B6 E1               pop hl
  72+ 96B7
  73+ 96B7 1A               ld a,(de)
  74+ 96B8 AE               xor (hl)
  75+ 96B9 77               ld (hl),a
  76+ 96BA 2C               inc l
  77+ 96BB 1C               inc e
  78+ 96BC 1A               ld a,(de)
  79+ 96BD AE               xor (hl)
  80+ 96BE 77               ld (hl),a
  81+ 96BF 2C               inc l
  82+ 96C0 1C               inc e
  83+ 96C1 1A               ld a,(de)
  84+ 96C2 AE               xor (hl)
  85+ 96C3 77               ld (hl),a
  86+ 96C4 13               inc de
  87+ 96C5
  88+ 96C5 E1               pop hl
  89+ 96C6
  90+ 96C6 1A               ld a,(de)
  91+ 96C7 AE               xor (hl)
  92+ 96C8 77               ld (hl),a
  93+ 96C9 2C               inc l
  94+ 96CA 1C               inc e
  95+ 96CB 1A               ld a,(de)
  96+ 96CC AE               xor (hl)
  97+ 96CD 77               ld (hl),a
  98+ 96CE 2C               inc l
  99+ 96CF 1C               inc e
 100+ 96D0 1A               ld a,(de)
 101+ 96D1 AE               xor (hl)
 102+ 96D2 77               ld (hl),a
 103+ 96D3 13               inc de
 104+ 96D4
 105+ 96D4 E1               pop hl
 106+ 96D5
 107+ 96D5 1A               ld a,(de)
 108+ 96D6 AE               xor (hl)
 109+ 96D7 77               ld (hl),a
 110+ 96D8 2C               inc l
 111+ 96D9 1C               inc e
 112+ 96DA 1A               ld a,(de)
 113+ 96DB AE               xor (hl)
 114+ 96DC 77               ld (hl),a
 115+ 96DD 2C               inc l
 116+ 96DE 1C               inc e
 117+ 96DF 1A               ld a,(de)
 118+ 96E0 AE               xor (hl)
 119+ 96E1 77               ld (hl),a
 120+ 96E2 13               inc de
 121+ 96E3
 122+ 96E3 E1               pop hl
 123+ 96E4
 124+ 96E4 1A               ld a,(de)
 125+ 96E5 AE               xor (hl)
 126+ 96E6 77               ld (hl),a
 127+ 96E7 2C               inc l
 128+ 96E8 1C               inc e
 129+ 96E9 1A               ld a,(de)
 130+ 96EA AE               xor (hl)
 131+ 96EB 77               ld (hl),a
 132+ 96EC 2C               inc l
 133+ 96ED 1C               inc e
 134+ 96EE 1A               ld a,(de)
 135+ 96EF AE               xor (hl)
 136+ 96F0 77               ld (hl),a
 137+ 96F1 13               inc de
 138+ 96F2
 139+ 96F2 E1               pop hl
 140+ 96F3
 141+ 96F3 1A               ld a,(de)
 142+ 96F4 AE               xor (hl)
 143+ 96F5 77               ld (hl),a
 144+ 96F6 2C               inc l
 145+ 96F7 1C               inc e
 146+ 96F8 1A               ld a,(de)
 147+ 96F9 AE               xor (hl)
 148+ 96FA 77               ld (hl),a
 149+ 96FB 2C               inc l
 150+ 96FC 1C               inc e
 151+ 96FD 1A               ld a,(de)
 152+ 96FE AE               xor (hl)
 153+ 96FF 77               ld (hl),a
 154+ 9700 13               inc de
 155+ 9701
 156+ 9701 E1               pop hl
 157+ 9702
 158+ 9702 1A               ld a,(de)
 159+ 9703 AE               xor (hl)
 160+ 9704 77               ld (hl),a
 161+ 9705 2C               inc l
 162+ 9706 1C               inc e
 163+ 9707 1A               ld a,(de)
 164+ 9708 AE               xor (hl)
 165+ 9709 77               ld (hl),a
 166+ 970A 2C               inc l
 167+ 970B 1C               inc e
 168+ 970C 1A               ld a,(de)
 169+ 970D AE               xor (hl)
 170+ 970E 77               ld (hl),a
 171+ 970F 13               inc de
 172+ 9710
 173+ 9710 E1               pop hl
 174+ 9711
 175+ 9711 1A               ld a,(de)
 176+ 9712 AE               xor (hl)
 177+ 9713 77               ld (hl),a
 178+ 9714 2C               inc l
 179+ 9715 1C               inc e
 180+ 9716 1A               ld a,(de)
 181+ 9717 AE               xor (hl)
 182+ 9718 77               ld (hl),a
 183+ 9719 2C               inc l
 184+ 971A 1C               inc e
 185+ 971B 1A               ld a,(de)
 186+ 971C AE               xor (hl)
 187+ 971D 77               ld (hl),a
 188+ 971E 13               inc de
 189+ 971F
 190+ 971F E1               pop hl
 191+ 9720
 192+ 9720 1A               ld a,(de)
 193+ 9721 AE               xor (hl)
 194+ 9722 77               ld (hl),a
 195+ 9723 2C               inc l
 196+ 9724 1C               inc e
 197+ 9725 1A               ld a,(de)
 198+ 9726 AE               xor (hl)
 199+ 9727 77               ld (hl),a
 200+ 9728 2C               inc l
 201+ 9729 1C               inc e
 202+ 972A 1A               ld a,(de)
 203+ 972B AE               xor (hl)
 204+ 972C 77               ld (hl),a
 205+ 972D 13               inc de
 206+ 972E
 207+ 972E E1               pop hl
 208+ 972F
 209+ 972F 1A               ld a,(de)
 210+ 9730 AE               xor (hl)
 211+ 9731 77               ld (hl),a
 212+ 9732 2C               inc l
 213+ 9733 1C               inc e
 214+ 9734 1A               ld a,(de)
 215+ 9735 AE               xor (hl)
 216+ 9736 77               ld (hl),a
 217+ 9737 2C               inc l
 218+ 9738 1C               inc e
 219+ 9739 1A               ld a,(de)
 220+ 973A AE               xor (hl)
 221+ 973B 77               ld (hl),a
 222+ 973C 13               inc de
 223+ 973D
 224+ 973D E1               pop hl
 225+ 973E
 226+ 973E 1A               ld a,(de)
 227+ 973F AE               xor (hl)
 228+ 9740 77               ld (hl),a
 229+ 9741 2C               inc l
 230+ 9742 1C               inc e
 231+ 9743 1A               ld a,(de)
 232+ 9744 AE               xor (hl)
 233+ 9745 77               ld (hl),a
 234+ 9746 2C               inc l
 235+ 9747 1C               inc e
 236+ 9748 1A               ld a,(de)
 237+ 9749 AE               xor (hl)
 238+ 974A 77               ld (hl),a
 239+ 974B 13               inc de
 240+ 974C
 241+ 974C E1               pop hl
 242+ 974D
 243+ 974D 1A               ld a,(de)
 244+ 974E AE               xor (hl)
 245+ 974F 77               ld (hl),a
 246+ 9750 2C               inc l
 247+ 9751 1C               inc e
 248+ 9752 1A               ld a,(de)
 249+ 9753 AE               xor (hl)
 250+ 9754 77               ld (hl),a
 251+ 9755 2C               inc l
 252+ 9756 1C               inc e
 253+ 9757 1A               ld a,(de)
 254+ 9758 AE               xor (hl)
 255+ 9759 77               ld (hl),a
 256+ 975A 13               inc de
 257+ 975B
 258+ 975B E1               pop hl
 259+ 975C
 260+ 975C 1A               ld a,(de)
 261+ 975D AE               xor (hl)
 262+ 975E 77               ld (hl),a
 263+ 975F 2C               inc l
 264+ 9760 1C               inc e
 265+ 9761 1A               ld a,(de)
 266+ 9762 AE               xor (hl)
 267+ 9763 77               ld (hl),a
 268+ 9764 2C               inc l
 269+ 9765 1C               inc e
 270+ 9766 1A               ld a,(de)
 271+ 9767 AE               xor (hl)
 272+ 9768 77               ld (hl),a
 273+ 9769 13               inc de
 274+ 976A
 275+ 976A E1               pop hl
 276+ 976B
 277+ 976B 1A               ld a,(de)
 278+ 976C AE               xor (hl)
 279+ 976D 77               ld (hl),a
 280+ 976E 2C               inc l
 281+ 976F 1C               inc e
 282+ 9770 1A               ld a,(de)
 283+ 9771 AE               xor (hl)
 284+ 9772 77               ld (hl),a
 285+ 9773 2C               inc l
 286+ 9774 1C               inc e
 287+ 9775 1A               ld a,(de)
 288+ 9776 AE               xor (hl)
 289+ 9777 77               ld (hl),a
 290+ 9778 13               inc de
 291+ 9779
 292+ 9779 E1               pop hl
 293+ 977A
 294+ 977A 1A               ld a,(de)
 295+ 977B AE               xor (hl)
 296+ 977C 77               ld (hl),a
 297+ 977D 2C               inc l
 298+ 977E 1C               inc e
 299+ 977F 1A               ld a,(de)
 300+ 9780 AE               xor (hl)
 301+ 9781 77               ld (hl),a
 302+ 9782 2C               inc l
 303+ 9783 1C               inc e
 304+ 9784 1A               ld a,(de)
 305+ 9785 AE               xor (hl)
 306+ 9786 77               ld (hl),a
 307+ 9787 13               inc de
 308+ 9788
 309+ 9788 ED 73 69 8C      ld (Scanlines_album_SP),sp
 310+ 978C ED 7B 47 8C      ld sp,(Stack)
 311+ 9790 C9               ret
 312+ 9791
 313+ 9791              Pinta_lento
 314+ 9791
 315+ 9791 E1           1 pop hl
 316+ 9792
 317+ 9792 1A               ld a,(de)
 318+ 9793 AE               xor (hl)
 319+ 9794 77               ld (hl),a
 320+ 9795 2C               inc l
 321+ 9796 1C               inc e
 322+ 9797 1A               ld a,(de)
 323+ 9798 AE               xor (hl)
 324+ 9799 77               ld (hl),a
 325+ 979A 2C               inc l
 326+ 979B 1C               inc e
 327+ 979C 1A               ld a,(de)
 328+ 979D AE               xor (hl)
 329+ 979E 77               ld (hl),a
 330+ 979F 13               inc de
 331+ 97A0
 332+ 97A0 10 EF            djnz 1B
 333+ 97A2
 334+ 97A2 ED 73 69 8C      ld (Scanlines_album_SP),sp
 335+ 97A6 ED 7B 47 8C      ld sp,(Stack)
 336+ 97AA C9               ret
# file closed: Pinta_Sprites.asm
2215  97AB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 97AB              ; ******************************************************************************************************************************************************************************************
   2+ 97AB              ;
   3+ 97AB              ; 26/06/23
   4+ 97AB              ;
   5+ 97AB              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 97AB
   7+ 97AB              Draw
   8+ 97AB
   9+ 97AB CD 51 9A     	call Prepara_draw
  10+ 97AE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 97AF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 97B0 28 05        	jr z,2F
  13+ 97B2
  14+ 97B2 3A 17 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 97B5 18 0C        	jr 1F
  16+ 97B7
  17+ 97B7 2A 15 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 97BA 22 08 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 97BD CD 49 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 97C0              ;													; _la esquina superior izquierda de la pantalla.
  21+ 97C0
  22+ 97C0 CD F0 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 97C3
  24+ 97C3 3A 05 8C     1 ld a,(Ctrl_0)
  25+ 97C6 CB 6F        	bit 5,a
  26+ 97C8 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97CA
  28+ 97CA CD DF 97     	call Comprueba_limite_horizontal
  29+ 97CD CD 6F 98     	call Comprueba_limite_vertical
  30+ 97D0
  31+ 97D0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97D0              ; -----------------------
  33+ 97D0              ; -----------------------
  34+ 97D0              ; -----------------------
  35+ 97D0
  36+ 97D0 CD C5 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97D3 CD FC 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97D6
  39+ 97D6 3A 05 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97D9 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97DB 32 05 8C     	ld (Ctrl_0),a
  42+ 97DE
  43+ 97DE C9           	ret
  44+ 97DF
  45+ 97DF              ; *******************************************************************************************************************************************************************************************
  46+ 97DF              ;	21/01/23
  47+ 97DF              ;
  48+ 97DF              ; 	Comprueba_limite_horizontal.
  49+ 97DF              ;
  50+ 97DF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97DF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97DF              ;
  53+ 97DF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97DF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97DF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97DF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97DF
  58+ 97DF
  59+ 97DF
  60+ 97DF 3A 05 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97E2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97E4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97E6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97E8 32 05 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97EB 18 09            jr 6F
  66+ 97ED CB 5F        1 bit 3,a
  67+ 97EF 28 0A            jr z,2F
  68+ 97F1 E6 F7            and $f7
  69+ 97F3 32 05 8C         ld (Ctrl_0),a
  70+ 97F6 CD 49 99     6 call Inicializacion
  71+ 97F9 18 5B            jr 5F
  72+ 97FB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97FC
  74+ 97FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97FC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97FC
  77+ 97FC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97FD 2A 19 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9800 CD 4A 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9803 67           	ld h,a
  81+ 9804 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9805 CD 4A 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9808 67           	ld h,a
  84+ 9809 A7           	and a
  85+ 980A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 980C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 980D 3A 17 8C     	ld a,(Cuad_objeto)
  88+ 9810 FE 02        	cp 2
  89+ 9812 38 1E        	jr c,3F
  90+ 9814 28 1C        	jr z,3F
  91+ 9816 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9817 28 23            jr z,7F
  93+ 9819 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 981B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 981D E1           	pop hl
  96+ 981E
  97+ 981E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 981E              ; _para indicar con E="2" en caso necesario.
  99+ 981E
 100+ 981E E5               push hl
 101+ 981F C5               push bc
 102+ 9820 CD 4A 95     	call calcula_tercio
 103+ 9823 FE 01        	cp 1
 104+ 9825 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9827 CD 57 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 982A 28 26            jr z,9F
 107+ 982C 38 24            jr c,9F
 108+ 982E 1E 00        11 ld e,0
 109+ 9830 18 22            jr 8F
 110+ 9832 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9833 28 07        	jr z, 7F
 112+ 9835 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9837 1E 00         	ld e,0
 114+ 9839 E1           	pop hl
 115+ 983A 18 04        	jr 4F
 116+ 983C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 983E 18 15            jr 10F
 118+ 9840
 119+ 9840              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9840              ; _para indicar con E="2" en caso necesario.
 121+ 9840
 122+ 9840 E5           4 push hl
 123+ 9841 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9842 CD 4A 95     	call calcula_tercio
 125+ 9845 FE 01        	cp 1
 126+ 9847 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9849 CD 57 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 984C 28 04            jr z,9F
 129+ 984E 30 02            jr nc,9F
 130+ 9850 18 02        	jr 8F
 131+ 9852 1E 02        9 ld e,2
 132+ 9854 C1           8 pop bc
 133+ 9855 E1           10 pop hl
 134+ 9856 C9           5 ret
 135+ 9857
 136+ 9857              ; --------------------
 137+ 9857              ;
 138+ 9857              ; 25/08/22
 139+ 9857
 140+ 9857 CD 4A 95     Comprueba_centro call calcula_tercio
 141+ 985A 67               ld h,a
 142+ 985B 08           	ex af,af
 143+ 985C FE 02        	cp 2
 144+ 985E 38 07        	jr c,1F
 145+ 9860 28 05        	jr z,1F
 146+ 9862 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9865 18 03        	jr 2F
 148+ 9867 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 986A 08           2 ex af,af
 150+ 986B A7               and a
 151+ 986C ED 42            sbc hl,bc
 152+ 986E C9               ret
 153+ 986F
 154+ 986F              ; *********************************************************************************************************************************************************************************************
 155+ 986F              ;
 156+ 986F              ;   16/8/22
 157+ 986F              ;
 158+ 986F              ;	Comprueba_limite_vertical
 159+ 986F              ;
 160+ 986F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 986F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 986F              ;
 163+ 986F
 164+ 986F 2A 08 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9872 7D           	ld a,l
 166+ 9873 E6 1F        	and $1F
 167+ 9875 57           	ld d,a
 168+ 9876 3A 1B 8C     	ld a,(Limite_vertical)
 169+ 9879 BA           	cp d 											; Límite - Posición.
 170+ 987A 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 987B 3A 17 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 987E CB 47        	bit 0,a
 173+ 9880 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9882
 175+ 9882              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9882
 177+ 9882 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9883 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9885
 180+ 9885              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9885              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9885
 183+ 9885 3A F9 8B         ld a,(Coordenada_X)
 184+ 9888 16 0F            ld d,Centro_izquierda
 185+ 988A A7               and a
 186+ 988B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 988C 28 1E            jr z,3F
 188+ 988E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9890              ;                                                    ; _salimos sin modificar nada.
 190+ 9890 18 0E            jr 2F
 191+ 9892 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9893 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9895
 194+ 9895              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9895              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9895
 197+ 9895 3A F9 8B         ld a,(Coordenada_X)
 198+ 9898 16 10            ld d,Centro_derecha
 199+ 989A A7               and a
 200+ 989B 92               sub d
 201+ 989C 28 0E            jr z,3F
 202+ 989E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 98A0              ;                                                    ; _salimos sin modificar nada.
 204+ 98A0 CB 43        2 bit 0,e
 205+ 98A2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 98A4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 98A5 CD 39 99         call Modificaccionne
 208+ 98A8 C1           	pop bc
 209+ 98A9 CD 49 99         call Inicializacion
 210+ 98AC C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 98AD
 212+ 98AD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 98AD
 214+ 98AD C5           4 push bc
 215+ 98AE 01 07 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 98B1 0A           	ld a,(bc)
 217+ 98B2 3D           	dec a
 218+ 98B3 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 98B4 7D           	ld a,l
 220+ 98B5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 98B6 CB 47        	bit 0,a
 222+ 98B8 28 03        	jr z,5F
 223+ 98BA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 98BB 18 2E        	jr 7F
 225+ 98BD
 226+ 98BD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 98BD
 228+ 98BD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 98BE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 98BF 3A 05 8C     	ld a,(Ctrl_0)
 231+ 98C2 CB 4F        	bit 1,a
 232+ 98C4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98C6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98C7
 235+ 98C7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98C7
 237+ 98C7 1C               inc e
 238+ 98C8 1D               dec e
 239+ 98C9 20 07            jr nz,12F
 240+ 98CB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98CC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98CD 22 08 8C     	ld (Posicion_actual),hl
 243+ 98D0 18 44        13 jr 9F
 244+ 98D2 CB 43        12 bit 0,e
 245+ 98D4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98D6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98D6 C1           	pop bc
 248+ 98D7 18 D3        	jr 3B
 249+ 98D9 80           14 add b
 250+ 98DA 6F               ld l,a
 251+ 98DB 22 08 8C     	ld (Posicion_actual),hl
 252+ 98DE CD 39 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98E1 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98E3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98E5 32 05 8C         ld (Ctrl_0),a
 256+ 98E8 F1           	pop af
 257+ 98E9 18 2B        	jr 9F
 258+ 98EB
 259+ 98EB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98EB
 261+ 98EB F5           7 push af
 262+ 98EC 3A 05 8C     	ld a,(Ctrl_0)
 263+ 98EF CB 47        	bit 0,a
 264+ 98F1 20 1D        	jr nz,8F
 265+ 98F3 F1           	pop af
 266+ 98F4
 267+ 98F4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98F4
 269+ 98F4 1C           	inc e
 270+ 98F5 1D               dec e
 271+ 98F6 20 07            jr nz,10F
 272+ 98F8 90           	sub b
 273+ 98F9 6F               ld l,a
 274+ 98FA 22 08 8C     	ld (Posicion_actual),hl
 275+ 98FD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98FF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98FF CB 43        10 bit 0,e
 278+ 9901 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9903              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9903 C1           	pop bc
 281+ 9904 18 A6        	jr 3B
 282+ 9906 90           16 sub b
 283+ 9907 6F               ld l,a
 284+ 9908 22 08 8C     	ld (Posicion_actual),hl
 285+ 990B CD 39 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 990E 18 06            jr 9F
 287+ 9910 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9912 32 05 8C         ld (Ctrl_0),a
 289+ 9915 F1           	pop af
 290+ 9916 C1           9 pop bc
 291+ 9917 1E 00        	ld e,0
 292+ 9919 CD 49 99         call Inicializacion
 293+ 991C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 991D 08           	ex af,af
 295+ 991E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 991F 18 8B            jr 3B
 297+ 9921
 298+ 9921              ; --------------------
 299+ 9921
 300+ 9921 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9923 CD 6C 9A     1 call PreviousScan
 302+ 9926 10 FB            djnz 1B
 303+ 9928 22 08 8C     	ld (Posicion_actual),hl
 304+ 992B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 992C C9           	ret
 306+ 992D
 307+ 992D              ; --------------------
 308+ 992D
 309+ 992D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 992F CD 5D 9A     1 call NextScan
 311+ 9932 10 FB            djnz 1B
 312+ 9934 22 08 8C     	ld (Posicion_actual),hl
 313+ 9937 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9938 C9           	ret
 315+ 9939
 316+ 9939              ; --------------------
 317+ 9939              ;
 318+ 9939              ;	22/01/23
 319+ 9939              ;
 320+ 9939              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9939              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9939              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9939
 324+ 9939
 325+ 9939              Modificaccionne
 326+ 9939
 327+ 9939 3A 17 8C     	ld a,(Cuad_objeto)
 328+ 993C FE 02        	cp 2
 329+ 993E CC 21 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9941 DC 21 99         call c,Modifica_Pos_actual
 331+ 9944 C8           	ret z
 332+ 9945 CD 2D 99         call Modifica_Pos_actual2
 333+ 9948 C9               ret
 334+ 9949
 335+ 9949              ; *************************************************************************************************************************************************************************************************
 336+ 9949              ;
 337+ 9949              ;	13/8/22
 338+ 9949              ;
 339+ 9949              ;	Inicializacion
 340+ 9949              ;
 341+ 9949              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9949              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9949              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9949              ;
 345+ 9949              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9949              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9949              ;	_ desaparece/aparece.
 348+ 9949
 349+ 9949              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9949              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9949              ;
 352+ 9949              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9949              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9949              ; 		   [E] ="0"
 355+ 9949
 356+ 9949              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9949
 358+ 9949 CD 4A 95     Inicializacion call calcula_tercio
 359+ 994C 28 36        	jr z,primit
 360+ 994E E6 02        	and 2
 361+ 9950 20 07        	jr nz,segmit
 362+ 9952 7D           	ld a,l
 363+ 9953 FE 7F        	cp $7f
 364+ 9955 38 2D        	jr c,primit
 365+ 9957 28 2B        	jr z,primit
 366+ 9959 CD BF 99     segmit call column
 367+ 995C 38 13        	jr c,tercuad
 368+ 995E 3E 04        cuarcuad ld a,4
 369+ 9960 32 17 8C     	ld (Cuad_objeto),a
 370+ 9963 21 20 48     	ld hl,$4820
 371+ 9966 22 19 8C     	ld (Limite_horizontal),hl
 372+ 9969 21 1B 8C     	ld hl,Limite_vertical
 373+ 996C 36 0D        	ld (hl),$0d
 374+ 996E 08           	ex af,af
 375+ 996F 18 3C        	jr 1F
 376+ 9971              tercuad
 377+ 9971 3E 03        	ld a,3
 378+ 9973 32 17 8C     	ld (Cuad_objeto),a
 379+ 9976 21 20 48     	ld hl,$4820
 380+ 9979 22 19 8C     	ld (Limite_horizontal),hl
 381+ 997C 21 1B 8C     	ld hl,Limite_vertical
 382+ 997F 36 12        	ld (hl),$12
 383+ 9981 08           	ex af,af
 384+ 9982 18 29        	jr 1F
 385+ 9984 CD BF 99     primit call column
 386+ 9987 38 13        	jr c, primcuad
 387+ 9989              segcuad
 388+ 9989 3E 02        	ld a,2
 389+ 998B 32 17 8C     	ld (Cuad_objeto),a
 390+ 998E 21 C0 4F     	ld hl,$4fc0
 391+ 9991 22 19 8C     	ld (Limite_horizontal),hl
 392+ 9994 21 1B 8C     	ld hl,Limite_vertical
 393+ 9997 36 0D        	ld (hl),$0d
 394+ 9999 08           	ex af,af
 395+ 999A 18 11        	jr 1F
 396+ 999C              primcuad
 397+ 999C 3E 01        	ld a,1
 398+ 999E 32 17 8C     	ld (Cuad_objeto),a
 399+ 99A1 21 C0 4F     	ld hl,$4fc0
 400+ 99A4 22 19 8C     	ld (Limite_horizontal),hl
 401+ 99A7 21 1B 8C     	ld hl,Limite_vertical
 402+ 99AA 36 12        	ld (hl),$12
 403+ 99AC 08           	ex af,af
 404+ 99AD
 405+ 99AD C5           1 push bc
 406+ 99AE E5           	push hl
 407+ 99AF D5           	push de
 408+ 99B0
 409+ 99B0 2A 08 8C     	ld hl,(Posicion_actual)
 410+ 99B3 CD 68 95     	call Genera_coordenadas
 411+ 99B6
 412+ 99B6 D1           	pop de
 413+ 99B7 E1           	pop hl
 414+ 99B8 C1           	pop bc
 415+ 99B9
 416+ 99B9 21 05 8C     	ld hl,Ctrl_0
 417+ 99BC CB EE        	set 5,(hl)
 418+ 99BE C9           	ret
 419+ 99BF
 420+ 99BF              ; ------------------------------------------------------------------------------------------------------------------
 421+ 99BF
 422+ 99BF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 99BF              ;
 424+ 99BF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 99BF
 426+ 99BF 7D           column ld a,l
 427+ 99C0 E6 1F        	and $1f
 428+ 99C2 FE 10         	cp $10
 429+ 99C4 C9            	ret
 430+ 99C5
 431+ 99C5              ; --------------------------------------------------------------------------------------------------------------------
 432+ 99C5              ;
 433+ 99C5              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 99C5              ;
 435+ 99C5              ; 14/12/22
 436+ 99C5              ;
 437+ 99C5              ;	Modifica: A y BC.
 438+ 99C5
 439+ 99C5 3A 17 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99C8 E6 01        	and 1
 441+ 99CA 28 17        	jr z,1F
 442+ 99CC
 443+ 99CC              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99CC
 445+ 99CC 3A F9 8B     	ld a,(Coordenada_X)
 446+ 99CF 47           	ld b,a
 447+ 99D0 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99D1 79           	ld a,c
 449+ 99D2 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99D3 38 08        	jr c,2F
 451+ 99D5 47           	ld b,a
 452+ 99D6 79           	ld a,c
 453+ 99D7 90           	sub b
 454+ 99D8 32 18 8C     	ld (Columnas),a
 455+ 99DB 18 1B        	jr 4F
 456+ 99DD 79           2 ld a,c
 457+ 99DE 32 18 8C     	ld (Columnas),a
 458+ 99E1 18 15        	jr 4F
 459+ 99E3
 460+ 99E3              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99E3
 462+ 99E3 3A F9 8B     1 ld a,(Coordenada_X)
 463+ 99E6 81           	add c
 464+ 99E7 3D           	dec a
 465+ 99E8 D6 1F        	sub $1f
 466+ 99EA 38 08        	jr c,3F
 467+ 99EC 47           	ld b,a
 468+ 99ED 79           	ld a,c
 469+ 99EE 90           	sub b
 470+ 99EF 32 18 8C     	ld (Columnas),a
 471+ 99F2 18 04        	jr 4F
 472+ 99F4 79           3 ld a,c
 473+ 99F5 32 18 8C     	ld (Columnas),a
 474+ 99F8 D9           4 exx
 475+ 99F9 4F           	ld c,a
 476+ 99FA D9           	exx
 477+ 99FB C9            ret
 478+ 99FC
 479+ 99FC              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99FC              ;
 481+ 99FC              ;   19/7/23
 482+ 99FC              ;
 483+ 99FC              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99FC              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99FC              ;
 486+ 99FC              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99FC              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99FC              ;
 489+ 99FC              ;	DESTRUYE: HL,B Y A.
 490+ 99FC
 491+ 99FC 3A 17 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99FF FE 02        	cp 2
 493+ 9A01 38 18        	jr c,1F
 494+ 9A03 28 16        	jr z,1F
 495+ 9A05 E6 01        	and 1
 496+ 9A07 28 0D        	jr z,3F
 497+ 9A09
 498+ 9A09              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9A09
 500+ 9A09 CD 45 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9A0C
 502+ 9A0C 7D           9 ld a,l
 503+ 9A0D E6 1F        	and $1f
 504+ 9A0F 28 2A        	jr z,7F
 505+ 9A11 2B           	dec hl
 506+ 9A12 10 F8        	djnz 9B
 507+ 9A14 18 25        	jr 7F
 508+ 9A16
 509+ 9A16              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A16
 511+ 9A16 2A 08 8C     3 ld hl,(Posicion_actual)
 512+ 9A19 18 20        	jr 7F
 513+ 9A1B
 514+ 9A1B 28 14        1 jr z,2F
 515+ 9A1D
 516+ 9A1D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A1D
 518+ 9A1D CD 45 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A20
 520+ 9A20 7D           4 ld a,l
 521+ 9A21 E6 1F        	and $1f
 522+ 9A23 28 03        	jr z,6F
 523+ 9A25 2B           	dec hl
 524+ 9A26 10 F8        	djnz 4B
 525+ 9A28 06 0F        6 ld b,15
 526+ 9A2A CD 6C 9A     5 call PreviousScan
 527+ 9A2D 10 FB        	djnz 5B
 528+ 9A2F 18 0A        	jr 7F
 529+ 9A31
 530+ 9A31              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A31
 532+ 9A31 CD 45 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A34 06 0F        	ld b,15
 534+ 9A36 CD 6C 9A     8 call PreviousScan
 535+ 9A39 10 FB        	djnz 8B
 536+ 9A3B
 537+ 9A3B E5           7 push hl
 538+ 9A3C DD E1        	pop ix
 539+ 9A3E
 540+ 9A3E 2A 0A 8C     	ld hl,(Puntero_objeto)
 541+ 9A41 E5           	push hl
 542+ 9A42 FD E1        	pop iy
 543+ 9A44
 544+ 9A44 C9           	ret
 545+ 9A45
 546+ 9A45              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A45              ;
 548+ 9A45              ;	2/1/23
 549+ 9A45              ;
 550+ 9A45              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A45              ;
 552+ 9A45              ;	Tras esta rutina tenemos:
 553+ 9A45              ;
 554+ 9A45              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A45              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A45              ;
 557+ 9A45              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A45
 559+ 9A45 2A 08 8C     Operandos ld hl,(Posicion_actual)
 560+ 9A48 3A 18 8C     	ld a,(Columnas)
 561+ 9A4B 3D           	dec a
 562+ 9A4C 20 01        	jr nz,1F
 563+ 9A4E 3C           	inc a
 564+ 9A4F 47           1 ld b,a
 565+ 9A50 C9           	ret
 566+ 9A51
 567+ 9A51              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A51              ;
 569+ 9A51              ;	Prepara_draw
 570+ 9A51              ;
 571+ 9A51              ;	Es una rutina de carga.
 572+ 9A51              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A51              ;
 574+ 9A51              ;	FUNCIONAMIENTO:
 575+ 9A51              ;
 576+ 9A51              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A51              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A51              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A51              ;
 580+ 9A51              ;	DESTRUYE:
 581+ 9A51              ;
 582+ 9A51              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A51
 584+ 9A51 21 06 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A54 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A55 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A56 4E           	ld c,(hl)
 588+ 9A57 2A 08 8C     	ld hl,(Posicion_actual)
 589+ 9A5A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A5C C9           	ret
 591+ 9A5D
 592+ 9A5D              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A5D              ;
 594+ 9A5D              ;	5/08/22
 595+ 9A5D              ;
 596+ 9A5D              ;   NextScan.
 597+ 9A5D              ;
 598+ 9A5D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A5D              ;
 600+ 9A5D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A5D              ;
 602+ 9A5D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A5D              ;
 604+ 9A5D              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A5D              ;
 606+ 9A5D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A5D              ;
 608+ 9A5D
 609+ 9A5D 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A5E 7C               ld a,h
 611+ 9A5F E6 07            and 7
 612+ 9A61 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A62
 614+ 9A62 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A63 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A65 6F               ld l,a
 617+ 9A66 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A67
 619+ 9A67 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A68 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A6A 67               ld h,a
 622+ 9A6B C9               ret
 623+ 9A6C
 624+ 9A6C              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A6C              ;
 626+ 9A6C              ;	5/08/22
 627+ 9A6C              ;
 628+ 9A6C              ;   PreviousScan.
 629+ 9A6C              ;
 630+ 9A6C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A6C              ;
 632+ 9A6C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A6C              ;
 634+ 9A6C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A6C              ;
 636+ 9A6C              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A6C              ;
 638+ 9A6C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A6C              ;
 640+ 9A6C
 641+ 9A6C 7C           PreviousScan ld a,h
 642+ 9A6D 25               dec h               ; Dec H.
 643+ 9A6E E6 07            and 7
 644+ 9A70 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A71
 646+ 9A71 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A72 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A74 6F               ld l,a
 649+ 9A75 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A76
 651+ 9A76 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A77 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A79 67               ld h,a
 654+ 9A7A C9               ret
 655+ 9A7B
 656+ 9A7B
 657+ 9A7B
 658+ 9A7B
 659+ 9A7B
 660+ 9A7B
 661+ 9A7B
 662+ 9A7B
 663+ 9A7B
 664+ 9A7B
 665+ 9A7B
 666+ 9A7B
# file closed: Draw_XOR.asm
2216  9A7B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A7B
   2+ 9A7B              ; ******************************************************************************************************************************************************************************************
   3+ 9A7B              ;
   4+ 9A7B              ;   20/05/23
   5+ 9A7B              ;
   6+ 9A7B              ;	Recompone_posicion_inicio
   7+ 9A7B              ;
   8+ 9A7B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A7B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A7B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A7B              ;	_ a una u otra rutina.
  12+ 9A7B
  13+ 9A7B              Recompone_posicion_inicio
  14+ 9A7B
  15+ 9A7B 2A 15 8C     	ld hl,(Posicion_inicio)
  16+ 9A7E 7D           	ld a,l
  17+ 9A7F E6 1F        	and $1f
  18+ 9A81 28 16        	jr z,1F
  19+ 9A83
  20+ 9A83 FE 1F        	cp $1f
  21+ 9A85 28 0D        	jr z,3F
  22+ 9A87
  23+ 9A87 21 04 8C     	ld hl,Ctrl_2
  24+ 9A8A CB C6        	set 0,(hl)
  25+ 9A8C 2A 0A 8C     	ld hl,(Puntero_objeto)
  26+ 9A8F 22 36 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A92 18 08        	jr 2F
  28+ 9A94
  29+ 9A94 CD 42 9C     3 call Mov_left
  30+ 9A97 18 03        	jr 2F
  31+ 9A99
  32+ 9A99 CD 1F 9B     1 call Mov_right
  33+ 9A9C 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A9F 22 0A 8C     	ld (Puntero_objeto),hl
  35+ 9AA2 C9           	ret
  36+ 9AA3
  37+ 9AA3              ; ******************************************************************************************************************************************************************************************
  38+ 9AA3              ;
  39+ 9AA3              ;   27/05/23
  40+ 9AA3              ;
  41+ 9AA3              ;	Mov_down
  42+ 9AA3              ;
  43+ 9AA3              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9AA3              ;
  45+ 9AA3              ;
  46+ 9AA3              Mov_down
  47+ 9AA3
  48+ 9AA3 CD 0D 9B     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9AA6              ;																	; _ repone (Puntero_objeto).
  50+ 9AA6 21 05 8C     	ld hl,Ctrl_0
  51+ 9AA9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9AAB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9AAB              ; 																	; _ en el caso de que no lo haya.
  54+ 9AAB 3A 20 8C     	ld a,(Vel_down)
  55+ 9AAE 47           	ld b,a
  56+ 9AAF 2A 08 8C         ld hl,(Posicion_actual)
  57+ 9AB2 CD 4A 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9AB5 E6 02        	and 2
  59+ 9AB7 28 17        	jr z,1F
  60+ 9AB9
  61+ 9AB9              ; Nos encontramos en el último tercio de pantalla.
  62+ 9AB9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9AB9
  64+ 9AB9 7C           	ld a,h
  65+ 9ABA FE 57        	cp $57
  66+ 9ABC 20 12        	jr nz,1F
  67+ 9ABE
  68+ 9ABE 7D           	ld a,l
  69+ 9ABF C6 20        	add $20
  70+ 9AC1 30 0D        	jr nc,1F
  71+ 9AC3
  72+ 9AC3              ; ------------------------------
  73+ 9AC3              ;
  74+ 9AC3              ;	12/01/24
  75+ 9AC3
  76+ 9AC3              ;	call Reaparece_arriba
  77+ 9AC3 CD CF 9D     	call Reinicio
  78+ 9AC6
  79+ 9AC6              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9AC6
  81+ 9AC6 3A 6F 8C     	ld a,(Ctrl_3)
  82+ 9AC9 CB CF        	set 1,a
  83+ 9ACB 32 6F 8C     	ld (Ctrl_3),a
  84+ 9ACE
  85+ 9ACE 18 08        	jr 3F
  86+ 9AD0              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9AD0              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9AD0              ; ------------------------------
  89+ 9AD0
  90+ 9AD0 CD 5D 9A     1 call NextScan
  91+ 9AD3 22 08 8C     	ld (Posicion_actual),hl
  92+ 9AD6 10 DA            djnz 2B
  93+ 9AD8 CD 68 95     3 call Genera_coordenadas
  94+ 9ADB C9           	ret
  95+ 9ADC
  96+ 9ADC              ; ******************************************************************************************************************************************************************************************
  97+ 9ADC              ;
  98+ 9ADC              ;   27/05/23
  99+ 9ADC              ;
 100+ 9ADC              ;	Mov_up
 101+ 9ADC              ;
 102+ 9ADC              ; 	Mueve el Sprite hacia arriba.
 103+ 9ADC              ;
 104+ 9ADC              ;
 105+ 9ADC              Mov_up
 106+ 9ADC
 107+ 9ADC CD 0D 9B     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9ADF              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9ADF 21 05 8C     	ld hl,Ctrl_0
 110+ 9AE2 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9AE4              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9AE4              ; 																		; _ en el caso de que no lo haya.
 113+ 9AE4 3A 1F 8C     	ld a,(Vel_up)
 114+ 9AE7 47           	ld b,a
 115+ 9AE8 2A 08 8C     	ld hl,(Posicion_actual)
 116+ 9AEB CD 4A 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9AEE A7           	and a
 118+ 9AEF 20 10        	jr nz,1F
 119+ 9AF1
 120+ 9AF1              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9AF1              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9AF1
 123+ 9AF1 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9AF2 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9AF4 20 0B            jr nz,1F
 126+ 9AF6 7D               ld a,l
 127+ 9AF7 D6 20            sub $20
 128+ 9AF9 30 06            jr nc,1F
 129+ 9AFB 25               dec h
 130+ 9AFC
 131+ 9AFC              ; -----------------------------
 132+ 9AFC CD B0 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AFF              ;	call Reinicio
 134+ 9AFF              ; -----------------------------
 135+ 9AFF
 136+ 9AFF 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9B01 CD 6C 9A     1 call PreviousScan
 138+ 9B04 22 08 8C     	ld (Posicion_actual),hl
 139+ 9B07 10 E2            djnz 3B
 140+ 9B09 CD 68 95     2 call Genera_coordenadas
 141+ 9B0C C9           	ret
 142+ 9B0D
 143+ 9B0D              ; -----------------------------
 144+ 9B0D              ;
 145+ 9B0D              ;	27/5/23
 146+ 9B0D              ;
 147+ 9B0D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9B0D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9B0D              ;
 150+ 9B0D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9B0D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9B0D              ;
 153+ 9B0D              ;	Modifica: A y (Puntero_objeto).
 154+ 9B0D
 155+ 9B0D 3A 04 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B10 CB 47        	bit 0,a
 157+ 9B12 C8           	ret z
 158+ 9B13 CB 87        	res 0,a
 159+ 9B15 32 04 8C     	ld (Ctrl_2),a
 160+ 9B18 2A 36 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B1B 22 0A 8C     	ld (Puntero_objeto),hl
 162+ 9B1E C9           	ret
 163+ 9B1F
 164+ 9B1F              ; ******************************************************************************************************************************************************************************************
 165+ 9B1F              ;
 166+ 9B1F              ;	19/10/22
 167+ 9B1F              ;
 168+ 9B1F              ;	Mov_right.
 169+ 9B1F              ;
 170+ 9B1F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B1F              ;
 172+ 9B1F
 173+ 9B1F 3A 05 8C     Mov_right ld a,(Ctrl_0)
 174+ 9B22 CB 77        	bit 6,a
 175+ 9B24 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B26
 177+ 9B26 CD 5E 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B29 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B2A
 180+ 9B2A 21 05 8C     	ld hl,Ctrl_0
 181+ 9B2D CB E6        	set 4,(hl)
 182+ 9B2F 18 52        	jr 8F
 183+ 9B31
 184+ 9B31 21 05 8C     10 ld hl,Ctrl_0
 185+ 9B34 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B36              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B36              ; 																	; _ en el caso de que no lo haya.
 188+ 9B36 3A F9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B39 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B3B 20 46        	jr nz,8F
 191+ 9B3D
 192+ 9B3D 3A 0C 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B40 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B41 28 40        	jr z,8F
 195+ 9B43
 196+ 9B43              ; ---------- ---------- ----------
 197+ 9B43              ;
 198+ 9B43              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B43
 200+ 9B43 3A 1E 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B46 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B48 28 11        	jr z,1F
 203+ 9B4A 38 06        	jr c,6F
 204+ 9B4C FE 04        	cp 4
 205+ 9B4E 28 14        	jr z,7F
 206+ 9B50 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B52
 208+ 9B52              ; ---------- ---------- ----------
 209+ 9B52              ;
 210+ 9B52              ; Perfiles de velocidad
 211+ 9B52              ;
 212+ 9B52
 213+ 9B52 3A 0C 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B55 FE FE        	cp $fe
 215+ 9B57 20 2A        	jr nz,8F
 216+ 9B59 18 10        	jr 3F
 217+ 9B5B 3A 0C 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B5E FE FD        	cp $fd
 219+ 9B60 20 21        	jr nz,8F
 220+ 9B62 18 07        	jr 3F
 221+ 9B64 3A 0C 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B67 FE FB        	cp $fb
 223+ 9B69 20 18        	jr nz,8F
 224+ 9B6B
 225+ 9B6B              ; ---------- ---------- ----------
 226+ 9B6B
 227+ 9B6B              3
 228+ 9B6B CD 9E 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B6E              ;	call Reinicio
 230+ 9B6E
 231+ 9B6E              ; ---------- ---------- ----------
 232+ 9B6E              ;
 233+ 9B6E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B6E
 235+ 9B6E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B70 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B71 CD 8A 9B     	call DESPLZ_DER
 238+ 9B74 C1           	pop bc
 239+ 9B75 10 F9        	djnz 5B
 240+ 9B77 2A 08 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B7A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B7B 22 08 8C     	ld (Posicion_actual),hl
 243+ 9B7E CD 68 95     	call Genera_coordenadas
 244+ 9B81 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B83
 246+ 9B83              ; ---------- ---------- ----------
 247+ 9B83
 248+ 9B83 2A 08 8C     8 ld hl,(Posicion_actual)
 249+ 9B86 CD 8A 9B     	call DESPLZ_DER
 250+ 9B89 C9           2 ret
 251+ 9B8A
 252+ 9B8A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B8A              ;
 254+ 9B8A              ;	22/9/22
 255+ 9B8A              ;
 256+ 9B8A
 257+ 9B8A CD 99 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B8D CD E5 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B90 CD 0E 9C         call Ciclo_completo
 260+ 9B93 21 05 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B96 CB FE        	set 7,(hl)
 262+ 9B98 C9           	ret
 263+ 9B99
 264+ 9B99              ; ******************************************************************************************************************************************************************************************
 265+ 9B99              ;	15/02/23
 266+ 9B99              ;
 267+ 9B99
 268+ 9B99 3A 1E 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B9C 47           	ld b,a
 270+ 9B9D 2A 11 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9BA0 23           1 inc hl
 272+ 9BA1 23           	inc hl
 273+ 9BA2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9BA4 22 11 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9BA7 CD 50 91     	call Extrae_address
 276+ 9BAA 22 0A 8C     	ld (Puntero_objeto),hl
 277+ 9BAD
 278+ 9BAD              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9BAD
 280+ 9BAD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9BAD              ; Cuántos movimientos hemos hecho ??
 282+ 9BAD              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9BAD
 284+ 9BAD 2A 0D 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9BB0 EB           	ex de,hl
 286+ 9BB1 A7           	and a
 287+ 9BB2 ED 52        	sbc hl,de
 288+ 9BB4 CB 3D        	srl l
 289+ 9BB6 3E 08        6 ld a,8
 290+ 9BB8 95           	sub l
 291+ 9BB9 30 1E        	jr nc,3F
 292+ 9BBB
 293+ 9BBB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9BBB              ; B="0".
 295+ 9BBB
 296+ 9BBB 04           4 inc b
 297+ 9BBC 3C           	inc a
 298+ 9BBD 20 FC        	jr nz,4B
 299+ 9BBF 78           	ld a,b
 300+ 9BC0 08           	ex af,af
 301+ 9BC1 2A 0D 8C     	ld hl,(Indice_Sprite_der)
 302+ 9BC4 23           5 inc hl
 303+ 9BC5 23           	inc hl
 304+ 9BC6 10 FC        	djnz 5B
 305+ 9BC8 22 11 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BCB CD 50 91     	call Extrae_address
 307+ 9BCE 22 0A 8C     	ld (Puntero_objeto),hl
 308+ 9BD1
 309+ 9BD1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BD1              ; _(Posicion_actual).
 311+ 9BD1
 312+ 9BD1 21 08 8C     	ld hl,Posicion_actual
 313+ 9BD4 34           	inc (hl)
 314+ 9BD5 08               ex af,af
 315+ 9BD6 6F           	ld l,a
 316+ 9BD7 18 DD        	jr 6B
 317+ 9BD9
 318+ 9BD9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BD9
 320+ 9BD9 47           3 ld b,a
 321+ 9BDA 2A 0F 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BDD 23           2 inc hl
 323+ 9BDE 23           	inc hl
 324+ 9BDF 10 FC        	djnz 2B
 325+ 9BE1 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BE4 C9           8 ret
 327+ 9BE5
 328+ 9BE5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BE5              ;
 330+ 9BE5              ;	24/7/22
 331+ 9BE5              ;
 332+ 9BE5              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BE5              ;
 334+ 9BE5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BE5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BE5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BE5
 338+ 9BE5 3A 0C 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BE8 A7           	and a
 340+ 9BE9 20 1F        	jr nz,1F
 341+ 9BEB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BED 32 0C 8C         ld (CTRL_DESPLZ),a
 343+ 9BF0
 344+ 9BF0 21 07 8C     	ld hl,Columns
 345+ 9BF3 34           	inc (hl)
 346+ 9BF4 3A 17 8C     	ld a,(Cuad_objeto)
 347+ 9BF7 E6 01        	and 1
 348+ 9BF9 28 0F        	jr z,1F
 349+ 9BFB 2A 08 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BFE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BFF 22 08 8C     	ld (Posicion_actual),hl
 352+ 9C02 CD 68 95     	call Genera_coordenadas
 353+ 9C05 CD 6A 9D     	call Inc_CTRL_DESPLZ
 354+ 9C08 18 03        	jr 2F
 355+ 9C0A CD 6A 9D     1 call Inc_CTRL_DESPLZ
 356+ 9C0D C9           2 ret
 357+ 9C0E
 358+ 9C0E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9C0E              ;
 360+ 9C0E              ;	24/7/22
 361+ 9C0E              ;
 362+ 9C0E              ;	Ciclo_completo.
 363+ 9C0E              ;
 364+ 9C0E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9C0E              ;
 366+ 9C0E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9C0E              ; 	Decrementamos (Columns).
 368+ 9C0E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9C0E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9C0E
 371+ 9C0E
 372+ 9C0E 3A 0C 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9C11 FE FF        	cp $ff
 374+ 9C13 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9C15 E6 F0        	and $f0
 376+ 9C17 20 28        	jr nz,3F
 377+ 9C19
 378+ 9C19              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9C19
 380+ 9C19 3A 0C 8C     	ld a,(CTRL_DESPLZ)
 381+ 9C1C 47           	ld b,a
 382+ 9C1D 3E F8        	ld a,$f8
 383+ 9C1F 80           	add b
 384+ 9C20 32 0C 8C     	ld (CTRL_DESPLZ),a
 385+ 9C23 18 1C        	jr 3F
 386+ 9C25 21 07 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C28 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C29 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C2A 32 0C 8C     	ld (CTRL_DESPLZ),a
 390+ 9C2D 3A 17 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C30 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C32 20 0A        	jr nz,2F
 393+ 9C34 2A 08 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C37 23           	inc hl
 395+ 9C38 22 08 8C     	ld (Posicion_actual),hl
 396+ 9C3B CD 68 95     	call Genera_coordenadas
 397+ 9C3E
 398+ 9C3E              ; Inicia el puntero de Sprite.
 399+ 9C3E
 400+ 9C3E CD 65 91     2 call Inicia_puntero_objeto_der
 401+ 9C41 C9           3 ret
 402+ 9C42
 403+ 9C42              ; ******************************************************************************************************************************************************************************************
 404+ 9C42              ;
 405+ 9C42              ;	15/02/23
 406+ 9C42              ;
 407+ 9C42              ;	Mov_left.
 408+ 9C42              ;
 409+ 9C42              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C42              ;
 411+ 9C42              Mov_left
 412+ 9C42
 413+ 9C42 21 05 8C     	ld hl,Ctrl_0
 414+ 9C45 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C47              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C47              ; 																	; _ en el caso de que no lo haya.
 417+ 9C47 3A 05 8C     	ld a,(Ctrl_0)
 418+ 9C4A CB 77        	bit 6,a
 419+ 9C4C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C4E
 421+ 9C4E CD 64 9D     	call Stop_Amadeus_left
 422+ 9C51 C8           	ret z
 423+ 9C52 20 4A        	jr nz,8F
 424+ 9C54
 425+ 9C54 3A F9 8B     11 ld a,(Coordenada_X)
 426+ 9C57 A7           	and a
 427+ 9C58 20 44        	jr nz,8F
 428+ 9C5A
 429+ 9C5A 3A 0C 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C5D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C5E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C60
 433+ 9C60              ; ---------- ---------- ----------
 434+ 9C60
 435+ 9C60 3A 1D 8C     	ld a,(Vel_left)
 436+ 9C63 FE 02        	cp 2
 437+ 9C65 28 0F        	jr z,1F
 438+ 9C67 38 04        	jr c,6F
 439+ 9C69 FE 04        	cp 4
 440+ 9C6B 28 12        	jr z,7F
 441+ 9C6D
 442+ 9C6D              ; ---------- ---------- ----------
 443+ 9C6D
 444+ 9C6D 3A 0C 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9C70 FE F8        	cp $f8
 446+ 9C72 20 2A        	jr nz,8F
 447+ 9C74 18 10        	jr 4F
 448+ 9C76 3A 0C 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9C79 FE F9        	cp $f9
 450+ 9C7B 20 21        	jr nz,8F
 451+ 9C7D 18 07        	jr 4F
 452+ 9C7F 3A 0C 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9C82 FE FB        	cp $fb
 454+ 9C84 20 18        	jr nz,8F
 455+ 9C86
 456+ 9C86              ; ---------- ---------- ----------
 457+ 9C86
 458+ 9C86              4
 459+ 9C86 CD 8C 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C89              ;	call Reinicio
 461+ 9C89
 462+ 9C89              ; ---------- ---------- ----------
 463+ 9C89
 464+ 9C89 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C8B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C8C
 467+ 9C8C              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C8C              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C8C
 470+ 9C8C CD A5 9C     	call DESPLZ_IZQ
 471+ 9C8F C1           	pop bc
 472+ 9C90 10 F9        	djnz 5B
 473+ 9C92 2A 08 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C95 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C96 22 08 8C     	ld (Posicion_actual),hl
 476+ 9C99 CD 68 95     	call Genera_coordenadas
 477+ 9C9C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C9E
 479+ 9C9E              ; ---------- ---------- ----------
 480+ 9C9E
 481+ 9C9E              ; Movemos, no hay recolocación.
 482+ 9C9E
 483+ 9C9E 2A 08 8C     8 ld hl,(Posicion_actual)
 484+ 9CA1 CD A5 9C     	call DESPLZ_IZQ
 485+ 9CA4 C9           2 ret
 486+ 9CA5
 487+ 9CA5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9CA5              ;
 489+ 9CA5              ;	22/9/22
 490+ 9CA5
 491+ 9CA5              DESPLZ_IZQ
 492+ 9CA5
 493+ 9CA5 CD B4 9C     	call Desplaza_izquierda
 494+ 9CA8 CD 00 9D         call modifica_parametros_1er_DESPLZ
 495+ 9CAB CD 28 9D     	call Ciclo_completo_2
 496+ 9CAE 21 05 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9CB1 CB BE        	res 7,(hl)
 498+ 9CB3 C9           	ret
 499+ 9CB4
 500+ 9CB4              Desplaza_izquierda
 501+ 9CB4
 502+ 9CB4 3A 1D 8C     	ld a,(Vel_left)
 503+ 9CB7 47           	ld b,a
 504+ 9CB8 2A 13 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9CBB 23           1 inc hl
 506+ 9CBC 23           	inc hl
 507+ 9CBD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9CBF 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9CC2 CD 50 91     	call Extrae_address
 510+ 9CC5 22 0A 8C     	ld (Puntero_objeto),hl
 511+ 9CC8
 512+ 9CC8              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CC8
 514+ 9CC8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CC8              ; Cuántos movimientos hemos hecho ??
 516+ 9CC8              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CC8
 518+ 9CC8 2A 0F 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CCB EB           	ex de,hl
 520+ 9CCC A7           	and a
 521+ 9CCD ED 52        	sbc hl,de
 522+ 9CCF CB 3D        	srl l
 523+ 9CD1 3E 08        6 ld a,8
 524+ 9CD3 95           	sub l
 525+ 9CD4 30 1E        	jr nc,3F
 526+ 9CD6
 527+ 9CD6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CD6              ; B="0".
 529+ 9CD6
 530+ 9CD6 04           4 inc b
 531+ 9CD7 3C           	inc a
 532+ 9CD8 20 FC        	jr nz,4B
 533+ 9CDA 78           	ld a,b
 534+ 9CDB 08           	ex af,af
 535+ 9CDC 2A 0F 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CDF 23           5 inc hl
 537+ 9CE0 23           	inc hl
 538+ 9CE1 10 FC        	djnz 5B
 539+ 9CE3 22 13 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CE6 CD 50 91     	call Extrae_address
 541+ 9CE9 22 0A 8C     	ld (Puntero_objeto),hl
 542+ 9CEC
 543+ 9CEC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CEC              ; _(Posicion_actual).
 545+ 9CEC
 546+ 9CEC 21 08 8C     	ld hl,Posicion_actual
 547+ 9CEF 35           	dec (hl)
 548+ 9CF0 08           	ex af,af
 549+ 9CF1 6F           	ld l,a
 550+ 9CF2 18 DD        	jr 6B
 551+ 9CF4
 552+ 9CF4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CF4
 554+ 9CF4 47           3 ld b,a
 555+ 9CF5 2A 0D 8C     	ld hl,(Indice_Sprite_der)
 556+ 9CF8 23           2 inc hl
 557+ 9CF9 23           	inc hl
 558+ 9CFA 10 FC        	djnz 2B
 559+ 9CFC 22 11 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CFF C9           8 ret
 561+ 9D00
 562+ 9D00              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9D00              ;
 564+ 9D00              ;	modifica_parametros_1er_DESPLZ
 565+ 9D00              ;
 566+ 9D00              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9D00              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9D00              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9D00
 570+ 9D00 3A 0C 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9D03 A7           	and a
 572+ 9D04 20 1E        	jr nz,1F
 573+ 9D06 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9D07 32 0C 8C         ld (CTRL_DESPLZ),a
 575+ 9D0A 21 07 8C     	ld hl,Columns
 576+ 9D0D 34           	inc (hl)
 577+ 9D0E 3A 17 8C     	ld a,(Cuad_objeto)
 578+ 9D11 E6 01        	and 1
 579+ 9D13 20 0F        	jr nz,1F
 580+ 9D15 2A 08 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9D18 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9D19 22 08 8C     	ld (Posicion_actual),hl
 583+ 9D1C CD 68 95     	call Genera_coordenadas
 584+ 9D1F CD 7B 9D     	call Dec_CTRL_DESPLZ
 585+ 9D22 18 03        	jr 2F
 586+ 9D24 CD 7B 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D27 C9           2 ret
 588+ 9D28
 589+ 9D28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D28
 591+ 9D28 3A 0C 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D2B FE F7        	cp $f7
 593+ 9D2D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D2F 30 2C        	jr nc,3F
 595+ 9D31
 596+ 9D31              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D31
 598+ 9D31 06 00        	ld b,0
 599+ 9D33 04           4 inc b
 600+ 9D34 3C           	inc a
 601+ 9D35 FE F7        	cp $f7
 602+ 9D37 20 FA        	jr nz,4B
 603+ 9D39 3E FF        	ld a,$ff
 604+ 9D3B 90           	sub b
 605+ 9D3C 32 0C 8C     	ld (CTRL_DESPLZ),a
 606+ 9D3F 18 1C        	jr 3F
 607+ 9D41
 608+ 9D41              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D41
 610+ 9D41 21 07 8C     1 ld hl,Columns
 611+ 9D44 35           	dec (hl)
 612+ 9D45 AF           	xor a
 613+ 9D46 32 0C 8C     	ld (CTRL_DESPLZ),a
 614+ 9D49 3A 17 8C     	ld a,(Cuad_objeto)
 615+ 9D4C E6 01        	and 1
 616+ 9D4E 28 0A        	jr z,2F
 617+ 9D50 2A 08 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D53 2B           	dec hl
 619+ 9D54 22 08 8C     	ld (Posicion_actual),hl
 620+ 9D57 CD 68 95     	call Genera_coordenadas
 621+ 9D5A
 622+ 9D5A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D5A
 624+ 9D5A CD 78 91     2 call Inicia_puntero_objeto_izq
 625+ 9D5D C9           3 ret
 626+ 9D5E
 627+ 9D5E              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D5E              ;
 629+ 9D5E              ;	19/10/22
 630+ 9D5E              ;
 631+ 9D5E              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D5E              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D5E
 634+ 9D5E 3A F9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D61 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D63 C9           	ret
 637+ 9D64
 638+ 9D64              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D64              ;
 640+ 9D64              ;	19/10/22
 641+ 9D64              ;
 642+ 9D64              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D64              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D64
 645+ 9D64 3A F9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D67 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D69 C9           	ret
 648+ 9D6A
 649+ 9D6A              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D6A              ;
 651+ 9D6A              ;	24/7/22
 652+ 9D6A              ;
 653+ 9D6A              ;	Inc_CTRL_DESPLZ
 654+ 9D6A              ;
 655+ 9D6A              ;
 656+ 9D6A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D6A
 658+ 9D6A 21 0C 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D6D 3A 1E 8C     	ld a,(Vel_right)
 660+ 9D70 A7           	and a
 661+ 9D71 28 06        	jr z,1F
 662+ 9D73 47           	ld b,a
 663+ 9D74 34           3 inc (hl)
 664+ 9D75 10 FD        	djnz 3B
 665+ 9D77 18 01        	jr 2F
 666+ 9D79 34           1 inc (hl)
 667+ 9D7A C9           2 ret
 668+ 9D7B
 669+ 9D7B              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D7B              ;
 671+ 9D7B              ;	5/2/23
 672+ 9D7B              ;
 673+ 9D7B              ;	Dec_CTRL_DESPLZ
 674+ 9D7B              ;
 675+ 9D7B              ;
 676+ 9D7B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D7B
 678+ 9D7B 21 0C 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D7E 3A 1D 8C     	ld a,(Vel_left)
 680+ 9D81 A7           	and a
 681+ 9D82 28 06        	jr z,1F
 682+ 9D84 47           	ld b,a
 683+ 9D85 35           3 dec (hl)
 684+ 9D86 10 FD        	djnz 3B
 685+ 9D88 18 01        	jr 2F
 686+ 9D8A 35           1 dec (hl)
 687+ 9D8B C9           2 ret
 688+ 9D8C
 689+ 9D8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D8C
 691+ 9D8C 2A 08 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D8F 01 1F 00     	ld bc,31
 693+ 9D92 A7           	and a
 694+ 9D93 ED 4A        	adc hl,bc
 695+ 9D95 22 08 8C     	ld (Posicion_actual),hl
 696+ 9D98 21 05 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9D9B CB C6        	set 0,(hl)
 698+ 9D9D C9           	ret
 699+ 9D9E
 700+ 9D9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D9E
 702+ 9D9E 2A 08 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9DA1 01 1F 00     	ld bc,31
 704+ 9DA4 A7           	and a
 705+ 9DA5 ED 42        	sbc hl,bc
 706+ 9DA7 22 08 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9DAA 21 05 8C     	ld hl,Ctrl_0
 708+ 9DAD CB CE        	set 1,(hl)
 709+ 9DAF C9           	ret
 710+ 9DB0
 711+ 9DB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9DB0
 713+ 9DB0 24           Reaparece_abajo inc h
 714+ 9DB1 01 E0 17     	ld bc,$17e0
 715+ 9DB4 A7           	and a
 716+ 9DB5 ED 4A        	adc hl,bc
 717+ 9DB7 22 08 8C     	ld (Posicion_actual),hl
 718+ 9DBA 21 05 8C     	ld hl,Ctrl_0
 719+ 9DBD CB D6        	set 2,(hl)
 720+ 9DBF C9           	ret
 721+ 9DC0
 722+ 9DC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9DC0
 724+ 9DC0 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9DC3 A7           	and a
 726+ 9DC4 ED 42        	sbc hl,bc
 727+ 9DC6 22 08 8C     	ld (Posicion_actual),hl
 728+ 9DC9 21 05 8C     	ld hl,Ctrl_0
 729+ 9DCC CB DE        	set 3,(hl)
 730+ 9DCE C9           	ret
 731+ 9DCF
 732+ 9DCF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DCF              ;
 734+ 9DCF              ;	15/07/23
 735+ 9DCF
 736+ 9DCF              Reinicio
 737+ 9DCF
 738+ 9DCF              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DCF
 740+ 9DCF AF           	xor a
 741+ 9DD0 21 2D 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DD3 CD F1 9D     	call Limpia_contenido_hl
 743+ 9DD6
 744+ 9DD6 21 08 8C     	ld hl,Posicion_actual
 745+ 9DD9 CD F1 9D     	call Limpia_contenido_hl
 746+ 9DDC
 747+ 9DDC CD D2 93     	call Situa_Puntero_indice_mov
 748+ 9DDF CD F0 9E     	call Inicia_Puntero_mov
 749+ 9DE2
 750+ 9DE2 21 2F 8C     	ld hl,Incrementa_puntero
 751+ 9DE5 06 05        	ld b,5
 752+ 9DE7 77           1 ld (hl),a
 753+ 9DE8 23           	inc hl
 754+ 9DE9 10 FC        	djnz 1B
 755+ 9DEB
 756+ 9DEB 21 04 8C     	ld hl,Ctrl_2
 757+ 9DEE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DF0
 759+ 9DF0 C9           	ret
 760+ 9DF1
 761+ 9DF1 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DF2 23           	inc hl
 763+ 9DF3 77           	ld (hl),a
 764+ 9DF4 C9           	ret
 765+ 9DF5
 766+ 9DF5              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DF5              ;
 768+ 9DF5              ;	18/6/24
 769+ 9DF5              ;
 770+ 9DF5
 771+ 9DF5              Amadeus_a_izquierda
 772+ 9DF5
 773+ 9DF5              ;	Actualiza contador de movimientos.
 774+ 9DF5
 775+ 9DF5 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DF8 35           	dec (hl)
 777+ 9DF9 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DFB
 779+ 9DFB 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DFE 2B           	dec hl
 781+ 9DFF 2B           	dec hl
 782+ 9E00 2B           	dec hl
 783+ 9E01 2B           	dec hl
 784+ 9E02 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9E05
 786+ 9E05 21 6F 8C     	ld hl,Ctrl_3
 787+ 9E08 CB EE        	set 5,(hl)
 788+ 9E0A
 789+ 9E0A C9           	ret
 790+ 9E0B
 791+ 9E0B 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9E0C C9           	ret
 793+ 9E0D
 794+ 9E0D
 795+ 9E0D              Amadeus_a_derecha
 796+ 9E0D
 797+ 9E0D              ;	Actualiza contador de movimientos.
 798+ 9E0D
 799+ 9E0D 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9E10 34           	inc (hl)
 801+ 9E11 3E 7A        	ld a,$7a
 802+ 9E13 BE           	cp (hl)
 803+ 9E14 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9E16
 805+ 9E16 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9E19 23           	inc hl
 807+ 9E1A 23           	inc hl
 808+ 9E1B 23           	inc hl
 809+ 9E1C 23           	inc hl
 810+ 9E1D 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9E20
 812+ 9E20 21 6F 8C     	ld hl,Ctrl_3
 813+ 9E23 CB EE        	set 5,(hl)
 814+ 9E25 C9           	ret
 815+ 9E26
 816+ 9E26 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E27 C9           	ret
# file closed: Direcciones.asm
2217  9E28              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E28              ; ----- ----- ----- ----- -----
   2+ 9E28              ;
   3+ 9E28              ;   28/12/23
   4+ 9E28
   5+ 9E28              Movimiento
   6+ 9E28
   7+ 9E28              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E28
   9+ 9E28 3A 04 8C         ld a,(Ctrl_2)
  10+ 9E2B CB 57            bit 2,a
  11+ 9E2D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E2F
  13+ 9E2F 2A 2B 8C         ld hl,(Puntero_mov)
  14+ 9E32 7E               ld a,(hl)
  15+ 9E33
  16+ 9E33              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E33
  18+ 9E33              Inicia_desplazamiento.
  19+ 9E33
  20+ 9E33              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E33
  22+ 9E33 CD 26 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E36
  24+ 9E36              ; Iniciamos (Repetimos_mov).
  25+ 9E36
  26+ 9E36 7E               ld a,(hl)
  27+ 9E37 E6 0F            and $0f
  28+ 9E39 32 31 8C         ld (Repetimos_desplazamiento),a
  29+ 9E3C 32 32 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9E3F
  31+ 9E3F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9E3F
  33+ 9E3F 23               inc hl
  34+ 9E40 7E               ld a,(hl)
  35+ 9E41 32 34 8C         ld (Cola_de_desplazamiento),a
  36+ 9E44 2B               dec hl
  37+ 9E45
  38+ 9E45 21 04 8C         ld hl,Ctrl_2
  39+ 9E48 CB D6            set 2,(hl)
  40+ 9E4A
  41+ 9E4A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9E4A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9E4A
  44+ 9E4A              Desplazamiento_iniciado
  45+ 9E4A
  46+ 9E4A CD FA 9E         call Aplica_desplazamiento
  47+ 9E4D
  48+ 9E4D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9E4D
  50+ 9E4D 3A 6F 8C         ld a,(Ctrl_3)
  51+ 9E50 CB 4F            bit 1,a
  52+ 9E52 C0               ret nz
  53+ 9E53
  54+ 9E53 21 31 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9E56 35               dec (hl)
  56+ 9E57 C0               ret nz
  57+ 9E58
  58+ 9E58              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9E58              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9E58              ; Analiza (Cola_de_desplazamiento).
  61+ 9E58
  62+ 9E58 3A 34 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9E5B A7               and a
  64+ 9E5C CC 4F 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E5F 28 30            jr z,Reinicia_el_movimiento
  66+ 9E61
  67+ 9E61 FE FF            cp $ff
  68+ 9E63 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E65
  70+ 9E65 FE FE            cp $fe
  71+ 9E67 CC D4 9E         call z,Fijamos_bucle
  72+ 9E6A 28 25            jr z,Reinicia_el_movimiento
  73+ 9E6C
  74+ 9E6C FE FD            cp $fd
  75+ 9E6E 20 11            jr nz,1F
  76+ 9E70
  77+ 9E70              ; ---
  78+ 9E70              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E70
  80+ 9E70 3A 04 8C         ld a,(Ctrl_2)
  81+ 9E73 CB 5F            bit 3,a
  82+ 9E75 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E77
  84+ 9E77              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E77
  86+ 9E77 21 04 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E7A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E7C
  89+ 9E7C CD E5 9E         call Inicia_Repetimos_movimiento
  90+ 9E7F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E81              ; ---
  92+ 9E81
  93+ 9E81 FE 01        1 cp 1
  94+ 9E83 CA BE 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E86
  96+ 9E86 3D               dec a
  97+ 9E87 32 34 8C         ld (Cola_de_desplazamiento),a
  98+ 9E8A
  99+ 9E8A 3A 32 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E8D 32 31 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E90              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E90 C9               ret
 103+ 9E91
 104+ 9E91              Reinicia_el_movimiento
 105+ 9E91
 106+ 9E91 3A 04 8C         ld a,(Ctrl_2)
 107+ 9E94 CB 5F            bit 3,a
 108+ 9E96 28 1B            jr z,2F
 109+ 9E98
 110+ 9E98              ; (Cola_de_desplazamiento)="254".
 111+ 9E98
 112+ 9E98 21 33 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E9B 35               dec (hl)
 114+ 9E9C 20 15            jr nz,2F
 115+ 9E9E
 116+ 9E9E              ; Fin de las repeticiones del último movimiento.
 117+ 9E9E
 118+ 9E9E 21 04 8C         ld hl,Ctrl_2
 119+ 9EA1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9EA3
 121+ 9EA3 2A 2B 8C         ld hl,(Puntero_mov)
 122+ 9EA6 23               inc hl
 123+ 9EA7 23               inc hl
 124+ 9EA8 23               inc hl
 125+ 9EA9 22 2B 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9EAC              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9EAC 7E               ld a,(hl)
 128+ 9EAD 32 34 8C         ld (Cola_de_desplazamiento),a
 129+ 9EB0
 130+ 9EB0 C3 58 9E         jp Cola
 131+ 9EB3
 132+ 9EB3 CD F0 9E     2 call Inicia_Puntero_mov
 133+ 9EB6
 134+ 9EB6 21 04 8C         ld hl,Ctrl_2
 135+ 9EB9 CB 96            res 2,(hl)
 136+ 9EBB
 137+ 9EBB C3 28 9E         jp Movimiento
 138+ 9EBE
 139+ 9EBE              Siguiente_desplazamiento
 140+ 9EBE
 141+ 9EBE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9EBE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9EBE
 144+ 9EBE 21 04 8C         ld hl,Ctrl_2
 145+ 9EC1 CB 96            res 2,(hl)
 146+ 9EC3
 147+ 9EC3 2A 2B 8C         ld hl,(Puntero_mov)
 148+ 9EC6 23               inc hl
 149+ 9EC7 23               inc hl
 150+ 9EC8 22 2B 8C         ld (Puntero_mov),hl
 151+ 9ECB
 152+ 9ECB 7E               ld a,(hl)
 153+ 9ECC A7               and a
 154+ 9ECD CC 4F 9F         call z,Incrementa_Puntero_indice_mov
 155+ 9ED0 CA 91 9E         jp z,Reinicia_el_movimiento
 156+ 9ED3
 157+ 9ED3 C9               ret
 158+ 9ED4
 159+ 9ED4              ; Subrutinas -----------------------------------------
 160+ 9ED4              ; ---------- --------- --------- ---------- ----------
 161+ 9ED4              ;
 162+ 9ED4              ;   24/07/23
 163+ 9ED4              ;
 164+ 9ED4              ;   Fijamos_bucle
 165+ 9ED4              ;
 166+ 9ED4              ;
 167+ 9ED4
 168+ 9ED4              Fijamos_bucle
 169+ 9ED4
 170+ 9ED4 3A 2F 8C         ld a,(Incrementa_puntero)
 171+ 9ED7 3C               inc a
 172+ 9ED8 32 30 8C         ld (Incrementa_puntero_backup),a
 173+ 9EDB
 174+ 9EDB CD 4F 9F         call Incrementa_Puntero_indice_mov
 175+ 9EDE 2A 29 8C         ld hl,(Puntero_indice_mov)
 176+ 9EE1 22 2D 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9EE4 C9               ret
 178+ 9EE5
 179+ 9EE5              ; ---------- --------- --------- ---------- ----------
 180+ 9EE5              ;
 181+ 9EE5              ;   07/7/23
 182+ 9EE5              ;
 183+ 9EE5              ;   Inicia_Repetimos_movimiento
 184+ 9EE5              ;
 185+ 9EE5              ;
 186+ 9EE5
 187+ 9EE5              Inicia_Repetimos_movimiento
 188+ 9EE5
 189+ 9EE5              ; Iniciamos (Repetimos_movimiento).
 190+ 9EE5
 191+ 9EE5 DD 2A 2B 8C      ld ix,(Puntero_mov)
 192+ 9EE9 DD 7E 02         ld a,(ix+2)
 193+ 9EEC 32 33 8C         ld (Repetimos_movimiento),a
 194+ 9EEF
 195+ 9EEF C9               ret
 196+ 9EF0
 197+ 9EF0              ; ---------- --------- --------- ---------- ----------
 198+ 9EF0              ;
 199+ 9EF0              ;   26/6/23
 200+ 9EF0              ;
 201+ 9EF0              ;   Inicia_Puntero_mov
 202+ 9EF0              ;
 203+ 9EF0              ;
 204+ 9EF0
 205+ 9EF0 2A 29 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9EF3 CD 50 91         call Extrae_address
 207+ 9EF6 22 2B 8C         ld (Puntero_mov),hl
 208+ 9EF9 C9               ret
 209+ 9EFA
 210+ 9EFA              ; ---------- --------- --------- ---------- ----------
 211+ 9EFA              ;
 212+ 9EFA              ;   27/06/23
 213+ 9EFA              ;
 214+ 9EFA              ;   Aplica_movimiento.
 215+ 9EFA
 216+ 9EFA              Aplica_desplazamiento
 217+ 9EFA
 218+ 9EFA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9EFA
 220+ 9EFA 2A 2B 8C         ld hl, (Puntero_mov)
 221+ 9EFD
 222+ 9EFD 7E               ld a,(hl)
 223+ 9EFE E6 F0            and $f0
 224+ 9F00 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9F01
 226+ 9F01 CB 7E            bit 7,(hl)
 227+ 9F03 28 03            jr z,1F
 228+ 9F05 CD DC 9A         call Mov_up
 229+ 9F08 2A 2B 8C     1 ld hl, (Puntero_mov)
 230+ 9F0B CB 76            bit 6,(hl)
 231+ 9F0D 28 03            jr z,2F
 232+ 9F0F CD A3 9A         call Mov_down
 233+ 9F12
 234+ 9F12              ; Se ha aplicado reinicio ???
 235+ 9F12              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9F12
 237+ 9F12              ;    ld a,(Ctrl_3)
 238+ 9F12              ;    bit 1,a
 239+ 9F12              ;    ret nz
 240+ 9F12
 241+ 9F12 2A 2B 8C     2 ld hl, (Puntero_mov)
 242+ 9F15 CB 6E            bit 5,(hl)
 243+ 9F17 28 03            jr z,3F
 244+ 9F19 CD 42 9C         call Mov_left
 245+ 9F1C 2A 2B 8C     3 ld hl, (Puntero_mov)
 246+ 9F1F CB 66            bit 4,(hl)
 247+ 9F21 C8               ret z
 248+ 9F22 CD 1F 9B         call Mov_right
 249+ 9F25 C9               ret
 250+ 9F26
 251+ 9F26              ; ---------- --------- --------- ---------- ----------
 252+ 9F26              ;
 253+ 9F26              ;   26/06/23
 254+ 9F26              ;
 255+ 9F26              ;   Ajusta_velocidad_desplazamiento.
 256+ 9F26
 257+ 9F26              Ajusta_velocidad_desplazamiento
 258+ 9F26
 259+ 9F26              ; 1er byte de la cadena de movimiento.
 260+ 9F26              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9F26
 262+ 9F26 CD 44 9F         call Extrae_nibble_alto
 263+ 9F29
 264+ 9F29 32 1F 8C         ld (Vel_up),a
 265+ 9F2C 79               ld a,c
 266+ 9F2D E6 0F            and $0f
 267+ 9F2F 32 20 8C         ld (Vel_down),a
 268+ 9F32
 269+ 9F32              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9F32              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9F32
 272+ 9F32 23               inc hl
 273+ 9F33 CD 44 9F         call Extrae_nibble_alto
 274+ 9F36
 275+ 9F36 32 1D 8C         ld (Vel_left),a
 276+ 9F39 79               ld a,c
 277+ 9F3A E6 0F            and $0f
 278+ 9F3C 32 1E 8C         ld (Vel_right),a
 279+ 9F3F
 280+ 9F3F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9F3F
 282+ 9F3F 23               inc hl
 283+ 9F40 22 2B 8C         ld (Puntero_mov),hl
 284+ 9F43 C9               ret
 285+ 9F44
 286+ 9F44 06 04        Extrae_nibble_alto ld b,4
 287+ 9F46 7E               ld a,(hl)
 288+ 9F47 4F               ld c,a
 289+ 9F48 E6 F0            and $f0
 290+ 9F4A CB 3F        1 srl a
 291+ 9F4C 10 FC            djnz 1B
 292+ 9F4E C9               ret
 293+ 9F4F
 294+ 9F4F              ; ---------- --------- --------- ---------- ----------
 295+ 9F4F              ;
 296+ 9F4F              ;   5/7/23
 297+ 9F4F              ;
 298+ 9F4F              ;   Incrementa_Puntero_indice_mov
 299+ 9F4F
 300+ 9F4F              Incrementa_Puntero_indice_mov
 301+ 9F4F
 302+ 9F4F 21 2F 8C         ld hl,Incrementa_puntero
 303+ 9F52 34               inc (hl)
 304+ 9F53
 305+ 9F53 2A 29 8C         ld hl,(Puntero_indice_mov)
 306+ 9F56 01 02 00         ld bc,2
 307+ 9F59 A7               and a
 308+ 9F5A 09               add hl,bc
 309+ 9F5B 22 29 8C         ld (Puntero_indice_mov),hl
 310+ 9F5E
 311+ 9F5E 7E               ld a,(hl)
 312+ 9F5F A7               and a
 313+ 9F60
 314+ 9F60              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F60
 316+ 9F60              ;    jr z,$
 317+ 9F60
 318+ 9F60              ;! Reinicia el Patrón de movimiento.
 319+ 9F60
 320+ 9F60 CC 65 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F63
 322+ 9F63 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F64
 324+ 9F64 C9               ret
 325+ 9F65
 326+ 9F65              ; ---------- --------- --------- ---------- ----------
 327+ 9F65              ;
 328+ 9F65              ;   15/01/24
 329+ 9F65              ;
 330+ 9F65              ;   Inicializa_Puntero_indice_mov
 331+ 9F65
 332+ 9F65              Inicializa_Puntero_indice_mov_2
 333+ 9F65
 334+ 9F65              ; Existe etiqueta de bucle principal???
 335+ 9F65
 336+ 9F65 2A 2D 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F68 24               inc h
 338+ 9F69 25               dec h
 339+ 9F6A 28 05            jr z,2F
 340+ 9F6C
 341+ 9F6C 22 29 8C         ld (Puntero_indice_mov),hl
 342+ 9F6F 18 14            jr 3F
 343+ 9F71
 344+ 9F71              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F71
 346+ 9F71 3A 2F 8C     2 ld a,(Incrementa_puntero)
 347+ 9F74 47               ld b,a
 348+ 9F75
 349+ 9F75 2A 29 8C         ld hl,(Puntero_indice_mov)
 350+ 9F78 2B           1 dec hl
 351+ 9F79 2B               dec hl
 352+ 9F7A 10 FC            djnz 1B
 353+ 9F7C 22 29 8C         ld (Puntero_indice_mov),hl
 354+ 9F7F
 355+ 9F7F AF               xor a
 356+ 9F80 32 2F 8C         ld (Incrementa_puntero),a
 357+ 9F83 18 06            jr 4F
 358+ 9F85
 359+ 9F85 3A 30 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F88 32 2F 8C         ld (Incrementa_puntero),a
 361+ 9F8B C9           4 ret
 362+ 9F8C
 363+ 9F8C              ; ----------------------------------------------------------------------
 364+ 9F8C              ;
 365+ 9F8C              ;   24/11/24
 366+ 9F8C              ;
 367+ 9F8C              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F8C
 369+ 9F8C DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F8F CD E1 94         call Calcula_salto_en_BC
 371+ 9F92 21 21 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F95 A7               and a
 373+ 9F96 ED 4A            adc hl,bc
 374+ 9F98 C9               ret
 375+ 9F99
 376+ 9F99              ; ----------------------------------------------------------------------
 377+ 9F99              ;
 378+ 9F99              ;   24/11/24
 379+ 9F99              ;
 380+ 9F99              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F99              ;
 382+ 9F99              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F99
 384+ 9F99 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F9A 23               inc hl
 386+ 9F9B 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F9C DD 71 09         ld (ix+9),c
 388+ 9F9F DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9FA2 C9               ret
 390+ 9FA3
# file closed: Movimiento.asm
2218  9FA3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9FA3              ; --------------------------------------------------------------------------------------
   2+ 9FA3              ;
   3+ 9FA3              ;   25/10/24
   4+ 9FA3              ;
   5+ 9FA3
   6+ 9FA3              Pinta_disparos_Entidades
   7+ 9FA3
   8+ 9FA3 ED 73 47 8C      ld (Stack),sp
   9+ 9FA7 ED 7B 59 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9FAB
  11+ 9FAB 3E 02            ld a,2
  12+ 9FAD 08               ex af,af
  13+ 9FAE
  14+ 9FAE 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9FB0              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9FB0              ;                                     _ No encontraría "0".
  17+ 9FB0 FD E1        4 pop iy
  18+ 9FB2 D1               pop de                          ; 1er .db IYL
  19+ 9FB3              ;                                   ; 2º  .db IYH
  20+ 9FB3              ;                                   ; 3er .db E.
  21+ 9FB3              ;   Album vacío ???
  22+ 9FB3
  23+ 9FB3 FD 7D            ld a,iyl
  24+ 9FB5 FD 84            add iyh
  25+ 9FB7 83               add e
  26+ 9FB8 28 1F            jr z,1F
  27+ 9FBA
  28+ 9FBA              ;   Imprime album, (contiene datos).
  29+ 9FBA
  30+ 9FBA 3B               dec sp
  31+ 9FBB
  32+ 9FBB E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9FBC
  34+ 9FBC              ; Imprime el 1er scanline del disparo.
  35+ 9FBC
  36+ 9FBC FD 7D            ld a,iyl
  37+ 9FBE AE               xor (hl)
  38+ 9FBF 77               ld (hl),a
  39+ 9FC0
  40+ 9FC0 2C               inc l
  41+ 9FC1
  42+ 9FC1 FD 7C            ld a,iyh
  43+ 9FC3 AE               xor (hl)
  44+ 9FC4 77               ld (hl),a
  45+ 9FC5
  46+ 9FC5 2C               inc l
  47+ 9FC6
  48+ 9FC6 7B               ld a,e
  49+ 9FC7 AE               xor (hl)
  50+ 9FC8 77               ld (hl),a
  51+ 9FC9
  52+ 9FC9              ; Imprime el 2º scanline del disparo.
  53+ 9FC9
  54+ 9FC9 E1               pop hl
  55+ 9FCA
  56+ 9FCA FD 7D            ld a,iyl
  57+ 9FCC AE               xor (hl)
  58+ 9FCD 77               ld (hl),a
  59+ 9FCE
  60+ 9FCE 2C               inc l
  61+ 9FCF
  62+ 9FCF FD 7C            ld a,iyh
  63+ 9FD1 AE               xor (hl)
  64+ 9FD2 77               ld (hl),a
  65+ 9FD3
  66+ 9FD3 2C               inc l
  67+ 9FD4
  68+ 9FD4 7B               ld a,e
  69+ 9FD5 AE               xor (hl)
  70+ 9FD6 77               ld (hl),a
  71+ 9FD7
  72+ 9FD7 10 D7            djnz 4B
  73+ 9FD9
  74+ 9FD9 08           1 ex af,af
  75+ 9FDA 3D               dec a
  76+ 9FDB 20 05            jr nz,2F
  77+ 9FDD
  78+ 9FDD ED 7B 47 8C      ld sp,(Stack)
  79+ 9FE1 C9               ret
  80+ 9FE2
  81+ 9FE2 ED 7B 57 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FE6 08               ex af,af
  83+ 9FE7 18 C5            jr 3B
  84+ 9FE9
  85+ 9FE9              ; --------------------------------------------------------------------------------------
  86+ 9FE9              ;
  87+ 9FE9              ;   30/10/24
  88+ 9FE9              ;
  89+ 9FE9
  90+ 9FE9              Motor_de_disparos_entidades
  91+ 9FE9
  92+ 9FE9 3A 5F 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FEC FE 07            cp 7
  94+ 9FEE C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FEF
  96+ 9FEF 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FF1 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FF4
  99+ 9FF4 CD 50 91     1 call Extrae_address
 100+ 9FF7 1C               inc e
 101+ 9FF8 1C               inc e
 102+ 9FF9 ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FFD
 104+ 9FFD               ; Caja vacía ???
 105+ 9FFD
 106+ 9FFD 2D               dec l
 107+ 9FFE 7E               ld a,(hl)
 108+ 9FFF A7               and a
 109+ A000 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ A002
 111+ A002              ; --- Trabajamos con caja:
 112+ A002
 113+ A002 2C               inc l
 114+ A003
 115+ A003              ; --- Existe posibilidad de impacto ???
 116+ A003
 117+ A003 CB 46            bit 0,(hl)
 118+ A005 C4 45 A0         call nz, Comprueba_impacto_con_Amadeus
 119+ A008 20 37            jr nz,3F
 120+ A00A
 121+ A00A CD CC A0         call Rota_disparo_si_procede
 122+ A00D
 123+ A00D              ; ------------------------------------------------------------
 124+ A00D
 125+ A00D 2D               dec l
 126+ A00E 2D               dec l
 127+ A00F
 128+ A00F CD 50 91         call Extrae_address
 129+ A012
 130+ A012              ;   (Puntero_de_impresion) del disparo en HL
 131+ A012              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ A012
 133+ A012 3A 71 8C         ld a,(Ctrl_5)
 134+ A015 CB 57            bit 2,a
 135+ A017 28 09            jr z,4F
 136+ A019
 137+ A019 CB 97            res 2,a
 138+ A01B 32 71 8C         ld (Ctrl_5),a
 139+ A01E 2C               inc l
 140+ A01F 2C               inc l
 141+ A020 18 0C            jr 5F
 142+ A022
 143+ A022 CB 5F        4 bit 3,a
 144+ A024 28 08            jr z,5F
 145+ A026
 146+ A026 CB 9F            res 3,a
 147+ A028 32 71 8C         ld (Ctrl_5),a
 148+ A02B 2D               dec l
 149+ A02C 2D               dec l
 150+ A02D 2D               dec l
 151+ A02E
 152+ A02E              ; ---------------------------------------------------------------------
 153+ A02E
 154+ A02E              ;! Velocidad del disparo de entidades.
 155+ A02E
 156+ A02E CD 5D 9A     5 call NextScan
 157+ A031 CD 5D 9A         call NextScan
 158+ A034
 159+ A034              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ A034
 161+ A034 CD A9 A0         call Fin_de_disparo_de_entidad
 162+ A037
 163+ A037 EB               ex de,hl
 164+ A038
 165+ A038 73               ld (hl),e
 166+ A039 23               inc hl
 167+ A03A 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ A03B
 169+ A03B 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ A03E 18 02            jr 2F
 171+ A040
 172+ A040 C9               ret
 173+ A041
 174+ A041 EB           3 ex de,hl
 175+ A042 10 B0        2 djnz 1B
 176+ A044
 177+ A044 C9               ret
 178+ A045
 179+ A045              ; ------------- ------------- ------------
 180+ A045              ;
 181+ A045              ;   1/11/24
 182+ A045
 183+ A045              Comprueba_impacto_con_Amadeus
 184+ A045
 185+ A045              ;   El disparo se encuentra en zona de Amadeus.
 186+ A045              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ A045
 188+ A045              ;   Modificamos registros, así que guardamos ...
 189+ A045
 190+ A045 C5               push bc
 191+ A046 E5               push hl
 192+ A047 D5               push de
 193+ A048
 194+ A048 2D               dec l
 195+ A049 2D               dec l
 196+ A04A
 197+ A04A CD 50 91         call Extrae_address
 198+ A04D
 199+ A04D 3A AF 89         ld a,(CX_Amadeus)
 200+ A050 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ A051
 202+ A051 7D               ld a,l
 203+ A052 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ A054
 205+ A054 06 03            ld b,3
 206+ A056
 207+ A056 B9           1 cp c
 208+ A057 28 15            jr z,Coincidencia
 209+ A059 0C               inc c
 210+ A05A 10 FA            djnz 1B
 211+ A05C
 212+ A05C 0D               dec c
 213+ A05D 0D               dec c
 214+ A05E 0D               dec c
 215+ A05F
 216+ A05F 3C               inc a
 217+ A060 B9               cp c
 218+ A061 28 0B            jr z,Coincidencia
 219+ A063
 220+ A063 3C               inc a
 221+ A064 B9               cp c
 222+ A065 28 07            jr z,Coincidencia
 223+ A067
 224+ A067 D1           2 pop de
 225+ A068 E1               pop hl
 226+ A069 C1               pop bc
 227+ A06A
 228+ A06A              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ A06A
 230+ A06A CB 86            res 0,(hl)
 231+ A06C AF               xor a                       ; Z before RET.
 232+ A06D C9               ret
 233+ A06E
 234+ A06E              Coincidencia
 235+ A06E
 236+ A06E              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ A06E              ;   Existe posibilidad de impacto.
 238+ A06E              ;   Vamos a averiguarlo ...
 239+ A06E
 240+ A06E 1D               dec e
 241+ A06F 1D               dec e
 242+ A070 1D               dec e
 243+ A071
 244+ A071              ; DE en Puntero_objeto del disparo.
 245+ A071              ; HL en Puntero_de_impresión del disparo.
 246+ A071
 247+ A071              ; Comparador:
 248+ A071
 249+ A071 06 03            ld b,3
 250+ A073
 251+ A073 1A           3 ld a,(de)
 252+ A074 4F               ld c,a
 253+ A075 A6               and (hl)
 254+ A076 B9               cp c
 255+ A077 20 06            jr nz,Amadeus_impactado
 256+ A079
 257+ A079 2C               inc l
 258+ A07A 1C               inc e
 259+ A07B
 260+ A07B 10 F6            djnz 3B
 261+ A07D
 262+ A07D 18 E8            jr 2B
 263+ A07F
 264+ A07F              Amadeus_impactado
 265+ A07F
 266+ A07F              ; Borramos disparo.
 267+ A07F
 268+ A07F D1               pop de
 269+ A080 E1               pop hl
 270+ A081
 271+ A081 E5               push hl
 272+ A082 D5               push de
 273+ A083
 274+ A083 CD 37 A1         call Borra_6_bytes
 275+ A086
 276+ A086 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A089 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A08A
 279+ A08A              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A08A
 281+ A08A 21 B2 89         ld hl,Impacto_Amadeus
 282+ A08D 36 01            ld (hl),1
 283+ A08F
 284+ A08F              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A08F              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A08F
 287+ A08F 3A B3 89         ld a,(p.imp.amadeus)
 288+ A092 FE DE            cp $de
 289+ A094 20 04            jr nz,1F
 290+ A096
 291+ A096 3D               dec a
 292+ A097 32 B3 89         ld (p.imp.amadeus),a
 293+ A09A
 294+ A09A              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A09A
 296+ A09A 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A09D 21 B5 89         ld hl,Pamm_Amadeus
 298+ A0A0
 299+ A0A0 73               ld (hl),e
 300+ A0A1 23               inc hl
 301+ A0A2 72               ld (hl),d
 302+ A0A3
 303+ A0A3 D1               pop de
 304+ A0A4 E1               pop hl
 305+ A0A5 C1               pop bc
 306+ A0A6
 307+ A0A6 AF               xor a
 308+ A0A7 3C               inc a               ; NZ before RET.
 309+ A0A8 C9               ret
 310+ A0A9
 311+ A0A9              ; ------------- ------------- ------------
 312+ A0A9              ;
 313+ A0A9              ;   31/10/24
 314+ A0A9
 315+ A0A9              Fin_de_disparo_de_entidad
 316+ A0A9
 317+ A0A9              ; Estamos en zona de Amadeus ??
 318+ A0A9
 319+ A0A9 7C               ld a,h
 320+ A0AA FE 54            cp $54
 321+ A0AC 38 0D            jr c,1F
 322+ A0AE
 323+ A0AE D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A0AF
 325+ A0AF 5D               ld e,l
 326+ A0B0 54               ld d,h
 327+ A0B1
 328+ A0B1 21 E0 57         ld hl,$57e0
 329+ A0B4 ED 52            sbc hl,de
 330+ A0B6
 331+ A0B6 38 6F            jr c,Elimina_disparo_entidad
 332+ A0B8
 333+ A0B8 6B               ld l,e
 334+ A0B9 62               ld h,d
 335+ A0BA
 336+ A0BA D1               pop de
 337+ A0BB
 338+ A0BB 7C           1 ld a,h
 339+ A0BC FE 50            cp $50
 340+ A0BE D8               ret c
 341+ A0BF
 342+ A0BF 7D               ld a,l
 343+ A0C0 FE C0            cp $c0
 344+ A0C2 D8               ret c
 345+ A0C3
 346+ A0C3              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A0C3              ; Así podremos comprobar si hay colisión más adelante.
 348+ A0C3
 349+ A0C3 1C               inc e
 350+ A0C4 1C               inc e
 351+ A0C5
 352+ A0C5 EB               ex de,hl
 353+ A0C6 CB C6            set 0,(hl)
 354+ A0C8 EB               ex de,hl
 355+ A0C9
 356+ A0C9 1D               dec e
 357+ A0CA 1D               dec e
 358+ A0CB
 359+ A0CB C9               ret
 360+ A0CC
 361+ A0CC              ; ----------------------------------------------------------
 362+ A0CC              ;
 363+ A0CC              ;   08/10/24
 364+ A0CC
 365+ A0CC              ;   Estructura de un disparo de entidades.
 366+ A0CC
 367+ A0CC              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A0CC              ; 	defw 0											; Puntero de impresión.
 369+ A0CC              ;	defw 0											; Control.
 370+ A0CC
 371+ A0CC              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A0CC              ;   _de la entidad en el momento de disparar.
 373+ A0CC
 374+ A0CC              ;   El byte alto muestra la siguiente información:
 375+ A0CC              ;
 376+ A0CC              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A0CC              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A0CC              ;
 379+ A0CC              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A0CC              ;
 381+ A0CC              ;                        10xx ..... Izquierda.
 382+ A0CC              ;                        01xx ..... Derecha.
 383+ A0CC              ;                        00xx ..... Recto.
 384+ A0CC
 385+ A0CC              Rota_disparo_si_procede
 386+ A0CC
 387+ A0CC              ;   Nos situamos en el byte alto de (Control).
 388+ A0CC
 389+ A0CC CB 76            bit 6,(hl)
 390+ A0CE 20 2D            jr nz,Rota_a_derecha
 391+ A0D0 CB 7E            bit 7,(hl)
 392+ A0D2 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A0D3
 394+ A0D3              Rota_a_izq
 395+ A0D3
 396+ A0D3 E5               push hl
 397+ A0D4
 398+ A0D4 7D               ld a,l
 399+ A0D5 D6 05            sub 5
 400+ A0D7 6F               ld l,a
 401+ A0D8
 402+ A0D8 E5               push hl
 403+ A0D9 FD E1            pop iy
 404+ A0DB
 405+ A0DB A7               and a
 406+ A0DC
 407+ A0DC FD CB 02 16      rl (iy+02)
 408+ A0E0 FD CB 01 16      rl (iy+01)
 409+ A0E4 FD CB 00 16      rl (iy+00)
 410+ A0E8
 411+ A0E8 30 3B            jr nc,Exit
 412+ A0EA
 413+ A0EA              ; Desplazamiento completo hasta Carry.
 414+ A0EA              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A0EA
 416+ A0EA FD 36 02 03      ld (iy+02),$03
 417+ A0EE FD 36 01 00      ld (iy+01),$00
 418+ A0F2 FD 36 00 00      ld (iy+00),$00
 419+ A0F6
 420+ A0F6 21 71 8C         ld hl,Ctrl_5
 421+ A0F9 CB DE            set 3,(hl)
 422+ A0FB
 423+ A0FB 18 28            jr Exit
 424+ A0FD
 425+ A0FD              Rota_a_derecha
 426+ A0FD
 427+ A0FD E5               push hl
 428+ A0FE
 429+ A0FE 7D               ld a,l
 430+ A0FF D6 05            sub 5
 431+ A101 6F               ld l,a
 432+ A102
 433+ A102 E5               push hl
 434+ A103 FD E1            pop iy
 435+ A105
 436+ A105 A7               and a
 437+ A106
 438+ A106 FD CB 00 1E      rr (iy+00)
 439+ A10A FD CB 01 1E      rr (iy+01)
 440+ A10E FD CB 02 1E      rr (iy+02)
 441+ A112
 442+ A112 30 11            jr nc,Exit
 443+ A114
 444+ A114              ; Desplazamiento completo hasta Carry.
 445+ A114              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A114
 447+ A114 FD 36 00 01      ld (iy+00),$01
 448+ A118 FD 36 01 80      ld (iy+01),$80
 449+ A11C FD 36 02 00      ld (iy+02),$00
 450+ A120
 451+ A120 21 71 8C         ld hl,Ctrl_5
 452+ A123 CB D6            set 2,(hl)
 453+ A125
 454+ A125 E1           Exit pop hl
 455+ A126 C9               ret
 456+ A127
 457+ A127              ; ------------ ----------- ------------
 458+ A127              ;
 459+ A127              ;   25/9/24
 460+ A127
 461+ A127              Elimina_disparo_entidad
 462+ A127
 463+ A127 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A12A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A12B
 466+ A12B E1               pop hl
 467+ A12C E5               push hl
 468+ A12D
 469+ A12D 2C               inc l
 470+ A12E 2C               inc l
 471+ A12F
 472+ A12F CD 37 A1         call Borra_6_bytes
 473+ A132
 474+ A132 D1               pop de
 475+ A133
 476+ A133 21 00 00         ld hl,0
 477+ A136
 478+ A136 C9               ret
 479+ A137
 480+ A137              ; ----- ----- ----- ----- -----
 481+ A137
 482+ A137              Borra_6_bytes
 483+ A137
 484+ A137 16 06            ld d,6                                                    ; Contador
 485+ A139 AF               xor a                                                     ; Borrador
 486+ A13A 77           1 ld (hl),a
 487+ A13B 2D               dec l
 488+ A13C 15               dec d
 489+ A13D 20 FB            jr nz,1B
 490+ A13F
 491+ A13F C9               ret
 492+ A140
 493+ A140              ; --------------------------------------------------------------------------------------
 494+ A140              ;
 495+ A140              ;   12/10/24
 496+ A140              ;
 497+ A140
 498+ A140              Genera_datos_de_impresion_disparos_Entidades
 499+ A140
 500+ A140 3E 07            ld a,7
 501+ A142 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A143
 503+ A143              ; ---------------
 504+ A143
 505+ A143              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A143
 507+ A143 21 20 89          ld hl,Indice_de_disparos_entidades
 508+ A146
 509+ A146 CD 50 91     1 call Extrae_address
 510+ A149
 511+ A149 13               inc de
 512+ A14A 13               inc de
 513+ A14B
 514+ A14B ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A14F
 516+ A14F 2D               dec l
 517+ A150 7E               ld a,(hl)
 518+ A151 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A152 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A154
 521+ A154              ; ----- ----- ----- -----
 522+ A154
 523+ A154 2D               dec l
 524+ A155 CD 50 91         call Extrae_address
 525+ A158 E5               push hl
 526+ A159
 527+ A159 1D               dec e
 528+ A15A
 529+ A15A EB               ex de,hl
 530+ A15B
 531+ A15B 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A15C 2D               dec l
 533+ A15D 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A15E 2D               dec l
 535+ A15F 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A160
 537+ A160 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A161
 539+ A161              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A161
 541+ A161 FD 2A 5B 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A165 FD 73 00         ld (iy+0),e
 543+ A168 FD 70 01         ld (iy+1),b
 544+ A16B FD 71 02         ld (iy+2),c
 545+ A16E
 546+ A16E FD 75 03         ld (iy+3),l
 547+ A171 FD 74 04         ld (iy+4),h
 548+ A174
 549+ A174 CD 5D 9A         call NextScan
 550+ A177
 551+ A177 FD 75 05         ld (iy+5),l
 552+ A17A FD 74 06         ld (iy+6),h
 553+ A17D
 554+ A17D FD E5            push iy
 555+ A17F E1               pop hl
 556+ A180
 557+ A180 3E 07            ld a,7
 558+ A182 85               add l
 559+ A183 6F               ld l,a
 560+ A184
 561+ A184 22 5B 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A187
 563+ A187              ; ----- ----- ----- -----
 564+ A187
 565+ A187              Situa_en_siguiente_caja
 566+ A187
 567+ A187 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A188 3D               dec a
 569+ A189 C8               ret z
 570+ A18A
 571+ A18A 08               ex af,af
 572+ A18B 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A18E 18 B6            jr 1B
 574+ A190
 575+ A190              ; --------------------------------------------------------------------------------------
 576+ A190              ;
 577+ A190              ;   12/10/24
 578+ A190              ;
 579+ A190
 580+ A190              Genera_disparo_de_entidad_maldosa
 581+ A190
 582+ A190              ;   Estructura de un disparo de entidades.
 583+ A190
 584+ A190              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A190              ; 	defw 0											; Puntero de impresión.
 586+ A190              ;	defw 0											; Control.
 587+ A190
 588+ A190              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A190              ;   _de la entidad en el momento de disparar.
 590+ A190
 591+ A190              ;   El byte de control muestra la siguiente información:
 592+ A190
 593+ A190              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A190              ;
 595+ A190              ;                        10xx ..... Izquierda.
 596+ A190              ;                        01xx ..... Derecha.
 597+ A190              ;                        00xx ..... Recto.
 598+ A190
 599+ A190              ;*  Exclusiones.
 600+ A190
 601+ A190              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A190              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A190
 604+ A190 3A 5F 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A193 A7               and a
 606+ A194 C8               ret z
 607+ A195
 608+ A195 3A FA 8B         ld a,(Coordenada_y)
 609+ A198 A7               and a
 610+ A199 C8               ret z
 611+ A19A
 612+ A19A 3D               dec a
 613+ A19B C8               ret z
 614+ A19C
 615+ A19C FE 10            cp 16
 616+ A19E D0               ret nc
 617+ A19F
 618+ A19F              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A19F              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A19F              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A19F
 622+ A19F 21 61 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A1A2 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A1A3
 625+ A1A3              ;   Decrementa el numero de disparos de entidades.
 626+ A1A3
 627+ A1A3 21 5F 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A1A6 35               dec (hl)
 629+ A1A7
 630+ A1A7 21 20 89         ld hl,Indice_de_disparos_entidades
 631+ A1AA
 632+ A1AA CD 50 91     1 call Extrae_address
 633+ A1AD
 634+ A1AD 13               inc de
 635+ A1AE 13               inc de
 636+ A1AF
 637+ A1AF ED 53 72 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A1B3
 639+ A1B3              ;   Comprobamos si la caja está vacía.
 640+ A1B3
 641+ A1B3 2D               dec l
 642+ A1B4 7E               ld a,(hl)
 643+ A1B5 A7               and a
 644+ A1B6 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A1B8 2C               inc l
 646+ A1B9
 647+ A1B9              ;   Caja vacía, vamos a generar un disparo.
 648+ A1B9              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A1B9
 650+ A1B9 CD DA A1         call Genera_byte_inclinacion
 651+ A1BC
 652+ A1BC 7E               ld a,(hl)
 653+ A1BD 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A1BE
 655+ A1BE 2D               dec l
 656+ A1BF
 657+ A1BF CD F6 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A1C2
 659+ A1C2 70               ld (hl),b
 660+ A1C3 2D               dec l
 661+ A1C4 71               ld (hl),c
 662+ A1C5
 663+ A1C5 2D               dec l
 664+ A1C6
 665+ A1C6              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A1C6
 667+ A1C6 FD 7E 02         ld a,(iy+02)
 668+ A1C9 77               ld (hl),a
 669+ A1CA 2D               dec l
 670+ A1CB
 671+ A1CB FD 7E 01         ld a,(iy+01)
 672+ A1CE 77               ld (hl),a
 673+ A1CF 2D               dec l
 674+ A1D0
 675+ A1D0 FD 7E 00         ld a,(iy+00)
 676+ A1D3 77               ld (hl),a
 677+ A1D4
 678+ A1D4 C9               ret
 679+ A1D5
 680+ A1D5              ;   --- --- ---
 681+ A1D5
 682+ A1D5              Situa_en_siguiente_disparo
 683+ A1D5
 684+ A1D5 2A 72 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A1D8 18 D0            jr 1B
 686+ A1DA
 687+ A1DA              ; --------------------------------------------------------------------------------------
 688+ A1DA              ;
 689+ A1DA              ;   09/10/24
 690+ A1DA              ;
 691+ A1DA
 692+ A1DA              Genera_byte_inclinacion
 693+ A1DA
 694+ A1DA              ; Determina tendencia del disparo.
 695+ A1DA
 696+ A1DA 3A AF 89         ld a,(CX_Amadeus)
 697+ A1DD 47               ld b,a
 698+ A1DE 3A F9 8B         ld a,(Coordenada_X)
 699+ A1E1 90               sub b
 700+ A1E2 38 07            jr c,Disparo_a_derecha
 701+ A1E4
 702+ A1E4 FE 06        Disparo_a_izquierda cp 6
 703+ A1E6
 704+ A1E6 D8               ret c
 705+ A1E7 C8               ret z
 706+ A1E8
 707+ A1E8 CB FE            set 7,(hl)
 708+ A1EA C9               ret
 709+ A1EB
 710+ A1EB 47           Disparo_a_derecha ld b,a
 711+ A1EC 3E FF            ld a,$ff
 712+ A1EE 90               sub b
 713+ A1EF
 714+ A1EF FE 05            cp 5
 715+ A1F1
 716+ A1F1 D8               ret c
 717+ A1F2 C8               ret z
 718+ A1F3
 719+ A1F3 CB F6            set 6,(hl)
 720+ A1F5 C9               ret
 721+ A1F6
 722+ A1F6              ; --------------------------------------------------------------------------------------
 723+ A1F6              ;
 724+ A1F6              ;   09/10/24
 725+ A1F6              ;
 726+ A1F6
 727+ A1F6              Modifica_puntero_de_impresion
 728+ A1F6
 729+ A1F6              ;   Puntero de impresión del disparo en BC.
 730+ A1F6
 731+ A1F6 E5               push hl
 732+ A1F7
 733+ A1F7 2A 74 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A1FA CD 5D 9A         call NextScan
 735+ A1FD
 736+ A1FD 4D               ld c,l
 737+ A1FE 44               ld b,h
 738+ A1FF
 739+ A1FF E1               pop hl
 740+ A200
 741+ A200 08               ex af,af
 742+ A201 CB 77            bit 6,a
 743+ A203 28 06            jr z,1F
 744+ A205
 745+ A205 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A209 0C               inc c
 747+ A20A C9               ret
 748+ A20B
 749+ A20B CB 7F        1 bit 7,a
 750+ A20D 28 F6            jr z,2B
 751+ A20F
 752+ A20F FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A213 0D               dec c
 754+ A214
 755+ A214 C9               ret
 756+ A215
 757+ A215              ; --------------------------------------------------------------------------------------
 758+ A215              ;
 759+ A215              ;   28/11/24
 760+ A215              ;
 761+ A215
 762+ A215              Compara_con_coordenadas_de_disparo
 763+ A215
 764+ A215 DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 765+ A218 47               ld b,a
 766+ A219 3A 79 8C         ld a,(Coordenadas_disparo_certero)
 767+ A21C 90               sub b
 768+ A21D
 769+ A21D              ; A = "0" ok
 770+ A21D              ; A = "1" ok
 771+ A21D
 772+ A21D 28 08            jr z,Comprueba_coordenada_X
 773+ A21F 3D               dec a
 774+ A220 28 05            jr z,Comprueba_coordenada_X
 775+ A222
 776+ A222              ; A = "$ff" ok
 777+ A222
 778+ A222 FE FE            cp $fe
 779+ A224 28 01            jr z,Comprueba_coordenada_X
 780+ A226
 781+ A226 C9               ret
 782+ A227
 783+ A227              Comprueba_coordenada_X
 784+ A227
 785+ A227 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 786+ A22A 47               ld b,a
 787+ A22B 21 7A 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A22E 7E               ld a,(hl)
 789+ A22F 90               sub b
 790+ A230
 791+ A230              ; A = "0" ok
 792+ A230              ; A = "1" ok
 793+ A230
 794+ A230 28 09            jr z,Activa_Impacto_en_entidad
 795+ A232 3D               dec a
 796+ A233 28 06            jr z,Activa_Impacto_en_entidad
 797+ A235
 798+ A235              ; A = "2" ok
 799+ A235
 800+ A235 3D               dec a
 801+ A236 28 03            jr z,Activa_Impacto_en_entidad
 802+ A238
 803+ A238              ; A = "$ff"
 804+ A238
 805+ A238 FE FD            cp $fd
 806+ A23A C0               ret nz
 807+ A23B
 808+ A23B              Activa_Impacto_en_entidad
 809+ A23B
 810+ A23B              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A23B
 812+ A23B 3E 02            ld a,2
 813+ A23D DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 814+ A240
 815+ A240              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A240
 817+ A240 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A243
 819+ A243 DD 73 07         ld (ix+7),e
 820+ A246 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 821+ A249
 822+ A249              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 823+ A249
 824+ A249 21 76 8C         ld hl,Impacto2
 825+ A24C CB 9E            res 3,(hl)
 826+ A24E
 827+ A24E C9               ret
 828+ A24F
 829+ A24F              ; --------------------------------------------------------------------------------------
 830+ A24F              ;
 831+ A24F              ;   13/10/24
 832+ A24F              ;
 833+ A24F
 834+ A24F              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 835+ A24F
 836+ A24F              Limpia_album_de_pintado_disparos_Amadeus
 837+ A24F
 838+ A24F 2A 53 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 839+ A252 06 06            ld b,6
 840+ A254 AF               xor a
 841+ A255 77           1 ld (hl),a
 842+ A256 2C               inc l
 843+ A257 10 FC            djnz 1B
 844+ A259
 845+ A259 C9               ret
 846+ A25A
 847+ A25A              ; --------------------------------------------------------------------------------------
 848+ A25A              ;
 849+ A25A              ;   29/09/24
 850+ A25A              ;
 851+ A25A
 852+ A25A              Calcula_bytes_pintado_disparos
 853+ A25A
 854+ A25A 2A 57 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 855+ A25D 45               ld b,l
 856+ A25E 2A 5B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 857+ A261 7D               ld a,l
 858+ A262
 859+ A262 90               sub b
 860+ A263 32 5D 8C         ld (Num_de_bytes_album_de_disparos),a
 861+ A266
 862+ A266 C9               ret
 863+ A267
 864+ A267              ; --------------------------------------------------------------------------------------
 865+ A267              ;
 866+ A267              ;   26/10/24
 867+ A267              ;
 868+ A267              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 869+ A267              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 870+ A267              ;   _disparos que el álbum del FRAME actual).
 871+ A267
 872+ A267              Limpia_album_de_pintado_disparos_entidades
 873+ A267
 874+ A267 21 5E 8C         ld hl,Num_de_bytes_album_de_disparos+1
 875+ A26A 7E               ld a,(hl)
 876+ A26B 2D               dec l
 877+ A26C 46               ld b,(hl)
 878+ A26D 90               sub b
 879+ A26E
 880+ A26E D8               ret c
 881+ A26F C8               ret z
 882+ A270
 883+ A270 F5               push af
 884+ A271 80               add b
 885+ A272 77               ld (hl),a
 886+ A273 F1               pop af
 887+ A274
 888+ A274              ; Clean.
 889+ A274
 890+ A274 47           2 ld b,a
 891+ A275 AF               xor a
 892+ A276 2A 5B 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 893+ A279 77           1 ld (hl),a
 894+ A27A 23               inc hl
 895+ A27B 10 FC            djnz 1B
 896+ A27D
 897+ A27D C9               ret
 898+ A27E
 899+ A27E              ; --------------------------------------------------------------------------------------
 900+ A27E              ;
 901+ A27E              ;   29/09/24
 902+ A27E              ;
 903+ A27E
 904+ A27E              Motor_Disparos_Amadeus
 905+ A27E
 906+ A27E 21 1D 89         ld hl,Disparo_Amad+1
 907+ A281
 908+ A281 34               inc (hl)
 909+ A282 35               dec (hl)
 910+ A283
 911+ A283 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 912+ A284
 913+ A284              ;   Esta caja contiene un disparo.
 914+ A284
 915+ A284 CD 8B A2         call Consulta_Impacto
 916+ A287 CC A4 A2         call z,Mueve_disparo_Amadeus
 917+ A28A
 918+ A28A C9               ret
 919+ A28B
 920+ A28B              ; ----------------------
 921+ A28B              ;
 922+ A28B              ;
 923+ A28B              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 924+ A28B              ;
 925+ A28B              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 926+ A28B
 927+ A28B
 928+ A28B              Consulta_Impacto
 929+ A28B
 930+ A28B              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 931+ A28B              ;   _sea lo más coherente posible.
 932+ A28B
 933+ A28B E5               push hl
 934+ A28C 2B               dec hl
 935+ A28D CD 80 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 936+ A290 E1               pop hl
 937+ A291 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 938+ A292
 939+ A292 C8               ret z
 940+ A293
 941+ A293 3A 76 8C         ld a,(Impacto2)
 942+ A296 CB DF            set 3,a
 943+ A298 32 76 8C         ld (Impacto2),a
 944+ A29B
 945+ A29B E5               push hl
 946+ A29C CD 6D A3         call Genera_coordenadas_de_disparo_Amadeus
 947+ A29F E1               pop hl
 948+ A2A0 CD BD A2         call Elimina_disparo_Amadeus
 949+ A2A3
 950+ A2A3 C9               ret
 951+ A2A4
 952+ A2A4              ; ----------------------
 953+ A2A4              ;
 954+ A2A4              ;
 955+ A2A4              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 956+ A2A4
 957+ A2A4              Mueve_disparo_Amadeus
 958+ A2A4
 959+ A2A4 CD 50 91         call Extrae_address
 960+ A2A7
 961+ A2A7 CD 6C 9A         call PreviousScan
 962+ A2AA CD 6C 9A         call PreviousScan
 963+ A2AD CD 6C 9A         call PreviousScan
 964+ A2B0 CD 6C 9A         call PreviousScan
 965+ A2B3
 966+ A2B3              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 967+ A2B3
 968+ A2B3 7C               ld a,h
 969+ A2B4 D6 40            sub $40
 970+ A2B6 EB               ex de,hl
 971+ A2B7 38 04            jr c,Elimina_disparo_Amadeus
 972+ A2B9
 973+ A2B9               ; Introduce nuevo puntero_de_impresión en la caja.
 974+ A2B9
 975+ A2B9 73               ld (hl),e
 976+ A2BA 23               inc hl
 977+ A2BB 72               ld (hl),d
 978+ A2BC
 979+ A2BC C9               ret
 980+ A2BD
 981+ A2BD              ; ----------------------
 982+ A2BD              ;
 983+ A2BD              ;   29/9/24
 984+ A2BD
 985+ A2BD              Elimina_disparo_Amadeus
 986+ A2BD
 987+ A2BD              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 988+ A2BD              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 989+ A2BD
 990+ A2BD              ;   Disparo_1A defw 0									; Puntero objeto.
 991+ A2BD              ;   	defw 0											; Puntero de impresión.
 992+ A2BD
 993+ A2BD 2B               dec hl
 994+ A2BE 2B               dec hl
 995+ A2BF
 996+ A2BF AF               xor a
 997+ A2C0 77               ld (hl),a
 998+ A2C1 23               inc hl
 999+ A2C2 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1000+ A2C3
1001+ A2C3 23               inc hl
1002+ A2C4 77               ld (hl),a
1003+ A2C5 23               inc hl
1004+ A2C6 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1005+ A2C7
1006+ A2C7 3E 01            ld a,1
1007+ A2C9 32 60 8C         ld (Permiso_de_disparo_Amadeus),a
1008+ A2CC
1009+ A2CC CD 4F A2         call Limpia_album_de_pintado_disparos_Amadeus
1010+ A2CF
1011+ A2CF AF               xor a
1012+ A2D0 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1013+ A2D1
1014+ A2D1 C9               ret
1015+ A2D2
1016+ A2D2              ; --------------------------------------------------------------------------------------
1017+ A2D2              ;
1018+ A2D2              ;   13/10/24
1019+ A2D2              ;
1020+ A2D2
1021+ A2D2              Pinta_disparos_Amadeus
1022+ A2D2
1023+ A2D2 06 02            ld b,2
1024+ A2D4 ED 73 47 8C      ld (Stack),sp
1025+ A2D8 ED 7B 55 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1026+ A2DC D1           3 pop de
1027+ A2DD 14               inc d
1028+ A2DE 15               dec d
1029+ A2DF 28 1C            jr z,1F
1030+ A2E1 E1               pop hl
1031+ A2E2
1032+ A2E2              Imprime_scanlines_en_pantalla
1033+ A2E2
1034+ A2E2              ; 1er scanline
1035+ A2E2
1036+ A2E2 1A               ld a,(de)
1037+ A2E3 AE               xor (hl)
1038+ A2E4 77               ld (hl),a
1039+ A2E5
1040+ A2E5 1C               inc e
1041+ A2E6 2C               inc l
1042+ A2E7
1043+ A2E7 1A               ld a,(de)
1044+ A2E8 AE               xor (hl)
1045+ A2E9 77               ld (hl),a
1046+ A2EA
1047+ A2EA 1D               dec e
1048+ A2EB E1               pop hl
1049+ A2EC
1050+ A2EC              ; 2º scanline
1051+ A2EC
1052+ A2EC 1A               ld a,(de)
1053+ A2ED AE               xor (hl)
1054+ A2EE 77               ld (hl),a
1055+ A2EF
1056+ A2EF 1C               inc e
1057+ A2F0 2C               inc l
1058+ A2F1
1059+ A2F1 1A               ld a,(de)
1060+ A2F2 AE               xor (hl)
1061+ A2F3 77               ld (hl),a
1062+ A2F4
1063+ A2F4 1D               dec e
1064+ A2F5
1065+ A2F5 18 06            jr 1F
1066+ A2F7
1067+ A2F7 ED 7B 53 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1068+ A2FB 18 DF            jr 3B
1069+ A2FD 10 F8        1 djnz 2B
1070+ A2FF ED 7B 47 8C      ld sp,(Stack)
1071+ A303 C9               ret
1072+ A304
1073+ A304              ; --------------------------------------------------------------------------------------
1074+ A304              ;
1075+ A304              ;   13/10/24
1076+ A304              ;
1077+ A304              ;   Modifica: HL,BC y DE.
1078+ A304
1079+ A304
1080+ A304              Genera_datos_de_impresion_disparos_Amadeus
1081+ A304
1082+ A304 ED 73 47 8C      ld (Stack),sp
1083+ A308 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1084+ A30B D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1085+ A30C
1086+ A30C 14               inc d                                                     ;? Salimos si no hay disparo.
1087+ A30D 15               dec d
1088+ A30E
1089+ A30E 28 0E            jr z,Salida
1090+ A310
1091+ A310              Genera_scanlines_de_disparo_Amadeus
1092+ A310
1093+ A310 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1094+ A311              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1095+ A311 ED 7B 53 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1096+ A315
1097+ A315 C1               pop bc
1098+ A316 C1               pop bc
1099+ A317 C1               pop bc
1100+ A318
1101+ A318 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1102+ A319 CD 6C 9A         call PreviousScan
1103+ A31C E5               push hl                                                   ;? Sube 1er scanline al álbum.
1104+ A31D D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1105+ A31E
1106+ A31E              Salida
1107+ A31E
1108+ A31E ED 7B 47 8C      ld sp,(Stack)
1109+ A322
1110+ A322 C9               ret
1111+ A323
1112+ A323              ; --------------------------------------------------------------------------------------
1113+ A323              ;
1114+ A323              ;   12/09/24
1115+ A323              ;
1116+ A323
1117+ A323              Genera_disparo_Amadeus
1118+ A323
1119+ A323              ;*  Exclusiones.
1120+ A323
1121+ A323 3A 60 8C         ld a,(Permiso_de_disparo_Amadeus)
1122+ A326 A7               and a
1123+ A327 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1124+ A328
1125+ A328 3D               dec a
1126+ A329 32 60 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1127+ A32C
1128+ A32C              Define_puntero_objeto_disparo
1129+ A32C
1130+ A32C              ;   Inicializamos contador.
1131+ A32C
1132+ A32C 06 00            ld b,0
1133+ A32E
1134+ A32E 2A B3 89         ld hl,(p.imp.amadeus)
1135+ A331 2C               inc l
1136+ A332
1137+ A332 3E 80            ld a,$80
1138+ A334 BE               cp (hl)
1139+ A335 28 0D            jr z,1F
1140+ A337
1141+ A337 04               inc b
1142+ A338
1143+ A338 3E 60            ld a,$60
1144+ A33A BE               cp (hl)
1145+ A33B 28 07            jr z,1F
1146+ A33D
1147+ A33D
1148+ A33D 04               inc b
1149+ A33E
1150+ A33E 3E 18            ld a,$18
1151+ A340 BE               cp (hl)
1152+ A341 28 01            jr z,1F
1153+ A343
1154+ A343 04               inc b
1155+ A344
1156+ A344              ;   Calcula el Puntero_de_impresión del disparo.
1157+ A344
1158+ A344              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1159+ A344
1160+ A344 CD 6C 9A     1 call PreviousScan
1161+ A347
1162+ A347 78               ld a,b
1163+ A348 CB 3F            srl a
1164+ A34A 28 03            jr z,4F
1165+ A34C
1166+ A34C              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1167+ A34C E5               push hl
1168+ A34D 18 02            jr 5F
1169+ A34F 2D           4 dec l
1170+ A350 E5               push hl
1171+ A351              ; ---
1172+ A351
1173+ A351              ;   Calcula el Puntero_objeto del disparo.
1174+ A351
1175+ A351 21 76 83     5 ld hl,Indice_disparo_Amadeus
1176+ A354 04               inc b
1177+ A355 05               dec b
1178+ A356 28 04            jr z,2F
1179+ A358
1180+ A358              ;   Nos desplazamos por el índice de disparos.
1181+ A358
1182+ A358 2C           3 inc l
1183+ A359 2C               inc l
1184+ A35A 10 FC            djnz 3B
1185+ A35C
1186+ A35C              ; --- Guarda el Puntero_objeto del disparo en la pila.
1187+ A35C CD 50 91     2 call Extrae_address
1188+ A35F E5               push hl
1189+ A360              ; ---
1190+ A360
1191+ A360              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1192+ A360              ; HL en el 1er .db de la caja.
1193+ A360
1194+ A360 21 1C 89         ld hl,Disparo_Amad
1195+ A363
1196+ A363 06 02            ld b,2
1197+ A365
1198+ A365 D1           6 pop de
1199+ A366 73               ld (hl),e
1200+ A367 23               inc hl
1201+ A368 72               ld (hl),d
1202+ A369 23               inc hl
1203+ A36A
1204+ A36A 10 F9            djnz 6B
1205+ A36C
1206+ A36C C9               ret
1207+ A36D
1208+ A36D              Genera_coordenadas_de_disparo_Amadeus
1209+ A36D
1210+ A36D              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1211+ A36D              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1212+ A36D              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1213+ A36D
1214+ A36D CD 50 91         call Extrae_address
1215+ A370 CD 68 95         call Genera_coordenadas
1216+ A373
1217+ A373 3D               dec a
1218+ A374
1219+ A374 21 79 8C         ld hl,Coordenadas_disparo_certero
1220+ A377 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1221+ A378 23               inc hl
1222+ A379 3A F9 8B         ld a,(Coordenada_X)
1223+ A37C 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1224+ A37D
1225+ A37D AF               xor a
1226+ A37E 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1227+ A37F
1228+ A37F C9               ret
1229+ A380
1230+ A380              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1231+ A380              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1232+ A380              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A380
1234+ A380              ; ----------------------------------------------
1235+ A380              ;
1236+ A380              ;   27/08/24
1237+ A380              ;
1238+ A380              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1239+ A380              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1240+ A380
1241+ A380              Detecta_impacto_en_disparo_de_Amadeus
1242+ A380
1243+ A380              Extraccion_de_datos
1244+ A380
1245+ A380 13               inc de
1246+ A381 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1247+ A382
1248+ A382 5E               ld e,(hl)
1249+ A383 23               inc hl
1250+ A384 56               ld d,(hl)
1251+ A385
1252+ A385 23               inc hl
1253+ A386
1254+ A386 4E               ld c,(hl)
1255+ A387 23               inc hl
1256+ A388 46               ld b,(hl)
1257+ A389
1258+ A389 C5               push bc
1259+ A38A E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1260+ A38B
1261+ A38B              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1262+ A38B
1263+ A38B CD 6C 9A         call PreviousScan
1264+ A38E CD 6C 9A         call PreviousScan
1265+ A391
1266+ A391              Detecta_impacto_
1267+ A391
1268+ A391 1A               ld a,(de)
1269+ A392 A6               and (hl)
1270+ A393 C0               ret nz
1271+ A394
1272+ A394 13               inc de
1273+ A395 23               inc hl
1274+ A396
1275+ A396 1A               ld a,(de)
1276+ A397 A6               and (hl)
1277+ A398 C9               ret
1278+ A399
1279+ A399              ; -------------------------------------------------------------------------------------------------------------
1280+ A399              ;
1281+ A399              ;   25/11//24
1282+ A399              ;
1283+ A399              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1284+ A399              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1285+ A399              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1286+ A399              ;
1287+ A399              ;   MODIFICA: HL,DE,BC y A.
1288+ A399              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1289+ A399              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1290+ A399
1291+ A399              Colision_Entidad_Amadeus
1292+ A399
1293+ A399              ; Posible contacto de entidad con Amadeus. ?????
1294+ A399
1295+ A399              ; Exclusiones:
1296+ A399
1297+ A399 3A 99 8C         ld a,(Shield)
1298+ A39C A7               and a
1299+ A39D C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1300+ A39E
1301+ A39E 21 6F 8C         ld hl,Ctrl_3
1302+ A3A1 CB 76            bit 6,(hl)
1303+ A3A3 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1304+ A3A4
1305+ A3A4 21 76 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1306+ A3A7 CB 56            bit 2,(hl)
1307+ A3A9 C0               ret nz
1308+ A3AA
1309+ A3AA DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1310+ A3AD FE 14        	cp $14
1311+ A3AF D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1312+ A3B0
1313+ A3B0 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1314+ A3B3 A7               and a
1315+ A3B4 C0               ret nz
1316+ A3B5
1317+ A3B5              Genera_coordenadas_X
1318+ A3B5
1319+ A3B5              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1320+ A3B5              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1321+ A3B5
1322+ A3B5              ;   Limpiamos almacenes.
1323+ A3B5
1324+ A3B5              ;    call Limpia_Coordenadas_X
1325+ A3B5
1326+ A3B5              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1327+ A3B5
1328+ A3B5 21 7B 8C         ld hl,Coordenadas_X_Entidad
1329+ A3B8 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1330+ A3BB CD E1 A3         call Guarda_coordenadas_X
1331+ A3BE
1332+ A3BE              ;   Almacenamos las coordenadas X de Amadeus.
1333+ A3BE
1334+ A3BE 3A AF 89         ld a,(CX_Amadeus)
1335+ A3C1 CD E1 A3         call Guarda_coordenadas_X
1336+ A3C4
1337+ A3C4 DD E5            push ix
1338+ A3C6 CD F5 A3         call Compara_coordenadas_X
1339+ A3C9 DD E1            pop ix
1340+ A3CB
1341+ A3CB C0               ret nz
1342+ A3CC
1343+ A3CC 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1344+ A3CE DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1345+ A3D1
1346+ A3D1 DD 7D            ld a,ixl
1347+ A3D3 C6 04            add 4
1348+ A3D5 DD 6F            ld ixl,a
1349+ A3D7
1350+ A3D7 DD 22 77 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1351+ A3DB
1352+ A3DB 21 76 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1353+ A3DE CB D6            set 2,(hl)
1354+ A3E0
1355+ A3E0 C9               ret
1356+ A3E1
1357+ A3E1               ; ----- ----- ----- ----- -----
1358+ A3E1
1359+ A3E1 77           Guarda_coordenadas_X ld (hl),a
1360+ A3E2 3C               inc a
1361+ A3E3 2C               inc l
1362+ A3E4 77               ld (hl),a
1363+ A3E5 3C               inc a
1364+ A3E6 2C               inc l
1365+ A3E7 77               ld (hl),a
1366+ A3E8 2C               inc l
1367+ A3E9 C9               ret
1368+ A3EA
1369+ A3EA AF           Limpia_Coordenadas_X xor a
1370+ A3EB 06 06            ld b,6
1371+ A3ED 21 7E 8C         ld hl,Coordenadas_X_Amadeus
1372+ A3F0 77           1 ld (hl),a
1373+ A3F1 23               inc hl
1374+ A3F2 10 FC            djnz 1B
1375+ A3F4 C9               ret
1376+ A3F5
1377+ A3F5              ; ----- ----- ----- ----- -----
1378+ A3F5
1379+ A3F5              Compara_coordenadas_X
1380+ A3F5
1381+ A3F5 DD 21 7B 8C      ld ix,Coordenadas_X_Entidad
1382+ A3F9 DD 7E 00         ld a,(ix+0)
1383+ A3FC CD 0A A4         call Comparando
1384+ A3FF C8               ret z
1385+ A400
1386+ A400 3C               inc a
1387+ A401 CD 19 A4         call Comparando_1
1388+ A404 C8               ret z
1389+ A405
1390+ A405 3C               inc a
1391+ A406 CD 19 A4         call Comparando_1
1392+ A409 C9               ret
1393+ A40A
1394+ A40A              ; ----- ----- ----- ----- -----
1395+ A40A              ;
1396+ A40A              ;   4/12/23
1397+ A40A              ;
1398+ A40A              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1399+ A40A
1400+ A40A              Comparando
1401+ A40A
1402+ A40A DD 2C            inc ixl
1403+ A40C DD 2C            inc ixl
1404+ A40E DD 2C            inc ixl
1405+ A410
1406+ A410 DD 46 00         ld b,(ix+0)
1407+ A413 DD 4E 01         ld c,(ix+1)
1408+ A416 DD 56 02         ld d,(ix+2)
1409+ A419
1410+ A419 B8           Comparando_1 cp b
1411+ A41A C8               ret z
1412+ A41B B9               cp c
1413+ A41C C8               ret z
1414+ A41D BA               cp d
1415+ A41E C9               ret
1416+ A41F
1417+ A41F              ; -----------------------------------------------------------------------
1418+ A41F              ;
1419+ A41F              ;   04/7/24
1420+ A41F              ;
1421+ A41F
1422+ A41F              Detecta_colision_nave_entidad
1423+ A41F
1424+ A41F              ; Exclusiones:
1425+ A41F
1426+ A41F              ; Salimos de la rutina si no hay advertencia de posible colisión.
1427+ A41F
1428+ A41F 21 76 8C     	ld hl,Impacto2
1429+ A422 CB 56        	bit 2,(hl)
1430+ A424 C8           	ret z
1431+ A425
1432+ A425              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1433+ A425
1434+ A425 2A B5 89         ld hl,(Pamm_Amadeus)
1435+ A428 CD 50 91         call Extrae_address
1436+ A42B 54               ld d,h
1437+ A42C 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1438+ A42D
1439+ A42D 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1440+ A430 06 10            ld b,16                                        ; Contador de scanlines en B.
1441+ A432 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1442+ A435
1443+ A435 C5           1 push bc
1444+ A436 06 03            ld b,3
1445+ A438 E5               push hl
1446+ A439
1447+ A439              ; .db
1448+ A439
1449+ A439 1A           3 ld a,(de)
1450+ A43A A7               and a
1451+ A43B 20 03            jr nz,4F
1452+ A43D
1453+ A43D 2C               inc l
1454+ A43E 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1455+ A440
1456+ A440 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1457+ A442 28 04            jr z,2F
1458+ A444
1459+ A444              ; Impacto.
1460+ A444 FD 2D            dec iyl
1461+ A446 28 22            jr z,5F
1462+ A448
1463+ A448 1C           2 inc e
1464+ A449 10 EE            djnz 3B
1465+ A44B
1466+ A44B E1               pop hl
1467+ A44C
1468+ A44C              ; Hay salto de línea en el puntero de impresión ???
1469+ A44C
1470+ A44C 7C               ld a,h
1471+ A44D D6 57            sub $57
1472+ A44F 20 0A            jr nz,6F
1473+ A451
1474+ A451              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1475+ A451
1476+ A451 2A B3 89         ld hl,(p.imp.amadeus)
1477+ A454 3E 20            ld a,$20
1478+ A456 A7               and a
1479+ A457 85               add l
1480+ A458 6F               ld l,a
1481+ A459 18 01            jr 7F
1482+ A45B
1483+ A45B 24           6 inc h
1484+ A45C
1485+ A45C C1           7 pop bc
1486+ A45D 10 D6            djnz 1B
1487+ A45F
1488+ A45F              ;   Fin de la comparativa.
1489+ A45F
1490+ A45F              ;   NO HAY COLISIÓN !!!!!.
1491+ A45F              ;
1492+ A45F              ;   .db (Impacto) de Amadeus a "0".
1493+ A45F              ;   RES el bit2 de (Impacto2).
1494+ A45F              ;
1495+ A45F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1496+ A45F              ;   Lo colocamos a "0".
1497+ A45F
1498+ A45F 21 76 8C         ld hl,Impacto2
1499+ A462 CB 96            res 2,(hl)
1500+ A464 2A 77 8C         ld hl,(Entidad_sospechosa_de_colision)
1501+ A467 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1502+ A469 C9               ret
1503+ A46A
1504+ A46A              ;   COLISIÓN !!!!!.
1505+ A46A              ;
1506+ A46A              ;   .db (Impacto) de Amadeus a "1".
1507+ A46A              ;   SET el bit3 de (Impacto2).
1508+ A46A              ;
1509+ A46A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1510+ A46A
1511+ A46A E1           5 pop hl
1512+ A46B C1               pop bc
1513+ A46C
1514+ A46C 21 B2 89         ld hl,Impacto_Amadeus
1515+ A46F 36 01            ld (hl),1
1516+ A471 21 76 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1517+ A474 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1518+ A476
1519+ A476 11 C0 87         ld de,Indice_Explosion_entidades
1520+ A479 2A 77 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1521+ A47C
1522+ A47C 23               inc hl
1523+ A47D 23               inc hl
1524+ A47E 23               inc hl
1525+ A47F
1526+ A47F 73               ld (hl),e
1527+ A480 23               inc hl
1528+ A481 72               ld (hl),d
1529+ A482
1530+ A482              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1531+ A482
1532+ A482 11 60 88         ld de,Indice_Explosion_Amadeus
1533+ A485 21 B5 89         ld hl,Pamm_Amadeus
1534+ A488
1535+ A488 73               ld (hl),e
1536+ A489 23               inc hl
1537+ A48A 72               ld (hl),d
1538+ A48B
1539+ A48B C9               ret
1540+ A48C
1541+ A48C
1542+ A48C
# file closed: Disparo.asm
2219  A48C
2220  A48C              	SAVESNA "Pruebas.sna", START
2221  A48C
2222  A48C
2223  A48C
2224  A48C
# file closed: Banco_de_pruebas.asm
