# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 55 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC 5E 48        	defw $485e                                      ; (Posicion_inicio).
 203+ 84FE 02           	db 2											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 14 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 1A 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 18 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 28 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 167  85D7              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 168  85D7
 169  85D7              ; Gestión de ENTIDADES.
 170  85D7
 171  85D7 00 00        Puntero_store_entidades defw 0
 172  85D9 00 00        Puntero_restore_entidades defw 0
 173  85DB 00 00        Indice_restore defw 0
 174  85DD 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 175  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 176  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 177  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 178  85DF              ;														; _ (Numero_de_malotes)="0".
 179  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 180  85E1              ;														; _variable para almacenar lo posición del puntero_
 181  85E1              ; 														; _de pila, SP.
 182  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 183  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 184  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 185  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 186  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 187  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 189  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 190  85E7
 191  85E7              ;---------------------------------------------------------------------------------------------------------------
 192  85E7
 193  85E7              ; Gestión de Disparos.
 194  85E7
 195  85E7 00           Numero_de_disparotes db 0
 196  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 202  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 203  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 204  85EF              ;														; _produzca colisión.
 205  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 206  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 207  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 208  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 209  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 210  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 211  85F7
 212  85F7              ;---------------------------------------------------------------------------------------------------------------
 213  85F7
 214  85F7              ; Relojes y temporizaciones.
 215  85F7
 216  85F7 01           Habilita_disparo_Amadeus db 1
 217  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 218  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 219  85FA
 220  85FA 01           Habilita_disparo_entidad db 1
 221  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 222  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 223  85FD
 224  85FD              ;---------------------------------------------------------------------------------------------------------------
 225  85FD
 226  85FD              ; Gestión de FRAMES.
 227  85FD
 228  85FD 00           Switch db 0
 229  85FE
 230  85FE              ; Variables de Raster y localización en pantalla.
 231  85FE
 232  85FE 00 FF        Temp_Raster defw $ff00
 233  8600
 234  8600              ; Rutina principal *************************************************************************************************************************************************************************
 235  8600              ;
 236  8600              ;	14/11/22
 237  8600
 238  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 239  8603
 240  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 241  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 242  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 243  8609 F3           	DI
 244  860A
 245  860A 3E 07        	ld a,%00000111
 246  860C CD 3C 93     	call Cls
 247  860F
 248  860F              ;	call Pinta_FILAS
 249  860F
 250  860F CD EC 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 251  8612
 252  8612 21 DD 85     	ld hl,Numero_de_entidades
 253  8615 46           	ld b,(hl)
 254  8616 04           	inc b
 255  8617 05           	dec b
 256  8618 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 257  861A
 258  861A CD C3 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 259  861D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 260  861D
 261  861D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 262  861D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 263  861D              ;	Pintamos el resto de entidades:
 264  861D
 265  861D              ;	INICIA ENTIDADES !!!!!
 266  861D
 267  861D C5           1 push bc  												; Guardo el contador de entidades.
 268  861E CD 1D 88      	call Inicia_Puntero_objeto
 269  8621 CD 8C 8D     	call Draw
 270  8624 CD A0 7F     	call Guarda_foto_registros
 271  8627 CD 65 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 272  862A C1           	pop bc
 273  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 274  862D
 275  862D              ; 	INICIA AMADEUS !!!!!
 276  862D
 277  862D CD C3 88     3 call Restore_Amadeus
 278  8630 CD 1D 88     	call Inicia_Puntero_objeto
 279  8633 CD 8C 8D     	call Draw
 280  8636 CD A0 7F     	call Guarda_foto_registros
 281  8639
 282  8639 11 74 84     	ld de,Amadeus_db
 283  863C CD D5 88     	call Store_Amadeus
 284  863F
 285  863F              ; 	INICIA DISPAROS !!!!!
 286  863F
 287  863F CD D9 87     	call Inicia_Puntero_Disparo_Entidades
 288  8642 CD E0 87     	call Inicia_Puntero_Disparo_Amadeus
 289  8645
 290  8645              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 291  8645
 292  8645 CD C3 87     	call Inicia_punteros_de_entidades
 293  8648 CD B1 88     	call Restore_Primera_entidad
 294  864B
 295  864B 3A DD 85     	ld a,(Numero_de_entidades)
 296  864E 3C           	inc a
 297  864F 32 DE 85     	ld (Numero_de_malotes),a
 298  8652
 299  8652 FB           2 ei
 300  8653 18 FD        	jr 2B
 301  8655
 302  8655              ; -----------------------------------------------------------------------------------
 303  8655
 304  8655              Frame
 305  8655
 306  8655              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 307  8655              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 308  8655
 309  8655              ; PINTAMOS.
 310  8655
 311  8655 3E 02            ld a,2
 312  8657 D3 FE            out ($fe),a
 313  8659 CD 90 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 314  865C CD C9 90     	call Extrae_foto_disparos
 315  865F 3E 01            ld a,1
 316  8661 D3 FE            out ($fe),a
 317  8663
 318  8663              ; ----------------------------------------------------------------------
 319  8663
 320  8663              ; RELOJES.
 321  8663
 322  8663 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 323  8666 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 324  8669 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 325  866C
 326  866C 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 327  866F 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 328  8672 CD D5 7F     	call Habilita_disparos
 329  8675
 330  8675              ; COLISIONES.
 331  8675
 332  8675 CD 2E 8D     	call Selector_de_impactos
 333  8678
 334  8678              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 335  8678              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 336  8678              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 337  8678
 338  8678 AF           	xor a
 339  8679 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 340  867C
 341  867C CD C3 87     	call Inicia_punteros_de_entidades
 342  867F CD B1 88     	call Restore_Primera_entidad
 343  8682
 344  8682 3A 9B 85     	ld a,(Filas)
 345  8685 A7           	and a
 346  8686 20 03        	jr nz,10F 											; Si la 1ª entidad está vacía, saltamos a la siguiente.
 347  8688
 348  8688 CD 65 88     	call Store_Restore_entidades
 349  868B
 350  868B              ; ---------------------------------------------------------------------------------------
 351  868B
 352  868B CD AE 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 353  868E 21 00 70     	ld hl,Album_de_fotos
 354  8691 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 355  8694              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 356  8694 3A DD 85     	ld a,(Numero_de_entidades)
 357  8697 47               ld b,a
 358  8698 A7           	and a
 359  8699 28 5D        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 360  869B
 361  869B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 362  869B
 363  869B              ; Código que ejecutamos con cada entidad:
 364  869B
 365  869B              ; Impacto ???
 366  869B
 367  869B 3A B4 85     2 ld a,(Impacto)
 368  869E A7           	and a
 369  869F 28 15        	jr z,8F
 370  86A1
 371  86A1              ; Hay Impacto en esta entidad.
 372  86A1
 373  86A1 C5           	push bc
 374  86A2 CD 7A 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 375  86A5 CD DE 88     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 376  86A8 2A D7 85     	ld hl,(Puntero_store_entidades)
 377  86AB 54           	ld d,h
 378  86AC 5D           	ld e,l
 379  86AD CD D5 88     	call Store_Amadeus									; Limpiamos `su base de datos´.
 380  86B0 21 DD 85     	ld hl,Numero_de_entidades							; Una alimaña menos.
 381  86B3 35           	dec (hl)
 382  86B4 18 3C        	jr 6F
 383  86B6
 384  86B6              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 385  86B6              ; _con las coordenadas de la entidad almacenada en DRAW.
 386  86B6
 387  86B6 3A D6 85     8 ld a,(Ctrl_1)
 388  86B9 CB 57        	bit 2,a
 389  86BB 28 1B        	jr z,7F
 390  86BD
 391  86BD 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 392  86C0 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 393  86C1              ;														; E contiene la coordenada_X del disparo.
 394  86C1 2A A1 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 395  86C4              ;														; H Coordenado_y de la entidad.
 396  86C4 A7           	and a
 397  86C5 ED 52        	sbc hl,de
 398  86C7 CD 65 8D     	call Determina_resultado_comparativa
 399  86CA 04           	inc b
 400  86CB 05           	dec b
 401  86CC 28 0A        	jr z,7F
 402  86CE
 403  86CE              ; ----- ----- -----
 404  86CE
 405  86CE 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 406  86D0 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 407  86D3 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 408  86D6 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 409  86D8
 410  86D8 C5           7 push bc
 411  86D9
 412  86D9 CD 2B 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 413  86DC
 414  86DC 3A C9 85     	ld a,(Ctrl_0)
 415  86DF CB 67        	bit 4,a
 416  86E1 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 417  86E3
 418  86E3              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 419  86E3              ; [[[
 420  86E3 CD 37 89     	call Detecta_disparo_entidad
 421  86E6              ; ]]]
 422  86E6 CD 8A 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 423  86E9
 424  86E9 21 C9 85     	ld hl,Ctrl_0
 425  86EC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 426  86EE AF           	xor a
 427  86EF 32 CA 85     	ld (Obj_dibujado),a
 428  86F2
 429  86F2 CD 65 88     6 call Store_Restore_entidades
 430  86F5 C1           	pop bc
 431  86F6 10 A3        	djnz 2B
 432  86F8
 433  86F8              ; Tras la gestión de las entidades, ... AMADEUS.
 434  86F8
 435  86F8 CD C3 88     4 call Restore_Amadeus
 436  86FB
 437  86FB 3A B4 85     	ld a,(Impacto)
 438  86FE A7           	and a
 439  86FF 20 FE        	jr nz,$
 440  8701
 441  8701              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 442  8701
 443  8701 CD 5B 87     	call Mov_Amadeus
 444  8704
 445  8704 3A C9 85     	ld a,(Ctrl_0)
 446  8707 CB 67        	bit 4,a
 447  8709 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 448  870B
 449  870B CD 8A 87     	call Guarda_foto_entidad_a_pintar
 450  870E
 451  870E 21 C9 85     3 ld hl,Ctrl_0
 452  8711 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 453  8713 AF           	xor a
 454  8714 32 CA 85     	ld (Obj_dibujado),a
 455  8717
 456  8717 11 74 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 457  871A CD D5 88     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 458  871D
 459  871D CD CC 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 460  8720
 461  8720              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 462  8720
 463  8720 CD FF 87     	call Calcula_numero_de_disparotes
 464  8723 CD E7 87     9 call Calcula_numero_de_malotes
 465  8726
 466  8726 3E 04        	ld a,4
 467  8728 D3 FE        	out ($fe),a
 468  872A
 469  872A C9           	ret
 470  872B
 471  872B              ; --------------------------------------------------------------------------------------------------------------
 472  872B              ;
 473  872B              ;	27/03/23
 474  872B
 475  872B              Mov_obj
 476  872B
 477  872B              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 478  872B
 479  872B AF           	xor a
 480  872C 32 CA 85     	ld (Obj_dibujado),a
 481  872F 32 C9 85     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 482  8732              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 483  8732              ; 														; _de la entidad.
 484  8732 CD 94 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 485  8735              ;														; Obj_dibujado="0".
 486  8735              ; Movemos Entidades malignas.
 487  8735
 488  8735 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 489  8738 24           	inc h                                               ; Salimos de la rutina.
 490  8739 25           	dec h
 491  873A C8           	ret z
 492  873B
 493  873B CD 2A 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 494  873E
 495  873E 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 496  8741 CB 67        	bit 4,a
 497  8743 C8           	ret z
 498  8744
 499  8744              ; Ha habido desplazamiento de la entidad maligna.
 500  8744              ; Ha llegado a zona de AMADEUS ???
 501  8744
 502  8744 3A A2 85     	ld a,(Coordenada_y)
 503  8747 FE 14        	cp $14
 504  8749 D4 FD 8A     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 505  874C              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 506  874C              ; ---------
 507  874C
 508  874C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 509  874E 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 510  8751 CD 94 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 511  8754 CD AB 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 512  8757 CD 7A 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 513  875A C9           	ret													; _de la misma.
 514  875B
 515  875B              ; --------------------------------------------------------------------------------------------------------------
 516  875B              ;
 517  875B              ;	29/1/23
 518  875B
 519  875B              Mov_Amadeus
 520  875B
 521  875B AF           	xor a
 522  875C 32 CA 85     	ld (Obj_dibujado),a
 523  875F CD 94 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 524  8762              ;														; Obj_dibujado="0".
 525  8762              ; Movemos Amadeus.
 526  8762
 527  8762 CD 00 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 528  8765 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 529  8768 CB 67        	bit 4,a
 530  876A C8           	ret z
 531  876B
 532  876B              ; ---------
 533  876B
 534  876B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 535  876D 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 536  8770 CD 94 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 537  8773 CD AB 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 538  8776 CD 7A 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 539  8779 C9           	ret													; _de la nave.
 540  877A
 541  877A              ; --------------------------------------------------------------------------------------------------------------
 542  877A              ;
 543  877A              ;	31/01/23
 544  877A              ;
 545  877A              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 546  877A
 547  877A              Guarda_foto_entidad_a_borrar
 548  877A
 549  877A CD 66 90     	call Prepara_draw
 550  877D CD A0 8F     	call calcula_CColumnass
 551  8780 CD D7 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 552  8783 CD 2C 90     	call Define_rutina_de_impresion
 553  8786 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 554  8789 C9           	ret
 555  878A
 556  878A              ; --------------------------------------------------------------------------------------------------------------
 557  878A              ;
 558  878A              ;	31/01/23
 559  878A              ;
 560  878A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 561  878A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 562  878A
 563  878A              Guarda_foto_entidad_a_pintar
 564  878A
 565  878A CD B7 87     	call Repone_pintar
 566  878D CD 8C 8D     	call Draw
 567  8790 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 568  8793 C9           	ret
 569  8794
 570  8794              ; --------------------------------------------------------------------------------------------------------------
 571  8794              ;
 572  8794              ;
 573  8794
 574  8794 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 575  8797 3A CA 85     	ld a,(Obj_dibujado)
 576  879A A7           	and a
 577  879B 28 05        	jr z,1F
 578  879D 11 BF 85     	ld de,Variables_de_pintado
 579  87A0 18 03        	jr 2F
 580  87A2 11 B5 85     1 ld de,Variables_de_borrado
 581  87A5 01 08 00     2 ld bc,8
 582  87A8 ED B0        	ldir
 583  87AA C9           	ret
 584  87AB
 585  87AB              ; --------------------------------------------------------------------------------------------------------------
 586  87AB
 587  87AB 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 588  87AE 11 9B 85     	ld de,Filas
 589  87B1 01 08 00     	ld bc,8
 590  87B4 ED B0        	ldir
 591  87B6 C9           	ret
 592  87B7
 593  87B7 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 594  87BA 11 9B 85     	ld de,Filas
 595  87BD 01 08 00     	ld bc,8
 596  87C0 ED B0        	ldir
 597  87C2 C9           	ret
 598  87C3
 599  87C3              ; *************************************************************************************************************************************************************
 600  87C3              ;
 601  87C3              ; 8/1/23
 602  87C3              ;
 603  87C3              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 604  87C3              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 605  87C3              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 606  87C3
 607  87C3              ; Destruye HL y DE !!!!!
 608  87C3
 609  87C3              Inicia_punteros_de_entidades
 610  87C3
 611  87C3 21 68 84     	ld hl,Indice_de_entidades
 612  87C6 CD 17 88         call Extrae_address
 613  87C9 22 D7 85         ld (Puntero_store_entidades),hl
 614  87CC 21 6A 84     	ld hl,Indice_de_entidades+2
 615  87CF 22 DB 85     	ld (Indice_restore),hl
 616  87D2 CD 17 88     	call Extrae_address
 617  87D5 22 D9 85     	ld (Puntero_restore_entidades),hl
 618  87D8 C9               ret
 619  87D9
 620  87D9              ; *************************************************************************************************************************************************************
 621  87D9              ;
 622  87D9              ; 8/1/23
 623  87D9              ;
 624  87D9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 625  87D9
 626  87D9 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 627  87DC 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 628  87DF C9           	ret
 629  87E0 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 630  87E3 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 631  87E6 C9           	ret
 632  87E7
 633  87E7              ; -------------------------------------------------------------------------------------------------------------
 634  87E7              ;
 635  87E7              ; 28/2/23
 636  87E7              ;
 637  87E7
 638  87E7              Calcula_numero_de_malotes
 639  87E7
 640  87E7 21 00 70     	ld hl,Album_de_fotos
 641  87EA EB           	ex de,hl
 642  87EB 2A E3 85     	ld hl,(Stack_snapshot)
 643  87EE
 644  87EE 06 00        	ld b,0
 645  87F0 7D           	ld a,l
 646  87F1 93           	sub e
 647  87F2 28 07        	jr z,1F
 648  87F4
 649  87F4              ; Nº de malotes no es "0".
 650  87F4
 651  87F4 D6 06        2 sub 6
 652  87F6 04           	inc b
 653  87F7 A7           	and a
 654  87F8 20 FA        	jr nz,2B
 655  87FA 78           	ld a,b
 656  87FB
 657  87FB 32 DE 85     1 ld (Numero_de_malotes),a
 658  87FE C9           	ret
 659  87FF
 660  87FF              ; -------------------------------------------------------------------------------------------------------------
 661  87FF              ;
 662  87FF              ; 28/2/23
 663  87FF              ;
 664  87FF
 665  87FF              Calcula_numero_de_disparotes
 666  87FF
 667  87FF 21 60 70     	ld hl,Album_de_fotos_disparos
 668  8802 EB           	ex de,hl
 669  8803 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 670  8806
 671  8806 06 00        	ld b,0
 672  8808 7D           	ld a,l
 673  8809 93           	sub e
 674  880A 28 07        	jr z,1F
 675  880C
 676  880C              ; Nº de malotes no es "0".
 677  880C
 678  880C D6 06        2 sub 6
 679  880E 04           	inc b
 680  880F A7           	and a
 681  8810 20 FA        	jr nz,2B
 682  8812 78           	ld a,b
 683  8813
 684  8813 32 E7 85     1 ld (Numero_de_disparotes),a
 685  8816 C9           	ret
 686  8817              ; *************************************************************************************************************************************************************
 687  8817              ;
 688  8817              ; 20/10/22
 689  8817              ;
 690  8817              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 691  8817              ;
 692  8817              ; Destruye el puntero y DE !!!!!
 693  8817
 694  8817 5E           Extrae_address ld e,(hl)
 695  8818 23           	inc hl
 696  8819 56           	ld d,(hl)
 697  881A 2B           	dec hl
 698  881B EB           	ex de,hl
 699  881C C9           	ret
 700  881D
 701  881D              ; *************************************************************************************************************************************************************
 702  881D              ;
 703  881D              ;	7/2/23
 704  881D              ;
 705  881D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 706  881D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 707  881D              ;
 708  881D              ;   Destruye HL y BC !!!!!,
 709  881D              ;
 710  881D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 711  881D              ;					"0" ..... Izquierda.
 712  881D
 713  881D              Inicia_Puntero_objeto
 714  881D
 715  881D 3A AF 85     	ld a,(Cuad_objeto)
 716  8820 E6 01        	and 1
 717  8822 F5           	push af
 718  8823 CC 41 88     	call z,Inicia_puntero_objeto_izq
 719  8826 F1           	pop af
 720  8827 28 2B        	jr z,1F
 721  8829 CD 2E 88     	call Inicia_puntero_objeto_der
 722  882C 18 26        	jr 1F
 723  882E
 724  882E              ; Arrancamos desde la parte izquierda de la pantalla.
 725  882E              ; Iniciamos (Indice_Sprite_der).
 726  882E
 727  882E 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 728  8831 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 729  8834 CD 17 88     	call Extrae_address
 730  8837 22 9F 85     	ld (Puntero_objeto),hl
 731  883A
 732  883A 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 733  883D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 734  8840 C9           	ret
 735  8841
 736  8841              ; Arrancamos desde la parte derecha de la pantalla.
 737  8841              ; Iniciamos (Indice_Sprite_izq).
 738  8841
 739  8841 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 740  8844 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 741  8847 CD 17 88     	call Extrae_address
 742  884A 22 9F 85     	ld (Puntero_objeto),hl
 743  884D
 744  884D 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 745  8850 22 A9 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 746  8853 C9           	ret
 747  8854
 748  8854              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 749  8854
 750  8854 21 38 83     1 ld hl,Amadeus
 751  8857 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 752  885B B7 ED 42     	sub hl,bc
 753  885E C0           	ret nz
 754  885F 21 C9 85     	ld hl,Ctrl_0
 755  8862 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 756  8864 C9           	ret 												; _de nuestra nave en los extremos.
 757  8865
 758  8865              ; *************************************************************************************************************************************************************
 759  8865              ;
 760  8865              ;	8/1/23
 761  8865              ;
 762  8865              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 763  8865              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 764  8865
 765  8865              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 766  8865              ;	_de la 2ª y 3ª entidad respectivamente.
 767  8865
 768  8865              Store_Restore_entidades
 769  8865
 770  8865 3A DD 85     	ld a,(Numero_de_entidades)
 771  8868 A7           	and a
 772  8869 C8           	ret z
 773  886A
 774  886A E5           	push hl
 775  886B D5           	push de
 776  886C C5            	push bc
 777  886D
 778  886D              ;	STORE !!!!!
 779  886D              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 780  886D
 781  886D 21 9B 85     2 ld hl,Filas
 782  8870 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 783  8874 01 3B 00     	ld bc,59
 784  8877 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 785  8879
 786  8879              ; 	Entidad_sospechosa. 20/4/23
 787  8879
 788  8879 3A B4 85     	ld a,(Impacto)
 789  887C A7           	and a
 790  887D 28 0C        	jr z,1F
 791  887F
 792  887F 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 793  8882 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 794  8885 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 795  8886 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 796  8888 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 797  888B
 798  888B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 799  888B
 800  888B 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 801  888E 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 802  8891
 803  8891 E5           	push hl
 804  8892
 805  8892 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 806  8895 01 3B 00     	ld bc,59
 807  8898 ED B0        	ldir
 808  889A
 809  889A              ;	Incrementa RESTORE !!!!!
 810  889A
 811  889A 2A DB 85         ld hl,(Indice_restore)
 812  889D 23           	inc hl
 813  889E 23           	inc hl
 814  889F 22 DB 85     	ld (Indice_restore),hl
 815  88A2 CD 17 88         call Extrae_address
 816  88A5 22 D9 85         ld (Puntero_restore_entidades),hl
 817  88A8
 818  88A8 E1               pop hl
 819  88A9
 820  88A9 7E            	ld a,(hl)
 821  88AA A7            	and a
 822  88AB 28 C0         	jr z,2B												; Si el cajón está vacío, saltamos al siguiente.
 823  88AD
 824  88AD C1           	pop bc
 825  88AE D1           	pop de
 826  88AF E1           	pop hl
 827  88B0 C9           	ret
 828  88B1
 829  88B1              ; **************************************************************************************************
 830  88B1              ;
 831  88B1              ;	29/10/22
 832  88B1              ;
 833  88B1              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 834  88B1
 835  88B1 E5           Restore_Primera_entidad push hl
 836  88B2 D5           	push de
 837  88B3 C5            	push bc
 838  88B4 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 839  88B7 11 9B 85     	ld de,Filas
 840  88BA 01 3B 00     	ld bc,59
 841  88BD ED B0        	ldir
 842  88BF C1           	pop bc
 843  88C0 D1           	pop de
 844  88C1 E1           	pop hl
 845  88C2 C9           	ret
 846  88C3
 847  88C3              ; **************************************************************************************************
 848  88C3              ;
 849  88C3              ;	25/01/23
 850  88C3              ;
 851  88C3              ;	Restore_Amadeus
 852  88C3              ;
 853  88C3              ;	Cargamos en DRAW los parámetros de Amadeus.
 854  88C3              ;
 855  88C3
 856  88C3 E5           Restore_Amadeus	push hl
 857  88C4 D5           	push de
 858  88C5 C5            	push bc
 859  88C6 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 860  88C9 11 9B 85     	ld de,Filas
 861  88CC 01 3B 00     	ld bc,59
 862  88CF ED B0        	ldir
 863  88D1 C1           	pop bc
 864  88D2 D1           	pop de
 865  88D3 E1           	pop hl
 866  88D4 C9           	ret
 867  88D5
 868  88D5              ; *************************************************************************************************************************************************************
 869  88D5              ;
 870  88D5              ;	29/04/23
 871  88D5              ;
 872  88D5              ;	Store_Amadeus
 873  88D5              ;
 874  88D5              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 875  88D5              ;
 876  88D5              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 877  88D5              ;
 878  88D5              ;	DESTRUYE: HL y BC y DE.
 879  88D5
 880  88D5 21 9B 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 881  88D8 01 3B 00     	ld bc,59
 882  88DB ED B0        	ldir
 883  88DD C9           	ret
 884  88DE
 885  88DE              ; -----------------------------------------------------------
 886  88DE              ;
 887  88DE              ;	27/04/23
 888  88DE              ;
 889  88DE              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 890  88DE              ;
 891  88DE              ;	Destruye: HL,BC,DE,A
 892  88DE
 893  88DE 21 9B 85     Borra_datos_entidad ld hl,Filas
 894  88E1 01 3A 00     	ld bc,58
 895  88E4 AF           	xor a
 896  88E5 77           	ld (hl),a
 897  88E6 11 9C 85     	ld de,Filas+1
 898  88E9 ED B0        	ldir
 899  88EB C9           	ret
 900  88EC
 901  88EC              ; -----------------------------------------------------------
 902  88EC
 903  88EC              ; Teclado.
 904  88EC
 905  88EC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 906  88EE DB FE        	in a,($fe)
 907  88F0 E6 01        	and $01
 908  88F2 28 02        	jr z,1f
 909  88F4 18 F6        	jr Pulsa_ENTER
 910  88F6 C9           1 ret
 911  88F7
 912  88F7              ; **************************************************************************************************
 913  88F7              ;
 914  88F7              ; Temporización.
 915  88F7
 916  88F7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 917  88F7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 918  88F7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 919  88F7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 920  88F7
 921  88F7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 922  88F7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 923  88F7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 924  88F7
 925  88F7              ; A partir de $4f61 no hace falta DELAY.
 926  88F7
 927  88F7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 928  88F7
 929  88F7 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 930  88FA 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 931  88FB 78           	LD A,B
 932  88FC A7           	AND A
 933  88FD 20 FB        	JR NZ,wait
 934  88FF C9           	RET
 935  8900
 936  8900              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 937  8900              ;
 938  8900              ;	5/3/23
 939  8900              ;
 940  8900              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 941  8900
 942  8900              Movimiento_Amadeus
 943  8900
 944  8900              ; Disparo.
 945  8900
 946  8900 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 947  8903 A7           	and a
 948  8904 20 02        	jr nz,1F
 949  8906 18 15        	jr 2F
 950  8908
 951  8908 3E F7        1 ld a,$f7													; "5" para disparar.
 952  890A DB FE        	in a,($fe)
 953  890C E6 10        	and $10
 954  890E
 955  890E F5           	push af
 956  890F CC 79 89     	call z,Genera_disparo
 957  8912 F1           	pop af
 958  8913 20 08        	jr nz,2F
 959  8915
 960  8915 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 961  8918 EE 01        	xor 1
 962  891A 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 963  891D
 964  891D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 965  891F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 966  8921 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 967  8923 CC CA 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 968  8926 3E F7        	ld a,$f7
 969  8928 DB FE        	in a,($fe)
 970  892A E6 01        	and $01
 971  892C C8           	ret z
 972  892D
 973  892D 3E F7        	ld a,$f7
 974  892F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 975  8931 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 976  8933 CC AC 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 977  8936 C9           	ret
 978  8937
 979  8937              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 980  8937              ;
 981  8937              ;	Rutina provisional para que los malotes cagen balas.
 982  8937
 983  8937              Detecta_disparo_entidad
 984  8937
 985  8937 3A FA 85     	ld a,(Habilita_disparo_entidad)
 986  893A A7           	and a
 987  893B C8           	ret z
 988  893C 3E 7F        	ld a,$7f
 989  893E DB FE        	in a,($fe)
 990  8940 E6 01        	and 1
 991  8942 C0           	ret nz
 992  8943 CD 79 89     	call Genera_disparo
 993  8946 C9           	ret
 994  8947
 995  8947              ; Pinta indicadores de FILAS. ------------------------------------------------------
 996  8947
 997  8947 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 998  894A
 999  894A              ; ----------
1000  894A 06 20        	ld b,32
1001  894C E5           2 push hl
1002  894D C5           	push bc
1003  894E              ; ----------
1004  894E
1005  894E 06 BF        	ld b,$bf
1006  8950 36 80        1 ld (hl),%10000000
1007  8952 CD 72 90     	call NextScan
1008  8955 10 F9        	djnz 1B
1009  8957
1010  8957              ; ----------
1011  8957 C1           	pop bc
1012  8958 E1           	pop hl
1013  8959 2C           	inc l
1014  895A 10 F0        	djnz 2B
1015  895C              ; ----------
1016  895C
1017  895C 06 03        	ld b,3
1018  895E 21 00 47         ld hl,$4700
1019  8961 CD 67 89     3 call Bucle_1
1020  8964 10 FB            djnz 3B
1021  8966 C9               ret
1022  8967
1023  8967 C5           Bucle_1 push bc
1024  8968 E5                   push hl
1025  8969 D1                   pop de
1026  896A 13                   inc de
1027  896B 01 FF 00             ld bc,255
1028  896E 36 FF                ld (hl),255
1029  8970 ED B0                ldir
1030  8972 23                   inc hl
1031  8973 3E 07                ld a,7
1032  8975 84                   add a,h
1033  8976 67                   ld h,a
1034  8977 C1                   pop bc
1035  8978 C9                   ret
1036  8979
1037  8979              ; ---------------------------------------------------------------
1038  8979
1039  8979              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8979              ; ******************************************************************************************************************************************************************************************
   2+ 8979              ;
   3+ 8979              ;   17/04/23
   4+ 8979              ;
   5+ 8979              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8979              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8979              ;
   8+ 8979              ;
   9+ 8979              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8979              ;
  11+ 8979              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8979              ;               _ hacen las entidades hacia abajo.
  13+ 8979              ;
  14+ 8979              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8979              ;
  16+ 8979              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8979              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8979              ;
  19+ 8979              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8979              ;           _ la bala.
  21+ 8979              ;
  22+ 8979              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8979              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8979              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8979              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8979              ;           _ en el momento de generarse la bala)).
  27+ 8979
  28+ 8979              Genera_disparo
  29+ 8979
  30+ 8979              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8979              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8979              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8979              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8979              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8979              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8979              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8979
  38+ 8979              ; Exclusiones:
  39+ 8979
  40+ 8979 3A D2 85         ld a,(Columnas)
  41+ 897C 47               ld b,a
  42+ 897D 3A 9C 85         ld a,(Columns)
  43+ 8980 B8               cp b
  44+ 8981 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8982
  46+ 8982              ; ----- ----- -----
  47+ 8982
  48+ 8982 3A C9 85         ld a,(Ctrl_0)
  49+ 8985 CB 77            bit 6,a
  50+ 8987 20 06            jr nz,14F
  51+ 8989
  52+ 8989 3A A2 85         ld a,(Coordenada_y)
  53+ 898C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 898E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 898F
  56+ 898F 21 00 80     14 ld hl,Indice_disparo
  57+ 8992 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8995 4F               ld c,a
  59+ 8996 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8998              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8998              ;                                            ""        ""       "f9", B="1"
  62+ 8998              ;                                            ""        ""       "fb", B="2"
  63+ 8998              ;                                            ""        ""       "fb", B="3"
  64+ 8998 A7               and a
  65+ 8999 28 10            jr z,1F
  66+ 899B E6 01            and 1
  67+ 899D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 899E
  69+ 899E 79               ld a,c
  70+ 899F 16 F9            ld d,$f9
  71+ 89A1 23           2 inc hl
  72+ 89A2 23               inc hl
  73+ 89A3 04               inc b
  74+ 89A4 BA               cp d
  75+ 89A5 28 04            jr z,1F
  76+ 89A7 14               inc d
  77+ 89A8 14               inc d
  78+ 89A9 18 F6            jr 2B
  79+ 89AB
  80+ 89AB CD 17 88     1 call Extrae_address
  81+ 89AE E5               push hl
  82+ 89AF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89B1 DD 21 05 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89B5
  85+ 89B5              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89B5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89B5
  88+ 89B5 3A C9 85         ld a,(Ctrl_0)
  89+ 89B8 CB 77            bit 6,a
  90+ 89BA 20 04            jr nz,19F
  91+ 89BC
  92+ 89BC AF               xor a
  93+ 89BD 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89C0
  95+ 89C0 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89C3 FE 02            cp 2
  97+ 89C5 38 66            jr c,3F
  98+ 89C7 28 64            jr z,3F
  99+ 89C9
 100+ 89C9              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89C9
 102+ 89C9 E6 01            and 1
 103+ 89CB 28 30            jr z,4F
 104+ 89CD
 105+ 89CD              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89CD              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89CD              ;
 108+ 89CD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89CD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89CD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89CD
 112+ 89CD 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89D0
 114+ 89D0              ;   Amadeus o entidad ???.
 115+ 89D0
 116+ 89D0 3A C9 85         ld a,(Ctrl_0)
 117+ 89D3 CB 77            bit 6,a
 118+ 89D5 28 0A            jr z,8F
 119+ 89D7
 120+ 89D7              ; 	Dispara Amadeus.
 121+ 89D7
 122+ 89D7 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89D9 CD 81 90         call PreviousScan
 124+ 89DC CD 81 90         call PreviousScan
 125+ 89DF
 126+ 89DF              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89DF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89DF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89DF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89DF
 131+ 89DF 18 11            jr 10F
 132+ 89E1
 133+ 89E1              ; 	Dispara Entidad.
 134+ 89E1
 135+ 89E1 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89E4              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89E4
 138+ 89E4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89E4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89E4
 141+ 89E4 C5               push bc
 142+ 89E5 06 10            ld b,16
 143+ 89E7 CD 72 90     9 call NextScan
 144+ 89EA 10 FB            djnz 9B
 145+ 89EC C1               pop bc
 146+ 89ED CD 57 8A         call Ajusta_disparo_parte_izquierda
 147+ 89F0 18 06            jr 17F
 148+ 89F2
 149+ 89F2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89F2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89F2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89F2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89F2
 154+ 89F2 CD 57 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89F5 CD CC 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89F8              ;                                                      ; _al generar el disparo.
 157+ 89F8
 158+ 89F8              ; 	LLegados a este punto tendremos:
 159+ 89F8              ;
 160+ 89F8              ;       Puntero_objeto_disparo en IY.
 161+ 89F8              ;       Rutinas_de_impresion en IX.
 162+ 89F8              ;       Puntero_de_impresion en HL.
 163+ 89F8              ;       Impacto/Dirección en BC.
 164+ 89F8
 165+ 89F8 CD 5F 8A     17 call Almacena_disparo
 166+ 89FB 18 52            jr 6F                                             ; RET.
 167+ 89FD
 168+ 89FD              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89FD              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89FD              ;
 171+ 89FD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89FD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89FD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89FD
 175+ 89FD 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 8A00
 177+ 8A00              ;   Amadeus o entidad ???.
 178+ 8A00
 179+ 8A00 3A C9 85         ld a,(Ctrl_0)
 180+ 8A03 CB 77            bit 6,a
 181+ 8A05 28 0A            jr z,11F
 182+ 8A07
 183+ 8A07              ; 	Dispara Amadeus.
 184+ 8A07
 185+ 8A07 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A09 CD 81 90         call PreviousScan
 187+ 8A0C CD 81 90         call PreviousScan
 188+ 8A0F
 189+ 8A0F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A0F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A0F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A0F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A0F
 194+ 8A0F 18 11            jr 13F
 195+ 8A11
 196+ 8A11              ; 	Dispara Entidad.
 197+ 8A11
 198+ 8A11 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A14              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A14
 201+ 8A14              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A14              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A14
 204+ 8A14 C5               push bc
 205+ 8A15 06 10            ld b,16
 206+ 8A17 CD 72 90     12 call NextScan
 207+ 8A1A 10 FB            djnz 12B
 208+ 8A1C C1               pop bc
 209+ 8A1D
 210+ 8A1D CD 50 8A         call Ajusta_disparo_parte_derecha
 211+ 8A20 18 06            jr 18F
 212+ 8A22
 213+ 8A22              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A22              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A22              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A22              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A22
 218+ 8A22 CD 50 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A25 CD CC 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A28              ;                                                       ; _al generar el disparo.
 221+ 8A28
 222+ 8A28              ; LLegados a este punto tendremos:
 223+ 8A28              ;
 224+ 8A28              ;       Puntero_objeto_disparo en IY.
 225+ 8A28              ;       Rutinas_de_impresion en IX.
 226+ 8A28              ;       Puntero_de_impresion en HL.
 227+ 8A28              ;       Impacto/Dirección en BC.
 228+ 8A28
 229+ 8A28 CD 5F 8A     18 call Almacena_disparo
 230+ 8A2B 18 22            jr 6F                                               ; RET.
 231+ 8A2D
 232+ 8A2D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A2D
 234+ 8A2D 28 11        3 jr z,5F
 235+ 8A2F
 236+ 8A2F              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A2F              ;
 238+ 8A2F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A2F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A2F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A2F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A2F
 243+ 8A2F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A2F              ;	   ""        ""       "f9", B="1"
 245+ 8A2F              ;	   ""        ""       "fb", B="2"
 246+ 8A2F              ; 	   ""        ""       "fb", B="3"
 247+ 8A2F
 248+ 8A2F 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A32 CD 72 90     	call NextScan
 250+ 8A35
 251+ 8A35              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A35              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A35              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A35              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A35
 256+ 8A35 CD 57 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A38
 258+ 8A38              ; 	No se produce impacto. B="$80"
 259+ 8A38              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A38
 261+ 8A38 01 80 80         ld bc,$8080
 262+ 8A3B
 263+ 8A3B              ; 	LLegados a este punto tendremos:
 264+ 8A3B              ;
 265+ 8A3B              ;       Puntero_objeto_disparo en IY.
 266+ 8A3B              ;       Rutinas_de_impresion en IX.
 267+ 8A3B              ;       Puntero_de_impresion en HL.
 268+ 8A3B              ;       Impacto/Dirección en BC.
 269+ 8A3B
 270+ 8A3B CD 5F 8A         call Almacena_disparo
 271+ 8A3E 18 0F            jr 6F                                           ; RET.
 272+ 8A40
 273+ 8A40              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A40              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A40              ;
 276+ 8A40              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A40              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A40              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A40              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A40
 281+ 8A40 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A43 CD 72 90     	call NextScan
 283+ 8A46
 284+ 8A46              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A46              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A46              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A46              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A46
 289+ 8A46 CD 50 8A         call Ajusta_disparo_parte_derecha
 290+ 8A49
 291+ 8A49              ; 	No se produce impacto. B="$80"
 292+ 8A49              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A49
 294+ 8A49 01 80 80     15 ld bc,$8080
 295+ 8A4C
 296+ 8A4C              ; 	LLegados a este punto tendremos:
 297+ 8A4C              ;
 298+ 8A4C              ;       Puntero_objeto_disparo en IY.
 299+ 8A4C              ;       Rutinas_de_impresion en IX.
 300+ 8A4C              ;       Puntero_de_impresion en HL.
 301+ 8A4C              ;       Impacto/Dirección en BC.
 302+ 8A4C
 303+ 8A4C CD 5F 8A         call Almacena_disparo
 304+ 8A4F
 305+ 8A4F C9           6 ret
 306+ 8A50
 307+ 8A50              ; ----------------------------------------------------------------
 308+ 8A50              ;
 309+ 8A50              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A50              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A50              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A50
 313+ 8A50 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A51 FE 02            cp 2
 315+ 8A53 38 01            jr c,1F
 316+ 8A55 23               inc hl
 317+ 8A56 C9           1 ret
 318+ 8A57
 319+ 8A57 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A58 FE 01        	cp 1
 321+ 8A5A 20 01        	jr nz,1F
 322+ 8A5C 2B           	dec hl
 323+ 8A5D 2B           1 dec hl
 324+ 8A5E C9               ret
 325+ 8A5F
 326+ 8A5F              ; ----------------------------------------------------------------
 327+ 8A5F              ;
 328+ 8A5F              ;   25/02/23
 329+ 8A5F              ;
 330+ 8A5F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A5F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A5F              ;
 333+ 8A5F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A5F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A5F
 336+ 8A5F              Almacena_disparo
 337+ 8A5F
 338+ 8A5F E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A60 F1               pop af
 340+ 8A61 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A62
 342+ 8A62 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A63 E6 01            and 1
 344+ 8A65 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A67              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A67              ; 	Dispara AMADEUS.
 347+ 8A67
 348+ 8A67              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A67              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A67              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A67              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A67
 353+ 8A67 C5               push bc
 354+ 8A68 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A6B 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A6E A7               and a
 357+ 8A6F ED 42            sbc hl,bc
 358+ 8A71 CC E0 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A74 C1               pop bc
 360+ 8A75 28 54            jr z,4F
 361+ 8A77
 362+ 8A77 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A7A 23               inc hl
 364+ 8A7B 23               inc hl
 365+ 8A7C 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A7F              ;                                                   ; _ Disparo_(+1).
 367+ 8A7F 18 18            jr 2F
 368+ 8A81
 369+ 8A81              ; Dispara una entidad.
 370+ 8A81
 371+ 8A81 C5           1 push bc
 372+ 8A82 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A85 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A88 A7               and a
 375+ 8A89 ED 42            sbc hl,bc
 376+ 8A8B CC D9 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A8E C1               pop bc
 378+ 8A8F 28 3A            jr z,4F
 379+ 8A91
 380+ 8A91 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A94 23               inc hl
 382+ 8A95 23               inc hl
 383+ 8A96 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A99              ;                                                   ; _ Disparo_(+1).
 385+ 8A99 CD 17 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A9C              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A9C              ;
 388+ 8A9C              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A9C              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A9C              ;                                                     Puntero_de_impresion en HL.
 391+ 8A9C              ;                                                     Impacto/Dirección en BC.
 392+ 8A9C
 393+ 8A9C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A9D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A9E 23               inc hl                                          ; _ al siguiente.
 396+ 8A9F A7               and a
 397+ 8AA0 20 C0            jr nz,3B
 398+ 8AA2
 399+ 8AA2 08               ex af,af
 400+ 8AA3 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AA7 F9               ld sp,hl
 402+ 8AA8
 403+ 8AA8 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AAA F5               push af                                         ; Puntero de impresión.
 405+ 8AAB FD E5            push iy                                         ; Puntero objeto.
 406+ 8AAD C5               push bc                                         ; Control.
 407+ 8AAE
 408+ 8AAE ED 7B DF 85      ld sp,(Stack)
 409+ 8AB2
 410+ 8AB2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AB2
 412+ 8AB2 21 D6 85     	ld hl,Ctrl_1
 413+ 8AB5 CB C6        	set 0,(hl)
 414+ 8AB7
 415+ 8AB7 DD E5        	push ix
 416+ 8AB9 E1               pop hl
 417+ 8ABA F5               push af
 418+ 8ABB DD E1            pop ix
 419+ 8ABD
 420+ 8ABD CD A0 7F     	call Guarda_foto_registros
 421+ 8AC0
 422+ 8AC0 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8AC3 CB 86        	res 0,(hl)
 424+ 8AC5
 425+ 8AC5              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8AC5              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8AC5
 428+ 8AC5 CD E0 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8AC8 CD D9 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8ACB
 431+ 8ACB C9           4 ret
 432+ 8ACC
 433+ 8ACC              ; ----------------------------------------------------------------
 434+ 8ACC              ;
 435+ 8ACC              ;   4/3/23
 436+ 8ACC              ;
 437+ 8ACC              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8ACC              ;   _ al generarse el disparo.
 439+ 8ACC              ;
 440+ 8ACC              ;       "$80" ..... No se produce colisión.
 441+ 8ACC              ;       "$81" ..... Se produce colisión.
 442+ 8ACC
 443+ 8ACC              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8ACC              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8ACC
 446+ 8ACC
 447+ 8ACC FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8ACE E5               push hl                                        ; Puntero de impresión.
 449+ 8ACF 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8AD1 CD ED 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AD4
 452+ 8AD4 7B               ld a,e
 453+ 8AD5 E6 01            and 1
 454+ 8AD7 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8AD9
 456+ 8AD9 E1               pop hl
 457+ 8ADA E5               push hl
 458+ 8ADB CD 72 90         call NextScan
 459+ 8ADE
 460+ 8ADE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8ADF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8AE1 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AE3              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AE3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AE5 CD ED 8A         call Bucle_2
 466+ 8AE8
 467+ 8AE8 43           2 ld b,e
 468+ 8AE9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8AEA FD E1            pop iy
 470+ 8AEC C9               ret
 471+ 8AED
 472+ 8AED               ; ---------- ----------
 473+ 8AED
 474+ 8AED 06 02        Bucle_2 ld b,2
 475+ 8AEF FD 7E 00     2 ld a,(iy)
 476+ 8AF2 A6               and (hl)
 477+ 8AF3 28 02            jr z,1F
 478+ 8AF5 1E 81            ld e,$81
 479+ 8AF7 23           1 inc hl
 480+ 8AF8 FD 23            inc iy
 481+ 8AFA 10 F3            djnz 2B
 482+ 8AFC C9               ret
 483+ 8AFD
 484+ 8AFD              ; -------------------------------------------------------------------------------------------------------------
 485+ 8AFD              ;
 486+ 8AFD              ;   11/04/23
 487+ 8AFD              ;
 488+ 8AFD              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8AFD              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8AFD              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8AFD              ;
 492+ 8AFD              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8AFD
 494+ 8AFD              Compara_coordenadas_X
 495+ 8AFD
 496+ 8AFD              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8AFD              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8AFD
 499+ 8AFD              ; Preparamos registros:
 500+ 8AFD
 501+ 8AFD 21 A1 85         ld hl,Filas+6
 502+ 8B00 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B01 23               inc hl
 504+ 8B02 23               inc hl
 505+ 8B03 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B04 43               ld b,e
 507+ 8B05 21 AF 85         ld hl,Filas+20
 508+ 8B08 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B09 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8B0C CD 1B 8D         call Guarda_coordenadas_X
 511+ 8B0F
 512+ 8B0F              ; Preparamos registros:
 513+ 8B0F
 514+ 8B0F 21 7A 84         ld hl,Amadeus_db+6
 515+ 8B12 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B13 23               inc hl
 517+ 8B14 23               inc hl
 518+ 8B15 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B16 7B               ld a,e
 520+ 8B17 08               ex af,af'
 521+ 8B18 21 88 84         ld hl,Amadeus_db+20
 522+ 8B1B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B1C 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B1F CD 1B 8D         call Guarda_coordenadas_X
 525+ 8B22
 526+ 8B22              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B22              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B22
 529+ 8B22 04               inc b
 530+ 8B23 05               dec b
 531+ 8B24 28 04            jr z,1F
 532+ 8B26 06 03            ld b,3
 533+ 8B28 18 02            jr 2F
 534+ 8B2A 06 02        1 ld b,2
 535+ 8B2C 08           2 ex af,af'
 536+ 8B2D 3C               inc a
 537+ 8B2E 3D               dec a
 538+ 8B2F 28 04            jr z,5F
 539+ 8B31 0E 03            ld c,3
 540+ 8B33 18 02            jr 6F
 541+ 8B35 0E 02        5 ld c,2
 542+ 8B37 79           6 ld a,c
 543+ 8B38 08               ex af,af'
 544+ 8B39 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B3C 1A           4 ld a,(de)
 546+ 8B3D 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B40 BE           3 cp (hl)
 548+ 8B41 28 0E            jr z,7F
 549+ 8B43 23               inc hl
 550+ 8B44 0D               dec c
 551+ 8B45 20 F9            jr nz,3B
 552+ 8B47 13               inc de
 553+ 8B48 08               ex af,af'
 554+ 8B49 4F               ld c,a
 555+ 8B4A 08               ex af,af'
 556+ 8B4B 10 EF            djnz 4B
 557+ 8B4D
 558+ 8B4D              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B4D
 560+ 8B4D CD 5A 8D     8 call Limpia_Coordenadas_X
 561+ 8B50 C9               ret
 562+ 8B51
 563+ 8B51              7
 564+ 8B51 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B53 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8B56 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8B59 CB D6            set 2,(hl)
 568+ 8B5B 18 F0            jr 8B
 569+ 8B5D
 570+ 8B5D              ; -----------------------------------------------------------------------
 571+ 8B5D              ;
 572+ 8B5D              ;   17/04/23
 573+ 8B5D              ;
 574+ 8B5D
 575+ 8B5D              Detecta_colision_nave_entidad
 576+ 8B5D
 577+ 8B5D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8B5D
 579+ 8B5D 2A 9D 85         ld hl,(Posicion_actual)
 580+ 8B60 CD D7 8F         call Calcula_puntero_de_impresion
 581+ 8B63
 582+ 8B63              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8B63              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8B63
 585+ 8B63 DD E5            push ix
 586+ 8B65 E1               pop hl
 587+ 8B66 E5               push hl
 588+ 8B67
 589+ 8B67              ; ----- ----- -----
 590+ 8B67 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8B69 06 0A            ld b,10
 592+ 8B6B CD 9B 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8B6E 7B               ld a,e
 594+ 8B6F FE 05            cp 5
 595+ 8B71 38 0E            jr c,3F
 596+ 8B73
 597+ 8B73              ; LLegados a este punto:
 598+ 8B73              ;
 599+ 8B73              ;   HAY COLISIÓN !!!!!.
 600+ 8B73              ;
 601+ 8B73              ;   .db (Impacto) de Amadeus a "1".
 602+ 8B73              ;   SET el bit3 de (Impacto2).
 603+ 8B73              ;
 604+ 8B73              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8B73
 606+ 8B73 21 8D 84         ld hl,Amadeus_db+25
 607+ 8B76 36 01            ld (hl),1
 608+ 8B78 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8B7B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8B7D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8B7F 18 18            jr 1F
 612+ 8B81
 613+ 8B81              ; -----
 614+ 8B81
 615+ 8B81 E1           3 pop hl
 616+ 8B82 CD 72 90         call NextScan
 617+ 8B85 E5               push hl
 618+ 8B86 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8B87 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8B89 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8B8B 30 0C            jr nc,1F
 622+ 8B8D              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8B8D 10 DC            djnz 2B
 624+ 8B8F
 625+ 8B8F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8B8F
 627+ 8B8F              ; LLegados a este punto:
 628+ 8B8F              ;
 629+ 8B8F              ;   NO HAY COLISIÓN !!!!!.
 630+ 8B8F              ;
 631+ 8B8F              ;   .db (Impacto) de Amadeus a "0".
 632+ 8B8F              ;   RES el bit2 de (Impacto2).
 633+ 8B8F              ;
 634+ 8B8F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8B8F              ;   Lo colocamos a "0".
 636+ 8B8F
 637+ 8B8F 21 EC 85         ld hl,Impacto2
 638+ 8B92 CB 96            res 2,(hl)
 639+ 8B94 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8B97 36 00            ld (hl),0
 641+ 8B99
 642+ 8B99 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8B9A C9               ret
 644+ 8B9B
 645+ 8B9B               ; ---------- ----------
 646+ 8B9B
 647+ 8B9B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8B9C 3A 9C 85         ld a,(Columns)
 649+ 8B9F 47               ld b,a
 650+ 8BA0 FD 7E 00     2 ld a,(iy)
 651+ 8BA3 BE               cp (hl)
 652+ 8BA4 28 01            jr z,1F
 653+ 8BA6
 654+ 8BA6 1C               inc e
 655+ 8BA7
 656+ 8BA7 23           1 inc hl
 657+ 8BA8 FD 23            inc iy
 658+ 8BAA 10 F4            djnz 2B
 659+ 8BAC C1               pop bc
 660+ 8BAD C9               ret
 661+ 8BAE
 662+ 8BAE              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BAE              ;
 664+ 8BAE              ;   13/03/23
 665+ 8BAE              ;
 666+ 8BAE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BAE              ;
 668+ 8BAE              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BAE
 670+ 8BAE 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BB1 7E               ld a,(hl)
 672+ 8BB2 A7               and a
 673+ 8BB3 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BB4
 675+ 8BB4 44               ld b,h
 676+ 8BB5 4D               ld c,l
 677+ 8BB6 2A E5 85         ld hl,(Stack_snapshot_disparos)
 678+ 8BB9 E5               push hl
 679+ 8BBA A7               and a
 680+ 8BBB ED 42            sbc hl,bc
 681+ 8BBD E5               push hl
 682+ 8BBE C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8BBF
 684+ 8BBF E1               pop hl
 685+ 8BC0 54               ld d,h
 686+ 8BC1 5D               ld e,l
 687+ 8BC2 1B               dec de
 688+ 8BC3 ED B8            lddr                                                ; Limpiamos.
 689+ 8BC5
 690+ 8BC5 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8BC8 22 E5 85         ld (Stack_snapshot_disparos),hl
 692+ 8BCB
 693+ 8BCB C9               ret
 694+ 8BCC
 695+ 8BCC              ; -------------------------------------------------------------------------------------------------------------
 696+ 8BCC              ;
 697+ 8BCC              ;   28/03/23
 698+ 8BCC              ;
 699+ 8BCC
 700+ 8BCC 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8BCF 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8BD2
 703+ 8BD2 CD 17 88     2 call Extrae_address
 704+ 8BD5 7E               ld a,(hl)
 705+ 8BD6 A7               and a
 706+ 8BD7 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8BD9
 708+ 8BD9              ; ----- ----- ----- ----- ----- -----
 709+ 8BD9
 710+ 8BD9 C5               push bc
 711+ 8BDA CD 96 8C         call foto_disparo_a_borrar
 712+ 8BDD
 713+ 8BDD              ; Existe colisión con este disparo???
 714+ 8BDD
 715+ 8BDD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8BDE 7E               ld a,(hl)
 717+ 8BDF 2B               dec hl
 718+ 8BE0 E6 01            and 1
 719+ 8BE2 28 1D            jr z,9F
 720+ 8BE4
 721+ 8BE4              ;   En este punto:
 722+ 8BE4              ;
 723+ 8BE4              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8BE4              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8BE4              ;   _con la entidad).
 726+ 8BE4              ;
 727+ 8BE4              ;   Disparo_2A defw 0                                ; Control.
 728+ 8BE4              ;    defw 0                                          ; Puntero objeto.
 729+ 8BE4              ;    defw 0                                          ; Puntero de impresión.
 730+ 8BE4              ;    defw 0                                          ; Rutina de impresión.
 731+ 8BE4
 732+ 8BE4 E5               push hl
 733+ 8BE5
 734+ 8BE5 06 04            ld b,4
 735+ 8BE7 23           19 inc hl
 736+ 8BE8 10 FD            djnz 19B
 737+ 8BEA
 738+ 8BEA CD 17 88         call Extrae_address
 739+ 8BED CD 89 96         call Genera_coordenadas_disparo
 740+ 8BF0
 741+ 8BF0              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8BF0
 743+ 8BF0 21 EF 85         ld hl,Coordenadas_disparo_certero
 744+ 8BF3 72               ld (hl),d
 745+ 8BF4 23               inc hl
 746+ 8BF5 73               ld (hl),e
 747+ 8BF6
 748+ 8BF6              ; Elimino el disparo de la base de datos.
 749+ 8BF6
 750+ 8BF6 E1               pop hl
 751+ 8BF7 CD 10 8D         call Elimina_disparo_de_base_de_datos
 752+ 8BFA 21 EC 85         ld hl,Impacto2
 753+ 8BFD CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8BFF
 755+ 8BFF 18 06            jr 11F
 756+ 8C01
 757+ 8C01 CD BF 8C     9 call Mueve_disparo
 758+ 8C04 CD 96 8C         call foto_disparo_a_borrar
 759+ 8C07
 760+ 8C07 C1           11 pop bc
 761+ 8C08 18 04            jr 7F
 762+ 8C0A
 763+ 8C0A              ; ----- ----- ----- ----- ----- -----
 764+ 8C0A
 765+ 8C0A ED 42        1 sbc hl,bc
 766+ 8C0C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C0E
 768+ 8C0E 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C11 23               inc hl
 770+ 8C12 23               inc hl
 771+ 8C13 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C16 18 BA            jr 2B
 773+ 8C18
 774+ 8C18 CD E0 87     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C1B 01 66 84         ld bc,Disparo_11
 776+ 8C1E 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C21
 778+ 8C21 CD 17 88     5 call Extrae_address
 779+ 8C24 7E               ld a,(hl)
 780+ 8C25 A7               and a
 781+ 8C26 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C28
 783+ 8C28              ; ----- ----- ----- ----- ----- -----
 784+ 8C28
 785+ 8C28 C5               push bc
 786+ 8C29 CD 96 8C         call foto_disparo_a_borrar
 787+ 8C2C
 788+ 8C2C              ; Existe colisión con este disparo???
 789+ 8C2C
 790+ 8C2C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C2D 7E               ld a,(hl)
 792+ 8C2E 2B               dec hl
 793+ 8C2F E6 01            and 1
 794+ 8C31 28 48            jr z,10F
 795+ 8C33
 796+ 8C33              ; La colisión se produce con Amadeus???
 797+ 8C33              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C33
 799+ 8C33 E5               push hl
 800+ 8C34
 801+ 8C34 06 04            ld b,4
 802+ 8C36 23           16 inc hl
 803+ 8C37 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C39 CD 17 88         call Extrae_address
 805+ 8C3C CD 89 96         call Genera_coordenadas_disparo
 806+ 8C3F
 807+ 8C3F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C40 FE 16            cp $16
 809+ 8C42 38 22            jr c,15F
 810+ 8C44
 811+ 8C44              ; (Colisiones en filas 16 y 17).
 812+ 8C44
 813+ 8C44 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C45
 815+ 8C45              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C45
 817+ 8C45 21 7A 84         ld hl,Amadeus_db+6
 818+ 8C48 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C49 23               inc hl
 820+ 8C4A 23               inc hl
 821+ 8C4B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C4C 21 88 84         ld hl,Amadeus_db+20
 823+ 8C4F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C50 21 F1 85         ld hl,Coordenadas_X_Amadeus
 825+ 8C53 CD 1B 8D         call Guarda_coordenadas_X
 826+ 8C56
 827+ 8C56 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8C57
 829+ 8C57              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8C57
 831+ 8C57 06 03            ld b,3
 832+ 8C59 21 F1 85         ld hl,Coordenadas_X_Amadeus
 833+ 8C5C 7E           18 ld a,(hl)
 834+ 8C5D BA               cp d
 835+ 8C5E 20 03            jr nz,17F
 836+ 8C60
 837+ 8C60              ; Colisión Amadeus !!!!!!!!!!
 838+ 8C60
 839+ 8C60 E1               pop hl
 840+ 8C61 18 09            jr 14F
 841+ 8C63
 842+ 8C63 23           17 inc hl
 843+ 8C64 10 F6            djnz 18B
 844+ 8C66
 845+ 8C66              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8C66              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8C66
 848+ 8C66 E1           15 pop hl
 849+ 8C67 23               inc hl
 850+ 8C68 35               dec (hl)
 851+ 8C69 2B               dec hl
 852+ 8C6A 18 0F            jr 10F
 853+ 8C6C
 854+ 8C6C              ; -----------------------debug
 855+ 8C6C
 856+ 8C6C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8C6C              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8C6C
 859+ 8C6C E5           14 push hl
 860+ 8C6D CD 10 8D         call Elimina_disparo_de_base_de_datos
 861+ 8C70 21 EC 85         ld hl,Impacto2
 862+ 8C73 CB CE            set 1,(hl)
 863+ 8C75 CD 5A 8D         call Limpia_Coordenadas_X
 864+ 8C78
 865+ 8C78 E1               pop hl
 866+ 8C79 18 06            jr 12F
 867+ 8C7B
 868+ 8C7B CD BF 8C     10 call Mueve_disparo
 869+ 8C7E CD 96 8C         call foto_disparo_a_borrar
 870+ 8C81 C1           12 pop bc
 871+ 8C82
 872+ 8C82 18 04            jr 8F
 873+ 8C84
 874+ 8C84              ; ----- ----- ----- ----- ----- -----
 875+ 8C84
 876+ 8C84 ED 42        4 sbc hl,bc
 877+ 8C86 28 0A            jr z,6F
 878+ 8C88
 879+ 8C88 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8C8B 23               inc hl
 881+ 8C8C 23               inc hl
 882+ 8C8D 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8C90 18 8F            jr 5B
 884+ 8C92
 885+ 8C92 CD D9 87     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8C95 C9               ret
 887+ 8C96
 888+ 8C96              ; ------------------------------------------------------------------
 889+ 8C96
 890+ 8C96              foto_disparo_a_borrar
 891+ 8C96
 892+ 8C96 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8C97 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8C98 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8C99
 896+ 8C99 E5               push hl
 897+ 8C9A 23               inc hl
 898+ 8C9B 23               inc hl
 899+ 8C9C ED 73 DF 85      ld (Stack),sp
 900+ 8CA0 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CA1 FD E1            pop iy
 902+ 8CA3 DD E1            pop ix
 903+ 8CA5 E1               pop hl
 904+ 8CA6 ED 7B DF 85      ld sp,(Stack)
 905+ 8CAA 3A D6 85         ld a,(Ctrl_1)
 906+ 8CAD CB C7            set 0,a
 907+ 8CAF 32 D6 85         ld (Ctrl_1),a
 908+ 8CB2 CD A0 7F         call Guarda_foto_registros
 909+ 8CB5 3A D6 85         ld a,(Ctrl_1)
 910+ 8CB8 CB 87            res 0,a
 911+ 8CBA 32 D6 85         ld (Ctrl_1),a
 912+ 8CBD E1               pop hl
 913+ 8CBE C9               ret
 914+ 8CBF
 915+ 8CBF E5           Mueve_disparo push hl
 916+ 8CC0 7E               ld a,(hl)
 917+ 8CC1 06 04            ld b,4
 918+ 8CC3 23           1 inc hl
 919+ 8CC4 10 FD            djnz 1B
 920+ 8CC6
 921+ 8CC6              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8CC6
 923+ 8CC6 CD 17 88         call Extrae_address
 924+ 8CC9
 925+ 8CC9 E6 01            and 1
 926+ 8CCB 28 2A            jr z,2F
 927+ 8CCD
 928+ 8CCD              ; Disparo hacia arriba, (Amadeus).
 929+ 8CCD
 930+ 8CCD              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8CCD              ; _ de la dificultad.
 932+ 8CCD
 933+ 8CCD CD 81 90         call PreviousScan
 934+ 8CD0 CD 81 90         call PreviousScan
 935+ 8CD3 CD 81 90         call PreviousScan
 936+ 8CD6
 937+ 8CD6              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8CD6
 939+ 8CD6 7C               ld a,h
 940+ 8CD7 FE 40            cp $40
 941+ 8CD9 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8CDB
 943+ 8CDB              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8CDB
 945+ 8CDB EB               ex de,hl
 946+ 8CDC 06 04            ld b,4
 947+ 8CDE 2B           6 dec hl
 948+ 8CDF 10 FD            djnz 6B
 949+ 8CE1
 950+ 8CE1 CD 10 8D         call Elimina_disparo_de_base_de_datos
 951+ 8CE4
 952+ 8CE4 18 0C            jr 4F
 953+ 8CE6
 954+ 8CE6              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8CE6
 956+ 8CE6 D5           3 push de
 957+ 8CE7 C5               push bc
 958+ 8CE8 CD CC 8A         call Comprueba_Colision
 959+ 8CEB 78               ld a,b
 960+ 8CEC C1               pop bc
 961+ 8CED D1               pop de
 962+ 8CEE
 963+ 8CEE EB               ex de,hl
 964+ 8CEF
 965+ 8CEF 73               ld (hl),e
 966+ 8CF0 23               inc hl
 967+ 8CF1 72               ld (hl),d
 968+ 8CF2
 969+ 8CF2 E1           4 pop hl
 970+ 8CF3 23               inc hl
 971+ 8CF4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8CF5 2B               dec hl
 973+ 8CF6 C9               ret
 974+ 8CF7
 975+ 8CF7              ; Disparo hacia abajo, (Entidad).
 976+ 8CF7
 977+ 8CF7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8CF7              ; _ de la dificultad.
 979+ 8CF7
 980+ 8CF7 CD 72 90     2 call NextScan
 981+ 8CFA CD 72 90         call NextScan
 982+ 8CFD CD 72 90         call NextScan
 983+ 8D00
 984+ 8D00              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8D00
 986+ 8D00 7C               ld a,h
 987+ 8D01 FE 58            cp $58
 988+ 8D03 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D05
 990+ 8D05 EB               ex de,hl
 991+ 8D06 06 04            ld b,4
 992+ 8D08 2B           5 dec hl
 993+ 8D09 10 FD            djnz 5B
 994+ 8D0B
 995+ 8D0B CD 10 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D0E
 997+ 8D0E 18 E2            jr 4B
 998+ 8D10
 999+ 8D10              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D10
1001+ 8D10 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D13 AF               xor a
1003+ 8D14 77               ld (hl),a
1004+ 8D15 54               ld d,h
1005+ 8D16 5D               ld e,l
1006+ 8D17 13               inc de
1007+ 8D18 ED B0            ldir
1008+ 8D1A C9               ret
1009+ 8D1B
1010+ 8D1B              ; -----------------------------------------------------------------
1011+ 8D1B              ;
1012+ 8D1B              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D1B              ;
1014+ 8D1B              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D1B              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D1B              ;
1017+ 8D1B              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D1B              ;
1019+ 8D1B              ;   INPUTS:
1020+ 8D1B              ;
1021+ 8D1B              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D1B              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D1B              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D1B
1025+ 8D1B              ;   MODIFICA: A, HL, DE y C
1026+ 8D1B
1027+ 8D1B 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D1C 79               ld a,c
1029+ 8D1D E6 01            and 1
1030+ 8D1F 20 03            jr nz,1F
1031+ 8D21 14               inc d
1032+ 8D22 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D24
1034+ 8D24              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D24              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D24
1037+ 8D24 15           1 dec d
1038+ 8D25 23           2 inc hl
1039+ 8D26 72               ld (hl),d
1040+ 8D27
1041+ 8D27 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D28 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D29 C8               ret z
1044+ 8D2A
1045+ 8D2A AF               xor a
1046+ 8D2B 5F               ld e,a
1047+ 8D2C 18 ED            jr Guarda_coordenadas_X
1048+ 8D2E
1049+ 8D2E              ; -----------------------------------------------------------------
1050+ 8D2E              ;
1051+ 8D2E              ;   12/04/23
1052+ 8D2E              ;
1053+ 8D2E
1054+ 8D2E 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1055+ 8D31 A7               and a
1056+ 8D32 C8               ret z
1057+ 8D33
1058+ 8D33 FE 04            cp 4
1059+ 8D35 20 09            jr nz,1F
1060+ 8D37
1061+ 8D37
1062+ 8D37              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D37
1064+ 8D37 CD 5D 8B         call Detecta_colision_nave_entidad
1065+ 8D3A
1066+ 8D3A 21 EC 85         ld hl,Impacto2
1067+ 8D3D CB 5E            bit 3,(hl)
1068+ 8D3F C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D40
1070+ 8D40              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D40              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D40
1073+ 8D40 21 EC 85     1 ld hl,Impacto2
1074+ 8D43 CB 4E            bit 1,(hl)
1075+ 8D45 28 07            jr z,2F
1076+ 8D47
1077+ 8D47 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D4A 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D4C 18 0B            jr 3F
1080+ 8D4E
1081+ 8D4E 21 EC 85     2 ld hl,Impacto2
1082+ 8D51 CB 46            bit 0,(hl)
1083+ 8D53 C8               ret z
1084+ 8D54
1085+ 8D54              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D54
1087+ 8D54 21 D6 85         ld hl,Ctrl_1
1088+ 8D57 CB D6            set 2,(hl)
1089+ 8D59
1090+ 8D59 C9           3 ret
1091+ 8D5A
1092+ 8D5A              ; -----------------------------------------------------------------
1093+ 8D5A              ;
1094+ 8D5A              ;   16/04/23
1095+ 8D5A              ;
1096+ 8D5A
1097+ 8D5A AF           Limpia_Coordenadas_X xor a
1098+ 8D5B 06 06            ld b,6
1099+ 8D5D 21 F1 85         ld hl,Coordenadas_X_Amadeus
1100+ 8D60 77           1 ld (hl),a
1101+ 8D61 23               inc hl
1102+ 8D62 10 FC            djnz 1B
1103+ 8D64 C9               ret
1104+ 8D65
1105+ 8D65              ; -----------------------------------------------------------------
1106+ 8D65              ;
1107+ 8D65              ;   25/04/23
1108+ 8D65              ;
1109+ 8D65
1110+ 8D65              Determina_resultado_comparativa
1111+ 8D65
1112+ 8D65 7C               ld a,h
1113+ 8D66 06 00            ld b,0
1114+ 8D68
1115+ 8D68 CD 80 8D         call Compara_cositas
1116+ 8D6B 04               inc b
1117+ 8D6C 05               dec b
1118+ 8D6D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8D6E
1120+ 8D6E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8D6F 06 00            ld b,0
1122+ 8D71 FE 02            cp $02
1123+ 8D73 28 09            jr z,1F
1124+ 8D75 FE FE            cp $fe
1125+ 8D77 28 05            jr z,1F
1126+ 8D79
1127+ 8D79 CD 80 8D         call Compara_cositas
1128+ 8D7C 18 01            jr 2F
1129+ 8D7E
1130+ 8D7E 04           1 inc b
1131+ 8D7F C9           2 ret
1132+ 8D80
1133+ 8D80 A7           Compara_cositas and a
1134+ 8D81 28 07            jr z,1F
1135+ 8D83 FE FF            cp $ff
1136+ 8D85 28 03            jr z,1F
1137+ 8D87 FE 01            cp $01
1138+ 8D89 C0               ret nz
1139+ 8D8A 04           1 inc b
1140+ 8D8B C9               ret
1141+ 8D8C
# file closed: Disparo.asm
1040  8D8C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D8C              ; ******************************************************************************************************************************************************************************************
   2+ 8D8C              ;
   3+ 8D8C              ; 01/23
   4+ 8D8C              ;
   5+ 8D8C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D8C
   7+ 8D8C CD 66 90     Draw call Prepara_draw
   8+ 8D8F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D90 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D91 28 05        	jr z,2F
  11+ 8D93
  12+ 8D93 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D96 18 0C        	jr 1F
  14+ 8D98 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D9B 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D9E CD 2D 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DA1              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DA1 CD AC 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DA4 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8DA7 CB 6F        	bit 5,a
  21+ 8DA9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DAB
  23+ 8DAB CD C3 8D     	call Comprueba_limite_horizontal
  24+ 8DAE CD 53 8E     	call Comprueba_limite_vertical
  25+ 8DB1
  26+ 8DB1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DB1
  28+ 8DB1 CD A0 8F     3 call calcula_CColumnass
  29+ 8DB4 CD D7 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DB7 CD 2C 90     	call Define_rutina_de_impresion
  31+ 8DBA
  32+ 8DBA 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8DBD CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DBF 32 C9 85     	ld (Ctrl_0),a
  35+ 8DC2
  36+ 8DC2 C9           	ret
  37+ 8DC3
  38+ 8DC3              ; *******************************************************************************************************************************************************************************************
  39+ 8DC3              ;	21/01/23
  40+ 8DC3              ;
  41+ 8DC3              ; 	Comprueba_limite_horizontal.
  42+ 8DC3              ;
  43+ 8DC3              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DC3              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DC3              ;
  46+ 8DC3              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DC3              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DC3              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DC3              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DC3
  51+ 8DC3
  52+ 8DC3
  53+ 8DC3 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DC6 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DC8 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DCA E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DCC 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DCF 18 09            jr 6F
  59+ 8DD1 CB 5F        1 bit 3,a
  60+ 8DD3 28 0A            jr z,2F
  61+ 8DD5 E6 F7            and $f7
  62+ 8DD7 32 C9 85         ld (Ctrl_0),a
  63+ 8DDA CD 2D 8F     6 call Inicializacion
  64+ 8DDD 18 5B            jr 5F
  65+ 8DDF E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DE0
  67+ 8DE0              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DE0              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DE0
  70+ 8DE0 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DE1 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DE4 CD 32 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DE7 67           	ld h,a
  74+ 8DE8 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DE9 CD 32 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DEC 67           	ld h,a
  77+ 8DED A7           	and a
  78+ 8DEE ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DF0 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DF1 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DF4 FE 02        	cp 2
  82+ 8DF6 38 1E        	jr c,3F
  83+ 8DF8 28 1C        	jr z,3F
  84+ 8DFA 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DFB 28 23            jr z,7F
  86+ 8DFD 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DFF 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E01 E1           	pop hl
  89+ 8E02
  90+ 8E02              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E02              ; _para indicar con E="2" en caso necesario.
  92+ 8E02
  93+ 8E02 E5               push hl
  94+ 8E03 C5               push bc
  95+ 8E04 CD 32 93     	call calcula_tercio
  96+ 8E07 FE 01        	cp 1
  97+ 8E09 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E0B CD 3B 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E0E 28 26            jr z,9F
 100+ 8E10 38 24            jr c,9F
 101+ 8E12 1E 00        11 ld e,0
 102+ 8E14 18 22            jr 8F
 103+ 8E16 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E17 28 07        	jr z, 7F
 105+ 8E19 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E1B 1E 00         	ld e,0
 107+ 8E1D E1           	pop hl
 108+ 8E1E 18 04        	jr 4F
 109+ 8E20 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E22 18 15            jr 10F
 111+ 8E24
 112+ 8E24              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E24              ; _para indicar con E="2" en caso necesario.
 114+ 8E24
 115+ 8E24 E5           4 push hl
 116+ 8E25 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E26 CD 32 93     	call calcula_tercio
 118+ 8E29 FE 01        	cp 1
 119+ 8E2B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E2D CD 3B 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E30 28 04            jr z,9F
 122+ 8E32 30 02            jr nc,9F
 123+ 8E34 18 02        	jr 8F
 124+ 8E36 1E 02        9 ld e,2
 125+ 8E38 C1           8 pop bc
 126+ 8E39 E1           10 pop hl
 127+ 8E3A C9           5 ret
 128+ 8E3B
 129+ 8E3B              ; --------------------
 130+ 8E3B              ;
 131+ 8E3B              ; 25/08/22
 132+ 8E3B
 133+ 8E3B CD 32 93     Comprueba_centro call calcula_tercio
 134+ 8E3E 67               ld h,a
 135+ 8E3F 08           	ex af,af
 136+ 8E40 FE 02        	cp 2
 137+ 8E42 38 07        	jr c,1F
 138+ 8E44 28 05        	jr z,1F
 139+ 8E46 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E49 18 03        	jr 2F
 141+ 8E4B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E4E 08           2 ex af,af
 143+ 8E4F A7               and a
 144+ 8E50 ED 42            sbc hl,bc
 145+ 8E52 C9               ret
 146+ 8E53
 147+ 8E53              ; *********************************************************************************************************************************************************************************************
 148+ 8E53              ;
 149+ 8E53              ;   16/8/22
 150+ 8E53              ;
 151+ 8E53              ;	Comprueba_limite_vertical
 152+ 8E53              ;
 153+ 8E53              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E53              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E53              ;
 156+ 8E53
 157+ 8E53 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E56 7D           	ld a,l
 159+ 8E57 E6 1F        	and $1F
 160+ 8E59 57           	ld d,a
 161+ 8E5A 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E5D BA           	cp d 											; Límite - Posición.
 163+ 8E5E 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E5F 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E62 CB 47        	bit 0,a
 166+ 8E64 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E66
 168+ 8E66              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E66
 170+ 8E66 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E67 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E69
 173+ 8E69              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E69              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E69
 176+ 8E69 3A A1 85         ld a,(Coordenada_X)
 177+ 8E6C 16 0F            ld d,Centro_izquierda
 178+ 8E6E A7               and a
 179+ 8E6F 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E70 28 1E            jr z,3F
 181+ 8E72 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E74              ;                                                    ; _salimos sin modificar nada.
 183+ 8E74 18 0E            jr 2F
 184+ 8E76 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E77 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E79
 187+ 8E79              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E79              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E79
 190+ 8E79 3A A1 85         ld a,(Coordenada_X)
 191+ 8E7C 16 10            ld d,Centro_derecha
 192+ 8E7E A7               and a
 193+ 8E7F 92               sub d
 194+ 8E80 28 0E            jr z,3F
 195+ 8E82 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E84              ;                                                    ; _salimos sin modificar nada.
 197+ 8E84 CB 43        2 bit 0,e
 198+ 8E86 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E88 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E89 CD 1D 8F         call Modificaccionne
 201+ 8E8C C1           	pop bc
 202+ 8E8D CD 2D 8F         call Inicializacion
 203+ 8E90 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E91
 205+ 8E91              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E91
 207+ 8E91 C5           4 push bc
 208+ 8E92 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E95 0A           	ld a,(bc)
 210+ 8E96 3D           	dec a
 211+ 8E97 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E98 7D           	ld a,l
 213+ 8E99 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E9A CB 47        	bit 0,a
 215+ 8E9C 28 03        	jr z,5F
 216+ 8E9E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E9F 18 2E        	jr 7F
 218+ 8EA1
 219+ 8EA1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EA1
 221+ 8EA1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EA2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EA3 3A C9 85     	ld a,(Ctrl_0)
 224+ 8EA6 CB 4F        	bit 1,a
 225+ 8EA8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EAA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EAB
 228+ 8EAB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EAB
 230+ 8EAB 1C               inc e
 231+ 8EAC 1D               dec e
 232+ 8EAD 20 07            jr nz,12F
 233+ 8EAF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EB0 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EB1 22 9D 85     	ld (Posicion_actual),hl
 236+ 8EB4 18 44        13 jr 9F
 237+ 8EB6 CB 43        12 bit 0,e
 238+ 8EB8 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8EBA              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8EBA C1           	pop bc
 241+ 8EBB 18 D3        	jr 3B
 242+ 8EBD 80           14 add b
 243+ 8EBE 6F               ld l,a
 244+ 8EBF 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EC2 CD 1D 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EC5 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EC7 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EC9 32 C9 85         ld (Ctrl_0),a
 249+ 8ECC F1           	pop af
 250+ 8ECD 18 2B        	jr 9F
 251+ 8ECF
 252+ 8ECF              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8ECF
 254+ 8ECF F5           7 push af
 255+ 8ED0 3A C9 85     	ld a,(Ctrl_0)
 256+ 8ED3 CB 47        	bit 0,a
 257+ 8ED5 20 1D        	jr nz,8F
 258+ 8ED7 F1           	pop af
 259+ 8ED8
 260+ 8ED8              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8ED8
 262+ 8ED8 1C           	inc e
 263+ 8ED9 1D               dec e
 264+ 8EDA 20 07            jr nz,10F
 265+ 8EDC 90           	sub b
 266+ 8EDD 6F               ld l,a
 267+ 8EDE 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EE1 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EE3              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EE3 CB 43        10 bit 0,e
 271+ 8EE5 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EE7              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EE7 C1           	pop bc
 274+ 8EE8 18 A6        	jr 3B
 275+ 8EEA 90           16 sub b
 276+ 8EEB 6F               ld l,a
 277+ 8EEC 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EEF CD 1D 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EF2 18 06            jr 9F
 280+ 8EF4 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EF6 32 C9 85         ld (Ctrl_0),a
 282+ 8EF9 F1           	pop af
 283+ 8EFA C1           9 pop bc
 284+ 8EFB 1E 00        	ld e,0
 285+ 8EFD CD 2D 8F         call Inicializacion
 286+ 8F00 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F01 08           	ex af,af
 288+ 8F02 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F03 18 8B            jr 3B
 290+ 8F05
 291+ 8F05              ; --------------------
 292+ 8F05
 293+ 8F05 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F07 CD 81 90     1 call PreviousScan
 295+ 8F0A 10 FB            djnz 1B
 296+ 8F0C 22 9D 85     	ld (Posicion_actual),hl
 297+ 8F0F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F10 C9           	ret
 299+ 8F11
 300+ 8F11              ; --------------------
 301+ 8F11
 302+ 8F11 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F13 CD 72 90     1 call NextScan
 304+ 8F16 10 FB            djnz 1B
 305+ 8F18 22 9D 85     	ld (Posicion_actual),hl
 306+ 8F1B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F1C C9           	ret
 308+ 8F1D
 309+ 8F1D              ; --------------------
 310+ 8F1D              ;
 311+ 8F1D              ;	22/01/23
 312+ 8F1D              ;
 313+ 8F1D              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F1D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F1D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F1D
 317+ 8F1D
 318+ 8F1D              Modificaccionne
 319+ 8F1D
 320+ 8F1D 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F20 FE 02        	cp 2
 322+ 8F22 CC 05 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F25 DC 05 8F         call c,Modifica_Pos_actual
 324+ 8F28 C8           	ret z
 325+ 8F29 CD 11 8F         call Modifica_Pos_actual2
 326+ 8F2C C9               ret
 327+ 8F2D
 328+ 8F2D              ; *************************************************************************************************************************************************************************************************
 329+ 8F2D              ;
 330+ 8F2D              ;	13/8/22
 331+ 8F2D              ;
 332+ 8F2D              ;	Inicializacion
 333+ 8F2D              ;
 334+ 8F2D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F2D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F2D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F2D              ;
 338+ 8F2D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F2D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F2D              ;	_ desaparece/aparece.
 341+ 8F2D
 342+ 8F2D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F2D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F2D              ;
 345+ 8F2D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F2D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F2D              ; 		   [E] ="0"
 348+ 8F2D
 349+ 8F2D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F2D
 351+ 8F2D CD 32 93     Inicializacion call calcula_tercio
 352+ 8F30 28 36        	jr z,primit
 353+ 8F32 E6 02        	and 2
 354+ 8F34 20 07        	jr nz,segmit
 355+ 8F36 7D           	ld a,l
 356+ 8F37 FE 7F        	cp $7f
 357+ 8F39 38 2D        	jr c,primit
 358+ 8F3B 28 2B        	jr z,primit
 359+ 8F3D CD 9A 8F     segmit call column
 360+ 8F40 38 13        	jr c,tercuad
 361+ 8F42 3E 04        cuarcuad ld a,4
 362+ 8F44 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F47 21 20 48     	ld hl,$4820
 364+ 8F4A 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F4D 21 D5 85     	ld hl,Limite_vertical
 366+ 8F50 36 0D        	ld (hl),$0d
 367+ 8F52 08           	ex af,af
 368+ 8F53 18 3C        	jr 1F
 369+ 8F55              tercuad
 370+ 8F55 3E 03        	ld a,3
 371+ 8F57 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F5A 21 20 48     	ld hl,$4820
 373+ 8F5D 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F60 21 D5 85     	ld hl,Limite_vertical
 375+ 8F63 36 12        	ld (hl),$12
 376+ 8F65 08           	ex af,af
 377+ 8F66 18 29        	jr 1F
 378+ 8F68 CD 9A 8F     primit call column
 379+ 8F6B 38 13        	jr c, primcuad
 380+ 8F6D              segcuad
 381+ 8F6D 3E 02        	ld a,2
 382+ 8F6F 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F72 21 C0 4F     	ld hl,$4fc0
 384+ 8F75 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F78 21 D5 85     	ld hl,Limite_vertical
 386+ 8F7B 36 0D        	ld (hl),$0d
 387+ 8F7D 08           	ex af,af
 388+ 8F7E 18 11        	jr 1F
 389+ 8F80              primcuad
 390+ 8F80 3E 01        	ld a,1
 391+ 8F82 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F85 21 C0 4F     	ld hl,$4fc0
 393+ 8F88 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F8B 21 D5 85     	ld hl,Limite_vertical
 395+ 8F8E 36 12        	ld (hl),$12
 396+ 8F90 08           	ex af,af
 397+ 8F91 CD 5E 96     1 call Genera_coordenadas
 398+ 8F94 21 C9 85     	ld hl,Ctrl_0
 399+ 8F97 CB EE        	set 5,(hl)
 400+ 8F99 C9           	ret
 401+ 8F9A
 402+ 8F9A              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F9A
 404+ 8F9A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F9A              ;
 406+ 8F9A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F9A
 408+ 8F9A 7D           column ld a,l
 409+ 8F9B E6 1F        	and $1f
 410+ 8F9D FE 10         	cp $10
 411+ 8F9F C9            	ret
 412+ 8FA0
 413+ 8FA0              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FA0              ;
 415+ 8FA0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FA0              ;
 417+ 8FA0              ; 14/12/22
 418+ 8FA0              ;
 419+ 8FA0              ;	Modifica: A y BC.
 420+ 8FA0
 421+ 8FA0 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FA3 E6 01        	and 1
 423+ 8FA5 28 17        	jr z,1F
 424+ 8FA7
 425+ 8FA7              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FA7
 427+ 8FA7 3A A1 85     	ld a,(Coordenada_X)
 428+ 8FAA 47           	ld b,a
 429+ 8FAB 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FAC 79           	ld a,c
 431+ 8FAD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FAE 38 08        	jr c,2F
 433+ 8FB0 47           	ld b,a
 434+ 8FB1 79           	ld a,c
 435+ 8FB2 90           	sub b
 436+ 8FB3 32 D2 85     	ld (Columnas),a
 437+ 8FB6 18 1B        	jr 4F
 438+ 8FB8 79           2 ld a,c
 439+ 8FB9 32 D2 85     	ld (Columnas),a
 440+ 8FBC 18 15        	jr 4F
 441+ 8FBE
 442+ 8FBE              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8FBE
 444+ 8FBE 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FC1 81           	add c
 446+ 8FC2 3D           	dec a
 447+ 8FC3 D6 1F        	sub $1f
 448+ 8FC5 38 08        	jr c,3F
 449+ 8FC7 47           	ld b,a
 450+ 8FC8 79           	ld a,c
 451+ 8FC9 90           	sub b
 452+ 8FCA 32 D2 85     	ld (Columnas),a
 453+ 8FCD 18 04        	jr 4F
 454+ 8FCF 79           3 ld a,c
 455+ 8FD0 32 D2 85     	ld (Columnas),a
 456+ 8FD3 D9           4 exx
 457+ 8FD4 4F           	ld c,a
 458+ 8FD5 D9           	exx
 459+ 8FD6 C9            ret
 460+ 8FD7
 461+ 8FD7              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FD7              ;
 463+ 8FD7              ; 7/1/23
 464+ 8FD7              ;
 465+ 8FD7              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FD7              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FD7              ;
 468+ 8FD7              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FD7              ;	DESTRUYE: HL,B Y A.
 470+ 8FD7
 471+ 8FD7 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FDA FE 02        	cp 2
 473+ 8FDC 38 18        	jr c,1F
 474+ 8FDE 28 16        	jr z,1F
 475+ 8FE0 E6 01        	and 1
 476+ 8FE2 28 0D        	jr z,3F
 477+ 8FE4
 478+ 8FE4              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FE4
 480+ 8FE4 CD 20 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FE7
 482+ 8FE7 7D           9 ld a,l
 483+ 8FE8 E6 1F        	and $1f
 484+ 8FEA 28 2A        	jr z,7F
 485+ 8FEC 2B           	dec hl
 486+ 8FED 10 F8        	djnz 9B
 487+ 8FEF 18 25        	jr 7F
 488+ 8FF1
 489+ 8FF1              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FF1
 491+ 8FF1 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FF4 18 20        	jr 7F
 493+ 8FF6
 494+ 8FF6 28 14        1 jr z,2F
 495+ 8FF8
 496+ 8FF8              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FF8
 498+ 8FF8 CD 20 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FFB 7D           4 ld a,l
 500+ 8FFC E6 1F        	and $1f
 501+ 8FFE 28 03        	jr z,6F
 502+ 9000 2B           	dec hl
 503+ 9001 10 F8        	djnz 4B
 504+ 9003 06 0F        6 ld b,15
 505+ 9005 CD 81 90     5 call PreviousScan
 506+ 9008 10 FB        	djnz 5B
 507+ 900A 18 0A        	jr 7F
 508+ 900C
 509+ 900C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 900C
 511+ 900C CD 20 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 900F 06 0F        	ld b,15
 513+ 9011 CD 81 90     8 call PreviousScan
 514+ 9014 10 FB        	djnz 8B
 515+ 9016
 516+ 9016 E5           7 push hl
 517+ 9017 DD E1        	pop ix
 518+ 9019
 519+ 9019 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 901C E5           	push hl
 521+ 901D FD E1        	pop iy
 522+ 901F
 523+ 901F C9           	ret
 524+ 9020
 525+ 9020              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9020              ;
 527+ 9020              ;	2/1/23
 528+ 9020              ;
 529+ 9020              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9020              ;
 531+ 9020              ;	Tras esta rutina tenemos:
 532+ 9020              ;
 533+ 9020              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9020              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9020              ;
 536+ 9020              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9020
 538+ 9020 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 9023 3A D2 85     	ld a,(Columnas)
 540+ 9026 3D           	dec a
 541+ 9027 20 01        	jr nz,1F
 542+ 9029 3C           	inc a
 543+ 902A 47           1 ld b,a
 544+ 902B C9           	ret
 545+ 902C
 546+ 902C              ; --------------------------------------------------------------------------------------------------------------------
 547+ 902C              ;
 548+ 902C              ;	3/1/23
 549+ 902C              ;
 550+ 902C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 902C              ;
 552+ 902C              ;	Destruye: A,B,HL y DE.
 553+ 902C
 554+ 902C              Define_rutina_de_impresion
 555+ 902C
 556+ 902C 3A 9C 85     	ld a,(Columns)
 557+ 902F 47           	ld b,a
 558+ 9030 3A D2 85     	ld a,(Columnas)
 559+ 9033 B8           	cp b
 560+ 9034 20 0D        	jr nz,2f
 561+ 9036
 562+ 9036              ;	La entidad se imprime entera.
 563+ 9036
 564+ 9036 21 02 91     	ld hl, Indice_entidades_completas
 565+ 9039 E6 01        	and 1
 566+ 903B 28 02        	jr z,1F
 567+ 903D
 568+ 903D 23           	inc hl
 569+ 903E 23           	inc hl
 570+ 903F
 571+ 903F CD 17 88     1 call Extrae_address
 572+ 9042 C9           	ret		;	ret
 573+ 9043
 574+ 9043              ;	La entidad no se imprime entera en pantalla.
 575+ 9043
 576+ 9043 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9046 E6 01        	and 1
 578+ 9048 28 17        	jr z,3F
 579+ 904A
 580+ 904A              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 904A
 582+ 904A 21 06 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 904D 3A 9C 85     4 ld a,(Columns)
 584+ 9050 E6 01        	and 1
 585+ 9052 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9054
 587+ 9054 23           	inc hl
 588+ 9055 23           	inc hl
 589+ 9056
 590+ 9056 3A D2 85     	ld a,(Columnas)
 591+ 9059 E6 01        	and 1
 592+ 905B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 905D
 594+ 905D 23           	inc hl
 595+ 905E 23           	inc hl
 596+ 905F
 597+ 905F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9061
 599+ 9061 21 0C 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9064 18 E7        	jr 4B
 601+ 9066
 602+ 9066              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9066              ;
 604+ 9066              ;	Prepara_draw
 605+ 9066              ;
 606+ 9066              ;	Es una rutina de carga.
 607+ 9066              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9066              ;
 609+ 9066              ;	FUNCIONAMIENTO:
 610+ 9066              ;
 611+ 9066              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9066              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9066              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9066              ;
 615+ 9066              ;	DESTRUYE:
 616+ 9066              ;
 617+ 9066              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9066
 619+ 9066 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9069 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 906A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 906B 4E           	ld c,(hl)
 623+ 906C 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 906F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9071 C9           	ret
 626+ 9072
 627+ 9072              ;----------------------------------------------------------------------------------------------------------------
 628+ 9072              ;
 629+ 9072              ;	5/08/22
 630+ 9072              ;
 631+ 9072              ;   NextScan.
 632+ 9072              ;
 633+ 9072              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9072              ;
 635+ 9072              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9072              ;
 637+ 9072              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9072              ;
 639+ 9072              ;       DESTRUIDOS: AF y HL !!!
 640+ 9072              ;
 641+ 9072              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9072              ;
 643+ 9072
 644+ 9072 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9073 7C               ld a,h
 646+ 9074 E6 07            and 7
 647+ 9076 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9077
 649+ 9077 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9078 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 907A 6F               ld l,a
 652+ 907B D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 907C
 654+ 907C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 907D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 907F 67               ld h,a
 657+ 9080 C9               ret
 658+ 9081
 659+ 9081              ;----------------------------------------------------------------------------------------------------------------
 660+ 9081              ;
 661+ 9081              ;	5/08/22
 662+ 9081              ;
 663+ 9081              ;   PreviousScan.
 664+ 9081              ;
 665+ 9081              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9081              ;
 667+ 9081              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9081              ;
 669+ 9081              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9081              ;
 671+ 9081              ;       DESTRUIDOS: AF y HL !!!
 672+ 9081              ;
 673+ 9081              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9081              ;
 675+ 9081
 676+ 9081 7C           PreviousScan ld a,h
 677+ 9082 25               dec h               ; Dec H.
 678+ 9083 E6 07            and 7
 679+ 9085 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9086
 681+ 9086 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9087 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9089 6F               ld l,a
 684+ 908A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 908B
 686+ 908B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 908C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 908E 67               ld h,a
 689+ 908F C9               ret
 690+ 9090
 691+ 9090              ; -----------------------------------------------------------------------------------
 692+ 9090              ;
 693+ 9090              ;	28/2/23
 694+ 9090              ;
 695+ 9090              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9090              ;	Extrae fotos de Album_de_fotos.
 697+ 9090
 698+ 9090              Extrae_foto_entidades
 699+ 9090
 700+ 9090 3A DE 85     	ld a,(Numero_de_malotes)
 701+ 9093 A7           	and a
 702+ 9094 C8           	ret z
 703+ 9095 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9099 31 00 70     	ld sp,Album_de_fotos
 705+ 909C
 706+ 909C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 909E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 909F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90A0
 710+ 90A0 ED 73 E1 85  	ld (Stack_2),sp
 711+ 90A4 ED 7B DF 85  	ld sp,(Stack)
 712+ 90A8
 713+ 90A8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90A8
 715+ 90A8 3E CD        	ld a,$cd
 716+ 90AA 32 B2 90     	ld (Imprime),a
 717+ 90AD EB           	ex de,hl
 718+ 90AE 22 B3 90     	ld (Imprime+1),hl
 719+ 90B1 EB           	ex de,hl
 720+ 90B2
 721+ 90B2              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90B2
 723+ 90B2 00 00 00     Imprime db 0,0,0
 724+ 90B5
 725+ 90B5 3A DE 85     	ld a,(Numero_de_malotes)
 726+ 90B8 3D           	dec a
 727+ 90B9 28 09        	jr z,1F
 728+ 90BB 32 DE 85      	ld (Numero_de_malotes),a
 729+ 90BE
 730+ 90BE ED 7B E1 85   	ld sp,(Stack_2)
 731+ 90C2 18 D8        	jr 2B
 732+ 90C4
 733+ 90C4 AF           1 xor a
 734+ 90C5 32 E1 85     	ld (Stack_2),a
 735+ 90C8 C9           	ret
 736+ 90C9
 737+ 90C9              ; -----------------------------------------------------------------------------------
 738+ 90C9              ;
 739+ 90C9              ;	28/2/23
 740+ 90C9              ;
 741+ 90C9              ;	Pinta los disparos generados.
 742+ 90C9
 743+ 90C9              Extrae_foto_disparos
 744+ 90C9
 745+ 90C9 3A E7 85     	ld a,(Numero_de_disparotes)
 746+ 90CC A7           	and a
 747+ 90CD C8           	ret z
 748+ 90CE ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 90D2 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 90D5
 751+ 90D5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 90D7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 90D8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 90D9
 755+ 90D9 ED 73 E1 85  	ld (Stack_2),sp
 756+ 90DD ED 7B DF 85  	ld sp,(Stack)
 757+ 90E1
 758+ 90E1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 90E1
 760+ 90E1 3E CD        	ld a,$cd
 761+ 90E3 32 EB 90     	ld (Imprime2),a
 762+ 90E6 EB           	ex de,hl
 763+ 90E7 22 EC 90     	ld (Imprime2+1),hl
 764+ 90EA EB           	ex de,hl
 765+ 90EB
 766+ 90EB              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 90EB
 768+ 90EB 00 00 00     Imprime2 db 0,0,0
 769+ 90EE
 770+ 90EE 3A E7 85     	ld a,(Numero_de_disparotes)
 771+ 90F1 3D           	dec a
 772+ 90F2 28 09        	jr z,1F
 773+ 90F4 32 E7 85      	ld (Numero_de_disparotes),a
 774+ 90F7
 775+ 90F7 ED 7B E1 85  	ld sp,(Stack_2)
 776+ 90FB 18 D8        	jr 2B
 777+ 90FD
 778+ 90FD AF           1 xor a
 779+ 90FE 32 E1 85     	ld (Stack_2),a
 780+ 9101 C9           	ret
 781+ 9102
# file closed: Draw_XOR.asm
1041  9102              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9102              ;   índices de Rutinas de impresión.
   2+ 9102
   3+ 9102 12 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9104 3F 91            defw Pinta_Amadeus_3x2
   5+ 9106
   6+ 9106 95 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9108 35 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 910A E9 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 910C
  10+ 910C BF 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 910E C3 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9110 77 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9112
  14+ 9112
  15+ 9112              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9112              ;
  17+ 9112              ;   12/12/22
  18+ 9112              ;
  19+ 9112              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9112              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9112              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9112              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9112              ;
  24+ 9112              ;   Modifica: DE y HL.
  25+ 9112
  26+ 9112 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9116 FD F9        	ld sp,iy
  28+ 9118 06 10            ld b,16
  29+ 911A D1           1 pop de
  30+ 911B 7B               ld a,e
  31+ 911C AE               xor (hl)
  32+ 911D 77           	ld (hl),a
  33+ 911E 23           	inc hl
  34+ 911F 7A               ld a,d
  35+ 9120 AE               xor (hl)
  36+ 9121 77           	ld (hl),a
  37+ 9122 2B           	dec hl
  38+ 9123 24           	inc h
  39+ 9124 7C               ld a,h
  40+ 9125 E6 07            and 7
  41+ 9127 20 0A            jr nz,2F
  42+ 9129 7D               ld a,l
  43+ 912A C6 20            add a,$20
  44+ 912C 6F               ld l,a
  45+ 912D 38 04            jr c,2F
  46+ 912F 7C               ld a,h
  47+ 9130 D6 08            sub 8
  48+ 9132 67               ld h,a
  49+ 9133 7C           2 ld a,h
  50+ 9134 FE 58            cp $58
  51+ 9136 28 02            jr z,3F
  52+ 9138 10 E0            djnz 1B
  53+ 913A ED 7B DF 85  3 ld sp,(Stack)
  54+ 913E C9           	ret
  55+ 913F
  56+ 913F ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9143 FD F9        	ld sp,iy
  58+ 9145 06 08            ld b,8
  59+ 9147 D1           1 pop de
  60+ 9148 7B               ld a,e
  61+ 9149 AE               xor (hl)
  62+ 914A 77           	ld (hl),a
  63+ 914B 23           	inc hl
  64+ 914C 7A               ld a,d
  65+ 914D AE               xor (hl)
  66+ 914E 77           	ld (hl),a
  67+ 914F 23           	inc hl
  68+ 9150 D1           	pop de
  69+ 9151 7B               ld a,e
  70+ 9152 AE               xor (hl)
  71+ 9153 77           	ld (hl),a
  72+ 9154 2B           	dec hl
  73+ 9155 2B           	dec hl
  74+ 9156 24           	inc h
  75+ 9157 7C               ld a,h
  76+ 9158 E6 07            and 7
  77+ 915A 20 0A            jr nz,2F
  78+ 915C 7D               ld a,l
  79+ 915D C6 20            add a,$20
  80+ 915F 6F               ld l,a
  81+ 9160 38 04            jr c,2F
  82+ 9162 7C               ld a,h
  83+ 9163 D6 08            sub 8
  84+ 9165 67               ld h,a
  85+ 9166 7C           2 ld a,h
  86+ 9167 FE 58            cp $58
  87+ 9169 28 25            jr z,4F
  88+ 916B 7A               ld a,d
  89+ 916C AE               xor (hl)
  90+ 916D 77               ld (hl),a
  91+ 916E D1           	pop de
  92+ 916F 23           	inc hl
  93+ 9170 7B               ld a,e
  94+ 9171 AE               xor (hl)
  95+ 9172 77           	ld (hl),a
  96+ 9173 23           	inc hl
  97+ 9174 7A               ld a,d
  98+ 9175 AE               xor (hl)
  99+ 9176 77           	ld (hl),a
 100+ 9177 2B           	dec hl
 101+ 9178 2B           	dec hl
 102+ 9179 24           	inc h
 103+ 917A 7C               ld a,h
 104+ 917B E6 07            and 7
 105+ 917D 20 0A            jr nz,3F
 106+ 917F 7D               ld a,l
 107+ 9180 C6 20            add a,$20
 108+ 9182 6F               ld l,a
 109+ 9183 38 04            jr c,3F
 110+ 9185 7C               ld a,h
 111+ 9186 D6 08            sub 8
 112+ 9188 67               ld h,a
 113+ 9189 7C           3 ld a,h
 114+ 918A FE 58            cp $58
 115+ 918C 28 02            jr z,4F
 116+ 918E 10 B7            djnz 1B
 117+ 9190 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9194 C9           	ret
 119+ 9195
 120+ 9195              ; ---------------------------------------------------
 121+ 9195
 122+ 9195 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9199 FD F9        	ld sp,iy
 124+ 919B
 125+ 919B              ; >>>
 126+ 919B
 127+ 919B 06 10            ld b,16
 128+ 919D D1           1 pop de
 129+ 919E 7A           	ld a,d
 130+ 919F AE           	xor (hl)
 131+ 91A0 77           	ld (hl),a
 132+ 91A1 24           	inc h
 133+ 91A2 7C               ld a,h
 134+ 91A3 E6 07            and 7
 135+ 91A5 20 0C            jr nz,2F
 136+ 91A7 7D               ld a,l
 137+ 91A8 C6 20            add a,$20
 138+ 91AA 6F               ld l,a
 139+ 91AB 38 06            jr c,2F
 140+ 91AD 7C               ld a,h
 141+ 91AE D6 08            sub 8
 142+ 91B0 67               ld h,a
 143+ 91B1 18 00            jr 2F
 144+ 91B3 7C           2 ld a,h
 145+ 91B4 FE 58            cp $58
 146+ 91B6 28 02            jr z,3F
 147+ 91B8 10 E3            djnz 1B
 148+ 91BA ED 7B DF 85  3 ld sp,(Stack)
 149+ 91BE C9           	ret
 150+ 91BF
 151+ 91BF ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91C3 FD F9        	ld sp,iy
 153+ 91C5
 154+ 91C5              ; >>>
 155+ 91C5
 156+ 91C5 06 10            ld b,16
 157+ 91C7 D1           1 pop de
 158+ 91C8 7B           	ld a,e
 159+ 91C9 AE           	xor (hl)
 160+ 91CA 77           	ld (hl),a
 161+ 91CB 24           	inc h
 162+ 91CC 7C               ld a,h
 163+ 91CD E6 07            and 7
 164+ 91CF 20 0C            jr nz,2F
 165+ 91D1 7D               ld a,l
 166+ 91D2 C6 20            add a,$20
 167+ 91D4 6F               ld l,a
 168+ 91D5 38 06            jr c,2F
 169+ 91D7 7C               ld a,h
 170+ 91D8 D6 08            sub 8
 171+ 91DA 67               ld h,a
 172+ 91DB 18 00            jr 2F
 173+ 91DD 7C           2 ld a,h
 174+ 91DE FE 58            cp $58
 175+ 91E0 28 02            jr z,3F
 176+ 91E2 10 E3            djnz 1B
 177+ 91E4 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91E8 C9           	ret
 179+ 91E9
 180+ 91E9              ; ---------------------------------------------------
 181+ 91E9
 182+ 91E9 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91ED FD F9        	ld sp,iy
 184+ 91EF 06 08            ld b,8
 185+ 91F1 D1           1 pop de
 186+ 91F2 7A           	ld a,d
 187+ 91F3 AE           	xor (hl)
 188+ 91F4 77           	ld (hl),a
 189+ 91F5 23           	inc hl
 190+ 91F6 D1           	pop de
 191+ 91F7 7B           	ld a,e
 192+ 91F8 AE           	xor (hl)
 193+ 91F9 77           	ld (hl),a
 194+ 91FA 2B           	dec hl
 195+ 91FB 24            	inc h
 196+ 91FC 7C               ld a,h
 197+ 91FD E6 07            and 7
 198+ 91FF 20 0A            jr nz,2F
 199+ 9201 7D               ld a,l
 200+ 9202 C6 20            add a,$20
 201+ 9204 6F               ld l,a
 202+ 9205 38 04            jr c,2F
 203+ 9207 7C               ld a,h
 204+ 9208 D6 08            sub 8
 205+ 920A 67               ld h,a
 206+ 920B 7C           2 ld a,h
 207+ 920C FE 58            cp $58
 208+ 920E 28 20            jr z,4F
 209+ 9210 D1               pop de
 210+ 9211 7B           	ld a,e
 211+ 9212 AE           	xor (hl)
 212+ 9213 77           	ld (hl),a
 213+ 9214 23           	inc hl
 214+ 9215 7A           	ld a,d
 215+ 9216 AE           	xor (hl)
 216+ 9217 77           	ld (hl),a
 217+ 9218 2B           	dec hl
 218+ 9219 24           	inc h
 219+ 921A 7C               ld a,h
 220+ 921B E6 07            and 7
 221+ 921D 20 0A            jr nz,3F
 222+ 921F 7D               ld a,l
 223+ 9220 C6 20            add a,$20
 224+ 9222 6F               ld l,a
 225+ 9223 38 04            jr c,3F
 226+ 9225 7C               ld a,h
 227+ 9226 D6 08            sub 8
 228+ 9228 67               ld h,a
 229+ 9229 7C           3 ld a,h
 230+ 922A FE 58            cp $58
 231+ 922C 28 02            jr z,4F
 232+ 922E 10 C1            djnz 1B
 233+ 9230 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9234 C9           	ret
 235+ 9235
 236+ 9235 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9239 FD F9        	ld sp,iy
 238+ 923B 06 08            ld b,8
 239+ 923D D1           1 pop de
 240+ 923E D1           	pop de
 241+ 923F 7B           	ld a,e
 242+ 9240 AE           	xor (hl)
 243+ 9241 77           	ld (hl),a
 244+ 9242 24            	inc h
 245+ 9243 7C               ld a,h
 246+ 9244 E6 07            and 7
 247+ 9246 20 0A            jr nz,2F
 248+ 9248 7D               ld a,l
 249+ 9249 C6 20            add a,$20
 250+ 924B 6F               ld l,a
 251+ 924C 38 04            jr c,2F
 252+ 924E 7C               ld a,h
 253+ 924F D6 08            sub 8
 254+ 9251 67               ld h,a
 255+ 9252 7C           2 ld a,h
 256+ 9253 FE 58            cp $58
 257+ 9255 28 1B            jr z,4F
 258+ 9257 D1               pop de
 259+ 9258 7A           	ld a,d
 260+ 9259 AE           	xor (hl)
 261+ 925A 77           	ld (hl),a
 262+ 925B 24           	inc h
 263+ 925C 7C               ld a,h
 264+ 925D E6 07            and 7
 265+ 925F 20 0A            jr nz,3F
 266+ 9261 7D               ld a,l
 267+ 9262 C6 20            add a,$20
 268+ 9264 6F               ld l,a
 269+ 9265 38 04            jr c,3F
 270+ 9267 7C               ld a,h
 271+ 9268 D6 08            sub 8
 272+ 926A 67               ld h,a
 273+ 926B 7C           3 ld a,h
 274+ 926C FE 58            cp $58
 275+ 926E 28 02            jr z,4F
 276+ 9270 10 CB            djnz 1B
 277+ 9272 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9276 C9           	ret
 279+ 9277
 280+ 9277 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 927B FD F9        	ld sp,iy
 282+ 927D 06 08            ld b,8
 283+ 927F D1           1 pop de
 284+ 9280 7B           	ld a,e
 285+ 9281 AE           	xor (hl)
 286+ 9282 77           	ld (hl),a
 287+ 9283 23           	inc hl
 288+ 9284 7A           	ld a,d
 289+ 9285 AE           	xor (hl)
 290+ 9286 77           	ld (hl),a
 291+ 9287 2B           	dec hl
 292+ 9288 24             	inc h
 293+ 9289 7C               ld a,h
 294+ 928A E6 07            and 7
 295+ 928C 20 0A            jr nz,2F
 296+ 928E 7D               ld a,l
 297+ 928F C6 20            add a,$20
 298+ 9291 6F               ld l,a
 299+ 9292 38 04            jr c,2F
 300+ 9294 7C               ld a,h
 301+ 9295 D6 08            sub 8
 302+ 9297 67               ld h,a
 303+ 9298 7C           2 ld a,h
 304+ 9299 FE 58            cp $58
 305+ 929B 28 21            jr z,4F
 306+ 929D D1               pop de
 307+ 929E 7A           	ld a,d
 308+ 929F AE           	xor (hl)
 309+ 92A0 77           	ld (hl),a
 310+ 92A1 23           	inc hl
 311+ 92A2 D1               pop de
 312+ 92A3 7B           	ld a,e
 313+ 92A4 AE           	xor (hl)
 314+ 92A5 77           	ld (hl),a
 315+ 92A6 2B           	dec hl
 316+ 92A7 24           	inc h
 317+ 92A8 7C               ld a,h
 318+ 92A9 E6 07            and 7
 319+ 92AB 20 0A            jr nz,3F
 320+ 92AD 7D               ld a,l
 321+ 92AE C6 20            add a,$20
 322+ 92B0 6F               ld l,a
 323+ 92B1 38 04            jr c,3F
 324+ 92B3 7C               ld a,h
 325+ 92B4 D6 08            sub 8
 326+ 92B6 67               ld h,a
 327+ 92B7 7C           3 ld a,h
 328+ 92B8 FE 58            cp $58
 329+ 92BA 28 02            jr z,4F
 330+ 92BC 10 C1            djnz 1B
 331+ 92BE ED 7B DF 85  4 ld sp,(Stack)
 332+ 92C2 C9           	ret
 333+ 92C3
 334+ 92C3 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92C7 FD F9        	ld sp,iy
 336+ 92C9 06 08            ld b,8
 337+ 92CB D1           1 pop de
 338+ 92CC 7B           	ld a,e
 339+ 92CD AE           	xor (hl)
 340+ 92CE 77           	ld (hl),a
 341+ 92CF 24            	inc h
 342+ 92D0 7C               ld a,h
 343+ 92D1 E6 07            and 7
 344+ 92D3 20 0A            jr nz,2F
 345+ 92D5 7D               ld a,l
 346+ 92D6 C6 20            add a,$20
 347+ 92D8 6F               ld l,a
 348+ 92D9 38 04            jr c,2F
 349+ 92DB 7C               ld a,h
 350+ 92DC D6 08            sub 8
 351+ 92DE 67               ld h,a
 352+ 92DF 7C           2 ld a,h
 353+ 92E0 FE 58            cp $58
 354+ 92E2 28 1C            jr z,4F
 355+ 92E4 D1               pop de
 356+ 92E5 7A           	ld a,d
 357+ 92E6 AE           	xor (hl)
 358+ 92E7 77           	ld (hl),a
 359+ 92E8 24           	inc h
 360+ 92E9 7C               ld a,h
 361+ 92EA E6 07            and 7
 362+ 92EC 20 0A            jr nz,3F
 363+ 92EE 7D               ld a,l
 364+ 92EF C6 20            add a,$20
 365+ 92F1 6F               ld l,a
 366+ 92F2 38 04            jr c,3F
 367+ 92F4 7C               ld a,h
 368+ 92F5 D6 08            sub 8
 369+ 92F7 67               ld h,a
 370+ 92F8 7C           3 ld a,h
 371+ 92F9 FE 58            cp $58
 372+ 92FB 28 03            jr z,4F
 373+ 92FD D1               pop de
 374+ 92FE 10 CB            djnz 1B
 375+ 9300 ED 7B DF 85  4 ld sp,(Stack)
 376+ 9304 C9           	ret
 377+ 9305
 378+ 9305              ; ---------------------------------------------------
 379+ 9305              ;
 380+ 9305              ;   27/02/23
 381+ 9305              ;
 382+ 9305              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9305              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9305              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9305
 386+ 9305 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9309 FD F9            ld sp,iy
 388+ 930B 06 02            ld b,2
 389+ 930D D1           1 pop de
 390+ 930E 7B               ld a,e
 391+ 930F AE               xor (hl)
 392+ 9310 77               ld (hl),a
 393+ 9311 23               inc hl
 394+ 9312 7A               ld a,d
 395+ 9313 AE               xor (hl)
 396+ 9314 77               ld (hl),a
 397+ 9315 2B               dec hl
 398+ 9316
 399+ 9316 24               inc h
 400+ 9317 7C               ld a,h
 401+ 9318 E6 07            and 7
 402+ 931A 20 0A            jr nz,2F
 403+ 931C 7D               ld a,l
 404+ 931D C6 20            add a,$20
 405+ 931F 6F               ld l,a
 406+ 9320 38 04            jr c,2F
 407+ 9322 7C               ld a,h
 408+ 9323 D6 08            sub 8
 409+ 9325 67               ld h,a
 410+ 9326 7C           2 ld a,h
 411+ 9327 FE 58            cp $58
 412+ 9329 28 02            jr z,3F
 413+ 932B
 414+ 932B 10 E0            djnz 1B
 415+ 932D ED 7B DF 85  3 ld sp,(Stack)
 416+ 9331 C9               ret
 417+ 9332
# file closed: Rutinas_de_impresion_sprites.asm
1042  9332              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9332              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9332              ;
   3+ 9332              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9332              ;
   5+ 9332              ; *****************************************************************************************************************************************************************************************
   6+ 9332              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9332
   8+ 9332 7C           calcula_tercio ld a,h
   9+ 9333 E6 18        	and $18
  10+ 9335 CB 2F        	sra a
  11+ 9337 CB 2F        	sra a
  12+ 9339 CB 2F        	sra a
  13+ 933B C9           	ret
  14+ 933C
# file closed: calcula_tercio.asm
1043  933C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 933C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 933C              ;
   3+ 933C              ;
   4+ 933C              ;	CLS.
   5+ 933C              ;
   6+ 933C              ;	Limpia la pantalla y define sus atributos.
   7+ 933C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 933C              ;
   9+ 933C              ;	COLORES: 0 ..... NEGRO
  10+ 933C              ;    		 1 ..... AZUL
  11+ 933C              ; 			 2 ..... ROJO
  12+ 933C              ;			 3 ..... MAGENTA
  13+ 933C              ; 			 4 ..... VERDE
  14+ 933C              ; 			 5 ..... CIAN
  15+ 933C              ;			 6 ..... AMARILLO
  16+ 933C              ; 			 7 ..... BLANCO
  17+ 933C              ;
  18+ 933C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 933C              ;
  20+ 933C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 933C
  22+ 933C
  23+ 933C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 933F 11 01 40     	LD DE,$4001
  25+ 9342 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9345 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9347 ED B0        	LDIR
  28+ 9349 01 FF 02     	LD BC,767
  29+ 934C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 934D ED B0        	LDIR
  31+ 934F C9           	ret
  32+ 9350
# file closed: Cls.asm
1044  9350              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9350              ; ******************************************************************************************************************************************************************************************
   2+ 9350              ;
   3+ 9350              ;   22/01/23
   4+ 9350              ;
   5+ 9350              ;	Mov_down
   6+ 9350              ;
   7+ 9350              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9350              ;
   9+ 9350              ;
  10+ 9350 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9353 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9355              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9355              ; 																	; _ en el caso de que no lo haya.
  14+ 9355 3A B3 85     	ld a,(Vel_down)
  15+ 9358 47           	ld b,a
  16+ 9359 2A 9D 85         ld hl,(Posicion_actual)
  17+ 935C CD 32 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 935F E6 02        	and 2
  19+ 9361 28 0F        	jr z,1F
  20+ 9363
  21+ 9363              ; Nos encontramos en el último tercio de pantalla.
  22+ 9363              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9363
  24+ 9363 7C           	ld a,h
  25+ 9364 FE 57        	cp $57
  26+ 9366 20 0A        	jr nz,1F
  27+ 9368 7D           	ld a,l
  28+ 9369 C6 20        	add $20
  29+ 936B 30 05        	jr nc,1F
  30+ 936D
  31+ 936D              ; ------------------------------
  32+ 936D CD 48 96     	call Reaparece_arriba
  33+ 9370              ;	call Reinicio
  34+ 9370              ; ------------------------------
  35+ 9370
  36+ 9370 18 08        	jr 3F
  37+ 9372 CD 72 90     1 call NextScan
  38+ 9375 22 9D 85     	ld (Posicion_actual),hl
  39+ 9378 10 E2            djnz 2B
  40+ 937A CD 5E 96     3 call Genera_coordenadas
  41+ 937D C9           	ret
  42+ 937E
  43+ 937E              ; ******************************************************************************************************************************************************************************************
  44+ 937E              ;
  45+ 937E              ;   22/01/23
  46+ 937E              ;
  47+ 937E              ;	Mov_up
  48+ 937E              ;
  49+ 937E              ; 	Mueve el Sprite hacia arriba.
  50+ 937E              ;
  51+ 937E              ;
  52+ 937E 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9381 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9383              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9383              ; 																		; _ en el caso de que no lo haya.
  56+ 9383 3A B2 85     	ld a,(Vel_up)
  57+ 9386 47           	ld b,a
  58+ 9387 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 938A CD 32 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 938D A7           	and a
  61+ 938E 20 10        	jr nz,1F
  62+ 9390
  63+ 9390              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9390              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9390
  66+ 9390 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9391 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9393 20 0B            jr nz,1F
  69+ 9395 7D               ld a,l
  70+ 9396 D6 20            sub $20
  71+ 9398 30 06            jr nc,1F
  72+ 939A 25               dec h
  73+ 939B
  74+ 939B              ; -----------------------------
  75+ 939B CD 38 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 939E              ;	call Reinicio
  77+ 939E              ; -----------------------------
  78+ 939E
  79+ 939E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93A0 CD 81 90     1 call PreviousScan
  81+ 93A3 22 9D 85     	ld (Posicion_actual),hl
  82+ 93A6 10 E2            djnz 3B
  83+ 93A8 CD 5E 96     2 call Genera_coordenadas
  84+ 93AB C9           	ret
  85+ 93AC
  86+ 93AC              ; ******************************************************************************************************************************************************************************************
  87+ 93AC              ;
  88+ 93AC              ;	19/10/22
  89+ 93AC              ;
  90+ 93AC              ;	Mov_right.
  91+ 93AC              ;
  92+ 93AC              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93AC              ;
  94+ 93AC
  95+ 93AC 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 93AF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93B1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93B1              ; 																	; _ en el caso de que no lo haya.
  99+ 93B1 3A C9 85     	ld a,(Ctrl_0)
 100+ 93B4 CB 77        	bit 6,a
 101+ 93B6 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93B8
 103+ 93B8 CD E6 95     	call Stop_Amadeus_right
 104+ 93BB C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 93BC 18 4D        	jr 8F
 106+ 93BE
 107+ 93BE 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93C1 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93C3 20 46        	jr nz,8F
 110+ 93C5
 111+ 93C5 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93C8 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93C9 28 40        	jr z,8F
 114+ 93CB
 115+ 93CB              ; ---------- ---------- ----------
 116+ 93CB              ;
 117+ 93CB              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93CB
 119+ 93CB 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93CE FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93D0 28 11        	jr z,1F
 122+ 93D2 38 06        	jr c,6F
 123+ 93D4 FE 04        	cp 4
 124+ 93D6 28 14        	jr z,7F
 125+ 93D8 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93DA
 127+ 93DA              ; ---------- ---------- ----------
 128+ 93DA              ;
 129+ 93DA              ; Perfiles de velocidad
 130+ 93DA              ;
 131+ 93DA
 132+ 93DA 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93DD FE FE        	cp $fe
 134+ 93DF 20 2A        	jr nz,8F
 135+ 93E1 18 10        	jr 3F
 136+ 93E3 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93E6 FE FD        	cp $fd
 138+ 93E8 20 21        	jr nz,8F
 139+ 93EA 18 07        	jr 3F
 140+ 93EC 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93EF FE FB        	cp $fb
 142+ 93F1 20 18        	jr nz,8F
 143+ 93F3
 144+ 93F3              ; ---------- ---------- ----------
 145+ 93F3
 146+ 93F3              3
 147+ 93F3 CD 26 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93F6              ;	call Reinicio
 149+ 93F6
 150+ 93F6              ; ---------- ---------- ----------
 151+ 93F6              ;
 152+ 93F6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93F6
 154+ 93F6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93F8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93F9 CD 12 94     	call DESPLZ_DER
 157+ 93FC C1           	pop bc
 158+ 93FD 10 F9        	djnz 5B
 159+ 93FF 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9402 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9403 22 9D 85     	ld (Posicion_actual),hl
 162+ 9406 CD 5E 96     	call Genera_coordenadas
 163+ 9409 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 940B
 165+ 940B              ; ---------- ---------- ----------
 166+ 940B
 167+ 940B 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 940E CD 12 94     	call DESPLZ_DER
 169+ 9411 C9           2 ret
 170+ 9412
 171+ 9412              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9412              ;
 173+ 9412              ;	22/9/22
 174+ 9412              ;
 175+ 9412
 176+ 9412 CD 21 94     DESPLZ_DER call Desplaza_derecha
 177+ 9415 CD 6D 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9418 CD 96 94         call Ciclo_completo
 179+ 941B 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 941E CB FE        	set 7,(hl)
 181+ 9420 C9           	ret
 182+ 9421
 183+ 9421              ; ******************************************************************************************************************************************************************************************
 184+ 9421              ;	15/02/23
 185+ 9421              ;
 186+ 9421
 187+ 9421 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9424 47           	ld b,a
 189+ 9425 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9428 23           1 inc hl
 191+ 9429 23           	inc hl
 192+ 942A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 942C 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 942F CD 17 88     	call Extrae_address
 195+ 9432 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9435
 197+ 9435              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9435
 199+ 9435              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9435              ; Cuántos movimientos hemos hecho ??
 201+ 9435              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9435
 203+ 9435 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9438 EB           	ex de,hl
 205+ 9439 A7           	and a
 206+ 943A ED 52        	sbc hl,de
 207+ 943C CB 3D        	srl l
 208+ 943E 3E 08        6 ld a,8
 209+ 9440 95           	sub l
 210+ 9441 30 1E        	jr nc,3F
 211+ 9443
 212+ 9443              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9443              ; B="0".
 214+ 9443
 215+ 9443 04           4 inc b
 216+ 9444 3C           	inc a
 217+ 9445 20 FC        	jr nz,4B
 218+ 9447 78           	ld a,b
 219+ 9448 08           	ex af,af
 220+ 9449 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 944C 23           5 inc hl
 222+ 944D 23           	inc hl
 223+ 944E 10 FC        	djnz 5B
 224+ 9450 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9453 CD 17 88     	call Extrae_address
 226+ 9456 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9459
 228+ 9459              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9459              ; _(Posicion_actual).
 230+ 9459
 231+ 9459 21 9D 85     	ld hl,Posicion_actual
 232+ 945C 34           	inc (hl)
 233+ 945D 08               ex af,af
 234+ 945E 6F           	ld l,a
 235+ 945F 18 DD        	jr 6B
 236+ 9461
 237+ 9461              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9461
 239+ 9461 47           3 ld b,a
 240+ 9462 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9465 23           2 inc hl
 242+ 9466 23           	inc hl
 243+ 9467 10 FC        	djnz 2B
 244+ 9469 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 946C C9           8 ret
 246+ 946D
 247+ 946D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 946D              ;
 249+ 946D              ;	24/7/22
 250+ 946D              ;
 251+ 946D              ;	modifica_parametros_1er_DESPLZ_2
 252+ 946D              ;
 253+ 946D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 946D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 946D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 946D
 257+ 946D 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9470 A7           	and a
 259+ 9471 20 1F        	jr nz,1F
 260+ 9473 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9475 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9478
 263+ 9478 21 9C 85     	ld hl,Columns
 264+ 947B 34           	inc (hl)
 265+ 947C 3A AF 85     	ld a,(Cuad_objeto)
 266+ 947F E6 01        	and 1
 267+ 9481 28 0F        	jr z,1F
 268+ 9483 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9486 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9487 22 9D 85     	ld (Posicion_actual),hl
 271+ 948A CD 5E 96     	call Genera_coordenadas
 272+ 948D CD F2 95     	call Inc_CTRL_DESPLZ
 273+ 9490 18 03        	jr 2F
 274+ 9492 CD F2 95     1 call Inc_CTRL_DESPLZ
 275+ 9495 C9           2 ret
 276+ 9496
 277+ 9496              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9496              ;
 279+ 9496              ;	24/7/22
 280+ 9496              ;
 281+ 9496              ;	Ciclo_completo.
 282+ 9496              ;
 283+ 9496              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9496              ;
 285+ 9496              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9496              ; 	Decrementamos (Columns).
 287+ 9496              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9496              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9496
 290+ 9496
 291+ 9496 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9499 FE FF        	cp $ff
 293+ 949B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 949D E6 F0        	and $f0
 295+ 949F 20 28        	jr nz,3F
 296+ 94A1
 297+ 94A1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94A1
 299+ 94A1 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 94A4 47           	ld b,a
 301+ 94A5 3E F8        	ld a,$f8
 302+ 94A7 80           	add b
 303+ 94A8 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 94AB 18 1C        	jr 3F
 305+ 94AD 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94B0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94B1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94B2 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 94B5 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94B8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 94BA 20 0A        	jr nz,2F
 312+ 94BC 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94BF 23           	inc hl
 314+ 94C0 22 9D 85     	ld (Posicion_actual),hl
 315+ 94C3 CD 5E 96     	call Genera_coordenadas
 316+ 94C6
 317+ 94C6              ; Inicia el puntero de Sprite.
 318+ 94C6
 319+ 94C6 CD 2E 88     2 call Inicia_puntero_objeto_der
 320+ 94C9 C9           3 ret
 321+ 94CA
 322+ 94CA              ; ******************************************************************************************************************************************************************************************
 323+ 94CA              ;
 324+ 94CA              ;	15/02/23
 325+ 94CA              ;
 326+ 94CA              ;	Mov_left.
 327+ 94CA              ;
 328+ 94CA              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94CA              ;
 330+ 94CA              Mov_left
 331+ 94CA
 332+ 94CA 21 C9 85     	ld hl,Ctrl_0
 333+ 94CD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94CF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94CF              ; 																	; _ en el caso de que no lo haya.
 336+ 94CF 3A C9 85     	ld a,(Ctrl_0)
 337+ 94D2 CB 77        	bit 6,a
 338+ 94D4 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94D6
 340+ 94D6 CD EC 95     	call Stop_Amadeus_left
 341+ 94D9 C8           	ret z
 342+ 94DA 20 4A        	jr nz,8F
 343+ 94DC
 344+ 94DC 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94DF A7           	and a
 346+ 94E0 20 44        	jr nz,8F
 347+ 94E2
 348+ 94E2 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94E5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94E6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94E8
 352+ 94E8              ; ---------- ---------- ----------
 353+ 94E8
 354+ 94E8 3A B0 85     	ld a,(Vel_left)
 355+ 94EB FE 02        	cp 2
 356+ 94ED 28 0F        	jr z,1F
 357+ 94EF 38 04        	jr c,6F
 358+ 94F1 FE 04        	cp 4
 359+ 94F3 28 12        	jr z,7F
 360+ 94F5
 361+ 94F5              ; ---------- ---------- ----------
 362+ 94F5
 363+ 94F5 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94F8 FE F8        	cp $f8
 365+ 94FA 20 2A        	jr nz,8F
 366+ 94FC 18 10        	jr 4F
 367+ 94FE 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 9501 FE F9        	cp $f9
 369+ 9503 20 21        	jr nz,8F
 370+ 9505 18 07        	jr 4F
 371+ 9507 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 950A FE FB        	cp $fb
 373+ 950C 20 18        	jr nz,8F
 374+ 950E
 375+ 950E              ; ---------- ---------- ----------
 376+ 950E
 377+ 950E              4
 378+ 950E CD 14 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9511              ;	call Reinicio
 380+ 9511
 381+ 9511              ; ---------- ---------- ----------
 382+ 9511
 383+ 9511 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9513 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9514
 386+ 9514              ;	ld hl,(Indice_Sprite_izq)
 387+ 9514              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9514
 389+ 9514 CD 2D 95     	call DESPLZ_IZQ
 390+ 9517 C1           	pop bc
 391+ 9518 10 F9        	djnz 5B
 392+ 951A 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 951D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 951E 22 9D 85     	ld (Posicion_actual),hl
 395+ 9521 CD 5E 96     	call Genera_coordenadas
 396+ 9524 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9526
 398+ 9526              ; ---------- ---------- ----------
 399+ 9526
 400+ 9526              ; Movemos, no hay recolocación.
 401+ 9526
 402+ 9526 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9529 CD 2D 95     	call DESPLZ_IZQ
 404+ 952C C9           2 ret
 405+ 952D
 406+ 952D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 952D              ;
 408+ 952D              ;	22/9/22
 409+ 952D
 410+ 952D              DESPLZ_IZQ
 411+ 952D
 412+ 952D CD 3C 95     	call Desplaza_izquierda
 413+ 9530 CD 88 95         call modifica_parametros_1er_DESPLZ
 414+ 9533 CD B0 95     	call Ciclo_completo_2
 415+ 9536 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9539 CB BE        	res 7,(hl)
 417+ 953B C9           	ret
 418+ 953C
 419+ 953C              Desplaza_izquierda
 420+ 953C
 421+ 953C 3A B0 85     	ld a,(Vel_left)
 422+ 953F 47           	ld b,a
 423+ 9540 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9543 23           1 inc hl
 425+ 9544 23           	inc hl
 426+ 9545 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9547 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 954A CD 17 88     	call Extrae_address
 429+ 954D 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9550
 431+ 9550              ; Modifica (Puntero_DESPLZ_der).
 432+ 9550
 433+ 9550              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9550              ; Cuántos movimientos hemos hecho ??
 435+ 9550              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9550
 437+ 9550 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9553 EB           	ex de,hl
 439+ 9554 A7           	and a
 440+ 9555 ED 52        	sbc hl,de
 441+ 9557 CB 3D        	srl l
 442+ 9559 3E 08        6 ld a,8
 443+ 955B 95           	sub l
 444+ 955C 30 1E        	jr nc,3F
 445+ 955E
 446+ 955E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 955E              ; B="0".
 448+ 955E
 449+ 955E 04           4 inc b
 450+ 955F 3C           	inc a
 451+ 9560 20 FC        	jr nz,4B
 452+ 9562 78           	ld a,b
 453+ 9563 08           	ex af,af
 454+ 9564 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9567 23           5 inc hl
 456+ 9568 23           	inc hl
 457+ 9569 10 FC        	djnz 5B
 458+ 956B 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 956E CD 17 88     	call Extrae_address
 460+ 9571 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9574
 462+ 9574              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9574              ; _(Posicion_actual).
 464+ 9574
 465+ 9574 21 9D 85     	ld hl,Posicion_actual
 466+ 9577 35           	dec (hl)
 467+ 9578 08           	ex af,af
 468+ 9579 6F           	ld l,a
 469+ 957A 18 DD        	jr 6B
 470+ 957C
 471+ 957C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 957C
 473+ 957C 47           3 ld b,a
 474+ 957D 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9580 23           2 inc hl
 476+ 9581 23           	inc hl
 477+ 9582 10 FC        	djnz 2B
 478+ 9584 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9587 C9           8 ret
 480+ 9588
 481+ 9588              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9588              ;
 483+ 9588              ;	modifica_parametros_1er_DESPLZ
 484+ 9588              ;
 485+ 9588              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9588              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9588              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9588
 489+ 9588 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 958B A7           	and a
 491+ 958C 20 1E        	jr nz,1F
 492+ 958E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 958F 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9592 21 9C 85     	ld hl,Columns
 495+ 9595 34           	inc (hl)
 496+ 9596 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9599 E6 01        	and 1
 498+ 959B 20 0F        	jr nz,1F
 499+ 959D 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95A0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95A1 22 9D 85     	ld (Posicion_actual),hl
 502+ 95A4 CD 5E 96     	call Genera_coordenadas
 503+ 95A7 CD 03 96     	call Dec_CTRL_DESPLZ
 504+ 95AA 18 03        	jr 2F
 505+ 95AC CD 03 96     1 call Dec_CTRL_DESPLZ
 506+ 95AF C9           2 ret
 507+ 95B0
 508+ 95B0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95B0
 510+ 95B0 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95B3 FE F7        	cp $f7
 512+ 95B5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95B7 30 2C        	jr nc,3F
 514+ 95B9
 515+ 95B9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 95B9
 517+ 95B9 06 00        	ld b,0
 518+ 95BB 04           4 inc b
 519+ 95BC 3C           	inc a
 520+ 95BD FE F7        	cp $f7
 521+ 95BF 20 FA        	jr nz,4B
 522+ 95C1 3E FF        	ld a,$ff
 523+ 95C3 90           	sub b
 524+ 95C4 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95C7 18 1C        	jr 3F
 526+ 95C9
 527+ 95C9              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95C9
 529+ 95C9 21 9C 85     1 ld hl,Columns
 530+ 95CC 35           	dec (hl)
 531+ 95CD AF           	xor a
 532+ 95CE 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95D1 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95D4 E6 01        	and 1
 535+ 95D6 28 0A        	jr z,2F
 536+ 95D8 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95DB 2B           	dec hl
 538+ 95DC 22 9D 85     	ld (Posicion_actual),hl
 539+ 95DF CD 5E 96     	call Genera_coordenadas
 540+ 95E2
 541+ 95E2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95E2
 543+ 95E2 CD 41 88     2 call Inicia_puntero_objeto_izq
 544+ 95E5 C9           3 ret
 545+ 95E6
 546+ 95E6              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95E6              ;
 548+ 95E6              ;	19/10/22
 549+ 95E6              ;
 550+ 95E6              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95E6              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95E6
 553+ 95E6 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95E9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95EB C9           	ret
 556+ 95EC
 557+ 95EC              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95EC              ;
 559+ 95EC              ;	19/10/22
 560+ 95EC              ;
 561+ 95EC              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95EC              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95EC
 564+ 95EC 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95EF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95F1 C9           	ret
 567+ 95F2
 568+ 95F2              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95F2              ;
 570+ 95F2              ;	24/7/22
 571+ 95F2              ;
 572+ 95F2              ;	Inc_CTRL_DESPLZ
 573+ 95F2              ;
 574+ 95F2              ;
 575+ 95F2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95F2
 577+ 95F2 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95F5 3A B1 85     	ld a,(Vel_right)
 579+ 95F8 A7           	and a
 580+ 95F9 28 06        	jr z,1F
 581+ 95FB 47           	ld b,a
 582+ 95FC 34           3 inc (hl)
 583+ 95FD 10 FD        	djnz 3B
 584+ 95FF 18 01        	jr 2F
 585+ 9601 34           1 inc (hl)
 586+ 9602 C9           2 ret
 587+ 9603
 588+ 9603              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9603              ;
 590+ 9603              ;	5/2/23
 591+ 9603              ;
 592+ 9603              ;	Dec_CTRL_DESPLZ
 593+ 9603              ;
 594+ 9603              ;
 595+ 9603              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9603
 597+ 9603 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9606 3A B0 85     	ld a,(Vel_left)
 599+ 9609 A7           	and a
 600+ 960A 28 06        	jr z,1F
 601+ 960C 47           	ld b,a
 602+ 960D 35           3 dec (hl)
 603+ 960E 10 FD        	djnz 3B
 604+ 9610 18 01        	jr 2F
 605+ 9612 35           1 dec (hl)
 606+ 9613 C9           2 ret
 607+ 9614
 608+ 9614              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9614
 610+ 9614 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9617 01 1F 00     	ld bc,31
 612+ 961A A7           	and a
 613+ 961B ED 4A        	adc hl,bc
 614+ 961D 22 9D 85     	ld (Posicion_actual),hl
 615+ 9620 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9623 CB C6        	set 0,(hl)
 617+ 9625 C9           	ret
 618+ 9626
 619+ 9626              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9626
 621+ 9626 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9629 01 1F 00     	ld bc,31
 623+ 962C A7           	and a
 624+ 962D ED 42        	sbc hl,bc
 625+ 962F 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9632 21 C9 85     	ld hl,Ctrl_0
 627+ 9635 CB CE        	set 1,(hl)
 628+ 9637 C9           	ret
 629+ 9638
 630+ 9638              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9638
 632+ 9638 24           Reaparece_abajo inc h
 633+ 9639 01 E0 17     	ld bc,$17e0
 634+ 963C A7           	and a
 635+ 963D ED 4A        	adc hl,bc
 636+ 963F 22 9D 85     	ld (Posicion_actual),hl
 637+ 9642 21 C9 85     	ld hl,Ctrl_0
 638+ 9645 CB D6        	set 2,(hl)
 639+ 9647 C9           	ret
 640+ 9648
 641+ 9648              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9648
 643+ 9648 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 964B A7           	and a
 645+ 964C ED 42        	sbc hl,bc
 646+ 964E 22 9D 85     	ld (Posicion_actual),hl
 647+ 9651 21 C9 85     	ld hl,Ctrl_0
 648+ 9654 CB DE        	set 3,(hl)
 649+ 9656 C9           	ret
 650+ 9657
 651+ 9657              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9657
 653+ 9657 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 965A 22 9D 85     	ld (Posicion_actual),hl
 655+ 965D C9           	ret
# file closed: Direcciones.asm
1045  965E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 965E              ; ------------------------------------------------------------------------
   2+ 965E              ;
   3+ 965E              ;	02/04/23
   4+ 965E              ;
   5+ 965E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 965E              ;	Fila superior "0", Columna izquierda "0".
   7+ 965E              ;
   8+ 965E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 965E              ;
  10+ 965E              ;	Modifica: A,BC y DE.
  11+ 965E
  12+ 965E C5           Genera_coordenadas push bc
  13+ 965F E5           	push hl
  14+ 9660 D5           	push de
  15+ 9661
  16+ 9661 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9664
  18+ 9664 7D           	ld a,l
  19+ 9665 E6 1F        	and $1f
  20+ 9667 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 966A
  22+ 966A CD 32 93     	call calcula_tercio
  23+ 966D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 966E
  25+ 966E 1E 00        	ld e,0
  26+ 9670 7D           	ld a,l
  27+ 9671 E6 E0        	and $e0
  28+ 9673 28 01        	jr z,1F
  29+ 9675 04           	inc b
  30+ 9676
  31+ 9676 04           1 inc b
  32+ 9677 05           	dec b
  33+ 9678 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 967A              ;														; _ , salimos.
  35+ 967A 1C           3 inc e
  36+ 967B D6 20        	sub 32
  37+ 967D 20 FB        	jr nz,3B
  38+ 967F 10 F5        	djnz 1B
  39+ 9681
  40+ 9681 7B           2 ld a,e
  41+ 9682 32 A2 85     	ld (Coordenada_y),a
  42+ 9685
  43+ 9685 D1           	pop de
  44+ 9686 E1           	pop hl
  45+ 9687 C1           	pop bc
  46+ 9688
  47+ 9688 C9           	ret
  48+ 9689
  49+ 9689              ; ------------------------------------------------------------------------
  50+ 9689              ;	28/03/23
  51+ 9689              ;
  52+ 9689              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9689              ;	Fila superior "0", Columna izquierda "0".
  54+ 9689              ;
  55+ 9689              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9689              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9689              ;
  58+ 9689              ;		DE="$120d"
  59+ 9689              ;
  60+ 9689              ;		D, (Coordenada_X), Columnas, $12
  61+ 9689              ;		E, (Coordenada_y), Filas, $0d
  62+ 9689              ;
  63+ 9689              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9689
  65+ 9689              ;	Modifica: A,BC y DE.
  66+ 9689
  67+ 9689
  68+ 9689              Genera_coordenadas_disparo
  69+ 9689
  70+ 9689              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9689
  72+ 9689 7D           	ld a,l
  73+ 968A E6 1F        	and $1f
  74+ 968C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 968D CD 32 93     	call calcula_tercio
  76+ 9690 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9691 1E 00        	ld e,0
  78+ 9693 7D           	ld a,l
  79+ 9694 E6 E0        	and $e0
  80+ 9696 28 01        	jr z,1F
  81+ 9698 04           	inc b
  82+ 9699 1C           1 inc e
  83+ 969A D6 20        	sub 32
  84+ 969C 20 FB        	jr nz,1B
  85+ 969E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96A0 C9           	ret
  87+ 96A1
# file closed: Genera_coordenadas.asm
1046  96A1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96A1
   2+ 96A1
   3+ 96A1              ;   11/8/22
   4+ 96A1              ;
   5+ 96A1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96A1              ;
   7+ 96A1              ;   Mov_obj.asm
   8+ 96A1              ;
   9+ 96A1              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96A1              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96A1              ;
  12+ 96A1              ;   Codificación:
  13+ 96A1              ;
  14+ 96A1              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96A1
  16+ 96A1              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96A1
  18+ 96A1 02 40 00     Arriba db 2,%01000000,0
  19+ 96A4 02 80 00     Abajo db 2,%10000000,0
  20+ 96A7 02 20 00     Derecha db 2,%00100000,0
  21+ 96AA 02 10 00     Izquierda db 2,%00010000,0
  22+ 96AD 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96B1 60 42 60 40
  22+ 96B5 63
  23+ 96B6 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 96BA 22 A3 80 A0
  24+ 96BE 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96C2 84 A0 83 A0
  25+ 96C6 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96CA 80 A3 22 A0
  26+ 96CE 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96D2 40 60 42 60
  27+ 96D6 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96DA
  29+ 96DA 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96DE 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96E2 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96E6 84 00
  32+ 96E8 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96EC 84 00
  33+ 96EE 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96F2 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96F6 1F 1F 1F 1F
  35+ 96FA 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96FE 1F 1F 1F 1F
  35+ 9702 1F
  36+ 9703 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9707 2F 2F 2F 2F
  36+ 970B 2F 2F
  37+ 970D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9711 2F 2F 00
  38+ 9714
  39+ 9714              ; ----- ----- ----- ----- -----
  40+ 9714
  41+ 9714 F2 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9716 EE 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9718 AA 96        Indice_mov_Izquierda defw Izquierda
  44+ 971A A7 96        Indice_mov_Derecha defw Derecha
  45+ 971C A4 96        Indice_mov_Abajo defw Abajo
  46+ 971E A1 96        Indice_mov_Arriba defw Arriba
  47+ 9720 DE 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9722 E2 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9724 DA 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9726 E8 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9728 AD 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 972A              ; ----- ----- ----- ----- -----
  53+ 972A
  54+ 972A 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 972D A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 972E 28 02            jr z,1F
  57+ 9730 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9732 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9735 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9737 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 973A              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 973A 2A CD 85         ld hl,(Puntero_mov)
  63+ 973D 7E               ld a,(hl)
  64+ 973E 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9741 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9742 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9745
  68+ 9745 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9748 A7               and a
  70+ 9749 20 0C            jr nz,12F
  71+ 974B 2A CD 85         ld hl,(Puntero_mov)
  72+ 974E 7E               ld a,(hl)
  73+ 974F A7               and a
  74+ 9750 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9752 E6 0F            and $0f
  76+ 9754 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9757              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9757 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 975A CB 7E            bit 7,(hl)
  80+ 975C 28 03            jr z,2F
  81+ 975E CD 50 93         call Mov_down
  82+ 9761 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9764 CB 76            bit 6,(hl)
  84+ 9766 28 03            jr z,3F
  85+ 9768 CD 7E 93         call Mov_up
  86+ 976B 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 976E CB 6E            bit 5,(hl)
  88+ 9770 28 03            jr z,4F
  89+ 9772 CD AC 93         call Mov_right
  90+ 9775 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9778 CB 66            bit 4,(hl)
  92+ 977A 28 03            jr z,5F
  93+ 977C CD CA 94         call Mov_left
  94+ 977F
  95+ 977F              ; ---------- --------- --------- ---------- ----------
  96+ 977F
  97+ 977F 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9782 A7               and a
  99+ 9783 28 07            jr z,6F
 100+ 9785 3D               dec a
 101+ 9786 32 D1 85         ld (Repetimos_db),a
 102+ 9789 28 01            jr z,6f
 103+ 978B C9           11 ret
 104+ 978C 21 CF 85     6 ld hl,Contador_db_mov
 105+ 978F 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9790 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9793 23               inc hl
 108+ 9794 22 CD 85         ld (Puntero_mov),hl
 109+ 9797 18 F2            jr 11B
 110+ 9799 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 979C 3A D0 85         ld a,(Incrementa_puntero)
 112+ 979F 47               ld b,a
 113+ 97A0 23           8 inc hl
 114+ 97A1 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97A3 5E               ld e,(hl)
 116+ 97A4 23               inc hl
 117+ 97A5 56               ld d,(hl)
 118+ 97A6 EB               ex de,hl
 119+ 97A7 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97AA 18 DF            jr 11B
 121+ 97AC
 122+ 97AC              ; ---------- --------- --------- ---------- ----------
 123+ 97AC              ;
 124+ 97AC              ;   11/8/22
 125+ 97AC              ;
 126+ 97AC              ;   Prepara_Puntero_mov
 127+ 97AC
 128+ 97AC E5           Prepara_Puntero_mov push hl
 129+ 97AD D5               push de
 130+ 97AE 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 97B1 5E               ld e,(hl)
 132+ 97B2 23               inc hl
 133+ 97B3 56               ld d,(hl)
 134+ 97B4 EB               ex de,hl
 135+ 97B5 22 CD 85         ld (Puntero_mov),hl
 136+ 97B8 D1               pop de
 137+ 97B9 E1               pop hl
 138+ 97BA C9               ret
 139+ 97BB
 140+ 97BB              ; ---------- --------- --------- ---------- ----------
 141+ 97BB              ;
 142+ 97BB              ;   11/8/22
 143+ 97BB              ;
 144+ 97BB              ;   Reinicia_el_movimiento
 145+ 97BB
 146+ 97BB CD AC 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 97BE AF               xor a
 148+ 97BF 32 CF 85         ld (Contador_db_mov),a
 149+ 97C2 32 D0 85         ld (Incrementa_puntero),a
 150+ 97C5 C3 2A 97         jp Movimiento
 151+ 97C8 C9               ret
 152+ 97C9              ; ---------- --------- --------- ---------- ----------
 153+ 97C9
 154+ 97C9
 155+ 97C9
 156+ 97C9
 157+ 97C9
 158+ 97C9
 159+ 97C9
 160+ 97C9
 161+ 97C9
 162+ 97C9
 163+ 97C9
 164+ 97C9
 165+ 97C9
 166+ 97C9
 167+ 97C9
 168+ 97C9
 169+ 97C9
 170+ 97C9
# file closed: Patrones_de_mov.asm
1047  97C9              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97C9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97C9              ;
   3+ 97C9              ;	3/1/23
   4+ 97C9              ;
   5+ 97C9              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97C9
   7+ 97C9              ;	ADC HL,SP	LD (addr),SP
   8+ 97C9              ;	ADD HL,SP	LD SP,(addr)
   9+ 97C9              ;	ADD IX,SP	LD SP,nn
  10+ 97C9              ; 	ADD IY,SP	LD SP,HL
  11+ 97C9              ;				LD SP,IX
  12+ 97C9              ;	DEC SP		LD SP,IY
  13+ 97C9
  14+ 97C9              ;	EX (SP),HL
  15+ 97C9              ;	EX (SP),IX
  16+ 97C9              ;	EX (SP),IY
  17+ 97C9
  18+ 97C9              ;	INC SP
  19+ 97C9
  20+ 97C9
  21+ 97C9                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DF 85      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E5 85         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E3 85     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DF 85  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1048  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1049  7FE6
1050  7FE6              	SAVESNA "Pruebas.sna", START
1051  7FE6
1052  7FE6
1053  7FE6
# file closed: Banco_de_pruebas.asm
