# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A6 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD DD 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD 00 8D     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 B0 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A6 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 83 89        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3C 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01 01
  18+ 893C
  19+ 893C 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893D 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8941 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8945 01 02
  22+ 8947 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894B 01 02
  23+ 894D
# file closed: Niveles.asm
 108  894D
 109  894D              ; ******************************************************************************************************************************************************************************************
 110  894D              ; Constantes.
 111  894D              ; ******************************************************************************************************************************************************************************************
 112  894D              ;
 113  894D              ; 25/12/23
 114  894D
 115  894D              ;
 116  894D              ; Constantes.
 117  894D              ;
 118  894D
 119  894D              Sprite_vacio equ $eae0
 120  894D              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894D              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894D              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894D              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894D
 125  894D
 126  894D              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  894D              ;
 128  894D              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  894D              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  894D              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  894D              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  894D              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  894D              ;														; 55 Bytes.
 134  894D
 135  894D              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 136  894D              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 137  894D
 138  894D              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  894D
 140  894D              ; ******************************************************************************************************************************************************************************************
 141  894D              ; Variables.
 142  894D              ; ******************************************************************************************************************************************************************************************
 143  894D              ;
 144  894D              ; 18/01/24
 145  894D              ;
 146  894D              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  894D              ;
 148  894D
 149  894D              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  894D
 151  894D 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  894E              ;															- Patrón de movimiento.
 153  894E              ;															- Aspecto
 154  894E 00           Filas db 0												; Filas. [DRAW]
 155  894F 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 156  8950 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8952 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8954 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8955 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8956
 161  8956              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8956
 163  8956 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8957              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8957              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8957 00           Attr db 0												; Atributos de la entidad:
 167  8958
 168  8958              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8958              ;
 170  8958              ;	COLORES: 0 ..... NEGRO
 171  8958              ;    		 1 ..... AZUL
 172  8958              ; 			 2 ..... ROJO
 173  8958              ;			 3 ..... MAGENTA
 174  8958              ; 			 4 ..... VERDE
 175  8958              ; 			 5 ..... CIAN
 176  8958              ;			 6 ..... AMARILLO
 177  8958              ; 			 7 ..... BLANCO
 178  8958
 179  8958 00 00        Indice_Sprite_der defw 0
 180  895A 00 00        Indice_Sprite_izq defw 0
 181  895C 00 00        Puntero_DESPLZ_der defw 0
 182  895E 00 00        Puntero_DESPLZ_izq defw 0
 183  8960
 184  8960 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8962 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8963
 187  8963              ; Variables de objeto. (Características).
 188  8963
 189  8963 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8964              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8964              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8964 00 00 00...  Variables_de_borrado ds 6
 193  896A
 194  896A 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  896C              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  896C
 197  896C 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  896E
 199  896E              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  896E              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  896E
 202  896E 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8970              ;														; _palabras que componen el "movimiento_masticado".
 204  8970
 205  8970              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8970
 207  8970 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8971              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8971              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8971              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8971              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8971              ;
 213  8971              ; 														DESCRIPCIÖN:
 214  8971              ;
 215  8971              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8971              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8971              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8971              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8971              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8971              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8971              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8971              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8971              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8971              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8971              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8971              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8971              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8971              ;
 229  8971              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8971              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8971              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8971
 233  8971              ; Variables de funcionamiento. [DRAW].
 234  8971
 235  8971 00           Columnas db 0
 236  8972 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8974              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8974 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8975
 240  8975              ; variables de control general.
 241  8975
 242  8975 00           Ctrl_2 db 0
 243  8976              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8976              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8976              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8976              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8976              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8976              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8976              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8976              ;
 251  8976              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8976              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8976              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8976              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8976              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8976              ;														BIT 4, ???
 257  8976              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8976
 259  8976 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8977
 261  8977              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8977
 263  8977              ;					         		---------;      ;---------
 264  8977
 265  8977              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8977
 267  8977              Perfiles_de_velocidad
 268  8977
 269  8977 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8978 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  8979 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  897A 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  897B
 274  897B              ; Contadores de 16 bits.
 275  897B
 276  897B 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  897D 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  897F 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8981 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8983
 281  8983              ; Almacenes de mov_masticados.
 282  8983
 283  8983 00 EB        Almacen_de_movimientos_masticados_Entidad_1 defw $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 284  8985              ; .....
 285  8985              ; .....
 286  8985              ; .....
 287  8985              ; .....
 288  8985
 289  8985              ; Movimiento. ------------------------------------------------------------------------------------------------------
 290  8985
 291  8985 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 292  8987 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 293  8989 00 00        Puntero_indice_mov_bucle defw 0							;
 294  898B              ;
 295  898B              ;
 296  898B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 297  898C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 298  898C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 299  898C 00           Incrementa_puntero_backup db 0
 300  898D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 301  898E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 302  898E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 303  898F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 304  8990 00           Cola_de_desplazamiento db 0								; Este byte indica:
 305  8991              ;
 306  8991              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 307  8991              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 308  8991              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 309  8991              ;
 310  8991              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 311  8991              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 312  8991              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 313  8991              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 314  8991              ;
 315  8991              ;														;	"$ff" ..... Bucle infinito de repetición.
 316  8991              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 317  8991              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 318  8991              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 319  8991
 320  8991 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 321  8992
 322  8992              ;														DESCRIPCIÓN:
 323  8992              ;
 324  8992              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 325  8992              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 326  8992              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 327  8992              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 328  8992              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 329  8992              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 330  8992
 331  8992              ;														BIT 3, Recarga de nueva oleada.
 332  8992              ;														BIT 4, Recarga de nueva oleada.
 333  8992              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 334  8992              ;														BIT 6, **** Frame completo.
 335  8992              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 336  8992
 337  8992 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 338  8994              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 339  8994              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 340  8994              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 341  8994
 342  8994              ; Gestión de ENTIDADES y CAJAS.
 343  8994
 344  8994 00 00        Puntero_store_caja defw 0
 345  8996 00 00        Puntero_restore_caja defw 0
 346  8998 00 00        Indice_restore_caja defw 0
 347  899A 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 348  899B 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 349  899C 00           Entidades_en_curso db 0									; ..... ..... .....
 350  899D 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 351  899E              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 352  899E              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 353  899E              ;														; _ (Numero_de_malotes)="0".
 354  899E 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 355  89A0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 356  89A2              ;														; _ puntero (Indice_entidades).
 357  89A2
 358  89A2              ;---------------------------------------------------------------------------------------------------------------
 359  89A2              ;
 360  89A2              ;	11/01/24
 361  89A2              ;
 362  89A2              ;	Álbumes.
 363  89A2
 364  89A2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 365  89A4              ;														; _variable para almacenar lo posición del puntero_
 366  89A4              ; 														; _de pila, SP.
 367  89A4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 368  89A6              ;														; La utiliza la rutina [Extrae_foto_registros].
 369  89A6 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 370  89A8 00 80        Stack_snapshot defw Album_de_fotos
 371  89AA 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 372  89AC
 373  89AC              ;End_Snapshot defw Album_de_fotos
 374  89AC              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 375  89AC 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 376  89AE              ;														; _el snapshot de los registros del siguiente disparo.
 377  89AE              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 378  89AE AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 379  89B0
 380  89B0 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 381  89B1              ;
 382  89B1              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 383  89B1              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 384  89B1              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 385  89B1
 386  89B1 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 387  89B2              ;
 388  89B2              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 389  89B2              ;
 390  89B2              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 391  89B2              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 392  89B2              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 393  89B2              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 394  89B2              ;
 395  89B2              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 396  89B2              ;															_ masticados ya generados.
 397  89B2              ;
 398  89B2              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 399  89B2              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 400  89B2              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 401  89B2              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 402  89B2
 403  89B2
 404  89B2              ; Gestión de Disparos.
 405  89B2
 406  89B2 00           Numero_de_disparotes db 0
 407  89B3 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 408  89B5 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 409  89B7 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 410  89B8              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 411  89B8              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 412  89B8 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 413  89BA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 414  89BA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 415  89BA              ;														; _produzca colisión.
 416  89BA 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 417  89BC              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 418  89BC 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 419  89BF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 420  89BF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 421  89C2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 422  89C2 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 423  89C3
 424  89C3              ;---------------------------------------------------------------------------------------------------------------
 425  89C3
 426  89C3              ; Relojes y temporizaciones.
 427  89C3
 428  89C3 00           Contador_de_frames db 0
 429  89C4 00           Contador_de_frames_2 db 0
 430  89C5
 431  89C5 04           Clock_explosion db 4
 432  89C6 14           Clock_Entidades_en_curso db 20
 433  89C7 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 434  89C8              ;														; Repite la oleada de entidades.
 435  89C8 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 436  89C9 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 437  89CA 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 438  89CB
 439  89CB 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 440  89CC 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 441  89CD 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 442  89CE
 443  89CE              ;---------------------------------------------------------------------------------------------------------------
 444  89CE
 445  89CE              ; Gestión de NIVELES.
 446  89CE
 447  89CE 00           Nivel db 0												; Nivel actual del juego.
 448  89CF 00 00        Puntero_indice_NIVELES defw 0
 449  89D1 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 450  89D3              ; 														; _ que definen el NIVEL.
 451  89D3              ; Y todo comienza aquí .....
 452  89D3              ;
 453  89D3              ; 	INICIO  *************************************************************************************************************************************************************************
 454  89D3              ;
 455  89D3              ;	5/1/24
 456  89D3
 457  89D3              START
 458  89D3
 459  89D3 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 460  89D6 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 461  89D8 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 462  89DA ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 463  89DC F3           	DI
 464  89DD
 465  89DD 3E 07        	ld a,%00000111
 466  89DF CD FE 9E     	call Cls
 467  89E2 CD 4E 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 468  89E5
 469  89E5              ; INICIALIZACIÓN.
 470  89E5
 471  89E5              ;	Inicializa 1er Nivel.
 472  89E5
 473  89E5 21 28 89     	ld hl,Indice_de_niveles
 474  89E8 22 CF 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 475  89EB CD 12 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 476  89EE
 477  89EE              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 478  89EE              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 479  89EE              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 480  89EE
 481  89EE              ;	Provisional, (para desarrollo).
 482  89EE
 483  89EE              	;-
 484  89EE              ;	ld hl,Numero_parcial_de_entidades
 485  89EE              ;	ld b,(hl)
 486  89EE              ;	inc b
 487  89EE              ;	dec b
 488  89EE              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 489  89EE
 490  89EE CD 57 8D     4 call Inicia_Entidades
 491  89F1
 492  89F1 CD 11 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 493  89F4
 494  89F4              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 495  89F4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 496  89F4              ; (Esto se dá cuando se inicia una nueva oleada).
 497  89F4
 498  89F4              ;	ld a,(Ctrl_1)
 499  89F4              ;	bit 3,a
 500  89F4              ;	jr nz,5F											; Loop
 501  89F4
 502  89F4              ; 	INICIA AMADEUS !!!!!
 503  89F4
 504  89F4              ;3 call Restore_Amadeus
 505  89F4              ;	call Inicia_Puntero_objeto
 506  89F4              ;	call Draw
 507  89F4
 508  89F4              ;	call Guarda_movimiento_masticado	;! Provisional
 509  89F4
 510  89F4              ;	call Guarda_foto_registros
 511  89F4              ;	call Guarda_datos_de_borrado_Amadeus
 512  89F4
 513  89F4              ;	ld de,Amadeus_db
 514  89F4              ;	call Store_Amadeus
 515  89F4
 516  89F4              ; 	INICIA DISPAROS !!!!!
 517  89F4
 518  89F4              ;	call Inicia_Puntero_Disparo_Entidades
 519  89F4              ;	call Inicia_Puntero_Disparo_Amadeus
 520  89F4
 521  89F4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 522  89F4
 523  89F4              ;5 call Inicia_punteros_de_cajas
 524  89F4              ;	call Restore_entidad
 525  89F4
 526  89F4              ;	ld a,(Ctrl_1)
 527  89F4              ;	bit 3,a
 528  89F4              ;	jr z,6F
 529  89F4
 530  89F4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 531  89F4
 532  89F4              ;	ld hl,Ctrl_1
 533  89F4              ;	res 3,(hl)
 534  89F4              ;	jr Main
 535  89F4
 536  89F4              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 537  89F4
 538  89F4 21 B0 89     6 ld hl,Ctrl_3
 539  89F7 CB C6        	set 0,(hl)											; Frame completo.
 540  89F9 FB           	ei
 541  89FA 76           	halt
 542  89FB
 543  89FB              ; ------------------------------------
 544  89FB
 545  89FB              Main
 546  89FB              ;
 547  89FB              ;	11/12/23
 548  89FB
 549  89FB              ; Aparece nueva entidad ???
 550  89FB
 551  89FB              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 552  89FB              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 553  89FB              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 554  89FB              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 555  89FB              ;														; _un 2º bloque.
 556  89FB
 557  89FB              ;	ld a,1
 558  89FB              ;	out ($fe),a
 559  89FB
 560  89FB 3A C6 89     	ld a,(Clock_Entidades_en_curso)
 561  89FE 47           	ld b,a
 562  89FF 3A C3 89     	ld a,(Contador_de_frames)
 563  8A02 B8           	cp b
 564  8A03 20 18        	jr nz,13F
 565  8A05
 566  8A05              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 567  8A05              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 568  8A05
 569  8A05 3A 9B 89     21 ld a,(Numero_parcial_de_entidades)
 570  8A08 47           	ld b,a
 571  8A09 3A 9C 89     	ld a,(Entidades_en_curso)
 572  8A0C B8           	cp b
 573  8A0D 28 0E        	jr z,13F
 574  8A0F 30 0C        	jr nc,13F
 575  8A11
 576  8A11 3C           	inc a
 577  8A12 32 9C 89     	ld (Entidades_en_curso),a
 578  8A15
 579  8A15              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 580  8A15
 581  8A15 3A C6 89     	ld a,(Clock_Entidades_en_curso)
 582  8A18              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 583  8A18              ;! _ IMPREDECIBLE !!!!
 584  8A18 C6 64        	add 100
 585  8A1A 32 C6 89     	ld (Clock_Entidades_en_curso),a
 586  8A1D
 587  8A1D              ; -------------------------------------------------------------------------------------------------------------
 588  8A1D
 589  8A1D              ; Habilita disparos.
 590  8A1D
 591  8A1D              13
 592  8A1D
 593  8A1D              ;	ld hl,Disparo_Amadeus
 594  8A1D              ;	ld de,CLOCK_repone_disparo_Amadeus
 595  8A1D              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 596  8A1D
 597  8A1D              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 598  8A1D              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 599  8A1D              ;	call Habilita_disparos
 600  8A1D
 601  8A1D              ; COLISIONES.
 602  8A1D
 603  8A1D              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 604  8A1D
 605  8A1D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 606  8A1D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 607  8A1D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 608  8A1D
 609  8A1D              ;	xor a
 610  8A1D              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 611  8A1D
 612  8A1D              ;	call Inicia_punteros_de_cajas
 613  8A1D              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 614  8A1D              ; 														; _ en DRAW.
 615  8A1D
 616  8A1D              ;	ld a,(Filas)
 617  8A1D              ;	and a
 618  8A1D              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 619  8A1D              ;	call Incrementa_punteros_de_cajas
 620  8A1D              ;	jr 12B
 621  8A1D
 622  8A1D              ; ---------------------------------------------------------------------------------------
 623  8A1D
 624  8A1D 3A 9B 89     10 ld a,(Numero_parcial_de_entidades)
 625  8A20 47               ld b,a
 626  8A21 A7           	and a
 627  8A22 20 00        	jr nz,11F
 628  8A24
 629  8A24              ;	ld hl,Ctrl_1;
 630  8A24              ;	bit 4,(hl)
 631  8A24              ;	jp nz,16F
 632  8A24
 633  8A24              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 634  8A24
 635  8A24              ;	ld hl,Ctrl_1
 636  8A24              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 637  8A24
 638  8A24              ;	ld a,(Contador_de_frames)
 639  8A24              ;	inc a
 640  8A24              ;	ld (Activa_recarga_cajas),a
 641  8A24
 642  8A24              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 643  8A24
 644  8A24 3A 9C 89     11 ld a,(Entidades_en_curso)
 645  8A27 A7           	and a
 646  8A28 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 647  8A2A 47           	ld b,a												; No hay entidades que gestionar.
 648  8A2B
 649  8A2B              ; ( Código que ejecutamos con cada entidad: ).
 650  8A2B
 651  8A2B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 652  8A2B
 653  8A2B C5           15 push bc 												; Nº de entidades en curso.
 654  8A2C
 655  8A2C CD E4 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 656  8A2F
 657  8A2F
 658  8A2F 3A B0 89     	ld a,(Ctrl_3)
 659  8A32 CB 57        	bit 2,a
 660  8A34 F3           	di
 661  8A35 20 FE        	jr nz,$
 662  8A37 FB           	ei
 663  8A38
 664  8A38
 665  8A38
 666  8A38
 667  8A38              ; Existe "Entidad_guía" ???.
 668  8A38              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 669  8A38
 670  8A38              ;	ld a,(Ctrl_3)
 671  8A38              ;	bit 1,a
 672  8A38              ;	jr nz,22F
 673  8A38
 674  8A38              ; Almacén de "Movimientos_masticados" lleno ???
 675  8A38              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 676  8A38              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 677  8A38
 678  8A38              ;;	ld a,(Ctrl_3)
 679  8A38              ;;	bit 3,a
 680  8A38              ;;	jr nz,22F
 681  8A38
 682  8A38              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 683  8A38
 684  8A38              ;	ld hl,Ctrl_2
 685  8A38              ;	set 5,(hl)
 686  8A38              ;	ld hl,Ctrl_3
 687  8A38              ;	set 1,(hl)
 688  8A38
 689  8A38              ; Impacto ???
 690  8A38
 691  8A38              ;22 ld a,(Impacto)
 692  8A38              ;	and a
 693  8A38              ;	jr z,8F
 694  8A38
 695  8A38              ; Hay Impacto en esta entidad.
 696  8A38
 697  8A38              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 698  8A38              ;	dec (hl)
 699  8A38              ;	jp nz,17F
 700  8A38
 701  8A38              ;! Velocidad de la animación de la explosión.
 702  8A38
 703  8A38              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 704  8A38              ;														; _,(velocidad de la explosión).
 705  8A38              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 706  8A38
 707  8A38              ;	call Repone_datos_de_borrado
 708  8A38              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 709  8A38
 710  8A38              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 711  8A38
 712  8A38              ;	ld a,(Ctrl_2)
 713  8A38              ;	bit 1,a
 714  8A38              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 715  8A38
 716  8A38              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 717  8A38
 718  8A38              ;	ld a,(CTRL_DESPLZ)
 719  8A38              ;	and a
 720  8A38              ;	jr nz,18F
 721  8A38
 722  8A38              ;	ld hl,Indice_Explosion_2x2-2
 723  8A38              ;	ld (Puntero_DESPLZ_der),hl
 724  8A38              ;	jr 19F
 725  8A38
 726  8A38              ;18 ld hl,Indice_Explosion_2x3-2
 727  8A38              ;	ld (Puntero_DESPLZ_der),hl
 728  8A38
 729  8A38              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 730  8A38              ;	set 1,(hl)
 731  8A38              ;	jr 7F
 732  8A38
 733  8A38              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 734  8A38              ; _con las coordenadas de la entidad almacenada en DRAW.
 735  8A38
 736  8A38              ;8 ld a,(Ctrl_1)
 737  8A38              ;	bit 2,a
 738  8A38              ;	jr z,7F
 739  8A38
 740  8A38              ;	ld hl,(Coordenadas_disparo_certero)
 741  8A38              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 742  8A38              ;														; E contiene la coordenada_X del disparo.
 743  8A38              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 744  8A38              ;														; H FILA, (Coordenada_y de la entidad).
 745  8A38              ;	and a
 746  8A38              ;	sbc hl,de
 747  8A38
 748  8A38              ;	call Determina_resultado_comparativa
 749  8A38
 750  8A38              ;	ld a,b
 751  8A38              ;	and a
 752  8A38              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 753  8A38
 754  8A38              ; ----- ----- -----
 755  8A38
 756  8A38              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 757  8A38              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 758  8A38
 759  8A38              ;	ld hl,Ctrl_1
 760  8A38              ;	res 2,(hl)
 761  8A38
 762  8A38 CD 54 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 763  8A3B
 764  8A3B              ;	ld a,(Ctrl_0)
 765  8A3B              ;	bit 4,a
 766  8A3B              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 767  8A3B
 768  8A3B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 769  8A3B              ; [[[
 770  8A3B              ;	call Detecta_disparo_entidad
 771  8A3B              ; ]]]
 772  8A3B
 773  8A3B CD C1 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 774  8A3E
 775  8A3E              ;	ld hl,Ctrl_0
 776  8A3E              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 777  8A3E
 778  8A3E CD B1 8D     17 call Store_Restore_cajas
 779  8A41
 780  8A41 C1           	pop bc
 781  8A42
 782  8A42 10 E7        	djnz 15B
 783  8A44
 784  8A44 CD 11 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 785  8A47
 786  8A47              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 787  8A47              ; Hemos gestionado todas las unidades.
 788  8A47              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 789  8A47
 790  8A47              ;	ld hl,Ctrl_1
 791  8A47              ;	res 2,(hl)
 792  8A47
 793  8A47 21 B0 89     16 ld hl,Ctrl_3
 794  8A4A CB C6        	set 0,(hl)											; Frame completo.
 795  8A4C
 796  8A4C AF           	xor a
 797  8A4D D3 FE        	out ($fe),a
 798  8A4F
 799  8A4F 76           	halt
 800  8A50
 801  8A50              ; ----------------------------------------
 802  8A50
 803  8A50              ;	ld a,(Ctrl_1) 										; Existe Loop?
 804  8A50              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 805  8A50 CA FB 89     	jp z,Main
 806  8A53
 807  8A53              ; RECARGA DE NUEVA OLEADA.
 808  8A53
 809  8A53              ;	ld a,(Contador_de_frames)
 810  8A53              ;	ld b,a
 811  8A53              ;	ld a,(Activa_recarga_cajas)
 812  8A53              ;	cp b
 813  8A53              ;	jr z,20F
 814  8A53
 815  8A53              ;	ld hl,Ctrl_1
 816  8A53              ;	set 4,(hl)
 817  8A53              ;	jp Main
 818  8A53
 819  8A53              ;20 ld hl,Ctrl_1
 820  8A53              ;	res 4,(hl)
 821  8A53
 822  8A53              ;	ld a,(Contador_de_frames)
 823  8A53
 824  8A53              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 825  8A53              ;! _ IMPREDECIBLE !!!!
 826  8A53
 827  8A53              ;	add 10
 828  8A53              ;	ld (Clock_Entidades_en_curso),a
 829  8A53
 830  8A53              ;	jp 4B
 831  8A53
 832  8A53 C9           	ret
 833  8A54
 834  8A54              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 835  8A54              ;
 836  8A54              ;	16/11/23
 837  8A54
 838  8A54              ;;Gestiona_Amadeus
 839  8A54
 840  8A54              ;! Activa/desactiva impacto con Amadeus.
 841  8A54
 842  8A54              ;	ld a,(Impacto)
 843  8A54              ;	and a
 844  8A54              ;	jr nz,2F
 845  8A54
 846  8A54              ;;	call Mov_Amadeus
 847  8A54
 848  8A54              ;;2 ld a,(Ctrl_0)
 849  8A54              ;;	bit 4,a
 850  8A54              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 851  8A54
 852  8A54              ;;	call Guarda_foto_entidad_a_pintar
 853  8A54              ;;	call Guarda_datos_de_borrado_Amadeus
 854  8A54
 855  8A54              ;;1 ld hl,Ctrl_0
 856  8A54              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 857  8A54
 858  8A54              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 859  8A54
 860  8A54              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 861  8A54
 862  8A54              ;	call Calcula_numero_de_disparotes
 863  8A54
 864  8A54              ;;	ret
 865  8A54
 866  8A54              ; --------------------------------------------------------------------------------------------------------------
 867  8A54              ;
 868  8A54              ;	15/12/23
 869  8A54
 870  8A54              Mov_obj
 871  8A54
 872  8A54              ;	ld a,(Ctrl_2)
 873  8A54              ;	bit 1,a
 874  8A54              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 875  8A54
 876  8A54              ; Explosión:
 877  8A54
 878  8A54              ;	ld a,(Frames_explosion)
 879  8A54              ;	and a
 880  8A54              ;	jr nz,4F
 881  8A54
 882  8A54              ;!  Una alimaña menos!!!!!!!!!1
 883  8A54
 884  8A54              ; Se trataba de una Entidad_guía ???
 885  8A54
 886  8A54              ;	ld a,(Ctrl_2)
 887  8A54              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 888  8A54              ;	jr z,5F
 889  8A54
 890  8A54              ;	ld hl,Ctrl_3
 891  8A54              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 892  8A54
 893  8A54              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 894  8A54              ;!! _generado puede ser distinto, (aletoriedad).
 895  8A54
 896  8A54              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 897  8A54              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 898  8A54              ;	dec (hl)
 899  8A54              ;	ld hl,Entidades_en_curso
 900  8A54              ;	dec (hl)
 901  8A54              ;	ld hl,Numero_de_entidades
 902  8A54              ;	dec (hl)
 903  8A54              ;	jr 3F
 904  8A54
 905  8A54              ; -----
 906  8A54
 907  8A54              ;	`Movemos´ la explosión.
 908  8A54
 909  8A54              ;4 ld hl,(Puntero_DESPLZ_der)
 910  8A54              ;	inc hl
 911  8A54              ;	inc hl
 912  8A54              ;	call Extrae_address
 913  8A54              ;;	ld (Puntero_objeto),hl
 914  8A54
 915  8A54              ;;	ld hl,Frames_explosion
 916  8A54              ;;	dec (hl)
 917  8A54
 918  8A54              ;;	ld hl,Ctrl_0
 919  8A54              ;;	set 4,(hl);;
 920  8A54
 921  8A54              ;;	jr 3F
 922  8A54
 923  8A54              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 924  8A54
 925  8A54              ;2 xor a
 926  8A54              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 927  8A54
 928  8A54              ; Movemos Entidades malignas.
 929  8A54              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 930  8A54
 931  8A54              ;	ld a,(Ctrl_2)
 932  8A54              ;	bit 5,a
 933  8A54              ;	jr nz,8F
 934  8A54
 935  8A54              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 936  8A54              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 937  8A54              ;	jr 7F
 938  8A54
 939  8A54              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 940  8A54
 941  8A54              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 942  8A54              ;	bit 4,a
 943  8A54              ;	ret z
 944  8A54
 945  8A54              ; Ha habido desplazamiento de la entidad maligna.
 946  8A54              ; Ha llegado a zona de AMADEUS ???
 947  8A54
 948  8A54              ;7 ld a,(Coordenada_y)
 949  8A54              ;	cp $14
 950  8A54              ;	jr c,1F
 951  8A54
 952  8A54              ; ---------
 953  8A54
 954  8A54              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 955  8A54              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 956  8A54
 957  8A54              ;	di
 958  8A54              ;	call Genera_coordenadas_X
 959  8A54              ;	call Compara_coordenadas_X
 960  8A54              ;	ei
 961  8A54
 962  8A54              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 963  8A54
 964  8A54              ; ---------
 965  8A54
 966  8A54              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 967  8A54 CD C2 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 968  8A57 CD 4F 8B     	call Limpia_Variables_de_borrado
 969  8A5A
 970  8A5A C9           3 ret
 971  8A5B
 972  8A5B              ; --------------------------------------------------------------------------------------------------------------
 973  8A5B              ;
 974  8A5B              ;	29/1/23
 975  8A5B
 976  8A5B              Mov_Amadeus
 977  8A5B
 978  8A5B              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 979  8A5B
 980  8A5B CD C1 95     	call Mov_right
 981  8A5E
 982  8A5E 3A 70 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 983  8A61 CB 67        	bit 4,a
 984  8A63 C8           	ret z
 985  8A64
 986  8A64              ; ---------
 987  8A64
 988  8A64              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 989  8A64 CD B2 8C     	call Repone_datos_de_borrado_Amadeus
 990  8A67 CD 4F 8B     	call Limpia_Variables_de_borrado
 991  8A6A
 992  8A6A C9           	ret
 993  8A6B
 994  8A6B              ; -----------------------------------------------------------------------------------
 995  8A6B              ;
 996  8A6B              ;	20/01/24
 997  8A6B              ;
 998  8A6B              ;
 999  8A6B
1000  8A6B              Construye_movimientos_masticados_entidad
1001  8A6B
1002  8A6B 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1003  8A6E E5           	push hl
1004  8A6F CD B3 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1005  8A72              ;															; _ el (Contador_de_mov_masticados).
1006  8A72 CD AF 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1007  8A75              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1008  8A75 CD 1D 95     	call Recompone_posicion_inicio
1009  8A78
1010  8A78 CD 11 8F     1 call Draw
1011  8A7B CD 97 8A     	call Guarda_movimiento_masticado
1012  8A7E
1013  8A7E CD 97 98     	call Movimiento
1014  8A81
1015  8A81 3A B0 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1016  8A84 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1017  8A86 28 F0        	jr z,1B
1018  8A88
1019  8A88              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1020  8A88              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1021  8A88
1022  8A88 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1023  8A89 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8A8C
1025  8A8C              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1026  8A8C
1027  8A8C CD FB 99     	call Situa_en_contador_general_de_mov_masticados
1028  8A8F
1029  8A8F              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1030  8A8F              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1031  8A8F
1032  8A8F ED 4B 6E 89  	ld bc,(Contador_de_mov_masticados)
1033  8A93 71           	ld (hl),c
1034  8A94 23           	inc hl
1035  8A95 70           	ld (hl),b
1036  8A96
1037  8A96 C9           	ret
1038  8A97
1039  8A97              ; -----------------------------------------------------------------------------------
1040  8A97              ;
1041  8A97              ;	28/12/23
1042  8A97              ;
1043  8A97              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1044  8A97              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1045  8A97
1046  8A97              Guarda_movimiento_masticado
1047  8A97
1048  8A97 ED 73 A2 89  	ld (Stack),sp
1049  8A9B ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1050  8A9F
1051  8A9F E5           	push hl
1052  8AA0 DD E5            push ix
1053  8AA2 FD E5            push iy
1054  8AA4
1055  8AA4 ED 7B A2 89      ld sp,(Stack)
1056  8AA8
1057  8AA8 2A 6E 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1058  8AAB 23           	inc hl
1059  8AAC 22 6E 89     	ld (Contador_de_mov_masticados),hl
1060  8AAF
1061  8AAF CD B3 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1062  8AB2              ;															; _ el (Contador_de_mov_masticados).
1063  8AB2 C9               ret
1064  8AB3
1065  8AB3              ; --------------------------------------------------------------------------------------------------------------
1066  8AB3              ;
1067  8AB3              ;	12/1/24
1068  8AB3              ;
1069  8AB3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1070  8AB3
1071  8AB3              Actualiza_Puntero_de_almacen_de_mov_masticados
1072  8AB3
1073  8AB3 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1074  8AB6 01 06 00     	ld bc,6
1075  8AB9 A7           	and a
1076  8ABA ED 4A        	adc hl,bc
1077  8ABC 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1078  8ABF C9           	ret
1079  8AC0
1080  8AC0              ; --------------------------------------------------------------------------------------------------------------
1081  8AC0              ;
1082  8AC0              ;	15/01/24
1083  8AC0              ;
1084  8AC0              ;	Cargamos los registros_
1085  8AC0              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1086  8AC0              ;
1087  8AC0              ;	HL contiene la dirección de la rutina de impresión.
1088  8AC0              ;	IX contiene el puntero de impresión.
1089  8AC0              ;	IY contiene (Puntero_objeto).
1090  8AC0
1091  8AC0
1092  8AC0 ED 73 A2 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1093  8AC4 ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1094  8AC8
1095  8AC8 FD E1        	pop iy
1096  8ACA DD E1        	pop ix
1097  8ACC E1           	pop hl
1098  8ACD
1099  8ACD ED 73 6C 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1100  8AD1
1101  8AD1 ED 7B A2 89  	ld sp,(Stack)
1102  8AD5
1103  8AD5 C9           	ret
1104  8AD6
1105  8AD6              ; --------------------------------------------------------------------------------------------------------------
1106  8AD6              ;
1107  8AD6              ;	28/12/23
1108  8AD6              ;
1109  8AD6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1110  8AD6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1111  8AD6
1112  8AD6              Guarda_foto_entidad_a_pintar
1113  8AD6
1114  8AD6 3A 70 89     	ld a,(Ctrl_0)
1115  8AD9 CB 77        	bit 6,a
1116  8ADB 28 04        	jr z,5F
1117  8ADD
1118  8ADD              ;	Guarda la foto de Amadeus.
1119  8ADD
1120  8ADD              ;	call Draw
1121  8ADD              ;	call Guarda_movimiento_masticado	;! Provisional
1122  8ADD CD BF 80     	call Guarda_foto_registros
1123  8AE0 C9           	ret
1124  8AE1
1125  8AE1              ; ENTIDADES!
1126  8AE1              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1127  8AE1
1128  8AE1 3A B0 89     5 ld a,(Ctrl_3)
1129  8AE4 CB 5F        	bit 3,a
1130  8AE6 28 01        	jr z,1F
1131  8AE8
1132  8AE8              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1133  8AE8
1134  8AE8              4
1135  8AE8              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1136  8AE8 C9           	ret
1137  8AE9
1138  8AE9              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1139  8AE9
1140  8AE9 3A B0 89     1 ld a,(Ctrl_3)
1141  8AEC CB 57        	bit 2,a
1142  8AEE 20 10        	jr nz,6F
1143  8AF0
1144  8AF0              ; Entidad guía o fantasma ???
1145  8AF0
1146  8AF0 3A 75 89     	ld a,(Ctrl_2)
1147  8AF3 CB 6F        	bit 5,a
1148  8AF5 20 10        	jr nz,3F
1149  8AF7
1150  8AF7              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1151  8AF7
1152  8AF7 18 EF        	jr 4B
1153  8AF9
1154  8AF9              ; ENTIDAD_GUÍA:
1155  8AF9              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1156  8AF9              ; _guardando "movimientos_masticados".
1157  8AF9
1158  8AF9 3A B0 89     2 ld a,(Ctrl_3)
1159  8AFC CB 57        	bit 2,a
1160  8AFE 28 07        	jr z,3F
1161  8B00
1162  8B00              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1163  8B00              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1164  8B00
1165  8B00 CB 97        6 res 2,a
1166  8B02 CB DF        	set 3,a
1167  8B04 32 B0 89     	ld (Ctrl_3),a
1168  8B07
1169  8B07
1170  8B07              ;	Esto sólo lo ejecuta una entidad guía.
1171  8B07
1172  8B07 CD 11 8F     3 	call Draw
1173  8B0A CD 97 8A     	call Guarda_movimiento_masticado
1174  8B0D CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1175  8B10
1176  8B10              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1177  8B10              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1178  8B10
1179  8B10              ;	call Convierte_guia_en_fantasma
1180  8B10 C9           	ret
1181  8B11
1182  8B11              ; *************************************************************************************************************************************************************
1183  8B11              ;
1184  8B11              ; 8/1/23
1185  8B11              ;
1186  8B11              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1187  8B11              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1188  8B11              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1189  8B11
1190  8B11              ; Destruye HL y DE !!!!!
1191  8B11
1192  8B11              Inicia_punteros_de_cajas
1193  8B11
1194  8B11 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1195  8B14 CD A9 8B         call Extrae_address
1196  8B17 22 94 89         ld (Puntero_store_caja),hl
1197  8B1A 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1198  8B1D 22 98 89     	ld (Indice_restore_caja),hl
1199  8B20 CD A9 8B     	call Extrae_address
1200  8B23 22 96 89     	ld (Puntero_restore_caja),hl
1201  8B26 C9               ret
1202  8B27
1203  8B27              ; *************************************************************************************************************************************************************
1204  8B27              ;
1205  8B27              ; 8/1/23
1206  8B27              ;
1207  8B27              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1208  8B27
1209  8B27 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1210  8B2A 22 B3 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1211  8B2D C9           	ret
1212  8B2E 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1213  8B31 22 B5 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1214  8B34 C9           	ret
1215  8B35
1216  8B35              ; -------------------------------------------------------------------------------------------------------------
1217  8B35              ;
1218  8B35              ; 21/9/23
1219  8B35              ;
1220  8B35
1221  8B35              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1222  8B35
1223  8B35              Limpia_album_Amadeus
1224  8B35
1225  8B35 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1226  8B38 7E           	ld a,(hl)
1227  8B39 A7           	and a
1228  8B3A C8           	ret z
1229  8B3B
1230  8B3B 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1231  8B3E 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1232  8B41 01 0B 00     	ld bc,11
1233  8B44 AF           	xor a
1234  8B45 77           	ld (hl),a
1235  8B46 ED B0        	ldir
1236  8B48
1237  8B48 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1238  8B4B 22 AE 89     	ld (End_Snapshot_Amadeus),hl
1239  8B4E
1240  8B4E C9           	ret
1241  8B4F
1242  8B4F 21 64 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1243  8B52 11 65 89     	ld de,Variables_de_borrado+1
1244  8B55 01 05 00     	ld bc,5
1245  8B58 AF           	xor a
1246  8B59 77           	ld (hl),a
1247  8B5A ED B0        	ldir
1248  8B5C C9           	ret
1249  8B5D
1250  8B5D              ; -------------------------------------------------------------------------------------------------------------
1251  8B5D              ;
1252  8B5D              ; 8/9/23
1253  8B5D              ;
1254  8B5D
1255  8B5D              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1256  8B5D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1257  8B5D
1258  8B5D              Calcula_numero_de_malotes
1259  8B5D
1260  8B5D 21 00 80     	ld hl,Album_de_fotos
1261  8B60 EB           	ex de,hl
1262  8B61 2A A8 89     	ld hl,(Stack_snapshot)
1263  8B64
1264  8B64 06 00        	ld b,0
1265  8B66 7D           	ld a,l
1266  8B67 93           	sub e
1267  8B68 28 07        	jr z,1F
1268  8B6A
1269  8B6A              ; Nº de malotes no es "0".
1270  8B6A
1271  8B6A D6 06        2 sub 6
1272  8B6C 04           	inc b
1273  8B6D A7           	and a
1274  8B6E 20 FA        	jr nz,2B
1275  8B70 78           	ld a,b
1276  8B71
1277  8B71 32 9D 89     1 ld (Numero_de_malotes),a
1278  8B74 C9           	ret
1279  8B75
1280  8B75              ; -------------------------------------------------------------------------------------------------------------
1281  8B75              ;
1282  8B75              ; 8/9/23
1283  8B75              ;
1284  8B75
1285  8B75              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1286  8B75              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1287  8B75
1288  8B75              Calcula_malotes_Amadeus
1289  8B75
1290  8B75 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1291  8B78 EB           	ex de,hl
1292  8B79 2A AE 89     	ld hl,(End_Snapshot_Amadeus)
1293  8B7C
1294  8B7C 7C           	ld a,h
1295  8B7D A7           	and a
1296  8B7E 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1297  8B80
1298  8B80 06 00        	ld b,0
1299  8B82 7D           	ld a,l
1300  8B83 93           	sub e
1301  8B84 28 07        	jr z,1F
1302  8B86
1303  8B86              ; Nº de malotes no es "0".
1304  8B86
1305  8B86 D6 06        2 sub 6
1306  8B88 04           	inc b
1307  8B89 A7           	and a
1308  8B8A 20 FA        	jr nz,2B
1309  8B8C 78           	ld a,b
1310  8B8D
1311  8B8D 32 9D 89     1 ld (Numero_de_malotes),a
1312  8B90 C9           	ret
1313  8B91
1314  8B91              ; -------------------------------------------------------------------------------------------------------------
1315  8B91              ;
1316  8B91              ; 28/2/23
1317  8B91              ;
1318  8B91
1319  8B91              Calcula_numero_de_disparotes
1320  8B91
1321  8B91 21 56 80     	ld hl,Album_de_fotos_disparos
1322  8B94 EB           	ex de,hl
1323  8B95 2A AC 89     	ld hl,(End_Snapshot_disparos)
1324  8B98
1325  8B98 06 00        	ld b,0
1326  8B9A 7D           	ld a,l
1327  8B9B 93           	sub e
1328  8B9C 28 07        	jr z,1F
1329  8B9E
1330  8B9E              ; Nº de malotes no es "0".
1331  8B9E
1332  8B9E D6 06        2 sub 6
1333  8BA0 04           	inc b
1334  8BA1 A7           	and a
1335  8BA2 20 FA        	jr nz,2B
1336  8BA4 78           	ld a,b
1337  8BA5
1338  8BA5 32 B2 89     1 ld (Numero_de_disparotes),a
1339  8BA8 C9           	ret
1340  8BA9
1341  8BA9              ; *************************************************************************************************************************************************************
1342  8BA9              ;
1343  8BA9              ; 20/10/22
1344  8BA9              ;
1345  8BA9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1346  8BA9              ;
1347  8BA9              ; Destruye el puntero y DE !!!!!
1348  8BA9
1349  8BA9 5E           Extrae_address ld e,(hl)
1350  8BAA 23           	inc hl
1351  8BAB 56           	ld d,(hl)
1352  8BAC 2B           	dec hl
1353  8BAD EB           	ex de,hl
1354  8BAE C9           	ret
1355  8BAF
1356  8BAF              ; *************************************************************************************************************************************************************
1357  8BAF              ;
1358  8BAF              ;	20/1/24
1359  8BAF              ;
1360  8BAF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1361  8BAF              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1362  8BAF              ;
1363  8BAF              ;   Destruye HL y BC !!!!!,
1364  8BAF              ;
1365  8BAF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1366  8BAF              ;					"0" ..... Izquierda.
1367  8BAF
1368  8BAF              Inicia_Puntero_objeto
1369  8BAF
1370  8BAF 3A 62 89     	ld a,(Cuad_objeto)
1371  8BB2 E6 01        	and 1
1372  8BB4 F5           	push af
1373  8BB5 CC D1 8B     	call z,Inicia_puntero_objeto_izq
1374  8BB8 F1           	pop af
1375  8BB9 C8           	ret z
1376  8BBA CD BE 8B     	call Inicia_puntero_objeto_der
1377  8BBD C9           	ret
1378  8BBE
1379  8BBE              ; Arrancamos desde la parte izquierda de la pantalla.
1380  8BBE              ; Iniciamos (Indice_Sprite_der).
1381  8BBE
1382  8BBE 2A 58 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1383  8BC1 22 5C 89     	ld (Puntero_DESPLZ_der),hl
1384  8BC4 CD A9 8B     	call Extrae_address
1385  8BC7 22 52 89     	ld (Puntero_objeto),hl
1386  8BCA
1387  8BCA 2A 5A 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1388  8BCD 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1389  8BD0 C9           	ret
1390  8BD1
1391  8BD1              ; Arrancamos desde la parte derecha de la pantalla.
1392  8BD1              ; Iniciamos (Indice_Sprite_izq).
1393  8BD1
1394  8BD1 2A 5A 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1395  8BD4 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1396  8BD7 CD A9 8B     	call Extrae_address
1397  8BDA 22 52 89     	ld (Puntero_objeto),hl
1398  8BDD
1399  8BDD 2A 58 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1400  8BE0 22 5C 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1401  8BE3 C9           	ret
1402  8BE4
1403  8BE4              ; **************************************************************************************************
1404  8BE4              ;
1405  8BE4              ;	31/01/24
1406  8BE4              ;
1407  8BE4              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1408  8BE4
1409  8BE4              Restore_entidad
1410  8BE4
1411  8BE4 2A 94 89     	ld hl,(Puntero_store_caja)
1412  8BE7 11 4D 89     	ld de,Bandeja_DRAW
1413  8BEA 7E           	ld a,(hl)
1414  8BEB 12           	ld (de),a
1415  8BEC 23           	inc hl 											; (Tipo).
1416  8BED
1417  8BED 11 54 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1418  8BF0 01 02 00     	ld bc,2
1419  8BF3 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1420  8BF5
1421  8BF5 13           	inc de
1422  8BF6 7E           	ld a,(hl)
1423  8BF7 12           	ld (de),a 										; Transferimos (Attr).
1424  8BF8 23           	inc hl
1425  8BF9
1426  8BF9 11 63 89     	ld de,Impacto
1427  8BFC
1428  8BFC 7E           	ld a,(hl)
1429  8BFD 12           	ld (de),a 										; Transferimos (Impacto).
1430  8BFE 23           	inc hl
1431  8BFF
1432  8BFF 13           	inc de
1433  8C00
1434  8C00 01 06 00     	ld bc,6
1435  8C03 ED B0        	ldir
1436  8C05
1437  8C05 01 07 00     	ld bc,7
1438  8C08 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1439  8C0A              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1440  8C0A 11 75 89     	ld de,Ctrl_2
1441  8C0D
1442  8C0D 7E           	ld a,(hl)
1443  8C0E 12           	ld (de),a 										; Transferimos (Ctrl_2).
1444  8C0F
1445  8C0F C9           	ret
1446  8C10
1447  8C10              ; **************************************************************************************************
1448  8C10              ;
1449  8C10              ;	08/05/23
1450  8C10              ;
1451  8C10              ;	Incrementamos los dos punteros de entidades. (+1).
1452  8C10
1453  8C10              Incrementa_punteros_de_cajas
1454  8C10
1455  8C10 2A 96 89     	ld hl,(Puntero_restore_caja)
1456  8C13 22 94 89     	ld (Puntero_store_caja),hl
1457  8C16 2A 98 89     	ld hl,(Indice_restore_caja)
1458  8C19 23           	inc hl
1459  8C1A 23           	inc hl
1460  8C1B 22 98 89     	ld (Indice_restore_caja),hl
1461  8C1E CD A9 8B         call Extrae_address
1462  8C21 22 96 89         ld (Puntero_restore_caja),hl
1463  8C24 C9               ret
1464  8C25
1465  8C25              ; **************************************************************************************************
1466  8C25              ;
1467  8C25              ;	21/12/23
1468  8C25              ;
1469  8C25              ;	Restore_Amadeus
1470  8C25              ;
1471  8C25              ;	Cargamos en DRAW los parámetros de Amadeus.
1472  8C25              ;
1473  8C25
1474  8C25 E5           Restore_Amadeus	push hl
1475  8C26 D5           	push de
1476  8C27 C5            	push bc
1477  8C28 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1478  8C2B 11 4D 89     	ld de,Bandeja_DRAW
1479  8C2E 01 2A 00     	ld bc,42
1480  8C31 ED B0        	ldir
1481  8C33 C1           	pop bc
1482  8C34 D1           	pop de
1483  8C35 E1           	pop hl
1484  8C36 C9           	ret
1485  8C37
1486  8C37              ; *************************************************************************************************************************************************************
1487  8C37              ;
1488  8C37              ;	21/12/23
1489  8C37              ;
1490  8C37              ;	Store_Amadeus
1491  8C37              ;
1492  8C37              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1493  8C37              ;
1494  8C37              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1495  8C37              ;
1496  8C37              ;	DESTRUYE: HL y BC y DE.
1497  8C37
1498  8C37 21 4D 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1499  8C3A 01 2A 00     	ld bc,42
1500  8C3D ED B0        	ldir
1501  8C3F C9           	ret
1502  8C40
1503  8C40              ; -----------------------------------------------------------
1504  8C40              ;
1505  8C40              ;	21/12/23
1506  8C40              ;
1507  8C40              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1508  8C40              ;
1509  8C40              ;	Destruye: HL,BC,DE,A
1510  8C40
1511  8C40 21 4D 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1512  8C43 01 29 00     	ld bc,41
1513  8C46 AF           	xor a
1514  8C47 77           	ld (hl),a
1515  8C48 11 4E 89     	ld de,Bandeja_DRAW+1
1516  8C4B ED B0        	ldir
1517  8C4D C9           	ret
1518  8C4E
1519  8C4E              ; -----------------------------------------------------------
1520  8C4E
1521  8C4E              ; Teclado.
1522  8C4E
1523  8C4E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1524  8C50 DB FE        	in a,($fe)
1525  8C52 E6 01        	and $01
1526  8C54 28 02        	jr z,1f
1527  8C56 18 F6        	jr Pulsa_ENTER
1528  8C58 C9           1 ret
1529  8C59
1530  8C59              ; **************************************************************************************************
1531  8C59              ;
1532  8C59              ; Temporización.
1533  8C59
1534  8C59              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1535  8C59              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1536  8C59              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1537  8C59              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1538  8C59
1539  8C59              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1540  8C59              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1541  8C59              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1542  8C59
1543  8C59              ; A partir de $4f61 no hace falta DELAY.
1544  8C59
1545  8C59              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1546  8C59
1547  8C59 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1548  8C5C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1549  8C5D 78           	LD A,B
1550  8C5E A7           	AND A
1551  8C5F 20 FB        	JR NZ,wait
1552  8C61 C9           	RET
1553  8C62
1554  8C62              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1555  8C62              ;
1556  8C62              ;	5/3/23
1557  8C62              ;
1558  8C62              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1559  8C62
1560  8C62              Movimiento_Amadeus
1561  8C62
1562  8C62              ; Disparo.
1563  8C62
1564  8C62 3A C8 89     	ld a,(Disparo_Amadeus)
1565  8C65 A7           	and a
1566  8C66 20 02        	jr nz,1F
1567  8C68 18 15        	jr 2F
1568  8C6A
1569  8C6A 3E F7        1 ld a,$f7													; "5" para disparar.
1570  8C6C DB FE        	in a,($fe)
1571  8C6E E6 10        	and $10
1572  8C70
1573  8C70 F5           	push af
1574  8C71 CC 11 9A     	call z,Genera_disparo
1575  8C74 F1           	pop af
1576  8C75 20 08        	jr nz,2F
1577  8C77
1578  8C77 3A C8 89     	ld a,(Disparo_Amadeus)
1579  8C7A EE 01        	xor 1
1580  8C7C 32 C8 89     	ld (Disparo_Amadeus),a
1581  8C7F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1582  8C81 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1583  8C83 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1584  8C85 CC E4 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1585  8C88
1586  8C88 3E F7        	ld a,$f7
1587  8C8A DB FE        	in a,($fe)
1588  8C8C E6 01        	and $01
1589  8C8E C8           	ret z
1590  8C8F
1591  8C8F 3E F7        	ld a,$f7
1592  8C91 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1593  8C93 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1594  8C95 CC C1 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1595  8C98 C9           	ret
1596  8C99
1597  8C99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1598  8C99              ;
1599  8C99              ;	Rutina provisional para que los malotes cagen balas.
1600  8C99
1601  8C99              Detecta_disparo_entidad
1602  8C99
1603  8C99 3A CB 89     	ld a,(Disparo_entidad)
1604  8C9C A7           	and a
1605  8C9D C8           	ret z
1606  8C9E
1607  8C9E              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1608  8C9E
1609  8C9E              ;	ld a,$7f				; Detecta SPACE.
1610  8C9E              ;	in a,($fe)
1611  8C9E              ;	and 1
1612  8C9E              ;	ret nz
1613  8C9E
1614  8C9E CD 11 9A     	call Genera_disparo
1615  8CA1 C9           	ret
1616  8CA2
1617  8CA2              ; ----------------------------------------------------------------------
1618  8CA2              ;
1619  8CA2              ;	8/9/23
1620  8CA2
1621  8CA2 2A AE 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1622  8CA5 2B            	dec hl
1623  8CA6 7E           	ld a,(hl)
1624  8CA7 A7           	and a
1625  8CA8 C8           	ret z										; Salimos si es álbum está vacío.
1626  8CA9
1627  8CA9 11 69 89     	ld de,Variables_de_borrado+5
1628  8CAC 01 06 00     	ld bc,6
1629  8CAF ED B8        	lddr
1630  8CB1 C9           	ret
1631  8CB2
1632  8CB2              ; ----------------------------------------------------------------------
1633  8CB2              ;
1634  8CB2              ;	9/9/23
1635  8CB2
1636  8CB2              Repone_datos_de_borrado_Amadeus
1637  8CB2
1638  8CB2 21 64 89     	ld hl,Variables_de_borrado
1639  8CB5 11 AC 80     	ld de,Album_de_fotos_Amadeus
1640  8CB8 01 06 00     	ld bc,6
1641  8CBB ED B0        	ldir
1642  8CBD
1643  8CBD EB           	ex de,hl
1644  8CBE 22 AE 89     	ld (End_Snapshot_Amadeus),hl
1645  8CC1
1646  8CC1 C9           	ret
1647  8CC2
1648  8CC2              ; ----------------------------------------------------------------------
1649  8CC2              ;
1650  8CC2              ;	27/10/23
1651  8CC2              ;
1652  8CC2
1653  8CC2              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1654  8CC2              ;	_ Album_de_fotos correspondiente.
1655  8CC2
1656  8CC2              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1657  8CC2              ;	_ durante el proceso de escritura.
1658  8CC2
1659  8CC2              Repone_datos_de_borrado
1660  8CC2
1661  8CC2 ED 5B A8 89  	ld de,(Stack_snapshot)
1662  8CC6 21 64 89     	ld hl,Variables_de_borrado
1663  8CC9 01 06 00     	ld bc,6
1664  8CCC ED B0        	ldir
1665  8CCE
1666  8CCE EB           	ex de,hl
1667  8CCF 22 A8 89     	ld (Stack_snapshot),hl
1668  8CD2
1669  8CD2 C9           	ret
1670  8CD3
1671  8CD3              ; --------------------------------------------------------------------------------------
1672  8CD3
1673  8CD3              Pinta_Amadeus
1674  8CD3
1675  8CD3 CD 75 8B        	call Calcula_malotes_Amadeus
1676  8CD6 CD AA 92     	call Extrae_foto_Amadeus
1677  8CD9 CD 35 8B     	call Limpia_album_Amadeus
1678  8CDC
1679  8CDC C9           	ret
1680  8CDD
1681  8CDD              Pinta_entidades
1682  8CDD
1683  8CDD              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1684  8CDD
1685  8CDD 3A B0 89     	ld a,(Ctrl_3)
1686  8CE0 CB 47        	bit 0,a
1687  8CE2 C8           	ret z
1688  8CE3
1689  8CE3 3A B0 89     	ld a,(Ctrl_3)
1690  8CE6 CB 57        	bit 2,a
1691  8CE8 28 0C        	jr z,1F
1692  8CEA
1693  8CEA              ;	Sólo queremos borrar. Estamos reiniciando la entidad. Hemos de modificar (Stack_snapshot) para que la rutina [Extrae_foto_entidades] calcule el nº de malotes correctamente.
1694  8CEA
1695  8CEA 2A A8 89     	ld hl,(Stack_snapshot)
1696  8CED 01 06 00     	ld bc,6
1697  8CF0 A7           	and a
1698  8CF1 ED 42        	sbc hl,bc
1699  8CF3 22 A8 89     	ld (Stack_snapshot),hl
1700  8CF6
1701  8CF6 CD 5D 8B     1 call Calcula_numero_de_malotes
1702  8CF9 CD 28 92     	call Extrae_foto_entidades
1703  8CFC CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1704  8CFF
1705  8CFF C9           	ret
1706  8D00
1707  8D00              ; -----------------------------------------------------------------------------------
1708  8D00              ;
1709  8D00              ;	10/12/23
1710  8D00              ;
1711  8D00              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1712  8D00
1713  8D00              Actualiza_relojes
1714  8D00
1715  8D00 3A B0 89     	ld a,(Ctrl_3)
1716  8D03 CB 47        	bit 0,a
1717  8D05 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1718  8D06
1719  8D06 21 C3 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1720  8D09 34           	inc (hl)
1721  8D0A
1722  8D0A 34           	inc (hl)
1723  8D0B 35           	dec (hl)
1724  8D0C C0           	ret nz
1725  8D0D
1726  8D0D 21 C4 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1727  8D10 34           	inc (hl)
1728  8D11 C9           	ret
1729  8D12
1730  8D12              ; ---------------------------------------------------------------
1731  8D12
1732  8D12              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D12              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D12              ;
   3+ 8D12              ;   19/1/24
   4+ 8D12              ;
   5+ 8D12              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D12              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D12              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D12              ;	_ de la 1ª entidad del Nivel.
   9+ 8D12              ;
  10+ 8D12              ;	MODIFICA: HL,DE y A.
  11+ 8D12              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8D12
  13+ 8D12              Inicializa_Nivel
  14+ 8D12
  15+ 8D12 2A CF 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8D15 CD A9 8B     	call Extrae_address
  17+ 8D18 7E           	ld a,(hl)
  18+ 8D19 32 9A 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8D1C 23           	inc hl
  20+ 8D1D CD 2A 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D20 22 D1 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D23 CD 33 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D26              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D26 CD 44 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D29 C9           	ret
  26+ 8D2A
  27+ 8D2A              ; ----------------------
  28+ 8D2A
  29+ 8D2A 11 77 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D2D 01 04 00     	ld bc,4
  31+ 8D30 ED B0        	ldir
  32+ 8D32 C9           	ret
  33+ 8D33
  34+ 8D33 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D34 CD 8D 8E         call Calcula_salto_en_BC
  36+ 8D37 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D3A A7               and a
  38+ 8D3B ED 4A            adc hl,bc
  39+ 8D3D CD A9 8B         call Extrae_address
  40+ 8D40 22 85 89         ld (Puntero_indice_mov),hl
  41+ 8D43 C9               ret
  42+ 8D44
  43+ 8D44 3A 4D 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D47 CD 8D 8E     	call Calcula_salto_en_BC
  45+ 8D4A 21 83 89     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D4D A7               and a
  47+ 8D4E ED 4A            adc hl,bc
  48+ 8D50 CD A9 8B         call Extrae_address
  49+ 8D53 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D56 C9           	ret
  51+ 8D57
  52+ 8D57              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D57              ;
  54+ 8D57              ;   5/1/24
  55+ 8D57              ;
  56+ 8D57              ;	Destruye A,BC,HL,DE
  57+ 8D57
  58+ 8D57              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D57              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D57
  61+ 8D57              Inicia_Entidades
  62+ 8D57
  63+ 8D57              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D57
  65+ 8D57 CD 11 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D5A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D5A CD F4 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D5D
  69+ 8D5D 2A D1 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D60
  71+ 8D60 22 D1 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D63
  73+ 8D63 CD 3B 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D66
  75+ 8D66 2A D1 89     	ld hl,(Datos_de_nivel)
  76+ 8D69
  77+ 8D69              ; En este punto:
  78+ 8D69              ;
  79+ 8D69              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D69              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D69
  82+ 8D69 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D6A
  84+ 8D6A 7E           	ld a,(hl)
  85+ 8D6B CD A7 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8D6E
  87+ 8D6E CD 9F 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8D71
  89+ 8D71              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8D71
  91+ 8D71 CD 5D 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8D74
  93+ 8D74 A7           	and a
  94+ 8D75 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8D77
  96+ 8D77              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8D77
  98+ 8D77              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8D77              ;	_ de este tipo de entidad.
 100+ 8D77
 101+ 8D77 CD FB 99     	call Situa_en_contador_general_de_mov_masticados
 102+ 8D7A CD 08 9A     	call Transfiere_datos_de_contadores
 103+ 8D7D
 104+ 8D7D 18 06        	jr 4F
 105+ 8D7F
 106+ 8D7F CD 6B 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8D82
 108+ 8D82              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8D82              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8D82              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8D82              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8D82              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8D82
 114+ 8D82 CD 1B 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8D85              ;																; _ Mov_masticados ya generados.
 116+ 8D85 CD C1 8D     4 call Guarda_foto_de_mov_masticado
 117+ 8D88
 118+ 8D88              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8D88
 120+ 8D88 2A 6A 89     	ld hl,(Puntero_de_impresion)
 121+ 8D8B CD 12 9F     	call Genera_coordenadas
 122+ 8D8E CD C6 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8D91 CD CB 8D     	call Limpiamos_bandeja_DRAW
 124+ 8D94 CD 10 8C     	call Incrementa_punteros_de_cajas
 125+ 8D97
 126+ 8D97              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8D97              ; _ entidad del Nivel.
 128+ 8D97
 129+ 8D97 3A B1 89     	ld a,(Ctrl_4)
 130+ 8D9A E6 F0        	and $f0
 131+ 8D9C 32 B1 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8D9F
 133+ 8D9F              ; Siguiente entidad del Nivel.
 134+ 8D9F
 135+ 8D9F 2A D1 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8DA2 23           	inc hl 														; _ entidad del Nivel.
 137+ 8DA3
 138+ 8DA3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8DA4
 140+ 8DA4 10 BA        	djnz 2B
 141+ 8DA6
 142+ 8DA6 C9           	ret
 143+ 8DA7
 144+ 8DA7              ; ---------------------------------------------------------------------
 145+ 8DA7              ;
 146+ 8DA7              ;	10/02/24
 147+ 8DA7              ;
 148+ 8DA7              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8DA7              ;
 150+ 8DA7              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8DA7
 152+ 8DA7              Definicion_segun_tipo
 153+ 8DA7
 154+ 8DA7 CD 8D 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8DAA 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8DAD CD 95 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8DB0 C9           	ret
 158+ 8DB1
 159+ 8DB1              ; ---------------------------------------------------------------------
 160+ 8DB1              ;
 161+ 8DB1              ;	30/01/24
 162+ 8DB1
 163+ 8DB1
 164+ 8DB1              Store_Restore_cajas
 165+ 8DB1
 166+ 8DB1              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8DB1
 168+ 8DB1 2A 6A 89     	ld hl,(Puntero_de_impresion)
 169+ 8DB4 CD 12 9F     	call Genera_coordenadas
 170+ 8DB7
 171+ 8DB7 CD C6 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8DBA CD CB 8D     	call Limpiamos_bandeja_DRAW
 173+ 8DBD
 174+ 8DBD              ; 	Entidad_sospechosa. 20/4/23
 175+ 8DBD
 176+ 8DBD              ;	ld a,(Impacto)
 177+ 8DBD              ;	and a
 178+ 8DBD              ;	jr z,1F
 179+ 8DBD
 180+ 8DBD              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8DBD              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8DBD              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8DBD              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8DBD              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8DBD
 186+ 8DBD
 187+ 8DBD              ;1 ld hl,(Puntero_restore_caja)
 188+ 8DBD              ;	ld a,(hl)
 189+ 8DBD              ;	and a
 190+ 8DBD              ;	push af
 191+ 8DBD              ;	jr z,2F
 192+ 8DBD
 193+ 8DBD              ;	di
 194+ 8DBD              ;	ld de,Bandeja_DRAW
 195+ 8DBD              ;	ld bc,42
 196+ 8DBD              ;	ldir
 197+ 8DBD              ;	ei
 198+ 8DBD
 199+ 8DBD CD 10 8C     2 call Incrementa_punteros_de_cajas
 200+ 8DC0 C9           	ret
 201+ 8DC1
 202+ 8DC1
 203+ 8DC1              ; ---------------------------------------------------------------------
 204+ 8DC1              ;
 205+ 8DC1              ;	29/01/24
 206+ 8DC1
 207+ 8DC1 CD C0 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8DC4 CD BF 80     	call Guarda_foto_registros
 209+ 8DC7              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8DC7              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8DC7              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8DC7              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8DC7
 214+ 8DC7 CD D6 8D     	call Decrementa_Contador_de_mov_masticados
 215+ 8DCA C9           	ret
 216+ 8DCB
 217+ 8DCB              ; ---------------------------------------------------------------------
 218+ 8DCB              ;
 219+ 8DCB              ;	25/01/24
 220+ 8DCB
 221+ 8DCB 21 4D 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8DCE 06 2A        	ld b,42
 223+ 8DD0 AF           	xor a
 224+ 8DD1
 225+ 8DD1 77           1 ld (hl),a
 226+ 8DD2 23           	inc hl
 227+ 8DD3 10 FC        	djnz 1B
 228+ 8DD5
 229+ 8DD5 C9           	ret
 230+ 8DD6
 231+ 8DD6              ; ---------------------------------------------------------------------
 232+ 8DD6              ;
 233+ 8DD6              ;	22/01/24
 234+ 8DD6
 235+ 8DD6 2A 6E 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8DD9 2B           	dec hl
 237+ 8DDA
 238+ 8DDA 24           	inc h
 239+ 8DDB 25           	dec h
 240+ 8DDC
 241+ 8DDC FC E3 8D     	call m,Reinicia_entidad_maliciosa
 242+ 8DDF
 243+ 8DDF              ;	jr nz,1F
 244+ 8DDF
 245+ 8DDF              ;	inc l
 246+ 8DDF              ;	dec l
 247+ 8DDF
 248+ 8DDF              ;	di
 249+ 8DDF              ;	jr z,$
 250+ 8DDF              ;	ei
 251+ 8DDF
 252+ 8DDF 22 6E 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8DE2 C9           	ret
 254+ 8DE3
 255+ 8DE3              ; ---------------------------------------------------------------------
 256+ 8DE3              ;
 257+ 8DE3              ;	10/2/24
 258+ 8DE3
 259+ 8DE3              Reinicia_entidad_maliciosa
 260+ 8DE3
 261+ 8DE3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8DE3
 263+ 8DE3 CD FB 99     	call Situa_en_contador_general_de_mov_masticados
 264+ 8DE6 CD 08 9A     	call Transfiere_datos_de_contadores
 265+ 8DE9
 266+ 8DE9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8DE9
 268+ 8DE9 3A 4D 89     	ld a,(Tipo)
 269+ 8DEC CD A7 8D     	call Definicion_segun_tipo
 270+ 8DEF
 271+ 8DEF E5           	push hl
 272+ 8DF0 DD E1        	pop ix
 273+ 8DF2
 274+ 8DF2 DD 6E 0B     	ld l,(ix+11)
 275+ 8DF5 DD 66 0C     	ld h,(ix+12)
 276+ 8DF8
 277+ 8DF8 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8DFB 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 279+ 8DFE
 280+ 8DFE              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 281+ 8DFE              ;	Queremos pintar la entidad en su posición de inicio.
 282+ 8DFE
 283+ 8DFE 2A A8 89     	ld hl,(Stack_snapshot)
 284+ 8E01 01 06 00     	ld bc,6
 285+ 8E04 A7           	and a
 286+ 8E05 ED 42        	sbc hl,bc
 287+ 8E07 22 A8 89     	ld (Stack_snapshot),hl
 288+ 8E0A
 289+ 8E0A CD C0 8A     	call Cargamos_registros_con_mov_masticado
 290+ 8E0D CD BF 80     	call Guarda_foto_registros
 291+ 8E10
 292+ 8E10 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 293+ 8E13 2B           	dec hl
 294+ 8E14
 295+ 8E14              ;	di
 296+ 8E14              ;	jr $
 297+ 8E14              ;	ei
 298+ 8E14
 299+ 8E14 C9           	ret
 300+ 8E15
 301+ 8E15              ; 	En 1er lugar inicializamos el contador.
 302+ 8E15
 303+ 8E15 CD FB 99     	call Situa_en_contador_general_de_mov_masticados
 304+ 8E18 CD 08 9A     	call Transfiere_datos_de_contadores
 305+ 8E1B
 306+ 8E1B              ;	Inicializamos
 307+ 8E1B
 308+ 8E1B
 309+ 8E1B
 310+ 8E1B              ; ---------------------------------------------------------------------
 311+ 8E1B              ;
 312+ 8E1B              ;	22/01/24
 313+ 8E1B
 314+ 8E1B 21 B1 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 315+ 8E1E CB 46        	bit 0,(hl)
 316+ 8E20 20 0D        	jr nz,1F
 317+ 8E22 CB 4E        	bit 1,(hl)
 318+ 8E24 20 0C        	jr nz,2F
 319+ 8E26 CB 56        	bit 2,(hl)
 320+ 8E28 20 0B        	jr nz,3F
 321+ 8E2A CB 5E        	bit 3,(hl)
 322+ 8E2C 20 0A        	jr nz,4F
 323+ 8E2E C9           	ret
 324+ 8E2F
 325+ 8E2F CB E6        1 set 4,(hl)
 326+ 8E31 C9           	ret
 327+ 8E32 CB EE        2 set 5,(hl)
 328+ 8E34 C9           	ret
 329+ 8E35 CB F6        3 set 6,(hl)
 330+ 8E37 C9           	ret
 331+ 8E38 CB FE        4 set 7,(hl)
 332+ 8E3A C9           	ret
 333+ 8E3B
 334+ 8E3B              ; ---------------------------------------------------------------------
 335+ 8E3B              ;
 336+ 8E3B              ;	23/01/24
 337+ 8E3B              ;
 338+ 8E3B              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 339+ 8E3B              ;
 340+ 8E3B              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 341+ 8E3B              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 342+ 8E3B              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 343+ 8E3B              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 344+ 8E3B
 345+ 8E3B              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 346+ 8E3B
 347+ 8E3B 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 348+ 8E3C 3D           	dec a
 349+ 8E3D 20 06        	jr nz,1F
 350+ 8E3F
 351+ 8E3F              ; --- Tipo_1
 352+ 8E3F
 353+ 8E3F 21 B1 89     	ld hl,Ctrl_4
 354+ 8E42 CB C6        	set 0,(hl)
 355+ 8E44 C9           	ret
 356+ 8E45
 357+ 8E45 3D           1 dec a
 358+ 8E46 20 06        	jr nz,2F
 359+ 8E48
 360+ 8E48              ; --- Tipo_2
 361+ 8E48
 362+ 8E48 21 B1 89     	ld hl,Ctrl_4
 363+ 8E4B CB CE        	set 1,(hl)
 364+ 8E4D C9           	ret
 365+ 8E4E
 366+ 8E4E 3D           2 dec a
 367+ 8E4F 20 06        	jr nz,3F
 368+ 8E51
 369+ 8E51              ; --- Tipo_3
 370+ 8E51
 371+ 8E51 21 B1 89     	ld hl,Ctrl_4
 372+ 8E54 CB D6        	set 2,(hl)
 373+ 8E56 C9           	ret
 374+ 8E57
 375+ 8E57              ; --- Tipo_3
 376+ 8E57
 377+ 8E57 21 B1 89     3 ld hl,Ctrl_4
 378+ 8E5A CB D6        	set 2,(hl)
 379+ 8E5C C9           	ret
 380+ 8E5D
 381+ 8E5D              ; ---------------------------------------------------------------------
 382+ 8E5D              ;
 383+ 8E5D              ;	22/01/24
 384+ 8E5D
 385+ 8E5D 21 B1 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 386+ 8E60 CB 46        	bit 0,(hl)
 387+ 8E62 20 0E        	jr nz,1F
 388+ 8E64
 389+ 8E64 CB 4E        	bit 1,(hl)
 390+ 8E66 20 10        	jr nz,2F
 391+ 8E68
 392+ 8E68 CB 56        	bit 2,(hl)
 393+ 8E6A 20 12        	jr nz,3F
 394+ 8E6C
 395+ 8E6C CB 5E        	bit 3,(hl)
 396+ 8E6E 20 14        	jr nz,4F
 397+ 8E70 18 19        	jr 6F
 398+ 8E72
 399+ 8E72              ; Entidad_de_Tipo_1.
 400+ 8E72
 401+ 8E72 CB 66        1 bit 4,(hl)
 402+ 8E74 28 15        	jr z,6F
 403+ 8E76 18 10        	jr 5F
 404+ 8E78
 405+ 8E78              ; Entidad_de_Tipo_2.
 406+ 8E78
 407+ 8E78 CB 6E        2 bit 5,(hl)
 408+ 8E7A 28 0F        	jr z,6F
 409+ 8E7C 18 0A        	jr 5F
 410+ 8E7E
 411+ 8E7E              ; Entidad_de_Tipo_3.
 412+ 8E7E
 413+ 8E7E CB 76        3 bit 6,(hl)
 414+ 8E80 28 09        	jr z,6F
 415+ 8E82 18 04        	jr 5F
 416+ 8E84
 417+ 8E84              ; Entidad_de_Tipo_4.
 418+ 8E84
 419+ 8E84 CB 7E        4 bit 7,(hl)
 420+ 8E86 28 03        	jr z,6F
 421+ 8E88
 422+ 8E88              ; Esta entidad TIENE MOV_MASTICADOS.
 423+ 8E88
 424+ 8E88 AF           5 xor a
 425+ 8E89 3C           	inc a
 426+ 8E8A C9           	ret
 427+ 8E8B
 428+ 8E8B              ; Esta entidad NO TIENE MOV_MASTICADOS.
 429+ 8E8B
 430+ 8E8B AF           6 xor a
 431+ 8E8C C9           	ret
 432+ 8E8D
 433+ 8E8D              ;	------------------------------------------------------------------------------------
 434+ 8E8D              ;
 435+ 8E8D              ;	12/01/24
 436+ 8E8D              ;
 437+ 8E8D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 438+ 8E8D              ;
 439+ 8E8D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 440+ 8E8D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 441+ 8E8D
 442+ 8E8D CB 27        Calcula_salto_en_BC sla a
 443+ 8E8F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 444+ 8E91 4F           	ld c,a
 445+ 8E92 06 00        	ld b,0
 446+ 8E94 C9           	ret
 447+ 8E95
 448+ 8E95              ; ------------------------------------------------------------------
 449+ 8E95              ;
 450+ 8E95              ;	19/1/24
 451+ 8E95              ;
 452+ 8E95              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 453+ 8E95              ;	Actualiza (Datos_de_entidad) con esa dirección.
 454+ 8E95
 455+ 8E95 A7           Situa_en_datos_de_definicion and a
 456+ 8E96 ED 4A        	adc hl,bc
 457+ 8E98 CD A9 8B     	call Extrae_address
 458+ 8E9B 22 A0 89         ld (Datos_de_entidad),hl
 459+ 8E9E C9           	ret
 460+ 8E9F
 461+ 8E9F              ; ------------------------------------------------------------------
 462+ 8E9F
 463+ 8E9F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 464+ 8E9F              ; 	inc de
 465+ 8E9F              ; 	inc de
 466+ 8E9F              ; 	ex de,hl
 467+ 8E9F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 468+ 8E9F              ; 	ret
 469+ 8E9F
 470+ 8E9F              ; ----------------------------------------------------------------------------------------------------------
 471+ 8E9F              ;
 472+ 8E9F              ;	31/1/24
 473+ 8E9F              ;
 474+ 8E9F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 475+ 8E9F              ;	_ de entidad.
 476+ 8E9F              ;
 477+ 8E9F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 478+ 8E9F              ;
 479+ 8E9F              ;
 480+ 8E9F              ;	MODIFICA: HL,DE y BC
 481+ 8E9F
 482+ 8E9F
 483+ 8E9F              Definicion_de_entidad_a_bandeja_DRAW
 484+ 8E9F
 485+ 8E9F 11 4D 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 486+ 8EA2 01 03 00     	ld bc,3
 487+ 8EA5 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 488+ 8EA7              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 489+ 8EA7 11 57 89     	ld de,Attr									; DE en (Attr).
 490+ 8EAA 01 05 00     	ld bc,5
 491+ 8EAD ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 492+ 8EAF              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 493+ 8EAF 11 60 89     	ld de,Posicion_inicio
 494+ 8EB2 01 03 00     	ld bc,3
 495+ 8EB5 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 496+ 8EB7              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 497+ 8EB7 11 6C 89     	ld de,Puntero_de_almacen_de_mov_masticados
 498+ 8EBA 01 02 00     	ld bc,2
 499+ 8EBD ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 500+ 8EBF
 501+ 8EBF 11 76 89     	ld de,Frames_explosion
 502+ 8EC2 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 503+ 8EC4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 504+ 8EC5
 505+ 8EC5 C9           	ret
 506+ 8EC6
 507+ 8EC6              ; ----------------------------------------------------------------------------------------------------------
 508+ 8EC6              ;
 509+ 8EC6              ;	22/01/24
 510+ 8EC6              ;
 511+ 8EC6              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 512+ 8EC6              ;
 513+ 8EC6              ;	Las cajas contienen entidades iniciadas:
 514+ 8EC6              ;
 515+ 8EC6              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 516+ 8EC6              ;
 517+ 8EC6              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 518+ 8EC6              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 519+ 8EC6              ;
 520+ 8EC6              ;	MODIFICA: HL,DE y BC
 521+ 8EC6
 522+ 8EC6 21 4D 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 523+ 8EC9 ED 5B 94 89  	ld de,(Puntero_store_caja)
 524+ 8ECD 7E           	ld a,(hl)
 525+ 8ECE 12           	ld (de),a
 526+ 8ECF 13           	inc de 													; (Tipo).
 527+ 8ED0
 528+ 8ED0 21 54 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 529+ 8ED3 01 02 00     	ld bc,2
 530+ 8ED6 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 531+ 8ED8              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 532+ 8ED8 23           	inc hl
 533+ 8ED9 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 534+ 8EDA 12           	ld (de),a
 535+ 8EDB 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 536+ 8EDC
 537+ 8EDC 21 63 89     	ld hl,Impacto
 538+ 8EDF 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 539+ 8EE0 12           	ld (de),a
 540+ 8EE1 13           	inc de 													; (Impacto), volcado a la caja.
 541+ 8EE2              ;															; DE situado ahora en (Variables_de_borrado).
 542+ 8EE2 23           	inc hl
 543+ 8EE3 01 06 00     	ld bc,6
 544+ 8EE6 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 545+ 8EE8              ; 															; DE situado ahora en (Puntero_de_impresión).
 546+ 8EE8 01 07 00     	ld bc,7
 547+ 8EEB ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 548+ 8EED              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 549+ 8EED              ;															; HL apunta ahora a (Columnas).
 550+ 8EED 21 75 89     	ld hl,Ctrl_2
 551+ 8EF0 7E           	ld a,(hl)
 552+ 8EF1 12           	ld (de),a 												; Volcamos (Ctrl_2).
 553+ 8EF2 13           	inc de
 554+ 8EF3
 555+ 8EF3 C9           	ret
 556+ 8EF4
 557+ 8EF4              ;---------------------------------------------------------------------------------------------------------------
 558+ 8EF4              ;
 559+ 8EF4              ;	5/1/24
 560+ 8EF4              ;
 561+ 8EF4              ;	INICIALIZA (Numero_parcial_de_entidades).
 562+ 8EF4              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 563+ 8EF4              ;
 564+ 8EF4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 565+ 8EF4              ;
 566+ 8EF4              ;	(Numero_parcial_de_entidades)="7".
 567+ 8EF4              ;
 568+ 8EF4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 569+ 8EF4              ;
 570+ 8EF4              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 571+ 8EF4              ;
 572+ 8EF4              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 573+ 8EF4              ;	MODIFICA: A y B.
 574+ 8EF4              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 575+ 8EF4
 576+ 8EF4              Inicializa_Numero_parcial_de_entidades
 577+ 8EF4
 578+ 8EF4              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 579+ 8EF4
 580+ 8EF4 3A 9A 89     	ld a,(Numero_de_entidades)
 581+ 8EF7 A7           	and a
 582+ 8EF8
 583+ 8EF8              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 584+ 8EF8              ;	jr z,$
 585+ 8EF8              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 586+ 8EF8
 587+ 8EF8 20 03        	jr nz,3F
 588+ 8EFA
 589+ 8EFA              ; ---------- ---------- ----------
 590+ 8EFA
 591+ 8EFA              ;! RESET para pruebas. Omitir esta línea en modo normal.
 592+ 8EFA              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 593+ 8EFA
 594+ 8EFA CD 12 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 595+ 8EFD
 596+ 8EFD              ; ---------- ---------- ----------
 597+ 8EFD
 598+ 8EFD 3A 9A 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 599+ 8F00 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 600+ 8F02 38 08        	jr c,1F
 601+ 8F04
 602+ 8F04              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 603+ 8F04              ; Actualizamos variables.
 604+ 8F04
 605+ 8F04 3E 07        	ld a,7
 606+ 8F06 32 9B 89     	ld (Numero_parcial_de_entidades),a
 607+ 8F09 47           	ld b,a
 608+ 8F0A 18 04        	jr 2F
 609+ 8F0C
 610+ 8F0C              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 611+ 8F0C              ; (Numero_de_entidades)="0".
 612+ 8F0C
 613+ 8F0C 32 9B 89     1 ld (Numero_parcial_de_entidades),a
 614+ 8F0F 47           	ld b,a
 615+ 8F10 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1733  8F11              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F11              ; ******************************************************************************************************************************************************************************************
   2+ 8F11              ;
   3+ 8F11              ; 26/06/23
   4+ 8F11              ;
   5+ 8F11              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F11
   7+ 8F11              Draw
   8+ 8F11
   9+ 8F11 CD FE 91     	call Prepara_draw
  10+ 8F14 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F15 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F16 28 05        	jr z,2F
  13+ 8F18
  14+ 8F18 3A 62 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F1B 18 0C        	jr 1F
  16+ 8F1D
  17+ 8F1D 2A 60 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F20 22 50 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F23 CD B2 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F26              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F26
  22+ 8F26 CD 5F 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F29
  24+ 8F29 3A 70 89     1 ld a,(Ctrl_0)
  25+ 8F2C CB 6F        	bit 5,a
  26+ 8F2E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F30
  28+ 8F30 CD 48 8F     	call Comprueba_limite_horizontal
  29+ 8F33 CD D8 8F     	call Comprueba_limite_vertical
  30+ 8F36
  31+ 8F36              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F36              ; -----------------------
  33+ 8F36              ; -----------------------
  34+ 8F36              ; -----------------------
  35+ 8F36
  36+ 8F36 CD 2E 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F39 CD 65 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F3C CD C4 91     	call Define_rutina_de_impresion
  39+ 8F3F
  40+ 8F3F 3A 70 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F42 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F44 32 70 89     	ld (Ctrl_0),a
  43+ 8F47
  44+ 8F47 C9           	ret
  45+ 8F48
  46+ 8F48              ; *******************************************************************************************************************************************************************************************
  47+ 8F48              ;	21/01/23
  48+ 8F48              ;
  49+ 8F48              ; 	Comprueba_limite_horizontal.
  50+ 8F48              ;
  51+ 8F48              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F48              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F48              ;
  54+ 8F48              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F48              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F48              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F48              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F48
  59+ 8F48
  60+ 8F48
  61+ 8F48 3A 70 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F4B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F4D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F4F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F51 32 70 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F54 18 09            jr 6F
  67+ 8F56 CB 5F        1 bit 3,a
  68+ 8F58 28 0A            jr z,2F
  69+ 8F5A E6 F7            and $f7
  70+ 8F5C 32 70 89         ld (Ctrl_0),a
  71+ 8F5F CD B2 90     6 call Inicializacion
  72+ 8F62 18 5B            jr 5F
  73+ 8F64 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F65
  75+ 8F65              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F65              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F65
  78+ 8F65 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F66 2A 72 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F69 CD F4 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F6C 67           	ld h,a
  82+ 8F6D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F6E CD F4 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F71 67           	ld h,a
  85+ 8F72 A7           	and a
  86+ 8F73 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F75 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F76 3A 62 89     	ld a,(Cuad_objeto)
  89+ 8F79 FE 02        	cp 2
  90+ 8F7B 38 1E        	jr c,3F
  91+ 8F7D 28 1C        	jr z,3F
  92+ 8F7F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F80 28 23            jr z,7F
  94+ 8F82 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F84 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F86 E1           	pop hl
  97+ 8F87
  98+ 8F87              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F87              ; _para indicar con E="2" en caso necesario.
 100+ 8F87
 101+ 8F87 E5               push hl
 102+ 8F88 C5               push bc
 103+ 8F89 CD F4 9E     	call calcula_tercio
 104+ 8F8C FE 01        	cp 1
 105+ 8F8E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F90 CD C0 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F93 28 26            jr z,9F
 108+ 8F95 38 24            jr c,9F
 109+ 8F97 1E 00        11 ld e,0
 110+ 8F99 18 22            jr 8F
 111+ 8F9B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F9C 28 07        	jr z, 7F
 113+ 8F9E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8FA0 1E 00         	ld e,0
 115+ 8FA2 E1           	pop hl
 116+ 8FA3 18 04        	jr 4F
 117+ 8FA5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8FA7 18 15            jr 10F
 119+ 8FA9
 120+ 8FA9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8FA9              ; _para indicar con E="2" en caso necesario.
 122+ 8FA9
 123+ 8FA9 E5           4 push hl
 124+ 8FAA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8FAB CD F4 9E     	call calcula_tercio
 126+ 8FAE FE 01        	cp 1
 127+ 8FB0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8FB2 CD C0 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8FB5 28 04            jr z,9F
 130+ 8FB7 30 02            jr nc,9F
 131+ 8FB9 18 02        	jr 8F
 132+ 8FBB 1E 02        9 ld e,2
 133+ 8FBD C1           8 pop bc
 134+ 8FBE E1           10 pop hl
 135+ 8FBF C9           5 ret
 136+ 8FC0
 137+ 8FC0              ; --------------------
 138+ 8FC0              ;
 139+ 8FC0              ; 25/08/22
 140+ 8FC0
 141+ 8FC0 CD F4 9E     Comprueba_centro call calcula_tercio
 142+ 8FC3 67               ld h,a
 143+ 8FC4 08           	ex af,af
 144+ 8FC5 FE 02        	cp 2
 145+ 8FC7 38 07        	jr c,1F
 146+ 8FC9 28 05        	jr z,1F
 147+ 8FCB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FCE 18 03        	jr 2F
 149+ 8FD0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FD3 08           2 ex af,af
 151+ 8FD4 A7               and a
 152+ 8FD5 ED 42            sbc hl,bc
 153+ 8FD7 C9               ret
 154+ 8FD8
 155+ 8FD8              ; *********************************************************************************************************************************************************************************************
 156+ 8FD8              ;
 157+ 8FD8              ;   16/8/22
 158+ 8FD8              ;
 159+ 8FD8              ;	Comprueba_limite_vertical
 160+ 8FD8              ;
 161+ 8FD8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FD8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FD8              ;
 164+ 8FD8
 165+ 8FD8 2A 50 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FDB 7D           	ld a,l
 167+ 8FDC E6 1F        	and $1F
 168+ 8FDE 57           	ld d,a
 169+ 8FDF 3A 74 89     	ld a,(Limite_vertical)
 170+ 8FE2 BA           	cp d 											; Límite - Posición.
 171+ 8FE3 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8FE4 3A 62 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8FE7 CB 47        	bit 0,a
 174+ 8FE9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8FEB
 176+ 8FEB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8FEB
 178+ 8FEB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8FEC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8FEE
 181+ 8FEE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8FEE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8FEE
 184+ 8FEE 3A 54 89         ld a,(Coordenada_X)
 185+ 8FF1 16 0F            ld d,Centro_izquierda
 186+ 8FF3 A7               and a
 187+ 8FF4 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FF5 28 1E            jr z,3F
 189+ 8FF7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FF9              ;                                                    ; _salimos sin modificar nada.
 191+ 8FF9 18 0E            jr 2F
 192+ 8FFB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FFC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FFE
 195+ 8FFE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FFE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FFE
 198+ 8FFE 3A 54 89         ld a,(Coordenada_X)
 199+ 9001 16 10            ld d,Centro_derecha
 200+ 9003 A7               and a
 201+ 9004 92               sub d
 202+ 9005 28 0E            jr z,3F
 203+ 9007 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9009              ;                                                    ; _salimos sin modificar nada.
 205+ 9009 CB 43        2 bit 0,e
 206+ 900B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 900D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 900E CD A2 90         call Modificaccionne
 209+ 9011 C1           	pop bc
 210+ 9012 CD B2 90         call Inicializacion
 211+ 9015 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9016
 213+ 9016              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9016
 215+ 9016 C5           4 push bc
 216+ 9017 01 4F 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 901A 0A           	ld a,(bc)
 218+ 901B 3D           	dec a
 219+ 901C 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 901D 7D           	ld a,l
 221+ 901E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 901F CB 47        	bit 0,a
 223+ 9021 28 03        	jr z,5F
 224+ 9023 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9024 18 2E        	jr 7F
 226+ 9026
 227+ 9026              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9026
 229+ 9026 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9027 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9028 3A 70 89     	ld a,(Ctrl_0)
 232+ 902B CB 4F        	bit 1,a
 233+ 902D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 902F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9030
 236+ 9030              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9030
 238+ 9030 1C               inc e
 239+ 9031 1D               dec e
 240+ 9032 20 07            jr nz,12F
 241+ 9034 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9035 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9036 22 50 89     	ld (Posicion_actual),hl
 244+ 9039 18 44        13 jr 9F
 245+ 903B CB 43        12 bit 0,e
 246+ 903D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 903F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 903F C1           	pop bc
 249+ 9040 18 D3        	jr 3B
 250+ 9042 80           14 add b
 251+ 9043 6F               ld l,a
 252+ 9044 22 50 89     	ld (Posicion_actual),hl
 253+ 9047 CD A2 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 904A 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 904C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 904E 32 70 89         ld (Ctrl_0),a
 257+ 9051 F1           	pop af
 258+ 9052 18 2B        	jr 9F
 259+ 9054
 260+ 9054              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9054
 262+ 9054 F5           7 push af
 263+ 9055 3A 70 89     	ld a,(Ctrl_0)
 264+ 9058 CB 47        	bit 0,a
 265+ 905A 20 1D        	jr nz,8F
 266+ 905C F1           	pop af
 267+ 905D
 268+ 905D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 905D
 270+ 905D 1C           	inc e
 271+ 905E 1D               dec e
 272+ 905F 20 07            jr nz,10F
 273+ 9061 90           	sub b
 274+ 9062 6F               ld l,a
 275+ 9063 22 50 89     	ld (Posicion_actual),hl
 276+ 9066 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9068              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9068 CB 43        10 bit 0,e
 279+ 906A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 906C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 906C C1           	pop bc
 282+ 906D 18 A6        	jr 3B
 283+ 906F 90           16 sub b
 284+ 9070 6F               ld l,a
 285+ 9071 22 50 89     	ld (Posicion_actual),hl
 286+ 9074 CD A2 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9077 18 06            jr 9F
 288+ 9079 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 907B 32 70 89         ld (Ctrl_0),a
 290+ 907E F1           	pop af
 291+ 907F C1           9 pop bc
 292+ 9080 1E 00        	ld e,0
 293+ 9082 CD B2 90         call Inicializacion
 294+ 9085 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9086 08           	ex af,af
 296+ 9087 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9088 18 8B            jr 3B
 298+ 908A
 299+ 908A              ; --------------------
 300+ 908A
 301+ 908A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 908C CD 19 92     1 call PreviousScan
 303+ 908F 10 FB            djnz 1B
 304+ 9091 22 50 89     	ld (Posicion_actual),hl
 305+ 9094 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9095 C9           	ret
 307+ 9096
 308+ 9096              ; --------------------
 309+ 9096
 310+ 9096 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9098 CD 0A 92     1 call NextScan
 312+ 909B 10 FB            djnz 1B
 313+ 909D 22 50 89     	ld (Posicion_actual),hl
 314+ 90A0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 90A1 C9           	ret
 316+ 90A2
 317+ 90A2              ; --------------------
 318+ 90A2              ;
 319+ 90A2              ;	22/01/23
 320+ 90A2              ;
 321+ 90A2              ;	E="1". Hemos cambiado de cuadrante.
 322+ 90A2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 90A2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 90A2
 325+ 90A2
 326+ 90A2              Modificaccionne
 327+ 90A2
 328+ 90A2 3A 62 89     	ld a,(Cuad_objeto)
 329+ 90A5 FE 02        	cp 2
 330+ 90A7 CC 8A 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 90AA DC 8A 90         call c,Modifica_Pos_actual
 332+ 90AD C8           	ret z
 333+ 90AE CD 96 90         call Modifica_Pos_actual2
 334+ 90B1 C9               ret
 335+ 90B2
 336+ 90B2              ; *************************************************************************************************************************************************************************************************
 337+ 90B2              ;
 338+ 90B2              ;	13/8/22
 339+ 90B2              ;
 340+ 90B2              ;	Inicializacion
 341+ 90B2              ;
 342+ 90B2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 90B2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 90B2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 90B2              ;
 346+ 90B2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 90B2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 90B2              ;	_ desaparece/aparece.
 349+ 90B2
 350+ 90B2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 90B2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 90B2              ;
 353+ 90B2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 90B2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 90B2              ; 		   [E] ="0"
 356+ 90B2
 357+ 90B2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 90B2
 359+ 90B2 CD F4 9E     Inicializacion call calcula_tercio
 360+ 90B5 28 36        	jr z,primit
 361+ 90B7 E6 02        	and 2
 362+ 90B9 20 07        	jr nz,segmit
 363+ 90BB 7D           	ld a,l
 364+ 90BC FE 7F        	cp $7f
 365+ 90BE 38 2D        	jr c,primit
 366+ 90C0 28 2B        	jr z,primit
 367+ 90C2 CD 28 91     segmit call column
 368+ 90C5 38 13        	jr c,tercuad
 369+ 90C7 3E 04        cuarcuad ld a,4
 370+ 90C9 32 62 89     	ld (Cuad_objeto),a
 371+ 90CC 21 20 48     	ld hl,$4820
 372+ 90CF 22 72 89     	ld (Limite_horizontal),hl
 373+ 90D2 21 74 89     	ld hl,Limite_vertical
 374+ 90D5 36 0D        	ld (hl),$0d
 375+ 90D7 08           	ex af,af
 376+ 90D8 18 3C        	jr 1F
 377+ 90DA              tercuad
 378+ 90DA 3E 03        	ld a,3
 379+ 90DC 32 62 89     	ld (Cuad_objeto),a
 380+ 90DF 21 20 48     	ld hl,$4820
 381+ 90E2 22 72 89     	ld (Limite_horizontal),hl
 382+ 90E5 21 74 89     	ld hl,Limite_vertical
 383+ 90E8 36 12        	ld (hl),$12
 384+ 90EA 08           	ex af,af
 385+ 90EB 18 29        	jr 1F
 386+ 90ED CD 28 91     primit call column
 387+ 90F0 38 13        	jr c, primcuad
 388+ 90F2              segcuad
 389+ 90F2 3E 02        	ld a,2
 390+ 90F4 32 62 89     	ld (Cuad_objeto),a
 391+ 90F7 21 C0 4F     	ld hl,$4fc0
 392+ 90FA 22 72 89     	ld (Limite_horizontal),hl
 393+ 90FD 21 74 89     	ld hl,Limite_vertical
 394+ 9100 36 0D        	ld (hl),$0d
 395+ 9102 08           	ex af,af
 396+ 9103 18 11        	jr 1F
 397+ 9105              primcuad
 398+ 9105 3E 01        	ld a,1
 399+ 9107 32 62 89     	ld (Cuad_objeto),a
 400+ 910A 21 C0 4F     	ld hl,$4fc0
 401+ 910D 22 72 89     	ld (Limite_horizontal),hl
 402+ 9110 21 74 89     	ld hl,Limite_vertical
 403+ 9113 36 12        	ld (hl),$12
 404+ 9115 08           	ex af,af
 405+ 9116
 406+ 9116 C5           1 push bc
 407+ 9117 E5           	push hl
 408+ 9118 D5           	push de
 409+ 9119
 410+ 9119 2A 50 89     	ld hl,(Posicion_actual)
 411+ 911C CD 12 9F     	call Genera_coordenadas
 412+ 911F
 413+ 911F D1           	pop de
 414+ 9120 E1           	pop hl
 415+ 9121 C1           	pop bc
 416+ 9122
 417+ 9122 21 70 89     	ld hl,Ctrl_0
 418+ 9125 CB EE        	set 5,(hl)
 419+ 9127 C9           	ret
 420+ 9128
 421+ 9128              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9128
 423+ 9128              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9128              ;
 425+ 9128              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9128
 427+ 9128 7D           column ld a,l
 428+ 9129 E6 1F        	and $1f
 429+ 912B FE 10         	cp $10
 430+ 912D C9            	ret
 431+ 912E
 432+ 912E              ; --------------------------------------------------------------------------------------------------------------------
 433+ 912E              ;
 434+ 912E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 912E              ;
 436+ 912E              ; 14/12/22
 437+ 912E              ;
 438+ 912E              ;	Modifica: A y BC.
 439+ 912E
 440+ 912E 3A 62 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9131 E6 01        	and 1
 442+ 9133 28 17        	jr z,1F
 443+ 9135
 444+ 9135              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9135
 446+ 9135 3A 54 89     	ld a,(Coordenada_X)
 447+ 9138 47           	ld b,a
 448+ 9139 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 913A 79           	ld a,c
 450+ 913B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 913C 38 08        	jr c,2F
 452+ 913E 47           	ld b,a
 453+ 913F 79           	ld a,c
 454+ 9140 90           	sub b
 455+ 9141 32 71 89     	ld (Columnas),a
 456+ 9144 18 1B        	jr 4F
 457+ 9146 79           2 ld a,c
 458+ 9147 32 71 89     	ld (Columnas),a
 459+ 914A 18 15        	jr 4F
 460+ 914C
 461+ 914C              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 914C
 463+ 914C 3A 54 89     1 ld a,(Coordenada_X)
 464+ 914F 81           	add c
 465+ 9150 3D           	dec a
 466+ 9151 D6 1F        	sub $1f
 467+ 9153 38 08        	jr c,3F
 468+ 9155 47           	ld b,a
 469+ 9156 79           	ld a,c
 470+ 9157 90           	sub b
 471+ 9158 32 71 89     	ld (Columnas),a
 472+ 915B 18 04        	jr 4F
 473+ 915D 79           3 ld a,c
 474+ 915E 32 71 89     	ld (Columnas),a
 475+ 9161 D9           4 exx
 476+ 9162 4F           	ld c,a
 477+ 9163 D9           	exx
 478+ 9164 C9            ret
 479+ 9165
 480+ 9165              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9165              ;
 482+ 9165              ;   19/7/23
 483+ 9165              ;
 484+ 9165              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9165              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9165              ;
 487+ 9165              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9165              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9165              ;
 490+ 9165              ;	DESTRUYE: HL,B Y A.
 491+ 9165
 492+ 9165 3A 62 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9168 FE 02        	cp 2
 494+ 916A 38 18        	jr c,1F
 495+ 916C 28 16        	jr z,1F
 496+ 916E E6 01        	and 1
 497+ 9170 28 0D        	jr z,3F
 498+ 9172
 499+ 9172              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9172
 501+ 9172 CD B8 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9175
 503+ 9175 7D           9 ld a,l
 504+ 9176 E6 1F        	and $1f
 505+ 9178 28 2A        	jr z,7F
 506+ 917A 2B           	dec hl
 507+ 917B 10 F8        	djnz 9B
 508+ 917D 18 25        	jr 7F
 509+ 917F
 510+ 917F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 917F
 512+ 917F 2A 50 89     3 ld hl,(Posicion_actual)
 513+ 9182 18 20        	jr 7F
 514+ 9184
 515+ 9184 28 14        1 jr z,2F
 516+ 9186
 517+ 9186              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9186
 519+ 9186 CD B8 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9189
 521+ 9189 7D           4 ld a,l
 522+ 918A E6 1F        	and $1f
 523+ 918C 28 03        	jr z,6F
 524+ 918E 2B           	dec hl
 525+ 918F 10 F8        	djnz 4B
 526+ 9191 06 0F        6 ld b,15
 527+ 9193 CD 19 92     5 call PreviousScan
 528+ 9196 10 FB        	djnz 5B
 529+ 9198 18 0A        	jr 7F
 530+ 919A
 531+ 919A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 919A
 533+ 919A CD B8 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 919D 06 0F        	ld b,15
 535+ 919F CD 19 92     8 call PreviousScan
 536+ 91A2 10 FB        	djnz 8B
 537+ 91A4
 538+ 91A4 E5           7 push hl
 539+ 91A5 DD E1        	pop ix
 540+ 91A7
 541+ 91A7 2A 52 89     	ld hl,(Puntero_objeto)
 542+ 91AA E5           	push hl
 543+ 91AB FD E1        	pop iy
 544+ 91AD
 545+ 91AD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 91AD
 547+ 91AD 3A 70 89     	ld a,(Ctrl_0)
 548+ 91B0 CB 77        	bit 6,a
 549+ 91B2 C8           	ret z
 550+ 91B3
 551+ 91B3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 91B3              ; _ entidad / Amadeus´.
 553+ 91B3
 554+ 91B3 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 91B7
 556+ 91B7 C9           	ret
 557+ 91B8
 558+ 91B8              ; --------------------------------------------------------------------------------------------------------------------
 559+ 91B8              ;
 560+ 91B8              ;	2/1/23
 561+ 91B8              ;
 562+ 91B8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 91B8              ;
 564+ 91B8              ;	Tras esta rutina tenemos:
 565+ 91B8              ;
 566+ 91B8              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 91B8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 91B8              ;
 569+ 91B8              ;	DESTRUYE!!!!! HL,B y A.
 570+ 91B8
 571+ 91B8 2A 50 89     Operandos ld hl,(Posicion_actual)
 572+ 91BB 3A 71 89     	ld a,(Columnas)
 573+ 91BE 3D           	dec a
 574+ 91BF 20 01        	jr nz,1F
 575+ 91C1 3C           	inc a
 576+ 91C2 47           1 ld b,a
 577+ 91C3 C9           	ret
 578+ 91C4
 579+ 91C4              ; --------------------------------------------------------------------------------------------------------------------
 580+ 91C4              ;
 581+ 91C4              ;	3/1/23
 582+ 91C4              ;
 583+ 91C4              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 91C4              ;
 585+ 91C4              ;	Destruye: A,B,HL y DE.
 586+ 91C4
 587+ 91C4              Define_rutina_de_impresion
 588+ 91C4
 589+ 91C4 3A 4F 89     	ld a,(Columns)
 590+ 91C7 47           	ld b,a
 591+ 91C8 3A 71 89     	ld a,(Columnas)
 592+ 91CB B8           	cp b
 593+ 91CC 20 0D        	jr nz,2f
 594+ 91CE
 595+ 91CE              ;	La entidad se imprime entera.
 596+ 91CE
 597+ 91CE 21 ED 92     	ld hl, Indice_entidades_completas
 598+ 91D1 E6 01        	and 1
 599+ 91D3 28 02        	jr z,1F
 600+ 91D5
 601+ 91D5 23           	inc hl
 602+ 91D6 23           	inc hl
 603+ 91D7
 604+ 91D7 CD A9 8B     1 call Extrae_address
 605+ 91DA C9           	ret		;	ret
 606+ 91DB
 607+ 91DB              ;	La entidad no se imprime entera en pantalla.
 608+ 91DB
 609+ 91DB 3A 62 89     2 ld a,(Cuad_objeto)
 610+ 91DE E6 01        	and 1
 611+ 91E0 28 17        	jr z,3F
 612+ 91E2
 613+ 91E2              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 91E2
 615+ 91E2 21 F1 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 91E5 3A 4F 89     4 ld a,(Columns)
 617+ 91E8 E6 01        	and 1
 618+ 91EA 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 91EC
 620+ 91EC 23           	inc hl
 621+ 91ED 23           	inc hl
 622+ 91EE
 623+ 91EE 3A 71 89     	ld a,(Columnas)
 624+ 91F1 E6 01        	and 1
 625+ 91F3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91F5
 627+ 91F5 23           	inc hl
 628+ 91F6 23           	inc hl
 629+ 91F7
 630+ 91F7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91F9
 632+ 91F9 21 F7 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91FC 18 E7        	jr 4B
 634+ 91FE
 635+ 91FE              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91FE              ;
 637+ 91FE              ;	Prepara_draw
 638+ 91FE              ;
 639+ 91FE              ;	Es una rutina de carga.
 640+ 91FE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91FE              ;
 642+ 91FE              ;	FUNCIONAMIENTO:
 643+ 91FE              ;
 644+ 91FE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91FE              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91FE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91FE              ;
 648+ 91FE              ;	DESTRUYE:
 649+ 91FE              ;
 650+ 91FE              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91FE
 652+ 91FE 21 4E 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9201 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9202 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9203 4E           	ld c,(hl)
 656+ 9204 2A 50 89     	ld hl,(Posicion_actual)
 657+ 9207 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9209 C9           	ret
 659+ 920A
 660+ 920A              ;----------------------------------------------------------------------------------------------------------------
 661+ 920A              ;
 662+ 920A              ;	5/08/22
 663+ 920A              ;
 664+ 920A              ;   NextScan.
 665+ 920A              ;
 666+ 920A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 920A              ;
 668+ 920A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 920A              ;
 670+ 920A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 920A              ;
 672+ 920A              ;       DESTRUIDOS: AF y HL !!!
 673+ 920A              ;
 674+ 920A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 920A              ;
 676+ 920A
 677+ 920A 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 920B 7C               ld a,h
 679+ 920C E6 07            and 7
 680+ 920E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 920F
 682+ 920F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9210 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9212 6F               ld l,a
 685+ 9213 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9214
 687+ 9214 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9215 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9217 67               ld h,a
 690+ 9218 C9               ret
 691+ 9219
 692+ 9219              ;----------------------------------------------------------------------------------------------------------------
 693+ 9219              ;
 694+ 9219              ;	5/08/22
 695+ 9219              ;
 696+ 9219              ;   PreviousScan.
 697+ 9219              ;
 698+ 9219              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9219              ;
 700+ 9219              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9219              ;
 702+ 9219              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9219              ;
 704+ 9219              ;       DESTRUIDOS: AF y HL !!!
 705+ 9219              ;
 706+ 9219              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9219              ;
 708+ 9219
 709+ 9219 7C           PreviousScan ld a,h
 710+ 921A 25               dec h               ; Dec H.
 711+ 921B E6 07            and 7
 712+ 921D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 921E
 714+ 921E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 921F D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9221 6F               ld l,a
 717+ 9222 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9223
 719+ 9223 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9224 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9226 67               ld h,a
 722+ 9227 C9               ret
 723+ 9228
 724+ 9228              ; -----------------------------------------------------------------------------------
 725+ 9228              ;
 726+ 9228              ;	31/7/23
 727+ 9228              ;
 728+ 9228              ;	Rutina principal de pintado de entidades.
 729+ 9228              ;	Extrae la foto del frame, (entidades).
 730+ 9228
 731+ 9228              Extrae_foto_entidades
 732+ 9228
 733+ 9228 21 01 80     	ld hl,Album_de_fotos+1
 734+ 922B 7E           	ld a,(hl)
 735+ 922C A7           	and a
 736+ 922D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 922E
 738+ 922E              ;	No hay datos, (entidades para pintar en este frame).
 739+ 922E
 740+ 922E 3A 9D 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9231 A7           	and a
 742+ 9232 C8           	ret z
 743+ 9233
 744+ 9233              ; -----------------------------------
 745+ 9233
 746+ 9233 ED 73 A2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9237 31 00 80     	ld sp,Album_de_fotos
 748+ 923A
 749+ 923A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 923C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 923D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 923E
 753+ 923E ED 73 A4 89  	ld (Stack_2),sp
 754+ 9242 ED 7B A2 89  	ld sp,(Stack)
 755+ 9246
 756+ 9246              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9246
 758+ 9246 3E CD        	ld a,$cd
 759+ 9248 32 50 92     	ld (Imprime),a
 760+ 924B EB           	ex de,hl
 761+ 924C 22 51 92     	ld (Imprime+1),hl
 762+ 924F EB           	ex de,hl
 763+ 9250
 764+ 9250              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9250
 766+ 9250 00 00 00     Imprime db 0,0,0
 767+ 9253
 768+ 9253 ED 73 A2 89  	ld (Stack),sp
 769+ 9257
 770+ 9257 3A 9D 89     	ld a,(Numero_de_malotes)
 771+ 925A 3D           	dec a
 772+ 925B 28 09        	jr z,1F
 773+ 925D 32 9D 89      	ld (Numero_de_malotes),a
 774+ 9260
 775+ 9260 ED 7B A4 89  	ld sp,(Stack_2)
 776+ 9264 18 D4        	jr 2B
 777+ 9266
 778+ 9266 AF           1 xor a
 779+ 9267 32 A4 89     	ld (Stack_2),a
 780+ 926A
 781+ 926A C9           	ret
 782+ 926B
 783+ 926B              ; -----------------------------------------------------------------------------------
 784+ 926B              ;
 785+ 926B              ;	28/2/23
 786+ 926B              ;
 787+ 926B              ;	Pinta los disparos generados.
 788+ 926B
 789+ 926B              Extrae_foto_disparos
 790+ 926B
 791+ 926B 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 926E 7E               ld a,(hl)
 793+ 926F A7               and a
 794+ 9270 C8               ret z
 795+ 9271
 796+ 9271 3A B2 89     	ld a,(Numero_de_disparotes)
 797+ 9274 A7           	and a
 798+ 9275 C8           	ret z
 799+ 9276 ED 73 A2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 927A 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 927D
 802+ 927D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 927F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9280 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9281
 806+ 9281 ED 73 A4 89  	ld (Stack_2),sp
 807+ 9285 ED 7B A2 89  	ld sp,(Stack)
 808+ 9289
 809+ 9289              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9289
 811+ 9289 3E CD        	ld a,$cd
 812+ 928B 32 93 92     	ld (Imprime2),a
 813+ 928E EB           	ex de,hl
 814+ 928F 22 94 92     	ld (Imprime2+1),hl
 815+ 9292 EB           	ex de,hl
 816+ 9293
 817+ 9293              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9293
 819+ 9293 00 00 00     Imprime2 db 0,0,0
 820+ 9296
 821+ 9296 3A B2 89     	ld a,(Numero_de_disparotes)
 822+ 9299 3D           	dec a
 823+ 929A 28 09        	jr z,1F
 824+ 929C 32 B2 89      	ld (Numero_de_disparotes),a
 825+ 929F
 826+ 929F ED 7B A4 89  	ld sp,(Stack_2)
 827+ 92A3 18 D8        	jr 2B
 828+ 92A5
 829+ 92A5 AF           1 xor a
 830+ 92A6 32 A4 89     	ld (Stack_2),a
 831+ 92A9 C9           	ret
 832+ 92AA
 833+ 92AA              ; -----------------------------------------------------------------------------------
 834+ 92AA              ;
 835+ 92AA              ;	4/9/23
 836+ 92AA              ;
 837+ 92AA              ;	Rutina principal de pintado de Amadeus.
 838+ 92AA              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 92AA
 840+ 92AA 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 92AD 7E           	ld a,(hl)
 842+ 92AE A7           	and a
 843+ 92AF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92B0
 845+ 92B0 3A 9D 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92B3 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92B4 C8           	ret z
 848+ 92B5
 849+ 92B5              ; -----------------------------------
 850+ 92B5
 851+ 92B5 ED 73 A2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 92B9 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 92BC
 854+ 92BC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92BE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92BF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92C0
 858+ 92C0 ED 73 A4 89  	ld (Stack_2),sp
 859+ 92C4 ED 7B A2 89  	ld sp,(Stack)
 860+ 92C8
 861+ 92C8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92C8
 863+ 92C8 3E CD        	ld a,$cd
 864+ 92CA 32 D2 92     	ld (Imprime_Amadeus),a
 865+ 92CD EB           	ex de,hl
 866+ 92CE 22 D3 92     	ld (Imprime_Amadeus+1),hl
 867+ 92D1 EB           	ex de,hl
 868+ 92D2
 869+ 92D2              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92D2
 871+ 92D2 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92D5
 873+ 92D5 ED 73 A2 89  	ld (Stack),sp
 874+ 92D9
 875+ 92D9 3A 9D 89     	ld a,(Numero_de_malotes)
 876+ 92DC 3D           	dec a
 877+ 92DD 28 09        	jr z,1F
 878+ 92DF 32 9D 89      	ld (Numero_de_malotes),a
 879+ 92E2
 880+ 92E2 ED 7B A4 89  	ld sp,(Stack_2)
 881+ 92E6 18 D4        	jr 2B
 882+ 92E8
 883+ 92E8 AF           1 xor a
 884+ 92E9 32 A4 89     	ld (Stack_2),a
 885+ 92EC
 886+ 92EC C9           	ret
# file closed: Draw_XOR.asm
1734  92ED              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92ED              ;   índices de Rutinas de impresión.
   2+ 92ED
   3+ 92ED FD 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92EF 2A 93            defw Pinta_Amadeus_3x2
   5+ 92F1
   6+ 92F1 80 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92F3 20 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92F5 D4 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92F7
  10+ 92F7 AA 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92F9 AE 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92FB 62 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92FD
  14+ 92FD
  15+ 92FD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92FD              ;
  17+ 92FD              ;   12/12/22
  18+ 92FD              ;
  19+ 92FD              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92FD              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92FD              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92FD              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92FD              ;
  24+ 92FD              ;   Modifica: DE y HL.
  25+ 92FD
  26+ 92FD ED 73 A2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9301 FD F9        	ld sp,iy
  28+ 9303 06 10            ld b,16
  29+ 9305 D1           1 pop de
  30+ 9306 7B               ld a,e
  31+ 9307 AE               xor (hl)
  32+ 9308 77           	ld (hl),a
  33+ 9309 23           	inc hl
  34+ 930A 7A               ld a,d
  35+ 930B AE               xor (hl)
  36+ 930C 77           	ld (hl),a
  37+ 930D 2B           	dec hl
  38+ 930E 24           	inc h
  39+ 930F 7C               ld a,h
  40+ 9310 E6 07            and 7
  41+ 9312 20 0A            jr nz,2F
  42+ 9314 7D               ld a,l
  43+ 9315 C6 20            add a,$20
  44+ 9317 6F               ld l,a
  45+ 9318 38 04            jr c,2F
  46+ 931A 7C               ld a,h
  47+ 931B D6 08            sub 8
  48+ 931D 67               ld h,a
  49+ 931E 7C           2 ld a,h
  50+ 931F FE 58            cp $58
  51+ 9321 28 02            jr z,3F
  52+ 9323 10 E0            djnz 1B
  53+ 9325 ED 7B A2 89  3 ld sp,(Stack)
  54+ 9329 C9           	ret
  55+ 932A
  56+ 932A ED 73 A2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 932E FD F9        	ld sp,iy
  58+ 9330 06 08            ld b,8
  59+ 9332 D1           1 pop de
  60+ 9333 7B               ld a,e
  61+ 9334 AE               xor (hl)
  62+ 9335 77           	ld (hl),a
  63+ 9336 23           	inc hl
  64+ 9337 7A               ld a,d
  65+ 9338 AE               xor (hl)
  66+ 9339 77           	ld (hl),a
  67+ 933A 23           	inc hl
  68+ 933B D1           	pop de
  69+ 933C 7B               ld a,e
  70+ 933D AE               xor (hl)
  71+ 933E 77           	ld (hl),a
  72+ 933F 2B           	dec hl
  73+ 9340 2B           	dec hl
  74+ 9341 24           	inc h
  75+ 9342 7C               ld a,h
  76+ 9343 E6 07            and 7
  77+ 9345 20 0A            jr nz,2F
  78+ 9347 7D               ld a,l
  79+ 9348 C6 20            add a,$20
  80+ 934A 6F               ld l,a
  81+ 934B 38 04            jr c,2F
  82+ 934D 7C               ld a,h
  83+ 934E D6 08            sub 8
  84+ 9350 67               ld h,a
  85+ 9351 7C           2 ld a,h
  86+ 9352 FE 58            cp $58
  87+ 9354 28 25            jr z,4F
  88+ 9356 7A               ld a,d
  89+ 9357 AE               xor (hl)
  90+ 9358 77               ld (hl),a
  91+ 9359 D1           	pop de
  92+ 935A 23           	inc hl
  93+ 935B 7B               ld a,e
  94+ 935C AE               xor (hl)
  95+ 935D 77           	ld (hl),a
  96+ 935E 23           	inc hl
  97+ 935F 7A               ld a,d
  98+ 9360 AE               xor (hl)
  99+ 9361 77           	ld (hl),a
 100+ 9362 2B           	dec hl
 101+ 9363 2B           	dec hl
 102+ 9364 24           	inc h
 103+ 9365 7C               ld a,h
 104+ 9366 E6 07            and 7
 105+ 9368 20 0A            jr nz,3F
 106+ 936A 7D               ld a,l
 107+ 936B C6 20            add a,$20
 108+ 936D 6F               ld l,a
 109+ 936E 38 04            jr c,3F
 110+ 9370 7C               ld a,h
 111+ 9371 D6 08            sub 8
 112+ 9373 67               ld h,a
 113+ 9374 7C           3 ld a,h
 114+ 9375 FE 58            cp $58
 115+ 9377 28 02            jr z,4F
 116+ 9379 10 B7            djnz 1B
 117+ 937B ED 7B A2 89  4 ld sp,(Stack)
 118+ 937F C9           	ret
 119+ 9380
 120+ 9380              ; ---------------------------------------------------
 121+ 9380
 122+ 9380 ED 73 A2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9384 FD F9        	ld sp,iy
 124+ 9386
 125+ 9386              ; >>>
 126+ 9386
 127+ 9386 06 10            ld b,16
 128+ 9388 D1           1 pop de
 129+ 9389 7A           	ld a,d
 130+ 938A AE           	xor (hl)
 131+ 938B 77           	ld (hl),a
 132+ 938C 24           	inc h
 133+ 938D 7C               ld a,h
 134+ 938E E6 07            and 7
 135+ 9390 20 0C            jr nz,2F
 136+ 9392 7D               ld a,l
 137+ 9393 C6 20            add a,$20
 138+ 9395 6F               ld l,a
 139+ 9396 38 06            jr c,2F
 140+ 9398 7C               ld a,h
 141+ 9399 D6 08            sub 8
 142+ 939B 67               ld h,a
 143+ 939C 18 00            jr 2F
 144+ 939E 7C           2 ld a,h
 145+ 939F FE 58            cp $58
 146+ 93A1 28 02            jr z,3F
 147+ 93A3 10 E3            djnz 1B
 148+ 93A5 ED 7B A2 89  3 ld sp,(Stack)
 149+ 93A9 C9           	ret
 150+ 93AA
 151+ 93AA ED 73 A2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93AE FD F9        	ld sp,iy
 153+ 93B0
 154+ 93B0              ; >>>
 155+ 93B0
 156+ 93B0 06 10            ld b,16
 157+ 93B2 D1           1 pop de
 158+ 93B3 7B           	ld a,e
 159+ 93B4 AE           	xor (hl)
 160+ 93B5 77           	ld (hl),a
 161+ 93B6 24           	inc h
 162+ 93B7 7C               ld a,h
 163+ 93B8 E6 07            and 7
 164+ 93BA 20 0C            jr nz,2F
 165+ 93BC 7D               ld a,l
 166+ 93BD C6 20            add a,$20
 167+ 93BF 6F               ld l,a
 168+ 93C0 38 06            jr c,2F
 169+ 93C2 7C               ld a,h
 170+ 93C3 D6 08            sub 8
 171+ 93C5 67               ld h,a
 172+ 93C6 18 00            jr 2F
 173+ 93C8 7C           2 ld a,h
 174+ 93C9 FE 58            cp $58
 175+ 93CB 28 02            jr z,3F
 176+ 93CD 10 E3            djnz 1B
 177+ 93CF ED 7B A2 89  3 ld sp,(Stack)
 178+ 93D3 C9           	ret
 179+ 93D4
 180+ 93D4              ; ---------------------------------------------------
 181+ 93D4
 182+ 93D4 ED 73 A2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93D8 FD F9        	ld sp,iy
 184+ 93DA 06 08            ld b,8
 185+ 93DC D1           1 pop de
 186+ 93DD 7A           	ld a,d
 187+ 93DE AE           	xor (hl)
 188+ 93DF 77           	ld (hl),a
 189+ 93E0 23           	inc hl
 190+ 93E1 D1           	pop de
 191+ 93E2 7B           	ld a,e
 192+ 93E3 AE           	xor (hl)
 193+ 93E4 77           	ld (hl),a
 194+ 93E5 2B           	dec hl
 195+ 93E6 24            	inc h
 196+ 93E7 7C               ld a,h
 197+ 93E8 E6 07            and 7
 198+ 93EA 20 0A            jr nz,2F
 199+ 93EC 7D               ld a,l
 200+ 93ED C6 20            add a,$20
 201+ 93EF 6F               ld l,a
 202+ 93F0 38 04            jr c,2F
 203+ 93F2 7C               ld a,h
 204+ 93F3 D6 08            sub 8
 205+ 93F5 67               ld h,a
 206+ 93F6 7C           2 ld a,h
 207+ 93F7 FE 58            cp $58
 208+ 93F9 28 20            jr z,4F
 209+ 93FB D1               pop de
 210+ 93FC 7B           	ld a,e
 211+ 93FD AE           	xor (hl)
 212+ 93FE 77           	ld (hl),a
 213+ 93FF 23           	inc hl
 214+ 9400 7A           	ld a,d
 215+ 9401 AE           	xor (hl)
 216+ 9402 77           	ld (hl),a
 217+ 9403 2B           	dec hl
 218+ 9404 24           	inc h
 219+ 9405 7C               ld a,h
 220+ 9406 E6 07            and 7
 221+ 9408 20 0A            jr nz,3F
 222+ 940A 7D               ld a,l
 223+ 940B C6 20            add a,$20
 224+ 940D 6F               ld l,a
 225+ 940E 38 04            jr c,3F
 226+ 9410 7C               ld a,h
 227+ 9411 D6 08            sub 8
 228+ 9413 67               ld h,a
 229+ 9414 7C           3 ld a,h
 230+ 9415 FE 58            cp $58
 231+ 9417 28 02            jr z,4F
 232+ 9419 10 C1            djnz 1B
 233+ 941B ED 7B A2 89  4 ld sp,(Stack)
 234+ 941F C9           	ret
 235+ 9420
 236+ 9420 ED 73 A2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9424 FD F9        	ld sp,iy
 238+ 9426 06 08            ld b,8
 239+ 9428 D1           1 pop de
 240+ 9429 D1           	pop de
 241+ 942A 7B           	ld a,e
 242+ 942B AE           	xor (hl)
 243+ 942C 77           	ld (hl),a
 244+ 942D 24            	inc h
 245+ 942E 7C               ld a,h
 246+ 942F E6 07            and 7
 247+ 9431 20 0A            jr nz,2F
 248+ 9433 7D               ld a,l
 249+ 9434 C6 20            add a,$20
 250+ 9436 6F               ld l,a
 251+ 9437 38 04            jr c,2F
 252+ 9439 7C               ld a,h
 253+ 943A D6 08            sub 8
 254+ 943C 67               ld h,a
 255+ 943D 7C           2 ld a,h
 256+ 943E FE 58            cp $58
 257+ 9440 28 1B            jr z,4F
 258+ 9442 D1               pop de
 259+ 9443 7A           	ld a,d
 260+ 9444 AE           	xor (hl)
 261+ 9445 77           	ld (hl),a
 262+ 9446 24           	inc h
 263+ 9447 7C               ld a,h
 264+ 9448 E6 07            and 7
 265+ 944A 20 0A            jr nz,3F
 266+ 944C 7D               ld a,l
 267+ 944D C6 20            add a,$20
 268+ 944F 6F               ld l,a
 269+ 9450 38 04            jr c,3F
 270+ 9452 7C               ld a,h
 271+ 9453 D6 08            sub 8
 272+ 9455 67               ld h,a
 273+ 9456 7C           3 ld a,h
 274+ 9457 FE 58            cp $58
 275+ 9459 28 02            jr z,4F
 276+ 945B 10 CB            djnz 1B
 277+ 945D ED 7B A2 89  4 ld sp,(Stack)
 278+ 9461 C9           	ret
 279+ 9462
 280+ 9462 ED 73 A2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9466 FD F9        	ld sp,iy
 282+ 9468 06 08            ld b,8
 283+ 946A D1           1 pop de
 284+ 946B 7B           	ld a,e
 285+ 946C AE           	xor (hl)
 286+ 946D 77           	ld (hl),a
 287+ 946E 23           	inc hl
 288+ 946F 7A           	ld a,d
 289+ 9470 AE           	xor (hl)
 290+ 9471 77           	ld (hl),a
 291+ 9472 2B           	dec hl
 292+ 9473 24             	inc h
 293+ 9474 7C               ld a,h
 294+ 9475 E6 07            and 7
 295+ 9477 20 0A            jr nz,2F
 296+ 9479 7D               ld a,l
 297+ 947A C6 20            add a,$20
 298+ 947C 6F               ld l,a
 299+ 947D 38 04            jr c,2F
 300+ 947F 7C               ld a,h
 301+ 9480 D6 08            sub 8
 302+ 9482 67               ld h,a
 303+ 9483 7C           2 ld a,h
 304+ 9484 FE 58            cp $58
 305+ 9486 28 21            jr z,4F
 306+ 9488 D1               pop de
 307+ 9489 7A           	ld a,d
 308+ 948A AE           	xor (hl)
 309+ 948B 77           	ld (hl),a
 310+ 948C 23           	inc hl
 311+ 948D D1               pop de
 312+ 948E 7B           	ld a,e
 313+ 948F AE           	xor (hl)
 314+ 9490 77           	ld (hl),a
 315+ 9491 2B           	dec hl
 316+ 9492 24           	inc h
 317+ 9493 7C               ld a,h
 318+ 9494 E6 07            and 7
 319+ 9496 20 0A            jr nz,3F
 320+ 9498 7D               ld a,l
 321+ 9499 C6 20            add a,$20
 322+ 949B 6F               ld l,a
 323+ 949C 38 04            jr c,3F
 324+ 949E 7C               ld a,h
 325+ 949F D6 08            sub 8
 326+ 94A1 67               ld h,a
 327+ 94A2 7C           3 ld a,h
 328+ 94A3 FE 58            cp $58
 329+ 94A5 28 02            jr z,4F
 330+ 94A7 10 C1            djnz 1B
 331+ 94A9 ED 7B A2 89  4 ld sp,(Stack)
 332+ 94AD C9           	ret
 333+ 94AE
 334+ 94AE ED 73 A2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94B2 FD F9        	ld sp,iy
 336+ 94B4 06 08            ld b,8
 337+ 94B6 D1           1 pop de
 338+ 94B7 7B           	ld a,e
 339+ 94B8 AE           	xor (hl)
 340+ 94B9 77           	ld (hl),a
 341+ 94BA 24            	inc h
 342+ 94BB 7C               ld a,h
 343+ 94BC E6 07            and 7
 344+ 94BE 20 0A            jr nz,2F
 345+ 94C0 7D               ld a,l
 346+ 94C1 C6 20            add a,$20
 347+ 94C3 6F               ld l,a
 348+ 94C4 38 04            jr c,2F
 349+ 94C6 7C               ld a,h
 350+ 94C7 D6 08            sub 8
 351+ 94C9 67               ld h,a
 352+ 94CA 7C           2 ld a,h
 353+ 94CB FE 58            cp $58
 354+ 94CD 28 1C            jr z,4F
 355+ 94CF D1               pop de
 356+ 94D0 7A           	ld a,d
 357+ 94D1 AE           	xor (hl)
 358+ 94D2 77           	ld (hl),a
 359+ 94D3 24           	inc h
 360+ 94D4 7C               ld a,h
 361+ 94D5 E6 07            and 7
 362+ 94D7 20 0A            jr nz,3F
 363+ 94D9 7D               ld a,l
 364+ 94DA C6 20            add a,$20
 365+ 94DC 6F               ld l,a
 366+ 94DD 38 04            jr c,3F
 367+ 94DF 7C               ld a,h
 368+ 94E0 D6 08            sub 8
 369+ 94E2 67               ld h,a
 370+ 94E3 7C           3 ld a,h
 371+ 94E4 FE 58            cp $58
 372+ 94E6 28 03            jr z,4F
 373+ 94E8 D1               pop de
 374+ 94E9 10 CB            djnz 1B
 375+ 94EB ED 7B A2 89  4 ld sp,(Stack)
 376+ 94EF C9           	ret
 377+ 94F0
 378+ 94F0              ; ---------------------------------------------------
 379+ 94F0              ;
 380+ 94F0              ;   27/02/23
 381+ 94F0              ;
 382+ 94F0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94F0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94F0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94F0
 386+ 94F0 ED 73 A2 89  Pinta_Disparo ld (Stack),sp
 387+ 94F4 FD F9            ld sp,iy
 388+ 94F6 06 03            ld b,3
 389+ 94F8 D1           1 pop de
 390+ 94F9 7B               ld a,e
 391+ 94FA AE               xor (hl)
 392+ 94FB 77               ld (hl),a
 393+ 94FC 23               inc hl
 394+ 94FD 7A               ld a,d
 395+ 94FE AE               xor (hl)
 396+ 94FF 77               ld (hl),a
 397+ 9500 2B               dec hl
 398+ 9501
 399+ 9501 24               inc h
 400+ 9502 7C               ld a,h
 401+ 9503 E6 07            and 7
 402+ 9505 20 0A            jr nz,2F
 403+ 9507 7D               ld a,l
 404+ 9508 C6 20            add a,$20
 405+ 950A 6F               ld l,a
 406+ 950B 38 04            jr c,2F
 407+ 950D 7C               ld a,h
 408+ 950E D6 08            sub 8
 409+ 9510 67               ld h,a
 410+ 9511 7C           2 ld a,h
 411+ 9512 FE 58            cp $58
 412+ 9514 28 02            jr z,3F
 413+ 9516
 414+ 9516 10 E0            djnz 1B
 415+ 9518 ED 7B A2 89  3 ld sp,(Stack)
 416+ 951C C9               ret
 417+ 951D
# file closed: Rutinas_de_impresion_sprites.asm
1735  951D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 951D
   2+ 951D              ; ******************************************************************************************************************************************************************************************
   3+ 951D              ;
   4+ 951D              ;   20/05/23
   5+ 951D              ;
   6+ 951D              ;	Recompone_posicion_inicio
   7+ 951D              ;
   8+ 951D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 951D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 951D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 951D              ;	_ a una u otra rutina.
  12+ 951D
  13+ 951D              Recompone_posicion_inicio
  14+ 951D
  15+ 951D 2A 60 89     	ld hl,(Posicion_inicio)
  16+ 9520 7D           	ld a,l
  17+ 9521 E6 1F        	and $1f
  18+ 9523 28 16        	jr z,1F
  19+ 9525
  20+ 9525 FE 1F        	cp $1f
  21+ 9527 28 0D        	jr z,3F
  22+ 9529
  23+ 9529 21 75 89     	ld hl,Ctrl_2
  24+ 952C CB C6        	set 0,(hl)
  25+ 952E 2A 52 89     	ld hl,(Puntero_objeto)
  26+ 9531 22 92 89     	ld (Repone_puntero_objeto),hl
  27+ 9534 18 08        	jr 2F
  28+ 9536
  29+ 9536 CD E4 96     3 call Mov_left
  30+ 9539 18 03        	jr 2F
  31+ 953B
  32+ 953B CD C1 95     1 call Mov_right
  33+ 953E 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9541 22 52 89     	ld (Puntero_objeto),hl
  35+ 9544 C9           	ret
  36+ 9545
  37+ 9545              ; ******************************************************************************************************************************************************************************************
  38+ 9545              ;
  39+ 9545              ;   27/05/23
  40+ 9545              ;
  41+ 9545              ;	Mov_down
  42+ 9545              ;
  43+ 9545              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9545              ;
  45+ 9545              ;
  46+ 9545              Mov_down
  47+ 9545
  48+ 9545 CD AF 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9548              ;																	; _ repone (Puntero_objeto).
  50+ 9548 21 70 89     	ld hl,Ctrl_0
  51+ 954B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 954D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 954D              ; 																	; _ en el caso de que no lo haya.
  54+ 954D 3A 7A 89     	ld a,(Vel_down)
  55+ 9550 47           	ld b,a
  56+ 9551 2A 50 89         ld hl,(Posicion_actual)
  57+ 9554 CD F4 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9557 E6 02        	and 2
  59+ 9559 28 17        	jr z,1F
  60+ 955B
  61+ 955B              ; Nos encontramos en el último tercio de pantalla.
  62+ 955B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 955B
  64+ 955B 7C           	ld a,h
  65+ 955C FE 57        	cp $57
  66+ 955E 20 12        	jr nz,1F
  67+ 9560
  68+ 9560 7D           	ld a,l
  69+ 9561 C6 20        	add $20
  70+ 9563 30 0D        	jr nc,1F
  71+ 9565
  72+ 9565              ; ------------------------------
  73+ 9565              ;
  74+ 9565              ;	12/01/24
  75+ 9565
  76+ 9565              ;	call Reaparece_arriba
  77+ 9565 CD 71 98     	call Reinicio
  78+ 9568
  79+ 9568              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9568
  81+ 9568 3A B0 89     	ld a,(Ctrl_3)
  82+ 956B CB CF        	set 1,a
  83+ 956D 32 B0 89     	ld (Ctrl_3),a
  84+ 9570
  85+ 9570 18 08        	jr 3F
  86+ 9572              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9572              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9572              ; ------------------------------
  89+ 9572
  90+ 9572 CD 0A 92     1 call NextScan
  91+ 9575 22 50 89     	ld (Posicion_actual),hl
  92+ 9578 10 DA            djnz 2B
  93+ 957A CD 12 9F     3 call Genera_coordenadas
  94+ 957D C9           	ret
  95+ 957E
  96+ 957E              ; ******************************************************************************************************************************************************************************************
  97+ 957E              ;
  98+ 957E              ;   27/05/23
  99+ 957E              ;
 100+ 957E              ;	Mov_up
 101+ 957E              ;
 102+ 957E              ; 	Mueve el Sprite hacia arriba.
 103+ 957E              ;
 104+ 957E              ;
 105+ 957E              Mov_up
 106+ 957E
 107+ 957E CD AF 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9581              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9581 21 70 89     	ld hl,Ctrl_0
 110+ 9584 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9586              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9586              ; 																		; _ en el caso de que no lo haya.
 113+ 9586 3A 79 89     	ld a,(Vel_up)
 114+ 9589 47           	ld b,a
 115+ 958A 2A 50 89     	ld hl,(Posicion_actual)
 116+ 958D CD F4 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9590 A7           	and a
 118+ 9591 20 10        	jr nz,1F
 119+ 9593
 120+ 9593              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9593              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9593
 123+ 9593 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9594 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9596 20 0B            jr nz,1F
 126+ 9598 7D               ld a,l
 127+ 9599 D6 20            sub $20
 128+ 959B 30 06            jr nc,1F
 129+ 959D 25               dec h
 130+ 959E
 131+ 959E              ; -----------------------------
 132+ 959E CD 52 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 95A1              ;	call Reinicio
 134+ 95A1              ; -----------------------------
 135+ 95A1
 136+ 95A1 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 95A3 CD 19 92     1 call PreviousScan
 138+ 95A6 22 50 89     	ld (Posicion_actual),hl
 139+ 95A9 10 E2            djnz 3B
 140+ 95AB CD 12 9F     2 call Genera_coordenadas
 141+ 95AE C9           	ret
 142+ 95AF
 143+ 95AF              ; -----------------------------
 144+ 95AF              ;
 145+ 95AF              ;	27/5/23
 146+ 95AF              ;
 147+ 95AF              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95AF              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95AF              ;
 150+ 95AF              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95AF              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95AF              ;
 153+ 95AF              ;	Modifica: A y (Puntero_objeto).
 154+ 95AF
 155+ 95AF 3A 75 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95B2 CB 47        	bit 0,a
 157+ 95B4 C8           	ret z
 158+ 95B5 CB 87        	res 0,a
 159+ 95B7 32 75 89     	ld (Ctrl_2),a
 160+ 95BA 2A 92 89     	ld hl,(Repone_puntero_objeto)
 161+ 95BD 22 52 89     	ld (Puntero_objeto),hl
 162+ 95C0 C9           	ret
 163+ 95C1
 164+ 95C1              ; ******************************************************************************************************************************************************************************************
 165+ 95C1              ;
 166+ 95C1              ;	19/10/22
 167+ 95C1              ;
 168+ 95C1              ;	Mov_right.
 169+ 95C1              ;
 170+ 95C1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95C1              ;
 172+ 95C1
 173+ 95C1 3A 70 89     Mov_right ld a,(Ctrl_0)
 174+ 95C4 CB 77        	bit 6,a
 175+ 95C6 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C8
 177+ 95C8 CD 00 98     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95CB C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95CC
 180+ 95CC 21 70 89     	ld hl,Ctrl_0
 181+ 95CF CB E6        	set 4,(hl)
 182+ 95D1 18 52        	jr 8F
 183+ 95D3
 184+ 95D3 21 70 89     10 ld hl,Ctrl_0
 185+ 95D6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D8              ; 																	; _ en el caso de que no lo haya.
 188+ 95D8 3A 54 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95DB FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95DD 20 46        	jr nz,8F
 191+ 95DF
 192+ 95DF 3A 56 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95E2 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95E3 28 40        	jr z,8F
 195+ 95E5
 196+ 95E5              ; ---------- ---------- ----------
 197+ 95E5              ;
 198+ 95E5              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95E5
 200+ 95E5 3A 78 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E8 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95EA 28 11        	jr z,1F
 203+ 95EC 38 06        	jr c,6F
 204+ 95EE FE 04        	cp 4
 205+ 95F0 28 14        	jr z,7F
 206+ 95F2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95F4
 208+ 95F4              ; ---------- ---------- ----------
 209+ 95F4              ;
 210+ 95F4              ; Perfiles de velocidad
 211+ 95F4              ;
 212+ 95F4
 213+ 95F4 3A 56 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F7 FE FE        	cp $fe
 215+ 95F9 20 2A        	jr nz,8F
 216+ 95FB 18 10        	jr 3F
 217+ 95FD 3A 56 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9600 FE FD        	cp $fd
 219+ 9602 20 21        	jr nz,8F
 220+ 9604 18 07        	jr 3F
 221+ 9606 3A 56 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9609 FE FB        	cp $fb
 223+ 960B 20 18        	jr nz,8F
 224+ 960D
 225+ 960D              ; ---------- ---------- ----------
 226+ 960D
 227+ 960D              3
 228+ 960D CD 40 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9610              ;	call Reinicio
 230+ 9610
 231+ 9610              ; ---------- ---------- ----------
 232+ 9610              ;
 233+ 9610              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9610
 235+ 9610 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9612 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9613 CD 2C 96     	call DESPLZ_DER
 238+ 9616 C1           	pop bc
 239+ 9617 10 F9        	djnz 5B
 240+ 9619 2A 50 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 961C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 961D 22 50 89     	ld (Posicion_actual),hl
 243+ 9620 CD 12 9F     	call Genera_coordenadas
 244+ 9623 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9625
 246+ 9625              ; ---------- ---------- ----------
 247+ 9625
 248+ 9625 2A 50 89     8 ld hl,(Posicion_actual)
 249+ 9628 CD 2C 96     	call DESPLZ_DER
 250+ 962B C9           2 ret
 251+ 962C
 252+ 962C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 962C              ;
 254+ 962C              ;	22/9/22
 255+ 962C              ;
 256+ 962C
 257+ 962C CD 3B 96     DESPLZ_DER call Desplaza_derecha
 258+ 962F CD 87 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9632 CD B0 96         call Ciclo_completo
 260+ 9635 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9638 CB FE        	set 7,(hl)
 262+ 963A C9           	ret
 263+ 963B
 264+ 963B              ; ******************************************************************************************************************************************************************************************
 265+ 963B              ;	15/02/23
 266+ 963B              ;
 267+ 963B
 268+ 963B 3A 78 89     Desplaza_derecha ld a,(Vel_right)
 269+ 963E 47           	ld b,a
 270+ 963F 2A 5C 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9642 23           1 inc hl
 272+ 9643 23           	inc hl
 273+ 9644 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9646 22 5C 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9649 CD A9 8B     	call Extrae_address
 276+ 964C 22 52 89     	ld (Puntero_objeto),hl
 277+ 964F
 278+ 964F              ; Modifica (Puntero_DESPLZ_izq).
 279+ 964F
 280+ 964F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 964F              ; Cuántos movimientos hemos hecho ??
 282+ 964F              ; DE contiene (Puntero_DESPLZ_der).
 283+ 964F
 284+ 964F 2A 58 89     7 ld hl,(Indice_Sprite_der)
 285+ 9652 EB           	ex de,hl
 286+ 9653 A7           	and a
 287+ 9654 ED 52        	sbc hl,de
 288+ 9656 CB 3D        	srl l
 289+ 9658 3E 08        6 ld a,8
 290+ 965A 95           	sub l
 291+ 965B 30 1E        	jr nc,3F
 292+ 965D
 293+ 965D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 965D              ; B="0".
 295+ 965D
 296+ 965D 04           4 inc b
 297+ 965E 3C           	inc a
 298+ 965F 20 FC        	jr nz,4B
 299+ 9661 78           	ld a,b
 300+ 9662 08           	ex af,af
 301+ 9663 2A 58 89     	ld hl,(Indice_Sprite_der)
 302+ 9666 23           5 inc hl
 303+ 9667 23           	inc hl
 304+ 9668 10 FC        	djnz 5B
 305+ 966A 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 306+ 966D CD A9 8B     	call Extrae_address
 307+ 9670 22 52 89     	ld (Puntero_objeto),hl
 308+ 9673
 309+ 9673              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9673              ; _(Posicion_actual).
 311+ 9673
 312+ 9673 21 50 89     	ld hl,Posicion_actual
 313+ 9676 34           	inc (hl)
 314+ 9677 08               ex af,af
 315+ 9678 6F           	ld l,a
 316+ 9679 18 DD        	jr 6B
 317+ 967B
 318+ 967B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 967B
 320+ 967B 47           3 ld b,a
 321+ 967C 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 322+ 967F 23           2 inc hl
 323+ 9680 23           	inc hl
 324+ 9681 10 FC        	djnz 2B
 325+ 9683 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9686 C9           8 ret
 327+ 9687
 328+ 9687              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9687              ;
 330+ 9687              ;	24/7/22
 331+ 9687              ;
 332+ 9687              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9687              ;
 334+ 9687              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9687              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9687              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9687
 338+ 9687 3A 56 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 968A A7           	and a
 340+ 968B 20 1F        	jr nz,1F
 341+ 968D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 968F 32 56 89         ld (CTRL_DESPLZ),a
 343+ 9692
 344+ 9692 21 4F 89     	ld hl,Columns
 345+ 9695 34           	inc (hl)
 346+ 9696 3A 62 89     	ld a,(Cuad_objeto)
 347+ 9699 E6 01        	and 1
 348+ 969B 28 0F        	jr z,1F
 349+ 969D 2A 50 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 96A0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 96A1 22 50 89     	ld (Posicion_actual),hl
 352+ 96A4 CD 12 9F     	call Genera_coordenadas
 353+ 96A7 CD 0C 98     	call Inc_CTRL_DESPLZ
 354+ 96AA 18 03        	jr 2F
 355+ 96AC CD 0C 98     1 call Inc_CTRL_DESPLZ
 356+ 96AF C9           2 ret
 357+ 96B0
 358+ 96B0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96B0              ;
 360+ 96B0              ;	24/7/22
 361+ 96B0              ;
 362+ 96B0              ;	Ciclo_completo.
 363+ 96B0              ;
 364+ 96B0              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96B0              ;
 366+ 96B0              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96B0              ; 	Decrementamos (Columns).
 368+ 96B0              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96B0              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96B0
 371+ 96B0
 372+ 96B0 3A 56 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96B3 FE FF        	cp $ff
 374+ 96B5 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B7 E6 F0        	and $f0
 376+ 96B9 20 28        	jr nz,3F
 377+ 96BB
 378+ 96BB              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96BB
 380+ 96BB 3A 56 89     	ld a,(CTRL_DESPLZ)
 381+ 96BE 47           	ld b,a
 382+ 96BF 3E F8        	ld a,$f8
 383+ 96C1 80           	add b
 384+ 96C2 32 56 89     	ld (CTRL_DESPLZ),a
 385+ 96C5 18 1C        	jr 3F
 386+ 96C7 21 4F 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96CA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96CB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96CC 32 56 89     	ld (CTRL_DESPLZ),a
 390+ 96CF 3A 62 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96D2 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96D4 20 0A        	jr nz,2F
 393+ 96D6 2A 50 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D9 23           	inc hl
 395+ 96DA 22 50 89     	ld (Posicion_actual),hl
 396+ 96DD CD 12 9F     	call Genera_coordenadas
 397+ 96E0
 398+ 96E0              ; Inicia el puntero de Sprite.
 399+ 96E0
 400+ 96E0 CD BE 8B     2 call Inicia_puntero_objeto_der
 401+ 96E3 C9           3 ret
 402+ 96E4
 403+ 96E4              ; ******************************************************************************************************************************************************************************************
 404+ 96E4              ;
 405+ 96E4              ;	15/02/23
 406+ 96E4              ;
 407+ 96E4              ;	Mov_left.
 408+ 96E4              ;
 409+ 96E4              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96E4              ;
 411+ 96E4              Mov_left
 412+ 96E4
 413+ 96E4 21 70 89     	ld hl,Ctrl_0
 414+ 96E7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E9              ; 																	; _ en el caso de que no lo haya.
 417+ 96E9 3A 70 89     	ld a,(Ctrl_0)
 418+ 96EC CB 77        	bit 6,a
 419+ 96EE 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96F0
 421+ 96F0 CD 06 98     	call Stop_Amadeus_left
 422+ 96F3 C8           	ret z
 423+ 96F4 20 4A        	jr nz,8F
 424+ 96F6
 425+ 96F6 3A 54 89     11 ld a,(Coordenada_X)
 426+ 96F9 A7           	and a
 427+ 96FA 20 44        	jr nz,8F
 428+ 96FC
 429+ 96FC 3A 56 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96FF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9700 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9702
 433+ 9702              ; ---------- ---------- ----------
 434+ 9702
 435+ 9702 3A 77 89     	ld a,(Vel_left)
 436+ 9705 FE 02        	cp 2
 437+ 9707 28 0F        	jr z,1F
 438+ 9709 38 04        	jr c,6F
 439+ 970B FE 04        	cp 4
 440+ 970D 28 12        	jr z,7F
 441+ 970F
 442+ 970F              ; ---------- ---------- ----------
 443+ 970F
 444+ 970F 3A 56 89     6 ld a,(CTRL_DESPLZ)
 445+ 9712 FE F8        	cp $f8
 446+ 9714 20 2A        	jr nz,8F
 447+ 9716 18 10        	jr 4F
 448+ 9718 3A 56 89     1 ld a,(CTRL_DESPLZ)
 449+ 971B FE F9        	cp $f9
 450+ 971D 20 21        	jr nz,8F
 451+ 971F 18 07        	jr 4F
 452+ 9721 3A 56 89     7 ld a,(CTRL_DESPLZ)
 453+ 9724 FE FB        	cp $fb
 454+ 9726 20 18        	jr nz,8F
 455+ 9728
 456+ 9728              ; ---------- ---------- ----------
 457+ 9728
 458+ 9728              4
 459+ 9728 CD 2E 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 972B              ;	call Reinicio
 461+ 972B
 462+ 972B              ; ---------- ---------- ----------
 463+ 972B
 464+ 972B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 972D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 972E
 467+ 972E              ;	ld hl,(Indice_Sprite_izq)
 468+ 972E              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 972E
 470+ 972E CD 47 97     	call DESPLZ_IZQ
 471+ 9731 C1           	pop bc
 472+ 9732 10 F9        	djnz 5B
 473+ 9734 2A 50 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9737 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9738 22 50 89     	ld (Posicion_actual),hl
 476+ 973B CD 12 9F     	call Genera_coordenadas
 477+ 973E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9740
 479+ 9740              ; ---------- ---------- ----------
 480+ 9740
 481+ 9740              ; Movemos, no hay recolocación.
 482+ 9740
 483+ 9740 2A 50 89     8 ld hl,(Posicion_actual)
 484+ 9743 CD 47 97     	call DESPLZ_IZQ
 485+ 9746 C9           2 ret
 486+ 9747
 487+ 9747              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9747              ;
 489+ 9747              ;	22/9/22
 490+ 9747
 491+ 9747              DESPLZ_IZQ
 492+ 9747
 493+ 9747 CD 56 97     	call Desplaza_izquierda
 494+ 974A CD A2 97         call modifica_parametros_1er_DESPLZ
 495+ 974D CD CA 97     	call Ciclo_completo_2
 496+ 9750 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9753 CB BE        	res 7,(hl)
 498+ 9755 C9           	ret
 499+ 9756
 500+ 9756              Desplaza_izquierda
 501+ 9756
 502+ 9756 3A 77 89     	ld a,(Vel_left)
 503+ 9759 47           	ld b,a
 504+ 975A 2A 5E 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 975D 23           1 inc hl
 506+ 975E 23           	inc hl
 507+ 975F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9761 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9764 CD A9 8B     	call Extrae_address
 510+ 9767 22 52 89     	ld (Puntero_objeto),hl
 511+ 976A
 512+ 976A              ; Modifica (Puntero_DESPLZ_der).
 513+ 976A
 514+ 976A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 976A              ; Cuántos movimientos hemos hecho ??
 516+ 976A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 976A
 518+ 976A 2A 5A 89     7 ld hl,(Indice_Sprite_izq)
 519+ 976D EB           	ex de,hl
 520+ 976E A7           	and a
 521+ 976F ED 52        	sbc hl,de
 522+ 9771 CB 3D        	srl l
 523+ 9773 3E 08        6 ld a,8
 524+ 9775 95           	sub l
 525+ 9776 30 1E        	jr nc,3F
 526+ 9778
 527+ 9778              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9778              ; B="0".
 529+ 9778
 530+ 9778 04           4 inc b
 531+ 9779 3C           	inc a
 532+ 977A 20 FC        	jr nz,4B
 533+ 977C 78           	ld a,b
 534+ 977D 08           	ex af,af
 535+ 977E 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 536+ 9781 23           5 inc hl
 537+ 9782 23           	inc hl
 538+ 9783 10 FC        	djnz 5B
 539+ 9785 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9788 CD A9 8B     	call Extrae_address
 541+ 978B 22 52 89     	ld (Puntero_objeto),hl
 542+ 978E
 543+ 978E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 978E              ; _(Posicion_actual).
 545+ 978E
 546+ 978E 21 50 89     	ld hl,Posicion_actual
 547+ 9791 35           	dec (hl)
 548+ 9792 08           	ex af,af
 549+ 9793 6F           	ld l,a
 550+ 9794 18 DD        	jr 6B
 551+ 9796
 552+ 9796              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9796
 554+ 9796 47           3 ld b,a
 555+ 9797 2A 58 89     	ld hl,(Indice_Sprite_der)
 556+ 979A 23           2 inc hl
 557+ 979B 23           	inc hl
 558+ 979C 10 FC        	djnz 2B
 559+ 979E 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 560+ 97A1 C9           8 ret
 561+ 97A2
 562+ 97A2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 97A2              ;
 564+ 97A2              ;	modifica_parametros_1er_DESPLZ
 565+ 97A2              ;
 566+ 97A2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 97A2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 97A2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 97A2
 570+ 97A2 3A 56 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 97A5 A7           	and a
 572+ 97A6 20 1E        	jr nz,1F
 573+ 97A8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A9 32 56 89         ld (CTRL_DESPLZ),a
 575+ 97AC 21 4F 89     	ld hl,Columns
 576+ 97AF 34           	inc (hl)
 577+ 97B0 3A 62 89     	ld a,(Cuad_objeto)
 578+ 97B3 E6 01        	and 1
 579+ 97B5 20 0F        	jr nz,1F
 580+ 97B7 2A 50 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97BA 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97BB 22 50 89     	ld (Posicion_actual),hl
 583+ 97BE CD 12 9F     	call Genera_coordenadas
 584+ 97C1 CD 1D 98     	call Dec_CTRL_DESPLZ
 585+ 97C4 18 03        	jr 2F
 586+ 97C6 CD 1D 98     1 call Dec_CTRL_DESPLZ
 587+ 97C9 C9           2 ret
 588+ 97CA
 589+ 97CA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97CA
 591+ 97CA 3A 56 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97CD FE F7        	cp $f7
 593+ 97CF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97D1 30 2C        	jr nc,3F
 595+ 97D3
 596+ 97D3              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97D3
 598+ 97D3 06 00        	ld b,0
 599+ 97D5 04           4 inc b
 600+ 97D6 3C           	inc a
 601+ 97D7 FE F7        	cp $f7
 602+ 97D9 20 FA        	jr nz,4B
 603+ 97DB 3E FF        	ld a,$ff
 604+ 97DD 90           	sub b
 605+ 97DE 32 56 89     	ld (CTRL_DESPLZ),a
 606+ 97E1 18 1C        	jr 3F
 607+ 97E3
 608+ 97E3              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97E3
 610+ 97E3 21 4F 89     1 ld hl,Columns
 611+ 97E6 35           	dec (hl)
 612+ 97E7 AF           	xor a
 613+ 97E8 32 56 89     	ld (CTRL_DESPLZ),a
 614+ 97EB 3A 62 89     	ld a,(Cuad_objeto)
 615+ 97EE E6 01        	and 1
 616+ 97F0 28 0A        	jr z,2F
 617+ 97F2 2A 50 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97F5 2B           	dec hl
 619+ 97F6 22 50 89     	ld (Posicion_actual),hl
 620+ 97F9 CD 12 9F     	call Genera_coordenadas
 621+ 97FC
 622+ 97FC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97FC
 624+ 97FC CD D1 8B     2 call Inicia_puntero_objeto_izq
 625+ 97FF C9           3 ret
 626+ 9800
 627+ 9800              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9800              ;
 629+ 9800              ;	19/10/22
 630+ 9800              ;
 631+ 9800              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9800              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9800
 634+ 9800 3A 54 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9803 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9805 C9           	ret
 637+ 9806
 638+ 9806              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9806              ;
 640+ 9806              ;	19/10/22
 641+ 9806              ;
 642+ 9806              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9806              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9806
 645+ 9806 3A 54 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9809 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 980B C9           	ret
 648+ 980C
 649+ 980C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 980C              ;
 651+ 980C              ;	24/7/22
 652+ 980C              ;
 653+ 980C              ;	Inc_CTRL_DESPLZ
 654+ 980C              ;
 655+ 980C              ;
 656+ 980C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 980C
 658+ 980C 21 56 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 980F 3A 78 89     	ld a,(Vel_right)
 660+ 9812 A7           	and a
 661+ 9813 28 06        	jr z,1F
 662+ 9815 47           	ld b,a
 663+ 9816 34           3 inc (hl)
 664+ 9817 10 FD        	djnz 3B
 665+ 9819 18 01        	jr 2F
 666+ 981B 34           1 inc (hl)
 667+ 981C C9           2 ret
 668+ 981D
 669+ 981D              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 981D              ;
 671+ 981D              ;	5/2/23
 672+ 981D              ;
 673+ 981D              ;	Dec_CTRL_DESPLZ
 674+ 981D              ;
 675+ 981D              ;
 676+ 981D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 981D
 678+ 981D 21 56 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9820 3A 77 89     	ld a,(Vel_left)
 680+ 9823 A7           	and a
 681+ 9824 28 06        	jr z,1F
 682+ 9826 47           	ld b,a
 683+ 9827 35           3 dec (hl)
 684+ 9828 10 FD        	djnz 3B
 685+ 982A 18 01        	jr 2F
 686+ 982C 35           1 dec (hl)
 687+ 982D C9           2 ret
 688+ 982E
 689+ 982E              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 982E
 691+ 982E 2A 50 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9831 01 1F 00     	ld bc,31
 693+ 9834 A7           	and a
 694+ 9835 ED 4A        	adc hl,bc
 695+ 9837 22 50 89     	ld (Posicion_actual),hl
 696+ 983A 21 70 89     	ld hl,Ctrl_0														; $xxx1
 697+ 983D CB C6        	set 0,(hl)
 698+ 983F C9           	ret
 699+ 9840
 700+ 9840              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9840
 702+ 9840 2A 50 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9843 01 1F 00     	ld bc,31
 704+ 9846 A7           	and a
 705+ 9847 ED 42        	sbc hl,bc
 706+ 9849 22 50 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 984C 21 70 89     	ld hl,Ctrl_0
 708+ 984F CB CE        	set 1,(hl)
 709+ 9851 C9           	ret
 710+ 9852
 711+ 9852              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9852
 713+ 9852 24           Reaparece_abajo inc h
 714+ 9853 01 E0 17     	ld bc,$17e0
 715+ 9856 A7           	and a
 716+ 9857 ED 4A        	adc hl,bc
 717+ 9859 22 50 89     	ld (Posicion_actual),hl
 718+ 985C 21 70 89     	ld hl,Ctrl_0
 719+ 985F CB D6        	set 2,(hl)
 720+ 9861 C9           	ret
 721+ 9862
 722+ 9862              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9862
 724+ 9862 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9865 A7           	and a
 726+ 9866 ED 42        	sbc hl,bc
 727+ 9868 22 50 89     	ld (Posicion_actual),hl
 728+ 986B 21 70 89     	ld hl,Ctrl_0
 729+ 986E CB DE        	set 3,(hl)
 730+ 9870 C9           	ret
 731+ 9871
 732+ 9871              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9871              ;
 734+ 9871              ;	15/07/23
 735+ 9871
 736+ 9871              Reinicio
 737+ 9871
 738+ 9871              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9871
 740+ 9871 AF           	xor a
 741+ 9872 21 89 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9875 CD 93 98     	call Limpia_contenido_hl
 743+ 9878
 744+ 9878 21 50 89     	ld hl,Posicion_actual
 745+ 987B CD 93 98     	call Limpia_contenido_hl
 746+ 987E
 747+ 987E CD 33 8D     	call Inicializa_Puntero_indice_mov
 748+ 9881 CD 5F 99     	call Inicia_Puntero_mov
 749+ 9884
 750+ 9884 21 8B 89     	ld hl,Incrementa_puntero
 751+ 9887 06 05        	ld b,5
 752+ 9889 77           1 ld (hl),a
 753+ 988A 23           	inc hl
 754+ 988B 10 FC        	djnz 1B
 755+ 988D
 756+ 988D 21 75 89     	ld hl,Ctrl_2
 757+ 9890 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9892
 759+ 9892 C9           	ret
 760+ 9893
 761+ 9893 77           Limpia_contenido_hl	ld (hl),a
 762+ 9894 23           	inc hl
 763+ 9895 77           	ld (hl),a
 764+ 9896 C9           	ret
 765+ 9897
 766+ 9897
# file closed: Direcciones.asm
1736  9897              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9897              ; ----- ----- ----- ----- -----
   2+ 9897              ;
   3+ 9897              ;   28/12/23
   4+ 9897
   5+ 9897              Movimiento
   6+ 9897
   7+ 9897              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9897
   9+ 9897 3A 75 89         ld a,(Ctrl_2)
  10+ 989A CB 57            bit 2,a
  11+ 989C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 989E
  13+ 989E 2A 87 89         ld hl,(Puntero_mov)
  14+ 98A1 7E               ld a,(hl)
  15+ 98A2
  16+ 98A2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98A2
  18+ 98A2              Inicia_desplazamiento.
  19+ 98A2
  20+ 98A2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98A2
  22+ 98A2 CD 95 99         call Ajusta_velocidad_desplazamiento
  23+ 98A5
  24+ 98A5              ; Iniciamos (Repetimos_mov).
  25+ 98A5
  26+ 98A5 7E               ld a,(hl)
  27+ 98A6 E6 0F            and $0f
  28+ 98A8 32 8D 89         ld (Repetimos_desplazamiento),a
  29+ 98AB 32 8E 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98AE
  31+ 98AE              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98AE
  33+ 98AE 23               inc hl
  34+ 98AF 7E               ld a,(hl)
  35+ 98B0 32 90 89         ld (Cola_de_desplazamiento),a
  36+ 98B3 2B               dec hl
  37+ 98B4
  38+ 98B4 21 75 89         ld hl,Ctrl_2
  39+ 98B7 CB D6            set 2,(hl)
  40+ 98B9
  41+ 98B9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B9
  44+ 98B9              Desplazamiento_iniciado
  45+ 98B9
  46+ 98B9 CD 69 99         call Aplica_desplazamiento
  47+ 98BC
  48+ 98BC              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98BC
  50+ 98BC 3A B0 89         ld a,(Ctrl_3)
  51+ 98BF CB 4F            bit 1,a
  52+ 98C1 C0               ret nz
  53+ 98C2
  54+ 98C2 21 8D 89     3 ld hl,Repetimos_desplazamiento
  55+ 98C5 35               dec (hl)
  56+ 98C6 C0               ret nz
  57+ 98C7
  58+ 98C7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C7              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C7              ; Analiza (Cola_de_desplazamiento).
  61+ 98C7
  62+ 98C7 3A 90 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98CA A7               and a
  64+ 98CB CC BE 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98CE 28 30            jr z,Reinicia_el_movimiento
  66+ 98D0
  67+ 98D0 FE FF            cp $ff
  68+ 98D2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98D4
  70+ 98D4 FE FE            cp $fe
  71+ 98D6 CC 43 99         call z,Fijamos_bucle
  72+ 98D9 28 25            jr z,Reinicia_el_movimiento
  73+ 98DB
  74+ 98DB FE FD            cp $fd
  75+ 98DD 20 11            jr nz,1F
  76+ 98DF
  77+ 98DF              ; ---
  78+ 98DF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98DF
  80+ 98DF 3A 75 89         ld a,(Ctrl_2)
  81+ 98E2 CB 5F            bit 3,a
  82+ 98E4 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98E6
  84+ 98E6              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98E6
  86+ 98E6 21 75 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E9 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98EB
  89+ 98EB CD 54 99         call Inicia_Repetimos_movimiento
  90+ 98EE 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98F0              ; ---
  92+ 98F0
  93+ 98F0 FE 01        1 cp 1
  94+ 98F2 CA 2D 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98F5
  96+ 98F5 3D               dec a
  97+ 98F6 32 90 89         ld (Cola_de_desplazamiento),a
  98+ 98F9
  99+ 98F9 3A 8E 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98FC 32 8D 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98FF              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98FF C9               ret
 103+ 9900
 104+ 9900              Reinicia_el_movimiento
 105+ 9900
 106+ 9900 3A 75 89         ld a,(Ctrl_2)
 107+ 9903 CB 5F            bit 3,a
 108+ 9905 28 1B            jr z,2F
 109+ 9907
 110+ 9907              ; (Cola_de_desplazamiento)="254".
 111+ 9907
 112+ 9907 21 8F 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 990A 35               dec (hl)
 114+ 990B 20 15            jr nz,2F
 115+ 990D
 116+ 990D              ; Fin de las repeticiones del último movimiento.
 117+ 990D
 118+ 990D 21 75 89         ld hl,Ctrl_2
 119+ 9910 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9912
 121+ 9912 2A 87 89         ld hl,(Puntero_mov)
 122+ 9915 23               inc hl
 123+ 9916 23               inc hl
 124+ 9917 23               inc hl
 125+ 9918 22 87 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 991B              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 991B 7E               ld a,(hl)
 128+ 991C 32 90 89         ld (Cola_de_desplazamiento),a
 129+ 991F
 130+ 991F C3 C7 98         jp Cola
 131+ 9922
 132+ 9922 CD 5F 99     2 call Inicia_Puntero_mov
 133+ 9925
 134+ 9925 21 75 89         ld hl,Ctrl_2
 135+ 9928 CB 96            res 2,(hl)
 136+ 992A
 137+ 992A C3 97 98         jp Movimiento
 138+ 992D
 139+ 992D              Siguiente_desplazamiento
 140+ 992D
 141+ 992D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 992D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 992D
 144+ 992D 21 75 89         ld hl,Ctrl_2
 145+ 9930 CB 96            res 2,(hl)
 146+ 9932
 147+ 9932 2A 87 89         ld hl,(Puntero_mov)
 148+ 9935 23               inc hl
 149+ 9936 23               inc hl
 150+ 9937 22 87 89         ld (Puntero_mov),hl
 151+ 993A
 152+ 993A 7E               ld a,(hl)
 153+ 993B A7               and a
 154+ 993C CC BE 99         call z,Incrementa_Puntero_indice_mov
 155+ 993F CA 00 99         jp z,Reinicia_el_movimiento
 156+ 9942
 157+ 9942 C9               ret
 158+ 9943
 159+ 9943              ; Subrutinas -----------------------------------------
 160+ 9943              ; ---------- --------- --------- ---------- ----------
 161+ 9943              ;
 162+ 9943              ;   24/07/23
 163+ 9943              ;
 164+ 9943              ;   Fijamos_bucle
 165+ 9943              ;
 166+ 9943              ;
 167+ 9943
 168+ 9943              Fijamos_bucle
 169+ 9943
 170+ 9943 3A 8B 89         ld a,(Incrementa_puntero)
 171+ 9946 3C               inc a
 172+ 9947 32 8C 89         ld (Incrementa_puntero_backup),a
 173+ 994A
 174+ 994A CD BE 99         call Incrementa_Puntero_indice_mov
 175+ 994D 2A 85 89         ld hl,(Puntero_indice_mov)
 176+ 9950 22 89 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9953 C9               ret
 178+ 9954
 179+ 9954              ; ---------- --------- --------- ---------- ----------
 180+ 9954              ;
 181+ 9954              ;   07/7/23
 182+ 9954              ;
 183+ 9954              ;   Inicia_Repetimos_movimiento
 184+ 9954              ;
 185+ 9954              ;
 186+ 9954
 187+ 9954              Inicia_Repetimos_movimiento
 188+ 9954
 189+ 9954              ; Iniciamos (Repetimos_movimiento).
 190+ 9954
 191+ 9954 DD 2A 87 89      ld ix,(Puntero_mov)
 192+ 9958 DD 7E 02         ld a,(ix+2)
 193+ 995B 32 8F 89         ld (Repetimos_movimiento),a
 194+ 995E
 195+ 995E C9               ret
 196+ 995F
 197+ 995F              ; ---------- --------- --------- ---------- ----------
 198+ 995F              ;
 199+ 995F              ;   26/6/23
 200+ 995F              ;
 201+ 995F              ;   Inicia_Puntero_mov
 202+ 995F              ;
 203+ 995F              ;
 204+ 995F
 205+ 995F 2A 85 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9962 CD A9 8B         call Extrae_address
 207+ 9965 22 87 89         ld (Puntero_mov),hl
 208+ 9968 C9               ret
 209+ 9969
 210+ 9969              ; ---------- --------- --------- ---------- ----------
 211+ 9969              ;
 212+ 9969              ;   27/06/23
 213+ 9969              ;
 214+ 9969              ;   Aplica_movimiento.
 215+ 9969
 216+ 9969              Aplica_desplazamiento
 217+ 9969
 218+ 9969              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9969
 220+ 9969 2A 87 89         ld hl, (Puntero_mov)
 221+ 996C
 222+ 996C 7E               ld a,(hl)
 223+ 996D E6 F0            and $f0
 224+ 996F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9970
 226+ 9970 CB 7E            bit 7,(hl)
 227+ 9972 28 03            jr z,1F
 228+ 9974 CD 7E 95         call Mov_up
 229+ 9977 2A 87 89     1 ld hl, (Puntero_mov)
 230+ 997A CB 76            bit 6,(hl)
 231+ 997C 28 03            jr z,2F
 232+ 997E CD 45 95         call Mov_down
 233+ 9981
 234+ 9981              ; Se ha aplicado reinicio ???
 235+ 9981              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9981
 237+ 9981              ;    ld a,(Ctrl_3)
 238+ 9981              ;    bit 1,a
 239+ 9981              ;    ret nz
 240+ 9981
 241+ 9981 2A 87 89     2 ld hl, (Puntero_mov)
 242+ 9984 CB 6E            bit 5,(hl)
 243+ 9986 28 03            jr z,3F
 244+ 9988 CD E4 96         call Mov_left
 245+ 998B 2A 87 89     3 ld hl, (Puntero_mov)
 246+ 998E CB 66            bit 4,(hl)
 247+ 9990 C8               ret z
 248+ 9991 CD C1 95         call Mov_right
 249+ 9994 C9               ret
 250+ 9995
 251+ 9995              ; ---------- --------- --------- ---------- ----------
 252+ 9995              ;
 253+ 9995              ;   26/06/23
 254+ 9995              ;
 255+ 9995              ;   Ajusta_velocidad_desplazamiento.
 256+ 9995
 257+ 9995              Ajusta_velocidad_desplazamiento
 258+ 9995
 259+ 9995              ; 1er byte de la cadena de movimiento.
 260+ 9995              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9995
 262+ 9995 CD B3 99         call Extrae_nibble_alto
 263+ 9998
 264+ 9998 32 79 89         ld (Vel_up),a
 265+ 999B 79               ld a,c
 266+ 999C E6 0F            and $0f
 267+ 999E 32 7A 89         ld (Vel_down),a
 268+ 99A1
 269+ 99A1              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99A1              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99A1
 272+ 99A1 23               inc hl
 273+ 99A2 CD B3 99         call Extrae_nibble_alto
 274+ 99A5
 275+ 99A5 32 77 89         ld (Vel_left),a
 276+ 99A8 79               ld a,c
 277+ 99A9 E6 0F            and $0f
 278+ 99AB 32 78 89         ld (Vel_right),a
 279+ 99AE
 280+ 99AE              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99AE
 282+ 99AE 23               inc hl
 283+ 99AF 22 87 89         ld (Puntero_mov),hl
 284+ 99B2 C9               ret
 285+ 99B3
 286+ 99B3 06 04        Extrae_nibble_alto ld b,4
 287+ 99B5 7E               ld a,(hl)
 288+ 99B6 4F               ld c,a
 289+ 99B7 E6 F0            and $f0
 290+ 99B9 CB 3F        1 srl a
 291+ 99BB 10 FC            djnz 1B
 292+ 99BD C9               ret
 293+ 99BE
 294+ 99BE              ; ---------- --------- --------- ---------- ----------
 295+ 99BE              ;
 296+ 99BE              ;   5/7/23
 297+ 99BE              ;
 298+ 99BE              ;   Incrementa_Puntero_indice_mov
 299+ 99BE
 300+ 99BE              Incrementa_Puntero_indice_mov
 301+ 99BE
 302+ 99BE 21 8B 89         ld hl,Incrementa_puntero
 303+ 99C1 34               inc (hl)
 304+ 99C2
 305+ 99C2 2A 85 89         ld hl,(Puntero_indice_mov)
 306+ 99C5 01 02 00         ld bc,2
 307+ 99C8 A7               and a
 308+ 99C9 09               add hl,bc
 309+ 99CA 22 85 89         ld (Puntero_indice_mov),hl
 310+ 99CD
 311+ 99CD 7E               ld a,(hl)
 312+ 99CE A7               and a
 313+ 99CF
 314+ 99CF              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99CF
 316+ 99CF              ;    jr z,$
 317+ 99CF
 318+ 99CF              ;! Reinicia el Patrón de movimiento.
 319+ 99CF
 320+ 99CF CC D4 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99D2
 322+ 99D2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99D3
 324+ 99D3 C9               ret
 325+ 99D4
 326+ 99D4              ; ---------- --------- --------- ---------- ----------
 327+ 99D4              ;
 328+ 99D4              ;   15/01/24
 329+ 99D4              ;
 330+ 99D4              ;   Inicializa_Puntero_indice_mov
 331+ 99D4
 332+ 99D4              Inicializa_Puntero_indice_mov_2
 333+ 99D4
 334+ 99D4              ; Existe etiqueta de bucle principal???
 335+ 99D4
 336+ 99D4 2A 89 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D7 24               inc h
 338+ 99D8 25               dec h
 339+ 99D9 28 05            jr z,2F
 340+ 99DB
 341+ 99DB 22 85 89         ld (Puntero_indice_mov),hl
 342+ 99DE 18 14            jr 3F
 343+ 99E0
 344+ 99E0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99E0
 346+ 99E0 3A 8B 89     2 ld a,(Incrementa_puntero)
 347+ 99E3 47               ld b,a
 348+ 99E4
 349+ 99E4 2A 85 89         ld hl,(Puntero_indice_mov)
 350+ 99E7 2B           1 dec hl
 351+ 99E8 2B               dec hl
 352+ 99E9 10 FC            djnz 1B
 353+ 99EB 22 85 89         ld (Puntero_indice_mov),hl
 354+ 99EE
 355+ 99EE AF               xor a
 356+ 99EF 32 8B 89         ld (Incrementa_puntero),a
 357+ 99F2 18 06            jr 4F
 358+ 99F4
 359+ 99F4 3A 8C 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F7 32 8B 89         ld (Incrementa_puntero),a
 361+ 99FA C9           4 ret
 362+ 99FB
 363+ 99FB              ; ----------------------------------------------------------------------
 364+ 99FB              ;
 365+ 99FB              ;   30/01/24
 366+ 99FB              ;
 367+ 99FB              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99FB
 369+ 99FB 3A 4D 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99FE CD 8D 8E         call Calcula_salto_en_BC
 371+ 9A01 21 7B 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A04 A7               and a
 373+ 9A05 ED 4A            adc hl,bc
 374+ 9A07 C9               ret
 375+ 9A08
 376+ 9A08              ; ----------------------------------------------------------------------
 377+ 9A08              ;
 378+ 9A08              ;   30/01/24
 379+ 9A08              ;
 380+ 9A08              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A08              ;
 382+ 9A08              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A08
 384+ 9A08 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A09 23               inc hl
 386+ 9A0A 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A0B 69               ld l,c
 388+ 9A0C 60               ld h,b
 389+ 9A0D 22 6E 89         ld (Contador_de_mov_masticados),hl
 390+ 9A10 C9               ret
 391+ 9A11
# file closed: Movimiento.asm
1737  9A11              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A11              ; ******************************************************************************************************************************************************************************************
   2+ 9A11              ;
   3+ 9A11              ;   21/07/23
   4+ 9A11              ;
   5+ 9A11              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A11              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A11              ;
   8+ 9A11              ;
   9+ 9A11              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A11              ;
  11+ 9A11              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A11              ;               _ hacen las entidades hacia abajo.
  13+ 9A11              ;
  14+ 9A11              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A11              ;
  16+ 9A11              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A11              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A11              ;
  19+ 9A11              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A11              ;           _ la bala.
  21+ 9A11              ;
  22+ 9A11              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A11              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A11              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A11              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A11              ;           _ en el momento de generarse la bala)).
  27+ 9A11
  28+ 9A11              Genera_disparo
  29+ 9A11
  30+ 9A11              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A11              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A11              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A11              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A11              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A11              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A11              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A11
  38+ 9A11              ; Exclusiones:
  39+ 9A11
  40+ 9A11 3A 7A 89         ld a,(Vel_down)
  41+ 9A14 47               ld b,a
  42+ 9A15 3A C2 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A18 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A19 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A1A 3A 71 89         ld a,(Columnas)
  46+ 9A1D 47               ld b,a
  47+ 9A1E 3A 4F 89         ld a,(Columns)
  48+ 9A21 B8               cp b
  49+ 9A22 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9A23
  51+ 9A23              ; ----- ----- -----
  52+ 9A23
  53+ 9A23 3A 70 89         ld a,(Ctrl_0)
  54+ 9A26 CB 77            bit 6,a
  55+ 9A28 20 06            jr nz,14F
  56+ 9A2A
  57+ 9A2A 3A 55 89         ld a,(Coordenada_y)
  58+ 9A2D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A2F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A30
  61+ 9A30 21 31 81     14 ld hl,Indice_disparo
  62+ 9A33 3A 56 89         ld a,(CTRL_DESPLZ)
  63+ 9A36 4F               ld c,a
  64+ 9A37 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A39              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A39              ;                                            ""        ""       "f9", B="1"
  67+ 9A39              ;                                            ""        ""       "fb", B="2"
  68+ 9A39              ;                                            ""        ""       "fb", B="3"
  69+ 9A39 A7               and a
  70+ 9A3A 28 10            jr z,1F
  71+ 9A3C E6 01            and 1
  72+ 9A3E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A3F
  74+ 9A3F 79               ld a,c
  75+ 9A40 16 F9            ld d,$f9
  76+ 9A42 23           2 inc hl
  77+ 9A43 23               inc hl
  78+ 9A44 04               inc b
  79+ 9A45 BA               cp d
  80+ 9A46 28 04            jr z,1F
  81+ 9A48 14               inc d
  82+ 9A49 14               inc d
  83+ 9A4A 18 F6            jr 2B
  84+ 9A4C
  85+ 9A4C CD A9 8B     1 call Extrae_address
  86+ 9A4F E5               push hl
  87+ 9A50 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A52 DD 21 F0 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A56
  90+ 9A56              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A56              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A56
  93+ 9A56 3A 70 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A59 CB 77            bit 6,a
  95+ 9A5B 20 04            jr nz,19F
  96+ 9A5D
  97+ 9A5D AF               xor a
  98+ 9A5E 32 CB 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A61
 100+ 9A61 3A 62 89     19 ld a,(Cuad_objeto)
 101+ 9A64 FE 02            cp 2
 102+ 9A66 38 66            jr c,3F
 103+ 9A68 28 64            jr z,3F
 104+ 9A6A
 105+ 9A6A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A6A
 107+ 9A6A E6 01            and 1
 108+ 9A6C 28 30            jr z,4F
 109+ 9A6E
 110+ 9A6E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A6E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A6E              ;
 113+ 9A6E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A6E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A6E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A6E
 117+ 9A6E 2A 50 89     	ld hl,(Posicion_actual)
 118+ 9A71
 119+ 9A71              ;   Amadeus o entidad ???.
 120+ 9A71
 121+ 9A71 3A 70 89         ld a,(Ctrl_0)
 122+ 9A74 CB 77            bit 6,a
 123+ 9A76 28 0A            jr z,8F
 124+ 9A78
 125+ 9A78              ; 	Dispara Amadeus.
 126+ 9A78
 127+ 9A78 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A7A CD 19 92         call PreviousScan
 129+ 9A7D CD 19 92         call PreviousScan
 130+ 9A80
 131+ 9A80              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A80              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A80              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A80              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A80
 136+ 9A80 18 11            jr 10F
 137+ 9A82
 138+ 9A82              ; 	Dispara Entidad.
 139+ 9A82
 140+ 9A82 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A85              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A85
 143+ 9A85              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A85              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A85
 146+ 9A85 C5               push bc
 147+ 9A86 06 10            ld b,16
 148+ 9A88 CD 0A 92     9 call NextScan
 149+ 9A8B 10 FB            djnz 9B
 150+ 9A8D C1               pop bc
 151+ 9A8E CD F8 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A91 18 06            jr 17F
 153+ 9A93
 154+ 9A93              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A93              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A93              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A93              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A93
 159+ 9A93 CD F8 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A96 CD 6D 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A99              ;                                                      ; _al generar el disparo.
 162+ 9A99
 163+ 9A99              ; 	LLegados a este punto tendremos:
 164+ 9A99              ;
 165+ 9A99              ;       Puntero_objeto_disparo en IY.
 166+ 9A99              ;       Rutinas_de_impresion en IX.
 167+ 9A99              ;       Puntero_de_impresion en HL.
 168+ 9A99              ;       Impacto/Dirección en BC.
 169+ 9A99
 170+ 9A99 CD 00 9B     17 call Almacena_disparo
 171+ 9A9C 18 52            jr 6F                                             ; RET.
 172+ 9A9E
 173+ 9A9E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A9E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A9E              ;
 176+ 9A9E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A9E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A9E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A9E
 180+ 9A9E 2A 50 89     4 ld hl,(Posicion_actual)
 181+ 9AA1
 182+ 9AA1              ;   Amadeus o entidad ???.
 183+ 9AA1
 184+ 9AA1 3A 70 89         ld a,(Ctrl_0)
 185+ 9AA4 CB 77            bit 6,a
 186+ 9AA6 28 0A            jr z,11F
 187+ 9AA8
 188+ 9AA8              ; 	Dispara Amadeus.
 189+ 9AA8
 190+ 9AA8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9AAA CD 19 92         call PreviousScan
 192+ 9AAD CD 19 92         call PreviousScan
 193+ 9AB0
 194+ 9AB0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9AB0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9AB0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9AB0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9AB0
 199+ 9AB0 18 11            jr 13F
 200+ 9AB2
 201+ 9AB2              ; 	Dispara Entidad.
 202+ 9AB2
 203+ 9AB2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9AB5              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9AB5
 206+ 9AB5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9AB5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9AB5
 209+ 9AB5 C5               push bc
 210+ 9AB6 06 10            ld b,16
 211+ 9AB8 CD 0A 92     12 call NextScan
 212+ 9ABB 10 FB            djnz 12B
 213+ 9ABD C1               pop bc
 214+ 9ABE
 215+ 9ABE CD F1 9A         call Ajusta_disparo_parte_derecha
 216+ 9AC1 18 06            jr 18F
 217+ 9AC3
 218+ 9AC3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9AC3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9AC3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9AC3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9AC3
 223+ 9AC3 CD F1 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9AC6 CD 6D 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9AC9              ;                                                       ; _al generar el disparo.
 226+ 9AC9
 227+ 9AC9              ; LLegados a este punto tendremos:
 228+ 9AC9              ;
 229+ 9AC9              ;       Puntero_objeto_disparo en IY.
 230+ 9AC9              ;       Rutinas_de_impresion en IX.
 231+ 9AC9              ;       Puntero_de_impresion en HL.
 232+ 9AC9              ;       Impacto/Dirección en BC.
 233+ 9AC9
 234+ 9AC9 CD 00 9B     18 call Almacena_disparo
 235+ 9ACC 18 22            jr 6F                                               ; RET.
 236+ 9ACE
 237+ 9ACE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9ACE
 239+ 9ACE 28 11        3 jr z,5F
 240+ 9AD0
 241+ 9AD0              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9AD0              ;
 243+ 9AD0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9AD0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9AD0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9AD0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9AD0
 248+ 9AD0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9AD0              ;	   ""        ""       "f9", B="1"
 250+ 9AD0              ;	   ""        ""       "fb", B="2"
 251+ 9AD0              ; 	   ""        ""       "fb", B="3"
 252+ 9AD0
 253+ 9AD0 2A 50 89     	ld hl,(Posicion_actual)
 254+ 9AD3 CD 0A 92     	call NextScan
 255+ 9AD6
 256+ 9AD6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9AD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9AD6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9AD6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9AD6
 261+ 9AD6 CD F8 9A         call Ajusta_disparo_parte_izquierda
 262+ 9AD9
 263+ 9AD9              ; 	No se produce impacto. B="$80"
 264+ 9AD9              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9AD9
 266+ 9AD9 01 80 80         ld bc,$8080
 267+ 9ADC
 268+ 9ADC              ; 	LLegados a este punto tendremos:
 269+ 9ADC              ;
 270+ 9ADC              ;       Puntero_objeto_disparo en IY.
 271+ 9ADC              ;       Rutinas_de_impresion en IX.
 272+ 9ADC              ;       Puntero_de_impresion en HL.
 273+ 9ADC              ;       Impacto/Dirección en BC.
 274+ 9ADC
 275+ 9ADC CD 00 9B         call Almacena_disparo
 276+ 9ADF 18 0F            jr 6F                                           ; RET.
 277+ 9AE1
 278+ 9AE1              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9AE1              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9AE1              ;
 281+ 9AE1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9AE1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9AE1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9AE1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9AE1
 286+ 9AE1 2A 50 89     5 ld hl,(Posicion_actual)
 287+ 9AE4 CD 0A 92     	call NextScan
 288+ 9AE7
 289+ 9AE7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9AE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9AE7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9AE7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9AE7
 294+ 9AE7 CD F1 9A         call Ajusta_disparo_parte_derecha
 295+ 9AEA
 296+ 9AEA              ; 	No se produce impacto. B="$80"
 297+ 9AEA              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9AEA
 299+ 9AEA 01 80 80     15 ld bc,$8080
 300+ 9AED
 301+ 9AED              ; 	LLegados a este punto tendremos:
 302+ 9AED              ;
 303+ 9AED              ;       Puntero_objeto_disparo en IY.
 304+ 9AED              ;       Rutinas_de_impresion en IX.
 305+ 9AED              ;       Puntero_de_impresion en HL.
 306+ 9AED              ;       Impacto/Dirección en BC.
 307+ 9AED
 308+ 9AED CD 00 9B         call Almacena_disparo
 309+ 9AF0
 310+ 9AF0 C9           6 ret
 311+ 9AF1
 312+ 9AF1              ; ----------------------------------------------------------------
 313+ 9AF1              ;
 314+ 9AF1              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AF1              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AF1              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AF1
 318+ 9AF1 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AF2 FE 02            cp 2
 320+ 9AF4 38 01            jr c,1F
 321+ 9AF6 23               inc hl
 322+ 9AF7 C9           1 ret
 323+ 9AF8
 324+ 9AF8 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AF9 FE 01        	cp 1
 326+ 9AFB 20 01        	jr nz,1F
 327+ 9AFD 2B           	dec hl
 328+ 9AFE 2B           1 dec hl
 329+ 9AFF C9               ret
 330+ 9B00
 331+ 9B00              ; ----------------------------------------------------------------
 332+ 9B00              ;
 333+ 9B00              ;   25/02/23
 334+ 9B00              ;
 335+ 9B00              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9B00              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9B00              ;
 338+ 9B00              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9B00              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9B00
 341+ 9B00              Almacena_disparo
 342+ 9B00
 343+ 9B00 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9B01 F1               pop af
 345+ 9B02 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9B03
 347+ 9B03 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9B04 E6 01            and 1
 349+ 9B06 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B08              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B08              ; 	Dispara AMADEUS.
 352+ 9B08
 353+ 9B08              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B08              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B08              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B08              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B08
 358+ 9B08 C5               push bc
 359+ 9B09 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B0C 2A B5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B0F A7               and a
 362+ 9B10 ED 42            sbc hl,bc
 363+ 9B12 CC 2E 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B15 C1               pop bc
 365+ 9B16 28 54            jr z,4F
 366+ 9B18
 367+ 9B18 2A B5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B1B 23               inc hl
 369+ 9B1C 23               inc hl
 370+ 9B1D 22 B5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B20              ;                                                   ; _ Disparo_(+1).
 372+ 9B20 18 18            jr 2F
 373+ 9B22
 374+ 9B22              ; Dispara una entidad.
 375+ 9B22
 376+ 9B22 C5           1 push bc
 377+ 9B23 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9B26 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B29 A7               and a
 380+ 9B2A ED 42            sbc hl,bc
 381+ 9B2C CC 27 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B2F C1               pop bc
 383+ 9B30 28 3A            jr z,4F
 384+ 9B32
 385+ 9B32 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B35 23               inc hl
 387+ 9B36 23               inc hl
 388+ 9B37 22 B3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B3A              ;                                                   ; _ Disparo_(+1).
 390+ 9B3A CD A9 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B3D              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B3D              ;
 393+ 9B3D              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B3D              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B3D              ;                                                     Puntero_de_impresion en HL.
 396+ 9B3D              ;                                                     Impacto/Dirección en BC.
 397+ 9B3D
 398+ 9B3D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B3E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B3F 23               inc hl                                          ; _ al siguiente.
 401+ 9B40 A7               and a
 402+ 9B41 20 C0            jr nz,3B
 403+ 9B43
 404+ 9B43 08               ex af,af
 405+ 9B44 ED 73 A2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B48 F9               ld sp,hl
 407+ 9B49
 408+ 9B49 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B4B F5               push af                                         ; Puntero de impresión.
 410+ 9B4C FD E5            push iy                                         ; Puntero objeto.
 411+ 9B4E C5               push bc                                         ; Control.
 412+ 9B4F
 413+ 9B4F ED 7B A2 89      ld sp,(Stack)
 414+ 9B53
 415+ 9B53              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B53
 417+ 9B53 21 91 89     	ld hl,Ctrl_1
 418+ 9B56 CB C6        	set 0,(hl)
 419+ 9B58
 420+ 9B58 DD E5        	push ix
 421+ 9B5A E1               pop hl
 422+ 9B5B F5               push af
 423+ 9B5C DD E1            pop ix
 424+ 9B5E
 425+ 9B5E CD BF 80     	call Guarda_foto_registros
 426+ 9B61
 427+ 9B61 21 91 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B64 CB 86        	res 0,(hl)
 429+ 9B66
 430+ 9B66              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B66              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B66
 433+ 9B66 CD 2E 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B69 CD 27 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B6C
 436+ 9B6C C9           4 ret
 437+ 9B6D
 438+ 9B6D              ; ----------------------------------------------------------------
 439+ 9B6D              ;
 440+ 9B6D              ;   4/3/23
 441+ 9B6D              ;
 442+ 9B6D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B6D              ;   _ al generarse el disparo.
 444+ 9B6D              ;
 445+ 9B6D              ;       "$80" ..... No se produce colisión.
 446+ 9B6D              ;       "$81" ..... Se produce colisión.
 447+ 9B6D              ;
 448+ 9B6D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B6D              ;         _ que forman el disparo.
 450+ 9B6D
 451+ 9B6D
 452+ 9B6D              Comprueba_Colision
 453+ 9B6D
 454+ 9B6D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B6D
 456+ 9B6D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B6F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B70
 459+ 9B70 CD A6 9B         call Modifica_H_Velocidad_disparo
 460+ 9B73
 461+ 9B73 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B74 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B76 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B78
 465+ 9B78 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B7A CD 96 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B7D
 468+ 9B7D 7B               ld a,e
 469+ 9B7E E6 01            and 1
 470+ 9B80 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B82              ;                                                  ; _ para activar IMPACTO.
 472+ 9B82 E1               pop hl
 473+ 9B83 E5               push hl
 474+ 9B84 CD 0A 92         call NextScan
 475+ 9B87
 476+ 9B87 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B88 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B8A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B8C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B8C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B8E CD 96 9B         call Bucle_2
 482+ 9B91
 483+ 9B91 43           1 ld b,e
 484+ 9B92 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B93 FD E1            pop iy
 486+ 9B95 C9               ret
 487+ 9B96
 488+ 9B96              ; ---------- ----------
 489+ 9B96
 490+ 9B96 06 02        Bucle_2 ld b,2
 491+ 9B98 FD 7E 00     2 ld a,(iy)
 492+ 9B9B A6               and (hl)
 493+ 9B9C 28 02            jr z,1F
 494+ 9B9E 1E 81            ld e,$81
 495+ 9BA0 23           1 inc hl
 496+ 9BA1 FD 23            inc iy
 497+ 9BA3 10 F3            djnz 2B
 498+ 9BA5 C9               ret
 499+ 9BA6
 500+ 9BA6              ; ---------- ----------
 501+ 9BA6              ;
 502+ 9BA6              ;   21/7/23
 503+ 9BA6
 504+ 9BA6              Modifica_H_Velocidad_disparo
 505+ 9BA6
 506+ 9BA6 3A C2 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9BA9 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9BAB D0               ret nc                                         ; _ incrementamos H.
 509+ 9BAC 24               inc h
 510+ 9BAD
 511+ 9BAD C9               ret
 512+ 9BAE
 513+ 9BAE              ; -------------------------------------------------------------------------------------------------------------
 514+ 9BAE              ;
 515+ 9BAE              ;   04/12/23
 516+ 9BAE              ;
 517+ 9BAE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9BAE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9BAE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9BAE              ;
 521+ 9BAE              ;   MODIFICA: HL,DE,B y A.
 522+ 9BAE
 523+ 9BAE              Genera_coordenadas_X
 524+ 9BAE
 525+ 9BAE              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9BAE              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9BAE
 528+ 9BAE              ;   Limpiamos almacenes.
 529+ 9BAE
 530+ 9BAE CD DF 9B         call Limpia_Coordenadas_X
 531+ 9BB1
 532+ 9BB1              ;   Almacenamos coordenadas X.
 533+ 9BB1
 534+ 9BB1              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9BB1
 536+ 9BB1 2A 6A 89         ld hl,(Puntero_de_impresion)
 537+ 9BB4 11 BF 89         ld de,Coordenadas_X_Entidad
 538+ 9BB7 06 02            ld b,2
 539+ 9BB9
 540+ 9BB9 3A 56 89         ld a,(CTRL_DESPLZ)
 541+ 9BBC A7               and a
 542+ 9BBD 28 01            jr z,1F
 543+ 9BBF 04               inc b
 544+ 9BC0
 545+ 9BC0 CD D6 9B     1 call Guarda_coordenadas_X
 546+ 9BC3
 547+ 9BC3              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9BC3
 549+ 9BC3 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9BC6 11 BC 89         ld de,Coordenadas_X_Amadeus
 551+ 9BC9 06 02            ld b,2
 552+ 9BCB
 553+ 9BCB 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BCE A7               and a
 555+ 9BCF 28 01            jr z,2F
 556+ 9BD1 04               inc b
 557+ 9BD2
 558+ 9BD2 CD D6 9B     2 call Guarda_coordenadas_X
 559+ 9BD5
 560+ 9BD5              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BD5
 562+ 9BD5 C9               ret
 563+ 9BD6
 564+ 9BD6              ; ----- ----- ----- ----- -----
 565+ 9BD6
 566+ 9BD6 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BD7 E6 1F            and $1f
 568+ 9BD9 12           1 ld (de),a
 569+ 9BDA 3C               inc a
 570+ 9BDB 13               inc de
 571+ 9BDC 10 FB            djnz 1B
 572+ 9BDE C9               ret
 573+ 9BDF
 574+ 9BDF AF           Limpia_Coordenadas_X xor a
 575+ 9BE0 06 06            ld b,6
 576+ 9BE2 21 BC 89         ld hl,Coordenadas_X_Amadeus
 577+ 9BE5 77           1 ld (hl),a
 578+ 9BE6 23               inc hl
 579+ 9BE7 10 FC            djnz 1B
 580+ 9BE9 C9               ret
 581+ 9BEA
 582+ 9BEA              ; ----- ----- ----- ----- -----
 583+ 9BEA
 584+ 9BEA              Compara_coordenadas_X
 585+ 9BEA
 586+ 9BEA 06 03            ld b,3
 587+ 9BEC 11 C1 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BEF
 589+ 9BEF 1A               ld a,(de)
 590+ 9BF0 A7               and a
 591+ 9BF1 20 01            jr nz,2F
 592+ 9BF3 05               dec b
 593+ 9BF4
 594+ 9BF4 1B           2 dec de
 595+ 9BF5 1B               dec de
 596+ 9BF6 21 BC 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BF9
 598+ 9BF9 D5           1 push de
 599+ 9BFA E5               push hl
 600+ 9BFB C5               push bc
 601+ 9BFC
 602+ 9BFC CD 06 9C         call Comparando
 603+ 9BFF
 604+ 9BFF C1               pop bc
 605+ 9C00 E1               pop hl
 606+ 9C01 D1               pop de
 607+ 9C02
 608+ 9C02 13               inc de
 609+ 9C03 10 F4            djnz 1B
 610+ 9C05
 611+ 9C05 C9               ret
 612+ 9C06
 613+ 9C06              ; ----- ----- ----- ----- -----
 614+ 9C06              ;
 615+ 9C06              ;   4/12/23
 616+ 9C06              ;
 617+ 9C06              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C06
 619+ 9C06 06 03        Comparando ld b,3
 620+ 9C08 1A               ld a,(de)
 621+ 9C09 4E           2 ld c,(hl)
 622+ 9C0A B9               cp c
 623+ 9C0B 28 04            jr z,1F
 624+ 9C0D 23               inc hl
 625+ 9C0E 10 F9            djnz 2B
 626+ 9C10 C9               ret
 627+ 9C11
 628+ 9C11 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C13 32 63 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C16 21 B7 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C19 CB D6            set 2,(hl)
 632+ 9C1B C9               ret
 633+ 9C1C
 634+ 9C1C              ; -----------------------------------------------------------------------
 635+ 9C1C              ;
 636+ 9C1C              ;   7/12/23
 637+ 9C1C              ;
 638+ 9C1C
 639+ 9C1C              Detecta_colision_nave_entidad
 640+ 9C1C
 641+ 9C1C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C1C
 643+ 9C1C FD 2A 52 89      ld iy,(Puntero_objeto)
 644+ 9C20 2A 6A 89         ld hl,(Puntero_de_impresion)
 645+ 9C23
 646+ 9C23 E5               push hl
 647+ 9C24
 648+ 9C24              ; ----- ----- -----
 649+ 9C24 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9C26 06 0A            ld b,10
 651+ 9C28 CD 58 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C2B 7B               ld a,e
 653+ 9C2C FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C2E 38 0E            jr c,3F
 655+ 9C30
 656+ 9C30              ; LLegados a este punto:
 657+ 9C30              ;
 658+ 9C30              ;   HAY COLISIÓN !!!!!.
 659+ 9C30              ;
 660+ 9C30              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C30              ;   SET el bit3 de (Impacto2).
 662+ 9C30              ;
 663+ 9C30              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C30
 665+ 9C30 21 63 89         ld hl,Impacto
 666+ 9C33 36 01            ld (hl),1
 667+ 9C35 21 B7 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C38 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C3A CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C3C
 671+ 9C3C 18 18            jr 1F
 672+ 9C3E
 673+ 9C3E              ; -----
 674+ 9C3E
 675+ 9C3E E1           3 pop hl
 676+ 9C3F CD 0A 92         call NextScan
 677+ 9C42 E5               push hl
 678+ 9C43 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C44 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C46 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C48 30 0C            jr nc,1F
 682+ 9C4A              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C4A 10 DC            djnz 2B
 684+ 9C4C
 685+ 9C4C              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C4C
 687+ 9C4C              ; LLegados a este punto:
 688+ 9C4C              ;
 689+ 9C4C              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C4C              ;
 691+ 9C4C              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C4C              ;   RES el bit2 de (Impacto2).
 693+ 9C4C              ;
 694+ 9C4C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C4C              ;   Lo colocamos a "0".
 696+ 9C4C
 697+ 9C4C 21 B7 89         ld hl,Impacto2
 698+ 9C4F CB 96            res 2,(hl)
 699+ 9C51 2A B8 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C54 36 00            ld (hl),0
 701+ 9C56
 702+ 9C56 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C57 C9               ret
 704+ 9C58
 705+ 9C58               ; ---------- ----------
 706+ 9C58
 707+ 9C58 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C59 3A 4F 89         ld a,(Columns)
 709+ 9C5C 47               ld b,a
 710+ 9C5D FD 7E 00     2 ld a,(iy)
 711+ 9C60 BE               cp (hl)
 712+ 9C61 28 01            jr z,1F
 713+ 9C63
 714+ 9C63 1C               inc e
 715+ 9C64
 716+ 9C64 23           1 inc hl
 717+ 9C65 FD 23            inc iy
 718+ 9C67 10 F4            djnz 2B
 719+ 9C69 C1               pop bc
 720+ 9C6A C9               ret
 721+ 9C6B
 722+ 9C6B              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C6B              ;
 724+ 9C6B              ;   13/03/23
 725+ 9C6B              ;
 726+ 9C6B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C6B              ;
 728+ 9C6B              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C6B
 730+ 9C6B 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C6E 7E               ld a,(hl)
 732+ 9C6F A7               and a
 733+ 9C70 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C71
 735+ 9C71 44               ld b,h
 736+ 9C72 4D               ld c,l
 737+ 9C73 2A AA 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C76 E5               push hl
 739+ 9C77 A7               and a
 740+ 9C78 ED 42            sbc hl,bc
 741+ 9C7A E5               push hl
 742+ 9C7B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C7C
 744+ 9C7C E1               pop hl
 745+ 9C7D 54               ld d,h
 746+ 9C7E 5D               ld e,l
 747+ 9C7F 1B               dec de
 748+ 9C80 ED B8            lddr                                                ; Limpiamos.
 749+ 9C82
 750+ 9C82 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C85 22 AA 89         ld (Stack_snapshot_disparos),hl
 752+ 9C88
 753+ 9C88 C9               ret
 754+ 9C89
 755+ 9C89              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C89              ;
 757+ 9C89              ;   18/07/23
 758+ 9C89              ;
 759+ 9C89
 760+ 9C89              Motor_de_disparos
 761+ 9C89
 762+ 9C89              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C89
 764+ 9C89 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C8C 2A B5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C8F
 767+ 9C8F CD A9 8B     2 call Extrae_address
 768+ 9C92 7E               ld a,(hl)
 769+ 9C93 A7               and a
 770+ 9C94 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C96
 772+ 9C96              ; ----- ----- ----- ----- ----- -----
 773+ 9C96
 774+ 9C96 C5               push bc
 775+ 9C97 CD 5B 9D         call foto_disparo_a_borrar
 776+ 9C9A
 777+ 9C9A              ; Existe colisión con este disparo???
 778+ 9C9A
 779+ 9C9A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C9B 7E               ld a,(hl)
 781+ 9C9C 2B               dec hl
 782+ 9C9D E6 01            and 1
 783+ 9C9F 28 1D            jr z,9F
 784+ 9CA1
 785+ 9CA1              ;   En este punto:
 786+ 9CA1              ;
 787+ 9CA1              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9CA1              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9CA1              ;   _con la entidad).
 790+ 9CA1              ;
 791+ 9CA1              ;   Disparo_2A defw 0                                ; Control.
 792+ 9CA1              ;    defw 0                                          ; Puntero objeto.
 793+ 9CA1              ;    defw 0                                          ; Puntero de impresión.
 794+ 9CA1              ;    defw 0                                          ; Rutina de impresión.
 795+ 9CA1
 796+ 9CA1 E5               push hl
 797+ 9CA2
 798+ 9CA2 06 04            ld b,4
 799+ 9CA4 23           19 inc hl
 800+ 9CA5 10 FD            djnz 19B
 801+ 9CA7
 802+ 9CA7 CD A9 8B         call Extrae_address
 803+ 9CAA CD 3E 9F         call Genera_coordenadas_disparo
 804+ 9CAD
 805+ 9CAD              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9CAD
 807+ 9CAD 21 BA 89         ld hl,Coordenadas_disparo_certero
 808+ 9CB0 72               ld (hl),d
 809+ 9CB1 23               inc hl
 810+ 9CB2 73               ld (hl),e
 811+ 9CB3
 812+ 9CB3              ; Elimino el disparo de la base de datos.
 813+ 9CB3
 814+ 9CB3 E1               pop hl
 815+ 9CB4 CD DA 9D         call Elimina_disparo_de_base_de_datos
 816+ 9CB7 21 B7 89         ld hl,Impacto2
 817+ 9CBA CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9CBC
 819+ 9CBC 18 06            jr 11F
 820+ 9CBE
 821+ 9CBE CD 84 9D     9 call Mueve_disparo
 822+ 9CC1 CD 5B 9D         call foto_disparo_a_borrar
 823+ 9CC4
 824+ 9CC4 C1           11 pop bc
 825+ 9CC5 18 04            jr 7F
 826+ 9CC7
 827+ 9CC7              ; ----- ----- ----- ----- ----- -----
 828+ 9CC7
 829+ 9CC7 ED 42        1 sbc hl,bc
 830+ 9CC9 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CCB
 832+ 9CCB 2A B5 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CCE 23               inc hl
 834+ 9CCF 23               inc hl
 835+ 9CD0 22 B5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CD3 18 BA            jr 2B
 837+ 9CD5
 838+ 9CD5 CD 2E 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CD8              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CD8
 841+ 9CD8              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CD8
 843+ 9CD8 01 9F 86         ld bc,Disparo_11
 844+ 9CDB 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9CDE
 846+ 9CDE CD A9 8B     5 call Extrae_address
 847+ 9CE1 7E               ld a,(hl)
 848+ 9CE2 A7               and a
 849+ 9CE3 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9CE5
 851+ 9CE5              ; ----- ----- ----- ----- ----- -----
 852+ 9CE5
 853+ 9CE5 C5               push bc
 854+ 9CE6 CD 5B 9D         call foto_disparo_a_borrar
 855+ 9CE9
 856+ 9CE9              ; Existe colisión con este disparo???
 857+ 9CE9
 858+ 9CE9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9CEA 7E               ld a,(hl)
 860+ 9CEB 2B               dec hl
 861+ 9CEC E6 01            and 1
 862+ 9CEE 28 4D            jr z,10F
 863+ 9CF0
 864+ 9CF0              ;! La colisión se produce con Amadeus???
 865+ 9CF0              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CF0
 867+ 9CF0 E5               push hl
 868+ 9CF1
 869+ 9CF1 06 04            ld b,4
 870+ 9CF3 23           16 inc hl
 871+ 9CF4 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CF6
 873+ 9CF6 CD A9 8B         call Extrae_address
 874+ 9CF9 CD 3E 9F         call Genera_coordenadas_disparo
 875+ 9CFC
 876+ 9CFC 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CFD FE 16            cp $16
 878+ 9CFF 38 2A            jr c,15F
 879+ 9D01
 880+ 9D01
 881+ 9D01              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9D01
 883+ 9D01 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9D02
 885+ 9D02              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9D02
 887+ 9D02 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9D05
 889+ 9D05              ; Coordenada X de Amadeus en D.
 890+ 9D05
 891+ 9D05 7D               ld a,l
 892+ 9D06 E6 1F            and $1F
 893+ 9D08 57               ld d,a
 894+ 9D09
 895+ 9D09 21 BB 86         ld hl,Amadeus_db+8
 896+ 9D0C 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D0D
 898+ 9D0D 21 BC 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D10 CD D6 9B         call Guarda_coordenadas_X
 900+ 9D13
 901+ 9D13 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D14
 903+ 9D14              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D14
 905+ 9D14 06 02            ld b,2
 906+ 9D16 C5           20 push bc
 907+ 9D17
 908+ 9D17 06 03            ld b,3
 909+ 9D19 21 BC 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D1C 7E           18 ld a,(hl)
 911+ 9D1D BA               cp d
 912+ 9D1E 20 04            jr nz,17F
 913+ 9D20
 914+ 9D20              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D20
 916+ 9D20 C1               pop bc
 917+ 9D21 E1               pop hl
 918+ 9D22 18 0D            jr 14F
 919+ 9D24
 920+ 9D24 23           17 inc hl
 921+ 9D25 10 F5            djnz 18B
 922+ 9D27
 923+ 9D27 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9D28
 925+ 9D28 C1               pop bc
 926+ 9D29 10 EB            djnz 20B
 927+ 9D2B
 928+ 9D2B
 929+ 9D2B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D2B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D2B
 932+ 9D2B E1           15 pop hl
 933+ 9D2C 23               inc hl
 934+ 9D2D 35               dec (hl)
 935+ 9D2E 2B               dec hl
 936+ 9D2F 18 0C            jr 10F
 937+ 9D31
 938+ 9D31              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D31              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D31
 941+ 9D31 E5           14 push hl
 942+ 9D32 CD DA 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D35 21 B7 89         ld hl,Impacto2
 944+ 9D38 CB CE            set 1,(hl)
 945+ 9D3A E1               pop hl
 946+ 9D3B 18 06            jr 12F
 947+ 9D3D
 948+ 9D3D              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D3D
 950+ 9D3D CD 84 9D     10 call Mueve_disparo
 951+ 9D40 CD 5B 9D         call foto_disparo_a_borrar
 952+ 9D43 C1           12 pop bc
 953+ 9D44
 954+ 9D44 18 04            jr 8F
 955+ 9D46
 956+ 9D46              ; ----- ----- ----- ----- ----- -----
 957+ 9D46
 958+ 9D46 ED 42        4 sbc hl,bc
 959+ 9D48 28 0A            jr z,6F
 960+ 9D4A
 961+ 9D4A 2A B3 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D4D 23               inc hl
 963+ 9D4E 23               inc hl
 964+ 9D4F 22 B3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D52 18 8A            jr 5B
 966+ 9D54
 967+ 9D54 CD 27 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D57 CD DF 9B         call Limpia_Coordenadas_X
 969+ 9D5A C9               ret
 970+ 9D5B
 971+ 9D5B              ; ------------------------------------------------------------------
 972+ 9D5B
 973+ 9D5B              foto_disparo_a_borrar
 974+ 9D5B
 975+ 9D5B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D5C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D5D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D5E
 979+ 9D5E E5               push hl
 980+ 9D5F 23               inc hl
 981+ 9D60 23               inc hl
 982+ 9D61 ED 73 A2 89      ld (Stack),sp
 983+ 9D65 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D66 FD E1            pop iy
 985+ 9D68 DD E1            pop ix
 986+ 9D6A E1               pop hl
 987+ 9D6B ED 7B A2 89      ld sp,(Stack)
 988+ 9D6F 3A 91 89         ld a,(Ctrl_1)
 989+ 9D72 CB C7            set 0,a
 990+ 9D74 32 91 89         ld (Ctrl_1),a
 991+ 9D77 CD BF 80         call Guarda_foto_registros
 992+ 9D7A 3A 91 89         ld a,(Ctrl_1)
 993+ 9D7D CB 87            res 0,a
 994+ 9D7F 32 91 89         ld (Ctrl_1),a
 995+ 9D82 E1               pop hl
 996+ 9D83 C9               ret
 997+ 9D84
 998+ 9D84              ;---------------------------------------------------
 999+ 9D84              ;
1000+ 9D84              ;   18/07/23
1001+ 9D84              ;
1002+ 9D84
1003+ 9D84              Mueve_disparo
1004+ 9D84
1005+ 9D84              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D84              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D84              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D84
1009+ 9D84 E5               push hl
1010+ 9D85
1011+ 9D85 7E               ld a,(hl)
1012+ 9D86
1013+ 9D86 06 04            ld b,4
1014+ 9D88 23           1 inc hl
1015+ 9D89 10 FD            djnz 1B
1016+ 9D8B
1017+ 9D8B              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D8B
1019+ 9D8B CD A9 8B         call Extrae_address
1020+ 9D8E
1021+ 9D8E E6 01            and 1
1022+ 9D90 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D92
1024+ 9D92              ; Disparo hacia arriba, (Amadeus).
1025+ 9D92
1026+ 9D92              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D92              ; _ de la dificultad.
1028+ 9D92
1029+ 9D92 CD 19 92         call PreviousScan
1030+ 9D95 CD 19 92         call PreviousScan
1031+ 9D98 CD 19 92         call PreviousScan
1032+ 9D9B CD 19 92         call PreviousScan
1033+ 9D9E
1034+ 9D9E              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D9E
1036+ 9D9E 7C               ld a,h
1037+ 9D9F FE 40            cp $40
1038+ 9DA1 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9DA3
1040+ 9DA3              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9DA3
1042+ 9DA3 EB               ex de,hl
1043+ 9DA4 06 04            ld b,4
1044+ 9DA6 2B           6 dec hl
1045+ 9DA7 10 FD            djnz 6B
1046+ 9DA9
1047+ 9DA9 CD DA 9D         call Elimina_disparo_de_base_de_datos
1048+ 9DAC E1               pop hl
1049+ 9DAD 18 10            jr 7F
1050+ 9DAF
1051+ 9DAF              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9DAF              ; HL contiene el puntero de impresión del disparo.
1053+ 9DAF              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9DAF
1055+ 9DAF D5           3 push de
1056+ 9DB0 C5               push bc
1057+ 9DB1
1058+ 9DB1 CD 6D 9B         call Comprueba_Colision
1059+ 9DB4
1060+ 9DB4              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9DB4
1062+ 9DB4 78               ld a,b
1063+ 9DB5
1064+ 9DB5 C1               pop bc
1065+ 9DB6 D1               pop de
1066+ 9DB7
1067+ 9DB7 EB               ex de,hl
1068+ 9DB8
1069+ 9DB8 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9DB9 23               inc hl                                      ; _ movimiento.
1071+ 9DBA 72               ld (hl),d
1072+ 9DBB
1073+ 9DBB E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9DBC
1075+ 9DBC 23               inc hl                                      ; _ en curso.
1076+ 9DBD 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9DBE 2B               dec hl
1078+ 9DBF
1079+ 9DBF C9           7 ret
1080+ 9DC0
1081+ 9DC0              ; Disparo hacia abajo, (Entidad).
1082+ 9DC0
1083+ 9DC0 3A C2 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9DC3 47               ld b,a
1085+ 9DC4
1086+ 9DC4 CD 0A 92     4 call NextScan
1087+ 9DC7 10 FB            djnz 4B
1088+ 9DC9
1089+ 9DC9              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DC9
1091+ 9DC9 7C               ld a,h
1092+ 9DCA FE 58            cp $58
1093+ 9DCC 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DCE
1095+ 9DCE EB               ex de,hl
1096+ 9DCF 06 04            ld b,4
1097+ 9DD1 2B           5 dec hl
1098+ 9DD2 10 FD            djnz 5B
1099+ 9DD4
1100+ 9DD4 CD DA 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DD7 E1               pop hl
1102+ 9DD8 18 E5            jr 7B
1103+ 9DDA
1104+ 9DDA              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DDA
1106+ 9DDA 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9DDD AF               xor a
1108+ 9DDE 77               ld (hl),a
1109+ 9DDF 54               ld d,h
1110+ 9DE0 5D               ld e,l
1111+ 9DE1 13               inc de
1112+ 9DE2 ED B0            ldir
1113+ 9DE4 C9               ret
1114+ 9DE5
1115+ 9DE5              ; -----------------------------------------------------------------
1116+ 9DE5              ;
1117+ 9DE5              ;   7/12/23
1118+ 9DE5              ;
1119+ 9DE5
1120+ 9DE5 3A B7 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9DE8 A7               and a
1122+ 9DE9 C8               ret z
1123+ 9DEA
1124+ 9DEA              ; Analizamos si hay impacto por disparos.
1125+ 9DEA
1126+ 9DEA              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9DEA
1128+ 9DEA CB 4F            bit 1,a
1129+ 9DEC 28 07            jr z,1F
1130+ 9DEE
1131+ 9DEE 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DF1 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DF3 18 08            jr 2F
1134+ 9DF5
1135+ 9DF5 CB 47        1 bit 0,a
1136+ 9DF7 C8               ret z
1137+ 9DF8
1138+ 9DF8              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DF8
1140+ 9DF8 21 91 89         ld hl,Ctrl_1
1141+ 9DFB CB D6            set 2,(hl)
1142+ 9DFD
1143+ 9DFD C9           2 ret
1144+ 9DFE
1145+ 9DFE              ; -----------------------------------------------------------------
1146+ 9DFE              ;
1147+ 9DFE              ;   25/04/23
1148+ 9DFE              ;
1149+ 9DFE
1150+ 9DFE              Determina_resultado_comparativa
1151+ 9DFE
1152+ 9DFE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DFE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DFE              ;
1155+ 9DFE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DFE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DFE              ;
1158+ 9DFE              ;   SBC HL,DE
1159+ 9DFE
1160+ 9DFE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DFE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DFE
1163+ 9DFE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DFE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DFE
1166+ 9DFE
1167+ 9DFE 3A 62 89         ld a,(Cuad_objeto)
1168+ 9E01 FE 02            cp 2
1169+ 9E03 28 26            jr z,2F
1170+ 9E05 38 24            jr c,2F
1171+ 9E07
1172+ 9E07              ; Cuadrantes 3º y 4º
1173+ 9E07
1174+ 9E07 E6 01            and 1
1175+ 9E09 28 10            jr z,4F
1176+ 9E0B
1177+ 9E0B              ; Cuadrante 3º
1178+ 9E0B
1179+ 9E0B 7C               ld a,h
1180+ 9E0C 06 00            ld b,0
1181+ 9E0E
1182+ 9E0E CD 99 9E         call Compara_cositas_H3
1183+ 9E11
1184+ 9E11 04               inc b
1185+ 9E12 05               dec b
1186+ 9E13 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E14
1188+ 9E14 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E15 06 00            ld b,0
1190+ 9E17
1191+ 9E17 CD AB 9E         call Compara_cositas_L3
1192+ 9E1A C9               ret
1193+ 9E1B
1194+ 9E1B              ; Cuadrante 4º
1195+ 9E1B
1196+ 9E1B 7C           4 ld a,h
1197+ 9E1C 06 00            ld b,0
1198+ 9E1E
1199+ 9E1E CD BD 9E         call Compara_cositas_H4
1200+ 9E21
1201+ 9E21 04               inc b
1202+ 9E22 05               dec b
1203+ 9E23 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9E24
1205+ 9E24 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9E25 06 00            ld b,0
1207+ 9E27
1208+ 9E27 CD D3 9E         call Compara_cositas_L4
1209+ 9E2A C9               ret
1210+ 9E2B
1211+ 9E2B              ; Cuadrantes 1º y 2º.
1212+ 9E2B
1213+ 9E2B 28 10        2 jr z,3F
1214+ 9E2D
1215+ 9E2D              ; 1er Cuadrante
1216+ 9E2D
1217+ 9E2D 7C               ld a,h
1218+ 9E2E 06 00            ld b,0
1219+ 9E30
1220+ 9E30 CD 71 9E         call Compara_cositas_H1
1221+ 9E33
1222+ 9E33 04               inc b
1223+ 9E34 05               dec b
1224+ 9E35 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E36
1226+ 9E36 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E37 06 00            ld b,0
1228+ 9E39
1229+ 9E39 CD 87 9E         call Compara_cositas_L1
1230+ 9E3C C9               ret
1231+ 9E3D
1232+ 9E3D
1233+ 9E3D              ; 2º Cuadrante
1234+ 9E3D
1235+ 9E3D 7C           3 ld a,h
1236+ 9E3E 06 00            ld b,0
1237+ 9E40
1238+ 9E40 CD 4D 9E         call Compara_cositas_H2
1239+ 9E43
1240+ 9E43 04               inc b
1241+ 9E44 05               dec b
1242+ 9E45 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E46
1244+ 9E46 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E47 06 00            ld b,0
1246+ 9E49
1247+ 9E49 CD 5F 9E         call Compara_cositas_L2
1248+ 9E4C C9               ret
1249+ 9E4D
1250+ 9E4D A7           Compara_cositas_H2 and a
1251+ 9E4E 28 0D            jr z,1F
1252+ 9E50              ;    cp $fd
1253+ 9E50              ;    jr z,1F
1254+ 9E50              ;    cp $fe
1255+ 9E50              ;    jr z,1F
1256+ 9E50 FE FF            cp $ff
1257+ 9E52 28 09            jr z,1F
1258+ 9E54 FE 01            cp $01
1259+ 9E56 28 05            jr z,1F
1260+ 9E58 FE 02            cp $02
1261+ 9E5A 28 01            jr z,1F
1262+ 9E5C C0               ret nz
1263+ 9E5D 04           1 inc b
1264+ 9E5E C9               ret
1265+ 9E5F
1266+ 9E5F A7           Compara_cositas_L2 and a
1267+ 9E60 28 0D            jr z,1F
1268+ 9E62              ;    cp $fd
1269+ 9E62              ;    jr z,1F
1270+ 9E62 FE FE            cp $fe
1271+ 9E64 28 09            jr z,1F
1272+ 9E66 FE FF            cp $ff
1273+ 9E68 28 05            jr z,1F
1274+ 9E6A FE 01            cp $01
1275+ 9E6C 28 01            jr z,1F
1276+ 9E6E              ;    cp $02
1277+ 9E6E              ;    jr z,1F
1278+ 9E6E C0               ret nz
1279+ 9E6F 04           1 inc b
1280+ 9E70 C9               ret
1281+ 9E71
1282+ 9E71 A7           Compara_cositas_H1 and a
1283+ 9E72 28 11            jr z,1F
1284+ 9E74              ;    cp $fd
1285+ 9E74              ;    jr z,1F
1286+ 9E74              ;    cp $fe
1287+ 9E74              ;    jr z,1F
1288+ 9E74 FE FF            cp $ff
1289+ 9E76 28 0D            jr z,1F
1290+ 9E78 FE 01            cp $01
1291+ 9E7A 28 09            jr z,1F
1292+ 9E7C FE 02            cp $02
1293+ 9E7E 28 05            jr z,1F
1294+ 9E80 FE 03            cp $03
1295+ 9E82 28 01            jr z,1F
1296+ 9E84 C0               ret nz
1297+ 9E85 04           1 inc b
1298+ 9E86 C9               ret
1299+ 9E87
1300+ 9E87 A7           Compara_cositas_L1 and a
1301+ 9E88 28 0D            jr z,1F
1302+ 9E8A              ;    cp $fd
1303+ 9E8A              ;    jr z,1F
1304+ 9E8A              ;    cp $fe
1305+ 9E8A              ;    jr z,1F
1306+ 9E8A              ;    cp $ff
1307+ 9E8A              ;    jr z,1F
1308+ 9E8A FE 01            cp $01
1309+ 9E8C 28 09            jr z,1F
1310+ 9E8E FE 02            cp $02
1311+ 9E90 28 05            jr z,1F
1312+ 9E92 FE 03            cp $03
1313+ 9E94 28 01            jr z,1F
1314+ 9E96 C0               ret nz
1315+ 9E97 04           1 inc b
1316+ 9E98 C9               ret
1317+ 9E99
1318+ 9E99 A7           Compara_cositas_H3 and a
1319+ 9E9A 28 0D            jr z,1F
1320+ 9E9C              ;    cp $fd
1321+ 9E9C              ;    jr z,1F
1322+ 9E9C FE FE            cp $fe
1323+ 9E9E 28 09            jr z,1F
1324+ 9EA0 FE FF            cp $ff
1325+ 9EA2 28 05            jr z,1F
1326+ 9EA4 FE 01            cp $01
1327+ 9EA6 28 01            jr z,1F
1328+ 9EA8              ;    cp $02
1329+ 9EA8              ;    jr z,1F
1330+ 9EA8              ;    cp $03
1331+ 9EA8              ;    jr z,1F
1332+ 9EA8 C0               ret nz
1333+ 9EA9 04           1 inc b
1334+ 9EAA C9               ret
1335+ 9EAB
1336+ 9EAB A7           Compara_cositas_L3 and a
1337+ 9EAC 28 0D            jr z,1F
1338+ 9EAE              ;    cp $fd
1339+ 9EAE              ;    jr z,1F
1340+ 9EAE              ;    cp $fe
1341+ 9EAE              ;    jr z,1F
1342+ 9EAE              ;    cp $ff
1343+ 9EAE              ;    jr z,1F
1344+ 9EAE FE 01            cp $01
1345+ 9EB0 28 09            jr z,1F
1346+ 9EB2 FE 02            cp $02
1347+ 9EB4 28 05            jr z,1F
1348+ 9EB6 FE 03            cp $03
1349+ 9EB8 28 01            jr z,1F
1350+ 9EBA C0               ret nz
1351+ 9EBB 04           1 inc b
1352+ 9EBC C9               ret
1353+ 9EBD
1354+ 9EBD A7           Compara_cositas_H4 and a
1355+ 9EBE 28 11            jr z,1F
1356+ 9EC0 FE FD            cp $fd
1357+ 9EC2 28 0D            jr z,1F
1358+ 9EC4 FE FE            cp $fe
1359+ 9EC6 28 09            jr z,1F
1360+ 9EC8 FE FF            cp $ff
1361+ 9ECA 28 05            jr z,1F
1362+ 9ECC FE 01            cp $01
1363+ 9ECE 28 01            jr z,1F
1364+ 9ED0              ;    cp $02
1365+ 9ED0              ;    jr z,1F
1366+ 9ED0              ;    cp $03
1367+ 9ED0              ;    jr z,1F
1368+ 9ED0 C0               ret nz
1369+ 9ED1 04           1 inc b
1370+ 9ED2 C9               ret
1371+ 9ED3
1372+ 9ED3 A7           Compara_cositas_L4 and a
1373+ 9ED4 28 0D            jr z,1F
1374+ 9ED6              ;    cp $fd
1375+ 9ED6              ;    jr z,1F
1376+ 9ED6 FE FE            cp $fe
1377+ 9ED8 28 09            jr z,1F
1378+ 9EDA FE FF            cp $ff
1379+ 9EDC 28 05            jr z,1F
1380+ 9EDE FE 01            cp $01
1381+ 9EE0 28 01            jr z,1F
1382+ 9EE2              ;    cp $02
1383+ 9EE2              ;    jr z,1F
1384+ 9EE2              ;    cp $03
1385+ 9EE2              ;    jr z,1F
1386+ 9EE2 C0               ret nz
1387+ 9EE3 04           1 inc b
1388+ 9EE4 C9               ret
# file closed: Disparo.asm
1738  9EE5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9EE5              ; Relojes y temporizaciones.
   2+ 9EE5
   3+ 9EE5              ; ------------------------------------------------------
   4+ 9EE5              ;
   5+ 9EE5              ;	16/7/23
   6+ 9EE5              ;
   7+ 9EE5              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9EE5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9EE5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9EE5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9EE5              ;
  12+ 9EE5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9EE5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9EE5
  15+ 9EE5              ; Disparo_entidad db 1
  16+ 9EE5              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9EE5              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9EE5
  19+ 9EE5              Habilita_disparos
  20+ 9EE5
  21+ 9EE5 7E           	ld a,(hl)
  22+ 9EE6 A7           	and a
  23+ 9EE7 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9EE8
  25+ 9EE8 EB           	ex de,hl
  26+ 9EE9
  27+ 9EE9 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9EEA C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9EEB
  30+ 9EEB              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9EEB
  32+ 9EEB 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9EEC 7E           	ld a,(hl)
  34+ 9EED 23           	inc hl
  35+ 9EEE 77           	ld (hl),a
  36+ 9EEF
  37+ 9EEF EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EF0 3E 01        	ld a,1
  39+ 9EF2 77           	ld (hl),a
  40+ 9EF3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1739  9EF4              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9EF4              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9EF4              ;
   3+ 9EF4              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9EF4              ;
   5+ 9EF4              ; *****************************************************************************************************************************************************************************************
   6+ 9EF4              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9EF4
   8+ 9EF4 7C           calcula_tercio ld a,h
   9+ 9EF5 E6 18        	and $18
  10+ 9EF7 CB 2F        	sra a
  11+ 9EF9 CB 2F        	sra a
  12+ 9EFB CB 2F        	sra a
  13+ 9EFD C9           	ret
  14+ 9EFE
# file closed: calcula_tercio.asm
1740  9EFE              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EFE              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EFE              ;
   3+ 9EFE              ;
   4+ 9EFE              ;	CLS.
   5+ 9EFE              ;
   6+ 9EFE              ;	Limpia la pantalla y define sus atributos.
   7+ 9EFE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EFE              ;
   9+ 9EFE              ;	COLORES: 0 ..... NEGRO
  10+ 9EFE              ;    		 1 ..... AZUL
  11+ 9EFE              ; 			 2 ..... ROJO
  12+ 9EFE              ;			 3 ..... MAGENTA
  13+ 9EFE              ; 			 4 ..... VERDE
  14+ 9EFE              ; 			 5 ..... CIAN
  15+ 9EFE              ;			 6 ..... AMARILLO
  16+ 9EFE              ; 			 7 ..... BLANCO
  17+ 9EFE              ;
  18+ 9EFE              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EFE              ;
  20+ 9EFE              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EFE
  22+ 9EFE
  23+ 9EFE 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9F01 11 01 40     	LD DE,$4001
  25+ 9F04 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F07 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F09 ED B0        	LDIR
  28+ 9F0B 01 FF 02     	LD BC,767
  29+ 9F0E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F0F ED B0        	LDIR
  31+ 9F11 C9           	ret
  32+ 9F12
# file closed: Cls.asm
1741  9F12              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F12              ; ------------------------------------------------------------------------
   2+ 9F12              ;
   3+ 9F12              ;	30/1/24
   4+ 9F12              ;
   5+ 9F12              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F12              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F12              ;
   8+ 9F12              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F12              ;
  10+ 9F12              ;	Modifica: A,BC y DE.
  11+ 9F12
  12+ 9F12 7D           Genera_coordenadas ld a,l
  13+ 9F13 E6 1F        	and $1f
  14+ 9F15 32 54 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F18
  16+ 9F18 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F19 FE 40        	cp $40
  18+ 9F1B 38 1C        	jr c,4F
  19+ 9F1D
  20+ 9F1D CD F4 9E     	call calcula_tercio
  21+ 9F20 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9F21
  23+ 9F21 1E 00        	ld e,0
  24+ 9F23 7D           	ld a,l
  25+ 9F24 E6 E0        	and $e0
  26+ 9F26 28 01        	jr z,1F
  27+ 9F28 04           	inc b
  28+ 9F29
  29+ 9F29 04           1 inc b
  30+ 9F2A 05           	dec b
  31+ 9F2B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F2D              ;														; _ , salimos.
  33+ 9F2D 1C           3 inc e
  34+ 9F2E D6 20        	sub 32
  35+ 9F30 20 FB        	jr nz,3B
  36+ 9F32 10 F5        	djnz 1B
  37+ 9F34
  38+ 9F34 7B           2 ld a,e
  39+ 9F35 32 55 89     	ld (Coordenada_y),a
  40+ 9F38 C9           	ret
  41+ 9F39
  42+ 9F39 AF           4 xor a
  43+ 9F3A 32 55 89     	ld (Coordenada_y),a
  44+ 9F3D C9           	ret
  45+ 9F3E
  46+ 9F3E              ; ------------------------------------------------------------------------
  47+ 9F3E              ;	28/05/23
  48+ 9F3E              ;
  49+ 9F3E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F3E              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F3E              ;
  52+ 9F3E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F3E              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F3E              ;
  55+ 9F3E              ;		DE="$120d"
  56+ 9F3E              ;
  57+ 9F3E              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F3E              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F3E              ;
  60+ 9F3E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F3E
  62+ 9F3E              ;	Modifica: A,BC y DE.
  63+ 9F3E
  64+ 9F3E
  65+ 9F3E              Genera_coordenadas_disparo
  66+ 9F3E
  67+ 9F3E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F3E
  69+ 9F3E 7D           	ld a,l
  70+ 9F3F E6 1F        	and $1f
  71+ 9F41 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F42 CD F4 9E     	call calcula_tercio
  73+ 9F45 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F46 1E 00        	ld e,0
  75+ 9F48 7D           	ld a,l
  76+ 9F49 E6 E0        	and $e0
  77+ 9F4B 28 01        	jr z,1F
  78+ 9F4D 04           	inc b
  79+ 9F4E 1C           1 inc e
  80+ 9F4F D6 20        	sub 32
  81+ 9F51 20 FB        	jr nz,1B
  82+ 9F53 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F55 C9           	ret
  84+ 9F56
# file closed: Genera_coordenadas.asm
1742  9F56              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F56              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F56              ;
   3+ 9F56              ;	12/12/23
   4+ 9F56              ;
   5+ 9F56              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F56
   7+ 9F56              ;	ADC HL,SP	LD (addr),SP
   8+ 9F56              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F56              ;	ADD IX,SP	LD SP,nn
  10+ 9F56              ; 	ADD IY,SP	LD SP,HL
  11+ 9F56              ;				LD SP,IX
  12+ 9F56              ;	DEC SP		LD SP,IY
  13+ 9F56
  14+ 9F56              ;	EX (SP),HL
  15+ 9F56              ;	EX (SP),IX
  16+ 9F56              ;	EX (SP),IY
  17+ 9F56
  18+ 9F56              ;	INC SP
  19+ 9F56
  20+ 9F56                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 A2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 6A 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6C 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 91 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A AA 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 70 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AE 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A8 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 91 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 AA 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 70 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AE 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B A2 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A8 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B A2 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A8 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A8 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1743  8131
1744  8131              	SAVESNA "Pruebas.sna", START
1745  8131
1746  8131
1747  8131
1748  8131
# file closed: Banco_de_pruebas.asm
