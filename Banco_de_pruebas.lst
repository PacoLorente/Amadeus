# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 09 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 F9 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD C1 47        Posicion_inicio defw $47c1								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 03 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_derecha_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 1D 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 5F 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 58 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD B2 87      	call Inicia_Puntero_objeto
 250  8617 CD 6D 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD FA 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 3B 88     3 call Restore_Amadeus
 259  8626 CD B2 87     	call Inicia_Puntero_objeto
 260  8629 CD 6D 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 4D 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 6E 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 75 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 58 87     	call Inicia_punteros_de_entidades
 272  863B CD 29 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 71 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
 291  864F CD AA 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 3A EC 85     	ld a,(Impacto2)
 300  8659 A7           	and a
 301  865A 28 03        	jr z,5F
 302  865C
 303  865C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865C
 307  865C CD 56 8C     	call Selector_de_impactos
 308  865F
 309  865F CD 58 87     5 call Inicia_punteros_de_entidades
 310  8662 CD 29 88     	call Restore_Primera_entidad
 311  8665
 312  8665 AF           	xor a
 313  8666 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 314  8669
 315  8669 CD E8 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 316  866C 21 00 70     	ld hl,Album_de_fotos
 317  866F 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 318  8672              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 319  8672 3A DD 85         ld a,(Numero_de_entidades)
 320  8675 47               ld b,a
 321  8676 A7           	and a
 322  8677 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 323  8679
 324  8679 C5           2 push bc
 325  867A CD C3 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 326  867D
 327  867D 3A C9 85     	ld a,(Ctrl_0)
 328  8680 CB 67        	bit 4,a
 329  8682 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 330  8684
 331  8684              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 332  8684              ; Las entidades sólo generan disparo cuando se mueven.
 333  8684              ; 16/02/23.
 334  8684              ; [[[
 335  8684 CD 96 88     	call Detecta_disparo_entidad
 336  8687              ; ]]]
 337  8687 CD 1F 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 338  868A
 339  868A 21 C9 85     1 ld hl,Ctrl_0
 340  868D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 341  868F AF           	xor a
 342  8690 32 CA 85     	ld (Obj_dibujado),a
 343  8693
 344  8693 CD FA 87     6 call Store_Restore_entidades
 345  8696 C1           	pop bc
 346  8697 10 E0        	djnz 2B
 347  8699
 348  8699              ; Tras la gestión de las entidades, ... AMADEUS.
 349  8699
 350  8699 CD 3B 88     4 call Restore_Amadeus
 351  869C CD F0 86     	call Mov_Amadeus
 352  869F
 353  869F 3A C9 85     	ld a,(Ctrl_0)
 354  86A2 CB 67        	bit 4,a
 355  86A4 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 356  86A6
 357  86A6 CD 1F 87     	call Guarda_foto_entidad_a_pintar
 358  86A9
 359  86A9 21 C9 85     3 ld hl,Ctrl_0
 360  86AC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 361  86AE AF           	xor a
 362  86AF 32 CA 85     	ld (Obj_dibujado),a
 363  86B2 CD 4D 88     	call Store_Amadeus
 364  86B5
 365  86B5 CD 06 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 366  86B8
 367  86B8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 368  86B8
 369  86B8 CD 7C 87     	call Calcula_numero_de_malotes
 370  86BB CD 94 87     	call Calcula_numero_de_disparotes
 371  86BE
 372  86BE 3E 04        	ld a,4
 373  86C0 D3 FE        	out ($fe),a
 374  86C2 C9           	ret
 375  86C3
 376  86C3              ; --------------------------------------------------------------------------------------------------------------
 377  86C3              ;
 378  86C3              ;	27/03/23
 379  86C3
 380  86C3              Mov_obj
 381  86C3
 382  86C3              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 383  86C3
 384  86C3 AF           	xor a
 385  86C4 32 CA 85     	ld (Obj_dibujado),a
 386  86C7 CD 29 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 387  86CA              ;														; Obj_dibujado="0".
 388  86CA              ; Movemos Entidades malignas.
 389  86CA
 390  86CA 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 391  86CD 24           	inc h                                               ; Salimos de la rutina.
 392  86CE 25           	dec h
 393  86CF C8           	ret z
 394  86D0
 395  86D0 CD 0B 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 396  86D3
 397  86D3 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 398  86D6 CB 67        	bit 4,a
 399  86D8 C8           	ret z
 400  86D9
 401  86D9              ; Ha habido desplazamiento de la entidad maligna.
 402  86D9              ; Ha llegado a zona de AMADEUS ???
 403  86D9
 404  86D9 3A A2 85     	ld a,(Coordenada_y)
 405  86DC FE 14        	cp $14
 406  86DE D4 52 8A     	call nc, Compara_coordenadas_X
 407  86E1
 408  86E1              ; ---------
 409  86E1
 410  86E1 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 411  86E3 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 412  86E6 CD 29 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 413  86E9 CD 40 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 414  86EC CD 0F 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 415  86EF C9           	ret													; _de la misma.
 416  86F0
 417  86F0              ; --------------------------------------------------------------------------------------------------------------
 418  86F0              ;
 419  86F0              ;	29/1/23
 420  86F0
 421  86F0              Mov_Amadeus
 422  86F0
 423  86F0 AF           	xor a
 424  86F1 32 CA 85     	ld (Obj_dibujado),a
 425  86F4 CD 29 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 426  86F7              ;														; Obj_dibujado="0".
 427  86F7              ; Movemos Amadeus.
 428  86F7
 429  86F7 CD 73 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 430  86FA 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 431  86FD CB 67        	bit 4,a
 432  86FF C8           	ret z
 433  8700
 434  8700              ; ---------
 435  8700
 436  8700 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 437  8702 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 438  8705 CD 29 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 439  8708 CD 40 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 440  870B CD 0F 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 441  870E C9           	ret													; _de la nave.
 442  870F
 443  870F              ; --------------------------------------------------------------------------------------------------------------
 444  870F              ;
 445  870F              ;	31/01/23
 446  870F              ;
 447  870F              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 448  870F
 449  870F              Guarda_foto_entidad_a_borrar
 450  870F
 451  870F CD 47 8F     	call Prepara_draw
 452  8712 CD 81 8E     	call calcula_CColumnass
 453  8715 CD B8 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 454  8718 CD 0D 8F     	call Define_rutina_de_impresion
 455  871B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 456  871E C9           	ret
 457  871F
 458  871F              ; --------------------------------------------------------------------------------------------------------------
 459  871F              ;
 460  871F              ;	31/01/23
 461  871F              ;
 462  871F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 463  871F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 464  871F
 465  871F              Guarda_foto_entidad_a_pintar
 466  871F
 467  871F CD 4C 87     	call Repone_pintar
 468  8722 CD 6D 8C     	call Draw
 469  8725 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 470  8728 C9           	ret
 471  8729
 472  8729              ; --------------------------------------------------------------------------------------------------------------
 473  8729              ;
 474  8729              ;
 475  8729
 476  8729 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 477  872C 3A CA 85     	ld a,(Obj_dibujado)
 478  872F A7           	and a
 479  8730 28 05        	jr z,1F
 480  8732 11 BF 85     	ld de,Variables_de_pintado
 481  8735 18 03        	jr 2F
 482  8737 11 B5 85     1 ld de,Variables_de_borrado
 483  873A 01 08 00     2 ld bc,8
 484  873D ED B0        	ldir
 485  873F C9           	ret
 486  8740
 487  8740              ; --------------------------------------------------------------------------------------------------------------
 488  8740
 489  8740 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 490  8743 11 9B 85     	ld de,Filas
 491  8746 01 08 00     	ld bc,8
 492  8749 ED B0        	ldir
 493  874B C9           	ret
 494  874C
 495  874C 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 496  874F 11 9B 85     	ld de,Filas
 497  8752 01 08 00     	ld bc,8
 498  8755 ED B0        	ldir
 499  8757 C9           	ret
 500  8758
 501  8758              ; *************************************************************************************************************************************************************
 502  8758              ;
 503  8758              ; 8/1/23
 504  8758              ;
 505  8758              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 506  8758              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 507  8758              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 508  8758
 509  8758              ; Destruye HL y DE !!!!!
 510  8758
 511  8758              Inicia_punteros_de_entidades
 512  8758
 513  8758 21 68 84     	ld hl,Indice_de_entidades
 514  875B CD AC 87         call Extrae_address
 515  875E 22 D7 85         ld (Puntero_store_entidades),hl
 516  8761 21 6A 84     	ld hl,Indice_de_entidades+2
 517  8764 22 DB 85     	ld (Indice_restore),hl
 518  8767 CD AC 87     	call Extrae_address
 519  876A 22 D9 85     	ld (Puntero_restore_entidades),hl
 520  876D C9               ret
 521  876E
 522  876E              ; *************************************************************************************************************************************************************
 523  876E              ;
 524  876E              ; 8/1/23
 525  876E              ;
 526  876E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 527  876E
 528  876E 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 529  8771 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 530  8774 C9           	ret
 531  8775 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 532  8778 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 533  877B C9           	ret
 534  877C
 535  877C              ; -------------------------------------------------------------------------------------------------------------
 536  877C              ;
 537  877C              ; 28/2/23
 538  877C              ;
 539  877C
 540  877C              Calcula_numero_de_malotes
 541  877C
 542  877C 21 00 70     	ld hl,Album_de_fotos
 543  877F EB           	ex de,hl
 544  8780 2A E3 85     	ld hl,(Stack_snapshot)
 545  8783
 546  8783 06 00        	ld b,0
 547  8785 7D           	ld a,l
 548  8786 93           	sub e
 549  8787 28 07        	jr z,1F
 550  8789
 551  8789              ; Nº de malotes no es "0".
 552  8789
 553  8789 D6 06        2 sub 6
 554  878B 04           	inc b
 555  878C A7           	and a
 556  878D 20 FA        	jr nz,2B
 557  878F 78           	ld a,b
 558  8790
 559  8790 32 DE 85     1 ld (Numero_de_malotes),a
 560  8793 C9           	ret
 561  8794
 562  8794              ; -------------------------------------------------------------------------------------------------------------
 563  8794              ;
 564  8794              ; 28/2/23
 565  8794              ;
 566  8794
 567  8794              Calcula_numero_de_disparotes
 568  8794
 569  8794 21 60 70     	ld hl,Album_de_fotos_disparos
 570  8797 EB           	ex de,hl
 571  8798 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 572  879B
 573  879B 06 00        	ld b,0
 574  879D 7D           	ld a,l
 575  879E 93           	sub e
 576  879F 28 07        	jr z,1F
 577  87A1
 578  87A1              ; Nº de malotes no es "0".
 579  87A1
 580  87A1 D6 06        2 sub 6
 581  87A3 04           	inc b
 582  87A4 A7           	and a
 583  87A5 20 FA        	jr nz,2B
 584  87A7 78           	ld a,b
 585  87A8
 586  87A8 32 E7 85     1 ld (Numero_de_disparotes),a
 587  87AB C9           	ret
 588  87AC              ; *************************************************************************************************************************************************************
 589  87AC              ;
 590  87AC              ; 20/10/22
 591  87AC              ;
 592  87AC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 593  87AC              ;
 594  87AC              ; Destruye el puntero y DE !!!!!
 595  87AC
 596  87AC 5E           Extrae_address ld e,(hl)
 597  87AD 23           	inc hl
 598  87AE 56           	ld d,(hl)
 599  87AF 2B           	dec hl
 600  87B0 EB           	ex de,hl
 601  87B1 C9           	ret
 602  87B2
 603  87B2              ; *************************************************************************************************************************************************************
 604  87B2              ;
 605  87B2              ;	7/2/23
 606  87B2              ;
 607  87B2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 608  87B2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 609  87B2              ;
 610  87B2              ;   Destruye HL y BC !!!!!,
 611  87B2              ;
 612  87B2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 613  87B2              ;					"0" ..... Izquierda.
 614  87B2
 615  87B2              Inicia_Puntero_objeto
 616  87B2
 617  87B2 3A AF 85     	ld a,(Cuad_objeto)
 618  87B5 E6 01        	and 1
 619  87B7 F5           	push af
 620  87B8 CC D6 87     	call z,Inicia_puntero_objeto_izq
 621  87BB F1           	pop af
 622  87BC 28 2B        	jr z,1F
 623  87BE CD C3 87     	call Inicia_puntero_objeto_der
 624  87C1 18 26        	jr 1F
 625  87C3
 626  87C3              ; Arrancamos desde la parte izquierda de la pantalla.
 627  87C3              ; Iniciamos (Indice_Sprite_der).
 628  87C3
 629  87C3 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 630  87C6 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 631  87C9 CD AC 87     	call Extrae_address
 632  87CC 22 9F 85     	ld (Puntero_objeto),hl
 633  87CF
 634  87CF 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 635  87D2              ;	call Extrae_address
 636  87D2 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 637  87D5 C9           	ret
 638  87D6
 639  87D6              ; Arrancamos desde la parte derecha de la pantalla.
 640  87D6              ; Iniciamos (Indice_Sprite_izq).
 641  87D6
 642  87D6 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 643  87D9 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 644  87DC CD AC 87     	call Extrae_address
 645  87DF 22 9F 85     	ld (Puntero_objeto),hl
 646  87E2
 647  87E2 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 648  87E5              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 649  87E5 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 650  87E8 C9           	ret
 651  87E9
 652  87E9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 653  87E9
 654  87E9 21 38 83     1 ld hl,Amadeus
 655  87EC ED 4B 9F 85  	ld bc,(Puntero_objeto)
 656  87F0 B7 ED 42     	sub hl,bc
 657  87F3 C0           	ret nz
 658  87F4 21 C9 85     	ld hl,Ctrl_0
 659  87F7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 660  87F9 C9           	ret 												; _de nuestra nave en los extremos.
 661  87FA
 662  87FA              ; *************************************************************************************************************************************************************
 663  87FA              ;
 664  87FA              ;	8/1/23
 665  87FA              ;
 666  87FA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 667  87FA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 668  87FA
 669  87FA              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 670  87FA              ;	_de la 2ª y 3ª entidad respectivamente.
 671  87FA
 672  87FA              Store_Restore_entidades
 673  87FA
 674  87FA E5           	push hl
 675  87FB D5           	push de
 676  87FC C5            	push bc
 677  87FD
 678  87FD              ;	STORE !!!!!
 679  87FD              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 680  87FD
 681  87FD 21 9B 85     	ld hl,Filas
 682  8800 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 683  8804 01 3B 00     	ld bc,59
 684  8807 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 685  8809
 686  8809              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 687  8809
 688  8809 2A D9 85     	ld hl,(Puntero_restore_entidades)
 689  880C 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 690  880F 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 691  8812 01 3B 00     	ld bc,59
 692  8815 ED B0        	ldir
 693  8817
 694  8817              ;	Incrementa RESTORE !!!!!
 695  8817
 696  8817 2A DB 85         ld hl,(Indice_restore)
 697  881A 23           	inc hl
 698  881B 23           	inc hl
 699  881C 22 DB 85     	ld (Indice_restore),hl
 700  881F CD AC 87         call Extrae_address
 701  8822 22 D9 85         ld (Puntero_restore_entidades),hl
 702  8825 C1           	pop bc
 703  8826 D1           	pop de
 704  8827 E1           	pop hl
 705  8828 C9           	ret
 706  8829
 707  8829              ; **************************************************************************************************
 708  8829              ;
 709  8829              ;	29/10/22
 710  8829              ;
 711  8829              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 712  8829
 713  8829 E5           Restore_Primera_entidad push hl
 714  882A D5           	push de
 715  882B C5            	push bc
 716  882C 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 717  882F 11 9B 85     	ld de,Filas
 718  8832 01 3B 00     	ld bc,59
 719  8835 ED B0        	ldir
 720  8837 C1           	pop bc
 721  8838 D1           	pop de
 722  8839 E1           	pop hl
 723  883A C9           	ret
 724  883B
 725  883B              ; **************************************************************************************************
 726  883B              ;
 727  883B              ;	25/01/23
 728  883B              ;
 729  883B              ;	Restore_Amadeus
 730  883B              ;
 731  883B              ;	Cargamos en DRAW los parámetros de Amadeus.
 732  883B              ;
 733  883B
 734  883B E5           Restore_Amadeus	push hl
 735  883C D5           	push de
 736  883D C5            	push bc
 737  883E 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 738  8841 11 9B 85     	ld de,Filas
 739  8844 01 3B 00     	ld bc,59
 740  8847 ED B0        	ldir
 741  8849 C1           	pop bc
 742  884A D1           	pop de
 743  884B E1           	pop hl
 744  884C C9           	ret
 745  884D
 746  884D              ; *************************************************************************************************************************************************************
 747  884D              ;
 748  884D              ;	29/01/23
 749  884D              ;
 750  884D              ;	Store_Amadeus
 751  884D              ;
 752  884D              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 753  884D              ;
 754  884D
 755  884D E5           Store_Amadeus push hl
 756  884E D5           	push de
 757  884F C5            	push bc
 758  8850 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 759  8853 11 74 84     	ld de,Amadeus_db
 760  8856 01 3B 00     	ld bc,59
 761  8859 ED B0        	ldir
 762  885B C1           	pop bc
 763  885C D1           	pop de
 764  885D E1           	pop hl
 765  885E C9           	ret
 766  885F
 767  885F              ; **************************************************************************************************
 768  885F
 769  885F              ; Teclado.
 770  885F
 771  885F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 772  8861 DB FE        	in a,($fe)
 773  8863 E6 01        	and $01
 774  8865 28 02        	jr z,1f
 775  8867 18 F6        	jr Pulsa_ENTER
 776  8869 C9           1 ret
 777  886A
 778  886A              ; **************************************************************************************************
 779  886A              ;
 780  886A              ; Temporización.
 781  886A
 782  886A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 783  886A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 784  886A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 785  886A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 786  886A
 787  886A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 788  886A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 789  886A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 790  886A
 791  886A              ; A partir de $4f61 no hace falta DELAY.
 792  886A
 793  886A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 794  886A
 795  886A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 796  886D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 797  886E 78           	LD A,B
 798  886F A7           	AND A
 799  8870 20 FB        	JR NZ,wait
 800  8872 C9           	RET
 801  8873
 802  8873              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 803  8873              ;
 804  8873              ;	5/3/23
 805  8873              ;
 806  8873              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 807  8873
 808  8873              Movimiento_Amadeus
 809  8873
 810  8873              ; Disparo.
 811  8873
 812  8873 3E F7        	ld a,$f7												; "5" para disparar.
 813  8875 DB FE        	in a,($fe)
 814  8877 E6 10        	and $10
 815  8879 CC D3 88     	call z,Genera_disparo
 816  887C
 817  887C 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 818  887E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 819  8880 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 820  8882 CC AB 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 821  8885 3E F7        	ld a,$f7
 822  8887 DB FE        	in a,($fe)
 823  8889 E6 01        	and $01
 824  888B C8           	ret z
 825  888C
 826  888C 3E F7        	ld a,$f7
 827  888E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 828  8890 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 829  8892 CC 8D 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 830  8895 C9           	ret
 831  8896
 832  8896              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 833  8896              ;
 834  8896              ;	Rutina provisional para que los malotes cagen balas.
 835  8896
 836  8896 3E 7F        Detecta_disparo_entidad ld a,$7f
 837  8898 DB FE        	in a,($fe)
 838  889A E6 01        	and 1
 839  889C C0           	ret nz
 840  889D CD D3 88     	call Genera_disparo
 841  88A0 C9           	ret
 842  88A1
 843  88A1              ; Pinta indicadores de FILAS. ------------------------------------------------------
 844  88A1
 845  88A1 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 846  88A4
 847  88A4              ; ----------
 848  88A4 06 20        	ld b,32
 849  88A6 E5           2 push hl
 850  88A7 C5           	push bc
 851  88A8              ; ----------
 852  88A8
 853  88A8 06 BF        	ld b,$bf
 854  88AA 36 80        1 ld (hl),%10000000
 855  88AC CD 53 8F     	call NextScan
 856  88AF 10 F9        	djnz 1B
 857  88B1
 858  88B1              ; ----------
 859  88B1 C1           	pop bc
 860  88B2 E1           	pop hl
 861  88B3 2C           	inc l
 862  88B4 10 F0        	djnz 2B
 863  88B6              ; ----------
 864  88B6
 865  88B6 06 03        	ld b,3
 866  88B8 21 00 47         ld hl,$4700
 867  88BB CD C1 88     3 call Bucle_1
 868  88BE 10 FB            djnz 3B
 869  88C0 C9               ret
 870  88C1
 871  88C1 C5           Bucle_1 push bc
 872  88C2 E5                   push hl
 873  88C3 D1                   pop de
 874  88C4 13                   inc de
 875  88C5 01 FF 00             ld bc,255
 876  88C8 36 FF                ld (hl),255
 877  88CA ED B0                ldir
 878  88CC 23                   inc hl
 879  88CD 3E 07                ld a,7
 880  88CF 84                   add a,h
 881  88D0 67                   ld h,a
 882  88D1 C1                   pop bc
 883  88D2 C9                   ret
 884  88D3
 885  88D3              ; ---------------------------------------------------------------
 886  88D3
 887  88D3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88D3              ; ******************************************************************************************************************************************************************************************
   2+ 88D3              ;
   3+ 88D3              ;   27/03/23
   4+ 88D3              ;
   5+ 88D3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88D3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88D3              ;
   8+ 88D3              ;
   9+ 88D3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88D3              ;
  11+ 88D3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88D3              ;               _ hacen las entidades hacia abajo.
  13+ 88D3              ;
  14+ 88D3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88D3              ;
  16+ 88D3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88D3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88D3              ;
  19+ 88D3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88D3              ;           _ la bala.
  21+ 88D3              ;
  22+ 88D3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88D3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88D3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88D3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88D3              ;           _ en el momento de generarse la bala)).
  27+ 88D3
  28+ 88D3              Genera_disparo
  29+ 88D3
  30+ 88D3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88D3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88D3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88D3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88D3              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
  35+ 88D3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
  36+ 88D3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88D3
  38+ 88D3              ; Exclusiones:
  39+ 88D3
  40+ 88D3 3A D2 85         ld a,(Columnas)
  41+ 88D6 47               ld b,a
  42+ 88D7 3A 9C 85         ld a,(Columns)
  43+ 88DA B8               cp b
  44+ 88DB C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88DC
  46+ 88DC              ; ----- ----- -----
  47+ 88DC
  48+ 88DC 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
  49+ 88DF CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
  50+ 88E1 20 06            jr nz,16F
  51+ 88E3
  52+ 88E3 3A A2 85         ld a,(Coordenada_y)
  53+ 88E6 FE 13            cp $13
  54+ 88E8 D0               ret nc
  55+ 88E9
  56+ 88E9              ; ----- ----- -----
  57+ 88E9
  58+ 88E9              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  59+ 88E9
  60+ 88E9 21 F2 83     16 ld hl,ON_Disparo_2A
  61+ 88EC CD AC 87         call Extrae_address
  62+ 88EF 24               inc h
  63+ 88F0 25               dec h
  64+ 88F1 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  65+ 88F3
  66+ 88F3 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
  67+ 88F6 A7               and a
  68+ 88F7 ED 52            sbc hl,de
  69+ 88F9 D0               ret nc
  70+ 88FA
  71+ 88FA              ; ----- ----- -----
  72+ 88FA
  73+ 88FA 21 00 80     14 ld hl,Indice_disparo
  74+ 88FD 3A A3 85         ld a,(CTRL_DESPLZ)
  75+ 8900 4F               ld c,a
  76+ 8901 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  77+ 8903              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  78+ 8903              ;                                            ""        ""       "f9", B="1"
  79+ 8903              ;                                            ""        ""       "fb", B="2"
  80+ 8903              ;                                            ""        ""       "fb", B="3"
  81+ 8903 A7               and a
  82+ 8904 28 10            jr z,1F
  83+ 8906 E6 01            and 1
  84+ 8908 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  85+ 8909
  86+ 8909 79               ld a,c
  87+ 890A 16 F9            ld d,$f9
  88+ 890C 23           2 inc hl
  89+ 890D 23               inc hl
  90+ 890E 04               inc b
  91+ 890F BA               cp d
  92+ 8910 28 04            jr z,1F
  93+ 8912 14               inc d
  94+ 8913 14               inc d
  95+ 8914 18 F6            jr 2B
  96+ 8916
  97+ 8916 CD AC 87     1 call Extrae_address
  98+ 8919 E5               push hl
  99+ 891A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 100+ 891C DD 21 E6 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 101+ 8920
 102+ 8920              ;	Se cumplen las condiciones necesarias para generar un disparo.
 103+ 8920              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 104+ 8920
 105+ 8920 3A AF 85     	ld a,(Cuad_objeto)
 106+ 8923 FE 02            cp 2
 107+ 8925 38 60            jr c,3F
 108+ 8927 28 5E            jr z,3F
 109+ 8929
 110+ 8929              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 111+ 8929
 112+ 8929 E6 01            and 1
 113+ 892B 28 2D            jr z,4F
 114+ 892D
 115+ 892D              ; 	Estamos en el 3er cuadrante de pantalla.
 116+ 892D              ; 	3er CUAD. ----- ----- ----- ----- -----
 117+ 892D              ;
 118+ 892D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 119+ 892D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 120+ 892D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 121+ 892D
 122+ 892D 2A 9D 85     	ld hl,(Posicion_actual)
 123+ 8930
 124+ 8930              ;   Amadeus o entidad ???.
 125+ 8930
 126+ 8930 3A C9 85         ld a,(Ctrl_0)
 127+ 8933 CB 77            bit 6,a
 128+ 8935 28 0D            jr z,8F
 129+ 8937
 130+ 8937              ; 	Dispara Amadeus.
 131+ 8937
 132+ 8937 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 133+ 8939 CD 62 8F         call PreviousScan
 134+ 893C CD 62 8F         call PreviousScan
 135+ 893F
 136+ 893F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 137+ 893F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 138+ 893F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 139+ 893F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 140+ 893F
 141+ 893F CD B1 89         call Ajusta_disparo_parte_izquierda
 142+ 8942 18 0E            jr 10F
 143+ 8944
 144+ 8944              ; 	Dispara Entidad.
 145+ 8944
 146+ 8944 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
 147+ 8946
 148+ 8946              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 149+ 8946              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 150+ 8946
 151+ 8946 C5               push bc
 152+ 8947 06 10            ld b,16
 153+ 8949 CD 53 8F     9 call NextScan
 154+ 894C 10 FB            djnz 9B
 155+ 894E C1               pop bc
 156+ 894F
 157+ 894F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 158+ 894F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 159+ 894F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 160+ 894F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 161+ 894F
 162+ 894F CD B1 89         call Ajusta_disparo_parte_izquierda
 163+ 8952
 164+ 8952 CD 26 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 165+ 8955              ;                                                   ; _al generar el disparo.
 166+ 8955
 167+ 8955              ; 	LLegados a este punto tendremos:
 168+ 8955              ;
 169+ 8955              ;       Puntero_objeto_disparo en IY.
 170+ 8955              ;       Rutinas_de_impresion en IX.
 171+ 8955              ;       Puntero_de_impresion en HL.
 172+ 8955              ;       Impacto/Dirección en BC.
 173+ 8955
 174+ 8955 CD B9 89         call Almacena_disparo
 175+ 8958 18 4F            jr 6F                                           ; RET.
 176+ 895A
 177+ 895A
 178+ 895A              ; 	Estamos en el 4º cuadrante de pantalla.
 179+ 895A              ; 	4º CUAD. ----- ----- ----- ----- -----
 180+ 895A              ;
 181+ 895A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 182+ 895A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 183+ 895A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 184+ 895A
 185+ 895A 2A 9D 85     4 ld hl,(Posicion_actual)
 186+ 895D
 187+ 895D              ;   Amadeus o entidad ???.
 188+ 895D
 189+ 895D 3A C9 85         ld a,(Ctrl_0)
 190+ 8960 CB 77            bit 6,a
 191+ 8962 28 0D            jr z,11F
 192+ 8964
 193+ 8964              ; 	Dispara Amadeus.
 194+ 8964
 195+ 8964 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 196+ 8966 CD 62 8F         call PreviousScan
 197+ 8969 CD 62 8F         call PreviousScan
 198+ 896C
 199+ 896C              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 200+ 896C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 201+ 896C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 202+ 896C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 203+ 896C
 204+ 896C CD AA 89         call Ajusta_disparo_parte_derecha
 205+ 896F 18 0E            jr 13F
 206+ 8971
 207+ 8971              ; 	Dispara Entidad.
 208+ 8971
 209+ 8971 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
 210+ 8973
 211+ 8973              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 212+ 8973              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 213+ 8973
 214+ 8973 C5               push bc
 215+ 8974
 216+ 8974 06 10            ld b,16
 217+ 8976 CD 53 8F     12 call NextScan
 218+ 8979 10 FB            djnz 12B
 219+ 897B
 220+ 897B C1               pop bc
 221+ 897C
 222+ 897C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 223+ 897C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 224+ 897C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 225+ 897C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 226+ 897C
 227+ 897C CD AA 89         call Ajusta_disparo_parte_derecha
 228+ 897F
 229+ 897F CD 26 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 230+ 8982              ;                                                     ; _al generar el disparo.
 231+ 8982
 232+ 8982              ; LLegados a este punto tendremos:
 233+ 8982              ;
 234+ 8982              ;       Puntero_objeto_disparo en IY.
 235+ 8982              ;       Rutinas_de_impresion en IX.
 236+ 8982              ;       Puntero_de_impresion en HL.
 237+ 8982              ;       Impacto/Dirección en BC.
 238+ 8982
 239+ 8982 CD B9 89         call Almacena_disparo
 240+ 8985 18 22            jr 6F                                           ; RET.
 241+ 8987
 242+ 8987              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 243+ 8987
 244+ 8987 28 11        3 jr z,5F
 245+ 8989
 246+ 8989              ; 	1er CUAD. ----- ----- ----- ----- -----
 247+ 8989              ;
 248+ 8989              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 249+ 8989              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 250+ 8989              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 251+ 8989              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 252+ 8989
 253+ 8989              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 254+ 8989              ;	   ""        ""       "f9", B="1"
 255+ 8989              ;	   ""        ""       "fb", B="2"
 256+ 8989              ; 	   ""        ""       "fb", B="3"
 257+ 8989
 258+ 8989 2A 9D 85     	ld hl,(Posicion_actual)
 259+ 898C CD 53 8F     	call NextScan
 260+ 898F
 261+ 898F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 262+ 898F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 263+ 898F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 264+ 898F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 265+ 898F
 266+ 898F CD B1 89         call Ajusta_disparo_parte_izquierda
 267+ 8992
 268+ 8992              ; 	No se produce impacto. B="$80"
 269+ 8992              ; 	Dirección del proyectil hacia abajo. C="$80"
 270+ 8992
 271+ 8992 01 80 80         ld bc,$8080
 272+ 8995
 273+ 8995              ; 	LLegados a este punto tendremos:
 274+ 8995              ;
 275+ 8995              ;       Puntero_objeto_disparo en IY.
 276+ 8995              ;       Rutinas_de_impresion en IX.
 277+ 8995              ;       Puntero_de_impresion en HL.
 278+ 8995              ;       Impacto/Dirección en BC.
 279+ 8995
 280+ 8995 CD B9 89         call Almacena_disparo
 281+ 8998 18 0F            jr 6F                                           ; RET.
 282+ 899A
 283+ 899A              ; 	Estamos en el 2º cuadrante de pantalla.
 284+ 899A              ; 	2º CUAD. ----- ----- ----- ----- -----
 285+ 899A              ;
 286+ 899A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 287+ 899A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 288+ 899A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 289+ 899A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 290+ 899A
 291+ 899A 2A 9D 85     5 ld hl,(Posicion_actual)
 292+ 899D CD 53 8F     	call NextScan
 293+ 89A0
 294+ 89A0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 295+ 89A0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 296+ 89A0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 297+ 89A0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 298+ 89A0
 299+ 89A0 CD AA 89         call Ajusta_disparo_parte_derecha
 300+ 89A3
 301+ 89A3              ; 	No se produce impacto. B="$80"
 302+ 89A3              ; 	Dirección del proyectil hacia abajo. C="80"
 303+ 89A3
 304+ 89A3 01 80 80     15 ld bc,$8080
 305+ 89A6
 306+ 89A6              ; 	LLegados a este punto tendremos:
 307+ 89A6              ;
 308+ 89A6              ;       Puntero_objeto_disparo en IY.
 309+ 89A6              ;       Rutinas_de_impresion en IX.
 310+ 89A6              ;       Puntero_de_impresion en HL.
 311+ 89A6              ;       Impacto/Dirección en BC.
 312+ 89A6
 313+ 89A6 CD B9 89         call Almacena_disparo
 314+ 89A9
 315+ 89A9 C9           6 ret
 316+ 89AA
 317+ 89AA              ; ----------------------------------------------------------------
 318+ 89AA              ;
 319+ 89AA              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 320+ 89AA              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 321+ 89AA              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 322+ 89AA
 323+ 89AA 78           Ajusta_disparo_parte_derecha ld a,b
 324+ 89AB FE 02            cp 2
 325+ 89AD 38 01            jr c,1F
 326+ 89AF 23               inc hl
 327+ 89B0 C9           1 ret
 328+ 89B1
 329+ 89B1 78           Ajusta_disparo_parte_izquierda ld a,b
 330+ 89B2 FE 01        	cp 1
 331+ 89B4 20 01        	jr nz,1F
 332+ 89B6 2B           	dec hl
 333+ 89B7 2B           1 dec hl
 334+ 89B8 C9               ret
 335+ 89B9
 336+ 89B9              ; ----------------------------------------------------------------
 337+ 89B9              ;
 338+ 89B9              ;   25/02/23
 339+ 89B9              ;
 340+ 89B9              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 341+ 89B9              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 342+ 89B9
 343+ 89B9              Almacena_disparo
 344+ 89B9
 345+ 89B9 E5               push hl  										; HL contiene el puntero de impresión.
 346+ 89BA F1               pop af
 347+ 89BB 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 348+ 89BC
 349+ 89BC 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 350+ 89BD E6 01            and 1
 351+ 89BF 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 352+ 89C1              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 353+ 89C1              ; 	Dispara AMADEUS.
 354+ 89C1
 355+ 89C1              ;	Comprobamos que a Amadeus aún le quedan disparos.
 356+ 89C1              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 357+ 89C1              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 358+ 89C1              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 359+ 89C1
 360+ 89C1 C5               push bc
 361+ 89C2 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 362+ 89C5 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 89C8 A7               and a
 364+ 89C9 ED 42            sbc hl,bc
 365+ 89CB CC 75 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 366+ 89CE C1               pop bc
 367+ 89CF 28 54            jr z,4F
 368+ 89D1
 369+ 89D1 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 370+ 89D4 23               inc hl
 371+ 89D5 23               inc hl
 372+ 89D6 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 373+ 89D9              ;                                                   ; _ Disparo_(+1).
 374+ 89D9 18 18            jr 2F
 375+ 89DB
 376+ 89DB              ; Dispara una entidad.
 377+ 89DB
 378+ 89DB C5           1 push bc
 379+ 89DC 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 380+ 89DF 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 89E2 A7               and a
 382+ 89E3 ED 42            sbc hl,bc
 383+ 89E5 CC 6E 87         call z,Inicia_Puntero_Disparo_Entidades
 384+ 89E8 C1               pop bc
 385+ 89E9 28 3A            jr z,4F
 386+ 89EB
 387+ 89EB 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 388+ 89EE 23               inc hl
 389+ 89EF 23               inc hl
 390+ 89F0 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 391+ 89F3              ;                                                   ; _ Disparo_(+1).
 392+ 89F3 CD AC 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 393+ 89F6              ;                                                   ; _ los 8 bytes que definen el disparo:
 394+ 89F6              ;
 395+ 89F6              ;                                                     Puntero_objeto_disparo en IY.
 396+ 89F6              ;                                                     Rutinas_de_impresion en IX.
 397+ 89F6              ;                                                     Puntero_de_impresion en HL.
 398+ 89F6              ;                                                     Impacto/Dirección en BC.
 399+ 89F6
 400+ 89F6 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 401+ 89F7 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 402+ 89F8 23               inc hl                                          ; _ al siguiente.
 403+ 89F9 A7               and a
 404+ 89FA 20 C0            jr nz,3B
 405+ 89FC
 406+ 89FC 08               ex af,af
 407+ 89FD ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 408+ 8A01 F9               ld sp,hl
 409+ 8A02
 410+ 8A02 DD E5            push ix                                         ; Rutina de impresión.
 411+ 8A04 F5               push af                                         ; Puntero de impresión.
 412+ 8A05 FD E5            push iy                                         ; Puntero objeto.
 413+ 8A07 C5               push bc                                         ; Control.
 414+ 8A08
 415+ 8A08 ED 7B DF 85      ld sp,(Stack)
 416+ 8A0C
 417+ 8A0C              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 418+ 8A0C
 419+ 8A0C 21 D6 85     	ld hl,Ctrl_1
 420+ 8A0F CB C6        	set 0,(hl)
 421+ 8A11
 422+ 8A11 DD E5        	push ix
 423+ 8A13 E1               pop hl
 424+ 8A14 F5               push af
 425+ 8A15 DD E1            pop ix
 426+ 8A17
 427+ 8A17 CD A0 7F     	call Guarda_foto_registros
 428+ 8A1A
 429+ 8A1A 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 430+ 8A1D CB 86        	res 0,(hl)
 431+ 8A1F
 432+ 8A1F              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 433+ 8A1F              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 434+ 8A1F
 435+ 8A1F CD 75 87         call Inicia_Puntero_Disparo_Amadeus
 436+ 8A22 CD 6E 87         call Inicia_Puntero_Disparo_Entidades
 437+ 8A25
 438+ 8A25 C9           4 ret
 439+ 8A26
 440+ 8A26              ; ----------------------------------------------------------------
 441+ 8A26              ;
 442+ 8A26              ;   4/3/23
 443+ 8A26              ;
 444+ 8A26              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 445+ 8A26              ;   _ al generarse el disparo.
 446+ 8A26              ;
 447+ 8A26              ;       "$80" ..... No se produce colisión.
 448+ 8A26              ;       "$81" ..... Se produce colisión.
 449+ 8A26
 450+ 8A26              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 451+ 8A26              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 452+ 8A26
 453+ 8A26
 454+ 8A26 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 455+ 8A28 E5               push hl                                        ; Puntero de impresión.
 456+ 8A29 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 457+ 8A2B CD 42 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 458+ 8A2E E1               pop hl
 459+ 8A2F E5               push hl
 460+ 8A30 CD 53 8F         call NextScan
 461+ 8A33
 462+ 8A33 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 463+ 8A34 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 464+ 8A36 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 465+ 8A38              ;                                                  ; _ 2º scanline si esto es así.
 466+ 8A38 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 467+ 8A3A CD 42 8A         call Bucle_2
 468+ 8A3D
 469+ 8A3D 43           2 ld b,e
 470+ 8A3E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 471+ 8A3F FD E1            pop iy
 472+ 8A41 C9               ret
 473+ 8A42
 474+ 8A42               ; ---------- ----------
 475+ 8A42
 476+ 8A42 06 02        Bucle_2 ld b,2
 477+ 8A44 FD 7E 00     2 ld a,(iy)
 478+ 8A47 A6               and (hl)
 479+ 8A48 28 02            jr z,1F
 480+ 8A4A 1E 81            ld e,$81
 481+ 8A4C 23           1 inc hl
 482+ 8A4D FD 23            inc iy
 483+ 8A4F 10 F3            djnz 2B
 484+ 8A51 C9               ret
 485+ 8A52
 486+ 8A52              ; -------------------------------------------------------------------------------------------------------------
 487+ 8A52              ;
 488+ 8A52              ;   11/04/23
 489+ 8A52              ;
 490+ 8A52              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 491+ 8A52              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 492+ 8A52              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 493+ 8A52              ;
 494+ 8A52              ;   MODIFICA: HL,DE,BC,A y AF´.
 495+ 8A52
 496+ 8A52              Compara_coordenadas_X
 497+ 8A52
 498+ 8A52              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 499+ 8A52
 500+ 8A52              ; Preparamos registros:
 501+ 8A52
 502+ 8A52 21 A1 85         ld hl,Filas+6
 503+ 8A55 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8A56 23               inc hl
 505+ 8A57 23               inc hl
 506+ 8A58 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8A59 43               ld b,e
 508+ 8A5A 21 AF 85         ld hl,Filas+20
 509+ 8A5D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8A5E 21 F0 85         ld hl,Coordenadas_X_Entidad
 511+ 8A61 CD 43 8C         call Guarda_coordenadas_X
 512+ 8A64
 513+ 8A64              ; Preparamos registros:
 514+ 8A64
 515+ 8A64 21 7A 84         ld hl,Amadeus_db+6
 516+ 8A67 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8A68 23               inc hl
 518+ 8A69 23               inc hl
 519+ 8A6A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8A6B 7B               ld a,e
 521+ 8A6C 08               ex af,af'
 522+ 8A6D 21 88 84         ld hl,Amadeus_db+20
 523+ 8A70 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8A71 21 ED 85         ld hl,Coordenadas_X_Amadeus
 525+ 8A74 CD 43 8C         call Guarda_coordenadas_X
 526+ 8A77
 527+ 8A77              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8A77              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8A77
 530+ 8A77 04               inc b
 531+ 8A78 05               dec b
 532+ 8A79 28 04            jr z,1F
 533+ 8A7B 06 03            ld b,3
 534+ 8A7D 18 02            jr 2F
 535+ 8A7F 06 02        1 ld b,2
 536+ 8A81 08           2 ex af,af'
 537+ 8A82 3C               inc a
 538+ 8A83 3D               dec a
 539+ 8A84 28 04            jr z,5F
 540+ 8A86 0E 03            ld c,3
 541+ 8A88 18 02            jr 6F
 542+ 8A8A 0E 02        5 ld c,2
 543+ 8A8C 79           6 ld a,c
 544+ 8A8D 08               ex af,af'
 545+ 8A8E 11 F0 85         ld de,Coordenadas_X_Entidad
 546+ 8A91 1A           4 ld a,(de)
 547+ 8A92 21 ED 85         ld hl,Coordenadas_X_Amadeus
 548+ 8A95 BE           3 cp (hl)
 549+ 8A96 28 0B            jr z,7F
 550+ 8A98 23               inc hl
 551+ 8A99 0D               dec c
 552+ 8A9A 20 F9            jr nz,3B
 553+ 8A9C 13               inc de
 554+ 8A9D 08               ex af,af'
 555+ 8A9E 4F               ld c,a
 556+ 8A9F 08               ex af,af'
 557+ 8AA0 10 EF            djnz 4B
 558+ 8AA2 C9           8 ret
 559+ 8AA3 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 560+ 8AA5 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 561+ 8AA8              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 562+ 8AA8 21 EC 85         ld hl,Impacto2
 563+ 8AAB CB D6            set 2,(hl)
 564+ 8AAD 18 F3            jr 8B
 565+ 8AAF
 566+ 8AAF              ; -----------------------------------------------------------------------
 567+ 8AAF              ;
 568+ 8AAF              ;   11/04/23
 569+ 8AAF              ;
 570+ 8AAF
 571+ 8AAF              Detecta_colision_nave_entidad
 572+ 8AAF
 573+ 8AAF              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 574+ 8AAF
 575+ 8AAF 2A 9D 85         ld hl,(Posicion_actual)
 576+ 8AB2 CD B8 8E         call Calcula_puntero_de_impresion
 577+ 8AB5
 578+ 8AB5              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
 579+ 8AB5              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
 580+ 8AB5
 581+ 8AB5
 582+ 8AB5              ;    jr $
 583+ 8AB5
 584+ 8AB5 DD E5            push ix
 585+ 8AB7 E1               pop hl
 586+ 8AB8 E5               push hl
 587+ 8AB9
 588+ 8AB9              ; ----- ----- -----
 589+ 8AB9 1E 00            ld e,0                                        ; Indica impacto.
 590+ 8ABB 06 0F            ld b,15
 591+ 8ABD CD D5 8A     2 call Bucle_3                                    ; Comprobamos el 1er scanline.
 592+ 8AC0 7B               ld a,e
 593+ 8AC1 FE 05            cp 5
 594+ 8AC3 38 00            jr c,3F
 595+ 8AC5
 596+ 8AC5              ;    ld hl,Impacto2
 597+ 8AC5              ;    set 2,(hl)
 598+ 8AC5              ;    jr 1F
 599+ 8AC5
 600+ 8AC5 E1           3 pop hl
 601+ 8AC6 CD 53 8F         call NextScan
 602+ 8AC9 E5               push hl
 603+ 8ACA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 604+ 8ACB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 605+ 8ACD 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 606+ 8ACF 30 02            jr nc,1F
 607+ 8AD1              ;                                                  ; _ 2º scanline si esto es así.
 608+ 8AD1 10 EA            djnz 2B
 609+ 8AD3
 610+ 8AD3 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 611+ 8AD4 C9               ret
 612+ 8AD5
 613+ 8AD5               ; ---------- ----------
 614+ 8AD5
 615+ 8AD5 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 616+ 8AD6 3A 9C 85         ld a,(Columns)
 617+ 8AD9 47               ld b,a
 618+ 8ADA FD 7E 00     2 ld a,(iy)
 619+ 8ADD BE               cp (hl)
 620+ 8ADE 28 01            jr z,1F
 621+ 8AE0
 622+ 8AE0 1C               inc e
 623+ 8AE1
 624+ 8AE1 23           1 inc hl
 625+ 8AE2 FD 23            inc iy
 626+ 8AE4 10 F4            djnz 2B
 627+ 8AE6 C1               pop bc
 628+ 8AE7 C9               ret
 629+ 8AE8
 630+ 8AE8              ; -------------------------------------------------------------------------------------------------------------
 631+ 8AE8              ;
 632+ 8AE8              ;   13/03/23
 633+ 8AE8              ;
 634+ 8AE8              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 635+ 8AE8              ;
 636+ 8AE8              ;   DESTRUYE: HL,BC,DE y A.
 637+ 8AE8
 638+ 8AE8 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 639+ 8AEB 7E               ld a,(hl)
 640+ 8AEC A7               and a
 641+ 8AED C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 642+ 8AEE
 643+ 8AEE 44               ld b,h
 644+ 8AEF 4D               ld c,l
 645+ 8AF0 2A E5 85         ld hl,(Stack_snapshot_disparos)
 646+ 8AF3 E5               push hl
 647+ 8AF4 A7               and a
 648+ 8AF5 ED 42            sbc hl,bc
 649+ 8AF7 E5               push hl
 650+ 8AF8 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 651+ 8AF9
 652+ 8AF9 E1               pop hl
 653+ 8AFA 54               ld d,h
 654+ 8AFB 5D               ld e,l
 655+ 8AFC 1B               dec de
 656+ 8AFD ED B8            lddr                                                ; Limpiamos.
 657+ 8AFF
 658+ 8AFF 21 60 70         ld hl,Album_de_fotos_disparos
 659+ 8B02 22 E5 85         ld (Stack_snapshot_disparos),hl
 660+ 8B05
 661+ 8B05 C9               ret
 662+ 8B06
 663+ 8B06              ; -------------------------------------------------------------------------------------------------------------
 664+ 8B06              ;
 665+ 8B06              ;   28/03/23
 666+ 8B06              ;
 667+ 8B06
 668+ 8B06 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 669+ 8B09 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 670+ 8B0C
 671+ 8B0C CD AC 87     2 call Extrae_address
 672+ 8B0F 7E               ld a,(hl)
 673+ 8B10 A7               and a
 674+ 8B11 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 675+ 8B13
 676+ 8B13              ; ----- ----- ----- ----- ----- -----
 677+ 8B13
 678+ 8B13 C5               push bc
 679+ 8B14 CD BE 8B         call foto_disparo_a_borrar
 680+ 8B17
 681+ 8B17              ; Existe colisión con este disparo???
 682+ 8B17
 683+ 8B17 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 684+ 8B18 7E               ld a,(hl)
 685+ 8B19 2B               dec hl
 686+ 8B1A E6 01            and 1
 687+ 8B1C 28 0C            jr z,9F
 688+ 8B1E
 689+ 8B1E              ; Elimino el disparo de la base de datos.
 690+ 8B1E
 691+ 8B1E E5               push hl
 692+ 8B1F CD 38 8C         call Elimina_disparo_de_base_de_datos
 693+ 8B22 21 EC 85         ld hl,Impacto2
 694+ 8B25 CB C6            set 0,(hl)
 695+ 8B27 E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 696+ 8B28 18 06            jr 11F
 697+ 8B2A
 698+ 8B2A CD E7 8B     9 call Mueve_disparo
 699+ 8B2D CD BE 8B         call foto_disparo_a_borrar
 700+ 8B30
 701+ 8B30 C1           11 pop bc
 702+ 8B31
 703+ 8B31 18 04            jr 7F
 704+ 8B33
 705+ 8B33              ; ----- ----- ----- ----- ----- -----
 706+ 8B33
 707+ 8B33 ED 42        1 sbc hl,bc
 708+ 8B35 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 709+ 8B37
 710+ 8B37 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 711+ 8B3A 23               inc hl
 712+ 8B3B 23               inc hl
 713+ 8B3C 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 714+ 8B3F 18 CB            jr 2B
 715+ 8B41
 716+ 8B41 CD 75 87     3 call Inicia_Puntero_Disparo_Amadeus
 717+ 8B44
 718+ 8B44 01 66 84         ld bc,Disparo_11
 719+ 8B47 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 720+ 8B4A
 721+ 8B4A CD AC 87     5 call Extrae_address
 722+ 8B4D 7E               ld a,(hl)
 723+ 8B4E A7               and a
 724+ 8B4F 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 725+ 8B51
 726+ 8B51              ; ----- ----- ----- ----- ----- -----
 727+ 8B51
 728+ 8B51 C5               push bc
 729+ 8B52 CD BE 8B         call foto_disparo_a_borrar
 730+ 8B55
 731+ 8B55              ; Existe colisión con este disparo???
 732+ 8B55
 733+ 8B55 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 734+ 8B56 7E               ld a,(hl)
 735+ 8B57 2B               dec hl
 736+ 8B58 E6 01            and 1
 737+ 8B5A 28 47            jr z,10F
 738+ 8B5C
 739+ 8B5C              ; La colisión se produce con Amadeus???
 740+ 8B5C              ; Amadeus siempre tiene (Coordenada_y)="$16".
 741+ 8B5C
 742+ 8B5C E5               push hl
 743+ 8B5D
 744+ 8B5D 06 04            ld b,4
 745+ 8B5F 23           16 inc hl
 746+ 8B60 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 747+ 8B62
 748+ 8B62 CD AC 87         call Extrae_address
 749+ 8B65 CD 6A 95         call Genera_coordenadas_disparo
 750+ 8B68 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 751+ 8B69 FE 16            cp $16
 752+ 8B6B 38 24            jr c,15F
 753+ 8B6D
 754+ 8B6D              ; (Colisiones en filas 16 y 17).
 755+ 8B6D
 756+ 8B6D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 757+ 8B6E
 758+ 8B6E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 759+ 8B6E
 760+ 8B6E 21 7A 84         ld hl,Amadeus_db+6
 761+ 8B71 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 762+ 8B72 23               inc hl
 763+ 8B73 23               inc hl
 764+ 8B74 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 765+ 8B75 21 88 84         ld hl,Amadeus_db+20
 766+ 8B78 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 767+ 8B79 21 ED 85         ld hl,Coordenadas_X_Amadeus
 768+ 8B7C
 769+ 8B7C CD 43 8C         call Guarda_coordenadas_X
 770+ 8B7F
 771+ 8B7F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 772+ 8B80
 773+ 8B80              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 774+ 8B80
 775+ 8B80 21 ED 85         ld hl,Coordenadas_X_Amadeus
 776+ 8B83 7E               ld a,(hl)
 777+ 8B84 BA           18 cp d
 778+ 8B85 20 03            jr nz,17F
 779+ 8B87
 780+ 8B87              ; Colisión Amadeus !!!!!!!!!!
 781+ 8B87
 782+ 8B87 E1               pop hl
 783+ 8B88 18 0D            jr 14F
 784+ 8B8A
 785+ 8B8A 23           17 inc hl
 786+ 8B8B 7E               ld a,(hl)
 787+ 8B8C
 788+ 8B8C A7               and a
 789+ 8B8D 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
 790+ 8B8F 18 F3            jr 18B
 791+ 8B91
 792+ 8B91              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 793+ 8B91              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 794+ 8B91
 795+ 8B91 E1           15  pop hl
 796+ 8B92 23               inc hl
 797+ 8B93 35               dec (hl)
 798+ 8B94 2B               dec hl
 799+ 8B95 18 0C            jr 10F
 800+ 8B97
 801+ 8B97              ; -----------------------debug
 802+ 8B97
 803+ 8B97              ; Elimino el disparo de la base de datos.
 804+ 8B97
 805+ 8B97 E5           14 push hl
 806+ 8B98 CD 38 8C         call Elimina_disparo_de_base_de_datos
 807+ 8B9B 21 EC 85         ld hl,Impacto2
 808+ 8B9E CB CE            set 1,(hl)
 809+ 8BA0 E1               pop hl
 810+ 8BA1 18 06            jr 12F
 811+ 8BA3
 812+ 8BA3 CD E7 8B     10 call Mueve_disparo
 813+ 8BA6 CD BE 8B         call foto_disparo_a_borrar
 814+ 8BA9 C1           12 pop bc
 815+ 8BAA
 816+ 8BAA 18 04            jr 8F
 817+ 8BAC
 818+ 8BAC              ; ----- ----- ----- ----- ----- -----
 819+ 8BAC
 820+ 8BAC ED 42        4 sbc hl,bc
 821+ 8BAE 28 0A            jr z,6F
 822+ 8BB0
 823+ 8BB0 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 824+ 8BB3 23               inc hl
 825+ 8BB4 23               inc hl
 826+ 8BB5 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 827+ 8BB8 18 90            jr 5B
 828+ 8BBA
 829+ 8BBA CD 6E 87     6 call Inicia_Puntero_Disparo_Entidades
 830+ 8BBD C9               ret
 831+ 8BBE
 832+ 8BBE              ; ------------------------------------------------------------------
 833+ 8BBE
 834+ 8BBE              foto_disparo_a_borrar
 835+ 8BBE
 836+ 8BBE 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 837+ 8BBF A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 838+ 8BC0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 839+ 8BC1
 840+ 8BC1 E5               push hl
 841+ 8BC2 23               inc hl
 842+ 8BC3 23               inc hl
 843+ 8BC4 ED 73 DF 85      ld (Stack),sp
 844+ 8BC8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 845+ 8BC9 FD E1            pop iy
 846+ 8BCB DD E1            pop ix
 847+ 8BCD E1               pop hl
 848+ 8BCE ED 7B DF 85      ld sp,(Stack)
 849+ 8BD2 3A D6 85         ld a,(Ctrl_1)
 850+ 8BD5 CB C7            set 0,a
 851+ 8BD7 32 D6 85         ld (Ctrl_1),a
 852+ 8BDA CD A0 7F         call Guarda_foto_registros
 853+ 8BDD 3A D6 85         ld a,(Ctrl_1)
 854+ 8BE0 CB 87            res 0,a
 855+ 8BE2 32 D6 85         ld (Ctrl_1),a
 856+ 8BE5 E1               pop hl
 857+ 8BE6 C9               ret
 858+ 8BE7
 859+ 8BE7 E5           Mueve_disparo push hl
 860+ 8BE8 7E               ld a,(hl)
 861+ 8BE9 06 04            ld b,4
 862+ 8BEB 23           1 inc hl
 863+ 8BEC 10 FD            djnz 1B
 864+ 8BEE
 865+ 8BEE              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 866+ 8BEE
 867+ 8BEE CD AC 87         call Extrae_address
 868+ 8BF1
 869+ 8BF1 E6 01            and 1
 870+ 8BF3 28 2A            jr z,2F
 871+ 8BF5
 872+ 8BF5              ; Disparo hacia arriba, (Amadeus).
 873+ 8BF5
 874+ 8BF5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 875+ 8BF5              ; _ de la dificultad.
 876+ 8BF5
 877+ 8BF5 CD 62 8F         call PreviousScan
 878+ 8BF8 CD 62 8F         call PreviousScan
 879+ 8BFB CD 62 8F         call PreviousScan
 880+ 8BFE
 881+ 8BFE              ; Detecta si el disparo de Amadeus sale de pantalla:
 882+ 8BFE
 883+ 8BFE 7C               ld a,h
 884+ 8BFF FE 40            cp $40
 885+ 8C01 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 886+ 8C03
 887+ 8C03              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 888+ 8C03
 889+ 8C03 EB               ex de,hl
 890+ 8C04 06 04            ld b,4
 891+ 8C06 2B           6 dec hl
 892+ 8C07 10 FD            djnz 6B
 893+ 8C09
 894+ 8C09 CD 38 8C         call Elimina_disparo_de_base_de_datos
 895+ 8C0C
 896+ 8C0C 18 0C            jr 4F
 897+ 8C0E
 898+ 8C0E              ; Se ha desplazado la bala, compruebo colisión.
 899+ 8C0E
 900+ 8C0E D5           3 push de
 901+ 8C0F C5               push bc
 902+ 8C10 CD 26 8A         call Comprueba_Colision
 903+ 8C13 78               ld a,b
 904+ 8C14 C1               pop bc
 905+ 8C15 D1               pop de
 906+ 8C16
 907+ 8C16 EB               ex de,hl
 908+ 8C17
 909+ 8C17 73               ld (hl),e
 910+ 8C18 23               inc hl
 911+ 8C19 72               ld (hl),d
 912+ 8C1A
 913+ 8C1A E1           4 pop hl
 914+ 8C1B 23               inc hl
 915+ 8C1C 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 916+ 8C1D 2B               dec hl
 917+ 8C1E C9               ret
 918+ 8C1F
 919+ 8C1F              ; Disparo hacia abajo, (Entidad).
 920+ 8C1F
 921+ 8C1F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 922+ 8C1F              ; _ de la dificultad.
 923+ 8C1F
 924+ 8C1F CD 53 8F     2 call NextScan
 925+ 8C22 CD 53 8F         call NextScan
 926+ 8C25 CD 53 8F         call NextScan
 927+ 8C28
 928+ 8C28              ; Detecta si el disparo de la entidad sale de la pantalla.
 929+ 8C28
 930+ 8C28 7C               ld a,h
 931+ 8C29 FE 58            cp $58
 932+ 8C2B 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 933+ 8C2D
 934+ 8C2D EB               ex de,hl
 935+ 8C2E 06 04            ld b,4
 936+ 8C30 2B           5 dec hl
 937+ 8C31 10 FD            djnz 5B
 938+ 8C33
 939+ 8C33 CD 38 8C         call Elimina_disparo_de_base_de_datos
 940+ 8C36
 941+ 8C36 18 E2            jr 4B
 942+ 8C38
 943+ 8C38              ; HL apunta al primer byte de la base de datos del disparo.
 944+ 8C38 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 945+ 8C3B AF               xor a
 946+ 8C3C 77               ld (hl),a
 947+ 8C3D 54               ld d,h
 948+ 8C3E 5D               ld e,l
 949+ 8C3F 13               inc de
 950+ 8C40 ED B0            ldir
 951+ 8C42 C9               ret
 952+ 8C43
 953+ 8C43              ; -----------------------------------------------------------------
 954+ 8C43              ;
 955+ 8C43              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 956+ 8C43              ;
 957+ 8C43              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 958+ 8C43              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 959+ 8C43              ;
 960+ 8C43              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 961+ 8C43              ;
 962+ 8C43              ;   INPUTS:
 963+ 8C43              ;
 964+ 8C43              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 965+ 8C43              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 966+ 8C43              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 967+ 8C43
 968+ 8C43              ;   MODIFICA: A, HL, DE y C
 969+ 8C43
 970+ 8C43 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 971+ 8C44 79               ld a,c
 972+ 8C45 E6 01            and 1
 973+ 8C47 20 03            jr nz,1F
 974+ 8C49 14               inc d
 975+ 8C4A 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 976+ 8C4C
 977+ 8C4C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 978+ 8C4C              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 979+ 8C4C
 980+ 8C4C 15           1 dec d
 981+ 8C4D 23           2 inc hl
 982+ 8C4E 72               ld (hl),d
 983+ 8C4F
 984+ 8C4F 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 985+ 8C50 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 986+ 8C51 C8               ret z
 987+ 8C52
 988+ 8C52 AF               xor a
 989+ 8C53 5F               ld e,a
 990+ 8C54 18 ED            jr Guarda_coordenadas_X
 991+ 8C56
 992+ 8C56              ; -----------------------------------------------------------------
 993+ 8C56              ;
 994+ 8C56              ;   12/04/23
 995+ 8C56              ;
 996+ 8C56
 997+ 8C56 3A EC 85     Selector_de_impactos ld a,(Impacto2)
 998+ 8C59 FE 04            cp 4
 999+ 8C5B 20 FE            jr nz,$
1000+ 8C5D CD AF 8A         call Detecta_colision_nave_entidad
1001+ 8C60
1002+ 8C60 7B               ld a,e
1003+ 8C61 C8               ret z
1004+ 8C62 FE 05            cp 5
1005+ 8C64 D8               ret c
1006+ 8C65
1007+ 8C65 21 B4 85         ld hl,Impacto
1008+ 8C68 36 01            ld (hl),1
1009+ 8C6A 18 FE            jr $
1010+ 8C6C
1011+ 8C6C C9               ret
# file closed: Disparo.asm
 888  8C6D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C6D              ; ******************************************************************************************************************************************************************************************
   2+ 8C6D              ;
   3+ 8C6D              ; 01/23
   4+ 8C6D              ;
   5+ 8C6D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C6D
   7+ 8C6D CD 47 8F     Draw call Prepara_draw
   8+ 8C70 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C71 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C72 28 05        	jr z,2F
  11+ 8C74
  12+ 8C74 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C77 18 0C        	jr 1F
  14+ 8C79 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C7C 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C7F CD 0E 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8C82              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8C82 CD 8D 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8C85 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8C88 CB 6F        	bit 5,a
  21+ 8C8A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8C8C
  23+ 8C8C CD A4 8C     	call Comprueba_limite_horizontal
  24+ 8C8F CD 34 8D     	call Comprueba_limite_vertical
  25+ 8C92
  26+ 8C92              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8C92
  28+ 8C92 CD 81 8E     3 call calcula_CColumnass
  29+ 8C95 CD B8 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8C98 CD 0D 8F     	call Define_rutina_de_impresion
  31+ 8C9B
  32+ 8C9B 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8C9E CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CA0 32 C9 85     	ld (Ctrl_0),a
  35+ 8CA3
  36+ 8CA3 C9           	ret
  37+ 8CA4
  38+ 8CA4              ; *******************************************************************************************************************************************************************************************
  39+ 8CA4              ;	21/01/23
  40+ 8CA4              ;
  41+ 8CA4              ; 	Comprueba_limite_horizontal.
  42+ 8CA4              ;
  43+ 8CA4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CA4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CA4              ;
  46+ 8CA4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CA4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CA4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CA4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CA4
  51+ 8CA4
  52+ 8CA4
  53+ 8CA4 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CA7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CA9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CAB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CAD 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CB0 18 09            jr 6F
  59+ 8CB2 CB 5F        1 bit 3,a
  60+ 8CB4 28 0A            jr z,2F
  61+ 8CB6 E6 F7            and $f7
  62+ 8CB8 32 C9 85         ld (Ctrl_0),a
  63+ 8CBB CD 0E 8E     6 call Inicializacion
  64+ 8CBE 18 5B            jr 5F
  65+ 8CC0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CC1
  67+ 8CC1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CC1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CC1
  70+ 8CC1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CC2 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CC5 CD 13 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CC8 67           	ld h,a
  74+ 8CC9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CCA CD 13 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CCD 67           	ld h,a
  77+ 8CCE A7           	and a
  78+ 8CCF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CD1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CD2 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CD5 FE 02        	cp 2
  82+ 8CD7 38 1E        	jr c,3F
  83+ 8CD9 28 1C        	jr z,3F
  84+ 8CDB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CDC 28 23            jr z,7F
  86+ 8CDE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CE0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8CE2 E1           	pop hl
  89+ 8CE3
  90+ 8CE3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8CE3              ; _para indicar con E="2" en caso necesario.
  92+ 8CE3
  93+ 8CE3 E5               push hl
  94+ 8CE4 C5               push bc
  95+ 8CE5 CD 13 92     	call calcula_tercio
  96+ 8CE8 FE 01        	cp 1
  97+ 8CEA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8CEC CD 1C 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8CEF 28 26            jr z,9F
 100+ 8CF1 38 24            jr c,9F
 101+ 8CF3 1E 00        11 ld e,0
 102+ 8CF5 18 22            jr 8F
 103+ 8CF7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8CF8 28 07        	jr z, 7F
 105+ 8CFA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8CFC 1E 00         	ld e,0
 107+ 8CFE E1           	pop hl
 108+ 8CFF 18 04        	jr 4F
 109+ 8D01 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D03 18 15            jr 10F
 111+ 8D05
 112+ 8D05              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D05              ; _para indicar con E="2" en caso necesario.
 114+ 8D05
 115+ 8D05 E5           4 push hl
 116+ 8D06 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D07 CD 13 92     	call calcula_tercio
 118+ 8D0A FE 01        	cp 1
 119+ 8D0C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D0E CD 1C 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D11 28 04            jr z,9F
 122+ 8D13 30 02            jr nc,9F
 123+ 8D15 18 02        	jr 8F
 124+ 8D17 1E 02        9 ld e,2
 125+ 8D19 C1           8 pop bc
 126+ 8D1A E1           10 pop hl
 127+ 8D1B C9           5 ret
 128+ 8D1C
 129+ 8D1C              ; --------------------
 130+ 8D1C              ;
 131+ 8D1C              ; 25/08/22
 132+ 8D1C
 133+ 8D1C CD 13 92     Comprueba_centro call calcula_tercio
 134+ 8D1F 67               ld h,a
 135+ 8D20 08           	ex af,af
 136+ 8D21 FE 02        	cp 2
 137+ 8D23 38 07        	jr c,1F
 138+ 8D25 28 05        	jr z,1F
 139+ 8D27 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D2A 18 03        	jr 2F
 141+ 8D2C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D2F 08           2 ex af,af
 143+ 8D30 A7               and a
 144+ 8D31 ED 42            sbc hl,bc
 145+ 8D33 C9               ret
 146+ 8D34
 147+ 8D34              ; *********************************************************************************************************************************************************************************************
 148+ 8D34              ;
 149+ 8D34              ;   16/8/22
 150+ 8D34              ;
 151+ 8D34              ;	Comprueba_limite_vertical
 152+ 8D34              ;
 153+ 8D34              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D34              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D34              ;
 156+ 8D34
 157+ 8D34 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D37 7D           	ld a,l
 159+ 8D38 E6 1F        	and $1F
 160+ 8D3A 57           	ld d,a
 161+ 8D3B 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D3E BA           	cp d 											; Límite - Posición.
 163+ 8D3F 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D40 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D43 CB 47        	bit 0,a
 166+ 8D45 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D47
 168+ 8D47              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D47
 170+ 8D47 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D48 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D4A
 173+ 8D4A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D4A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D4A
 176+ 8D4A 3A A1 85         ld a,(Coordenada_X)
 177+ 8D4D 16 0F            ld d,Centro_izquierda
 178+ 8D4F A7               and a
 179+ 8D50 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D51 28 1E            jr z,3F
 181+ 8D53 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D55              ;                                                    ; _salimos sin modificar nada.
 183+ 8D55 18 0E            jr 2F
 184+ 8D57 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D58 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D5A
 187+ 8D5A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D5A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D5A
 190+ 8D5A 3A A1 85         ld a,(Coordenada_X)
 191+ 8D5D 16 10            ld d,Centro_derecha
 192+ 8D5F A7               and a
 193+ 8D60 92               sub d
 194+ 8D61 28 0E            jr z,3F
 195+ 8D63 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D65              ;                                                    ; _salimos sin modificar nada.
 197+ 8D65 CB 43        2 bit 0,e
 198+ 8D67 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D69 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D6A CD FE 8D         call Modificaccionne
 201+ 8D6D C1           	pop bc
 202+ 8D6E CD 0E 8E         call Inicializacion
 203+ 8D71 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D72
 205+ 8D72              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D72
 207+ 8D72 C5           4 push bc
 208+ 8D73 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D76 0A           	ld a,(bc)
 210+ 8D77 3D           	dec a
 211+ 8D78 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D79 7D           	ld a,l
 213+ 8D7A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D7B CB 47        	bit 0,a
 215+ 8D7D 28 03        	jr z,5F
 216+ 8D7F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D80 18 2E        	jr 7F
 218+ 8D82
 219+ 8D82              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8D82
 221+ 8D82 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8D83 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8D84 3A C9 85     	ld a,(Ctrl_0)
 224+ 8D87 CB 4F        	bit 1,a
 225+ 8D89 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8D8B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8D8C
 228+ 8D8C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8D8C
 230+ 8D8C 1C               inc e
 231+ 8D8D 1D               dec e
 232+ 8D8E 20 07            jr nz,12F
 233+ 8D90 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8D91 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8D92 22 9D 85     	ld (Posicion_actual),hl
 236+ 8D95 18 44        13 jr 9F
 237+ 8D97 CB 43        12 bit 0,e
 238+ 8D99 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8D9B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8D9B C1           	pop bc
 241+ 8D9C 18 D3        	jr 3B
 242+ 8D9E 80           14 add b
 243+ 8D9F 6F               ld l,a
 244+ 8DA0 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DA3 CD FE 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DA6 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DA8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DAA 32 C9 85         ld (Ctrl_0),a
 249+ 8DAD F1           	pop af
 250+ 8DAE 18 2B        	jr 9F
 251+ 8DB0
 252+ 8DB0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DB0
 254+ 8DB0 F5           7 push af
 255+ 8DB1 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DB4 CB 47        	bit 0,a
 257+ 8DB6 20 1D        	jr nz,8F
 258+ 8DB8 F1           	pop af
 259+ 8DB9
 260+ 8DB9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DB9
 262+ 8DB9 1C           	inc e
 263+ 8DBA 1D               dec e
 264+ 8DBB 20 07            jr nz,10F
 265+ 8DBD 90           	sub b
 266+ 8DBE 6F               ld l,a
 267+ 8DBF 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DC2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DC4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DC4 CB 43        10 bit 0,e
 271+ 8DC6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DC8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DC8 C1           	pop bc
 274+ 8DC9 18 A6        	jr 3B
 275+ 8DCB 90           16 sub b
 276+ 8DCC 6F               ld l,a
 277+ 8DCD 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DD0 CD FE 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DD3 18 06            jr 9F
 280+ 8DD5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DD7 32 C9 85         ld (Ctrl_0),a
 282+ 8DDA F1           	pop af
 283+ 8DDB C1           9 pop bc
 284+ 8DDC 1E 00        	ld e,0
 285+ 8DDE CD 0E 8E         call Inicializacion
 286+ 8DE1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8DE2 08           	ex af,af
 288+ 8DE3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8DE4 18 8B            jr 3B
 290+ 8DE6
 291+ 8DE6              ; --------------------
 292+ 8DE6
 293+ 8DE6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8DE8 CD 62 8F     1 call PreviousScan
 295+ 8DEB 10 FB            djnz 1B
 296+ 8DED 22 9D 85     	ld (Posicion_actual),hl
 297+ 8DF0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8DF1 C9           	ret
 299+ 8DF2
 300+ 8DF2              ; --------------------
 301+ 8DF2
 302+ 8DF2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8DF4 CD 53 8F     1 call NextScan
 304+ 8DF7 10 FB            djnz 1B
 305+ 8DF9 22 9D 85     	ld (Posicion_actual),hl
 306+ 8DFC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8DFD C9           	ret
 308+ 8DFE
 309+ 8DFE              ; --------------------
 310+ 8DFE              ;
 311+ 8DFE              ;	22/01/23
 312+ 8DFE              ;
 313+ 8DFE              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8DFE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8DFE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8DFE
 317+ 8DFE
 318+ 8DFE              Modificaccionne
 319+ 8DFE
 320+ 8DFE 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E01 FE 02        	cp 2
 322+ 8E03 CC E6 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E06 DC E6 8D         call c,Modifica_Pos_actual
 324+ 8E09 C8           	ret z
 325+ 8E0A CD F2 8D         call Modifica_Pos_actual2
 326+ 8E0D C9               ret
 327+ 8E0E
 328+ 8E0E              ; *************************************************************************************************************************************************************************************************
 329+ 8E0E              ;
 330+ 8E0E              ;	13/8/22
 331+ 8E0E              ;
 332+ 8E0E              ;	Inicializacion
 333+ 8E0E              ;
 334+ 8E0E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E0E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E0E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E0E              ;
 338+ 8E0E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E0E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E0E              ;	_ desaparece/aparece.
 341+ 8E0E
 342+ 8E0E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E0E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E0E              ;
 345+ 8E0E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E0E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E0E              ; 		   [E] ="0"
 348+ 8E0E
 349+ 8E0E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E0E
 351+ 8E0E CD 13 92     Inicializacion call calcula_tercio
 352+ 8E11 28 36        	jr z,primit
 353+ 8E13 E6 02        	and 2
 354+ 8E15 20 07        	jr nz,segmit
 355+ 8E17 7D           	ld a,l
 356+ 8E18 FE 7F        	cp $7f
 357+ 8E1A 38 2D        	jr c,primit
 358+ 8E1C 28 2B        	jr z,primit
 359+ 8E1E CD 7B 8E     segmit call column
 360+ 8E21 38 13        	jr c,tercuad
 361+ 8E23 3E 04        cuarcuad ld a,4
 362+ 8E25 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E28 21 20 48     	ld hl,$4820
 364+ 8E2B 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E2E 21 D5 85     	ld hl,Limite_vertical
 366+ 8E31 36 0D        	ld (hl),$0d
 367+ 8E33 08           	ex af,af
 368+ 8E34 18 3C        	jr 1F
 369+ 8E36              tercuad
 370+ 8E36 3E 03        	ld a,3
 371+ 8E38 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E3B 21 20 48     	ld hl,$4820
 373+ 8E3E 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E41 21 D5 85     	ld hl,Limite_vertical
 375+ 8E44 36 12        	ld (hl),$12
 376+ 8E46 08           	ex af,af
 377+ 8E47 18 29        	jr 1F
 378+ 8E49 CD 7B 8E     primit call column
 379+ 8E4C 38 13        	jr c, primcuad
 380+ 8E4E              segcuad
 381+ 8E4E 3E 02        	ld a,2
 382+ 8E50 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E53 21 C0 4F     	ld hl,$4fc0
 384+ 8E56 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E59 21 D5 85     	ld hl,Limite_vertical
 386+ 8E5C 36 0D        	ld (hl),$0d
 387+ 8E5E 08           	ex af,af
 388+ 8E5F 18 11        	jr 1F
 389+ 8E61              primcuad
 390+ 8E61 3E 01        	ld a,1
 391+ 8E63 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E66 21 C0 4F     	ld hl,$4fc0
 393+ 8E69 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E6C 21 D5 85     	ld hl,Limite_vertical
 395+ 8E6F 36 12        	ld (hl),$12
 396+ 8E71 08           	ex af,af
 397+ 8E72 CD 3F 95     1 call Genera_coordenadas
 398+ 8E75 21 C9 85     	ld hl,Ctrl_0
 399+ 8E78 CB EE        	set 5,(hl)
 400+ 8E7A C9           	ret
 401+ 8E7B
 402+ 8E7B              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E7B
 404+ 8E7B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E7B              ;
 406+ 8E7B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E7B
 408+ 8E7B 7D           column ld a,l
 409+ 8E7C E6 1F        	and $1f
 410+ 8E7E FE 10         	cp $10
 411+ 8E80 C9            	ret
 412+ 8E81
 413+ 8E81              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E81              ;
 415+ 8E81              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E81              ;
 417+ 8E81              ; 14/12/22
 418+ 8E81              ;
 419+ 8E81              ;	Modifica: A y BC.
 420+ 8E81
 421+ 8E81 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8E84 E6 01        	and 1
 423+ 8E86 28 17        	jr z,1F
 424+ 8E88
 425+ 8E88              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8E88
 427+ 8E88 3A A1 85     	ld a,(Coordenada_X)
 428+ 8E8B 47           	ld b,a
 429+ 8E8C 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8E8D 79           	ld a,c
 431+ 8E8E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8E8F 38 08        	jr c,2F
 433+ 8E91 47           	ld b,a
 434+ 8E92 79           	ld a,c
 435+ 8E93 90           	sub b
 436+ 8E94 32 D2 85     	ld (Columnas),a
 437+ 8E97 18 1B        	jr 4F
 438+ 8E99 79           2 ld a,c
 439+ 8E9A 32 D2 85     	ld (Columnas),a
 440+ 8E9D 18 15        	jr 4F
 441+ 8E9F
 442+ 8E9F              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8E9F
 444+ 8E9F 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EA2 81           	add c
 446+ 8EA3 3D           	dec a
 447+ 8EA4 D6 1F        	sub $1f
 448+ 8EA6 38 08        	jr c,3F
 449+ 8EA8 47           	ld b,a
 450+ 8EA9 79           	ld a,c
 451+ 8EAA 90           	sub b
 452+ 8EAB 32 D2 85     	ld (Columnas),a
 453+ 8EAE 18 04        	jr 4F
 454+ 8EB0 79           3 ld a,c
 455+ 8EB1 32 D2 85     	ld (Columnas),a
 456+ 8EB4 D9           4 exx
 457+ 8EB5 4F           	ld c,a
 458+ 8EB6 D9           	exx
 459+ 8EB7 C9            ret
 460+ 8EB8
 461+ 8EB8              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8EB8              ;
 463+ 8EB8              ; 7/1/23
 464+ 8EB8              ;
 465+ 8EB8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8EB8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8EB8              ;
 468+ 8EB8              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8EB8              ;	DESTRUYE: HL,B Y A.
 470+ 8EB8
 471+ 8EB8 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8EBB FE 02        	cp 2
 473+ 8EBD 38 18        	jr c,1F
 474+ 8EBF 28 16        	jr z,1F
 475+ 8EC1 E6 01        	and 1
 476+ 8EC3 28 0D        	jr z,3F
 477+ 8EC5
 478+ 8EC5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8EC5
 480+ 8EC5 CD 01 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8EC8
 482+ 8EC8 7D           9 ld a,l
 483+ 8EC9 E6 1F        	and $1f
 484+ 8ECB 28 2A        	jr z,7F
 485+ 8ECD 2B           	dec hl
 486+ 8ECE 10 F8        	djnz 9B
 487+ 8ED0 18 25        	jr 7F
 488+ 8ED2
 489+ 8ED2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8ED2
 491+ 8ED2 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8ED5 18 20        	jr 7F
 493+ 8ED7
 494+ 8ED7 28 14        1 jr z,2F
 495+ 8ED9
 496+ 8ED9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8ED9
 498+ 8ED9 CD 01 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EDC 7D           4 ld a,l
 500+ 8EDD E6 1F        	and $1f
 501+ 8EDF 28 03        	jr z,6F
 502+ 8EE1 2B           	dec hl
 503+ 8EE2 10 F8        	djnz 4B
 504+ 8EE4 06 0F        6 ld b,15
 505+ 8EE6 CD 62 8F     5 call PreviousScan
 506+ 8EE9 10 FB        	djnz 5B
 507+ 8EEB 18 0A        	jr 7F
 508+ 8EED
 509+ 8EED              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8EED
 511+ 8EED CD 01 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8EF0 06 0F        	ld b,15
 513+ 8EF2 CD 62 8F     8 call PreviousScan
 514+ 8EF5 10 FB        	djnz 8B
 515+ 8EF7
 516+ 8EF7 E5           7 push hl
 517+ 8EF8 DD E1        	pop ix
 518+ 8EFA
 519+ 8EFA 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8EFD E5           	push hl
 521+ 8EFE FD E1        	pop iy
 522+ 8F00
 523+ 8F00 C9           	ret
 524+ 8F01
 525+ 8F01              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F01              ;
 527+ 8F01              ;	2/1/23
 528+ 8F01              ;
 529+ 8F01              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F01              ;
 531+ 8F01              ;	Tras esta rutina tenemos:
 532+ 8F01              ;
 533+ 8F01              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F01              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F01              ;
 536+ 8F01              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F01
 538+ 8F01 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F04 3A D2 85     	ld a,(Columnas)
 540+ 8F07 3D           	dec a
 541+ 8F08 20 01        	jr nz,1F
 542+ 8F0A 3C           	inc a
 543+ 8F0B 47           1 ld b,a
 544+ 8F0C C9           	ret
 545+ 8F0D
 546+ 8F0D              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F0D              ;
 548+ 8F0D              ;	3/1/23
 549+ 8F0D              ;
 550+ 8F0D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F0D              ;
 552+ 8F0D              ;	Destruye: A,B,HL y DE.
 553+ 8F0D
 554+ 8F0D              Define_rutina_de_impresion
 555+ 8F0D
 556+ 8F0D 3A 9C 85     	ld a,(Columns)
 557+ 8F10 47           	ld b,a
 558+ 8F11 3A D2 85     	ld a,(Columnas)
 559+ 8F14 B8           	cp b
 560+ 8F15 20 0D        	jr nz,2f
 561+ 8F17
 562+ 8F17              ;	La entidad se imprime entera.
 563+ 8F17
 564+ 8F17 21 E3 8F     	ld hl, Indice_entidades_completas
 565+ 8F1A E6 01        	and 1
 566+ 8F1C 28 02        	jr z,1F
 567+ 8F1E
 568+ 8F1E 23           	inc hl
 569+ 8F1F 23           	inc hl
 570+ 8F20
 571+ 8F20 CD AC 87     1 call Extrae_address
 572+ 8F23 C9           	ret		;	ret
 573+ 8F24
 574+ 8F24              ;	La entidad no se imprime entera en pantalla.
 575+ 8F24
 576+ 8F24 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F27 E6 01        	and 1
 578+ 8F29 28 17        	jr z,3F
 579+ 8F2B
 580+ 8F2B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F2B
 582+ 8F2B 21 E7 8F     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F2E 3A 9C 85     4 ld a,(Columns)
 584+ 8F31 E6 01        	and 1
 585+ 8F33 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F35
 587+ 8F35 23           	inc hl
 588+ 8F36 23           	inc hl
 589+ 8F37
 590+ 8F37 3A D2 85     	ld a,(Columnas)
 591+ 8F3A E6 01        	and 1
 592+ 8F3C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F3E
 594+ 8F3E 23           	inc hl
 595+ 8F3F 23           	inc hl
 596+ 8F40
 597+ 8F40 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F42
 599+ 8F42 21 ED 8F     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F45 18 E7        	jr 4B
 601+ 8F47
 602+ 8F47              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F47              ;
 604+ 8F47              ;	Prepara_draw
 605+ 8F47              ;
 606+ 8F47              ;	Es una rutina de carga.
 607+ 8F47              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F47              ;
 609+ 8F47              ;	FUNCIONAMIENTO:
 610+ 8F47              ;
 611+ 8F47              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F47              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F47              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F47              ;
 615+ 8F47              ;	DESTRUYE:
 616+ 8F47              ;
 617+ 8F47              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F47
 619+ 8F47 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F4A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F4B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F4C 4E           	ld c,(hl)
 623+ 8F4D 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F50 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F52 C9           	ret
 626+ 8F53
 627+ 8F53              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F53              ;
 629+ 8F53              ;	5/08/22
 630+ 8F53              ;
 631+ 8F53              ;   NextScan.
 632+ 8F53              ;
 633+ 8F53              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F53              ;
 635+ 8F53              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F53              ;
 637+ 8F53              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F53              ;
 639+ 8F53              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F53              ;
 641+ 8F53              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F53              ;
 643+ 8F53
 644+ 8F53 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F54 7C               ld a,h
 646+ 8F55 E6 07            and 7
 647+ 8F57 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F58
 649+ 8F58 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F59 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F5B 6F               ld l,a
 652+ 8F5C D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F5D
 654+ 8F5D 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F5E D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F60 67               ld h,a
 657+ 8F61 C9               ret
 658+ 8F62
 659+ 8F62              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F62              ;
 661+ 8F62              ;	5/08/22
 662+ 8F62              ;
 663+ 8F62              ;   PreviousScan.
 664+ 8F62              ;
 665+ 8F62              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F62              ;
 667+ 8F62              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F62              ;
 669+ 8F62              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F62              ;
 671+ 8F62              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F62              ;
 673+ 8F62              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F62              ;
 675+ 8F62
 676+ 8F62 7C           PreviousScan ld a,h
 677+ 8F63 25               dec h               ; Dec H.
 678+ 8F64 E6 07            and 7
 679+ 8F66 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F67
 681+ 8F67 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F68 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F6A 6F               ld l,a
 684+ 8F6B D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F6C
 686+ 8F6C 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F6D C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F6F 67               ld h,a
 689+ 8F70 C9               ret
 690+ 8F71
 691+ 8F71              ; -----------------------------------------------------------------------------------
 692+ 8F71              ;
 693+ 8F71              ;	28/2/23
 694+ 8F71              ;
 695+ 8F71              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F71              ;	Extrae fotos de Album_de_fotos.
 697+ 8F71
 698+ 8F71 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
 699+ 8F74 A7           	and a
 700+ 8F75 C8           	ret z
 701+ 8F76 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F7A 31 00 70     	ld sp,Album_de_fotos
 703+ 8F7D
 704+ 8F7D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F7F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F80 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F81
 708+ 8F81 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8F85 ED 7B DF 85  	ld sp,(Stack)
 710+ 8F89
 711+ 8F89              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8F89
 713+ 8F89 3E CD        	ld a,$cd
 714+ 8F8B 32 93 8F     	ld (Imprime),a
 715+ 8F8E EB           	ex de,hl
 716+ 8F8F 22 94 8F     	ld (Imprime+1),hl
 717+ 8F92 EB           	ex de,hl
 718+ 8F93
 719+ 8F93              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8F93
 721+ 8F93 00 00 00     Imprime db 0,0,0
 722+ 8F96
 723+ 8F96 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8F99 3D           	dec a
 725+ 8F9A 28 09        	jr z,1F
 726+ 8F9C 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8F9F
 728+ 8F9F ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FA3 18 D8        	jr 2B
 730+ 8FA5
 731+ 8FA5 AF           1 xor a
 732+ 8FA6 32 E1 85     	ld (Stack_2),a
 733+ 8FA9 C9           	ret
 734+ 8FAA
 735+ 8FAA              ; -----------------------------------------------------------------------------------
 736+ 8FAA              ;
 737+ 8FAA              ;	28/2/23
 738+ 8FAA              ;
 739+ 8FAA              ;	Pinta los disparos generados.
 740+ 8FAA
 741+ 8FAA              Extrae_foto_disparos
 742+ 8FAA
 743+ 8FAA 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FAD A7           	and a
 745+ 8FAE C8           	ret z
 746+ 8FAF ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FB3 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FB6
 749+ 8FB6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FB8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FB9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FBA
 753+ 8FBA ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FBE ED 7B DF 85  	ld sp,(Stack)
 755+ 8FC2
 756+ 8FC2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FC2
 758+ 8FC2 3E CD        	ld a,$cd
 759+ 8FC4 32 CC 8F     	ld (Imprime2),a
 760+ 8FC7 EB           	ex de,hl
 761+ 8FC8 22 CD 8F     	ld (Imprime2+1),hl
 762+ 8FCB EB           	ex de,hl
 763+ 8FCC
 764+ 8FCC              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FCC
 766+ 8FCC 00 00 00     Imprime2 db 0,0,0
 767+ 8FCF
 768+ 8FCF 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FD2 3D           	dec a
 770+ 8FD3 28 09        	jr z,1F
 771+ 8FD5 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FD8
 773+ 8FD8 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FDC 18 D8        	jr 2B
 775+ 8FDE
 776+ 8FDE AF           1 xor a
 777+ 8FDF 32 E1 85     	ld (Stack_2),a
 778+ 8FE2 C9           	ret
 779+ 8FE3
# file closed: Draw_XOR.asm
 889  8FE3              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 8FE3              ;   índices de Rutinas de impresión.
   2+ 8FE3
   3+ 8FE3 F3 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 8FE5 20 90            defw Pinta_Amadeus_3x2
   5+ 8FE7
   6+ 8FE7 76 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 8FE9 16 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 8FEB CA 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 8FED
  10+ 8FED A0 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 8FEF A4 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 8FF1 58 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 8FF3
  14+ 8FF3
  15+ 8FF3              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 8FF3              ;
  17+ 8FF3              ;   12/12/22
  18+ 8FF3              ;
  19+ 8FF3              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 8FF3              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 8FF3              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 8FF3              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 8FF3              ;
  24+ 8FF3              ;   Modifica: DE y HL.
  25+ 8FF3
  26+ 8FF3 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 8FF7 FD F9        	ld sp,iy
  28+ 8FF9 06 10            ld b,16
  29+ 8FFB D1           1 pop de
  30+ 8FFC 7B               ld a,e
  31+ 8FFD AE               xor (hl)
  32+ 8FFE 77           	ld (hl),a
  33+ 8FFF 23           	inc hl
  34+ 9000 7A               ld a,d
  35+ 9001 AE               xor (hl)
  36+ 9002 77           	ld (hl),a
  37+ 9003 2B           	dec hl
  38+ 9004 24           	inc h
  39+ 9005 7C               ld a,h
  40+ 9006 E6 07            and 7
  41+ 9008 20 0A            jr nz,2F
  42+ 900A 7D               ld a,l
  43+ 900B C6 20            add a,$20
  44+ 900D 6F               ld l,a
  45+ 900E 38 04            jr c,2F
  46+ 9010 7C               ld a,h
  47+ 9011 D6 08            sub 8
  48+ 9013 67               ld h,a
  49+ 9014 7C           2 ld a,h
  50+ 9015 FE 58            cp $58
  51+ 9017 28 02            jr z,3F
  52+ 9019 10 E0            djnz 1B
  53+ 901B ED 7B DF 85  3 ld sp,(Stack)
  54+ 901F C9           	ret
  55+ 9020
  56+ 9020 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9024 FD F9        	ld sp,iy
  58+ 9026 06 08            ld b,8
  59+ 9028 D1           1 pop de
  60+ 9029 7B               ld a,e
  61+ 902A AE               xor (hl)
  62+ 902B 77           	ld (hl),a
  63+ 902C 23           	inc hl
  64+ 902D 7A               ld a,d
  65+ 902E AE               xor (hl)
  66+ 902F 77           	ld (hl),a
  67+ 9030 23           	inc hl
  68+ 9031 D1           	pop de
  69+ 9032 7B               ld a,e
  70+ 9033 AE               xor (hl)
  71+ 9034 77           	ld (hl),a
  72+ 9035 2B           	dec hl
  73+ 9036 2B           	dec hl
  74+ 9037 24           	inc h
  75+ 9038 7C               ld a,h
  76+ 9039 E6 07            and 7
  77+ 903B 20 0A            jr nz,2F
  78+ 903D 7D               ld a,l
  79+ 903E C6 20            add a,$20
  80+ 9040 6F               ld l,a
  81+ 9041 38 04            jr c,2F
  82+ 9043 7C               ld a,h
  83+ 9044 D6 08            sub 8
  84+ 9046 67               ld h,a
  85+ 9047 7C           2 ld a,h
  86+ 9048 FE 58            cp $58
  87+ 904A 28 25            jr z,4F
  88+ 904C 7A               ld a,d
  89+ 904D AE               xor (hl)
  90+ 904E 77               ld (hl),a
  91+ 904F D1           	pop de
  92+ 9050 23           	inc hl
  93+ 9051 7B               ld a,e
  94+ 9052 AE               xor (hl)
  95+ 9053 77           	ld (hl),a
  96+ 9054 23           	inc hl
  97+ 9055 7A               ld a,d
  98+ 9056 AE               xor (hl)
  99+ 9057 77           	ld (hl),a
 100+ 9058 2B           	dec hl
 101+ 9059 2B           	dec hl
 102+ 905A 24           	inc h
 103+ 905B 7C               ld a,h
 104+ 905C E6 07            and 7
 105+ 905E 20 0A            jr nz,3F
 106+ 9060 7D               ld a,l
 107+ 9061 C6 20            add a,$20
 108+ 9063 6F               ld l,a
 109+ 9064 38 04            jr c,3F
 110+ 9066 7C               ld a,h
 111+ 9067 D6 08            sub 8
 112+ 9069 67               ld h,a
 113+ 906A 7C           3 ld a,h
 114+ 906B FE 58            cp $58
 115+ 906D 28 02            jr z,4F
 116+ 906F 10 B7            djnz 1B
 117+ 9071 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9075 C9           	ret
 119+ 9076
 120+ 9076              ; ---------------------------------------------------
 121+ 9076
 122+ 9076 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 907A FD F9        	ld sp,iy
 124+ 907C
 125+ 907C              ; >>>
 126+ 907C
 127+ 907C 06 10            ld b,16
 128+ 907E D1           1 pop de
 129+ 907F 7A           	ld a,d
 130+ 9080 AE           	xor (hl)
 131+ 9081 77           	ld (hl),a
 132+ 9082 24           	inc h
 133+ 9083 7C               ld a,h
 134+ 9084 E6 07            and 7
 135+ 9086 20 0C            jr nz,2F
 136+ 9088 7D               ld a,l
 137+ 9089 C6 20            add a,$20
 138+ 908B 6F               ld l,a
 139+ 908C 38 06            jr c,2F
 140+ 908E 7C               ld a,h
 141+ 908F D6 08            sub 8
 142+ 9091 67               ld h,a
 143+ 9092 18 00            jr 2F
 144+ 9094 7C           2 ld a,h
 145+ 9095 FE 58            cp $58
 146+ 9097 28 02            jr z,3F
 147+ 9099 10 E3            djnz 1B
 148+ 909B ED 7B DF 85  3 ld sp,(Stack)
 149+ 909F C9           	ret
 150+ 90A0
 151+ 90A0 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90A4 FD F9        	ld sp,iy
 153+ 90A6
 154+ 90A6              ; >>>
 155+ 90A6
 156+ 90A6 06 10            ld b,16
 157+ 90A8 D1           1 pop de
 158+ 90A9 7B           	ld a,e
 159+ 90AA AE           	xor (hl)
 160+ 90AB 77           	ld (hl),a
 161+ 90AC 24           	inc h
 162+ 90AD 7C               ld a,h
 163+ 90AE E6 07            and 7
 164+ 90B0 20 0C            jr nz,2F
 165+ 90B2 7D               ld a,l
 166+ 90B3 C6 20            add a,$20
 167+ 90B5 6F               ld l,a
 168+ 90B6 38 06            jr c,2F
 169+ 90B8 7C               ld a,h
 170+ 90B9 D6 08            sub 8
 171+ 90BB 67               ld h,a
 172+ 90BC 18 00            jr 2F
 173+ 90BE 7C           2 ld a,h
 174+ 90BF FE 58            cp $58
 175+ 90C1 28 02            jr z,3F
 176+ 90C3 10 E3            djnz 1B
 177+ 90C5 ED 7B DF 85  3 ld sp,(Stack)
 178+ 90C9 C9           	ret
 179+ 90CA
 180+ 90CA              ; ---------------------------------------------------
 181+ 90CA
 182+ 90CA ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90CE FD F9        	ld sp,iy
 184+ 90D0 06 08            ld b,8
 185+ 90D2 D1           1 pop de
 186+ 90D3 7A           	ld a,d
 187+ 90D4 AE           	xor (hl)
 188+ 90D5 77           	ld (hl),a
 189+ 90D6 23           	inc hl
 190+ 90D7 D1           	pop de
 191+ 90D8 7B           	ld a,e
 192+ 90D9 AE           	xor (hl)
 193+ 90DA 77           	ld (hl),a
 194+ 90DB 2B           	dec hl
 195+ 90DC 24            	inc h
 196+ 90DD 7C               ld a,h
 197+ 90DE E6 07            and 7
 198+ 90E0 20 0A            jr nz,2F
 199+ 90E2 7D               ld a,l
 200+ 90E3 C6 20            add a,$20
 201+ 90E5 6F               ld l,a
 202+ 90E6 38 04            jr c,2F
 203+ 90E8 7C               ld a,h
 204+ 90E9 D6 08            sub 8
 205+ 90EB 67               ld h,a
 206+ 90EC 7C           2 ld a,h
 207+ 90ED FE 58            cp $58
 208+ 90EF 28 20            jr z,4F
 209+ 90F1 D1               pop de
 210+ 90F2 7B           	ld a,e
 211+ 90F3 AE           	xor (hl)
 212+ 90F4 77           	ld (hl),a
 213+ 90F5 23           	inc hl
 214+ 90F6 7A           	ld a,d
 215+ 90F7 AE           	xor (hl)
 216+ 90F8 77           	ld (hl),a
 217+ 90F9 2B           	dec hl
 218+ 90FA 24           	inc h
 219+ 90FB 7C               ld a,h
 220+ 90FC E6 07            and 7
 221+ 90FE 20 0A            jr nz,3F
 222+ 9100 7D               ld a,l
 223+ 9101 C6 20            add a,$20
 224+ 9103 6F               ld l,a
 225+ 9104 38 04            jr c,3F
 226+ 9106 7C               ld a,h
 227+ 9107 D6 08            sub 8
 228+ 9109 67               ld h,a
 229+ 910A 7C           3 ld a,h
 230+ 910B FE 58            cp $58
 231+ 910D 28 02            jr z,4F
 232+ 910F 10 C1            djnz 1B
 233+ 9111 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9115 C9           	ret
 235+ 9116
 236+ 9116 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 911A FD F9        	ld sp,iy
 238+ 911C 06 08            ld b,8
 239+ 911E D1           1 pop de
 240+ 911F D1           	pop de
 241+ 9120 7B           	ld a,e
 242+ 9121 AE           	xor (hl)
 243+ 9122 77           	ld (hl),a
 244+ 9123 24            	inc h
 245+ 9124 7C               ld a,h
 246+ 9125 E6 07            and 7
 247+ 9127 20 0A            jr nz,2F
 248+ 9129 7D               ld a,l
 249+ 912A C6 20            add a,$20
 250+ 912C 6F               ld l,a
 251+ 912D 38 04            jr c,2F
 252+ 912F 7C               ld a,h
 253+ 9130 D6 08            sub 8
 254+ 9132 67               ld h,a
 255+ 9133 7C           2 ld a,h
 256+ 9134 FE 58            cp $58
 257+ 9136 28 1B            jr z,4F
 258+ 9138 D1               pop de
 259+ 9139 7A           	ld a,d
 260+ 913A AE           	xor (hl)
 261+ 913B 77           	ld (hl),a
 262+ 913C 24           	inc h
 263+ 913D 7C               ld a,h
 264+ 913E E6 07            and 7
 265+ 9140 20 0A            jr nz,3F
 266+ 9142 7D               ld a,l
 267+ 9143 C6 20            add a,$20
 268+ 9145 6F               ld l,a
 269+ 9146 38 04            jr c,3F
 270+ 9148 7C               ld a,h
 271+ 9149 D6 08            sub 8
 272+ 914B 67               ld h,a
 273+ 914C 7C           3 ld a,h
 274+ 914D FE 58            cp $58
 275+ 914F 28 02            jr z,4F
 276+ 9151 10 CB            djnz 1B
 277+ 9153 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9157 C9           	ret
 279+ 9158
 280+ 9158 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 915C FD F9        	ld sp,iy
 282+ 915E 06 08            ld b,8
 283+ 9160 D1           1 pop de
 284+ 9161 7B           	ld a,e
 285+ 9162 AE           	xor (hl)
 286+ 9163 77           	ld (hl),a
 287+ 9164 23           	inc hl
 288+ 9165 7A           	ld a,d
 289+ 9166 AE           	xor (hl)
 290+ 9167 77           	ld (hl),a
 291+ 9168 2B           	dec hl
 292+ 9169 24             	inc h
 293+ 916A 7C               ld a,h
 294+ 916B E6 07            and 7
 295+ 916D 20 0A            jr nz,2F
 296+ 916F 7D               ld a,l
 297+ 9170 C6 20            add a,$20
 298+ 9172 6F               ld l,a
 299+ 9173 38 04            jr c,2F
 300+ 9175 7C               ld a,h
 301+ 9176 D6 08            sub 8
 302+ 9178 67               ld h,a
 303+ 9179 7C           2 ld a,h
 304+ 917A FE 58            cp $58
 305+ 917C 28 21            jr z,4F
 306+ 917E D1               pop de
 307+ 917F 7A           	ld a,d
 308+ 9180 AE           	xor (hl)
 309+ 9181 77           	ld (hl),a
 310+ 9182 23           	inc hl
 311+ 9183 D1               pop de
 312+ 9184 7B           	ld a,e
 313+ 9185 AE           	xor (hl)
 314+ 9186 77           	ld (hl),a
 315+ 9187 2B           	dec hl
 316+ 9188 24           	inc h
 317+ 9189 7C               ld a,h
 318+ 918A E6 07            and 7
 319+ 918C 20 0A            jr nz,3F
 320+ 918E 7D               ld a,l
 321+ 918F C6 20            add a,$20
 322+ 9191 6F               ld l,a
 323+ 9192 38 04            jr c,3F
 324+ 9194 7C               ld a,h
 325+ 9195 D6 08            sub 8
 326+ 9197 67               ld h,a
 327+ 9198 7C           3 ld a,h
 328+ 9199 FE 58            cp $58
 329+ 919B 28 02            jr z,4F
 330+ 919D 10 C1            djnz 1B
 331+ 919F ED 7B DF 85  4 ld sp,(Stack)
 332+ 91A3 C9           	ret
 333+ 91A4
 334+ 91A4 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91A8 FD F9        	ld sp,iy
 336+ 91AA 06 08            ld b,8
 337+ 91AC D1           1 pop de
 338+ 91AD 7B           	ld a,e
 339+ 91AE AE           	xor (hl)
 340+ 91AF 77           	ld (hl),a
 341+ 91B0 24            	inc h
 342+ 91B1 7C               ld a,h
 343+ 91B2 E6 07            and 7
 344+ 91B4 20 0A            jr nz,2F
 345+ 91B6 7D               ld a,l
 346+ 91B7 C6 20            add a,$20
 347+ 91B9 6F               ld l,a
 348+ 91BA 38 04            jr c,2F
 349+ 91BC 7C               ld a,h
 350+ 91BD D6 08            sub 8
 351+ 91BF 67               ld h,a
 352+ 91C0 7C           2 ld a,h
 353+ 91C1 FE 58            cp $58
 354+ 91C3 28 1C            jr z,4F
 355+ 91C5 D1               pop de
 356+ 91C6 7A           	ld a,d
 357+ 91C7 AE           	xor (hl)
 358+ 91C8 77           	ld (hl),a
 359+ 91C9 24           	inc h
 360+ 91CA 7C               ld a,h
 361+ 91CB E6 07            and 7
 362+ 91CD 20 0A            jr nz,3F
 363+ 91CF 7D               ld a,l
 364+ 91D0 C6 20            add a,$20
 365+ 91D2 6F               ld l,a
 366+ 91D3 38 04            jr c,3F
 367+ 91D5 7C               ld a,h
 368+ 91D6 D6 08            sub 8
 369+ 91D8 67               ld h,a
 370+ 91D9 7C           3 ld a,h
 371+ 91DA FE 58            cp $58
 372+ 91DC 28 03            jr z,4F
 373+ 91DE D1               pop de
 374+ 91DF 10 CB            djnz 1B
 375+ 91E1 ED 7B DF 85  4 ld sp,(Stack)
 376+ 91E5 C9           	ret
 377+ 91E6
 378+ 91E6              ; ---------------------------------------------------
 379+ 91E6              ;
 380+ 91E6              ;   27/02/23
 381+ 91E6              ;
 382+ 91E6              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 91E6              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 91E6              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 91E6
 386+ 91E6 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 91EA FD F9            ld sp,iy
 388+ 91EC 06 02            ld b,2
 389+ 91EE D1           1 pop de
 390+ 91EF 7B               ld a,e
 391+ 91F0 AE               xor (hl)
 392+ 91F1 77               ld (hl),a
 393+ 91F2 23               inc hl
 394+ 91F3 7A               ld a,d
 395+ 91F4 AE               xor (hl)
 396+ 91F5 77               ld (hl),a
 397+ 91F6 2B               dec hl
 398+ 91F7
 399+ 91F7 24               inc h
 400+ 91F8 7C               ld a,h
 401+ 91F9 E6 07            and 7
 402+ 91FB 20 0A            jr nz,2F
 403+ 91FD 7D               ld a,l
 404+ 91FE C6 20            add a,$20
 405+ 9200 6F               ld l,a
 406+ 9201 38 04            jr c,2F
 407+ 9203 7C               ld a,h
 408+ 9204 D6 08            sub 8
 409+ 9206 67               ld h,a
 410+ 9207 7C           2 ld a,h
 411+ 9208 FE 58            cp $58
 412+ 920A 28 02            jr z,3F
 413+ 920C
 414+ 920C 10 E0            djnz 1B
 415+ 920E ED 7B DF 85  3 ld sp,(Stack)
 416+ 9212 C9               ret
 417+ 9213
# file closed: Rutinas_de_impresion_sprites.asm
 890  9213              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9213              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9213              ;
   3+ 9213              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9213              ;
   5+ 9213              ; *****************************************************************************************************************************************************************************************
   6+ 9213              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9213
   8+ 9213 7C           calcula_tercio ld a,h
   9+ 9214 E6 18        	and $18
  10+ 9216 CB 2F        	sra a
  11+ 9218 CB 2F        	sra a
  12+ 921A CB 2F        	sra a
  13+ 921C C9           	ret
  14+ 921D
# file closed: calcula_tercio.asm
 891  921D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 921D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 921D              ;
   3+ 921D              ;
   4+ 921D              ;	CLS.
   5+ 921D              ;
   6+ 921D              ;	Limpia la pantalla y define sus atributos.
   7+ 921D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 921D              ;
   9+ 921D              ;	COLORES: 0 ..... NEGRO
  10+ 921D              ;    		 1 ..... AZUL
  11+ 921D              ; 			 2 ..... ROJO
  12+ 921D              ;			 3 ..... MAGENTA
  13+ 921D              ; 			 4 ..... VERDE
  14+ 921D              ; 			 5 ..... CIAN
  15+ 921D              ;			 6 ..... AMARILLO
  16+ 921D              ; 			 7 ..... BLANCO
  17+ 921D              ;
  18+ 921D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 921D              ;
  20+ 921D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 921D
  22+ 921D
  23+ 921D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9220 11 01 40     	LD DE,$4001
  25+ 9223 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9226 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9228 ED B0        	LDIR
  28+ 922A 01 FF 02     	LD BC,767
  29+ 922D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 922E ED B0        	LDIR
  31+ 9230 C9           	ret
  32+ 9231
# file closed: Cls.asm
 892  9231              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9231              ; ******************************************************************************************************************************************************************************************
   2+ 9231              ;
   3+ 9231              ;   22/01/23
   4+ 9231              ;
   5+ 9231              ;	Mov_down
   6+ 9231              ;
   7+ 9231              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9231              ;
   9+ 9231              ;
  10+ 9231 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9234 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9236              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9236              ; 																	; _ en el caso de que no lo haya.
  14+ 9236 3A B3 85     	ld a,(Vel_down)
  15+ 9239 47           	ld b,a
  16+ 923A 2A 9D 85         ld hl,(Posicion_actual)
  17+ 923D CD 13 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9240 E6 02        	and 2
  19+ 9242 28 0F        	jr z,1F
  20+ 9244
  21+ 9244              ; Nos encontramos en el último tercio de pantalla.
  22+ 9244              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9244
  24+ 9244 7C           	ld a,h
  25+ 9245 FE 57        	cp $57
  26+ 9247 20 0A        	jr nz,1F
  27+ 9249 7D           	ld a,l
  28+ 924A C6 20        	add $20
  29+ 924C 30 05        	jr nc,1F
  30+ 924E
  31+ 924E              ; ------------------------------
  32+ 924E CD 29 95     	call Reaparece_arriba
  33+ 9251              ;	call Reinicio
  34+ 9251              ; ------------------------------
  35+ 9251
  36+ 9251 18 08        	jr 3F
  37+ 9253 CD 53 8F     1 call NextScan
  38+ 9256 22 9D 85     	ld (Posicion_actual),hl
  39+ 9259 10 E2            djnz 2B
  40+ 925B CD 3F 95     3 call Genera_coordenadas
  41+ 925E C9           	ret
  42+ 925F
  43+ 925F              ; ******************************************************************************************************************************************************************************************
  44+ 925F              ;
  45+ 925F              ;   22/01/23
  46+ 925F              ;
  47+ 925F              ;	Mov_up
  48+ 925F              ;
  49+ 925F              ; 	Mueve el Sprite hacia arriba.
  50+ 925F              ;
  51+ 925F              ;
  52+ 925F 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9262 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9264              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9264              ; 																		; _ en el caso de que no lo haya.
  56+ 9264 3A B2 85     	ld a,(Vel_up)
  57+ 9267 47           	ld b,a
  58+ 9268 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 926B CD 13 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 926E A7           	and a
  61+ 926F 20 10        	jr nz,1F
  62+ 9271
  63+ 9271              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9271              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9271
  66+ 9271 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9272 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9274 20 0B            jr nz,1F
  69+ 9276 7D               ld a,l
  70+ 9277 D6 20            sub $20
  71+ 9279 30 06            jr nc,1F
  72+ 927B 25               dec h
  73+ 927C
  74+ 927C              ; -----------------------------
  75+ 927C CD 19 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 927F              ;	call Reinicio
  77+ 927F              ; -----------------------------
  78+ 927F
  79+ 927F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9281 CD 62 8F     1 call PreviousScan
  81+ 9284 22 9D 85     	ld (Posicion_actual),hl
  82+ 9287 10 E2            djnz 3B
  83+ 9289 CD 3F 95     2 call Genera_coordenadas
  84+ 928C C9           	ret
  85+ 928D
  86+ 928D              ; ******************************************************************************************************************************************************************************************
  87+ 928D              ;
  88+ 928D              ;	19/10/22
  89+ 928D              ;
  90+ 928D              ;	Mov_right.
  91+ 928D              ;
  92+ 928D              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 928D              ;
  94+ 928D
  95+ 928D 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 9290 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9292              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9292              ; 																	; _ en el caso de que no lo haya.
  99+ 9292 3A C9 85     	ld a,(Ctrl_0)
 100+ 9295 CB 77        	bit 6,a
 101+ 9297 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9299
 103+ 9299 CD C7 94     	call Stop_Amadeus_right
 104+ 929C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 929D 18 4D        	jr 8F
 106+ 929F
 107+ 929F 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92A2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92A4 20 46        	jr nz,8F
 110+ 92A6
 111+ 92A6 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92A9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92AA 28 40        	jr z,8F
 114+ 92AC
 115+ 92AC              ; ---------- ---------- ----------
 116+ 92AC              ;
 117+ 92AC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92AC
 119+ 92AC 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92AF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92B1 28 11        	jr z,1F
 122+ 92B3 38 06        	jr c,6F
 123+ 92B5 FE 04        	cp 4
 124+ 92B7 28 14        	jr z,7F
 125+ 92B9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92BB
 127+ 92BB              ; ---------- ---------- ----------
 128+ 92BB              ;
 129+ 92BB              ; Perfiles de velocidad
 130+ 92BB              ;
 131+ 92BB
 132+ 92BB 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92BE FE FE        	cp $fe
 134+ 92C0 20 2A        	jr nz,8F
 135+ 92C2 18 10        	jr 3F
 136+ 92C4 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92C7 FE FD        	cp $fd
 138+ 92C9 20 21        	jr nz,8F
 139+ 92CB 18 07        	jr 3F
 140+ 92CD 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92D0 FE FB        	cp $fb
 142+ 92D2 20 18        	jr nz,8F
 143+ 92D4
 144+ 92D4              ; ---------- ---------- ----------
 145+ 92D4
 146+ 92D4              3
 147+ 92D4 CD 07 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92D7              ;	call Reinicio
 149+ 92D7
 150+ 92D7              ; ---------- ---------- ----------
 151+ 92D7              ;
 152+ 92D7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92D7
 154+ 92D7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92D9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92DA CD F3 92     	call DESPLZ_DER
 157+ 92DD C1           	pop bc
 158+ 92DE 10 F9        	djnz 5B
 159+ 92E0 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 92E3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 92E4 22 9D 85     	ld (Posicion_actual),hl
 162+ 92E7 CD 3F 95     	call Genera_coordenadas
 163+ 92EA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 92EC
 165+ 92EC              ; ---------- ---------- ----------
 166+ 92EC
 167+ 92EC 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 92EF CD F3 92     	call DESPLZ_DER
 169+ 92F2 C9           2 ret
 170+ 92F3
 171+ 92F3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 92F3              ;
 173+ 92F3              ;	22/9/22
 174+ 92F3              ;
 175+ 92F3
 176+ 92F3 CD 02 93     DESPLZ_DER call Desplaza_derecha
 177+ 92F6 CD 4E 93         call modifica_parametros_1er_DESPLZ_2
 178+ 92F9 CD 77 93         call Ciclo_completo
 179+ 92FC 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 92FF CB FE        	set 7,(hl)
 181+ 9301 C9           	ret
 182+ 9302
 183+ 9302              ; ******************************************************************************************************************************************************************************************
 184+ 9302              ;	15/02/23
 185+ 9302              ;
 186+ 9302
 187+ 9302 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9305 47           	ld b,a
 189+ 9306 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9309 23           1 inc hl
 191+ 930A 23           	inc hl
 192+ 930B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 930D 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9310 CD AC 87     	call Extrae_address
 195+ 9313 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9316
 197+ 9316              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9316
 199+ 9316              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9316              ; Cuántos movimientos hemos hecho ??
 201+ 9316              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9316
 203+ 9316 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9319 EB           	ex de,hl
 205+ 931A A7           	and a
 206+ 931B ED 52        	sbc hl,de
 207+ 931D CB 3D        	srl l
 208+ 931F 3E 08        6 ld a,8
 209+ 9321 95           	sub l
 210+ 9322 30 1E        	jr nc,3F
 211+ 9324
 212+ 9324              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9324              ; B="0".
 214+ 9324
 215+ 9324 04           4 inc b
 216+ 9325 3C           	inc a
 217+ 9326 20 FC        	jr nz,4B
 218+ 9328 78           	ld a,b
 219+ 9329 08           	ex af,af
 220+ 932A 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 932D 23           5 inc hl
 222+ 932E 23           	inc hl
 223+ 932F 10 FC        	djnz 5B
 224+ 9331 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9334 CD AC 87     	call Extrae_address
 226+ 9337 22 9F 85     	ld (Puntero_objeto),hl
 227+ 933A
 228+ 933A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 933A              ; _(Posicion_actual).
 230+ 933A
 231+ 933A 21 9D 85     	ld hl,Posicion_actual
 232+ 933D 34           	inc (hl)
 233+ 933E 08               ex af,af
 234+ 933F 6F           	ld l,a
 235+ 9340 18 DD        	jr 6B
 236+ 9342
 237+ 9342              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9342
 239+ 9342 47           3 ld b,a
 240+ 9343 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9346 23           2 inc hl
 242+ 9347 23           	inc hl
 243+ 9348 10 FC        	djnz 2B
 244+ 934A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 934D C9           8 ret
 246+ 934E
 247+ 934E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 934E              ;
 249+ 934E              ;	24/7/22
 250+ 934E              ;
 251+ 934E              ;	modifica_parametros_1er_DESPLZ_2
 252+ 934E              ;
 253+ 934E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 934E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 934E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 934E
 257+ 934E 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9351 A7           	and a
 259+ 9352 20 1F        	jr nz,1F
 260+ 9354 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9356 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9359
 263+ 9359 21 9C 85     	ld hl,Columns
 264+ 935C 34           	inc (hl)
 265+ 935D 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9360 E6 01        	and 1
 267+ 9362 28 0F        	jr z,1F
 268+ 9364 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9367 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9368 22 9D 85     	ld (Posicion_actual),hl
 271+ 936B CD 3F 95     	call Genera_coordenadas
 272+ 936E CD D3 94     	call Inc_CTRL_DESPLZ
 273+ 9371 18 03        	jr 2F
 274+ 9373 CD D3 94     1 call Inc_CTRL_DESPLZ
 275+ 9376 C9           2 ret
 276+ 9377
 277+ 9377              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9377              ;
 279+ 9377              ;	24/7/22
 280+ 9377              ;
 281+ 9377              ;	Ciclo_completo.
 282+ 9377              ;
 283+ 9377              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9377              ;
 285+ 9377              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9377              ; 	Decrementamos (Columns).
 287+ 9377              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9377              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9377
 290+ 9377
 291+ 9377 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 937A FE FF        	cp $ff
 293+ 937C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 937E E6 F0        	and $f0
 295+ 9380 20 28        	jr nz,3F
 296+ 9382
 297+ 9382              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9382
 299+ 9382 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9385 47           	ld b,a
 301+ 9386 3E F8        	ld a,$f8
 302+ 9388 80           	add b
 303+ 9389 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 938C 18 1C        	jr 3F
 305+ 938E 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9391 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9392 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9393 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9396 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9399 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 939B 20 0A        	jr nz,2F
 312+ 939D 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93A0 23           	inc hl
 314+ 93A1 22 9D 85     	ld (Posicion_actual),hl
 315+ 93A4 CD 3F 95     	call Genera_coordenadas
 316+ 93A7
 317+ 93A7              ; Inicia el puntero de Sprite.
 318+ 93A7
 319+ 93A7 CD C3 87     2 call Inicia_puntero_objeto_der
 320+ 93AA C9           3 ret
 321+ 93AB
 322+ 93AB              ; ******************************************************************************************************************************************************************************************
 323+ 93AB              ;
 324+ 93AB              ;	15/02/23
 325+ 93AB              ;
 326+ 93AB              ;	Mov_left.
 327+ 93AB              ;
 328+ 93AB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93AB              ;
 330+ 93AB              Mov_left
 331+ 93AB
 332+ 93AB 21 C9 85     	ld hl,Ctrl_0
 333+ 93AE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93B0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93B0              ; 																	; _ en el caso de que no lo haya.
 336+ 93B0 3A C9 85     	ld a,(Ctrl_0)
 337+ 93B3 CB 77        	bit 6,a
 338+ 93B5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93B7
 340+ 93B7 CD CD 94     	call Stop_Amadeus_left
 341+ 93BA C8           	ret z
 342+ 93BB 20 4A        	jr nz,8F
 343+ 93BD
 344+ 93BD 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93C0 A7           	and a
 346+ 93C1 20 44        	jr nz,8F
 347+ 93C3
 348+ 93C3 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93C6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93C7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93C9
 352+ 93C9              ; ---------- ---------- ----------
 353+ 93C9
 354+ 93C9 3A B0 85     	ld a,(Vel_left)
 355+ 93CC FE 02        	cp 2
 356+ 93CE 28 0F        	jr z,1F
 357+ 93D0 38 04        	jr c,6F
 358+ 93D2 FE 04        	cp 4
 359+ 93D4 28 12        	jr z,7F
 360+ 93D6
 361+ 93D6              ; ---------- ---------- ----------
 362+ 93D6
 363+ 93D6 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93D9 FE F8        	cp $f8
 365+ 93DB 20 2A        	jr nz,8F
 366+ 93DD 18 10        	jr 4F
 367+ 93DF 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 93E2 FE F9        	cp $f9
 369+ 93E4 20 21        	jr nz,8F
 370+ 93E6 18 07        	jr 4F
 371+ 93E8 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 93EB FE FB        	cp $fb
 373+ 93ED 20 18        	jr nz,8F
 374+ 93EF
 375+ 93EF              ; ---------- ---------- ----------
 376+ 93EF
 377+ 93EF              4
 378+ 93EF CD F5 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 93F2              ;	call Reinicio
 380+ 93F2
 381+ 93F2              ; ---------- ---------- ----------
 382+ 93F2
 383+ 93F2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 93F4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 93F5
 386+ 93F5              ;	ld hl,(Indice_Sprite_izq)
 387+ 93F5              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 93F5
 389+ 93F5 CD 0E 94     	call DESPLZ_IZQ
 390+ 93F8 C1           	pop bc
 391+ 93F9 10 F9        	djnz 5B
 392+ 93FB 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 93FE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 93FF 22 9D 85     	ld (Posicion_actual),hl
 395+ 9402 CD 3F 95     	call Genera_coordenadas
 396+ 9405 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9407
 398+ 9407              ; ---------- ---------- ----------
 399+ 9407
 400+ 9407              ; Movemos, no hay recolocación.
 401+ 9407
 402+ 9407 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 940A CD 0E 94     	call DESPLZ_IZQ
 404+ 940D C9           2 ret
 405+ 940E
 406+ 940E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 940E              ;
 408+ 940E              ;	22/9/22
 409+ 940E
 410+ 940E              DESPLZ_IZQ
 411+ 940E
 412+ 940E CD 1D 94     	call Desplaza_izquierda
 413+ 9411 CD 69 94         call modifica_parametros_1er_DESPLZ
 414+ 9414 CD 91 94     	call Ciclo_completo_2
 415+ 9417 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 941A CB BE        	res 7,(hl)
 417+ 941C C9           	ret
 418+ 941D
 419+ 941D              Desplaza_izquierda
 420+ 941D
 421+ 941D 3A B0 85     	ld a,(Vel_left)
 422+ 9420 47           	ld b,a
 423+ 9421 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9424 23           1 inc hl
 425+ 9425 23           	inc hl
 426+ 9426 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9428 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 942B CD AC 87     	call Extrae_address
 429+ 942E 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9431
 431+ 9431              ; Modifica (Puntero_DESPLZ_der).
 432+ 9431
 433+ 9431              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9431              ; Cuántos movimientos hemos hecho ??
 435+ 9431              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9431
 437+ 9431 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9434 EB           	ex de,hl
 439+ 9435 A7           	and a
 440+ 9436 ED 52        	sbc hl,de
 441+ 9438 CB 3D        	srl l
 442+ 943A 3E 08        6 ld a,8
 443+ 943C 95           	sub l
 444+ 943D 30 1E        	jr nc,3F
 445+ 943F
 446+ 943F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 943F              ; B="0".
 448+ 943F
 449+ 943F 04           4 inc b
 450+ 9440 3C           	inc a
 451+ 9441 20 FC        	jr nz,4B
 452+ 9443 78           	ld a,b
 453+ 9444 08           	ex af,af
 454+ 9445 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9448 23           5 inc hl
 456+ 9449 23           	inc hl
 457+ 944A 10 FC        	djnz 5B
 458+ 944C 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 944F CD AC 87     	call Extrae_address
 460+ 9452 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9455
 462+ 9455              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9455              ; _(Posicion_actual).
 464+ 9455
 465+ 9455 21 9D 85     	ld hl,Posicion_actual
 466+ 9458 35           	dec (hl)
 467+ 9459 08           	ex af,af
 468+ 945A 6F           	ld l,a
 469+ 945B 18 DD        	jr 6B
 470+ 945D
 471+ 945D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 945D
 473+ 945D 47           3 ld b,a
 474+ 945E 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9461 23           2 inc hl
 476+ 9462 23           	inc hl
 477+ 9463 10 FC        	djnz 2B
 478+ 9465 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9468 C9           8 ret
 480+ 9469
 481+ 9469              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9469              ;
 483+ 9469              ;	modifica_parametros_1er_DESPLZ
 484+ 9469              ;
 485+ 9469              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9469              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9469              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9469
 489+ 9469 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 946C A7           	and a
 491+ 946D 20 1E        	jr nz,1F
 492+ 946F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9470 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9473 21 9C 85     	ld hl,Columns
 495+ 9476 34           	inc (hl)
 496+ 9477 3A AF 85     	ld a,(Cuad_objeto)
 497+ 947A E6 01        	and 1
 498+ 947C 20 0F        	jr nz,1F
 499+ 947E 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9481 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9482 22 9D 85     	ld (Posicion_actual),hl
 502+ 9485 CD 3F 95     	call Genera_coordenadas
 503+ 9488 CD E4 94     	call Dec_CTRL_DESPLZ
 504+ 948B 18 03        	jr 2F
 505+ 948D CD E4 94     1 call Dec_CTRL_DESPLZ
 506+ 9490 C9           2 ret
 507+ 9491
 508+ 9491              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9491
 510+ 9491 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9494 FE F7        	cp $f7
 512+ 9496 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9498 30 2C        	jr nc,3F
 514+ 949A
 515+ 949A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 949A
 517+ 949A 06 00        	ld b,0
 518+ 949C 04           4 inc b
 519+ 949D 3C           	inc a
 520+ 949E FE F7        	cp $f7
 521+ 94A0 20 FA        	jr nz,4B
 522+ 94A2 3E FF        	ld a,$ff
 523+ 94A4 90           	sub b
 524+ 94A5 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94A8 18 1C        	jr 3F
 526+ 94AA
 527+ 94AA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94AA
 529+ 94AA 21 9C 85     1 ld hl,Columns
 530+ 94AD 35           	dec (hl)
 531+ 94AE AF           	xor a
 532+ 94AF 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94B2 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94B5 E6 01        	and 1
 535+ 94B7 28 0A        	jr z,2F
 536+ 94B9 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94BC 2B           	dec hl
 538+ 94BD 22 9D 85     	ld (Posicion_actual),hl
 539+ 94C0 CD 3F 95     	call Genera_coordenadas
 540+ 94C3
 541+ 94C3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94C3
 543+ 94C3 CD D6 87     2 call Inicia_puntero_objeto_izq
 544+ 94C6 C9           3 ret
 545+ 94C7
 546+ 94C7              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94C7              ;
 548+ 94C7              ;	19/10/22
 549+ 94C7              ;
 550+ 94C7              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94C7              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94C7
 553+ 94C7 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94CA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94CC C9           	ret
 556+ 94CD
 557+ 94CD              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94CD              ;
 559+ 94CD              ;	19/10/22
 560+ 94CD              ;
 561+ 94CD              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94CD              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94CD
 564+ 94CD 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94D0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94D2 C9           	ret
 567+ 94D3
 568+ 94D3              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94D3              ;
 570+ 94D3              ;	24/7/22
 571+ 94D3              ;
 572+ 94D3              ;	Inc_CTRL_DESPLZ
 573+ 94D3              ;
 574+ 94D3              ;
 575+ 94D3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94D3
 577+ 94D3 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94D6 3A B1 85     	ld a,(Vel_right)
 579+ 94D9 A7           	and a
 580+ 94DA 28 06        	jr z,1F
 581+ 94DC 47           	ld b,a
 582+ 94DD 34           3 inc (hl)
 583+ 94DE 10 FD        	djnz 3B
 584+ 94E0 18 01        	jr 2F
 585+ 94E2 34           1 inc (hl)
 586+ 94E3 C9           2 ret
 587+ 94E4
 588+ 94E4              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 94E4              ;
 590+ 94E4              ;	5/2/23
 591+ 94E4              ;
 592+ 94E4              ;	Dec_CTRL_DESPLZ
 593+ 94E4              ;
 594+ 94E4              ;
 595+ 94E4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 94E4
 597+ 94E4 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 94E7 3A B0 85     	ld a,(Vel_left)
 599+ 94EA A7           	and a
 600+ 94EB 28 06        	jr z,1F
 601+ 94ED 47           	ld b,a
 602+ 94EE 35           3 dec (hl)
 603+ 94EF 10 FD        	djnz 3B
 604+ 94F1 18 01        	jr 2F
 605+ 94F3 35           1 dec (hl)
 606+ 94F4 C9           2 ret
 607+ 94F5
 608+ 94F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 94F5
 610+ 94F5 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 94F8 01 1F 00     	ld bc,31
 612+ 94FB A7           	and a
 613+ 94FC ED 4A        	adc hl,bc
 614+ 94FE 22 9D 85     	ld (Posicion_actual),hl
 615+ 9501 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9504 CB C6        	set 0,(hl)
 617+ 9506 C9           	ret
 618+ 9507
 619+ 9507              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9507
 621+ 9507 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 950A 01 1F 00     	ld bc,31
 623+ 950D A7           	and a
 624+ 950E ED 42        	sbc hl,bc
 625+ 9510 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9513 21 C9 85     	ld hl,Ctrl_0
 627+ 9516 CB CE        	set 1,(hl)
 628+ 9518 C9           	ret
 629+ 9519
 630+ 9519              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9519
 632+ 9519 24           Reaparece_abajo inc h
 633+ 951A 01 E0 17     	ld bc,$17e0
 634+ 951D A7           	and a
 635+ 951E ED 4A        	adc hl,bc
 636+ 9520 22 9D 85     	ld (Posicion_actual),hl
 637+ 9523 21 C9 85     	ld hl,Ctrl_0
 638+ 9526 CB D6        	set 2,(hl)
 639+ 9528 C9           	ret
 640+ 9529
 641+ 9529              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9529
 643+ 9529 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 952C A7           	and a
 645+ 952D ED 42        	sbc hl,bc
 646+ 952F 22 9D 85     	ld (Posicion_actual),hl
 647+ 9532 21 C9 85     	ld hl,Ctrl_0
 648+ 9535 CB DE        	set 3,(hl)
 649+ 9537 C9           	ret
 650+ 9538
 651+ 9538              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9538
 653+ 9538 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 953B 22 9D 85     	ld (Posicion_actual),hl
 655+ 953E C9           	ret
# file closed: Direcciones.asm
 893  953F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 953F              ; ------------------------------------------------------------------------
   2+ 953F              ;
   3+ 953F              ;	02/04/23
   4+ 953F              ;
   5+ 953F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 953F              ;	Fila superior "0", Columna izquierda "0".
   7+ 953F              ;
   8+ 953F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 953F              ;
  10+ 953F              ;	Modifica: A,BC y DE.
  11+ 953F
  12+ 953F C5           Genera_coordenadas push bc
  13+ 9540 E5           	push hl
  14+ 9541 D5           	push de
  15+ 9542
  16+ 9542 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9545
  18+ 9545 7D           	ld a,l
  19+ 9546 E6 1F        	and $1f
  20+ 9548 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 954B
  22+ 954B CD 13 92     	call calcula_tercio
  23+ 954E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 954F
  25+ 954F 1E 00        	ld e,0
  26+ 9551 7D           	ld a,l
  27+ 9552 E6 E0        	and $e0
  28+ 9554 28 01        	jr z,1F
  29+ 9556 04           	inc b
  30+ 9557
  31+ 9557 04           1 inc b
  32+ 9558 05           	dec b
  33+ 9559 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 955B              ;														; _ , salimos.
  35+ 955B 1C           3 inc e
  36+ 955C D6 20        	sub 32
  37+ 955E 20 FB        	jr nz,3B
  38+ 9560 10 F5        	djnz 1B
  39+ 9562
  40+ 9562 7B           2 ld a,e
  41+ 9563 32 A2 85     	ld (Coordenada_y),a
  42+ 9566
  43+ 9566 D1           	pop de
  44+ 9567 E1           	pop hl
  45+ 9568 C1           	pop bc
  46+ 9569
  47+ 9569 C9           	ret
  48+ 956A
  49+ 956A              ; ------------------------------------------------------------------------
  50+ 956A              ;	28/03/23
  51+ 956A              ;
  52+ 956A              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 956A              ;	Fila superior "0", Columna izquierda "0".
  54+ 956A              ;
  55+ 956A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 956A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 956A              ;
  58+ 956A              ;		DE="$120d"
  59+ 956A              ;
  60+ 956A              ;		D, (Coordenada_X), Columnas, $12
  61+ 956A              ;		E, (Coordenada_y), Filas, $0d
  62+ 956A              ;
  63+ 956A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 956A
  65+ 956A              ;	Modifica: A,BC y DE.
  66+ 956A
  67+ 956A
  68+ 956A              Genera_coordenadas_disparo
  69+ 956A
  70+ 956A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 956A
  72+ 956A 7D           	ld a,l
  73+ 956B E6 1F        	and $1f
  74+ 956D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 956E CD 13 92     	call calcula_tercio
  76+ 9571 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9572 1E 00        	ld e,0
  78+ 9574 7D           	ld a,l
  79+ 9575 E6 E0        	and $e0
  80+ 9577 28 01        	jr z,1F
  81+ 9579 04           	inc b
  82+ 957A 1C           1 inc e
  83+ 957B D6 20        	sub 32
  84+ 957D 20 FB        	jr nz,1B
  85+ 957F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9581 C9           	ret
  87+ 9582
# file closed: Genera_coordenadas.asm
 894  9582              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9582
   2+ 9582
   3+ 9582              ;   11/8/22
   4+ 9582              ;
   5+ 9582              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9582              ;
   7+ 9582              ;   Mov_obj.asm
   8+ 9582              ;
   9+ 9582              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9582              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9582              ;
  12+ 9582              ;   Codificación:
  13+ 9582              ;
  14+ 9582              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9582
  16+ 9582              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9582
  18+ 9582 02 40 00     Arriba db 2,%01000000,0
  19+ 9585 02 80 00     Abajo db 2,%10000000,0
  20+ 9588 02 20 00     Derecha db 2,%00100000,0
  21+ 958B 02 10 00     Izquierda db 2,%00010000,0
  22+ 958E 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9592 60 42 60 40
  22+ 9596 63
  23+ 9597 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 959B 22 A3 80 A0
  24+ 959F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95A3 84 A0 83 A0
  25+ 95A7 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95AB 80 A3 22 A0
  26+ 95AF 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95B3 40 60 42 60
  27+ 95B7 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95BB
  29+ 95BB 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95BF 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95C3 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95C7 84 00
  32+ 95C9 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95CD 84 00
  33+ 95CF 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95D3 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95D7 1F 1F 1F 1F
  35+ 95DB 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95DF 1F 1F 1F 1F
  35+ 95E3 1F
  36+ 95E4 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 95E8 2F 2F 2F 2F
  36+ 95EC 2F 2F
  37+ 95EE 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 95F2 2F 2F 00
  38+ 95F5
  39+ 95F5              ; ----- ----- ----- ----- -----
  40+ 95F5
  41+ 95F5 D3 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 95F7 CF 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 95F9 8B 95        Indice_mov_Izquierda defw Izquierda
  44+ 95FB 88 95        Indice_mov_Derecha defw Derecha
  45+ 95FD 85 95        Indice_mov_Abajo defw Abajo
  46+ 95FF 82 95        Indice_mov_Arriba defw Arriba
  47+ 9601 BF 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9603 C3 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9605 BB 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9607 C9 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9609 8E 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 960B              ; ----- ----- ----- ----- -----
  53+ 960B
  54+ 960B 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 960E A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 960F 28 02            jr z,1F
  57+ 9611 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9613 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9616 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9618 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 961B              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 961B 2A CD 85         ld hl,(Puntero_mov)
  63+ 961E 7E               ld a,(hl)
  64+ 961F 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9622 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9623 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9626
  68+ 9626 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9629 A7               and a
  70+ 962A 20 0C            jr nz,12F
  71+ 962C 2A CD 85         ld hl,(Puntero_mov)
  72+ 962F 7E               ld a,(hl)
  73+ 9630 A7               and a
  74+ 9631 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9633 E6 0F            and $0f
  76+ 9635 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9638              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9638 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 963B CB 7E            bit 7,(hl)
  80+ 963D 28 03            jr z,2F
  81+ 963F CD 31 92         call Mov_down
  82+ 9642 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9645 CB 76            bit 6,(hl)
  84+ 9647 28 03            jr z,3F
  85+ 9649 CD 5F 92         call Mov_up
  86+ 964C 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 964F CB 6E            bit 5,(hl)
  88+ 9651 28 03            jr z,4F
  89+ 9653 CD 8D 92         call Mov_right
  90+ 9656 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9659 CB 66            bit 4,(hl)
  92+ 965B 28 03            jr z,5F
  93+ 965D CD AB 93         call Mov_left
  94+ 9660
  95+ 9660              ; ---------- --------- --------- ---------- ----------
  96+ 9660
  97+ 9660 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9663 A7               and a
  99+ 9664 28 07            jr z,6F
 100+ 9666 3D               dec a
 101+ 9667 32 D1 85         ld (Repetimos_db),a
 102+ 966A 28 01            jr z,6f
 103+ 966C C9           11 ret
 104+ 966D 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9670 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9671 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9674 23               inc hl
 108+ 9675 22 CD 85         ld (Puntero_mov),hl
 109+ 9678 18 F2            jr 11B
 110+ 967A 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 967D 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9680 47               ld b,a
 113+ 9681 23           8 inc hl
 114+ 9682 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9684 5E               ld e,(hl)
 116+ 9685 23               inc hl
 117+ 9686 56               ld d,(hl)
 118+ 9687 EB               ex de,hl
 119+ 9688 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 968B 18 DF            jr 11B
 121+ 968D
 122+ 968D              ; ---------- --------- --------- ---------- ----------
 123+ 968D              ;
 124+ 968D              ;   11/8/22
 125+ 968D              ;
 126+ 968D              ;   Prepara_Puntero_mov
 127+ 968D
 128+ 968D E5           Prepara_Puntero_mov push hl
 129+ 968E D5               push de
 130+ 968F 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9692 5E               ld e,(hl)
 132+ 9693 23               inc hl
 133+ 9694 56               ld d,(hl)
 134+ 9695 EB               ex de,hl
 135+ 9696 22 CD 85         ld (Puntero_mov),hl
 136+ 9699 D1               pop de
 137+ 969A E1               pop hl
 138+ 969B C9               ret
 139+ 969C
 140+ 969C              ; ---------- --------- --------- ---------- ----------
 141+ 969C              ;
 142+ 969C              ;   11/8/22
 143+ 969C              ;
 144+ 969C              ;   Reinicia_el_movimiento
 145+ 969C
 146+ 969C CD 8D 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 969F AF               xor a
 148+ 96A0 32 CF 85         ld (Contador_db_mov),a
 149+ 96A3 32 D0 85         ld (Incrementa_puntero),a
 150+ 96A6 C3 0B 96         jp Movimiento
 151+ 96A9 C9               ret
 152+ 96AA              ; ---------- --------- --------- ---------- ----------
 153+ 96AA
 154+ 96AA
 155+ 96AA
 156+ 96AA
 157+ 96AA
 158+ 96AA
 159+ 96AA
 160+ 96AA
 161+ 96AA
 162+ 96AA
 163+ 96AA
 164+ 96AA
 165+ 96AA
 166+ 96AA
 167+ 96AA
 168+ 96AA
 169+ 96AA
 170+ 96AA
# file closed: Patrones_de_mov.asm
 895  96AA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96AA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96AA              ;
   3+ 96AA              ;	3/1/23
   4+ 96AA              ;
   5+ 96AA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96AA
   7+ 96AA              ;	ADC HL,SP	LD (addr),SP
   8+ 96AA              ;	ADD HL,SP	LD SP,(addr)
   9+ 96AA              ;	ADD IX,SP	LD SP,nn
  10+ 96AA              ; 	ADD IY,SP	LD SP,HL
  11+ 96AA              ;				LD SP,IX
  12+ 96AA              ;	DEC SP		LD SP,IY
  13+ 96AA
  14+ 96AA              ;	EX (SP),HL
  15+ 96AA              ;	EX (SP),IX
  16+ 96AA              ;	EX (SP),IY
  17+ 96AA
  18+ 96AA              ;	INC SP
  19+ 96AA
  20+ 96AA
  21+ 96AA                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 896  7FD4
 897  7FD4              	SAVESNA "Pruebas.sna", START
 898  7FD4
 899  7FD4
 900  7FD4
# file closed: Banco_de_pruebas.asm
