# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 52 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 F5 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 E5 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB F5 96        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 217  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 218  85FA
 219  85FA 01           Habilita_disparo_entidad db 1
 220  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 221  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 222  85FD
 223  85FD              ;---------------------------------------------------------------------------------------------------------------
 224  85FD
 225  85FD              ; Gestión de FRAMES.
 226  85FD
 227  85FD 00           Switch db 0
 228  85FE
 229  85FE              ; Variables de Raster y localización en pantalla.
 230  85FE
 231  85FE 00 FF        Temp_Raster defw $ff00
 232  8600
 233  8600              ; Rutina principal *************************************************************************************************************************************************************************
 234  8600              ;
 235  8600              ;	14/11/22
 236  8600
 237  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 238  8603
 239  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 240  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 241  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 242  8609 F3           	DI
 243  860A
 244  860A 3E 07        	ld a,%00000111
 245  860C CD 09 93     	call Cls
 246  860F
 247  860F              ;	call Pinta_FILAS
 248  860F
 249  860F CD B9 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 250  8612
 251  8612 21 DD 85     	ld hl,Numero_de_entidades
 252  8615 46           	ld b,(hl)
 253  8616 04           	inc b
 254  8617 05           	dec b
 255  8618 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 256  861A
 257  861A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 258  861A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 259  861A              ;	Pintamos el resto de entidades:
 260  861A
 261  861A CD A0 87     	call Inicia_punteros_de_entidades
 262  861D
 263  861D              ;	INICIA ENTIDADES!!!!!
 264  861D
 265  861D C5           1 push bc  												; Guardo el contador de entidades.
 266  861E CD FA 87      	call Inicia_Puntero_objeto
 267  8621 CD 59 8D     	call Draw
 268  8624 CD A0 7F     	call Guarda_foto_registros
 269  8627 CD 42 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 270  862A C1           	pop bc
 271  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 272  862D
 273  862D              ; 	INICIA AMADEUS!!!!!
 274  862D
 275  862D CD 95 88     3 call Restore_Amadeus
 276  8630 CD FA 87     	call Inicia_Puntero_objeto
 277  8633 CD 59 8D     	call Draw
 278  8636 CD A0 7F     	call Guarda_foto_registros
 279  8639 CD A7 88     	call Store_Amadeus
 280  863C
 281  863C              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 282  863C
 283  863C CD B6 87     	call Inicia_Puntero_Disparo_Entidades
 284  863F CD BD 87     	call Inicia_Puntero_Disparo_Amadeus
 285  8642
 286  8642              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 287  8642
 288  8642 CD A0 87     	call Inicia_punteros_de_entidades
 289  8645 CD 83 88     	call Restore_Primera_entidad
 290  8648
 291  8648 3A DD 85     	ld a,(Numero_de_entidades)
 292  864B 3C           	inc a
 293  864C 32 DE 85     	ld (Numero_de_malotes),a
 294  864F
 295  864F FB           2 ei
 296  8650 18 FD        	jr 2B
 297  8652
 298  8652              ; -----------------------------------------------------------------------------------
 299  8652
 300  8652              Frame
 301  8652
 302  8652              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 303  8652              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 304  8652
 305  8652              ; PINTAMOS.
 306  8652
 307  8652 3E 02            ld a,2
 308  8654 D3 FE            out ($fe),a
 309  8656 CD 5D 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 310  8659 CD 96 90     	call Extrae_foto_disparos
 311  865C 3E 01            ld a,1
 312  865E D3 FE            out ($fe),a
 313  8660
 314  8660              ; ----------------------------------------------------------------------
 315  8660
 316  8660              ; RELOJES.
 317  8660
 318  8660 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 319  8663 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 320  8666 CD D4 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 321  8669
 322  8669 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 323  866C 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 324  866F CD D4 7F     	call Habilita_disparos
 325  8672
 326  8672              ; COLISIONES.
 327  8672
 328  8672 CD FB 8C     8 call Selector_de_impactos
 329  8675
 330  8675              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 331  8675              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 332  8675              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 333  8675
 334  8675 AF           	xor a
 335  8676 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 336  8679
 337  8679 CD A0 87     	call Inicia_punteros_de_entidades
 338  867C CD 83 88     	call Restore_Primera_entidad
 339  867F
 340  867F AF           	xor a
 341  8680 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 342  8683
 343  8683 CD 7B 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 344  8686 21 00 70     	ld hl,Album_de_fotos
 345  8689 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 346  868C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 347  868C 3A DD 85         ld a,(Numero_de_entidades)
 348  868F 47               ld b,a
 349  8690 A7           	and a
 350  8691 28 48        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 351  8693
 352  8693              ; ----- ----- ----- ----- -----
 353  8693
 354  8693              ; Código que ejecutamos con cada entidad:
 355  8693
 356  8693              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 357  8693              ; _con las coordenadas de la entidad almacenada en DRAW.
 358  8693
 359  8693 3A D6 85     2 ld a,(Ctrl_1)
 360  8696 CB 57        	bit 2,a
 361  8698 28 1B        	jr z,7F
 362  869A
 363  869A 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 364  869D EB           	ex de,hl 										; D contiene la coordenada_y del disparo.
 365  869E              ;													; E contiene la coordenada_X del disparo.
 366  869E 2A A1 85     	ld hl,(Coordenada_X) 							; L Coordenada_x de la entidad.
 367  86A1              ;													; H Coordenado_y de la entidad.
 368  86A1 A7           	and a
 369  86A2 ED 52        	sbc hl,de
 370  86A4
 371  86A4 CD 32 8D     	call Determina_resultado_comparativa
 372  86A7
 373  86A7 04           	inc b
 374  86A8 05           	dec b
 375  86A9 28 0A        	jr z,7F
 376  86AB
 377  86AB 3E 01        	ld a,1											; Esta entidad ha sido alcanzada por un disparo_
 378  86AD 32 B4 85     	ld (Impacto),a 									; _de Amadeus. Lo indicamos activando su .db (Impacto).
 379  86B0 21 D6 85     	ld hl,Ctrl_1									; Restauramos el FLAG de comparación de entidad-disparo,_
 380  86B3 CB 96        	res 2,(hl)										; _(Bit2 Ctrl_1).
 381  86B5
 382  86B5 3A B4 85     7 ld a,(Impacto)
 383  86B8 A7           	and a
 384  86B9 20 FE        	jr nz,$
 385  86BB
 386  86BB              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 387  86BB
 388  86BB C5           	push bc
 389  86BC CD 0B 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 390  86BF
 391  86BF 3A C9 85     	ld a,(Ctrl_0)
 392  86C2 CB 67        	bit 4,a
 393  86C4 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 394  86C6
 395  86C6              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 396  86C6              ; Las entidades sólo generan disparo cuando se mueven.
 397  86C6              ; 16/02/23.
 398  86C6              ; [[[
 399  86C6 CD 04 89     	call Detecta_disparo_entidad
 400  86C9              ; ]]]
 401  86C9 CD 67 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 402  86CC
 403  86CC 21 C9 85     1 ld hl,Ctrl_0
 404  86CF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 405  86D1 AF           	xor a
 406  86D2 32 CA 85     	ld (Obj_dibujado),a
 407  86D5
 408  86D5 CD 42 88     6 call Store_Restore_entidades
 409  86D8 C1           	pop bc
 410  86D9 10 B8        	djnz 2B
 411  86DB
 412  86DB              ; Tras la gestión de las entidades, ... AMADEUS.
 413  86DB
 414  86DB CD 95 88     4 call Restore_Amadeus
 415  86DE
 416  86DE              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 417  86DE
 418  86DE 3A B4 85     	ld a,(Impacto)
 419  86E1 A7           	and a
 420  86E2 20 FE        	jr nz,$
 421  86E4
 422  86E4              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 423  86E4
 424  86E4 CD 38 87     	call Mov_Amadeus
 425  86E7
 426  86E7 3A C9 85     	ld a,(Ctrl_0)
 427  86EA CB 67        	bit 4,a
 428  86EC 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 429  86EE
 430  86EE CD 67 87     	call Guarda_foto_entidad_a_pintar
 431  86F1
 432  86F1 21 C9 85     3 ld hl,Ctrl_0
 433  86F4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 434  86F6 AF           	xor a
 435  86F7 32 CA 85     	ld (Obj_dibujado),a
 436  86FA
 437  86FA CD A7 88     	call Store_Amadeus
 438  86FD
 439  86FD CD 99 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 440  8700
 441  8700              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 442  8700
 443  8700 CD C4 87     	call Calcula_numero_de_malotes
 444  8703 CD DC 87     	call Calcula_numero_de_disparotes
 445  8706
 446  8706 3E 04        	ld a,4
 447  8708 D3 FE        	out ($fe),a
 448  870A C9           	ret
 449  870B
 450  870B              ; --------------------------------------------------------------------------------------------------------------
 451  870B              ;
 452  870B              ;	27/03/23
 453  870B
 454  870B              Mov_obj
 455  870B
 456  870B              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 457  870B
 458  870B AF           	xor a
 459  870C 32 CA 85     	ld (Obj_dibujado),a
 460  870F CD 71 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 461  8712              ;														; Obj_dibujado="0".
 462  8712              ; Movemos Entidades malignas.
 463  8712
 464  8712 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 465  8715 24           	inc h                                               ; Salimos de la rutina.
 466  8716 25           	dec h
 467  8717 C8           	ret z
 468  8718
 469  8718 CD F7 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 470  871B
 471  871B 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 472  871E CB 67        	bit 4,a
 473  8720 C8           	ret z
 474  8721
 475  8721              ; Ha habido desplazamiento de la entidad maligna.
 476  8721              ; Ha llegado a zona de AMADEUS ???
 477  8721
 478  8721 3A A2 85     	ld a,(Coordenada_y)
 479  8724 FE 14        	cp $14
 480  8726 D4 CA 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 481  8729              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 482  8729
 483  8729              ; ---------
 484  8729
 485  8729 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 486  872B 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 487  872E CD 71 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 488  8731 CD 88 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 489  8734 CD 57 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 490  8737 C9           	ret													; _de la misma.
 491  8738
 492  8738              ; --------------------------------------------------------------------------------------------------------------
 493  8738              ;
 494  8738              ;	29/1/23
 495  8738
 496  8738              Mov_Amadeus
 497  8738
 498  8738 AF           	xor a
 499  8739 32 CA 85     	ld (Obj_dibujado),a
 500  873C CD 71 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 501  873F              ;														; Obj_dibujado="0".
 502  873F              ; Movemos Amadeus.
 503  873F
 504  873F CD CD 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 505  8742 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 506  8745 CB 67        	bit 4,a
 507  8747 C8           	ret z
 508  8748
 509  8748              ; ---------
 510  8748
 511  8748 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 512  874A 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 513  874D CD 71 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 514  8750 CD 88 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 515  8753 CD 57 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 516  8756 C9           	ret													; _de la nave.
 517  8757
 518  8757              ; --------------------------------------------------------------------------------------------------------------
 519  8757              ;
 520  8757              ;	31/01/23
 521  8757              ;
 522  8757              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 523  8757
 524  8757              Guarda_foto_entidad_a_borrar
 525  8757
 526  8757 CD 33 90     	call Prepara_draw
 527  875A CD 6D 8F     	call calcula_CColumnass
 528  875D CD A4 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 529  8760 CD F9 8F     	call Define_rutina_de_impresion
 530  8763 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 531  8766 C9           	ret
 532  8767
 533  8767              ; --------------------------------------------------------------------------------------------------------------
 534  8767              ;
 535  8767              ;	31/01/23
 536  8767              ;
 537  8767              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 538  8767              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 539  8767
 540  8767              Guarda_foto_entidad_a_pintar
 541  8767
 542  8767 CD 94 87     	call Repone_pintar
 543  876A CD 59 8D     	call Draw
 544  876D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 545  8770 C9           	ret
 546  8771
 547  8771              ; --------------------------------------------------------------------------------------------------------------
 548  8771              ;
 549  8771              ;
 550  8771
 551  8771 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 552  8774 3A CA 85     	ld a,(Obj_dibujado)
 553  8777 A7           	and a
 554  8778 28 05        	jr z,1F
 555  877A 11 BF 85     	ld de,Variables_de_pintado
 556  877D 18 03        	jr 2F
 557  877F 11 B5 85     1 ld de,Variables_de_borrado
 558  8782 01 08 00     2 ld bc,8
 559  8785 ED B0        	ldir
 560  8787 C9           	ret
 561  8788
 562  8788              ; --------------------------------------------------------------------------------------------------------------
 563  8788
 564  8788 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 565  878B 11 9B 85     	ld de,Filas
 566  878E 01 08 00     	ld bc,8
 567  8791 ED B0        	ldir
 568  8793 C9           	ret
 569  8794
 570  8794 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 571  8797 11 9B 85     	ld de,Filas
 572  879A 01 08 00     	ld bc,8
 573  879D ED B0        	ldir
 574  879F C9           	ret
 575  87A0
 576  87A0              ; *************************************************************************************************************************************************************
 577  87A0              ;
 578  87A0              ; 8/1/23
 579  87A0              ;
 580  87A0              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 581  87A0              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 582  87A0              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 583  87A0
 584  87A0              ; Destruye HL y DE !!!!!
 585  87A0
 586  87A0              Inicia_punteros_de_entidades
 587  87A0
 588  87A0 21 68 84     	ld hl,Indice_de_entidades
 589  87A3 CD F4 87         call Extrae_address
 590  87A6 22 D7 85         ld (Puntero_store_entidades),hl
 591  87A9 21 6A 84     	ld hl,Indice_de_entidades+2
 592  87AC 22 DB 85     	ld (Indice_restore),hl
 593  87AF CD F4 87     	call Extrae_address
 594  87B2 22 D9 85     	ld (Puntero_restore_entidades),hl
 595  87B5 C9               ret
 596  87B6
 597  87B6              ; *************************************************************************************************************************************************************
 598  87B6              ;
 599  87B6              ; 8/1/23
 600  87B6              ;
 601  87B6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 602  87B6
 603  87B6 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 604  87B9 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 605  87BC C9           	ret
 606  87BD 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 607  87C0 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 608  87C3 C9           	ret
 609  87C4
 610  87C4              ; -------------------------------------------------------------------------------------------------------------
 611  87C4              ;
 612  87C4              ; 28/2/23
 613  87C4              ;
 614  87C4
 615  87C4              Calcula_numero_de_malotes
 616  87C4
 617  87C4 21 00 70     	ld hl,Album_de_fotos
 618  87C7 EB           	ex de,hl
 619  87C8 2A E3 85     	ld hl,(Stack_snapshot)
 620  87CB
 621  87CB 06 00        	ld b,0
 622  87CD 7D           	ld a,l
 623  87CE 93           	sub e
 624  87CF 28 07        	jr z,1F
 625  87D1
 626  87D1              ; Nº de malotes no es "0".
 627  87D1
 628  87D1 D6 06        2 sub 6
 629  87D3 04           	inc b
 630  87D4 A7           	and a
 631  87D5 20 FA        	jr nz,2B
 632  87D7 78           	ld a,b
 633  87D8
 634  87D8 32 DE 85     1 ld (Numero_de_malotes),a
 635  87DB C9           	ret
 636  87DC
 637  87DC              ; -------------------------------------------------------------------------------------------------------------
 638  87DC              ;
 639  87DC              ; 28/2/23
 640  87DC              ;
 641  87DC
 642  87DC              Calcula_numero_de_disparotes
 643  87DC
 644  87DC 21 60 70     	ld hl,Album_de_fotos_disparos
 645  87DF EB           	ex de,hl
 646  87E0 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 647  87E3
 648  87E3 06 00        	ld b,0
 649  87E5 7D           	ld a,l
 650  87E6 93           	sub e
 651  87E7 28 07        	jr z,1F
 652  87E9
 653  87E9              ; Nº de malotes no es "0".
 654  87E9
 655  87E9 D6 06        2 sub 6
 656  87EB 04           	inc b
 657  87EC A7           	and a
 658  87ED 20 FA        	jr nz,2B
 659  87EF 78           	ld a,b
 660  87F0
 661  87F0 32 E7 85     1 ld (Numero_de_disparotes),a
 662  87F3 C9           	ret
 663  87F4              ; *************************************************************************************************************************************************************
 664  87F4              ;
 665  87F4              ; 20/10/22
 666  87F4              ;
 667  87F4              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 668  87F4              ;
 669  87F4              ; Destruye el puntero y DE !!!!!
 670  87F4
 671  87F4 5E           Extrae_address ld e,(hl)
 672  87F5 23           	inc hl
 673  87F6 56           	ld d,(hl)
 674  87F7 2B           	dec hl
 675  87F8 EB           	ex de,hl
 676  87F9 C9           	ret
 677  87FA
 678  87FA              ; *************************************************************************************************************************************************************
 679  87FA              ;
 680  87FA              ;	7/2/23
 681  87FA              ;
 682  87FA              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 683  87FA              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 684  87FA              ;
 685  87FA              ;   Destruye HL y BC !!!!!,
 686  87FA              ;
 687  87FA              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 688  87FA              ;					"0" ..... Izquierda.
 689  87FA
 690  87FA              Inicia_Puntero_objeto
 691  87FA
 692  87FA 3A AF 85     	ld a,(Cuad_objeto)
 693  87FD E6 01        	and 1
 694  87FF F5           	push af
 695  8800 CC 1E 88     	call z,Inicia_puntero_objeto_izq
 696  8803 F1           	pop af
 697  8804 28 2B        	jr z,1F
 698  8806 CD 0B 88     	call Inicia_puntero_objeto_der
 699  8809 18 26        	jr 1F
 700  880B
 701  880B              ; Arrancamos desde la parte izquierda de la pantalla.
 702  880B              ; Iniciamos (Indice_Sprite_der).
 703  880B
 704  880B 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 705  880E 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 706  8811 CD F4 87     	call Extrae_address
 707  8814 22 9F 85     	ld (Puntero_objeto),hl
 708  8817
 709  8817 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 710  881A              ;	call Extrae_address
 711  881A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 712  881D C9           	ret
 713  881E
 714  881E              ; Arrancamos desde la parte derecha de la pantalla.
 715  881E              ; Iniciamos (Indice_Sprite_izq).
 716  881E
 717  881E 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 718  8821 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 719  8824 CD F4 87     	call Extrae_address
 720  8827 22 9F 85     	ld (Puntero_objeto),hl
 721  882A
 722  882A 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 723  882D              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 724  882D 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 725  8830 C9           	ret
 726  8831
 727  8831              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 728  8831
 729  8831 21 38 83     1 ld hl,Amadeus
 730  8834 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 731  8838 B7 ED 42     	sub hl,bc
 732  883B C0           	ret nz
 733  883C 21 C9 85     	ld hl,Ctrl_0
 734  883F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 735  8841 C9           	ret 												; _de nuestra nave en los extremos.
 736  8842
 737  8842              ; *************************************************************************************************************************************************************
 738  8842              ;
 739  8842              ;	8/1/23
 740  8842              ;
 741  8842              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 742  8842              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 743  8842
 744  8842              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 745  8842              ;	_de la 2ª y 3ª entidad respectivamente.
 746  8842
 747  8842              Store_Restore_entidades
 748  8842
 749  8842 E5           	push hl
 750  8843 D5           	push de
 751  8844 C5            	push bc
 752  8845
 753  8845              ;	STORE !!!!!
 754  8845              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 755  8845
 756  8845 21 9B 85     	ld hl,Filas
 757  8848 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 758  884C 01 3B 00     	ld bc,59
 759  884F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 760  8851
 761  8851              ; 	Entidad_sospechosa. 20/4/23
 762  8851
 763  8851 3A B4 85     	ld a,(Impacto)
 764  8854 A7           	and a
 765  8855 28 0C        	jr z,1F
 766  8857
 767  8857 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 768  885A 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 769  885D A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 770  885E ED 4A        	adc hl,bc 											; _ "0" más adelante.
 771  8860 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 772  8863
 773  8863              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 774  8863
 775  8863 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 776  8866 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 777  8869 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 778  886C 01 3B 00     	ld bc,59
 779  886F ED B0        	ldir
 780  8871
 781  8871              ;	Incrementa RESTORE !!!!!
 782  8871
 783  8871 2A DB 85         ld hl,(Indice_restore)
 784  8874 23           	inc hl
 785  8875 23           	inc hl
 786  8876 22 DB 85     	ld (Indice_restore),hl
 787  8879 CD F4 87         call Extrae_address
 788  887C 22 D9 85         ld (Puntero_restore_entidades),hl
 789  887F C1           	pop bc
 790  8880 D1           	pop de
 791  8881 E1           	pop hl
 792  8882 C9           	ret
 793  8883
 794  8883              ; **************************************************************************************************
 795  8883              ;
 796  8883              ;	29/10/22
 797  8883              ;
 798  8883              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 799  8883
 800  8883 E5           Restore_Primera_entidad push hl
 801  8884 D5           	push de
 802  8885 C5            	push bc
 803  8886 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 804  8889 11 9B 85     	ld de,Filas
 805  888C 01 3B 00     	ld bc,59
 806  888F ED B0        	ldir
 807  8891 C1           	pop bc
 808  8892 D1           	pop de
 809  8893 E1           	pop hl
 810  8894 C9           	ret
 811  8895
 812  8895              ; **************************************************************************************************
 813  8895              ;
 814  8895              ;	25/01/23
 815  8895              ;
 816  8895              ;	Restore_Amadeus
 817  8895              ;
 818  8895              ;	Cargamos en DRAW los parámetros de Amadeus.
 819  8895              ;
 820  8895
 821  8895 E5           Restore_Amadeus	push hl
 822  8896 D5           	push de
 823  8897 C5            	push bc
 824  8898 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 825  889B 11 9B 85     	ld de,Filas
 826  889E 01 3B 00     	ld bc,59
 827  88A1 ED B0        	ldir
 828  88A3 C1           	pop bc
 829  88A4 D1           	pop de
 830  88A5 E1           	pop hl
 831  88A6 C9           	ret
 832  88A7
 833  88A7              ; *************************************************************************************************************************************************************
 834  88A7              ;
 835  88A7              ;	29/01/23
 836  88A7              ;
 837  88A7              ;	Store_Amadeus
 838  88A7              ;
 839  88A7              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 840  88A7              ;
 841  88A7
 842  88A7 E5           Store_Amadeus push hl
 843  88A8 D5           	push de
 844  88A9 C5            	push bc
 845  88AA 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 846  88AD 11 74 84     	ld de,Amadeus_db
 847  88B0 01 3B 00     	ld bc,59
 848  88B3 ED B0        	ldir
 849  88B5 C1           	pop bc
 850  88B6 D1           	pop de
 851  88B7 E1           	pop hl
 852  88B8 C9           	ret
 853  88B9
 854  88B9              ; **************************************************************************************************
 855  88B9
 856  88B9              ; Teclado.
 857  88B9
 858  88B9 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 859  88BB DB FE        	in a,($fe)
 860  88BD E6 01        	and $01
 861  88BF 28 02        	jr z,1f
 862  88C1 18 F6        	jr Pulsa_ENTER
 863  88C3 C9           1 ret
 864  88C4
 865  88C4              ; **************************************************************************************************
 866  88C4              ;
 867  88C4              ; Temporización.
 868  88C4
 869  88C4              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 870  88C4              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 871  88C4              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 872  88C4              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 873  88C4
 874  88C4              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 875  88C4              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 876  88C4              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 877  88C4
 878  88C4              ; A partir de $4f61 no hace falta DELAY.
 879  88C4
 880  88C4              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 881  88C4
 882  88C4 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 883  88C7 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 884  88C8 78           	LD A,B
 885  88C9 A7           	AND A
 886  88CA 20 FB        	JR NZ,wait
 887  88CC C9           	RET
 888  88CD
 889  88CD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 890  88CD              ;
 891  88CD              ;	5/3/23
 892  88CD              ;
 893  88CD              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 894  88CD
 895  88CD              Movimiento_Amadeus
 896  88CD
 897  88CD              ; Disparo.
 898  88CD
 899  88CD 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 900  88D0 A7           	and a
 901  88D1 20 02        	jr nz,1F
 902  88D3 18 15        	jr 2F
 903  88D5
 904  88D5 3E F7        1 ld a,$f7													; "5" para disparar.
 905  88D7 DB FE        	in a,($fe)
 906  88D9 E6 10        	and $10
 907  88DB
 908  88DB F5           	push af
 909  88DC CC 46 89     	call z,Genera_disparo
 910  88DF F1           	pop af
 911  88E0 20 08        	jr nz,2F
 912  88E2
 913  88E2 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 914  88E5 EE 01        	xor 1
 915  88E7 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 916  88EA
 917  88EA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 918  88EC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 919  88EE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 920  88F0 CC 97 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 921  88F3 3E F7        	ld a,$f7
 922  88F5 DB FE        	in a,($fe)
 923  88F7 E6 01        	and $01
 924  88F9 C8           	ret z
 925  88FA
 926  88FA 3E F7        	ld a,$f7
 927  88FC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 928  88FE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 929  8900 CC 79 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 930  8903 C9           	ret
 931  8904
 932  8904              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 933  8904              ;
 934  8904              ;	Rutina provisional para que los malotes cagen balas.
 935  8904
 936  8904              Detecta_disparo_entidad
 937  8904
 938  8904 3A FA 85     	ld a,(Habilita_disparo_entidad)
 939  8907 A7           	and a
 940  8908 C8           	ret z
 941  8909 3E 7F        	ld a,$7f
 942  890B DB FE        	in a,($fe)
 943  890D E6 01        	and 1
 944  890F C0           	ret nz
 945  8910 CD 46 89     	call Genera_disparo
 946  8913 C9           	ret
 947  8914
 948  8914              ; Pinta indicadores de FILAS. ------------------------------------------------------
 949  8914
 950  8914 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 951  8917
 952  8917              ; ----------
 953  8917 06 20        	ld b,32
 954  8919 E5           2 push hl
 955  891A C5           	push bc
 956  891B              ; ----------
 957  891B
 958  891B 06 BF        	ld b,$bf
 959  891D 36 80        1 ld (hl),%10000000
 960  891F CD 3F 90     	call NextScan
 961  8922 10 F9        	djnz 1B
 962  8924
 963  8924              ; ----------
 964  8924 C1           	pop bc
 965  8925 E1           	pop hl
 966  8926 2C           	inc l
 967  8927 10 F0        	djnz 2B
 968  8929              ; ----------
 969  8929
 970  8929 06 03        	ld b,3
 971  892B 21 00 47         ld hl,$4700
 972  892E CD 34 89     3 call Bucle_1
 973  8931 10 FB            djnz 3B
 974  8933 C9               ret
 975  8934
 976  8934 C5           Bucle_1 push bc
 977  8935 E5                   push hl
 978  8936 D1                   pop de
 979  8937 13                   inc de
 980  8938 01 FF 00             ld bc,255
 981  893B 36 FF                ld (hl),255
 982  893D ED B0                ldir
 983  893F 23                   inc hl
 984  8940 3E 07                ld a,7
 985  8942 84                   add a,h
 986  8943 67                   ld h,a
 987  8944 C1                   pop bc
 988  8945 C9                   ret
 989  8946
 990  8946              ; ---------------------------------------------------------------
 991  8946
 992  8946              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8946              ; ******************************************************************************************************************************************************************************************
   2+ 8946              ;
   3+ 8946              ;   17/04/23
   4+ 8946              ;
   5+ 8946              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8946              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8946              ;
   8+ 8946              ;
   9+ 8946              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8946              ;
  11+ 8946              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8946              ;               _ hacen las entidades hacia abajo.
  13+ 8946              ;
  14+ 8946              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8946              ;
  16+ 8946              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8946              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8946              ;
  19+ 8946              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8946              ;           _ la bala.
  21+ 8946              ;
  22+ 8946              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8946              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8946              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8946              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8946              ;           _ en el momento de generarse la bala)).
  27+ 8946
  28+ 8946              Genera_disparo
  29+ 8946
  30+ 8946              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8946              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8946              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8946              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8946              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8946              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8946              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8946
  38+ 8946              ; Exclusiones:
  39+ 8946
  40+ 8946 3A D2 85         ld a,(Columnas)
  41+ 8949 47               ld b,a
  42+ 894A 3A 9C 85         ld a,(Columns)
  43+ 894D B8               cp b
  44+ 894E C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 894F
  46+ 894F              ; ----- ----- -----
  47+ 894F
  48+ 894F 3A C9 85         ld a,(Ctrl_0)
  49+ 8952 CB 77            bit 6,a
  50+ 8954 20 06            jr nz,14F
  51+ 8956
  52+ 8956 3A A2 85         ld a,(Coordenada_y)
  53+ 8959 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 895B D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 895C
  56+ 895C 21 00 80     14 ld hl,Indice_disparo
  57+ 895F 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8962 4F               ld c,a
  59+ 8963 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8965              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8965              ;                                            ""        ""       "f9", B="1"
  62+ 8965              ;                                            ""        ""       "fb", B="2"
  63+ 8965              ;                                            ""        ""       "fb", B="3"
  64+ 8965 A7               and a
  65+ 8966 28 10            jr z,1F
  66+ 8968 E6 01            and 1
  67+ 896A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 896B
  69+ 896B 79               ld a,c
  70+ 896C 16 F9            ld d,$f9
  71+ 896E 23           2 inc hl
  72+ 896F 23               inc hl
  73+ 8970 04               inc b
  74+ 8971 BA               cp d
  75+ 8972 28 04            jr z,1F
  76+ 8974 14               inc d
  77+ 8975 14               inc d
  78+ 8976 18 F6            jr 2B
  79+ 8978
  80+ 8978 CD F4 87     1 call Extrae_address
  81+ 897B E5               push hl
  82+ 897C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 897E DD 21 D2 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8982
  85+ 8982              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8982              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8982
  88+ 8982 3A C9 85         ld a,(Ctrl_0)
  89+ 8985 CB 77            bit 6,a
  90+ 8987 20 04            jr nz,19F
  91+ 8989
  92+ 8989 AF               xor a
  93+ 898A 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 898D
  95+ 898D 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 8990 FE 02            cp 2
  97+ 8992 38 66            jr c,3F
  98+ 8994 28 64            jr z,3F
  99+ 8996
 100+ 8996              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8996
 102+ 8996 E6 01            and 1
 103+ 8998 28 30            jr z,4F
 104+ 899A
 105+ 899A              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 899A              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 899A              ;
 108+ 899A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 899A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 899A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 899A
 112+ 899A 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 899D
 114+ 899D              ;   Amadeus o entidad ???.
 115+ 899D
 116+ 899D 3A C9 85         ld a,(Ctrl_0)
 117+ 89A0 CB 77            bit 6,a
 118+ 89A2 28 0A            jr z,8F
 119+ 89A4
 120+ 89A4              ; 	Dispara Amadeus.
 121+ 89A4
 122+ 89A4 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89A6 CD 4E 90         call PreviousScan
 124+ 89A9 CD 4E 90         call PreviousScan
 125+ 89AC
 126+ 89AC              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89AC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89AC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89AC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89AC
 131+ 89AC 18 11            jr 10F
 132+ 89AE
 133+ 89AE              ; 	Dispara Entidad.
 134+ 89AE
 135+ 89AE 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89B1              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89B1
 138+ 89B1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89B1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89B1
 141+ 89B1 C5               push bc
 142+ 89B2 06 10            ld b,16
 143+ 89B4 CD 3F 90     9 call NextScan
 144+ 89B7 10 FB            djnz 9B
 145+ 89B9 C1               pop bc
 146+ 89BA CD 24 8A         call Ajusta_disparo_parte_izquierda
 147+ 89BD 18 06            jr 17F
 148+ 89BF
 149+ 89BF              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89BF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89BF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89BF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89BF
 154+ 89BF CD 24 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89C2 CD 99 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89C5              ;                                                      ; _al generar el disparo.
 157+ 89C5
 158+ 89C5              ; 	LLegados a este punto tendremos:
 159+ 89C5              ;
 160+ 89C5              ;       Puntero_objeto_disparo en IY.
 161+ 89C5              ;       Rutinas_de_impresion en IX.
 162+ 89C5              ;       Puntero_de_impresion en HL.
 163+ 89C5              ;       Impacto/Dirección en BC.
 164+ 89C5
 165+ 89C5 CD 2C 8A     17 call Almacena_disparo
 166+ 89C8 18 52            jr 6F                                             ; RET.
 167+ 89CA
 168+ 89CA              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89CA              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89CA              ;
 171+ 89CA              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89CA              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89CA              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89CA
 175+ 89CA 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89CD
 177+ 89CD              ;   Amadeus o entidad ???.
 178+ 89CD
 179+ 89CD 3A C9 85         ld a,(Ctrl_0)
 180+ 89D0 CB 77            bit 6,a
 181+ 89D2 28 0A            jr z,11F
 182+ 89D4
 183+ 89D4              ; 	Dispara Amadeus.
 184+ 89D4
 185+ 89D4 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 89D6 CD 4E 90         call PreviousScan
 187+ 89D9 CD 4E 90         call PreviousScan
 188+ 89DC
 189+ 89DC              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 89DC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 89DC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 89DC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 89DC
 194+ 89DC 18 11            jr 13F
 195+ 89DE
 196+ 89DE              ; 	Dispara Entidad.
 197+ 89DE
 198+ 89DE 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 89E1              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 89E1
 201+ 89E1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 89E1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 89E1
 204+ 89E1 C5               push bc
 205+ 89E2 06 10            ld b,16
 206+ 89E4 CD 3F 90     12 call NextScan
 207+ 89E7 10 FB            djnz 12B
 208+ 89E9 C1               pop bc
 209+ 89EA
 210+ 89EA CD 1D 8A         call Ajusta_disparo_parte_derecha
 211+ 89ED 18 06            jr 18F
 212+ 89EF
 213+ 89EF              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 89EF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 89EF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 89EF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 89EF
 218+ 89EF CD 1D 8A     13 call Ajusta_disparo_parte_derecha
 219+ 89F2 CD 99 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 89F5              ;                                                       ; _al generar el disparo.
 221+ 89F5
 222+ 89F5              ; LLegados a este punto tendremos:
 223+ 89F5              ;
 224+ 89F5              ;       Puntero_objeto_disparo en IY.
 225+ 89F5              ;       Rutinas_de_impresion en IX.
 226+ 89F5              ;       Puntero_de_impresion en HL.
 227+ 89F5              ;       Impacto/Dirección en BC.
 228+ 89F5
 229+ 89F5 CD 2C 8A     18 call Almacena_disparo
 230+ 89F8 18 22            jr 6F                                               ; RET.
 231+ 89FA
 232+ 89FA              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 89FA
 234+ 89FA 28 11        3 jr z,5F
 235+ 89FC
 236+ 89FC              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 89FC              ;
 238+ 89FC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 89FC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 89FC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 89FC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 89FC
 243+ 89FC              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 89FC              ;	   ""        ""       "f9", B="1"
 245+ 89FC              ;	   ""        ""       "fb", B="2"
 246+ 89FC              ; 	   ""        ""       "fb", B="3"
 247+ 89FC
 248+ 89FC 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 89FF CD 3F 90     	call NextScan
 250+ 8A02
 251+ 8A02              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A02              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A02              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A02              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A02
 256+ 8A02 CD 24 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A05
 258+ 8A05              ; 	No se produce impacto. B="$80"
 259+ 8A05              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A05
 261+ 8A05 01 80 80         ld bc,$8080
 262+ 8A08
 263+ 8A08              ; 	LLegados a este punto tendremos:
 264+ 8A08              ;
 265+ 8A08              ;       Puntero_objeto_disparo en IY.
 266+ 8A08              ;       Rutinas_de_impresion en IX.
 267+ 8A08              ;       Puntero_de_impresion en HL.
 268+ 8A08              ;       Impacto/Dirección en BC.
 269+ 8A08
 270+ 8A08 CD 2C 8A         call Almacena_disparo
 271+ 8A0B 18 0F            jr 6F                                           ; RET.
 272+ 8A0D
 273+ 8A0D              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A0D              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A0D              ;
 276+ 8A0D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A0D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A0D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A0D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A0D
 281+ 8A0D 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A10 CD 3F 90     	call NextScan
 283+ 8A13
 284+ 8A13              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A13              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A13              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A13              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A13
 289+ 8A13 CD 1D 8A         call Ajusta_disparo_parte_derecha
 290+ 8A16
 291+ 8A16              ; 	No se produce impacto. B="$80"
 292+ 8A16              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A16
 294+ 8A16 01 80 80     15 ld bc,$8080
 295+ 8A19
 296+ 8A19              ; 	LLegados a este punto tendremos:
 297+ 8A19              ;
 298+ 8A19              ;       Puntero_objeto_disparo en IY.
 299+ 8A19              ;       Rutinas_de_impresion en IX.
 300+ 8A19              ;       Puntero_de_impresion en HL.
 301+ 8A19              ;       Impacto/Dirección en BC.
 302+ 8A19
 303+ 8A19 CD 2C 8A         call Almacena_disparo
 304+ 8A1C
 305+ 8A1C C9           6 ret
 306+ 8A1D
 307+ 8A1D              ; ----------------------------------------------------------------
 308+ 8A1D              ;
 309+ 8A1D              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A1D              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A1D              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A1D
 313+ 8A1D 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A1E FE 02            cp 2
 315+ 8A20 38 01            jr c,1F
 316+ 8A22 23               inc hl
 317+ 8A23 C9           1 ret
 318+ 8A24
 319+ 8A24 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A25 FE 01        	cp 1
 321+ 8A27 20 01        	jr nz,1F
 322+ 8A29 2B           	dec hl
 323+ 8A2A 2B           1 dec hl
 324+ 8A2B C9               ret
 325+ 8A2C
 326+ 8A2C              ; ----------------------------------------------------------------
 327+ 8A2C              ;
 328+ 8A2C              ;   25/02/23
 329+ 8A2C              ;
 330+ 8A2C              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A2C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A2C              ;
 333+ 8A2C              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A2C              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A2C
 336+ 8A2C              Almacena_disparo
 337+ 8A2C
 338+ 8A2C E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A2D F1               pop af
 340+ 8A2E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A2F
 342+ 8A2F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A30 E6 01            and 1
 344+ 8A32 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A34              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A34              ; 	Dispara AMADEUS.
 347+ 8A34
 348+ 8A34              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A34              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A34              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A34              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A34
 353+ 8A34 C5               push bc
 354+ 8A35 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A38 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A3B A7               and a
 357+ 8A3C ED 42            sbc hl,bc
 358+ 8A3E CC BD 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A41 C1               pop bc
 360+ 8A42 28 54            jr z,4F
 361+ 8A44
 362+ 8A44 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A47 23               inc hl
 364+ 8A48 23               inc hl
 365+ 8A49 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A4C              ;                                                   ; _ Disparo_(+1).
 367+ 8A4C 18 18            jr 2F
 368+ 8A4E
 369+ 8A4E              ; Dispara una entidad.
 370+ 8A4E
 371+ 8A4E C5           1 push bc
 372+ 8A4F 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A52 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A55 A7               and a
 375+ 8A56 ED 42            sbc hl,bc
 376+ 8A58 CC B6 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A5B C1               pop bc
 378+ 8A5C 28 3A            jr z,4F
 379+ 8A5E
 380+ 8A5E 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A61 23               inc hl
 382+ 8A62 23               inc hl
 383+ 8A63 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A66              ;                                                   ; _ Disparo_(+1).
 385+ 8A66 CD F4 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A69              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A69              ;
 388+ 8A69              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A69              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A69              ;                                                     Puntero_de_impresion en HL.
 391+ 8A69              ;                                                     Impacto/Dirección en BC.
 392+ 8A69
 393+ 8A69 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A6A 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A6B 23               inc hl                                          ; _ al siguiente.
 396+ 8A6C A7               and a
 397+ 8A6D 20 C0            jr nz,3B
 398+ 8A6F
 399+ 8A6F 08               ex af,af
 400+ 8A70 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8A74 F9               ld sp,hl
 402+ 8A75
 403+ 8A75 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8A77 F5               push af                                         ; Puntero de impresión.
 405+ 8A78 FD E5            push iy                                         ; Puntero objeto.
 406+ 8A7A C5               push bc                                         ; Control.
 407+ 8A7B
 408+ 8A7B ED 7B DF 85      ld sp,(Stack)
 409+ 8A7F
 410+ 8A7F              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8A7F
 412+ 8A7F 21 D6 85     	ld hl,Ctrl_1
 413+ 8A82 CB C6        	set 0,(hl)
 414+ 8A84
 415+ 8A84 DD E5        	push ix
 416+ 8A86 E1               pop hl
 417+ 8A87 F5               push af
 418+ 8A88 DD E1            pop ix
 419+ 8A8A
 420+ 8A8A CD A0 7F     	call Guarda_foto_registros
 421+ 8A8D
 422+ 8A8D 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8A90 CB 86        	res 0,(hl)
 424+ 8A92
 425+ 8A92              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8A92              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8A92
 428+ 8A92 CD BD 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8A95 CD B6 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8A98
 431+ 8A98 C9           4 ret
 432+ 8A99
 433+ 8A99              ; ----------------------------------------------------------------
 434+ 8A99              ;
 435+ 8A99              ;   4/3/23
 436+ 8A99              ;
 437+ 8A99              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8A99              ;   _ al generarse el disparo.
 439+ 8A99              ;
 440+ 8A99              ;       "$80" ..... No se produce colisión.
 441+ 8A99              ;       "$81" ..... Se produce colisión.
 442+ 8A99
 443+ 8A99              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8A99              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8A99
 446+ 8A99
 447+ 8A99 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8A9B E5               push hl                                        ; Puntero de impresión.
 449+ 8A9C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8A9E CD BA 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AA1
 452+ 8AA1 7B               ld a,e
 453+ 8AA2 E6 01            and 1
 454+ 8AA4 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8AA6
 456+ 8AA6 E1               pop hl
 457+ 8AA7 E5               push hl
 458+ 8AA8 CD 3F 90         call NextScan
 459+ 8AAB
 460+ 8AAB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8AAC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8AAE 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AB0              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AB0 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AB2 CD BA 8A         call Bucle_2
 466+ 8AB5
 467+ 8AB5 43           2 ld b,e
 468+ 8AB6 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8AB7 FD E1            pop iy
 470+ 8AB9 C9               ret
 471+ 8ABA
 472+ 8ABA               ; ---------- ----------
 473+ 8ABA
 474+ 8ABA 06 02        Bucle_2 ld b,2
 475+ 8ABC FD 7E 00     2 ld a,(iy)
 476+ 8ABF A6               and (hl)
 477+ 8AC0 28 02            jr z,1F
 478+ 8AC2 1E 81            ld e,$81
 479+ 8AC4 23           1 inc hl
 480+ 8AC5 FD 23            inc iy
 481+ 8AC7 10 F3            djnz 2B
 482+ 8AC9 C9               ret
 483+ 8ACA
 484+ 8ACA              ; -------------------------------------------------------------------------------------------------------------
 485+ 8ACA              ;
 486+ 8ACA              ;   11/04/23
 487+ 8ACA              ;
 488+ 8ACA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8ACA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8ACA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8ACA              ;
 492+ 8ACA              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8ACA
 494+ 8ACA              Compara_coordenadas_X
 495+ 8ACA
 496+ 8ACA              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8ACA              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8ACA
 499+ 8ACA              ; Preparamos registros:
 500+ 8ACA
 501+ 8ACA 21 A1 85         ld hl,Filas+6
 502+ 8ACD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8ACE 23               inc hl
 504+ 8ACF 23               inc hl
 505+ 8AD0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8AD1 43               ld b,e
 507+ 8AD2 21 AF 85         ld hl,Filas+20
 508+ 8AD5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8AD6 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8AD9 CD E8 8C         call Guarda_coordenadas_X
 511+ 8ADC
 512+ 8ADC              ; Preparamos registros:
 513+ 8ADC
 514+ 8ADC 21 7A 84         ld hl,Amadeus_db+6
 515+ 8ADF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8AE0 23               inc hl
 517+ 8AE1 23               inc hl
 518+ 8AE2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8AE3 7B               ld a,e
 520+ 8AE4 08               ex af,af'
 521+ 8AE5 21 88 84         ld hl,Amadeus_db+20
 522+ 8AE8 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8AE9 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8AEC CD E8 8C         call Guarda_coordenadas_X
 525+ 8AEF
 526+ 8AEF              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8AEF              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8AEF
 529+ 8AEF 04               inc b
 530+ 8AF0 05               dec b
 531+ 8AF1 28 04            jr z,1F
 532+ 8AF3 06 03            ld b,3
 533+ 8AF5 18 02            jr 2F
 534+ 8AF7 06 02        1 ld b,2
 535+ 8AF9 08           2 ex af,af'
 536+ 8AFA 3C               inc a
 537+ 8AFB 3D               dec a
 538+ 8AFC 28 04            jr z,5F
 539+ 8AFE 0E 03            ld c,3
 540+ 8B00 18 02            jr 6F
 541+ 8B02 0E 02        5 ld c,2
 542+ 8B04 79           6 ld a,c
 543+ 8B05 08               ex af,af'
 544+ 8B06 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B09 1A           4 ld a,(de)
 546+ 8B0A 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B0D BE           3 cp (hl)
 548+ 8B0E 28 0E            jr z,7F
 549+ 8B10 23               inc hl
 550+ 8B11 0D               dec c
 551+ 8B12 20 F9            jr nz,3B
 552+ 8B14 13               inc de
 553+ 8B15 08               ex af,af'
 554+ 8B16 4F               ld c,a
 555+ 8B17 08               ex af,af'
 556+ 8B18 10 EF            djnz 4B
 557+ 8B1A
 558+ 8B1A              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B1A
 560+ 8B1A CD 27 8D     8 call Limpia_Coordenadas_X
 561+ 8B1D C9               ret
 562+ 8B1E
 563+ 8B1E 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 564+ 8B20 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 565+ 8B23 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 566+ 8B26 CB D6            set 2,(hl)
 567+ 8B28 18 F0            jr 8B
 568+ 8B2A
 569+ 8B2A              ; -----------------------------------------------------------------------
 570+ 8B2A              ;
 571+ 8B2A              ;   17/04/23
 572+ 8B2A              ;
 573+ 8B2A
 574+ 8B2A              Detecta_colision_nave_entidad
 575+ 8B2A
 576+ 8B2A              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 577+ 8B2A
 578+ 8B2A 2A 9D 85         ld hl,(Posicion_actual)
 579+ 8B2D CD A4 8F         call Calcula_puntero_de_impresion
 580+ 8B30
 581+ 8B30              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 582+ 8B30              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 583+ 8B30
 584+ 8B30 DD E5            push ix
 585+ 8B32 E1               pop hl
 586+ 8B33 E5               push hl
 587+ 8B34
 588+ 8B34              ; ----- ----- -----
 589+ 8B34 1E 00            ld e,0                                         ; Indica impacto.
 590+ 8B36 06 0A            ld b,10
 591+ 8B38 CD 68 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 592+ 8B3B 7B               ld a,e
 593+ 8B3C FE 05            cp 5
 594+ 8B3E 38 0E            jr c,3F
 595+ 8B40
 596+ 8B40              ; LLegados a este punto:
 597+ 8B40              ;
 598+ 8B40              ;   HAY COLISIÓN !!!!!.
 599+ 8B40              ;
 600+ 8B40              ;   .db (Impacto) de Amadeus a "1".
 601+ 8B40              ;   SET el bit3 de (Impacto2).
 602+ 8B40              ;
 603+ 8B40              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 604+ 8B40
 605+ 8B40 21 8D 84         ld hl,Amadeus_db+25
 606+ 8B43 36 01            ld (hl),1
 607+ 8B45 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 608+ 8B48 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 609+ 8B4A CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 610+ 8B4C 18 18            jr 1F
 611+ 8B4E
 612+ 8B4E              ; -----
 613+ 8B4E
 614+ 8B4E E1           3 pop hl
 615+ 8B4F CD 3F 90         call NextScan
 616+ 8B52 E5               push hl
 617+ 8B53 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 618+ 8B54 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 619+ 8B56 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 620+ 8B58 30 0C            jr nc,1F
 621+ 8B5A              ;                                                  ; _ 2º scanline si esto es así.
 622+ 8B5A 10 DC            djnz 2B
 623+ 8B5C
 624+ 8B5C              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 625+ 8B5C
 626+ 8B5C              ; LLegados a este punto:
 627+ 8B5C              ;
 628+ 8B5C              ;   NO HAY COLISIÓN !!!!!.
 629+ 8B5C              ;
 630+ 8B5C              ;   .db (Impacto) de Amadeus a "0".
 631+ 8B5C              ;   RES el bit2 de (Impacto2).
 632+ 8B5C              ;
 633+ 8B5C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8B5C              ;   Lo colocamos a "0".
 635+ 8B5C
 636+ 8B5C 21 EC 85         ld hl,Impacto2
 637+ 8B5F CB 96            res 2,(hl)
 638+ 8B61 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 639+ 8B64 36 00            ld (hl),0
 640+ 8B66
 641+ 8B66 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 642+ 8B67 C9               ret
 643+ 8B68
 644+ 8B68               ; ---------- ----------
 645+ 8B68
 646+ 8B68 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 647+ 8B69 3A 9C 85         ld a,(Columns)
 648+ 8B6C 47               ld b,a
 649+ 8B6D FD 7E 00     2 ld a,(iy)
 650+ 8B70 BE               cp (hl)
 651+ 8B71 28 01            jr z,1F
 652+ 8B73
 653+ 8B73 1C               inc e
 654+ 8B74
 655+ 8B74 23           1 inc hl
 656+ 8B75 FD 23            inc iy
 657+ 8B77 10 F4            djnz 2B
 658+ 8B79 C1               pop bc
 659+ 8B7A C9               ret
 660+ 8B7B
 661+ 8B7B              ; -------------------------------------------------------------------------------------------------------------
 662+ 8B7B              ;
 663+ 8B7B              ;   13/03/23
 664+ 8B7B              ;
 665+ 8B7B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 666+ 8B7B              ;
 667+ 8B7B              ;   DESTRUYE: HL,BC,DE y A.
 668+ 8B7B
 669+ 8B7B 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 670+ 8B7E 7E               ld a,(hl)
 671+ 8B7F A7               and a
 672+ 8B80 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 673+ 8B81
 674+ 8B81 44               ld b,h
 675+ 8B82 4D               ld c,l
 676+ 8B83 2A E5 85         ld hl,(Stack_snapshot_disparos)
 677+ 8B86 E5               push hl
 678+ 8B87 A7               and a
 679+ 8B88 ED 42            sbc hl,bc
 680+ 8B8A E5               push hl
 681+ 8B8B C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 682+ 8B8C
 683+ 8B8C E1               pop hl
 684+ 8B8D 54               ld d,h
 685+ 8B8E 5D               ld e,l
 686+ 8B8F 1B               dec de
 687+ 8B90 ED B8            lddr                                                ; Limpiamos.
 688+ 8B92
 689+ 8B92 21 60 70         ld hl,Album_de_fotos_disparos
 690+ 8B95 22 E5 85         ld (Stack_snapshot_disparos),hl
 691+ 8B98
 692+ 8B98 C9               ret
 693+ 8B99
 694+ 8B99              ; -------------------------------------------------------------------------------------------------------------
 695+ 8B99              ;
 696+ 8B99              ;   28/03/23
 697+ 8B99              ;
 698+ 8B99
 699+ 8B99 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 700+ 8B9C 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 701+ 8B9F
 702+ 8B9F CD F4 87     2 call Extrae_address
 703+ 8BA2 7E               ld a,(hl)
 704+ 8BA3 A7               and a
 705+ 8BA4 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 706+ 8BA6
 707+ 8BA6              ; ----- ----- ----- ----- ----- -----
 708+ 8BA6
 709+ 8BA6 C5               push bc
 710+ 8BA7 CD 63 8C         call foto_disparo_a_borrar
 711+ 8BAA
 712+ 8BAA              ; Existe colisión con este disparo???
 713+ 8BAA
 714+ 8BAA 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 715+ 8BAB 7E               ld a,(hl)
 716+ 8BAC 2B               dec hl
 717+ 8BAD E6 01            and 1
 718+ 8BAF 28 1D            jr z,9F
 719+ 8BB1
 720+ 8BB1              ;   En este punto:
 721+ 8BB1              ;
 722+ 8BB1              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 723+ 8BB1              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 724+ 8BB1              ;   _con la entidad).
 725+ 8BB1              ;
 726+ 8BB1              ;   Disparo_2A defw 0                                ; Control.
 727+ 8BB1              ;    defw 0                                          ; Puntero objeto.
 728+ 8BB1              ;    defw 0                                          ; Puntero de impresión.
 729+ 8BB1              ;    defw 0                                          ; Rutina de impresión.
 730+ 8BB1
 731+ 8BB1 E5               push hl
 732+ 8BB2
 733+ 8BB2 06 04            ld b,4
 734+ 8BB4 23           19 inc hl
 735+ 8BB5 10 FD            djnz 19B
 736+ 8BB7
 737+ 8BB7 CD F4 87         call Extrae_address
 738+ 8BBA CD 56 96         call Genera_coordenadas_disparo
 739+ 8BBD
 740+ 8BBD              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 741+ 8BBD
 742+ 8BBD 21 EF 85         ld hl,Coordenadas_disparo_certero
 743+ 8BC0 72               ld (hl),d
 744+ 8BC1 23               inc hl
 745+ 8BC2 73               ld (hl),e
 746+ 8BC3
 747+ 8BC3              ; Elimino el disparo de la base de datos.
 748+ 8BC3
 749+ 8BC3 E1               pop hl
 750+ 8BC4 CD DD 8C         call Elimina_disparo_de_base_de_datos
 751+ 8BC7 21 EC 85         ld hl,Impacto2
 752+ 8BCA CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 753+ 8BCC
 754+ 8BCC 18 06            jr 11F
 755+ 8BCE
 756+ 8BCE CD 8C 8C     9 call Mueve_disparo
 757+ 8BD1 CD 63 8C         call foto_disparo_a_borrar
 758+ 8BD4
 759+ 8BD4 C1           11 pop bc
 760+ 8BD5 18 04            jr 7F
 761+ 8BD7
 762+ 8BD7              ; ----- ----- ----- ----- ----- -----
 763+ 8BD7
 764+ 8BD7 ED 42        1 sbc hl,bc
 765+ 8BD9 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 766+ 8BDB
 767+ 8BDB 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 768+ 8BDE 23               inc hl
 769+ 8BDF 23               inc hl
 770+ 8BE0 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 771+ 8BE3 18 BA            jr 2B
 772+ 8BE5
 773+ 8BE5 CD BD 87     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8BE8 01 66 84         ld bc,Disparo_11
 775+ 8BEB 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 776+ 8BEE
 777+ 8BEE CD F4 87     5 call Extrae_address
 778+ 8BF1 7E               ld a,(hl)
 779+ 8BF2 A7               and a
 780+ 8BF3 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 781+ 8BF5
 782+ 8BF5              ; ----- ----- ----- ----- ----- -----
 783+ 8BF5
 784+ 8BF5 C5               push bc
 785+ 8BF6 CD 63 8C         call foto_disparo_a_borrar
 786+ 8BF9
 787+ 8BF9              ; Existe colisión con este disparo???
 788+ 8BF9
 789+ 8BF9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 790+ 8BFA 7E               ld a,(hl)
 791+ 8BFB 2B               dec hl
 792+ 8BFC E6 01            and 1
 793+ 8BFE 28 48            jr z,10F
 794+ 8C00
 795+ 8C00              ; La colisión se produce con Amadeus???
 796+ 8C00              ; Amadeus siempre tiene (Coordenada_y)="$16".
 797+ 8C00
 798+ 8C00 E5               push hl
 799+ 8C01
 800+ 8C01 06 04            ld b,4
 801+ 8C03 23           16 inc hl
 802+ 8C04 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 803+ 8C06 CD F4 87         call Extrae_address
 804+ 8C09 CD 56 96         call Genera_coordenadas_disparo
 805+ 8C0C
 806+ 8C0C 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 807+ 8C0D FE 16            cp $16
 808+ 8C0F 38 22            jr c,15F
 809+ 8C11
 810+ 8C11              ; (Colisiones en filas 16 y 17).
 811+ 8C11
 812+ 8C11 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 813+ 8C12
 814+ 8C12              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 815+ 8C12
 816+ 8C12 21 7A 84         ld hl,Amadeus_db+6
 817+ 8C15 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 818+ 8C16 23               inc hl
 819+ 8C17 23               inc hl
 820+ 8C18 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 821+ 8C19 21 88 84         ld hl,Amadeus_db+20
 822+ 8C1C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 823+ 8C1D 21 F1 85         ld hl,Coordenadas_X_Amadeus
 824+ 8C20 CD E8 8C         call Guarda_coordenadas_X
 825+ 8C23
 826+ 8C23 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 827+ 8C24
 828+ 8C24              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 829+ 8C24
 830+ 8C24 06 03            ld b,3
 831+ 8C26 21 F1 85         ld hl,Coordenadas_X_Amadeus
 832+ 8C29 7E           18 ld a,(hl)
 833+ 8C2A BA               cp d
 834+ 8C2B 20 03            jr nz,17F
 835+ 8C2D
 836+ 8C2D              ; Colisión Amadeus !!!!!!!!!!
 837+ 8C2D
 838+ 8C2D E1               pop hl
 839+ 8C2E 18 09            jr 14F
 840+ 8C30
 841+ 8C30 23           17 inc hl
 842+ 8C31 10 F6            djnz 18B
 843+ 8C33
 844+ 8C33              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 845+ 8C33              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 846+ 8C33
 847+ 8C33 E1           15 pop hl
 848+ 8C34 23               inc hl
 849+ 8C35 35               dec (hl)
 850+ 8C36 2B               dec hl
 851+ 8C37 18 0F            jr 10F
 852+ 8C39
 853+ 8C39              ; -----------------------debug
 854+ 8C39
 855+ 8C39              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 856+ 8C39              ; _ almacén de coordenadas_X de Amadeus.
 857+ 8C39
 858+ 8C39 E5           14 push hl
 859+ 8C3A CD DD 8C         call Elimina_disparo_de_base_de_datos
 860+ 8C3D 21 EC 85         ld hl,Impacto2
 861+ 8C40 CB CE            set 1,(hl)
 862+ 8C42 CD 27 8D         call Limpia_Coordenadas_X
 863+ 8C45
 864+ 8C45 E1               pop hl
 865+ 8C46 18 06            jr 12F
 866+ 8C48
 867+ 8C48 CD 8C 8C     10 call Mueve_disparo
 868+ 8C4B CD 63 8C         call foto_disparo_a_borrar
 869+ 8C4E C1           12 pop bc
 870+ 8C4F
 871+ 8C4F 18 04            jr 8F
 872+ 8C51
 873+ 8C51              ; ----- ----- ----- ----- ----- -----
 874+ 8C51
 875+ 8C51 ED 42        4 sbc hl,bc
 876+ 8C53 28 0A            jr z,6F
 877+ 8C55
 878+ 8C55 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 879+ 8C58 23               inc hl
 880+ 8C59 23               inc hl
 881+ 8C5A 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 882+ 8C5D 18 8F            jr 5B
 883+ 8C5F
 884+ 8C5F CD B6 87     6 call Inicia_Puntero_Disparo_Entidades
 885+ 8C62 C9               ret
 886+ 8C63
 887+ 8C63              ; ------------------------------------------------------------------
 888+ 8C63
 889+ 8C63              foto_disparo_a_borrar
 890+ 8C63
 891+ 8C63 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 892+ 8C64 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 893+ 8C65 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 894+ 8C66
 895+ 8C66 E5               push hl
 896+ 8C67 23               inc hl
 897+ 8C68 23               inc hl
 898+ 8C69 ED 73 DF 85      ld (Stack),sp
 899+ 8C6D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 900+ 8C6E FD E1            pop iy
 901+ 8C70 DD E1            pop ix
 902+ 8C72 E1               pop hl
 903+ 8C73 ED 7B DF 85      ld sp,(Stack)
 904+ 8C77 3A D6 85         ld a,(Ctrl_1)
 905+ 8C7A CB C7            set 0,a
 906+ 8C7C 32 D6 85         ld (Ctrl_1),a
 907+ 8C7F CD A0 7F         call Guarda_foto_registros
 908+ 8C82 3A D6 85         ld a,(Ctrl_1)
 909+ 8C85 CB 87            res 0,a
 910+ 8C87 32 D6 85         ld (Ctrl_1),a
 911+ 8C8A E1               pop hl
 912+ 8C8B C9               ret
 913+ 8C8C
 914+ 8C8C E5           Mueve_disparo push hl
 915+ 8C8D 7E               ld a,(hl)
 916+ 8C8E 06 04            ld b,4
 917+ 8C90 23           1 inc hl
 918+ 8C91 10 FD            djnz 1B
 919+ 8C93
 920+ 8C93              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 921+ 8C93
 922+ 8C93 CD F4 87         call Extrae_address
 923+ 8C96
 924+ 8C96 E6 01            and 1
 925+ 8C98 28 2A            jr z,2F
 926+ 8C9A
 927+ 8C9A              ; Disparo hacia arriba, (Amadeus).
 928+ 8C9A
 929+ 8C9A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 930+ 8C9A              ; _ de la dificultad.
 931+ 8C9A
 932+ 8C9A CD 4E 90         call PreviousScan
 933+ 8C9D CD 4E 90         call PreviousScan
 934+ 8CA0 CD 4E 90         call PreviousScan
 935+ 8CA3
 936+ 8CA3              ; Detecta si el disparo de Amadeus sale de pantalla:
 937+ 8CA3
 938+ 8CA3 7C               ld a,h
 939+ 8CA4 FE 40            cp $40
 940+ 8CA6 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 941+ 8CA8
 942+ 8CA8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 943+ 8CA8
 944+ 8CA8 EB               ex de,hl
 945+ 8CA9 06 04            ld b,4
 946+ 8CAB 2B           6 dec hl
 947+ 8CAC 10 FD            djnz 6B
 948+ 8CAE
 949+ 8CAE CD DD 8C         call Elimina_disparo_de_base_de_datos
 950+ 8CB1
 951+ 8CB1 18 0C            jr 4F
 952+ 8CB3
 953+ 8CB3              ; Se ha desplazado la bala, compruebo colisión.
 954+ 8CB3
 955+ 8CB3 D5           3 push de
 956+ 8CB4 C5               push bc
 957+ 8CB5 CD 99 8A         call Comprueba_Colision
 958+ 8CB8 78               ld a,b
 959+ 8CB9 C1               pop bc
 960+ 8CBA D1               pop de
 961+ 8CBB
 962+ 8CBB EB               ex de,hl
 963+ 8CBC
 964+ 8CBC 73               ld (hl),e
 965+ 8CBD 23               inc hl
 966+ 8CBE 72               ld (hl),d
 967+ 8CBF
 968+ 8CBF E1           4 pop hl
 969+ 8CC0 23               inc hl
 970+ 8CC1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 971+ 8CC2 2B               dec hl
 972+ 8CC3 C9               ret
 973+ 8CC4
 974+ 8CC4              ; Disparo hacia abajo, (Entidad).
 975+ 8CC4
 976+ 8CC4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 977+ 8CC4              ; _ de la dificultad.
 978+ 8CC4
 979+ 8CC4 CD 3F 90     2 call NextScan
 980+ 8CC7 CD 3F 90         call NextScan
 981+ 8CCA CD 3F 90         call NextScan
 982+ 8CCD
 983+ 8CCD              ; Detecta si el disparo de la entidad sale de la pantalla.
 984+ 8CCD
 985+ 8CCD 7C               ld a,h
 986+ 8CCE FE 58            cp $58
 987+ 8CD0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 988+ 8CD2
 989+ 8CD2 EB               ex de,hl
 990+ 8CD3 06 04            ld b,4
 991+ 8CD5 2B           5 dec hl
 992+ 8CD6 10 FD            djnz 5B
 993+ 8CD8
 994+ 8CD8 CD DD 8C         call Elimina_disparo_de_base_de_datos
 995+ 8CDB
 996+ 8CDB 18 E2            jr 4B
 997+ 8CDD
 998+ 8CDD              ; HL apunta al primer byte de la base de datos del disparo.
 999+ 8CDD
1000+ 8CDD 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1001+ 8CE0 AF               xor a
1002+ 8CE1 77               ld (hl),a
1003+ 8CE2 54               ld d,h
1004+ 8CE3 5D               ld e,l
1005+ 8CE4 13               inc de
1006+ 8CE5 ED B0            ldir
1007+ 8CE7 C9               ret
1008+ 8CE8
1009+ 8CE8              ; -----------------------------------------------------------------
1010+ 8CE8              ;
1011+ 8CE8              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1012+ 8CE8              ;
1013+ 8CE8              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1014+ 8CE8              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1015+ 8CE8              ;
1016+ 8CE8              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1017+ 8CE8              ;
1018+ 8CE8              ;   INPUTS:
1019+ 8CE8              ;
1020+ 8CE8              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1021+ 8CE8              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1022+ 8CE8              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1023+ 8CE8
1024+ 8CE8              ;   MODIFICA: A, HL, DE y C
1025+ 8CE8
1026+ 8CE8 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1027+ 8CE9 79               ld a,c
1028+ 8CEA E6 01            and 1
1029+ 8CEC 20 03            jr nz,1F
1030+ 8CEE 14               inc d
1031+ 8CEF 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1032+ 8CF1
1033+ 8CF1              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1034+ 8CF1              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8CF1
1036+ 8CF1 15           1 dec d
1037+ 8CF2 23           2 inc hl
1038+ 8CF3 72               ld (hl),d
1039+ 8CF4
1040+ 8CF4 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1041+ 8CF5 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1042+ 8CF6 C8               ret z
1043+ 8CF7
1044+ 8CF7 AF               xor a
1045+ 8CF8 5F               ld e,a
1046+ 8CF9 18 ED            jr Guarda_coordenadas_X
1047+ 8CFB
1048+ 8CFB              ; -----------------------------------------------------------------
1049+ 8CFB              ;
1050+ 8CFB              ;   12/04/23
1051+ 8CFB              ;
1052+ 8CFB
1053+ 8CFB 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1054+ 8CFE A7               and a
1055+ 8CFF C8               ret z
1056+ 8D00
1057+ 8D00 FE 04            cp 4
1058+ 8D02 20 09            jr nz,1F
1059+ 8D04
1060+ 8D04
1061+ 8D04              ; La colisión se produce por contacto entre Amadeus y una entidad.
1062+ 8D04
1063+ 8D04 CD 2A 8B         call Detecta_colision_nave_entidad
1064+ 8D07
1065+ 8D07 21 EC 85         ld hl,Impacto2
1066+ 8D0A CB 5E            bit 3,(hl)
1067+ 8D0C C0               ret nz                                               ; Existe colisión, RET.
1068+ 8D0D
1069+ 8D0D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1070+ 8D0D              ; Primero analizamos si algún disparo impacta en Amadeus.
1071+ 8D0D
1072+ 8D0D 21 EC 85     1 ld hl,Impacto2
1073+ 8D10 CB 4E            bit 1,(hl)
1074+ 8D12 28 07            jr z,2F
1075+ 8D14
1076+ 8D14 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1077+ 8D17 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1078+ 8D19 18 0B            jr 3F
1079+ 8D1B
1080+ 8D1B 21 EC 85     2 ld hl,Impacto2
1081+ 8D1E CB 46            bit 0,(hl)
1082+ 8D20 C8               ret z
1083+ 8D21
1084+ 8D21              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1085+ 8D21
1086+ 8D21 21 D6 85         ld hl,Ctrl_1
1087+ 8D24 CB D6            set 2,(hl)
1088+ 8D26
1089+ 8D26 C9           3 ret
1090+ 8D27
1091+ 8D27              ; -----------------------------------------------------------------
1092+ 8D27              ;
1093+ 8D27              ;   16/04/23
1094+ 8D27              ;
1095+ 8D27
1096+ 8D27 AF           Limpia_Coordenadas_X xor a
1097+ 8D28 06 06            ld b,6
1098+ 8D2A 21 F1 85         ld hl,Coordenadas_X_Amadeus
1099+ 8D2D 77           1 ld (hl),a
1100+ 8D2E 23               inc hl
1101+ 8D2F 10 FC            djnz 1B
1102+ 8D31 C9               ret
1103+ 8D32
1104+ 8D32              ; -----------------------------------------------------------------
1105+ 8D32              ;
1106+ 8D32              ;   25/04/23
1107+ 8D32              ;
1108+ 8D32
1109+ 8D32              Determina_resultado_comparativa
1110+ 8D32
1111+ 8D32 7C               ld a,h
1112+ 8D33 06 00            ld b,0
1113+ 8D35
1114+ 8D35 CD 4D 8D         call Compara_cositas
1115+ 8D38 04               inc b
1116+ 8D39 05               dec b
1117+ 8D3A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1118+ 8D3B
1119+ 8D3B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1120+ 8D3C 06 00            ld b,0
1121+ 8D3E FE 02            cp $02
1122+ 8D40 28 09            jr z,1F
1123+ 8D42 FE FE            cp $fe
1124+ 8D44 28 05            jr z,1F
1125+ 8D46
1126+ 8D46 CD 4D 8D         call Compara_cositas
1127+ 8D49 18 01            jr 2F
1128+ 8D4B
1129+ 8D4B 04           1 inc b
1130+ 8D4C C9           2 ret
1131+ 8D4D
1132+ 8D4D A7           Compara_cositas and a
1133+ 8D4E 28 07            jr z,1F
1134+ 8D50 FE FF            cp $ff
1135+ 8D52 28 03            jr z,1F
1136+ 8D54 FE 01            cp $01
1137+ 8D56 C0               ret nz
1138+ 8D57 04           1 inc b
1139+ 8D58 C9               ret
1140+ 8D59
# file closed: Disparo.asm
 993  8D59              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D59              ; ******************************************************************************************************************************************************************************************
   2+ 8D59              ;
   3+ 8D59              ; 01/23
   4+ 8D59              ;
   5+ 8D59              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D59
   7+ 8D59 CD 33 90     Draw call Prepara_draw
   8+ 8D5C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D5D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D5E 28 05        	jr z,2F
  11+ 8D60
  12+ 8D60 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D63 18 0C        	jr 1F
  14+ 8D65 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D68 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D6B CD FA 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D6E              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D6E CD 79 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D71 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D74 CB 6F        	bit 5,a
  21+ 8D76 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D78
  23+ 8D78 CD 90 8D     	call Comprueba_limite_horizontal
  24+ 8D7B CD 20 8E     	call Comprueba_limite_vertical
  25+ 8D7E
  26+ 8D7E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D7E
  28+ 8D7E CD 6D 8F     3 call calcula_CColumnass
  29+ 8D81 CD A4 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D84 CD F9 8F     	call Define_rutina_de_impresion
  31+ 8D87
  32+ 8D87 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D8A CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8D8C 32 C9 85     	ld (Ctrl_0),a
  35+ 8D8F
  36+ 8D8F C9           	ret
  37+ 8D90
  38+ 8D90              ; *******************************************************************************************************************************************************************************************
  39+ 8D90              ;	21/01/23
  40+ 8D90              ;
  41+ 8D90              ; 	Comprueba_limite_horizontal.
  42+ 8D90              ;
  43+ 8D90              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8D90              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8D90              ;
  46+ 8D90              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8D90              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8D90              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8D90              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8D90
  51+ 8D90
  52+ 8D90
  53+ 8D90 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8D93 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8D95 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8D97 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8D99 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8D9C 18 09            jr 6F
  59+ 8D9E CB 5F        1 bit 3,a
  60+ 8DA0 28 0A            jr z,2F
  61+ 8DA2 E6 F7            and $f7
  62+ 8DA4 32 C9 85         ld (Ctrl_0),a
  63+ 8DA7 CD FA 8E     6 call Inicializacion
  64+ 8DAA 18 5B            jr 5F
  65+ 8DAC E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DAD
  67+ 8DAD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DAD              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DAD
  70+ 8DAD EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DAE 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DB1 CD FF 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DB4 67           	ld h,a
  74+ 8DB5 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DB6 CD FF 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DB9 67           	ld h,a
  77+ 8DBA A7           	and a
  78+ 8DBB ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DBD 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DBE 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DC1 FE 02        	cp 2
  82+ 8DC3 38 1E        	jr c,3F
  83+ 8DC5 28 1C        	jr z,3F
  84+ 8DC7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DC8 28 23            jr z,7F
  86+ 8DCA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DCC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DCE E1           	pop hl
  89+ 8DCF
  90+ 8DCF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DCF              ; _para indicar con E="2" en caso necesario.
  92+ 8DCF
  93+ 8DCF E5               push hl
  94+ 8DD0 C5               push bc
  95+ 8DD1 CD FF 92     	call calcula_tercio
  96+ 8DD4 FE 01        	cp 1
  97+ 8DD6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DD8 CD 08 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8DDB 28 26            jr z,9F
 100+ 8DDD 38 24            jr c,9F
 101+ 8DDF 1E 00        11 ld e,0
 102+ 8DE1 18 22            jr 8F
 103+ 8DE3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8DE4 28 07        	jr z, 7F
 105+ 8DE6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8DE8 1E 00         	ld e,0
 107+ 8DEA E1           	pop hl
 108+ 8DEB 18 04        	jr 4F
 109+ 8DED 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8DEF 18 15            jr 10F
 111+ 8DF1
 112+ 8DF1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8DF1              ; _para indicar con E="2" en caso necesario.
 114+ 8DF1
 115+ 8DF1 E5           4 push hl
 116+ 8DF2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8DF3 CD FF 92     	call calcula_tercio
 118+ 8DF6 FE 01        	cp 1
 119+ 8DF8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8DFA CD 08 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8DFD 28 04            jr z,9F
 122+ 8DFF 30 02            jr nc,9F
 123+ 8E01 18 02        	jr 8F
 124+ 8E03 1E 02        9 ld e,2
 125+ 8E05 C1           8 pop bc
 126+ 8E06 E1           10 pop hl
 127+ 8E07 C9           5 ret
 128+ 8E08
 129+ 8E08              ; --------------------
 130+ 8E08              ;
 131+ 8E08              ; 25/08/22
 132+ 8E08
 133+ 8E08 CD FF 92     Comprueba_centro call calcula_tercio
 134+ 8E0B 67               ld h,a
 135+ 8E0C 08           	ex af,af
 136+ 8E0D FE 02        	cp 2
 137+ 8E0F 38 07        	jr c,1F
 138+ 8E11 28 05        	jr z,1F
 139+ 8E13 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E16 18 03        	jr 2F
 141+ 8E18 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E1B 08           2 ex af,af
 143+ 8E1C A7               and a
 144+ 8E1D ED 42            sbc hl,bc
 145+ 8E1F C9               ret
 146+ 8E20
 147+ 8E20              ; *********************************************************************************************************************************************************************************************
 148+ 8E20              ;
 149+ 8E20              ;   16/8/22
 150+ 8E20              ;
 151+ 8E20              ;	Comprueba_limite_vertical
 152+ 8E20              ;
 153+ 8E20              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E20              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E20              ;
 156+ 8E20
 157+ 8E20 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E23 7D           	ld a,l
 159+ 8E24 E6 1F        	and $1F
 160+ 8E26 57           	ld d,a
 161+ 8E27 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E2A BA           	cp d 											; Límite - Posición.
 163+ 8E2B 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E2C 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E2F CB 47        	bit 0,a
 166+ 8E31 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E33
 168+ 8E33              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E33
 170+ 8E33 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E34 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E36
 173+ 8E36              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E36              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E36
 176+ 8E36 3A A1 85         ld a,(Coordenada_X)
 177+ 8E39 16 0F            ld d,Centro_izquierda
 178+ 8E3B A7               and a
 179+ 8E3C 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E3D 28 1E            jr z,3F
 181+ 8E3F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E41              ;                                                    ; _salimos sin modificar nada.
 183+ 8E41 18 0E            jr 2F
 184+ 8E43 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E44 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E46
 187+ 8E46              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E46              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E46
 190+ 8E46 3A A1 85         ld a,(Coordenada_X)
 191+ 8E49 16 10            ld d,Centro_derecha
 192+ 8E4B A7               and a
 193+ 8E4C 92               sub d
 194+ 8E4D 28 0E            jr z,3F
 195+ 8E4F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E51              ;                                                    ; _salimos sin modificar nada.
 197+ 8E51 CB 43        2 bit 0,e
 198+ 8E53 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E55 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E56 CD EA 8E         call Modificaccionne
 201+ 8E59 C1           	pop bc
 202+ 8E5A CD FA 8E         call Inicializacion
 203+ 8E5D C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E5E
 205+ 8E5E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E5E
 207+ 8E5E C5           4 push bc
 208+ 8E5F 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E62 0A           	ld a,(bc)
 210+ 8E63 3D           	dec a
 211+ 8E64 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E65 7D           	ld a,l
 213+ 8E66 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E67 CB 47        	bit 0,a
 215+ 8E69 28 03        	jr z,5F
 216+ 8E6B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E6C 18 2E        	jr 7F
 218+ 8E6E
 219+ 8E6E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E6E
 221+ 8E6E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E6F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E70 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E73 CB 4F        	bit 1,a
 225+ 8E75 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E77 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E78
 228+ 8E78              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E78
 230+ 8E78 1C               inc e
 231+ 8E79 1D               dec e
 232+ 8E7A 20 07            jr nz,12F
 233+ 8E7C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E7D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E7E 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E81 18 44        13 jr 9F
 237+ 8E83 CB 43        12 bit 0,e
 238+ 8E85 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E87              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E87 C1           	pop bc
 241+ 8E88 18 D3        	jr 3B
 242+ 8E8A 80           14 add b
 243+ 8E8B 6F               ld l,a
 244+ 8E8C 22 9D 85     	ld (Posicion_actual),hl
 245+ 8E8F CD EA 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8E92 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8E94 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8E96 32 C9 85         ld (Ctrl_0),a
 249+ 8E99 F1           	pop af
 250+ 8E9A 18 2B        	jr 9F
 251+ 8E9C
 252+ 8E9C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8E9C
 254+ 8E9C F5           7 push af
 255+ 8E9D 3A C9 85     	ld a,(Ctrl_0)
 256+ 8EA0 CB 47        	bit 0,a
 257+ 8EA2 20 1D        	jr nz,8F
 258+ 8EA4 F1           	pop af
 259+ 8EA5
 260+ 8EA5              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8EA5
 262+ 8EA5 1C           	inc e
 263+ 8EA6 1D               dec e
 264+ 8EA7 20 07            jr nz,10F
 265+ 8EA9 90           	sub b
 266+ 8EAA 6F               ld l,a
 267+ 8EAB 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EAE 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EB0              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EB0 CB 43        10 bit 0,e
 271+ 8EB2 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EB4              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EB4 C1           	pop bc
 274+ 8EB5 18 A6        	jr 3B
 275+ 8EB7 90           16 sub b
 276+ 8EB8 6F               ld l,a
 277+ 8EB9 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EBC CD EA 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EBF 18 06            jr 9F
 280+ 8EC1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EC3 32 C9 85         ld (Ctrl_0),a
 282+ 8EC6 F1           	pop af
 283+ 8EC7 C1           9 pop bc
 284+ 8EC8 1E 00        	ld e,0
 285+ 8ECA CD FA 8E         call Inicializacion
 286+ 8ECD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8ECE 08           	ex af,af
 288+ 8ECF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8ED0 18 8B            jr 3B
 290+ 8ED2
 291+ 8ED2              ; --------------------
 292+ 8ED2
 293+ 8ED2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8ED4 CD 4E 90     1 call PreviousScan
 295+ 8ED7 10 FB            djnz 1B
 296+ 8ED9 22 9D 85     	ld (Posicion_actual),hl
 297+ 8EDC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8EDD C9           	ret
 299+ 8EDE
 300+ 8EDE              ; --------------------
 301+ 8EDE
 302+ 8EDE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8EE0 CD 3F 90     1 call NextScan
 304+ 8EE3 10 FB            djnz 1B
 305+ 8EE5 22 9D 85     	ld (Posicion_actual),hl
 306+ 8EE8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8EE9 C9           	ret
 308+ 8EEA
 309+ 8EEA              ; --------------------
 310+ 8EEA              ;
 311+ 8EEA              ;	22/01/23
 312+ 8EEA              ;
 313+ 8EEA              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8EEA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8EEA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8EEA
 317+ 8EEA
 318+ 8EEA              Modificaccionne
 319+ 8EEA
 320+ 8EEA 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8EED FE 02        	cp 2
 322+ 8EEF CC D2 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8EF2 DC D2 8E         call c,Modifica_Pos_actual
 324+ 8EF5 C8           	ret z
 325+ 8EF6 CD DE 8E         call Modifica_Pos_actual2
 326+ 8EF9 C9               ret
 327+ 8EFA
 328+ 8EFA              ; *************************************************************************************************************************************************************************************************
 329+ 8EFA              ;
 330+ 8EFA              ;	13/8/22
 331+ 8EFA              ;
 332+ 8EFA              ;	Inicializacion
 333+ 8EFA              ;
 334+ 8EFA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8EFA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8EFA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8EFA              ;
 338+ 8EFA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8EFA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8EFA              ;	_ desaparece/aparece.
 341+ 8EFA
 342+ 8EFA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8EFA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8EFA              ;
 345+ 8EFA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8EFA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8EFA              ; 		   [E] ="0"
 348+ 8EFA
 349+ 8EFA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8EFA
 351+ 8EFA CD FF 92     Inicializacion call calcula_tercio
 352+ 8EFD 28 36        	jr z,primit
 353+ 8EFF E6 02        	and 2
 354+ 8F01 20 07        	jr nz,segmit
 355+ 8F03 7D           	ld a,l
 356+ 8F04 FE 7F        	cp $7f
 357+ 8F06 38 2D        	jr c,primit
 358+ 8F08 28 2B        	jr z,primit
 359+ 8F0A CD 67 8F     segmit call column
 360+ 8F0D 38 13        	jr c,tercuad
 361+ 8F0F 3E 04        cuarcuad ld a,4
 362+ 8F11 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F14 21 20 48     	ld hl,$4820
 364+ 8F17 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F1A 21 D5 85     	ld hl,Limite_vertical
 366+ 8F1D 36 0D        	ld (hl),$0d
 367+ 8F1F 08           	ex af,af
 368+ 8F20 18 3C        	jr 1F
 369+ 8F22              tercuad
 370+ 8F22 3E 03        	ld a,3
 371+ 8F24 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F27 21 20 48     	ld hl,$4820
 373+ 8F2A 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F2D 21 D5 85     	ld hl,Limite_vertical
 375+ 8F30 36 12        	ld (hl),$12
 376+ 8F32 08           	ex af,af
 377+ 8F33 18 29        	jr 1F
 378+ 8F35 CD 67 8F     primit call column
 379+ 8F38 38 13        	jr c, primcuad
 380+ 8F3A              segcuad
 381+ 8F3A 3E 02        	ld a,2
 382+ 8F3C 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F3F 21 C0 4F     	ld hl,$4fc0
 384+ 8F42 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F45 21 D5 85     	ld hl,Limite_vertical
 386+ 8F48 36 0D        	ld (hl),$0d
 387+ 8F4A 08           	ex af,af
 388+ 8F4B 18 11        	jr 1F
 389+ 8F4D              primcuad
 390+ 8F4D 3E 01        	ld a,1
 391+ 8F4F 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F52 21 C0 4F     	ld hl,$4fc0
 393+ 8F55 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F58 21 D5 85     	ld hl,Limite_vertical
 395+ 8F5B 36 12        	ld (hl),$12
 396+ 8F5D 08           	ex af,af
 397+ 8F5E CD 2B 96     1 call Genera_coordenadas
 398+ 8F61 21 C9 85     	ld hl,Ctrl_0
 399+ 8F64 CB EE        	set 5,(hl)
 400+ 8F66 C9           	ret
 401+ 8F67
 402+ 8F67              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F67
 404+ 8F67              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F67              ;
 406+ 8F67              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F67
 408+ 8F67 7D           column ld a,l
 409+ 8F68 E6 1F        	and $1f
 410+ 8F6A FE 10         	cp $10
 411+ 8F6C C9            	ret
 412+ 8F6D
 413+ 8F6D              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F6D              ;
 415+ 8F6D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F6D              ;
 417+ 8F6D              ; 14/12/22
 418+ 8F6D              ;
 419+ 8F6D              ;	Modifica: A y BC.
 420+ 8F6D
 421+ 8F6D 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F70 E6 01        	and 1
 423+ 8F72 28 17        	jr z,1F
 424+ 8F74
 425+ 8F74              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F74
 427+ 8F74 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F77 47           	ld b,a
 429+ 8F78 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F79 79           	ld a,c
 431+ 8F7A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F7B 38 08        	jr c,2F
 433+ 8F7D 47           	ld b,a
 434+ 8F7E 79           	ld a,c
 435+ 8F7F 90           	sub b
 436+ 8F80 32 D2 85     	ld (Columnas),a
 437+ 8F83 18 1B        	jr 4F
 438+ 8F85 79           2 ld a,c
 439+ 8F86 32 D2 85     	ld (Columnas),a
 440+ 8F89 18 15        	jr 4F
 441+ 8F8B
 442+ 8F8B              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F8B
 444+ 8F8B 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8F8E 81           	add c
 446+ 8F8F 3D           	dec a
 447+ 8F90 D6 1F        	sub $1f
 448+ 8F92 38 08        	jr c,3F
 449+ 8F94 47           	ld b,a
 450+ 8F95 79           	ld a,c
 451+ 8F96 90           	sub b
 452+ 8F97 32 D2 85     	ld (Columnas),a
 453+ 8F9A 18 04        	jr 4F
 454+ 8F9C 79           3 ld a,c
 455+ 8F9D 32 D2 85     	ld (Columnas),a
 456+ 8FA0 D9           4 exx
 457+ 8FA1 4F           	ld c,a
 458+ 8FA2 D9           	exx
 459+ 8FA3 C9            ret
 460+ 8FA4
 461+ 8FA4              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FA4              ;
 463+ 8FA4              ; 7/1/23
 464+ 8FA4              ;
 465+ 8FA4              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FA4              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FA4              ;
 468+ 8FA4              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FA4              ;	DESTRUYE: HL,B Y A.
 470+ 8FA4
 471+ 8FA4 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FA7 FE 02        	cp 2
 473+ 8FA9 38 18        	jr c,1F
 474+ 8FAB 28 16        	jr z,1F
 475+ 8FAD E6 01        	and 1
 476+ 8FAF 28 0D        	jr z,3F
 477+ 8FB1
 478+ 8FB1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FB1
 480+ 8FB1 CD ED 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FB4
 482+ 8FB4 7D           9 ld a,l
 483+ 8FB5 E6 1F        	and $1f
 484+ 8FB7 28 2A        	jr z,7F
 485+ 8FB9 2B           	dec hl
 486+ 8FBA 10 F8        	djnz 9B
 487+ 8FBC 18 25        	jr 7F
 488+ 8FBE
 489+ 8FBE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FBE
 491+ 8FBE 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FC1 18 20        	jr 7F
 493+ 8FC3
 494+ 8FC3 28 14        1 jr z,2F
 495+ 8FC5
 496+ 8FC5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FC5
 498+ 8FC5 CD ED 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FC8 7D           4 ld a,l
 500+ 8FC9 E6 1F        	and $1f
 501+ 8FCB 28 03        	jr z,6F
 502+ 8FCD 2B           	dec hl
 503+ 8FCE 10 F8        	djnz 4B
 504+ 8FD0 06 0F        6 ld b,15
 505+ 8FD2 CD 4E 90     5 call PreviousScan
 506+ 8FD5 10 FB        	djnz 5B
 507+ 8FD7 18 0A        	jr 7F
 508+ 8FD9
 509+ 8FD9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FD9
 511+ 8FD9 CD ED 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8FDC 06 0F        	ld b,15
 513+ 8FDE CD 4E 90     8 call PreviousScan
 514+ 8FE1 10 FB        	djnz 8B
 515+ 8FE3
 516+ 8FE3 E5           7 push hl
 517+ 8FE4 DD E1        	pop ix
 518+ 8FE6
 519+ 8FE6 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8FE9 E5           	push hl
 521+ 8FEA FD E1        	pop iy
 522+ 8FEC
 523+ 8FEC C9           	ret
 524+ 8FED
 525+ 8FED              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8FED              ;
 527+ 8FED              ;	2/1/23
 528+ 8FED              ;
 529+ 8FED              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8FED              ;
 531+ 8FED              ;	Tras esta rutina tenemos:
 532+ 8FED              ;
 533+ 8FED              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8FED              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8FED              ;
 536+ 8FED              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8FED
 538+ 8FED 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8FF0 3A D2 85     	ld a,(Columnas)
 540+ 8FF3 3D           	dec a
 541+ 8FF4 20 01        	jr nz,1F
 542+ 8FF6 3C           	inc a
 543+ 8FF7 47           1 ld b,a
 544+ 8FF8 C9           	ret
 545+ 8FF9
 546+ 8FF9              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8FF9              ;
 548+ 8FF9              ;	3/1/23
 549+ 8FF9              ;
 550+ 8FF9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8FF9              ;
 552+ 8FF9              ;	Destruye: A,B,HL y DE.
 553+ 8FF9
 554+ 8FF9              Define_rutina_de_impresion
 555+ 8FF9
 556+ 8FF9 3A 9C 85     	ld a,(Columns)
 557+ 8FFC 47           	ld b,a
 558+ 8FFD 3A D2 85     	ld a,(Columnas)
 559+ 9000 B8           	cp b
 560+ 9001 20 0D        	jr nz,2f
 561+ 9003
 562+ 9003              ;	La entidad se imprime entera.
 563+ 9003
 564+ 9003 21 CF 90     	ld hl, Indice_entidades_completas
 565+ 9006 E6 01        	and 1
 566+ 9008 28 02        	jr z,1F
 567+ 900A
 568+ 900A 23           	inc hl
 569+ 900B 23           	inc hl
 570+ 900C
 571+ 900C CD F4 87     1 call Extrae_address
 572+ 900F C9           	ret		;	ret
 573+ 9010
 574+ 9010              ;	La entidad no se imprime entera en pantalla.
 575+ 9010
 576+ 9010 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9013 E6 01        	and 1
 578+ 9015 28 17        	jr z,3F
 579+ 9017
 580+ 9017              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9017
 582+ 9017 21 D3 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 901A 3A 9C 85     4 ld a,(Columns)
 584+ 901D E6 01        	and 1
 585+ 901F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9021
 587+ 9021 23           	inc hl
 588+ 9022 23           	inc hl
 589+ 9023
 590+ 9023 3A D2 85     	ld a,(Columnas)
 591+ 9026 E6 01        	and 1
 592+ 9028 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 902A
 594+ 902A 23           	inc hl
 595+ 902B 23           	inc hl
 596+ 902C
 597+ 902C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 902E
 599+ 902E 21 D9 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9031 18 E7        	jr 4B
 601+ 9033
 602+ 9033              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9033              ;
 604+ 9033              ;	Prepara_draw
 605+ 9033              ;
 606+ 9033              ;	Es una rutina de carga.
 607+ 9033              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9033              ;
 609+ 9033              ;	FUNCIONAMIENTO:
 610+ 9033              ;
 611+ 9033              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9033              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9033              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9033              ;
 615+ 9033              ;	DESTRUYE:
 616+ 9033              ;
 617+ 9033              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9033
 619+ 9033 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9036 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9037 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9038 4E           	ld c,(hl)
 623+ 9039 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 903C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 903E C9           	ret
 626+ 903F
 627+ 903F              ;----------------------------------------------------------------------------------------------------------------
 628+ 903F              ;
 629+ 903F              ;	5/08/22
 630+ 903F              ;
 631+ 903F              ;   NextScan.
 632+ 903F              ;
 633+ 903F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 903F              ;
 635+ 903F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 903F              ;
 637+ 903F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 903F              ;
 639+ 903F              ;       DESTRUIDOS: AF y HL !!!
 640+ 903F              ;
 641+ 903F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 903F              ;
 643+ 903F
 644+ 903F 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9040 7C               ld a,h
 646+ 9041 E6 07            and 7
 647+ 9043 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9044
 649+ 9044 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9045 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9047 6F               ld l,a
 652+ 9048 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9049
 654+ 9049 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 904A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 904C 67               ld h,a
 657+ 904D C9               ret
 658+ 904E
 659+ 904E              ;----------------------------------------------------------------------------------------------------------------
 660+ 904E              ;
 661+ 904E              ;	5/08/22
 662+ 904E              ;
 663+ 904E              ;   PreviousScan.
 664+ 904E              ;
 665+ 904E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 904E              ;
 667+ 904E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 904E              ;
 669+ 904E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 904E              ;
 671+ 904E              ;       DESTRUIDOS: AF y HL !!!
 672+ 904E              ;
 673+ 904E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 904E              ;
 675+ 904E
 676+ 904E 7C           PreviousScan ld a,h
 677+ 904F 25               dec h               ; Dec H.
 678+ 9050 E6 07            and 7
 679+ 9052 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9053
 681+ 9053 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9054 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9056 6F               ld l,a
 684+ 9057 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9058
 686+ 9058 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9059 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 905B 67               ld h,a
 689+ 905C C9               ret
 690+ 905D
 691+ 905D              ; -----------------------------------------------------------------------------------
 692+ 905D              ;
 693+ 905D              ;	28/2/23
 694+ 905D              ;
 695+ 905D              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 905D              ;	Extrae fotos de Album_de_fotos.
 697+ 905D
 698+ 905D 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9060 A7           	and a
 700+ 9061 C8           	ret z
 701+ 9062 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9066 31 00 70     	ld sp,Album_de_fotos
 703+ 9069
 704+ 9069 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 906B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 906C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 906D
 708+ 906D ED 73 E1 85  	ld (Stack_2),sp
 709+ 9071 ED 7B DF 85  	ld sp,(Stack)
 710+ 9075
 711+ 9075              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9075
 713+ 9075 3E CD        	ld a,$cd
 714+ 9077 32 7F 90     	ld (Imprime),a
 715+ 907A EB           	ex de,hl
 716+ 907B 22 80 90     	ld (Imprime+1),hl
 717+ 907E EB           	ex de,hl
 718+ 907F
 719+ 907F              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 907F
 721+ 907F 00 00 00     Imprime db 0,0,0
 722+ 9082
 723+ 9082 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 9085 3D           	dec a
 725+ 9086 28 09        	jr z,1F
 726+ 9088 32 DE 85      	ld (Numero_de_malotes),a
 727+ 908B
 728+ 908B ED 7B E1 85   	ld sp,(Stack_2)
 729+ 908F 18 D8        	jr 2B
 730+ 9091
 731+ 9091 AF           1 xor a
 732+ 9092 32 E1 85     	ld (Stack_2),a
 733+ 9095 C9           	ret
 734+ 9096
 735+ 9096              ; -----------------------------------------------------------------------------------
 736+ 9096              ;
 737+ 9096              ;	28/2/23
 738+ 9096              ;
 739+ 9096              ;	Pinta los disparos generados.
 740+ 9096
 741+ 9096              Extrae_foto_disparos
 742+ 9096
 743+ 9096 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 9099 A7           	and a
 745+ 909A C8           	ret z
 746+ 909B ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 909F 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 90A2
 749+ 90A2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 90A4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 90A5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 90A6
 753+ 90A6 ED 73 E1 85  	ld (Stack_2),sp
 754+ 90AA ED 7B DF 85  	ld sp,(Stack)
 755+ 90AE
 756+ 90AE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 90AE
 758+ 90AE 3E CD        	ld a,$cd
 759+ 90B0 32 B8 90     	ld (Imprime2),a
 760+ 90B3 EB           	ex de,hl
 761+ 90B4 22 B9 90     	ld (Imprime2+1),hl
 762+ 90B7 EB           	ex de,hl
 763+ 90B8
 764+ 90B8              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 90B8
 766+ 90B8 00 00 00     Imprime2 db 0,0,0
 767+ 90BB
 768+ 90BB 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 90BE 3D           	dec a
 770+ 90BF 28 09        	jr z,1F
 771+ 90C1 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 90C4
 773+ 90C4 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 90C8 18 D8        	jr 2B
 775+ 90CA
 776+ 90CA AF           1 xor a
 777+ 90CB 32 E1 85     	ld (Stack_2),a
 778+ 90CE C9           	ret
 779+ 90CF
# file closed: Draw_XOR.asm
 994  90CF              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90CF              ;   índices de Rutinas de impresión.
   2+ 90CF
   3+ 90CF DF 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90D1 0C 91            defw Pinta_Amadeus_3x2
   5+ 90D3
   6+ 90D3 62 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90D5 02 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90D7 B6 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90D9
  10+ 90D9 8C 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 90DB 90 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 90DD 44 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 90DF
  14+ 90DF
  15+ 90DF              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 90DF              ;
  17+ 90DF              ;   12/12/22
  18+ 90DF              ;
  19+ 90DF              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 90DF              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 90DF              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 90DF              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 90DF              ;
  24+ 90DF              ;   Modifica: DE y HL.
  25+ 90DF
  26+ 90DF ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 90E3 FD F9        	ld sp,iy
  28+ 90E5 06 10            ld b,16
  29+ 90E7 D1           1 pop de
  30+ 90E8 7B               ld a,e
  31+ 90E9 AE               xor (hl)
  32+ 90EA 77           	ld (hl),a
  33+ 90EB 23           	inc hl
  34+ 90EC 7A               ld a,d
  35+ 90ED AE               xor (hl)
  36+ 90EE 77           	ld (hl),a
  37+ 90EF 2B           	dec hl
  38+ 90F0 24           	inc h
  39+ 90F1 7C               ld a,h
  40+ 90F2 E6 07            and 7
  41+ 90F4 20 0A            jr nz,2F
  42+ 90F6 7D               ld a,l
  43+ 90F7 C6 20            add a,$20
  44+ 90F9 6F               ld l,a
  45+ 90FA 38 04            jr c,2F
  46+ 90FC 7C               ld a,h
  47+ 90FD D6 08            sub 8
  48+ 90FF 67               ld h,a
  49+ 9100 7C           2 ld a,h
  50+ 9101 FE 58            cp $58
  51+ 9103 28 02            jr z,3F
  52+ 9105 10 E0            djnz 1B
  53+ 9107 ED 7B DF 85  3 ld sp,(Stack)
  54+ 910B C9           	ret
  55+ 910C
  56+ 910C ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9110 FD F9        	ld sp,iy
  58+ 9112 06 08            ld b,8
  59+ 9114 D1           1 pop de
  60+ 9115 7B               ld a,e
  61+ 9116 AE               xor (hl)
  62+ 9117 77           	ld (hl),a
  63+ 9118 23           	inc hl
  64+ 9119 7A               ld a,d
  65+ 911A AE               xor (hl)
  66+ 911B 77           	ld (hl),a
  67+ 911C 23           	inc hl
  68+ 911D D1           	pop de
  69+ 911E 7B               ld a,e
  70+ 911F AE               xor (hl)
  71+ 9120 77           	ld (hl),a
  72+ 9121 2B           	dec hl
  73+ 9122 2B           	dec hl
  74+ 9123 24           	inc h
  75+ 9124 7C               ld a,h
  76+ 9125 E6 07            and 7
  77+ 9127 20 0A            jr nz,2F
  78+ 9129 7D               ld a,l
  79+ 912A C6 20            add a,$20
  80+ 912C 6F               ld l,a
  81+ 912D 38 04            jr c,2F
  82+ 912F 7C               ld a,h
  83+ 9130 D6 08            sub 8
  84+ 9132 67               ld h,a
  85+ 9133 7C           2 ld a,h
  86+ 9134 FE 58            cp $58
  87+ 9136 28 25            jr z,4F
  88+ 9138 7A               ld a,d
  89+ 9139 AE               xor (hl)
  90+ 913A 77               ld (hl),a
  91+ 913B D1           	pop de
  92+ 913C 23           	inc hl
  93+ 913D 7B               ld a,e
  94+ 913E AE               xor (hl)
  95+ 913F 77           	ld (hl),a
  96+ 9140 23           	inc hl
  97+ 9141 7A               ld a,d
  98+ 9142 AE               xor (hl)
  99+ 9143 77           	ld (hl),a
 100+ 9144 2B           	dec hl
 101+ 9145 2B           	dec hl
 102+ 9146 24           	inc h
 103+ 9147 7C               ld a,h
 104+ 9148 E6 07            and 7
 105+ 914A 20 0A            jr nz,3F
 106+ 914C 7D               ld a,l
 107+ 914D C6 20            add a,$20
 108+ 914F 6F               ld l,a
 109+ 9150 38 04            jr c,3F
 110+ 9152 7C               ld a,h
 111+ 9153 D6 08            sub 8
 112+ 9155 67               ld h,a
 113+ 9156 7C           3 ld a,h
 114+ 9157 FE 58            cp $58
 115+ 9159 28 02            jr z,4F
 116+ 915B 10 B7            djnz 1B
 117+ 915D ED 7B DF 85  4 ld sp,(Stack)
 118+ 9161 C9           	ret
 119+ 9162
 120+ 9162              ; ---------------------------------------------------
 121+ 9162
 122+ 9162 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9166 FD F9        	ld sp,iy
 124+ 9168
 125+ 9168              ; >>>
 126+ 9168
 127+ 9168 06 10            ld b,16
 128+ 916A D1           1 pop de
 129+ 916B 7A           	ld a,d
 130+ 916C AE           	xor (hl)
 131+ 916D 77           	ld (hl),a
 132+ 916E 24           	inc h
 133+ 916F 7C               ld a,h
 134+ 9170 E6 07            and 7
 135+ 9172 20 0C            jr nz,2F
 136+ 9174 7D               ld a,l
 137+ 9175 C6 20            add a,$20
 138+ 9177 6F               ld l,a
 139+ 9178 38 06            jr c,2F
 140+ 917A 7C               ld a,h
 141+ 917B D6 08            sub 8
 142+ 917D 67               ld h,a
 143+ 917E 18 00            jr 2F
 144+ 9180 7C           2 ld a,h
 145+ 9181 FE 58            cp $58
 146+ 9183 28 02            jr z,3F
 147+ 9185 10 E3            djnz 1B
 148+ 9187 ED 7B DF 85  3 ld sp,(Stack)
 149+ 918B C9           	ret
 150+ 918C
 151+ 918C ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9190 FD F9        	ld sp,iy
 153+ 9192
 154+ 9192              ; >>>
 155+ 9192
 156+ 9192 06 10            ld b,16
 157+ 9194 D1           1 pop de
 158+ 9195 7B           	ld a,e
 159+ 9196 AE           	xor (hl)
 160+ 9197 77           	ld (hl),a
 161+ 9198 24           	inc h
 162+ 9199 7C               ld a,h
 163+ 919A E6 07            and 7
 164+ 919C 20 0C            jr nz,2F
 165+ 919E 7D               ld a,l
 166+ 919F C6 20            add a,$20
 167+ 91A1 6F               ld l,a
 168+ 91A2 38 06            jr c,2F
 169+ 91A4 7C               ld a,h
 170+ 91A5 D6 08            sub 8
 171+ 91A7 67               ld h,a
 172+ 91A8 18 00            jr 2F
 173+ 91AA 7C           2 ld a,h
 174+ 91AB FE 58            cp $58
 175+ 91AD 28 02            jr z,3F
 176+ 91AF 10 E3            djnz 1B
 177+ 91B1 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91B5 C9           	ret
 179+ 91B6
 180+ 91B6              ; ---------------------------------------------------
 181+ 91B6
 182+ 91B6 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91BA FD F9        	ld sp,iy
 184+ 91BC 06 08            ld b,8
 185+ 91BE D1           1 pop de
 186+ 91BF 7A           	ld a,d
 187+ 91C0 AE           	xor (hl)
 188+ 91C1 77           	ld (hl),a
 189+ 91C2 23           	inc hl
 190+ 91C3 D1           	pop de
 191+ 91C4 7B           	ld a,e
 192+ 91C5 AE           	xor (hl)
 193+ 91C6 77           	ld (hl),a
 194+ 91C7 2B           	dec hl
 195+ 91C8 24            	inc h
 196+ 91C9 7C               ld a,h
 197+ 91CA E6 07            and 7
 198+ 91CC 20 0A            jr nz,2F
 199+ 91CE 7D               ld a,l
 200+ 91CF C6 20            add a,$20
 201+ 91D1 6F               ld l,a
 202+ 91D2 38 04            jr c,2F
 203+ 91D4 7C               ld a,h
 204+ 91D5 D6 08            sub 8
 205+ 91D7 67               ld h,a
 206+ 91D8 7C           2 ld a,h
 207+ 91D9 FE 58            cp $58
 208+ 91DB 28 20            jr z,4F
 209+ 91DD D1               pop de
 210+ 91DE 7B           	ld a,e
 211+ 91DF AE           	xor (hl)
 212+ 91E0 77           	ld (hl),a
 213+ 91E1 23           	inc hl
 214+ 91E2 7A           	ld a,d
 215+ 91E3 AE           	xor (hl)
 216+ 91E4 77           	ld (hl),a
 217+ 91E5 2B           	dec hl
 218+ 91E6 24           	inc h
 219+ 91E7 7C               ld a,h
 220+ 91E8 E6 07            and 7
 221+ 91EA 20 0A            jr nz,3F
 222+ 91EC 7D               ld a,l
 223+ 91ED C6 20            add a,$20
 224+ 91EF 6F               ld l,a
 225+ 91F0 38 04            jr c,3F
 226+ 91F2 7C               ld a,h
 227+ 91F3 D6 08            sub 8
 228+ 91F5 67               ld h,a
 229+ 91F6 7C           3 ld a,h
 230+ 91F7 FE 58            cp $58
 231+ 91F9 28 02            jr z,4F
 232+ 91FB 10 C1            djnz 1B
 233+ 91FD ED 7B DF 85  4 ld sp,(Stack)
 234+ 9201 C9           	ret
 235+ 9202
 236+ 9202 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9206 FD F9        	ld sp,iy
 238+ 9208 06 08            ld b,8
 239+ 920A D1           1 pop de
 240+ 920B D1           	pop de
 241+ 920C 7B           	ld a,e
 242+ 920D AE           	xor (hl)
 243+ 920E 77           	ld (hl),a
 244+ 920F 24            	inc h
 245+ 9210 7C               ld a,h
 246+ 9211 E6 07            and 7
 247+ 9213 20 0A            jr nz,2F
 248+ 9215 7D               ld a,l
 249+ 9216 C6 20            add a,$20
 250+ 9218 6F               ld l,a
 251+ 9219 38 04            jr c,2F
 252+ 921B 7C               ld a,h
 253+ 921C D6 08            sub 8
 254+ 921E 67               ld h,a
 255+ 921F 7C           2 ld a,h
 256+ 9220 FE 58            cp $58
 257+ 9222 28 1B            jr z,4F
 258+ 9224 D1               pop de
 259+ 9225 7A           	ld a,d
 260+ 9226 AE           	xor (hl)
 261+ 9227 77           	ld (hl),a
 262+ 9228 24           	inc h
 263+ 9229 7C               ld a,h
 264+ 922A E6 07            and 7
 265+ 922C 20 0A            jr nz,3F
 266+ 922E 7D               ld a,l
 267+ 922F C6 20            add a,$20
 268+ 9231 6F               ld l,a
 269+ 9232 38 04            jr c,3F
 270+ 9234 7C               ld a,h
 271+ 9235 D6 08            sub 8
 272+ 9237 67               ld h,a
 273+ 9238 7C           3 ld a,h
 274+ 9239 FE 58            cp $58
 275+ 923B 28 02            jr z,4F
 276+ 923D 10 CB            djnz 1B
 277+ 923F ED 7B DF 85  4 ld sp,(Stack)
 278+ 9243 C9           	ret
 279+ 9244
 280+ 9244 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9248 FD F9        	ld sp,iy
 282+ 924A 06 08            ld b,8
 283+ 924C D1           1 pop de
 284+ 924D 7B           	ld a,e
 285+ 924E AE           	xor (hl)
 286+ 924F 77           	ld (hl),a
 287+ 9250 23           	inc hl
 288+ 9251 7A           	ld a,d
 289+ 9252 AE           	xor (hl)
 290+ 9253 77           	ld (hl),a
 291+ 9254 2B           	dec hl
 292+ 9255 24             	inc h
 293+ 9256 7C               ld a,h
 294+ 9257 E6 07            and 7
 295+ 9259 20 0A            jr nz,2F
 296+ 925B 7D               ld a,l
 297+ 925C C6 20            add a,$20
 298+ 925E 6F               ld l,a
 299+ 925F 38 04            jr c,2F
 300+ 9261 7C               ld a,h
 301+ 9262 D6 08            sub 8
 302+ 9264 67               ld h,a
 303+ 9265 7C           2 ld a,h
 304+ 9266 FE 58            cp $58
 305+ 9268 28 21            jr z,4F
 306+ 926A D1               pop de
 307+ 926B 7A           	ld a,d
 308+ 926C AE           	xor (hl)
 309+ 926D 77           	ld (hl),a
 310+ 926E 23           	inc hl
 311+ 926F D1               pop de
 312+ 9270 7B           	ld a,e
 313+ 9271 AE           	xor (hl)
 314+ 9272 77           	ld (hl),a
 315+ 9273 2B           	dec hl
 316+ 9274 24           	inc h
 317+ 9275 7C               ld a,h
 318+ 9276 E6 07            and 7
 319+ 9278 20 0A            jr nz,3F
 320+ 927A 7D               ld a,l
 321+ 927B C6 20            add a,$20
 322+ 927D 6F               ld l,a
 323+ 927E 38 04            jr c,3F
 324+ 9280 7C               ld a,h
 325+ 9281 D6 08            sub 8
 326+ 9283 67               ld h,a
 327+ 9284 7C           3 ld a,h
 328+ 9285 FE 58            cp $58
 329+ 9287 28 02            jr z,4F
 330+ 9289 10 C1            djnz 1B
 331+ 928B ED 7B DF 85  4 ld sp,(Stack)
 332+ 928F C9           	ret
 333+ 9290
 334+ 9290 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9294 FD F9        	ld sp,iy
 336+ 9296 06 08            ld b,8
 337+ 9298 D1           1 pop de
 338+ 9299 7B           	ld a,e
 339+ 929A AE           	xor (hl)
 340+ 929B 77           	ld (hl),a
 341+ 929C 24            	inc h
 342+ 929D 7C               ld a,h
 343+ 929E E6 07            and 7
 344+ 92A0 20 0A            jr nz,2F
 345+ 92A2 7D               ld a,l
 346+ 92A3 C6 20            add a,$20
 347+ 92A5 6F               ld l,a
 348+ 92A6 38 04            jr c,2F
 349+ 92A8 7C               ld a,h
 350+ 92A9 D6 08            sub 8
 351+ 92AB 67               ld h,a
 352+ 92AC 7C           2 ld a,h
 353+ 92AD FE 58            cp $58
 354+ 92AF 28 1C            jr z,4F
 355+ 92B1 D1               pop de
 356+ 92B2 7A           	ld a,d
 357+ 92B3 AE           	xor (hl)
 358+ 92B4 77           	ld (hl),a
 359+ 92B5 24           	inc h
 360+ 92B6 7C               ld a,h
 361+ 92B7 E6 07            and 7
 362+ 92B9 20 0A            jr nz,3F
 363+ 92BB 7D               ld a,l
 364+ 92BC C6 20            add a,$20
 365+ 92BE 6F               ld l,a
 366+ 92BF 38 04            jr c,3F
 367+ 92C1 7C               ld a,h
 368+ 92C2 D6 08            sub 8
 369+ 92C4 67               ld h,a
 370+ 92C5 7C           3 ld a,h
 371+ 92C6 FE 58            cp $58
 372+ 92C8 28 03            jr z,4F
 373+ 92CA D1               pop de
 374+ 92CB 10 CB            djnz 1B
 375+ 92CD ED 7B DF 85  4 ld sp,(Stack)
 376+ 92D1 C9           	ret
 377+ 92D2
 378+ 92D2              ; ---------------------------------------------------
 379+ 92D2              ;
 380+ 92D2              ;   27/02/23
 381+ 92D2              ;
 382+ 92D2              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92D2              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92D2              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92D2
 386+ 92D2 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92D6 FD F9            ld sp,iy
 388+ 92D8 06 02            ld b,2
 389+ 92DA D1           1 pop de
 390+ 92DB 7B               ld a,e
 391+ 92DC AE               xor (hl)
 392+ 92DD 77               ld (hl),a
 393+ 92DE 23               inc hl
 394+ 92DF 7A               ld a,d
 395+ 92E0 AE               xor (hl)
 396+ 92E1 77               ld (hl),a
 397+ 92E2 2B               dec hl
 398+ 92E3
 399+ 92E3 24               inc h
 400+ 92E4 7C               ld a,h
 401+ 92E5 E6 07            and 7
 402+ 92E7 20 0A            jr nz,2F
 403+ 92E9 7D               ld a,l
 404+ 92EA C6 20            add a,$20
 405+ 92EC 6F               ld l,a
 406+ 92ED 38 04            jr c,2F
 407+ 92EF 7C               ld a,h
 408+ 92F0 D6 08            sub 8
 409+ 92F2 67               ld h,a
 410+ 92F3 7C           2 ld a,h
 411+ 92F4 FE 58            cp $58
 412+ 92F6 28 02            jr z,3F
 413+ 92F8
 414+ 92F8 10 E0            djnz 1B
 415+ 92FA ED 7B DF 85  3 ld sp,(Stack)
 416+ 92FE C9               ret
 417+ 92FF
# file closed: Rutinas_de_impresion_sprites.asm
 995  92FF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 92FF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 92FF              ;
   3+ 92FF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 92FF              ;
   5+ 92FF              ; *****************************************************************************************************************************************************************************************
   6+ 92FF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 92FF
   8+ 92FF 7C           calcula_tercio ld a,h
   9+ 9300 E6 18        	and $18
  10+ 9302 CB 2F        	sra a
  11+ 9304 CB 2F        	sra a
  12+ 9306 CB 2F        	sra a
  13+ 9308 C9           	ret
  14+ 9309
# file closed: calcula_tercio.asm
 996  9309              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9309              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9309              ;
   3+ 9309              ;
   4+ 9309              ;	CLS.
   5+ 9309              ;
   6+ 9309              ;	Limpia la pantalla y define sus atributos.
   7+ 9309              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9309              ;
   9+ 9309              ;	COLORES: 0 ..... NEGRO
  10+ 9309              ;    		 1 ..... AZUL
  11+ 9309              ; 			 2 ..... ROJO
  12+ 9309              ;			 3 ..... MAGENTA
  13+ 9309              ; 			 4 ..... VERDE
  14+ 9309              ; 			 5 ..... CIAN
  15+ 9309              ;			 6 ..... AMARILLO
  16+ 9309              ; 			 7 ..... BLANCO
  17+ 9309              ;
  18+ 9309              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9309              ;
  20+ 9309              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9309
  22+ 9309
  23+ 9309 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 930C 11 01 40     	LD DE,$4001
  25+ 930F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9312 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9314 ED B0        	LDIR
  28+ 9316 01 FF 02     	LD BC,767
  29+ 9319 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 931A ED B0        	LDIR
  31+ 931C C9           	ret
  32+ 931D
# file closed: Cls.asm
 997  931D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 931D              ; ******************************************************************************************************************************************************************************************
   2+ 931D              ;
   3+ 931D              ;   22/01/23
   4+ 931D              ;
   5+ 931D              ;	Mov_down
   6+ 931D              ;
   7+ 931D              ; 	Mueve el Sprite X px hacia abajo.
   8+ 931D              ;
   9+ 931D              ;
  10+ 931D 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9320 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9322              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9322              ; 																	; _ en el caso de que no lo haya.
  14+ 9322 3A B3 85     	ld a,(Vel_down)
  15+ 9325 47           	ld b,a
  16+ 9326 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9329 CD FF 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 932C E6 02        	and 2
  19+ 932E 28 0F        	jr z,1F
  20+ 9330
  21+ 9330              ; Nos encontramos en el último tercio de pantalla.
  22+ 9330              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9330
  24+ 9330 7C           	ld a,h
  25+ 9331 FE 57        	cp $57
  26+ 9333 20 0A        	jr nz,1F
  27+ 9335 7D           	ld a,l
  28+ 9336 C6 20        	add $20
  29+ 9338 30 05        	jr nc,1F
  30+ 933A
  31+ 933A              ; ------------------------------
  32+ 933A CD 15 96     	call Reaparece_arriba
  33+ 933D              ;	call Reinicio
  34+ 933D              ; ------------------------------
  35+ 933D
  36+ 933D 18 08        	jr 3F
  37+ 933F CD 3F 90     1 call NextScan
  38+ 9342 22 9D 85     	ld (Posicion_actual),hl
  39+ 9345 10 E2            djnz 2B
  40+ 9347 CD 2B 96     3 call Genera_coordenadas
  41+ 934A C9           	ret
  42+ 934B
  43+ 934B              ; ******************************************************************************************************************************************************************************************
  44+ 934B              ;
  45+ 934B              ;   22/01/23
  46+ 934B              ;
  47+ 934B              ;	Mov_up
  48+ 934B              ;
  49+ 934B              ; 	Mueve el Sprite hacia arriba.
  50+ 934B              ;
  51+ 934B              ;
  52+ 934B 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 934E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9350              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9350              ; 																		; _ en el caso de que no lo haya.
  56+ 9350 3A B2 85     	ld a,(Vel_up)
  57+ 9353 47           	ld b,a
  58+ 9354 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9357 CD FF 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 935A A7           	and a
  61+ 935B 20 10        	jr nz,1F
  62+ 935D
  63+ 935D              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 935D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 935D
  66+ 935D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 935E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9360 20 0B            jr nz,1F
  69+ 9362 7D               ld a,l
  70+ 9363 D6 20            sub $20
  71+ 9365 30 06            jr nc,1F
  72+ 9367 25               dec h
  73+ 9368
  74+ 9368              ; -----------------------------
  75+ 9368 CD 05 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 936B              ;	call Reinicio
  77+ 936B              ; -----------------------------
  78+ 936B
  79+ 936B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 936D CD 4E 90     1 call PreviousScan
  81+ 9370 22 9D 85     	ld (Posicion_actual),hl
  82+ 9373 10 E2            djnz 3B
  83+ 9375 CD 2B 96     2 call Genera_coordenadas
  84+ 9378 C9           	ret
  85+ 9379
  86+ 9379              ; ******************************************************************************************************************************************************************************************
  87+ 9379              ;
  88+ 9379              ;	19/10/22
  89+ 9379              ;
  90+ 9379              ;	Mov_right.
  91+ 9379              ;
  92+ 9379              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9379              ;
  94+ 9379
  95+ 9379 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 937C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 937E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 937E              ; 																	; _ en el caso de que no lo haya.
  99+ 937E 3A C9 85     	ld a,(Ctrl_0)
 100+ 9381 CB 77        	bit 6,a
 101+ 9383 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9385
 103+ 9385 CD B3 95     	call Stop_Amadeus_right
 104+ 9388 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9389 18 4D        	jr 8F
 106+ 938B
 107+ 938B 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 938E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9390 20 46        	jr nz,8F
 110+ 9392
 111+ 9392 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9395 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9396 28 40        	jr z,8F
 114+ 9398
 115+ 9398              ; ---------- ---------- ----------
 116+ 9398              ;
 117+ 9398              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9398
 119+ 9398 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 939B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 939D 28 11        	jr z,1F
 122+ 939F 38 06        	jr c,6F
 123+ 93A1 FE 04        	cp 4
 124+ 93A3 28 14        	jr z,7F
 125+ 93A5 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93A7
 127+ 93A7              ; ---------- ---------- ----------
 128+ 93A7              ;
 129+ 93A7              ; Perfiles de velocidad
 130+ 93A7              ;
 131+ 93A7
 132+ 93A7 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93AA FE FE        	cp $fe
 134+ 93AC 20 2A        	jr nz,8F
 135+ 93AE 18 10        	jr 3F
 136+ 93B0 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93B3 FE FD        	cp $fd
 138+ 93B5 20 21        	jr nz,8F
 139+ 93B7 18 07        	jr 3F
 140+ 93B9 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93BC FE FB        	cp $fb
 142+ 93BE 20 18        	jr nz,8F
 143+ 93C0
 144+ 93C0              ; ---------- ---------- ----------
 145+ 93C0
 146+ 93C0              3
 147+ 93C0 CD F3 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93C3              ;	call Reinicio
 149+ 93C3
 150+ 93C3              ; ---------- ---------- ----------
 151+ 93C3              ;
 152+ 93C3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93C3
 154+ 93C3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93C5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93C6 CD DF 93     	call DESPLZ_DER
 157+ 93C9 C1           	pop bc
 158+ 93CA 10 F9        	djnz 5B
 159+ 93CC 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93CF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93D0 22 9D 85     	ld (Posicion_actual),hl
 162+ 93D3 CD 2B 96     	call Genera_coordenadas
 163+ 93D6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93D8
 165+ 93D8              ; ---------- ---------- ----------
 166+ 93D8
 167+ 93D8 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 93DB CD DF 93     	call DESPLZ_DER
 169+ 93DE C9           2 ret
 170+ 93DF
 171+ 93DF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 93DF              ;
 173+ 93DF              ;	22/9/22
 174+ 93DF              ;
 175+ 93DF
 176+ 93DF CD EE 93     DESPLZ_DER call Desplaza_derecha
 177+ 93E2 CD 3A 94         call modifica_parametros_1er_DESPLZ_2
 178+ 93E5 CD 63 94         call Ciclo_completo
 179+ 93E8 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 93EB CB FE        	set 7,(hl)
 181+ 93ED C9           	ret
 182+ 93EE
 183+ 93EE              ; ******************************************************************************************************************************************************************************************
 184+ 93EE              ;	15/02/23
 185+ 93EE              ;
 186+ 93EE
 187+ 93EE 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 93F1 47           	ld b,a
 189+ 93F2 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 93F5 23           1 inc hl
 191+ 93F6 23           	inc hl
 192+ 93F7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 93F9 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 93FC CD F4 87     	call Extrae_address
 195+ 93FF 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9402
 197+ 9402              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9402
 199+ 9402              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9402              ; Cuántos movimientos hemos hecho ??
 201+ 9402              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9402
 203+ 9402 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9405 EB           	ex de,hl
 205+ 9406 A7           	and a
 206+ 9407 ED 52        	sbc hl,de
 207+ 9409 CB 3D        	srl l
 208+ 940B 3E 08        6 ld a,8
 209+ 940D 95           	sub l
 210+ 940E 30 1E        	jr nc,3F
 211+ 9410
 212+ 9410              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9410              ; B="0".
 214+ 9410
 215+ 9410 04           4 inc b
 216+ 9411 3C           	inc a
 217+ 9412 20 FC        	jr nz,4B
 218+ 9414 78           	ld a,b
 219+ 9415 08           	ex af,af
 220+ 9416 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9419 23           5 inc hl
 222+ 941A 23           	inc hl
 223+ 941B 10 FC        	djnz 5B
 224+ 941D 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9420 CD F4 87     	call Extrae_address
 226+ 9423 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9426
 228+ 9426              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9426              ; _(Posicion_actual).
 230+ 9426
 231+ 9426 21 9D 85     	ld hl,Posicion_actual
 232+ 9429 34           	inc (hl)
 233+ 942A 08               ex af,af
 234+ 942B 6F           	ld l,a
 235+ 942C 18 DD        	jr 6B
 236+ 942E
 237+ 942E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 942E
 239+ 942E 47           3 ld b,a
 240+ 942F 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9432 23           2 inc hl
 242+ 9433 23           	inc hl
 243+ 9434 10 FC        	djnz 2B
 244+ 9436 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9439 C9           8 ret
 246+ 943A
 247+ 943A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 943A              ;
 249+ 943A              ;	24/7/22
 250+ 943A              ;
 251+ 943A              ;	modifica_parametros_1er_DESPLZ_2
 252+ 943A              ;
 253+ 943A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 943A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 943A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 943A
 257+ 943A 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 943D A7           	and a
 259+ 943E 20 1F        	jr nz,1F
 260+ 9440 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9442 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9445
 263+ 9445 21 9C 85     	ld hl,Columns
 264+ 9448 34           	inc (hl)
 265+ 9449 3A AF 85     	ld a,(Cuad_objeto)
 266+ 944C E6 01        	and 1
 267+ 944E 28 0F        	jr z,1F
 268+ 9450 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9453 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9454 22 9D 85     	ld (Posicion_actual),hl
 271+ 9457 CD 2B 96     	call Genera_coordenadas
 272+ 945A CD BF 95     	call Inc_CTRL_DESPLZ
 273+ 945D 18 03        	jr 2F
 274+ 945F CD BF 95     1 call Inc_CTRL_DESPLZ
 275+ 9462 C9           2 ret
 276+ 9463
 277+ 9463              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9463              ;
 279+ 9463              ;	24/7/22
 280+ 9463              ;
 281+ 9463              ;	Ciclo_completo.
 282+ 9463              ;
 283+ 9463              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9463              ;
 285+ 9463              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9463              ; 	Decrementamos (Columns).
 287+ 9463              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9463              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9463
 290+ 9463
 291+ 9463 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9466 FE FF        	cp $ff
 293+ 9468 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 946A E6 F0        	and $f0
 295+ 946C 20 28        	jr nz,3F
 296+ 946E
 297+ 946E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 946E
 299+ 946E 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9471 47           	ld b,a
 301+ 9472 3E F8        	ld a,$f8
 302+ 9474 80           	add b
 303+ 9475 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9478 18 1C        	jr 3F
 305+ 947A 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 947D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 947E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 947F 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9482 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9485 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9487 20 0A        	jr nz,2F
 312+ 9489 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 948C 23           	inc hl
 314+ 948D 22 9D 85     	ld (Posicion_actual),hl
 315+ 9490 CD 2B 96     	call Genera_coordenadas
 316+ 9493
 317+ 9493              ; Inicia el puntero de Sprite.
 318+ 9493
 319+ 9493 CD 0B 88     2 call Inicia_puntero_objeto_der
 320+ 9496 C9           3 ret
 321+ 9497
 322+ 9497              ; ******************************************************************************************************************************************************************************************
 323+ 9497              ;
 324+ 9497              ;	15/02/23
 325+ 9497              ;
 326+ 9497              ;	Mov_left.
 327+ 9497              ;
 328+ 9497              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9497              ;
 330+ 9497              Mov_left
 331+ 9497
 332+ 9497 21 C9 85     	ld hl,Ctrl_0
 333+ 949A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 949C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 949C              ; 																	; _ en el caso de que no lo haya.
 336+ 949C 3A C9 85     	ld a,(Ctrl_0)
 337+ 949F CB 77        	bit 6,a
 338+ 94A1 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94A3
 340+ 94A3 CD B9 95     	call Stop_Amadeus_left
 341+ 94A6 C8           	ret z
 342+ 94A7 20 4A        	jr nz,8F
 343+ 94A9
 344+ 94A9 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94AC A7           	and a
 346+ 94AD 20 44        	jr nz,8F
 347+ 94AF
 348+ 94AF 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94B2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94B3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94B5
 352+ 94B5              ; ---------- ---------- ----------
 353+ 94B5
 354+ 94B5 3A B0 85     	ld a,(Vel_left)
 355+ 94B8 FE 02        	cp 2
 356+ 94BA 28 0F        	jr z,1F
 357+ 94BC 38 04        	jr c,6F
 358+ 94BE FE 04        	cp 4
 359+ 94C0 28 12        	jr z,7F
 360+ 94C2
 361+ 94C2              ; ---------- ---------- ----------
 362+ 94C2
 363+ 94C2 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94C5 FE F8        	cp $f8
 365+ 94C7 20 2A        	jr nz,8F
 366+ 94C9 18 10        	jr 4F
 367+ 94CB 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94CE FE F9        	cp $f9
 369+ 94D0 20 21        	jr nz,8F
 370+ 94D2 18 07        	jr 4F
 371+ 94D4 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94D7 FE FB        	cp $fb
 373+ 94D9 20 18        	jr nz,8F
 374+ 94DB
 375+ 94DB              ; ---------- ---------- ----------
 376+ 94DB
 377+ 94DB              4
 378+ 94DB CD E1 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 94DE              ;	call Reinicio
 380+ 94DE
 381+ 94DE              ; ---------- ---------- ----------
 382+ 94DE
 383+ 94DE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 94E0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 94E1
 386+ 94E1              ;	ld hl,(Indice_Sprite_izq)
 387+ 94E1              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 94E1
 389+ 94E1 CD FA 94     	call DESPLZ_IZQ
 390+ 94E4 C1           	pop bc
 391+ 94E5 10 F9        	djnz 5B
 392+ 94E7 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 94EA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 94EB 22 9D 85     	ld (Posicion_actual),hl
 395+ 94EE CD 2B 96     	call Genera_coordenadas
 396+ 94F1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 94F3
 398+ 94F3              ; ---------- ---------- ----------
 399+ 94F3
 400+ 94F3              ; Movemos, no hay recolocación.
 401+ 94F3
 402+ 94F3 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 94F6 CD FA 94     	call DESPLZ_IZQ
 404+ 94F9 C9           2 ret
 405+ 94FA
 406+ 94FA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 94FA              ;
 408+ 94FA              ;	22/9/22
 409+ 94FA
 410+ 94FA              DESPLZ_IZQ
 411+ 94FA
 412+ 94FA CD 09 95     	call Desplaza_izquierda
 413+ 94FD CD 55 95         call modifica_parametros_1er_DESPLZ
 414+ 9500 CD 7D 95     	call Ciclo_completo_2
 415+ 9503 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9506 CB BE        	res 7,(hl)
 417+ 9508 C9           	ret
 418+ 9509
 419+ 9509              Desplaza_izquierda
 420+ 9509
 421+ 9509 3A B0 85     	ld a,(Vel_left)
 422+ 950C 47           	ld b,a
 423+ 950D 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9510 23           1 inc hl
 425+ 9511 23           	inc hl
 426+ 9512 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9514 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9517 CD F4 87     	call Extrae_address
 429+ 951A 22 9F 85     	ld (Puntero_objeto),hl
 430+ 951D
 431+ 951D              ; Modifica (Puntero_DESPLZ_der).
 432+ 951D
 433+ 951D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 951D              ; Cuántos movimientos hemos hecho ??
 435+ 951D              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 951D
 437+ 951D 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9520 EB           	ex de,hl
 439+ 9521 A7           	and a
 440+ 9522 ED 52        	sbc hl,de
 441+ 9524 CB 3D        	srl l
 442+ 9526 3E 08        6 ld a,8
 443+ 9528 95           	sub l
 444+ 9529 30 1E        	jr nc,3F
 445+ 952B
 446+ 952B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 952B              ; B="0".
 448+ 952B
 449+ 952B 04           4 inc b
 450+ 952C 3C           	inc a
 451+ 952D 20 FC        	jr nz,4B
 452+ 952F 78           	ld a,b
 453+ 9530 08           	ex af,af
 454+ 9531 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9534 23           5 inc hl
 456+ 9535 23           	inc hl
 457+ 9536 10 FC        	djnz 5B
 458+ 9538 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 953B CD F4 87     	call Extrae_address
 460+ 953E 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9541
 462+ 9541              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9541              ; _(Posicion_actual).
 464+ 9541
 465+ 9541 21 9D 85     	ld hl,Posicion_actual
 466+ 9544 35           	dec (hl)
 467+ 9545 08           	ex af,af
 468+ 9546 6F           	ld l,a
 469+ 9547 18 DD        	jr 6B
 470+ 9549
 471+ 9549              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9549
 473+ 9549 47           3 ld b,a
 474+ 954A 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 954D 23           2 inc hl
 476+ 954E 23           	inc hl
 477+ 954F 10 FC        	djnz 2B
 478+ 9551 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9554 C9           8 ret
 480+ 9555
 481+ 9555              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9555              ;
 483+ 9555              ;	modifica_parametros_1er_DESPLZ
 484+ 9555              ;
 485+ 9555              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9555              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9555              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9555
 489+ 9555 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9558 A7           	and a
 491+ 9559 20 1E        	jr nz,1F
 492+ 955B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 955C 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 955F 21 9C 85     	ld hl,Columns
 495+ 9562 34           	inc (hl)
 496+ 9563 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9566 E6 01        	and 1
 498+ 9568 20 0F        	jr nz,1F
 499+ 956A 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 956D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 956E 22 9D 85     	ld (Posicion_actual),hl
 502+ 9571 CD 2B 96     	call Genera_coordenadas
 503+ 9574 CD D0 95     	call Dec_CTRL_DESPLZ
 504+ 9577 18 03        	jr 2F
 505+ 9579 CD D0 95     1 call Dec_CTRL_DESPLZ
 506+ 957C C9           2 ret
 507+ 957D
 508+ 957D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 957D
 510+ 957D 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9580 FE F7        	cp $f7
 512+ 9582 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9584 30 2C        	jr nc,3F
 514+ 9586
 515+ 9586              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9586
 517+ 9586 06 00        	ld b,0
 518+ 9588 04           4 inc b
 519+ 9589 3C           	inc a
 520+ 958A FE F7        	cp $f7
 521+ 958C 20 FA        	jr nz,4B
 522+ 958E 3E FF        	ld a,$ff
 523+ 9590 90           	sub b
 524+ 9591 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 9594 18 1C        	jr 3F
 526+ 9596
 527+ 9596              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9596
 529+ 9596 21 9C 85     1 ld hl,Columns
 530+ 9599 35           	dec (hl)
 531+ 959A AF           	xor a
 532+ 959B 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 959E 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95A1 E6 01        	and 1
 535+ 95A3 28 0A        	jr z,2F
 536+ 95A5 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95A8 2B           	dec hl
 538+ 95A9 22 9D 85     	ld (Posicion_actual),hl
 539+ 95AC CD 2B 96     	call Genera_coordenadas
 540+ 95AF
 541+ 95AF              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95AF
 543+ 95AF CD 1E 88     2 call Inicia_puntero_objeto_izq
 544+ 95B2 C9           3 ret
 545+ 95B3
 546+ 95B3              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95B3              ;
 548+ 95B3              ;	19/10/22
 549+ 95B3              ;
 550+ 95B3              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95B3              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95B3
 553+ 95B3 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95B6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95B8 C9           	ret
 556+ 95B9
 557+ 95B9              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95B9              ;
 559+ 95B9              ;	19/10/22
 560+ 95B9              ;
 561+ 95B9              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95B9              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95B9
 564+ 95B9 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95BC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95BE C9           	ret
 567+ 95BF
 568+ 95BF              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95BF              ;
 570+ 95BF              ;	24/7/22
 571+ 95BF              ;
 572+ 95BF              ;	Inc_CTRL_DESPLZ
 573+ 95BF              ;
 574+ 95BF              ;
 575+ 95BF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95BF
 577+ 95BF 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95C2 3A B1 85     	ld a,(Vel_right)
 579+ 95C5 A7           	and a
 580+ 95C6 28 06        	jr z,1F
 581+ 95C8 47           	ld b,a
 582+ 95C9 34           3 inc (hl)
 583+ 95CA 10 FD        	djnz 3B
 584+ 95CC 18 01        	jr 2F
 585+ 95CE 34           1 inc (hl)
 586+ 95CF C9           2 ret
 587+ 95D0
 588+ 95D0              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95D0              ;
 590+ 95D0              ;	5/2/23
 591+ 95D0              ;
 592+ 95D0              ;	Dec_CTRL_DESPLZ
 593+ 95D0              ;
 594+ 95D0              ;
 595+ 95D0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95D0
 597+ 95D0 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95D3 3A B0 85     	ld a,(Vel_left)
 599+ 95D6 A7           	and a
 600+ 95D7 28 06        	jr z,1F
 601+ 95D9 47           	ld b,a
 602+ 95DA 35           3 dec (hl)
 603+ 95DB 10 FD        	djnz 3B
 604+ 95DD 18 01        	jr 2F
 605+ 95DF 35           1 dec (hl)
 606+ 95E0 C9           2 ret
 607+ 95E1
 608+ 95E1              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 95E1
 610+ 95E1 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 95E4 01 1F 00     	ld bc,31
 612+ 95E7 A7           	and a
 613+ 95E8 ED 4A        	adc hl,bc
 614+ 95EA 22 9D 85     	ld (Posicion_actual),hl
 615+ 95ED 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 95F0 CB C6        	set 0,(hl)
 617+ 95F2 C9           	ret
 618+ 95F3
 619+ 95F3              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 95F3
 621+ 95F3 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 95F6 01 1F 00     	ld bc,31
 623+ 95F9 A7           	and a
 624+ 95FA ED 42        	sbc hl,bc
 625+ 95FC 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 95FF 21 C9 85     	ld hl,Ctrl_0
 627+ 9602 CB CE        	set 1,(hl)
 628+ 9604 C9           	ret
 629+ 9605
 630+ 9605              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9605
 632+ 9605 24           Reaparece_abajo inc h
 633+ 9606 01 E0 17     	ld bc,$17e0
 634+ 9609 A7           	and a
 635+ 960A ED 4A        	adc hl,bc
 636+ 960C 22 9D 85     	ld (Posicion_actual),hl
 637+ 960F 21 C9 85     	ld hl,Ctrl_0
 638+ 9612 CB D6        	set 2,(hl)
 639+ 9614 C9           	ret
 640+ 9615
 641+ 9615              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9615
 643+ 9615 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9618 A7           	and a
 645+ 9619 ED 42        	sbc hl,bc
 646+ 961B 22 9D 85     	ld (Posicion_actual),hl
 647+ 961E 21 C9 85     	ld hl,Ctrl_0
 648+ 9621 CB DE        	set 3,(hl)
 649+ 9623 C9           	ret
 650+ 9624
 651+ 9624              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9624
 653+ 9624 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9627 22 9D 85     	ld (Posicion_actual),hl
 655+ 962A C9           	ret
# file closed: Direcciones.asm
 998  962B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 962B              ; ------------------------------------------------------------------------
   2+ 962B              ;
   3+ 962B              ;	02/04/23
   4+ 962B              ;
   5+ 962B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 962B              ;	Fila superior "0", Columna izquierda "0".
   7+ 962B              ;
   8+ 962B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 962B              ;
  10+ 962B              ;	Modifica: A,BC y DE.
  11+ 962B
  12+ 962B C5           Genera_coordenadas push bc
  13+ 962C E5           	push hl
  14+ 962D D5           	push de
  15+ 962E
  16+ 962E 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9631
  18+ 9631 7D           	ld a,l
  19+ 9632 E6 1F        	and $1f
  20+ 9634 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9637
  22+ 9637 CD FF 92     	call calcula_tercio
  23+ 963A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 963B
  25+ 963B 1E 00        	ld e,0
  26+ 963D 7D           	ld a,l
  27+ 963E E6 E0        	and $e0
  28+ 9640 28 01        	jr z,1F
  29+ 9642 04           	inc b
  30+ 9643
  31+ 9643 04           1 inc b
  32+ 9644 05           	dec b
  33+ 9645 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9647              ;														; _ , salimos.
  35+ 9647 1C           3 inc e
  36+ 9648 D6 20        	sub 32
  37+ 964A 20 FB        	jr nz,3B
  38+ 964C 10 F5        	djnz 1B
  39+ 964E
  40+ 964E 7B           2 ld a,e
  41+ 964F 32 A2 85     	ld (Coordenada_y),a
  42+ 9652
  43+ 9652 D1           	pop de
  44+ 9653 E1           	pop hl
  45+ 9654 C1           	pop bc
  46+ 9655
  47+ 9655 C9           	ret
  48+ 9656
  49+ 9656              ; ------------------------------------------------------------------------
  50+ 9656              ;	28/03/23
  51+ 9656              ;
  52+ 9656              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9656              ;	Fila superior "0", Columna izquierda "0".
  54+ 9656              ;
  55+ 9656              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9656              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9656              ;
  58+ 9656              ;		DE="$120d"
  59+ 9656              ;
  60+ 9656              ;		D, (Coordenada_X), Columnas, $12
  61+ 9656              ;		E, (Coordenada_y), Filas, $0d
  62+ 9656              ;
  63+ 9656              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9656
  65+ 9656              ;	Modifica: A,BC y DE.
  66+ 9656
  67+ 9656
  68+ 9656              Genera_coordenadas_disparo
  69+ 9656
  70+ 9656              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9656
  72+ 9656 7D           	ld a,l
  73+ 9657 E6 1F        	and $1f
  74+ 9659 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 965A CD FF 92     	call calcula_tercio
  76+ 965D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 965E 1E 00        	ld e,0
  78+ 9660 7D           	ld a,l
  79+ 9661 E6 E0        	and $e0
  80+ 9663 28 01        	jr z,1F
  81+ 9665 04           	inc b
  82+ 9666 1C           1 inc e
  83+ 9667 D6 20        	sub 32
  84+ 9669 20 FB        	jr nz,1B
  85+ 966B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 966D C9           	ret
  87+ 966E
# file closed: Genera_coordenadas.asm
 999  966E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 966E
   2+ 966E
   3+ 966E              ;   11/8/22
   4+ 966E              ;
   5+ 966E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 966E              ;
   7+ 966E              ;   Mov_obj.asm
   8+ 966E              ;
   9+ 966E              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 966E              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 966E              ;
  12+ 966E              ;   Codificación:
  13+ 966E              ;
  14+ 966E              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 966E
  16+ 966E              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 966E
  18+ 966E 02 40 00     Arriba db 2,%01000000,0
  19+ 9671 02 80 00     Abajo db 2,%10000000,0
  20+ 9674 02 20 00     Derecha db 2,%00100000,0
  21+ 9677 02 10 00     Izquierda db 2,%00010000,0
  22+ 967A 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 967E 60 42 60 40
  22+ 9682 63
  23+ 9683 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9687 22 A3 80 A0
  24+ 968B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 968F 84 A0 83 A0
  25+ 9693 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9697 80 A3 22 A0
  26+ 969B 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 969F 40 60 42 60
  27+ 96A3 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96A7
  29+ 96A7 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96AB 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96AF 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96B3 84 00
  32+ 96B5 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96B9 84 00
  33+ 96BB 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96BF 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96C3 1F 1F 1F 1F
  35+ 96C7 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96CB 1F 1F 1F 1F
  35+ 96CF 1F
  36+ 96D0 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96D4 2F 2F 2F 2F
  36+ 96D8 2F 2F
  37+ 96DA 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 96DE 2F 2F 00
  38+ 96E1
  39+ 96E1              ; ----- ----- ----- ----- -----
  40+ 96E1
  41+ 96E1 BF 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 96E3 BB 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 96E5 77 96        Indice_mov_Izquierda defw Izquierda
  44+ 96E7 74 96        Indice_mov_Derecha defw Derecha
  45+ 96E9 71 96        Indice_mov_Abajo defw Abajo
  46+ 96EB 6E 96        Indice_mov_Arriba defw Arriba
  47+ 96ED AB 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 96EF AF 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 96F1 A7 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 96F3 B5 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 96F5 7A 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 96F7              ; ----- ----- ----- ----- -----
  53+ 96F7
  54+ 96F7 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 96FA A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 96FB 28 02            jr z,1F
  57+ 96FD 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 96FF 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9702 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9704 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9707              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9707 2A CD 85         ld hl,(Puntero_mov)
  63+ 970A 7E               ld a,(hl)
  64+ 970B 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 970E 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 970F 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9712
  68+ 9712 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9715 A7               and a
  70+ 9716 20 0C            jr nz,12F
  71+ 9718 2A CD 85         ld hl,(Puntero_mov)
  72+ 971B 7E               ld a,(hl)
  73+ 971C A7               and a
  74+ 971D 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 971F E6 0F            and $0f
  76+ 9721 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9724              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9724 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9727 CB 7E            bit 7,(hl)
  80+ 9729 28 03            jr z,2F
  81+ 972B CD 1D 93         call Mov_down
  82+ 972E 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9731 CB 76            bit 6,(hl)
  84+ 9733 28 03            jr z,3F
  85+ 9735 CD 4B 93         call Mov_up
  86+ 9738 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 973B CB 6E            bit 5,(hl)
  88+ 973D 28 03            jr z,4F
  89+ 973F CD 79 93         call Mov_right
  90+ 9742 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9745 CB 66            bit 4,(hl)
  92+ 9747 28 03            jr z,5F
  93+ 9749 CD 97 94         call Mov_left
  94+ 974C
  95+ 974C              ; ---------- --------- --------- ---------- ----------
  96+ 974C
  97+ 974C 3A D1 85     5 ld a,(Repetimos_db)
  98+ 974F A7               and a
  99+ 9750 28 07            jr z,6F
 100+ 9752 3D               dec a
 101+ 9753 32 D1 85         ld (Repetimos_db),a
 102+ 9756 28 01            jr z,6f
 103+ 9758 C9           11 ret
 104+ 9759 21 CF 85     6 ld hl,Contador_db_mov
 105+ 975C 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 975D 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9760 23               inc hl
 108+ 9761 22 CD 85         ld (Puntero_mov),hl
 109+ 9764 18 F2            jr 11B
 110+ 9766 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9769 3A D0 85         ld a,(Incrementa_puntero)
 112+ 976C 47               ld b,a
 113+ 976D 23           8 inc hl
 114+ 976E 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9770 5E               ld e,(hl)
 116+ 9771 23               inc hl
 117+ 9772 56               ld d,(hl)
 118+ 9773 EB               ex de,hl
 119+ 9774 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9777 18 DF            jr 11B
 121+ 9779
 122+ 9779              ; ---------- --------- --------- ---------- ----------
 123+ 9779              ;
 124+ 9779              ;   11/8/22
 125+ 9779              ;
 126+ 9779              ;   Prepara_Puntero_mov
 127+ 9779
 128+ 9779 E5           Prepara_Puntero_mov push hl
 129+ 977A D5               push de
 130+ 977B 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 977E 5E               ld e,(hl)
 132+ 977F 23               inc hl
 133+ 9780 56               ld d,(hl)
 134+ 9781 EB               ex de,hl
 135+ 9782 22 CD 85         ld (Puntero_mov),hl
 136+ 9785 D1               pop de
 137+ 9786 E1               pop hl
 138+ 9787 C9               ret
 139+ 9788
 140+ 9788              ; ---------- --------- --------- ---------- ----------
 141+ 9788              ;
 142+ 9788              ;   11/8/22
 143+ 9788              ;
 144+ 9788              ;   Reinicia_el_movimiento
 145+ 9788
 146+ 9788 CD 79 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 978B AF               xor a
 148+ 978C 32 CF 85         ld (Contador_db_mov),a
 149+ 978F 32 D0 85         ld (Incrementa_puntero),a
 150+ 9792 C3 F7 96         jp Movimiento
 151+ 9795 C9               ret
 152+ 9796              ; ---------- --------- --------- ---------- ----------
 153+ 9796
 154+ 9796
 155+ 9796
 156+ 9796
 157+ 9796
 158+ 9796
 159+ 9796
 160+ 9796
 161+ 9796
 162+ 9796
 163+ 9796
 164+ 9796
 165+ 9796
 166+ 9796
 167+ 9796
 168+ 9796
 169+ 9796
 170+ 9796
# file closed: Patrones_de_mov.asm
1000  9796              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9796              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9796              ;
   3+ 9796              ;	3/1/23
   4+ 9796              ;
   5+ 9796              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9796
   7+ 9796              ;	ADC HL,SP	LD (addr),SP
   8+ 9796              ;	ADD HL,SP	LD SP,(addr)
   9+ 9796              ;	ADD IX,SP	LD SP,nn
  10+ 9796              ; 	ADD IY,SP	LD SP,HL
  11+ 9796              ;				LD SP,IX
  12+ 9796              ;	DEC SP		LD SP,IY
  13+ 9796
  14+ 9796              ;	EX (SP),HL
  15+ 9796              ;	EX (SP),IX
  16+ 9796              ;	EX (SP),IY
  17+ 9796
  18+ 9796              ;	INC SP
  19+ 9796
  20+ 9796
  21+ 9796                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
1001  7FD4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD4              ; Relojes y temporizaciones.
   2+ 7FD4
   3+ 7FD4              ; ------------------------------------------------------
   4+ 7FD4              ;
   5+ 7FD4              ;	27/04/23
   6+ 7FD4              ;
   7+ 7FD4              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD4              ;
  12+ 7FD4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD4
  15+ 7FD4              Habilita_disparos
  16+ 7FD4
  17+ 7FD4 7E           	ld a,(hl)
  18+ 7FD5 A7           	and a
  19+ 7FD6 C0           	ret nz
  20+ 7FD7
  21+ 7FD7 EB           	ex de,hl
  22+ 7FD8
  23+ 7FD8 35           	dec (hl)
  24+ 7FD9 34           	inc (hl)
  25+ 7FDA 35           	dec (hl)
  26+ 7FDB C0           	ret nz
  27+ 7FDC
  28+ 7FDC 2B           	dec hl
  29+ 7FDD 7E           	ld a,(hl)
  30+ 7FDE 23           	inc hl
  31+ 7FDF 77           	ld (hl),a
  32+ 7FE0
  33+ 7FE0 EB           	ex de,hl
  34+ 7FE1 3E 01        	ld a,1
  35+ 7FE3 77           	ld (hl),a
  36+ 7FE4 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1002  7FE5
1003  7FE5              	SAVESNA "Pruebas.sna", START
1004  7FE5
1005  7FE5
1006  7FE5
# file closed: Banco_de_pruebas.asm
