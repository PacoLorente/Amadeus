# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A0 8A     	call Frame
  15  A104
  16  A104 3A D1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
 205+ 83E8
 206+ 83E8 EE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83EA 1E 84        	defw Explosion_2x3_2
 208+ 83EC 4E 84        	defw Explosion_2x3_3
 209+ 83EE
 210+ 83EE 0D ED E0 0D  Explosion_2x3_1 DEFB $0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 210+ 83F2 ED E0 0D ED
 211+ 83F6 E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 211+ 83FA 0D ED E0 0D
 212+ 83FE ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 212+ 8402 E0 0D ED E0
 213+ 8406 0D ED E0 0D  	DEFB	$0d,$ed,$e0,$0d,$ed,$e0,$0d,$ed
 213+ 840A ED E0 0D ED
 214+ 840E E0 0D ED E0  	DEFB	$e0,$0d,$ed,$e0,$0d,$ed,$e0,$0d
 214+ 8412 0D ED E0 0D
 215+ 8416 ED E0 0D ED  	DEFB	$ed,$e0,$0d,$ed,$e0,$0d,$ed,$e0
 215+ 841A E0 0D ED E0
 216+ 841E
 217+ 841E 01 8F 80 01  Explosion_2x3_2 DEFB $01,$8f,$80,$01,$8f,$80,$01,$8f
 217+ 8422 8F 80 01 8F
 218+ 8426 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 218+ 842A 01 8F 80 01
 219+ 842E 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 219+ 8432 80 01 8F 80
 220+ 8436 01 8F 80 01  	DEFB	$01,$8f,$80,$01,$8f,$80,$01,$8f
 220+ 843A 8F 80 01 8F
 221+ 843E 80 01 8F 80  	DEFB	$80,$01,$8f,$80,$01,$8f,$80,$01
 221+ 8442 01 8F 80 01
 222+ 8446 8F F0 01 8F  	DEFB	$8f,$f0,$01,$8f,$80,$01,$8f,$80
 222+ 844A 80 01 8F 80
 223+ 844E
 224+ 844E 01 11 10 01  Explosion_2x3_3 DEFB $01,$11,$10,$01,$11,$10,$01,$11
 224+ 8452 11 10 01 11
 225+ 8456 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 225+ 845A 01 11 10 01
 226+ 845E 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 226+ 8462 10 01 11 10
 227+ 8466 01 11 10 01  	DEFB	$01,$11,$10,$01,$11,$10,$01,$11
 227+ 846A 11 10 01 11
 228+ 846E 10 01 11 10  	DEFB	$10,$01,$11,$10,$01,$11,$10,$01
 228+ 8472 01 11 10 01
 229+ 8476 11 10 01 11  	DEFB	$11,$10,$01,$11,$10,$01,$11,$10
 229+ 847A 10 01 11 10
 230+ 847E
 231+ 847E              ; ------------------------------------------
 232+ 847E
 233+ 847E 84 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8480 A4 84        	defw Explosion_2x2_2
 235+ 8482 C4 84        	defw Explosion_2x2_3
 236+ 8484
 237+ 8484 DE DE DE DE  Explosion_2x2_1 DEFB $de,$de,$de,$de,$de,$de,$de,$de
 237+ 8488 DE DE DE DE
 238+ 848C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 238+ 8490 DE DE DE DE
 239+ 8494 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 239+ 8498 DE DE DE DE
 240+ 849C DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 240+ 84A0 DE DE DE DE
 241+ 84A4
 242+ 84A4 DE DE DE DE  Explosion_2x2_2	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 242+ 84A8 DE DE DE DE
 243+ 84AC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 243+ 84B0 DE DE DE DE
 244+ 84B4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 244+ 84B8 DE DE DE DE
 245+ 84BC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 245+ 84C0 DE DE DE DE
 246+ 84C4
 247+ 84C4 DE DE DE DE  Explosion_2x2_3	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 247+ 84C8 DE DE DE DE
 248+ 84CC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 248+ 84D0 DE DE DE DE
 249+ 84D4 DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 249+ 84D8 DE DE DE DE
 250+ 84DC DE DE DE DE  	DEFB $de,$de,$de,$de,$de,$de,$de,$de
 250+ 84E0 DE DE DE DE
 251+ 84E4
# file closed: Sprites_e_indices.asm
  23  84E4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84E4
   2+ 84E4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84E4
   4+ 84E4              ; 13/05/23
   5+ 84E4
   6+ 84E4              ; Control. %00000001 00000001
   7+ 84E4              ;
   8+ 84E4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84E4              ;                    _ hacen las entidades hacia abajo.
  10+ 84E4              ;
  11+ 84E4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84E4
  13+ 84E4 EA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84E6 F2 84        	defw Disparo_2A
  15+ 84E8 FA 84        	defw Disparo_3A
  16+ 84EA
  17+ 84EA 00 00        Disparo_1A defw 0									; Control.
  18+ 84EC 00 00        	defw 0											; Puntero objeto.
  19+ 84EE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F0 00 00        	defw 0											; Rutina de impresión.
  21+ 84F2
  22+ 84F2 00 00        Disparo_2A defw 0									; Control.
  23+ 84F4 00 00        	defw 0											; Puntero objeto.
  24+ 84F6 00 00        	defw 0											; Puntero de impresión.
  25+ 84F8 00 00        	defw 0											; Rutina de impresión.
  26+ 84FA
  27+ 84FA 00 00        Disparo_3A defw 0
  28+ 84FC
  29+ 84FC 12 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 84FE 1A 85        	defw Disparo_2
  31+ 8500 22 85        	defw Disparo_3
  32+ 8502 2A 85        	defw Disparo_4
  33+ 8504 32 85        	defw Disparo_5
  34+ 8506 3A 85        	defw Disparo_6
  35+ 8508 42 85        	defw Disparo_7
  36+ 850A 4A 85        	defw Disparo_8
  37+ 850C 52 85        	defw Disparo_9
  38+ 850E 5A 85        	defw Disparo_10
  39+ 8510 62 85        	defw Disparo_11
  40+ 8512
  41+ 8512 00 00        Disparo_1 defw 0									; Control.
  42+ 8514 00 00        	defw 0											; Puntero objeto.
  43+ 8516 00 00        	defw 0											; Puntero de impresión.
  44+ 8518 00 00        	defw 0											; Rutina de impresión.
  45+ 851A
  46+ 851A 00 00        Disparo_2 defw 0									; Control.
  47+ 851C 00 00        	defw 0											; Puntero objeto.
  48+ 851E 00 00        	defw 0											; Puntero de impresión.
  49+ 8520 00 00        	defw 0											; Rutina de impresión.
  50+ 8522
  51+ 8522 00 00        Disparo_3 defw 0									; Control.
  52+ 8524 00 00        	defw 0											; Puntero objeto.
  53+ 8526 00 00        	defw 0											; Puntero de impresión.
  54+ 8528 00 00        	defw 0											; Rutina de impresión.
  55+ 852A
  56+ 852A 00 00        Disparo_4 defw 0									; Control.
  57+ 852C 00 00        	defw 0											; Puntero objeto.
  58+ 852E 00 00        	defw 0											; Puntero de impresión.
  59+ 8530 00 00        	defw 0											; Rutina de impresión.
  60+ 8532
  61+ 8532 00 00        Disparo_5 defw 0									; Control.
  62+ 8534 00 00        	defw 0											; Puntero objeto.
  63+ 8536 00 00        	defw 0											; Puntero de impresión.
  64+ 8538 00 00        	defw 0											; Rutina de impresión.
  65+ 853A
  66+ 853A 00 00        Disparo_6 defw 0									; Control.
  67+ 853C 00 00        	defw 0											; Puntero objeto.
  68+ 853E 00 00        	defw 0											; Puntero de impresión.
  69+ 8540 00 00        	defw 0											; Rutina de impresión.
  70+ 8542
  71+ 8542 00 00        Disparo_7 defw 0									; Control.
  72+ 8544 00 00        	defw 0											; Puntero objeto.
  73+ 8546 00 00        	defw 0											; Puntero de impresión.
  74+ 8548 00 00        	defw 0											; Rutina de impresión.
  75+ 854A
  76+ 854A 00 00        Disparo_8 defw 0									; Control.
  77+ 854C 00 00        	defw 0											; Puntero objeto.
  78+ 854E 00 00        	defw 0											; Puntero de impresión.
  79+ 8550 00 00        	defw 0											; Rutina de impresión.
  80+ 8552
  81+ 8552 00 00        Disparo_9 defw 0									; Control.
  82+ 8554 00 00        	defw 0											; Puntero objeto.
  83+ 8556 00 00        	defw 0											; Puntero de impresión.
  84+ 8558 00 00        	defw 0											; Rutina de impresión.
  85+ 855A
  86+ 855A 00 00        Disparo_10 defw 0									; Control.
  87+ 855C 00 00        	defw 0											; Puntero objeto.
  88+ 855E 00 00        	defw 0											; Puntero de impresión.
  89+ 8560 00 00        	defw 0											; Rutina de impresión.
  90+ 8562
  91+ 8562 00 00        Disparo_11 defw 0
  92+ 8564
  93+ 8564              ; -------------------------------------------------------------------------------------
  94+ 8564
  95+ 8564              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8564
  97+ 8564 BA 85        	defw Caja_1
  98+ 8566 F8 85        	defw Caja_2
  99+ 8568 36 86        	defw Caja_3
 100+ 856A 74 86        	defw Caja_4
 101+ 856C B2 86        	defw Caja_5
 102+ 856E F0 86        	defw Caja_6
 103+ 8570 2E 87        	defw Caja_7
 104+ 8572 6C 87        	defw Caja_8
 105+ 8574 AA 87        	defw Caja_9
 106+ 8576 E8 87        	defw Caja_10
 107+ 8578              ;	...
 108+ 8578              ;	...
 109+ 8578              ;	+ entidades ...
 110+ 8578 00 00        	defw 0
 111+ 857A 00 00        	defw 0
 112+ 857C
 113+ 857C              ; ---------- ---------- ---------- ---------- ----------
 114+ 857C
 115+ 857C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 857E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8580 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8582 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8585
 120+ 8585 05           	db %00000101									; (Attr).
 121+ 8586 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8588 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 858A
 124+ 858A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 858C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 858E
 127+ 858E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8590 04           	db 4 											; (Cuad_objeto).
 129+ 8591 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8595
 131+ 8595 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 8596
 133+ 8596 00 00        	db 0,0											; Variables_de_borrado
 134+ 8598 00 00        	defw 0											;	" " " " " " "
 135+ 859A 00 00        	defw 0											;	" " " " " " "
 136+ 859C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A0
 138+ 85A0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00        	defw 0											;	" " " " " " "
 141+ 85A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85AA
 143+ 85AA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85AD
 145+ 85AD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85B4
 148+ 85B4 00           	db 0 											; (Columnas).
 149+ 85B5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85BA
 152+ 85BA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85BA
 154+ 85BA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85BC 00 00        	defw 0											; (Posicion_actual).
 156+ 85BE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85C3
 159+ 85C3 00           	db %00000000 									; (Attr).
 160+ 85C4
 161+ 85C4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85C6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85CC
 166+ 85CC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85CE 00           	db 0											; (Cuad_objeto).
 168+ 85CF
 169+ 85CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85D3
 171+ 85D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85D4
 173+ 85D4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85D6 00 00        	defw 0											;	" " " " " " "
 175+ 85D8 00 00        	defw 0											;	" " " " " " "
 176+ 85DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85DE
 178+ 85DE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85E0 00 00        	defw 0											;	" " " " " " "
 180+ 85E2 00 00        	defw 0											;	" " " " " " "
 181+ 85E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85E8
 183+ 85E8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 85EB
 185+ 85EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 85EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 85F2
 188+ 85F2 00           	db 0 											; (Columnas).
 189+ 85F3 00 00        	defw 0											; (Limite_horizontal).
 190+ 85F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 191+ 85F8
 192+ 85F8              ; ---------- ---------- ---------- ---------- ----------
 193+ 85F8
 194+ 85F8 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 85FA 00 00        	defw 0											; (Posicion_actual).
 196+ 85FC 00 00        	defw 0 											; (Puntero_objeto).
 197+ 85FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8601
 199+ 8601 00           	db %00000000 									; (Attr).
 200+ 8602
 201+ 8602 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8604 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8606 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 8608 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Posicion_inicio).
 207+ 860C 00           	db 0											; (Cuad_objeto).
 208+ 860D
 209+ 860D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8611
 211+ 8611 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8612
 213+ 8612 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8614 00 00        	defw 0											;	" " " " " " "
 215+ 8616 00 00        	defw 0											;	" " " " " " "
 216+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 861C
 218+ 861C 00 00        	db 0,0											; Variables_de_pintado
 219+ 861E 00 00        	defw 0											;	" " " " " " "
 220+ 8620 00 00        	defw 0											;	" " " " " " "
 221+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8626
 223+ 8626 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 8629
 225+ 8629 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 862D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8630
 228+ 8630 00           	db 0 											; (Columnas).
 229+ 8631 00 00        	defw 0											; (Limite_horizontal).
 230+ 8633 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 8636
 232+ 8636              ; ---------- ---------- ---------- ---------- ----------
 233+ 8636
 234+ 8636 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8638 00 00        	defw 0											; (Posicion_actual).
 236+ 863A 00 00        	defw 0 											; (Puntero_objeto).
 237+ 863C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 863F
 239+ 863F 00           	db %00000000 									; (Attr).
 240+ 8640
 241+ 8640 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8642 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8644 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8646 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8648
 246+ 8648 00 00        	defw 0											; (Posicion_inicio).
 247+ 864A 00           	db 0											; (Cuad_objeto).
 248+ 864B
 249+ 864B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 864F
 251+ 864F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8650
 253+ 8650 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8652 00 00        	defw 0											;	" " " " " " "
 255+ 8654 00 00        	defw 0											;	" " " " " " "
 256+ 8656 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 865A
 258+ 865A 00 00        	db 0,0											; Variables_de_pintado
 259+ 865C 00 00        	defw 0											;	" " " " " " "
 260+ 865E 00 00        	defw 0											;	" " " " " " "
 261+ 8660 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8664
 263+ 8664 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8667
 265+ 8667 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 866B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 866E
 268+ 866E 00           	db 0 											; (Columnas).
 269+ 866F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8671 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 271+ 8674
 272+ 8674              ; ---------- ---------- ---------- ---------- ----------
 273+ 8674
 274+ 8674 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8676 00 00        	defw 0											; (Posicion_actual).
 276+ 8678 00 00        	defw 0 											; (Puntero_objeto).
 277+ 867A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 867D
 279+ 867D 00           	db %00000000 									; (Attr).
 280+ 867E
 281+ 867E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8680 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8682 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8684 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8686
 286+ 8686 00 00        	defw 0											; (Posicion_inicio).
 287+ 8688 00           	db 0											; (Cuad_objeto).
 288+ 8689
 289+ 8689 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 868D
 291+ 868D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 868E
 293+ 868E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8690 00 00        	defw 0											;	" " " " " " "
 295+ 8692 00 00        	defw 0											;	" " " " " " "
 296+ 8694 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8698
 298+ 8698 00 00        	db 0,0											; Variables_de_pintado
 299+ 869A 00 00        	defw 0											;	" " " " " " "
 300+ 869C 00 00        	defw 0											;	" " " " " " "
 301+ 869E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 86A2
 303+ 86A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 86A5
 305+ 86A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 86A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 86AC
 308+ 86AC 00           	db 0 											; (Columnas).
 309+ 86AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 86AF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86B2
 312+ 86B2              ; ---------- ---------- ---------- ---------- ----------
 313+ 86B2
 314+ 86B2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86B4 00 00        	defw 0											; (Posicion_actual).
 316+ 86B6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86BB
 319+ 86BB 00           	db %00000000 									; (Attr).
 320+ 86BC
 321+ 86BC 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86BE 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86C4
 326+ 86C4 00 00        	defw 0											; (Posicion_inicio).
 327+ 86C6 00           	db 0											; (Cuad_objeto).
 328+ 86C7
 329+ 86C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86CB
 331+ 86CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86CC
 333+ 86CC 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 86CE 00 00        	defw 0											;	" " " " " " "
 335+ 86D0 00 00        	defw 0											;	" " " " " " "
 336+ 86D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 86D6
 338+ 86D6 00 00        	db 0,0											; Variables_de_pintado
 339+ 86D8 00 00        	defw 0											;	" " " " " " "
 340+ 86DA 00 00        	defw 0											;	" " " " " " "
 341+ 86DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 86E0
 343+ 86E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 86E3
 345+ 86E3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 86E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 86EA
 348+ 86EA 00           	db 0 											; (Columnas).
 349+ 86EB 00 00        	defw 0											; (Limite_horizontal).
 350+ 86ED 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 351+ 86F0
 352+ 86F0              ; ---------- ---------- ---------- ---------- ----------
 353+ 86F0
 354+ 86F0 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 86F2 00 00        	defw 0											; (Posicion_actual).
 356+ 86F4 00 00        	defw 0 											; (Puntero_objeto).
 357+ 86F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 86F9
 359+ 86F9 00           	db %00000000 									; (Attr).
 360+ 86FA
 361+ 86FA 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 86FC 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 86FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 8700 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8702
 366+ 8702 00 00        	defw 0											; (Posicion_inicio).
 367+ 8704 00           	db 0											; (Cuad_objeto).
 368+ 8705
 369+ 8705 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8709
 371+ 8709 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 870A
 373+ 870A 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 870C 00 00        	defw 0											;	" " " " " " "
 375+ 870E 00 00        	defw 0											;	" " " " " " "
 376+ 8710 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8714
 378+ 8714 00 00        	db 0,0											; Variables_de_pintado
 379+ 8716 00 00        	defw 0											;	" " " " " " "
 380+ 8718 00 00        	defw 0											;	" " " " " " "
 381+ 871A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 871E
 383+ 871E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 8721
 385+ 8721 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8725 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8728
 388+ 8728 00           	db 0 											; (Columnas).
 389+ 8729 00 00        	defw 0											; (Limite_horizontal).
 390+ 872B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 391+ 872E
 392+ 872E              ; ---------- ---------- ---------- ---------- ----------
 393+ 872E
 394+ 872E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 8730 00 00        	defw 0											; (Posicion_actual).
 396+ 8732 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8734 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8737
 399+ 8737 00           	db %00000000 									; (Attr).
 400+ 8738
 401+ 8738 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 873A 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 873C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 8740
 406+ 8740 00 00        	defw 0											; (Posicion_inicio).
 407+ 8742 00           	db 0											; (Cuad_objeto).
 408+ 8743
 409+ 8743 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8747
 411+ 8747 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8748
 413+ 8748 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 874A 00 00        	defw 0											;	" " " " " " "
 415+ 874C 00 00        	defw 0											;	" " " " " " "
 416+ 874E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8752
 418+ 8752 00 00        	db 0,0											; Variables_de_pintado
 419+ 8754 00 00        	defw 0											;	" " " " " " "
 420+ 8756 00 00        	defw 0											;	" " " " " " "
 421+ 8758 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 875C
 423+ 875C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 875F
 425+ 875F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8763 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8766
 428+ 8766 00           	db 0 											; (Columnas).
 429+ 8767 00 00        	defw 0											; (Limite_horizontal).
 430+ 8769 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 431+ 876C
 432+ 876C              ; ---------- ---------- ---------- ---------- ----------
 433+ 876C
 434+ 876C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 876E 00 00        	defw 0											; (Posicion_actual).
 436+ 8770 00 00        	defw 0 											; (Puntero_objeto).
 437+ 8772 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8775
 439+ 8775 00           	db %00000000 									; (Attr).
 440+ 8776
 441+ 8776 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8778 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 877A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 877C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 877E
 446+ 877E 00 00        	defw 0											; (Posicion_inicio).
 447+ 8780 00           	db 0											; (Cuad_objeto).
 448+ 8781
 449+ 8781 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8785
 451+ 8785 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8786
 453+ 8786 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8788 00 00        	defw 0											;	" " " " " " "
 455+ 878A 00 00        	defw 0											;	" " " " " " "
 456+ 878C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 8790
 458+ 8790 00 00        	db 0,0											; Variables_de_pintado
 459+ 8792 00 00        	defw 0											;	" " " " " " "
 460+ 8794 00 00        	defw 0											;	" " " " " " "
 461+ 8796 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 879A
 463+ 879A 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 879D
 465+ 879D 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 87A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 87A4
 468+ 87A4 00           	db 0 											; (Columnas).
 469+ 87A5 00 00        	defw 0											; (Limite_horizontal).
 470+ 87A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 471+ 87AA
 472+ 87AA              ; ---------- ---------- ---------- ---------- ----------
 473+ 87AA
 474+ 87AA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 87AC 00 00        	defw 0											; (Posicion_actual).
 476+ 87AE 00 00        	defw 0 											; (Puntero_objeto).
 477+ 87B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 87B3
 479+ 87B3 00           	db %00000000 									; (Attr).
 480+ 87B4
 481+ 87B4 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 87B6 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 87B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 87BC
 486+ 87BC 00 00        	defw 0											; (Posicion_inicio).
 487+ 87BE 00           	db 0											; (Cuad_objeto).
 488+ 87BF
 489+ 87BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 87C3
 491+ 87C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 87C4
 493+ 87C4 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 87C6 00 00        	defw 0											;	" " " " " " "
 495+ 87C8 00 00        	defw 0											;	" " " " " " "
 496+ 87CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 87CE
 498+ 87CE 00 00        	db 0,0											; Variables_de_pintado
 499+ 87D0 00 00        	defw 0											;	" " " " " " "
 500+ 87D2 00 00        	defw 0											;	" " " " " " "
 501+ 87D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 87D8
 503+ 87D8 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 87DB
 505+ 87DB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 87DF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 87E2
 508+ 87E2 00           	db 0 											; (Columnas).
 509+ 87E3 00 00        	defw 0											; (Limite_horizontal).
 510+ 87E5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 511+ 87E8
 512+ 87E8              ; ---------- ---------- ---------- ---------- ----------
 513+ 87E8
 514+ 87E8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 87EA 00 00        	defw 0											; (Posicion_actual).
 516+ 87EC 00 00        	defw 0 											; (Puntero_objeto).
 517+ 87EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 87F1
 519+ 87F1 00           	db %00000000 									; (Attr).
 520+ 87F2
 521+ 87F2 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 87F4 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 87F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 87F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 87FA
 526+ 87FA 00 00        	defw 0											; (Posicion_inicio).
 527+ 87FC 00           	db 0											; (Cuad_objeto).
 528+ 87FD
 529+ 87FD 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 8801
 531+ 8801 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 8802
 533+ 8802 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 8804 00 00        	defw 0											;	" " " " " " "
 535+ 8806 00 00        	defw 0											;	" " " " " " "
 536+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 880C
 538+ 880C 00 00        	db 0,0											; Variables_de_pintado
 539+ 880E 00 00        	defw 0											;	" " " " " " "
 540+ 8810 00 00        	defw 0											;	" " " " " " "
 541+ 8812 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8816
 543+ 8816 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8819
 545+ 8819 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 881D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 8820
 548+ 8820 00           	db 0 											; (Columnas).
 549+ 8821 00 00        	defw 0											; (Limite_horizontal).
 550+ 8823 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8826
 552+ 8826              ; -------------------------------------------------------------------------------------
 553+ 8826              ;
 554+ 8826              ;	20/05/23
 555+ 8826              ;
 556+ 8826              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 8826              ;
 558+ 8826              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 8826              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 8826              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 8826              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 8826
 563+ 8826              Indice_de_entidades
 564+ 8826
 565+ 8826 30 88        	defw Entidad_1
 566+ 8828 40 88        	defw Entidad_2
 567+ 882A 50 88        	defw Entidad_3
 568+ 882C 60 88        	defw Entidad_4
 569+ 882E 70 88        	defw Entidad_5
 570+ 8830
 571+ 8830              ;	BADSAT, (Satélite malvado).
 572+ 8830
 573+ 8830 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 574+ 8832 04           	db %00000100									; (Attr).
 575+ 8833 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 576+ 8835 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 577+ 8837 60 47        	defw $4760	                             	    ; (Posicion_inicio).
 578+ 8839 01           	db 1											; (Cuad_objeto).
 579+ 883A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 580+ 883E 23 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 581+ 8840
 582+ 8840 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 583+ 8842 02           	db %00000010									; (Attr).
 584+ 8843 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 585+ 8845 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 586+ 8847 5F 48        	defw $485f                                      ; (Posicion_inicio).
 587+ 8849 01           	db 1											; (Cuad_objeto).
 588+ 884A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 589+ 884E 21 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 590+ 8850
 591+ 8850 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 592+ 8852 04           	db %00000100									; (Attr).
 593+ 8853 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 594+ 8855 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 595+ 8857 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 596+ 8859 01           	db 1											; (Cuad_objeto).
 597+ 885A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 598+ 885E 15 9C        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 599+ 8860
 600+ 8860 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 601+ 8862 01           	db %00000001									; (Attr).
 602+ 8863 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 603+ 8865 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 604+ 8867 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 605+ 8869 01           	db 1											; (Cuad_objeto).
 606+ 886A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 607+ 886E 21 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 608+ 8870
 609+ 8870 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 610+ 8872 01           	db %00000001									; (Attr).
 611+ 8873 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 612+ 8875 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 613+ 8877 07 40        	defw $4007                                      ; (Posicion_inicio).
 614+ 8879 01           	db 1											; (Cuad_objeto).
 615+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 616+ 887E 17 9C        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 617+ 8880
# file closed: Cajas_y_disparos.asm
  24  8880              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8880              ; 13/05/23
   2+ 8880
   3+ 8880              Indice_de_niveles
   4+ 8880
   5+ 8880 8E 88        	defw Nivel_1
   6+ 8882 99 88        	defw Nivel_2
   7+ 8884 A6 88        	defw Nivel_3
   8+ 8886 B6 88        	defw Nivel_4
   9+ 8888 C8 88        	defw Nivel_5
  10+ 888A
  11+ 888A              ;	...
  12+ 888A              ;	...
  13+ 888A              ;	+ Niveles ...
  14+ 888A
  15+ 888A 00 00        	defw 0
  16+ 888C 00 00        	defw 0
  17+ 888E
  18+ 888E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 888F 05 04 03 02  	db 5,4,3,2,1
  19+ 8893 01
  20+ 8894 01 02 03 04  	db 1,2,3,4,5								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 8898 05
  21+ 8899 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 889A 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 889E 01 02
  23+ 88A0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88A4 01 02
  24+ 88A6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88A7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88AB 01
  26+ 88AC 03 01 01 01  	db 3,1,1,1,1
  26+ 88B0 01
  27+ 88B1 03 01 01 01  	db 3,1,1,1,1
  27+ 88B5 01
  28+ 88B6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88B7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88BB 01
  30+ 88BC 04 01 01 01  	db 4,1,1,1,1
  30+ 88C0 01
  31+ 88C1 04 01 01 01  	db 4,1,1,1,1
  31+ 88C5 01
  32+ 88C6 02 03        	db 2,3
  33+ 88C8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88C9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88CD 01
  35+ 88CE 05 01 01 01  	db 5,1,1,1,1
  35+ 88D2 01
  36+ 88D3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88D7 01
  37+ 88D8 05 01 01 01  	db 5,1,1,1,1
  37+ 88DC 01
  38+ 88DD
  39+ 88DD              ;---------------------------------------------------------------------------------------------------------------
  40+ 88DD              ;
  41+ 88DD              ;   21/5/23
  42+ 88DD              ;
  43+ 88DD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88DD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88DD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88DD              ;	_en la caja DRAW correspondiente.
  47+ 88DD              ;
  48+ 88DD              ;	MODIFICA: HL,DE y A.
  49+ 88DD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88DD
  51+ 88DD              Inicializa_Punteros_de_nivel
  52+ 88DD
  53+ 88DD 21 80 88     	ld hl,Indice_de_niveles
  54+ 88E0 22 07 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88E3 CD F6 8C     	call Extrae_address
  56+ 88E6 7E           	ld a,(hl)
  57+ 88E7 32 DA 89     	ld (Numero_de_entidades),a
  58+ 88EA 23           	inc hl
  59+ 88EB 22 09 8A     	ld (Datos_de_nivel),hl
  60+ 88EE C9           	ret
  61+ 88EF
  62+ 88EF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88EF              ;
  64+ 88EF              ;   13/5/23
  65+ 88EF              ;
  66+ 88EF              ;	Destruye A,BC,HL,DE
  67+ 88EF
  68+ 88EF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88EF              ;	_del juego.
  70+ 88EF
  71+ 88EF              Prepara_cajas
  72+ 88EF
  73+ 88EF              ; Preparamos los punteros de las cajas.
  74+ 88EF
  75+ 88EF 21 64 85     	ld hl,Indice_de_cajas
  76+ 88F2 CD F6 8C     	call Extrae_address
  77+ 88F5 CD 32 89     	call Avanza_caja
  78+ 88F8
  79+ 88F8 CD 76 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 88FB
  81+ 88FB 2A 09 8A     	ld hl,(Datos_de_nivel)
  82+ 88FE
  83+ 88FE              ; HL está en los datos del nivel correspondiente.
  84+ 88FE              ; B actuará como contador de cajas.
  85+ 88FE
  86+ 88FE C5           1 push bc
  87+ 88FF
  88+ 88FF 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8900 CD 23 89     	call PreparaBC
  90+ 8903
  91+ 8903 21 26 88     	ld hl,Indice_de_entidades
  92+ 8906 CD 2B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8909 22 E0 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 890C
  95+ 890C CD 3C 89     	call Datos_de_entidad_a_caja
  96+ 890F
  97+ 890F 2A D8 89     	ld hl,(Indice_restore_caja)
  98+ 8912 CD F6 8C     	call Extrae_address
  99+ 8915 CD 32 89     	call Avanza_caja
 100+ 8918
 101+ 8918 2A 09 8A     	ld hl,(Datos_de_nivel)
 102+ 891B 23           	inc hl
 103+ 891C 22 09 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 891F
 105+ 891F C1           	pop bc
 106+ 8920 10 DC        	djnz 1B
 107+ 8922 C9           	ret
 108+ 8923
 109+ 8923 CB 27        PreparaBC sla a
 110+ 8925 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8927 4F           	ld c,a
 112+ 8928 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 892A C9           	ret
 114+ 892B
 115+ 892B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 892C ED 4A        	adc hl,bc
 117+ 892E CD F6 8C     	call Extrae_address
 118+ 8931 C9           	ret
 119+ 8932
 120+ 8932 22 D4 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8935 13           	inc de
 122+ 8936 13           	inc de
 123+ 8937 EB           	ex de,hl
 124+ 8938 22 D8 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 893B C9           	ret
 126+ 893C
 127+ 893C              Datos_de_entidad_a_caja
 128+ 893C
 129+ 893C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 893C
 131+ 893C
 132+ 893C ED 5B D4 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8940
 134+ 8940 01 02 00     	ld bc,2
 135+ 8943 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8945
 137+ 8945 01 07 00     	ld bc,7
 138+ 8948 CD 70 89     	call Situa_DE
 139+ 894B
 140+ 894B 01 05 00     	ld bc,5
 141+ 894E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8950
 143+ 8950 01 04 00     	ld bc,4
 144+ 8953 CD 70 89     	call Situa_DE
 145+ 8956
 146+ 8956 01 07 00     	ld bc,7
 147+ 8959 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 895B
 149+ 895B 01 18 00     	ld bc,24
 150+ 895E CD 70 89     	call Situa_DE
 151+ 8961
 152+ 8961 01 02 00     	ld bc,2
 153+ 8964 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8966
 155+ 8966 01 0A 00     	ld bc,10
 156+ 8969 CD 70 89     	call Situa_DE
 157+ 896C
 158+ 896C 3E 03        	ld a,3
 159+ 896E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 896F
 161+ 896F C9           	ret
 162+ 8970
 163+ 8970 EB           Situa_DE ex de,hl
 164+ 8971 A7           	and a
 165+ 8972 ED 4A        	adc hl,bc
 166+ 8974 EB           	ex de,hl
 167+ 8975 C9           	ret
 168+ 8976
 169+ 8976              ;---------------------------------------------------------------------------------------------------------------
 170+ 8976              ;
 171+ 8976              ;	21/5/23
 172+ 8976              ;
 173+ 8976              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8976              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8976              ;
 176+ 8976              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8976              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8976              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8976              ;
 180+ 8976              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8976              ;	MODIFICA: A y B.
 182+ 8976              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8976
 184+ 8976              Admin_num_entidades
 185+ 8976
 186+ 8976              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8976
 188+ 8976 3A DA 89     	ld a,(Numero_de_entidades)
 189+ 8979 A7           	and a
 190+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 897A              ;	jr z,$
 192+ 897A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 897A
 194+ 897A 20 03        	jr nz,3F
 195+ 897C
 196+ 897C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 897C
 198+ 897C CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 897F
 200+ 897F
 201+ 897F 3A DA 89     3 ld a,(Numero_de_entidades)
 202+ 8982 FE 0A        	cp 10
 203+ 8984 38 08        	jr c,1F
 204+ 8986
 205+ 8986              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8986              ; Actualizamos variables.
 207+ 8986
 208+ 8986 3E 0A        	ld a,10
 209+ 8988 32 DB 89     	ld (Numero_parcial_de_entidades),a
 210+ 898B 47           	ld b,a
 211+ 898C 18 04        	jr 2F
 212+ 898E
 213+ 898E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 898E              ; (Numero_de_entidades)="0".
 215+ 898E
 216+ 898E 32 DB 89     1 ld (Numero_parcial_de_entidades),a
 217+ 8991 47           	ld b,a
 218+ 8992 C9           2 ret
# file closed: Niveles.asm
  25  8993
  26  8993              ; ******************************************************************************************************************************************************************************************
  27  8993              ; Constantes.
  28  8993              ; ******************************************************************************************************************************************************************************************
  29  8993              ;
  30  8993              ; 25/05/23
  31  8993              ;
  32  8993              ; Constantes generales.
  33  8993              ;
  34  8993
  35  8993              Sprite_vacio equ $f000
  36  8993              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  8993              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  8993              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  8993              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  8993
  41  8993              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  8993              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  8993              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  8993              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  8993              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  8993              ;                               				        ; De momento situamos este almacén en $7060.
  47  8993
  48  8993              ; ******************************************************************************************************************************************************************************************
  49  8993              ; Variables.
  50  8993              ; ******************************************************************************************************************************************************************************************
  51  8993              ;
  52  8993              ; 30/05/23
  53  8993              ;
  54  8993              ; Variables de DRAW. (Motor principal).
  55  8993              ;
  56  8993              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  8993
  58  8993 00           Filas db 0												; Filas. [DRAW]
  59  8994 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  8995 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  8997 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  8999 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  899A 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  899B
  65  899B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  899B
  67  899B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  899C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  899C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  899C 00           Attr db 0												; Atributos de la entidad:
  71  899D
  72  899D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  899D              ;
  74  899D              ;	COLORES: 0 ..... NEGRO
  75  899D              ;    		 1 ..... AZUL
  76  899D              ; 			 2 ..... ROJO
  77  899D              ;			 3 ..... MAGENTA
  78  899D              ; 			 4 ..... VERDE
  79  899D              ; 			 5 ..... CIAN
  80  899D              ;			 6 ..... AMARILLO
  81  899D              ; 			 7 ..... BLANCO
  82  899D
  83  899D 00 00        Indice_Sprite_der defw 0
  84  899F 00 00        Indice_Sprite_izq defw 0
  85  89A1 00 00        Puntero_DESPLZ_der defw 0
  86  89A3 00 00        Puntero_DESPLZ_izq defw 0
  87  89A5
  88  89A5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89A7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89A8
  91  89A8              ; Variables de objeto. (Características).
  92  89A8
  93  89A8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89A9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89AA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89AB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89AC
  98  89AC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89AD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89AD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89AD
 102  89AD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89AF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89B1 00 00        	defw 0
 105  89B3 00 00 00 00  	db 0,0,0,0
 106  89B7
 107  89B7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89B9 00 00        	defw 0
 109  89BB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89BD 00 00 00 00  	db 0,0,0,0
 111  89C1
 112  89C1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89C1
 114  89C1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89C2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89C2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89C2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89C2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89C2              ;
 120  89C2              ; 														DESCRIPCIÖN:
 121  89C2              ;
 122  89C2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89C2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89C2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89C2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89C2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89C2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89C2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89C2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89C2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89C2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89C2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89C2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89C2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89C2              ;
 136  89C2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89C2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89C2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89C2
 140  89C2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89C3
 142  89C3              ; Movimiento.
 143  89C3
 144  89C3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89C4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89C6 00 00        Puntero_mov defw 0
 147  89C8 00           Contador_db_mov db 0
 148  89C9 00           Incrementa_puntero db 0
 149  89CA 00           Repetimos_db db 0
 150  89CB
 151  89CB              ; Variables de funcionamiento. [DRAW].
 152  89CB
 153  89CB 00           Columnas db 0
 154  89CC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89CE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89CE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89CF
 158  89CF              ; variables de control general.
 159  89CF
 160  89CF 00           Ctrl_2 db 0
 161  89D0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89D0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89D0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89D0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89D0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89D0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89D0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89D0              ;
 169  89D0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89D0
 171  89D0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89D1
 173  89D1              ; 62 Bytes por entidad.
 174  89D1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89D1              ;					         		---------;      ;---------
 176  89D1
 177  89D1
 178  89D1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89D1
 180  89D1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89D2
 182  89D2              ;														DESCRIPCIÓN:
 183  89D2              ;
 184  89D2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89D2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89D2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89D2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89D2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89D2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89D2              ;														BIT 3, .............
 191  89D2              ;														BIT 4, .............
 192  89D2
 193  89D2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89D4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89D4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89D4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89D4
 198  89D4
 199  89D4
 200  89D4              ; Gestión de ENTIDADES y CAJAS.
 201  89D4
 202  89D4              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89D4 00 00        Puntero_store_caja defw 0
 204  89D6 00 00        Puntero_restore_caja defw 0
 205  89D8 00 00        Indice_restore_caja defw 0
 206  89DA 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89DB 00           Numero_parcial_de_entidades db 0
 208  89DC 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89DD 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89DE              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89DE              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89DE              ;														; _ (Numero_de_malotes)="0".
 213  89DE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89E0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89E2              ;														; _ puntero (Indice_entidades).
 216  89E2
 217  89E2
 218  89E2              ;---------------------------------------------------------------------------------------------------------------
 219  89E2              ;
 220  89E2              ; Sirven para PINTAR.
 221  89E2
 222  89E2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89E4              ;														; _variable para almacenar lo posición del puntero_
 224  89E4              ; 														; _de pila, SP.
 225  89E4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89E6              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89E6 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89E8              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89E8              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89E8 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89EA              ;														; _el snapshot de los registros del siguiente disparo.
 232  89EA              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89EA
 234  89EA              ;---------------------------------------------------------------------------------------------------------------
 235  89EA
 236  89EA              ; Gestión de Disparos.
 237  89EA
 238  89EA 00           Numero_de_disparotes db 0
 239  89EB 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89ED 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  89EF 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  89F0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  89F0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  89F0 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  89F2              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  89F2              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  89F2              ;														; _produzca colisión.
 248  89F2 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  89F4              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  89F4 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  89F7              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  89F7 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  89FA              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  89FA
 255  89FA              ;---------------------------------------------------------------------------------------------------------------
 256  89FA
 257  89FA              ; Relojes y temporizaciones.
 258  89FA
 259  89FA 00           Contador_de_frames db 0
 260  89FB 00           Secundero db 0
 261  89FC 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 262  89FD              ;														; Repite la oleada de entidades.
 263  89FD 01           Habilita_disparo_Amadeus db 1
 264  89FE 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 265  89FF 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 266  8A00
 267  8A00 01           Habilita_disparo_entidad db 1
 268  8A01 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 269  8A02 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 270  8A03
 271  8A03              ;---------------------------------------------------------------------------------------------------------------
 272  8A03
 273  8A03              ; Gestión de FRAMES.
 274  8A03
 275  8A03 00           Switch db 0
 276  8A04
 277  8A04              ; Variables de Raster y localización en pantalla.
 278  8A04
 279  8A04 00 FF        Temp_Raster defw $ff00
 280  8A06
 281  8A06              ;---------------------------------------------------------------------------------------------------------------
 282  8A06
 283  8A06              ; Gestión de NIVELES.
 284  8A06
 285  8A06 00           Nivel db 0												 ; Nivel actual del juego.
 286  8A07 00 00        Puntero_indice_NIVELES defw 0
 287  8A09 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 288  8A0B              ; 														 ; _ que definen el NIVEL.
 289  8A0B
 290  8A0B
 291  8A0B              ; Y todo comienza aquí .....
 292  8A0B              ;
 293  8A0B              ; Rutina principal *************************************************************************************************************************************************************************
 294  8A0B              ;
 295  8A0B              ;	14/11/22
 296  8A0B
 297  8A0B              START
 298  8A0B
 299  8A0B 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 300  8A0E 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 301  8A10 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 302  8A12 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 303  8A14 F3           	DI
 304  8A15
 305  8A15 3E 07        	ld a,%00000111
 306  8A17 CD F7 97     	call Cls
 307  8A1A
 308  8A1A              ;	call Pinta_marco
 309  8A1A
 310  8A1A CD DD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 311  8A1D CD CF 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 312  8A20
 313  8A20 CD EF 88     4 call Prepara_cajas
 314  8A23
 315  8A23 CD A2 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 316  8A26              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 317  8A26 CD 7F 8D     	call Restore_entidad
 318  8A29
 319  8A29 21 DB 89     	ld hl,Numero_parcial_de_entidades
 320  8A2C 46           	ld b,(hl)
 321  8A2D 04           	inc b
 322  8A2E 05           	dec b
 323  8A2F 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 324  8A31
 325  8A31              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 326  8A31              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 327  8A31              ;	Pintamos el resto de entidades:
 328  8A31
 329  8A31              ;	INICIA ENTIDADES !!!!!
 330  8A31
 331  8A31 C5           1 push bc  												; Guardo el contador de entidades.
 332  8A32 CD FC 8C     	call Inicia_Puntero_objeto
 333  8A35 CD 0B 98     	call Recompone_posicion_inicio
 334  8A38 CD 47 92     	call Draw
 335  8A3B CD A0 7F     	call Guarda_foto_registros
 336  8A3E CD 44 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 337  8A41 C1           	pop bc
 338  8A42 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 339  8A44
 340  8A44              ;	call Pinta_marco
 341  8A44
 342  8A44              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 343  8A44
 344  8A44 3A D1 89     	ld a,(Ctrl_1)
 345  8A47 CB 5F        	bit 3,a
 346  8A49 20 18        	jr nz,5F											; Loop
 347  8A4B
 348  8A4B              ; 	INICIA AMADEUS !!!!!
 349  8A4B
 350  8A4B CD A6 8D     3 call Restore_Amadeus
 351  8A4E CD FC 8C     	call Inicia_Puntero_objeto
 352  8A51 CD 47 92     	call Draw
 353  8A54 CD A0 7F     	call Guarda_foto_registros
 354  8A57 11 7C 85     	ld de,Amadeus_db
 355  8A5A CD B8 8D     	call Store_Amadeus
 356  8A5D
 357  8A5D              ; 	INICIA DISPAROS !!!!!
 358  8A5D
 359  8A5D CD B8 8C     	call Inicia_Puntero_Disparo_Entidades
 360  8A60 CD BF 8C     	call Inicia_Puntero_Disparo_Amadeus
 361  8A63
 362  8A63              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 363  8A63
 364  8A63 CD A2 8C     5 call Inicia_punteros_de_cajas
 365  8A66 CD 7F 8D     	call Restore_entidad
 366  8A69
 367  8A69 3A D1 89     	ld a,(Ctrl_1)
 368  8A6C CB 5F        	bit 3,a
 369  8A6E 28 0A        	jr z,6F
 370  8A70
 371  8A70              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 372  8A70
 373  8A70 21 D1 89     	ld hl,Ctrl_1
 374  8A73 CB 9E        	res 3,(hl)
 375  8A75 CD C6 8C     	call Calcula_numero_de_malotes
 376  8A78 18 07        	jr 7F
 377  8A7A
 378  8A7A              ; ----------
 379  8A7A
 380  8A7A 3A DB 89     6 ld a,(Numero_parcial_de_entidades)
 381  8A7D 3C           	inc a
 382  8A7E 32 DD 89     	ld (Numero_de_malotes),a
 383  8A81
 384  8A81 AF           7 xor a
 385  8A82 FB           2 ei
 386  8A83 28 FD        	jr z,2B
 387  8A85
 388  8A85 3A FB 89     	ld a,(Secundero)
 389  8A88 47           	ld b,a
 390  8A89 3A FC 89     	ld a,(Activa_recarga_cajas)
 391  8A8C B8           	cp b
 392  8A8D 28 08        	jr z,8F
 393  8A8F
 394  8A8F 21 D1 89     	ld hl,Ctrl_1
 395  8A92 CB E6        	set 4,(hl)
 396  8A94 AF           	xor a
 397  8A95 18 EB        	jr 2B
 398  8A97
 399  8A97 21 D1 89     8 ld hl,Ctrl_1
 400  8A9A CB A6        	res 4,(hl)
 401  8A9C F3           	di
 402  8A9D
 403  8A9D C3 20 8A     	jp 4B
 404  8AA0
 405  8AA0              ; -----------------------------------------------------------------------------------
 406  8AA0
 407  8AA0              Frame
 408  8AA0
 409  8AA0              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 410  8AA0              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 411  8AA0
 412  8AA0              ; PINTAMOS.
 413  8AA0
 414  8AA0 3E 02            ld a,2
 415  8AA2 D3 FE            out ($fe),a
 416  8AA4 CD 4B 95     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 417  8AA7 CD 84 95     	call Extrae_foto_disparos
 418  8AAA 3E 01            ld a,1
 419  8AAC D3 FE            out ($fe),a
 420  8AAE
 421  8AAE
 422  8AAE              ;    jr $
 423  8AAE
 424  8AAE              ; ----------------------------------------------------------------------
 425  8AAE
 426  8AAE              ; RELOJES.
 427  8AAE
 428  8AAE 21 FA 89     	ld hl,Contador_de_frames
 429  8AB1 34           	inc (hl)											; 0 - 255
 430  8AB2
 431  8AB2 3E 3C        	ld a,60
 432  8AB4 BE           	cp (hl)
 433  8AB5 20 22        	jr nz,13F
 434  8AB7
 435  8AB7 36 00        	ld (hl),0
 436  8AB9
 437  8AB9 21 FB 89     	ld hl,Secundero
 438  8ABC 34           	inc (hl)
 439  8ABD
 440  8ABD 7E           	ld a,(hl)
 441  8ABE E6 01        	and %00000001
 442  8AC0 20 10        	jr nz,20F
 443  8AC2
 444  8AC2 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 445  8AC5 47           	ld b,a
 446  8AC6 3A DC 89     	ld a,(Entidades_en_curso)
 447  8AC9 B8           	cp b
 448  8ACA 28 06        	jr z,20F
 449  8ACC 30 04        	jr nc,20F
 450  8ACE
 451  8ACE 3C           	inc a
 452  8ACF 32 DC 89     	ld (Entidades_en_curso),a
 453  8AD2
 454  8AD2 3E 3C        20 ld a,60
 455  8AD4 BE           	cp (hl)
 456  8AD5 20 02        	jr nz,13F
 457  8AD7
 458  8AD7 36 00        	ld (hl),0
 459  8AD9
 460  8AD9 21 FD 89     13 ld hl,Habilita_disparo_Amadeus
 461  8ADC 11 FF 89     	ld de,Temporiza_disparo_Amadeus
 462  8ADF CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 463  8AE2
 464  8AE2 21 00 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 465  8AE5 11 02 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 466  8AE8 CD D5 7F     	call Habilita_disparos
 467  8AEB
 468  8AEB              ; COLISIONES.
 469  8AEB
 470  8AEB CD E1 91     	call Selector_de_impactos
 471  8AEE
 472  8AEE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 473  8AEE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 474  8AEE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 475  8AEE
 476  8AEE AF           	xor a
 477  8AEF 32 EF 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 478  8AF2
 479  8AF2 CD A2 8C     	call Inicia_punteros_de_cajas
 480  8AF5 CD 7F 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 481  8AF8              ; 														; _ en DRAW.
 482  8AF8 3A 93 89     	ld a,(Filas)
 483  8AFB A7           	and a
 484  8AFC 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 485  8AFE CD 91 8D     	call Incrementa_punteros_de_cajas
 486  8B01 18 F2        	jr 12B
 487  8B03
 488  8B03              ; ---------------------------------------------------------------------------------------
 489  8B03
 490  8B03 CD 5F 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 491  8B06 21 00 70     	ld hl,Album_de_fotos
 492  8B09 22 E6 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 493  8B0C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 494  8B0C 3A DB 89     	ld a,(Numero_parcial_de_entidades)
 495  8B0F 47               ld b,a
 496  8B10 A7           	and a
 497  8B11 20 16        	jr nz,2F
 498  8B13
 499  8B13 21 D1 89     	ld hl,Ctrl_1
 500  8B16 CB 66        	bit 4,(hl)
 501  8B18 C2 A2 8B     	jp nz,4F
 502  8B1B
 503  8B1B 21 D1 89     	ld hl,Ctrl_1
 504  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 505  8B20 3A FB 89     	ld a,(Secundero)
 506  8B23 3C           	inc a
 507  8B24 32 FC 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 508  8B27
 509  8B27 18 79        	jr 4F
 510  8B29
 511  8B29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 512  8B29
 513  8B29              ; Código que ejecutamos con cada entidad:
 514  8B29
 515  8B29              ; Impacto ???
 516  8B29
 517  8B29 3A DC 89     2 ld a,(Entidades_en_curso)
 518  8B2C A7           	and a
 519  8B2D 28 73        	jr z,4F
 520  8B2F 47           	ld b,a
 521  8B30
 522  8B30 C5           15 push bc 												; Nº de entidades en curso.
 523  8B31
 524  8B31 3A AC 89     	ld a,(Impacto)
 525  8B34 A7           	and a
 526  8B35 28 25        	jr z,8F
 527  8B37
 528  8B37              ; Hay Impacto en esta entidad.
 529  8B37
 530  8B37 CD 59 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 531  8B3A
 532  8B3A              ;!!!!!! DEBUGGIN Desintegración/Explosión!!!!!!!!!!!
 533  8B3A
 534  8B3A 3A CF 89     	ld a,(Ctrl_2)
 535  8B3D CB 4F        	bit 1,a
 536  8B3F 20 42        	jr nz,7F											; Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 537  8B41
 538  8B41 3A 9B 89     	ld a,(CTRL_DESPLZ)
 539  8B44 A7           	and a
 540  8B45 20 08        	jr nz,21F
 541  8B47
 542  8B47 21 7C 84     	ld hl,Indice_Explosion_2x2-2
 543  8B4A 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 544  8B4D 18 06        	jr 22F
 545  8B4F
 546  8B4F 21 E6 83     21 ld hl,Indice_Explosion_2x3-2
 547  8B52 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 548  8B55
 549  8B55 21 CF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 550  8B58 CB CE        	set 1,(hl)
 551  8B5A 18 27        	jr 7F
 552  8B5C
 553  8B5C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 554  8B5C              ; _con las coordenadas de la entidad almacenada en DRAW.
 555  8B5C
 556  8B5C 3A D1 89     8 ld a,(Ctrl_1)
 557  8B5F CB 57        	bit 2,a
 558  8B61 28 20        	jr z,7F
 559  8B63
 560  8B63 2A F2 89     	ld hl,(Coordenadas_disparo_certero)
 561  8B66 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 562  8B67              ;														; E contiene la coordenada_X del disparo.
 563  8B67 2A 99 89     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 564  8B6A              ;														; H Coordenado_y de la entidad.
 565  8B6A A7           	and a
 566  8B6B ED 52        	sbc hl,de
 567  8B6D
 568  8B6D CD 18 92     	call Determina_resultado_comparativa
 569  8B70 04           	inc b
 570  8B71 05           	dec b
 571  8B72
 572  8B72              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 573  8B72              ;	jr z,$
 574  8B72              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 575  8B72
 576  8B72 28 0F        	jr z,7F
 577  8B74
 578  8B74              ; ----- ----- -----
 579  8B74
 580  8B74 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 581  8B76 32 AC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 582  8B79 21 D1 89     	ld hl,Ctrl_1
 583  8B7C CB 96        	res 2,(hl)
 584  8B7E 21 F2 89     	ld hl,Coordenadas_disparo_certero
 585  8B81 36 00        	ld (hl),0
 586  8B83
 587  8B83 CD D5 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 588  8B86
 589  8B86 3A C1 89     	ld a,(Ctrl_0)
 590  8B89 CB 67        	bit 4,a
 591  8B8B 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 592  8B8D
 593  8B8D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 594  8B8D              ; [[[
 595  8B8D CD 1A 8E     	call Detecta_disparo_entidad
 596  8B90              ; ]]]
 597  8B90 CD 69 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 598  8B93
 599  8B93 21 C1 89     	ld hl,Ctrl_0
 600  8B96 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 601  8B98 AF           	xor a
 602  8B99 32 C2 89     	ld (Obj_dibujado),a
 603  8B9C
 604  8B9C CD 44 8D     6 call Store_Restore_cajas
 605  8B9F
 606  8B9F C1           	pop bc
 607  8BA0 10 8E        	djnz 15B
 608  8BA2
 609  8BA2              ; Tras la gestión de las entidades, ... AMADEUS.
 610  8BA2
 611  8BA2 CD A6 8D     4 call Restore_Amadeus
 612  8BA5
 613  8BA5 3A AC 89     	ld a,(Impacto)
 614  8BA8 A7           	and a
 615  8BA9 20 FE        	jr nz,$
 616  8BAB
 617  8BAB              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 618  8BAB
 619  8BAB CD 3A 8C     	call Mov_Amadeus
 620  8BAE
 621  8BAE 3A C1 89     	ld a,(Ctrl_0)
 622  8BB1 CB 67        	bit 4,a
 623  8BB3 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 624  8BB5
 625  8BB5 CD 69 8C     	call Guarda_foto_entidad_a_pintar
 626  8BB8
 627  8BB8 21 C1 89     3 ld hl,Ctrl_0
 628  8BBB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 629  8BBD AF           	xor a
 630  8BBE 32 C2 89     	ld (Obj_dibujado),a
 631  8BC1
 632  8BC1 11 7C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 633  8BC4 CD B8 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 634  8BC7
 635  8BC7 CD 7D 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 636  8BCA
 637  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 638  8BCA
 639  8BCA CD DE 8C     	call Calcula_numero_de_disparotes
 640  8BCD CD C6 8C     9 call Calcula_numero_de_malotes
 641  8BD0
 642  8BD0 3E 04        	ld a,4
 643  8BD2 D3 FE        	out ($fe),a
 644  8BD4
 645  8BD4 C9           	ret
 646  8BD5
 647  8BD5              ; --------------------------------------------------------------------------------------------------------------
 648  8BD5              ;
 649  8BD5              ;	27/05/23
 650  8BD5
 651  8BD5              Mov_obj
 652  8BD5
 653  8BD5              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 654  8BD5
 655  8BD5 3A CF 89     	ld a,(Ctrl_2)
 656  8BD8 CB 4F        	bit 1,a
 657  8BDA 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 658  8BDC
 659  8BDC              ; Explosión:
 660  8BDC
 661  8BDC 3A D0 89     	ld a,(Frames_explosion)
 662  8BDF A7           	and a
 663  8BE0 20 11        	jr nz,4F
 664  8BE2
 665  8BE2              ; Una alimaña menos!!!!!!!!!1
 666  8BE2
 667  8BE2 CD C1 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 668  8BE5 21 DB 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 669  8BE8 35           	dec (hl)
 670  8BE9 21 DC 89     	ld hl,Entidades_en_curso
 671  8BEC 35           	dec (hl)
 672  8BED 21 DA 89     	ld hl,Numero_de_entidades
 673  8BF0 35           	dec (hl)
 674  8BF1 18 46        	jr 3F
 675  8BF3
 676  8BF3              ; -----
 677  8BF3
 678  8BF3 2A A1 89     4 ld hl,(Puntero_DESPLZ_der)
 679  8BF6 23           	inc hl
 680  8BF7 23           	inc hl
 681  8BF8 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 682  8BFB CD F6 8C     	call Extrae_address
 683  8BFE 22 97 89     	ld (Puntero_objeto),hl
 684  8C01
 685  8C01 21 D0 89     	ld hl,Frames_explosion
 686  8C04 35           	dec (hl)
 687  8C05
 688  8C05 CD 59 8C     	call Guarda_foto_entidad_a_borrar
 689  8C08 18 2F        	jr 3F
 690  8C0A
 691  8C0A AF           2 xor a
 692  8C0B 32 C2 89     	ld (Obj_dibujado),a
 693  8C0E 32 C1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 694  8C11              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 695  8C11              ; 														; _de la entidad.
 696  8C11 CD 73 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 697  8C14              ;														; Obj_dibujado="0".
 698  8C14              ; Movemos Entidades malignas.
 699  8C14
 700  8C14 21 C4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 701  8C17 34           	inc (hl)
 702  8C18 35           	dec (hl)                                            ; Salimos de la rutina.
 703  8C19 C8           	ret z
 704  8C1A
 705  8C1A CD 25 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 706  8C1D
 707  8C1D 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 708  8C20 CB 67        	bit 4,a
 709  8C22 C8           	ret z
 710  8C23
 711  8C23              ; Ha habido desplazamiento de la entidad maligna.
 712  8C23              ; Ha llegado a zona de AMADEUS ???
 713  8C23
 714  8C23 3A 9A 89     	ld a,(Coordenada_y)
 715  8C26 FE 14        	cp $14
 716  8C28 D4 AE 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 717  8C2B              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 718  8C2B              ; ---------
 719  8C2B
 720  8C2B 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 721  8C2D 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 722  8C30 CD 73 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 723  8C33 CD 8A 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 724  8C36 CD 59 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 725  8C39 C9           3 ret													; _de la misma.
 726  8C3A
 727  8C3A              ; --------------------------------------------------------------------------------------------------------------
 728  8C3A              ;
 729  8C3A              ;	29/1/23
 730  8C3A
 731  8C3A              Mov_Amadeus
 732  8C3A
 733  8C3A AF           	xor a
 734  8C3B 32 C2 89     	ld (Obj_dibujado),a
 735  8C3E CD 73 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 736  8C41              ;														; Obj_dibujado="0".
 737  8C41              ; Movemos Amadeus.
 738  8C41
 739  8C41 CD E3 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 740  8C44 3A C1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 741  8C47 CB 67        	bit 4,a
 742  8C49 C8           	ret z
 743  8C4A
 744  8C4A              ; ---------
 745  8C4A
 746  8C4A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 747  8C4C 32 C2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 748  8C4F CD 73 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 749  8C52 CD 8A 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 750  8C55 CD 59 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 751  8C58 C9           	ret													; _de la nave.
 752  8C59
 753  8C59              ; --------------------------------------------------------------------------------------------------------------
 754  8C59              ;
 755  8C59              ;	31/01/23
 756  8C59              ;
 757  8C59              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 758  8C59
 759  8C59              Guarda_foto_entidad_a_borrar
 760  8C59
 761  8C59 CD 21 95     	call Prepara_draw
 762  8C5C CD 5B 94     	call calcula_CColumnass
 763  8C5F CD 92 94     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 764  8C62 CD E7 94     	call Define_rutina_de_impresion
 765  8C65 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 766  8C68 C9           	ret
 767  8C69
 768  8C69              ; --------------------------------------------------------------------------------------------------------------
 769  8C69              ;
 770  8C69              ;	31/01/23
 771  8C69              ;
 772  8C69              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 773  8C69              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 774  8C69
 775  8C69              Guarda_foto_entidad_a_pintar
 776  8C69
 777  8C69 CD 96 8C     	call Repone_pintar
 778  8C6C CD 47 92     	call Draw
 779  8C6F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 780  8C72 C9           	ret
 781  8C73
 782  8C73              ; --------------------------------------------------------------------------------------------------------------
 783  8C73              ;
 784  8C73              ;
 785  8C73
 786  8C73 21 93 89     Prepara_var_pintado_borrado	ld hl,Filas
 787  8C76 3A C2 89     	ld a,(Obj_dibujado)
 788  8C79 A7           	and a
 789  8C7A 28 05        	jr z,1F
 790  8C7C 11 B7 89     	ld de,Variables_de_pintado
 791  8C7F 18 03        	jr 2F
 792  8C81 11 AD 89     1 ld de,Variables_de_borrado
 793  8C84 01 08 00     2 ld bc,8
 794  8C87 ED B0        	ldir
 795  8C89 C9           	ret
 796  8C8A
 797  8C8A              ; --------------------------------------------------------------------------------------------------------------
 798  8C8A
 799  8C8A 21 AD 89     Repone_borrar ld hl,Variables_de_borrado
 800  8C8D 11 93 89     	ld de,Filas
 801  8C90 01 08 00     	ld bc,8
 802  8C93 ED B0        	ldir
 803  8C95 C9           	ret
 804  8C96
 805  8C96 21 B7 89     Repone_pintar ld hl,Variables_de_pintado
 806  8C99 11 93 89     	ld de,Filas
 807  8C9C 01 08 00     	ld bc,8
 808  8C9F ED B0        	ldir
 809  8CA1 C9           	ret
 810  8CA2
 811  8CA2              ; *************************************************************************************************************************************************************
 812  8CA2              ;
 813  8CA2              ; 8/1/23
 814  8CA2              ;
 815  8CA2              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 816  8CA2              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 817  8CA2              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 818  8CA2
 819  8CA2              ; Destruye HL y DE !!!!!
 820  8CA2
 821  8CA2              Inicia_punteros_de_cajas
 822  8CA2
 823  8CA2 21 64 85     	ld hl,Indice_de_cajas
 824  8CA5 CD F6 8C         call Extrae_address
 825  8CA8 22 D4 89         ld (Puntero_store_caja),hl
 826  8CAB 21 66 85     	ld hl,Indice_de_cajas+2
 827  8CAE 22 D8 89     	ld (Indice_restore_caja),hl
 828  8CB1 CD F6 8C     	call Extrae_address
 829  8CB4 22 D6 89     	ld (Puntero_restore_caja),hl
 830  8CB7 C9               ret
 831  8CB8
 832  8CB8              ; *************************************************************************************************************************************************************
 833  8CB8              ;
 834  8CB8              ; 8/1/23
 835  8CB8              ;
 836  8CB8              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 837  8CB8
 838  8CB8 21 FC 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 839  8CBB 22 EB 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 840  8CBE C9           	ret
 841  8CBF 21 E4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 842  8CC2 22 ED 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 843  8CC5 C9           	ret
 844  8CC6
 845  8CC6              ; -------------------------------------------------------------------------------------------------------------
 846  8CC6              ;
 847  8CC6              ; 28/2/23
 848  8CC6              ;
 849  8CC6
 850  8CC6              Calcula_numero_de_malotes
 851  8CC6
 852  8CC6 21 00 70     	ld hl,Album_de_fotos
 853  8CC9 EB           	ex de,hl
 854  8CCA 2A E6 89     	ld hl,(Stack_snapshot)
 855  8CCD
 856  8CCD 06 00        	ld b,0
 857  8CCF 7D           	ld a,l
 858  8CD0 93           	sub e
 859  8CD1 28 07        	jr z,1F
 860  8CD3
 861  8CD3              ; Nº de malotes no es "0".
 862  8CD3
 863  8CD3 D6 06        2 sub 6
 864  8CD5 04           	inc b
 865  8CD6 A7           	and a
 866  8CD7 20 FA        	jr nz,2B
 867  8CD9 78           	ld a,b
 868  8CDA
 869  8CDA 32 DD 89     1 ld (Numero_de_malotes),a
 870  8CDD C9           	ret
 871  8CDE
 872  8CDE              ; -------------------------------------------------------------------------------------------------------------
 873  8CDE              ;
 874  8CDE              ; 28/2/23
 875  8CDE              ;
 876  8CDE
 877  8CDE              Calcula_numero_de_disparotes
 878  8CDE
 879  8CDE 21 85 70     	ld hl,Album_de_fotos_disparos
 880  8CE1 EB           	ex de,hl
 881  8CE2 2A E8 89     	ld hl,(Stack_snapshot_disparos)
 882  8CE5
 883  8CE5 06 00        	ld b,0
 884  8CE7 7D           	ld a,l
 885  8CE8 93           	sub e
 886  8CE9 28 07        	jr z,1F
 887  8CEB
 888  8CEB              ; Nº de malotes no es "0".
 889  8CEB
 890  8CEB D6 06        2 sub 6
 891  8CED 04           	inc b
 892  8CEE A7           	and a
 893  8CEF 20 FA        	jr nz,2B
 894  8CF1 78           	ld a,b
 895  8CF2
 896  8CF2 32 EA 89     1 ld (Numero_de_disparotes),a
 897  8CF5 C9           	ret
 898  8CF6              ; *************************************************************************************************************************************************************
 899  8CF6              ;
 900  8CF6              ; 20/10/22
 901  8CF6              ;
 902  8CF6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 903  8CF6              ;
 904  8CF6              ; Destruye el puntero y DE !!!!!
 905  8CF6
 906  8CF6 5E           Extrae_address ld e,(hl)
 907  8CF7 23           	inc hl
 908  8CF8 56           	ld d,(hl)
 909  8CF9 2B           	dec hl
 910  8CFA EB           	ex de,hl
 911  8CFB C9           	ret
 912  8CFC
 913  8CFC              ; *************************************************************************************************************************************************************
 914  8CFC              ;
 915  8CFC              ;	7/2/23
 916  8CFC              ;
 917  8CFC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 918  8CFC              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 919  8CFC              ;
 920  8CFC              ;   Destruye HL y BC !!!!!,
 921  8CFC              ;
 922  8CFC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 923  8CFC              ;					"0" ..... Izquierda.
 924  8CFC
 925  8CFC              Inicia_Puntero_objeto
 926  8CFC
 927  8CFC 3A A7 89     	ld a,(Cuad_objeto)
 928  8CFF E6 01        	and 1
 929  8D01 F5           	push af
 930  8D02 CC 20 8D     	call z,Inicia_puntero_objeto_izq
 931  8D05 F1           	pop af
 932  8D06 28 2B        	jr z,1F
 933  8D08 CD 0D 8D     	call Inicia_puntero_objeto_der
 934  8D0B 18 26        	jr 1F
 935  8D0D
 936  8D0D              ; Arrancamos desde la parte izquierda de la pantalla.
 937  8D0D              ; Iniciamos (Indice_Sprite_der).
 938  8D0D
 939  8D0D 2A 9D 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 940  8D10 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 941  8D13 CD F6 8C     	call Extrae_address
 942  8D16 22 97 89     	ld (Puntero_objeto),hl
 943  8D19
 944  8D19 2A 9F 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 945  8D1C 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 946  8D1F C9           	ret
 947  8D20
 948  8D20              ; Arrancamos desde la parte derecha de la pantalla.
 949  8D20              ; Iniciamos (Indice_Sprite_izq).
 950  8D20
 951  8D20 2A 9F 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 952  8D23 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 953  8D26 CD F6 8C     	call Extrae_address
 954  8D29 22 97 89     	ld (Puntero_objeto),hl
 955  8D2C
 956  8D2C 2A 9D 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 957  8D2F 22 A1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 958  8D32 C9           	ret
 959  8D33
 960  8D33              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 961  8D33
 962  8D33 21 38 83     1 ld hl,Amadeus
 963  8D36 ED 4B 97 89  	ld bc,(Puntero_objeto)
 964  8D3A B7 ED 42     	sub hl,bc
 965  8D3D C0           	ret nz
 966  8D3E 21 C1 89     	ld hl,Ctrl_0
 967  8D41 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 968  8D43 C9           	ret 												; _de nuestra nave en los extremos.
 969  8D44
 970  8D44              ; *************************************************************************************************************************************************************
 971  8D44              ;
 972  8D44              ;	14/5/23
 973  8D44              ;
 974  8D44              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 975  8D44              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 976  8D44
 977  8D44              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 978  8D44              ;	_de la 2ª y 3ª entidad respectivamente.
 979  8D44
 980  8D44              Store_Restore_cajas
 981  8D44
 982  8D44 E5           	push hl
 983  8D45 D5           	push de
 984  8D46 C5            	push bc
 985  8D47
 986  8D47              ;	STORE !!!!!
 987  8D47              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 988  8D47
 989  8D47 21 93 89     	ld hl,Filas
 990  8D4A ED 5B D4 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 991  8D4E 01 3E 00     	ld bc,62
 992  8D51 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 993  8D53
 994  8D53              ; 	Entidad_sospechosa. 20/4/23
 995  8D53
 996  8D53 3A AC 89     	ld a,(Impacto)
 997  8D56 A7           	and a
 998  8D57 28 0C        	jr z,1F
 999  8D59
1000  8D59 2A D4 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1001  8D5C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1002  8D5F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1003  8D60 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1004  8D62 22 F0 89     	ld (Entidad_sospechosa_de_colision),hl
1005  8D65
1006  8D65              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1007  8D65
1008  8D65 2A D6 89     1 ld hl,(Puntero_restore_caja)
1009  8D68 7E           	ld a,(hl)
1010  8D69 A7           	and a
1011  8D6A F5           	push af
1012  8D6B 28 08        	jr z,2F
1013  8D6D
1014  8D6D 11 93 89     	ld de,Filas
1015  8D70 01 3E 00     	ld bc,62
1016  8D73 ED B0        	ldir
1017  8D75
1018  8D75 CD 91 8D     2 call Incrementa_punteros_de_cajas
1019  8D78 F1           	pop af
1020  8D79 28 EA        	jr z,1B
1021  8D7B
1022  8D7B C1           	pop bc
1023  8D7C D1           	pop de
1024  8D7D E1           	pop hl
1025  8D7E
1026  8D7E C9           	ret
1027  8D7F
1028  8D7F              ; **************************************************************************************************
1029  8D7F              ;
1030  8D7F              ;	12/05/23
1031  8D7F              ;
1032  8D7F              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1033  8D7F
1034  8D7F E5           Restore_entidad push hl
1035  8D80 D5           	push de
1036  8D81 C5            	push bc
1037  8D82
1038  8D82 2A D4 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1039  8D85 11 93 89     	ld de,Filas
1040  8D88 01 3E 00     	ld bc,62
1041  8D8B ED B0        	ldir
1042  8D8D
1043  8D8D C1           	pop bc
1044  8D8E D1           	pop de
1045  8D8F E1           	pop hl
1046  8D90 C9           	ret
1047  8D91
1048  8D91
1049  8D91              ; **************************************************************************************************
1050  8D91              ;
1051  8D91              ;	08/05/23
1052  8D91              ;
1053  8D91              ;	Incrementamos los dos punteros de entidades. (+1).
1054  8D91
1055  8D91 2A D6 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1056  8D94 22 D4 89     	ld (Puntero_store_caja),hl
1057  8D97 2A D8 89     	ld hl,(Indice_restore_caja)
1058  8D9A 23           	inc hl
1059  8D9B 23           	inc hl
1060  8D9C 22 D8 89     	ld (Indice_restore_caja),hl
1061  8D9F CD F6 8C         call Extrae_address
1062  8DA2 22 D6 89         ld (Puntero_restore_caja),hl
1063  8DA5 C9               ret
1064  8DA6
1065  8DA6              ; **************************************************************************************************
1066  8DA6              ;
1067  8DA6              ;	25/01/23
1068  8DA6              ;
1069  8DA6              ;	Restore_Amadeus
1070  8DA6              ;
1071  8DA6              ;	Cargamos en DRAW los parámetros de Amadeus.
1072  8DA6              ;
1073  8DA6
1074  8DA6 E5           Restore_Amadeus	push hl
1075  8DA7 D5           	push de
1076  8DA8 C5            	push bc
1077  8DA9 21 7C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1078  8DAC 11 93 89     	ld de,Filas
1079  8DAF 01 3E 00     	ld bc,62
1080  8DB2 ED B0        	ldir
1081  8DB4 C1           	pop bc
1082  8DB5 D1           	pop de
1083  8DB6 E1           	pop hl
1084  8DB7 C9           	ret
1085  8DB8
1086  8DB8              ; *************************************************************************************************************************************************************
1087  8DB8              ;
1088  8DB8              ;	29/04/23
1089  8DB8              ;
1090  8DB8              ;	Store_Amadeus
1091  8DB8              ;
1092  8DB8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1093  8DB8              ;
1094  8DB8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1095  8DB8              ;
1096  8DB8              ;	DESTRUYE: HL y BC y DE.
1097  8DB8
1098  8DB8 21 93 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1099  8DBB 01 3E 00     	ld bc,62
1100  8DBE ED B0        	ldir
1101  8DC0 C9           	ret
1102  8DC1
1103  8DC1              ; -----------------------------------------------------------
1104  8DC1              ;
1105  8DC1              ;	27/04/23
1106  8DC1              ;
1107  8DC1              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1108  8DC1              ;
1109  8DC1              ;	Destruye: HL,BC,DE,A
1110  8DC1
1111  8DC1 21 93 89     Borra_datos_entidad ld hl,Filas
1112  8DC4 01 3D 00     	ld bc,61
1113  8DC7 AF           	xor a
1114  8DC8 77           	ld (hl),a
1115  8DC9 11 94 89     	ld de,Filas+1
1116  8DCC ED B0        	ldir
1117  8DCE C9           	ret
1118  8DCF
1119  8DCF              ; -----------------------------------------------------------
1120  8DCF
1121  8DCF              ; Teclado.
1122  8DCF
1123  8DCF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1124  8DD1 DB FE        	in a,($fe)
1125  8DD3 E6 01        	and $01
1126  8DD5 28 02        	jr z,1f
1127  8DD7 18 F6        	jr Pulsa_ENTER
1128  8DD9 C9           1 ret
1129  8DDA
1130  8DDA              ; **************************************************************************************************
1131  8DDA              ;
1132  8DDA              ; Temporización.
1133  8DDA
1134  8DDA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1135  8DDA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1136  8DDA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1137  8DDA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1138  8DDA
1139  8DDA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1140  8DDA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1141  8DDA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1142  8DDA
1143  8DDA              ; A partir de $4f61 no hace falta DELAY.
1144  8DDA
1145  8DDA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1146  8DDA
1147  8DDA 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1148  8DDD 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1149  8DDE 78           	LD A,B
1150  8DDF A7           	AND A
1151  8DE0 20 FB        	JR NZ,wait
1152  8DE2 C9           	RET
1153  8DE3
1154  8DE3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1155  8DE3              ;
1156  8DE3              ;	5/3/23
1157  8DE3              ;
1158  8DE3              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1159  8DE3
1160  8DE3              Movimiento_Amadeus
1161  8DE3
1162  8DE3              ; Disparo.
1163  8DE3
1164  8DE3 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1165  8DE6 A7           	and a
1166  8DE7 20 02        	jr nz,1F
1167  8DE9 18 15        	jr 2F
1168  8DEB
1169  8DEB 3E F7        1 ld a,$f7													; "5" para disparar.
1170  8DED DB FE        	in a,($fe)
1171  8DEF E6 10        	and $10
1172  8DF1
1173  8DF1 F5           	push af
1174  8DF2 CC 2A 8E     	call z,Genera_disparo
1175  8DF5 F1           	pop af
1176  8DF6 20 08        	jr nz,2F
1177  8DF8
1178  8DF8 3A FD 89     	ld a,(Habilita_disparo_Amadeus)
1179  8DFB EE 01        	xor 1
1180  8DFD 32 FD 89     	ld (Habilita_disparo_Amadeus),a
1181  8E00
1182  8E00 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1183  8E02 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1184  8E04 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1185  8E06 CC C5 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1186  8E09 3E F7        	ld a,$f7
1187  8E0B DB FE        	in a,($fe)
1188  8E0D E6 01        	and $01
1189  8E0F C8           	ret z
1190  8E10
1191  8E10 3E F7        	ld a,$f7
1192  8E12 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1193  8E14 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1194  8E16 CC A7 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1195  8E19 C9           	ret
1196  8E1A
1197  8E1A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1198  8E1A              ;
1199  8E1A              ;	Rutina provisional para que los malotes cagen balas.
1200  8E1A
1201  8E1A              Detecta_disparo_entidad
1202  8E1A
1203  8E1A 3A 00 8A     	ld a,(Habilita_disparo_entidad)
1204  8E1D A7           	and a
1205  8E1E C8           	ret z
1206  8E1F 3E 7F        	ld a,$7f
1207  8E21 DB FE        	in a,($fe)
1208  8E23 E6 01        	and 1
1209  8E25 C0           	ret nz
1210  8E26 CD 2A 8E     	call Genera_disparo
1211  8E29 C9           	ret
1212  8E2A
1213  8E2A              ; ---------------------------------------------------------------
1214  8E2A
1215  8E2A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E2A              ; ******************************************************************************************************************************************************************************************
   2+ 8E2A              ;
   3+ 8E2A              ;   17/04/23
   4+ 8E2A              ;
   5+ 8E2A              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E2A              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E2A              ;
   8+ 8E2A              ;
   9+ 8E2A              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E2A              ;
  11+ 8E2A              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E2A              ;               _ hacen las entidades hacia abajo.
  13+ 8E2A              ;
  14+ 8E2A              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E2A              ;
  16+ 8E2A              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E2A              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E2A              ;
  19+ 8E2A              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E2A              ;           _ la bala.
  21+ 8E2A              ;
  22+ 8E2A              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E2A              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E2A              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E2A              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E2A              ;           _ en el momento de generarse la bala)).
  27+ 8E2A
  28+ 8E2A              Genera_disparo
  29+ 8E2A
  30+ 8E2A              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E2A              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E2A              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E2A              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E2A              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E2A              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E2A              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E2A
  38+ 8E2A              ; Exclusiones:
  39+ 8E2A
  40+ 8E2A 3A CB 89         ld a,(Columnas)
  41+ 8E2D 47               ld b,a
  42+ 8E2E 3A 94 89         ld a,(Columns)
  43+ 8E31 B8               cp b
  44+ 8E32 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E33
  46+ 8E33              ; ----- ----- -----
  47+ 8E33
  48+ 8E33 3A C1 89         ld a,(Ctrl_0)
  49+ 8E36 CB 77            bit 6,a
  50+ 8E38 20 06            jr nz,14F
  51+ 8E3A
  52+ 8E3A 3A 9A 89         ld a,(Coordenada_y)
  53+ 8E3D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E3F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E40
  56+ 8E40 21 00 80     14 ld hl,Indice_disparo
  57+ 8E43 3A 9B 89         ld a,(CTRL_DESPLZ)
  58+ 8E46 4F               ld c,a
  59+ 8E47 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E49              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E49              ;                                            ""        ""       "f9", B="1"
  62+ 8E49              ;                                            ""        ""       "fb", B="2"
  63+ 8E49              ;                                            ""        ""       "fb", B="3"
  64+ 8E49 A7               and a
  65+ 8E4A 28 10            jr z,1F
  66+ 8E4C E6 01            and 1
  67+ 8E4E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E4F
  69+ 8E4F 79               ld a,c
  70+ 8E50 16 F9            ld d,$f9
  71+ 8E52 23           2 inc hl
  72+ 8E53 23               inc hl
  73+ 8E54 04               inc b
  74+ 8E55 BA               cp d
  75+ 8E56 28 04            jr z,1F
  76+ 8E58 14               inc d
  77+ 8E59 14               inc d
  78+ 8E5A 18 F6            jr 2B
  79+ 8E5C
  80+ 8E5C CD F6 8C     1 call Extrae_address
  81+ 8E5F E5               push hl
  82+ 8E60 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E62 DD 21 C0 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E66
  85+ 8E66              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E66              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E66
  88+ 8E66 3A C1 89         ld a,(Ctrl_0)
  89+ 8E69 CB 77            bit 6,a
  90+ 8E6B 20 04            jr nz,19F
  91+ 8E6D
  92+ 8E6D AF               xor a
  93+ 8E6E 32 00 8A         ld (Habilita_disparo_entidad),a
  94+ 8E71
  95+ 8E71 3A A7 89     19 ld a,(Cuad_objeto)
  96+ 8E74 FE 02            cp 2
  97+ 8E76 38 66            jr c,3F
  98+ 8E78 28 64            jr z,3F
  99+ 8E7A
 100+ 8E7A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E7A
 102+ 8E7A E6 01            and 1
 103+ 8E7C 28 30            jr z,4F
 104+ 8E7E
 105+ 8E7E              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E7E              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E7E              ;
 108+ 8E7E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E7E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E7E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E7E
 112+ 8E7E 2A 95 89     	ld hl,(Posicion_actual)
 113+ 8E81
 114+ 8E81              ;   Amadeus o entidad ???.
 115+ 8E81
 116+ 8E81 3A C1 89         ld a,(Ctrl_0)
 117+ 8E84 CB 77            bit 6,a
 118+ 8E86 28 0A            jr z,8F
 119+ 8E88
 120+ 8E88              ; 	Dispara Amadeus.
 121+ 8E88
 122+ 8E88 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E8A CD 3C 95         call PreviousScan
 124+ 8E8D CD 3C 95         call PreviousScan
 125+ 8E90
 126+ 8E90              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8E90              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8E90              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8E90              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8E90
 131+ 8E90 18 11            jr 10F
 132+ 8E92
 133+ 8E92              ; 	Dispara Entidad.
 134+ 8E92
 135+ 8E92 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8E95              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8E95
 138+ 8E95              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8E95              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8E95
 141+ 8E95 C5               push bc
 142+ 8E96 06 10            ld b,16
 143+ 8E98 CD 2D 95     9 call NextScan
 144+ 8E9B 10 FB            djnz 9B
 145+ 8E9D C1               pop bc
 146+ 8E9E CD 08 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EA1 18 06            jr 17F
 148+ 8EA3
 149+ 8EA3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EA3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EA3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EA3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EA3
 154+ 8EA3 CD 08 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EA6 CD 7D 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EA9              ;                                                      ; _al generar el disparo.
 157+ 8EA9
 158+ 8EA9              ; 	LLegados a este punto tendremos:
 159+ 8EA9              ;
 160+ 8EA9              ;       Puntero_objeto_disparo en IY.
 161+ 8EA9              ;       Rutinas_de_impresion en IX.
 162+ 8EA9              ;       Puntero_de_impresion en HL.
 163+ 8EA9              ;       Impacto/Dirección en BC.
 164+ 8EA9
 165+ 8EA9 CD 10 8F     17 call Almacena_disparo
 166+ 8EAC 18 52            jr 6F                                             ; RET.
 167+ 8EAE
 168+ 8EAE              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EAE              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EAE              ;
 171+ 8EAE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EAE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EAE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EAE
 175+ 8EAE 2A 95 89     4 ld hl,(Posicion_actual)
 176+ 8EB1
 177+ 8EB1              ;   Amadeus o entidad ???.
 178+ 8EB1
 179+ 8EB1 3A C1 89         ld a,(Ctrl_0)
 180+ 8EB4 CB 77            bit 6,a
 181+ 8EB6 28 0A            jr z,11F
 182+ 8EB8
 183+ 8EB8              ; 	Dispara Amadeus.
 184+ 8EB8
 185+ 8EB8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EBA CD 3C 95         call PreviousScan
 187+ 8EBD CD 3C 95         call PreviousScan
 188+ 8EC0
 189+ 8EC0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EC0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EC0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EC0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EC0
 194+ 8EC0 18 11            jr 13F
 195+ 8EC2
 196+ 8EC2              ; 	Dispara Entidad.
 197+ 8EC2
 198+ 8EC2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EC5              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EC5
 201+ 8EC5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EC5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EC5
 204+ 8EC5 C5               push bc
 205+ 8EC6 06 10            ld b,16
 206+ 8EC8 CD 2D 95     12 call NextScan
 207+ 8ECB 10 FB            djnz 12B
 208+ 8ECD C1               pop bc
 209+ 8ECE
 210+ 8ECE CD 01 8F         call Ajusta_disparo_parte_derecha
 211+ 8ED1 18 06            jr 18F
 212+ 8ED3
 213+ 8ED3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8ED3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8ED3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8ED3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8ED3
 218+ 8ED3 CD 01 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8ED6 CD 7D 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8ED9              ;                                                       ; _al generar el disparo.
 221+ 8ED9
 222+ 8ED9              ; LLegados a este punto tendremos:
 223+ 8ED9              ;
 224+ 8ED9              ;       Puntero_objeto_disparo en IY.
 225+ 8ED9              ;       Rutinas_de_impresion en IX.
 226+ 8ED9              ;       Puntero_de_impresion en HL.
 227+ 8ED9              ;       Impacto/Dirección en BC.
 228+ 8ED9
 229+ 8ED9 CD 10 8F     18 call Almacena_disparo
 230+ 8EDC 18 22            jr 6F                                               ; RET.
 231+ 8EDE
 232+ 8EDE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EDE
 234+ 8EDE 28 11        3 jr z,5F
 235+ 8EE0
 236+ 8EE0              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EE0              ;
 238+ 8EE0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EE0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EE0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EE0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EE0
 243+ 8EE0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EE0              ;	   ""        ""       "f9", B="1"
 245+ 8EE0              ;	   ""        ""       "fb", B="2"
 246+ 8EE0              ; 	   ""        ""       "fb", B="3"
 247+ 8EE0
 248+ 8EE0 2A 95 89     	ld hl,(Posicion_actual)
 249+ 8EE3 CD 2D 95     	call NextScan
 250+ 8EE6
 251+ 8EE6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EE6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EE6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EE6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EE6
 256+ 8EE6 CD 08 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EE9
 258+ 8EE9              ; 	No se produce impacto. B="$80"
 259+ 8EE9              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EE9
 261+ 8EE9 01 80 80         ld bc,$8080
 262+ 8EEC
 263+ 8EEC              ; 	LLegados a este punto tendremos:
 264+ 8EEC              ;
 265+ 8EEC              ;       Puntero_objeto_disparo en IY.
 266+ 8EEC              ;       Rutinas_de_impresion en IX.
 267+ 8EEC              ;       Puntero_de_impresion en HL.
 268+ 8EEC              ;       Impacto/Dirección en BC.
 269+ 8EEC
 270+ 8EEC CD 10 8F         call Almacena_disparo
 271+ 8EEF 18 0F            jr 6F                                           ; RET.
 272+ 8EF1
 273+ 8EF1              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8EF1              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8EF1              ;
 276+ 8EF1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8EF1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8EF1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8EF1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8EF1
 281+ 8EF1 2A 95 89     5 ld hl,(Posicion_actual)
 282+ 8EF4 CD 2D 95     	call NextScan
 283+ 8EF7
 284+ 8EF7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8EF7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8EF7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8EF7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8EF7
 289+ 8EF7 CD 01 8F         call Ajusta_disparo_parte_derecha
 290+ 8EFA
 291+ 8EFA              ; 	No se produce impacto. B="$80"
 292+ 8EFA              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8EFA
 294+ 8EFA 01 80 80     15 ld bc,$8080
 295+ 8EFD
 296+ 8EFD              ; 	LLegados a este punto tendremos:
 297+ 8EFD              ;
 298+ 8EFD              ;       Puntero_objeto_disparo en IY.
 299+ 8EFD              ;       Rutinas_de_impresion en IX.
 300+ 8EFD              ;       Puntero_de_impresion en HL.
 301+ 8EFD              ;       Impacto/Dirección en BC.
 302+ 8EFD
 303+ 8EFD CD 10 8F         call Almacena_disparo
 304+ 8F00
 305+ 8F00 C9           6 ret
 306+ 8F01
 307+ 8F01              ; ----------------------------------------------------------------
 308+ 8F01              ;
 309+ 8F01              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F01              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F01              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F01
 313+ 8F01 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F02 FE 02            cp 2
 315+ 8F04 38 01            jr c,1F
 316+ 8F06 23               inc hl
 317+ 8F07 C9           1 ret
 318+ 8F08
 319+ 8F08 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F09 FE 01        	cp 1
 321+ 8F0B 20 01        	jr nz,1F
 322+ 8F0D 2B           	dec hl
 323+ 8F0E 2B           1 dec hl
 324+ 8F0F C9               ret
 325+ 8F10
 326+ 8F10              ; ----------------------------------------------------------------
 327+ 8F10              ;
 328+ 8F10              ;   25/02/23
 329+ 8F10              ;
 330+ 8F10              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F10              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F10              ;
 333+ 8F10              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F10              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F10
 336+ 8F10              Almacena_disparo
 337+ 8F10
 338+ 8F10 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F11 F1               pop af
 340+ 8F12 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F13
 342+ 8F13 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F14 E6 01            and 1
 344+ 8F16 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F18              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F18              ; 	Dispara AMADEUS.
 347+ 8F18
 348+ 8F18              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F18              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F18              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F18              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F18
 353+ 8F18 C5               push bc
 354+ 8F19 01 E8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F1C 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F1F A7               and a
 357+ 8F20 ED 42            sbc hl,bc
 358+ 8F22 CC BF 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F25 C1               pop bc
 360+ 8F26 28 54            jr z,4F
 361+ 8F28
 362+ 8F28 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F2B 23               inc hl
 364+ 8F2C 23               inc hl
 365+ 8F2D 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F30              ;                                                   ; _ Disparo_(+1).
 367+ 8F30 18 18            jr 2F
 368+ 8F32
 369+ 8F32              ; Dispara una entidad.
 370+ 8F32
 371+ 8F32 C5           1 push bc
 372+ 8F33 01 10 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F36 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F39 A7               and a
 375+ 8F3A ED 42            sbc hl,bc
 376+ 8F3C CC B8 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F3F C1               pop bc
 378+ 8F40 28 3A            jr z,4F
 379+ 8F42
 380+ 8F42 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F45 23               inc hl
 382+ 8F46 23               inc hl
 383+ 8F47 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F4A              ;                                                   ; _ Disparo_(+1).
 385+ 8F4A CD F6 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F4D              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F4D              ;
 388+ 8F4D              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F4D              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F4D              ;                                                     Puntero_de_impresion en HL.
 391+ 8F4D              ;                                                     Impacto/Dirección en BC.
 392+ 8F4D
 393+ 8F4D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F4E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F4F 23               inc hl                                          ; _ al siguiente.
 396+ 8F50 A7               and a
 397+ 8F51 20 C0            jr nz,3B
 398+ 8F53
 399+ 8F53 08               ex af,af
 400+ 8F54 ED 73 E2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F58 F9               ld sp,hl
 402+ 8F59
 403+ 8F59 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F5B F5               push af                                         ; Puntero de impresión.
 405+ 8F5C FD E5            push iy                                         ; Puntero objeto.
 406+ 8F5E C5               push bc                                         ; Control.
 407+ 8F5F
 408+ 8F5F ED 7B E2 89      ld sp,(Stack)
 409+ 8F63
 410+ 8F63              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F63
 412+ 8F63 21 D1 89     	ld hl,Ctrl_1
 413+ 8F66 CB C6        	set 0,(hl)
 414+ 8F68
 415+ 8F68 DD E5        	push ix
 416+ 8F6A E1               pop hl
 417+ 8F6B F5               push af
 418+ 8F6C DD E1            pop ix
 419+ 8F6E
 420+ 8F6E CD A0 7F     	call Guarda_foto_registros
 421+ 8F71
 422+ 8F71 21 D1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F74 CB 86        	res 0,(hl)
 424+ 8F76
 425+ 8F76              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F76              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F76
 428+ 8F76 CD BF 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F79 CD B8 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F7C
 431+ 8F7C C9           4 ret
 432+ 8F7D
 433+ 8F7D              ; ----------------------------------------------------------------
 434+ 8F7D              ;
 435+ 8F7D              ;   4/3/23
 436+ 8F7D              ;
 437+ 8F7D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F7D              ;   _ al generarse el disparo.
 439+ 8F7D              ;
 440+ 8F7D              ;       "$80" ..... No se produce colisión.
 441+ 8F7D              ;       "$81" ..... Se produce colisión.
 442+ 8F7D
 443+ 8F7D              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F7D              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F7D
 446+ 8F7D
 447+ 8F7D FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F7F E5               push hl                                        ; Puntero de impresión.
 449+ 8F80
 450+ 8F80 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F82 CD 9E 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F85
 453+ 8F85 7B               ld a,e
 454+ 8F86 E6 01            and 1
 455+ 8F88 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F8A
 457+ 8F8A E1               pop hl
 458+ 8F8B E5               push hl
 459+ 8F8C CD 2D 95         call NextScan
 460+ 8F8F
 461+ 8F8F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8F90 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8F92 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8F94              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8F94 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8F96 CD 9E 8F         call Bucle_2
 467+ 8F99
 468+ 8F99 43           2 ld b,e
 469+ 8F9A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8F9B FD E1            pop iy
 471+ 8F9D C9               ret
 472+ 8F9E
 473+ 8F9E               ; ---------- ----------
 474+ 8F9E
 475+ 8F9E 06 02        Bucle_2 ld b,2
 476+ 8FA0 FD 7E 00     2 ld a,(iy)
 477+ 8FA3 A6               and (hl)
 478+ 8FA4 28 02            jr z,1F
 479+ 8FA6 1E 81            ld e,$81
 480+ 8FA8 23           1 inc hl
 481+ 8FA9 FD 23            inc iy
 482+ 8FAB 10 F3            djnz 2B
 483+ 8FAD C9               ret
 484+ 8FAE
 485+ 8FAE              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FAE              ;
 487+ 8FAE              ;   11/04/23
 488+ 8FAE              ;
 489+ 8FAE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FAE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FAE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FAE              ;
 493+ 8FAE              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FAE
 495+ 8FAE              Compara_coordenadas_X
 496+ 8FAE
 497+ 8FAE              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FAE              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FAE
 500+ 8FAE              ; Preparamos registros:
 501+ 8FAE
 502+ 8FAE 21 99 89         ld hl,Filas+6
 503+ 8FB1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FB2 23               inc hl
 505+ 8FB3 23               inc hl
 506+ 8FB4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FB5 43               ld b,e
 508+ 8FB6 21 A7 89         ld hl,Filas+20
 509+ 8FB9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FBA 21 F7 89         ld hl,Coordenadas_X_Entidad
 511+ 8FBD CD CE 91         call Guarda_coordenadas_X
 512+ 8FC0
 513+ 8FC0              ; Preparamos registros:
 514+ 8FC0
 515+ 8FC0 21 82 85         ld hl,Amadeus_db+6
 516+ 8FC3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FC4 23               inc hl
 518+ 8FC5 23               inc hl
 519+ 8FC6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FC7 7B               ld a,e
 521+ 8FC8 08               ex af,af'
 522+ 8FC9 21 90 85         ld hl,Amadeus_db+20
 523+ 8FCC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FCD 21 F4 89         ld hl,Coordenadas_X_Amadeus
 525+ 8FD0 CD CE 91         call Guarda_coordenadas_X
 526+ 8FD3
 527+ 8FD3              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FD3              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FD3
 530+ 8FD3 04               inc b
 531+ 8FD4 05               dec b
 532+ 8FD5 28 04            jr z,1F
 533+ 8FD7 06 03            ld b,3
 534+ 8FD9 18 02            jr 2F
 535+ 8FDB 06 02        1 ld b,2
 536+ 8FDD 08           2 ex af,af'
 537+ 8FDE 3C               inc a
 538+ 8FDF 3D               dec a
 539+ 8FE0 28 04            jr z,5F
 540+ 8FE2 0E 03            ld c,3
 541+ 8FE4 18 02            jr 6F
 542+ 8FE6 0E 02        5 ld c,2
 543+ 8FE8 79           6 ld a,c
 544+ 8FE9 08               ex af,af'
 545+ 8FEA 11 F7 89         ld de,Coordenadas_X_Entidad
 546+ 8FED 1A           4 ld a,(de)
 547+ 8FEE 21 F4 89         ld hl,Coordenadas_X_Amadeus
 548+ 8FF1 BE           3 cp (hl)
 549+ 8FF2 28 0E            jr z,7F
 550+ 8FF4 23               inc hl
 551+ 8FF5 0D               dec c
 552+ 8FF6 20 F9            jr nz,3B
 553+ 8FF8 13               inc de
 554+ 8FF9 08               ex af,af'
 555+ 8FFA 4F               ld c,a
 556+ 8FFB 08               ex af,af'
 557+ 8FFC 10 EF            djnz 4B
 558+ 8FFE
 559+ 8FFE              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8FFE
 561+ 8FFE CD 0D 92     8 call Limpia_Coordenadas_X
 562+ 9001 C9               ret
 563+ 9002
 564+ 9002              7
 565+ 9002 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9004 32 AC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9007 21 EF 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 900A CB D6            set 2,(hl)
 569+ 900C 18 F0            jr 8B
 570+ 900E
 571+ 900E              ; -----------------------------------------------------------------------
 572+ 900E              ;
 573+ 900E              ;   17/04/23
 574+ 900E              ;
 575+ 900E
 576+ 900E              Detecta_colision_nave_entidad
 577+ 900E
 578+ 900E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 900E
 580+ 900E 2A 95 89         ld hl,(Posicion_actual)
 581+ 9011 CD 92 94         call Calcula_puntero_de_impresion
 582+ 9014
 583+ 9014              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9014              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9014
 586+ 9014 DD E5            push ix
 587+ 9016 E1               pop hl
 588+ 9017 E5               push hl
 589+ 9018
 590+ 9018              ; ----- ----- -----
 591+ 9018 1E 00            ld e,0                                         ; Indica impacto.
 592+ 901A 06 0A            ld b,10
 593+ 901C CD 4C 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 901F 7B               ld a,e
 595+ 9020 FE 05            cp 5
 596+ 9022 38 0E            jr c,3F
 597+ 9024
 598+ 9024              ; LLegados a este punto:
 599+ 9024              ;
 600+ 9024              ;   HAY COLISIÓN !!!!!.
 601+ 9024              ;
 602+ 9024              ;   .db (Impacto) de Amadeus a "1".
 603+ 9024              ;   SET el bit3 de (Impacto2).
 604+ 9024              ;
 605+ 9024              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9024
 607+ 9024 21 95 85         ld hl,Amadeus_db+25
 608+ 9027 36 01            ld (hl),1
 609+ 9029 21 EF 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 902C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 902E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9030 18 18            jr 1F
 613+ 9032
 614+ 9032              ; -----
 615+ 9032
 616+ 9032 E1           3 pop hl
 617+ 9033 CD 2D 95         call NextScan
 618+ 9036 E5               push hl
 619+ 9037 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9038 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 903A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 903C 30 0C            jr nc,1F
 623+ 903E              ;                                                  ; _ 2º scanline si esto es así.
 624+ 903E 10 DC            djnz 2B
 625+ 9040
 626+ 9040              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9040
 628+ 9040              ; LLegados a este punto:
 629+ 9040              ;
 630+ 9040              ;   NO HAY COLISIÓN !!!!!.
 631+ 9040              ;
 632+ 9040              ;   .db (Impacto) de Amadeus a "0".
 633+ 9040              ;   RES el bit2 de (Impacto2).
 634+ 9040              ;
 635+ 9040              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9040              ;   Lo colocamos a "0".
 637+ 9040
 638+ 9040 21 EF 89         ld hl,Impacto2
 639+ 9043 CB 96            res 2,(hl)
 640+ 9045 2A F0 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9048 36 00            ld (hl),0
 642+ 904A
 643+ 904A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 904B C9               ret
 645+ 904C
 646+ 904C               ; ---------- ----------
 647+ 904C
 648+ 904C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 904D 3A 94 89         ld a,(Columns)
 650+ 9050 47               ld b,a
 651+ 9051 FD 7E 00     2 ld a,(iy)
 652+ 9054 BE               cp (hl)
 653+ 9055 28 01            jr z,1F
 654+ 9057
 655+ 9057 1C               inc e
 656+ 9058
 657+ 9058 23           1 inc hl
 658+ 9059 FD 23            inc iy
 659+ 905B 10 F4            djnz 2B
 660+ 905D C1               pop bc
 661+ 905E C9               ret
 662+ 905F
 663+ 905F              ; -------------------------------------------------------------------------------------------------------------
 664+ 905F              ;
 665+ 905F              ;   13/03/23
 666+ 905F              ;
 667+ 905F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 905F              ;
 669+ 905F              ;   DESTRUYE: HL,BC,DE y A.
 670+ 905F
 671+ 905F 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9062 7E               ld a,(hl)
 673+ 9063 A7               and a
 674+ 9064 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9065
 676+ 9065 44               ld b,h
 677+ 9066 4D               ld c,l
 678+ 9067 2A E8 89         ld hl,(Stack_snapshot_disparos)
 679+ 906A E5               push hl
 680+ 906B A7               and a
 681+ 906C ED 42            sbc hl,bc
 682+ 906E E5               push hl
 683+ 906F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9070
 685+ 9070 E1               pop hl
 686+ 9071 54               ld d,h
 687+ 9072 5D               ld e,l
 688+ 9073 1B               dec de
 689+ 9074 ED B8            lddr                                                ; Limpiamos.
 690+ 9076
 691+ 9076 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 9079 22 E8 89         ld (Stack_snapshot_disparos),hl
 693+ 907C
 694+ 907C C9               ret
 695+ 907D
 696+ 907D              ; -------------------------------------------------------------------------------------------------------------
 697+ 907D              ;
 698+ 907D              ;   28/03/23
 699+ 907D              ;
 700+ 907D
 701+ 907D 01 FA 84     Motor_de_disparos ld bc,Disparo_3A
 702+ 9080 2A ED 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9083
 704+ 9083 CD F6 8C     2 call Extrae_address
 705+ 9086 7E               ld a,(hl)
 706+ 9087 A7               and a
 707+ 9088 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 908A
 709+ 908A              ; ----- ----- ----- ----- ----- -----
 710+ 908A
 711+ 908A C5               push bc
 712+ 908B CD 47 91         call foto_disparo_a_borrar
 713+ 908E
 714+ 908E              ; Existe colisión con este disparo???
 715+ 908E
 716+ 908E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 908F 7E               ld a,(hl)
 718+ 9090 2B               dec hl
 719+ 9091 E6 01            and 1
 720+ 9093 28 1D            jr z,9F
 721+ 9095
 722+ 9095              ;   En este punto:
 723+ 9095              ;
 724+ 9095              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 9095              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 9095              ;   _con la entidad).
 727+ 9095              ;
 728+ 9095              ;   Disparo_2A defw 0                                ; Control.
 729+ 9095              ;    defw 0                                          ; Puntero objeto.
 730+ 9095              ;    defw 0                                          ; Puntero de impresión.
 731+ 9095              ;    defw 0                                          ; Rutina de impresión.
 732+ 9095
 733+ 9095 E5               push hl
 734+ 9096
 735+ 9096 06 04            ld b,4
 736+ 9098 23           19 inc hl
 737+ 9099 10 FD            djnz 19B
 738+ 909B
 739+ 909B CD F6 8C         call Extrae_address
 740+ 909E CD 84 9B         call Genera_coordenadas_disparo
 741+ 90A1
 742+ 90A1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90A1
 744+ 90A1 21 F2 89         ld hl,Coordenadas_disparo_certero
 745+ 90A4 72               ld (hl),d
 746+ 90A5 23               inc hl
 747+ 90A6 73               ld (hl),e
 748+ 90A7
 749+ 90A7              ; Elimino el disparo de la base de datos.
 750+ 90A7
 751+ 90A7 E1               pop hl
 752+ 90A8 CD C3 91         call Elimina_disparo_de_base_de_datos
 753+ 90AB 21 EF 89         ld hl,Impacto2
 754+ 90AE CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90B0
 756+ 90B0 18 06            jr 11F
 757+ 90B2
 758+ 90B2 CD 70 91     9 call Mueve_disparo
 759+ 90B5 CD 47 91         call foto_disparo_a_borrar
 760+ 90B8
 761+ 90B8 C1           11 pop bc
 762+ 90B9 18 04            jr 7F
 763+ 90BB
 764+ 90BB              ; ----- ----- ----- ----- ----- -----
 765+ 90BB
 766+ 90BB ED 42        1 sbc hl,bc
 767+ 90BD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90BF 2A ED 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90C2 23               inc hl
 770+ 90C3 23               inc hl
 771+ 90C4 22 ED 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90C7 18 BA            jr 2B
 773+ 90C9 CD BF 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90CC
 775+ 90CC 01 62 85         ld bc,Disparo_11
 776+ 90CF 2A EB 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90D2
 778+ 90D2 CD F6 8C     5 call Extrae_address
 779+ 90D5 7E               ld a,(hl)
 780+ 90D6 A7               and a
 781+ 90D7 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90D9
 783+ 90D9              ; ----- ----- ----- ----- ----- -----
 784+ 90D9
 785+ 90D9 C5               push bc
 786+ 90DA CD 47 91         call foto_disparo_a_borrar
 787+ 90DD
 788+ 90DD              ; Existe colisión con este disparo???
 789+ 90DD
 790+ 90DD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90DE 7E               ld a,(hl)
 792+ 90DF 2B               dec hl
 793+ 90E0 E6 01            and 1
 794+ 90E2 28 48            jr z,10F
 795+ 90E4
 796+ 90E4              ; La colisión se produce con Amadeus???
 797+ 90E4              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90E4
 799+ 90E4 E5               push hl
 800+ 90E5
 801+ 90E5 06 04            ld b,4
 802+ 90E7 23           16 inc hl
 803+ 90E8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90EA CD F6 8C         call Extrae_address
 805+ 90ED CD 84 9B         call Genera_coordenadas_disparo
 806+ 90F0
 807+ 90F0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 90F1 FE 16            cp $16
 809+ 90F3 38 22            jr c,15F
 810+ 90F5
 811+ 90F5              ; (Colisiones en filas 16 y 17).
 812+ 90F5
 813+ 90F5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 90F6
 815+ 90F6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 90F6
 817+ 90F6 21 82 85         ld hl,Amadeus_db+6
 818+ 90F9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 90FA 23               inc hl
 820+ 90FB 23               inc hl
 821+ 90FC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 90FD 21 90 85         ld hl,Amadeus_db+20
 823+ 9100 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9101 21 F4 89         ld hl,Coordenadas_X_Amadeus
 825+ 9104 CD CE 91         call Guarda_coordenadas_X
 826+ 9107
 827+ 9107 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9108
 829+ 9108              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9108
 831+ 9108 06 03            ld b,3
 832+ 910A 21 F4 89         ld hl,Coordenadas_X_Amadeus
 833+ 910D 7E           18 ld a,(hl)
 834+ 910E BA               cp d
 835+ 910F 20 03            jr nz,17F
 836+ 9111
 837+ 9111              ; Colisión Amadeus !!!!!!!!!!
 838+ 9111
 839+ 9111 E1               pop hl
 840+ 9112 18 09            jr 14F
 841+ 9114
 842+ 9114 23           17 inc hl
 843+ 9115 10 F6            djnz 18B
 844+ 9117
 845+ 9117              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9117              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9117
 848+ 9117 E1           15 pop hl
 849+ 9118 23               inc hl
 850+ 9119 35               dec (hl)
 851+ 911A 2B               dec hl
 852+ 911B 18 0F            jr 10F
 853+ 911D
 854+ 911D              ; -----------------------debug
 855+ 911D
 856+ 911D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 911D              ; _ almacén de coordenadas_X de Amadeus.
 858+ 911D
 859+ 911D E5           14 push hl
 860+ 911E CD C3 91         call Elimina_disparo_de_base_de_datos
 861+ 9121 21 EF 89         ld hl,Impacto2
 862+ 9124 CB CE            set 1,(hl)
 863+ 9126 CD 0D 92         call Limpia_Coordenadas_X
 864+ 9129
 865+ 9129 E1               pop hl
 866+ 912A 18 06            jr 12F
 867+ 912C
 868+ 912C CD 70 91     10 call Mueve_disparo
 869+ 912F CD 47 91         call foto_disparo_a_borrar
 870+ 9132 C1           12 pop bc
 871+ 9133
 872+ 9133 18 04            jr 8F
 873+ 9135
 874+ 9135              ; ----- ----- ----- ----- ----- -----
 875+ 9135
 876+ 9135 ED 42        4 sbc hl,bc
 877+ 9137 28 0A            jr z,6F
 878+ 9139
 879+ 9139 2A EB 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 913C 23               inc hl
 881+ 913D 23               inc hl
 882+ 913E 22 EB 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9141 18 8F            jr 5B
 884+ 9143
 885+ 9143 CD B8 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9146 C9               ret
 887+ 9147
 888+ 9147              ; ------------------------------------------------------------------
 889+ 9147
 890+ 9147              foto_disparo_a_borrar
 891+ 9147
 892+ 9147 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9148 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9149 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 914A
 896+ 914A E5               push hl
 897+ 914B 23               inc hl
 898+ 914C 23               inc hl
 899+ 914D ED 73 E2 89      ld (Stack),sp
 900+ 9151 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9152 FD E1            pop iy
 902+ 9154 DD E1            pop ix
 903+ 9156 E1               pop hl
 904+ 9157 ED 7B E2 89      ld sp,(Stack)
 905+ 915B 3A D1 89         ld a,(Ctrl_1)
 906+ 915E CB C7            set 0,a
 907+ 9160 32 D1 89         ld (Ctrl_1),a
 908+ 9163 CD A0 7F         call Guarda_foto_registros
 909+ 9166 3A D1 89         ld a,(Ctrl_1)
 910+ 9169 CB 87            res 0,a
 911+ 916B 32 D1 89         ld (Ctrl_1),a
 912+ 916E E1               pop hl
 913+ 916F C9               ret
 914+ 9170
 915+ 9170 E5           Mueve_disparo push hl
 916+ 9171 7E               ld a,(hl)
 917+ 9172 06 04            ld b,4
 918+ 9174 23           1 inc hl
 919+ 9175 10 FD            djnz 1B
 920+ 9177
 921+ 9177              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 9177
 923+ 9177 CD F6 8C         call Extrae_address
 924+ 917A
 925+ 917A E6 01            and 1
 926+ 917C 28 2B            jr z,2F
 927+ 917E
 928+ 917E              ; Disparo hacia arriba, (Amadeus).
 929+ 917E
 930+ 917E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 917E              ; _ de la dificultad.
 932+ 917E
 933+ 917E CD 3C 95         call PreviousScan
 934+ 9181 CD 3C 95         call PreviousScan
 935+ 9184 CD 3C 95         call PreviousScan
 936+ 9187
 937+ 9187              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 9187
 939+ 9187 7C               ld a,h
 940+ 9188 FE 40            cp $40
 941+ 918A 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 918C
 943+ 918C              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 918C
 945+ 918C EB               ex de,hl
 946+ 918D 06 04            ld b,4
 947+ 918F 2B           6 dec hl
 948+ 9190 10 FD            djnz 6B
 949+ 9192
 950+ 9192 CD C3 91         call Elimina_disparo_de_base_de_datos
 951+ 9195 E1               pop hl
 952+ 9196 18 10            jr 7F
 953+ 9198
 954+ 9198              ; Se ha desplazado la bala, compruebo colisión.
 955+ 9198
 956+ 9198 D5           3 push de
 957+ 9199 C5               push bc
 958+ 919A
 959+ 919A CD 7D 8F         call Comprueba_Colision
 960+ 919D
 961+ 919D              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 919D
 963+ 919D 78               ld a,b
 964+ 919E
 965+ 919E C1               pop bc
 966+ 919F D1               pop de
 967+ 91A0
 968+ 91A0 EB               ex de,hl
 969+ 91A1
 970+ 91A1 73               ld (hl),e
 971+ 91A2 23               inc hl
 972+ 91A3 72               ld (hl),d
 973+ 91A4
 974+ 91A4 E1           4 pop hl
 975+ 91A5 23               inc hl
 976+ 91A6 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 91A7 2B               dec hl
 978+ 91A8 C9           7 ret
 979+ 91A9
 980+ 91A9              ; Disparo hacia abajo, (Entidad).
 981+ 91A9
 982+ 91A9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 91A9              ; _ de la dificultad.
 984+ 91A9
 985+ 91A9 CD 2D 95     2 call NextScan
 986+ 91AC CD 2D 95         call NextScan
 987+ 91AF CD 2D 95         call NextScan
 988+ 91B2
 989+ 91B2              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 91B2
 991+ 91B2 7C               ld a,h
 992+ 91B3 FE 58            cp $58
 993+ 91B5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 91B7
 995+ 91B7 EB               ex de,hl
 996+ 91B8 06 04            ld b,4
 997+ 91BA 2B           5 dec hl
 998+ 91BB 10 FD            djnz 5B
 999+ 91BD
1000+ 91BD CD C3 91         call Elimina_disparo_de_base_de_datos
1001+ 91C0 E1               pop hl
1002+ 91C1 18 E5            jr 7B
1003+ 91C3
1004+ 91C3              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 91C3
1006+ 91C3 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 91C6 AF               xor a
1008+ 91C7 77               ld (hl),a
1009+ 91C8 54               ld d,h
1010+ 91C9 5D               ld e,l
1011+ 91CA 13               inc de
1012+ 91CB ED B0            ldir
1013+ 91CD C9               ret
1014+ 91CE
1015+ 91CE              ; -----------------------------------------------------------------
1016+ 91CE              ;
1017+ 91CE              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 91CE              ;
1019+ 91CE              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 91CE              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 91CE              ;
1022+ 91CE              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 91CE              ;
1024+ 91CE              ;   INPUTS:
1025+ 91CE              ;
1026+ 91CE              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 91CE              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 91CE              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 91CE
1030+ 91CE              ;   MODIFICA: A, HL, DE y C
1031+ 91CE
1032+ 91CE 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 91CF 79               ld a,c
1034+ 91D0 E6 01            and 1
1035+ 91D2 20 03            jr nz,1F
1036+ 91D4 14               inc d
1037+ 91D5 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 91D7
1039+ 91D7              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 91D7              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 91D7
1042+ 91D7 15           1 dec d
1043+ 91D8 23           2 inc hl
1044+ 91D9 72               ld (hl),d
1045+ 91DA
1046+ 91DA 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 91DB A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 91DC C8               ret z
1049+ 91DD
1050+ 91DD AF               xor a
1051+ 91DE 5F               ld e,a
1052+ 91DF 18 ED            jr Guarda_coordenadas_X
1053+ 91E1
1054+ 91E1              ; -----------------------------------------------------------------
1055+ 91E1              ;
1056+ 91E1              ;   12/04/23
1057+ 91E1              ;
1058+ 91E1
1059+ 91E1 3A EF 89     Selector_de_impactos ld a,(Impacto2)
1060+ 91E4 A7               and a
1061+ 91E5 C8               ret z
1062+ 91E6
1063+ 91E6 FE 04            cp 4
1064+ 91E8 20 09            jr nz,1F
1065+ 91EA
1066+ 91EA
1067+ 91EA              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 91EA
1069+ 91EA CD 0E 90         call Detecta_colision_nave_entidad
1070+ 91ED
1071+ 91ED 21 EF 89         ld hl,Impacto2
1072+ 91F0 CB 5E            bit 3,(hl)
1073+ 91F2 C0               ret nz                                               ; Existe colisión, RET.
1074+ 91F3
1075+ 91F3              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 91F3              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 91F3
1078+ 91F3 21 EF 89     1 ld hl,Impacto2
1079+ 91F6 CB 4E            bit 1,(hl)
1080+ 91F8 28 07            jr z,2F
1081+ 91FA
1082+ 91FA 21 95 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 91FD 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 91FF 18 0B            jr 3F
1085+ 9201
1086+ 9201 21 EF 89     2 ld hl,Impacto2
1087+ 9204 CB 46            bit 0,(hl)
1088+ 9206 C8               ret z
1089+ 9207
1090+ 9207              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9207
1092+ 9207 21 D1 89         ld hl,Ctrl_1
1093+ 920A CB D6            set 2,(hl)
1094+ 920C
1095+ 920C C9           3 ret
1096+ 920D
1097+ 920D              ; -----------------------------------------------------------------
1098+ 920D              ;
1099+ 920D              ;   16/04/23
1100+ 920D              ;
1101+ 920D
1102+ 920D AF           Limpia_Coordenadas_X xor a
1103+ 920E 06 06            ld b,6
1104+ 9210 21 F4 89         ld hl,Coordenadas_X_Amadeus
1105+ 9213 77           1 ld (hl),a
1106+ 9214 23               inc hl
1107+ 9215 10 FC            djnz 1B
1108+ 9217 C9               ret
1109+ 9218
1110+ 9218              ; -----------------------------------------------------------------
1111+ 9218              ;
1112+ 9218              ;   25/04/23
1113+ 9218              ;
1114+ 9218
1115+ 9218              Determina_resultado_comparativa
1116+ 9218
1117+ 9218              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9218              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9218              ;
1120+ 9218              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9218              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9218              ;
1123+ 9218              ;   SBC HL,DE
1124+ 9218
1125+ 9218 7C               ld a,h
1126+ 9219 06 00            ld b,0
1127+ 921B
1128+ 921B CD 2B 92         call Compara_cositas
1129+ 921E
1130+ 921E 04               inc b
1131+ 921F 05               dec b
1132+ 9220 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 9221
1134+ 9221 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 9222 06 00            ld b,0
1136+ 9224
1137+ 9224 CD 2B 92         call Compara_cositas
1138+ 9227 18 01            jr 2F
1139+ 9229
1140+ 9229 04           1 inc b
1141+ 922A C9           2 ret
1142+ 922B
1143+ 922B A7           Compara_cositas and a
1144+ 922C 28 17            jr z,1F
1145+ 922E
1146+ 922E FE FD            cp $fd
1147+ 9230 28 13            jr z,1F
1148+ 9232 FE FE            cp $fe
1149+ 9234 28 0F            jr z,1F
1150+ 9236 FE FF            cp $ff
1151+ 9238 28 0B            jr z,1F
1152+ 923A FE 01            cp $01
1153+ 923C 28 07            jr z,1F
1154+ 923E FE 02            cp $02
1155+ 9240 28 03            jr z,1F
1156+ 9242 FE 03            cp $03
1157+ 9244 C0               ret nz
1158+ 9245
1159+ 9245 04           1 inc b
1160+ 9246 C9               ret
1161+ 9247
# file closed: Disparo.asm
1216  9247              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9247              ; ******************************************************************************************************************************************************************************************
   2+ 9247              ;
   3+ 9247              ; 01/23
   4+ 9247              ;
   5+ 9247              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9247
   7+ 9247 CD 21 95     Draw call Prepara_draw
   8+ 924A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 924B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 924C 28 05        	jr z,2F
  11+ 924E
  12+ 924E 3A A7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9251 18 0C        	jr 1F
  14+ 9253 2A A5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9256 22 95 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9259 CD E8 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 925C              ;													; _la esquina superior izquierda de la pantalla.
  18+ 925C CD A7 9C     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 925F 3A C1 89     1 ld a,(Ctrl_0)
  20+ 9262 CB 6F        	bit 5,a
  21+ 9264 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9266
  23+ 9266 CD 7E 92     	call Comprueba_limite_horizontal
  24+ 9269 CD 0E 93     	call Comprueba_limite_vertical
  25+ 926C
  26+ 926C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 926C
  28+ 926C CD 5B 94     3 call calcula_CColumnass
  29+ 926F CD 92 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9272 CD E7 94     	call Define_rutina_de_impresion
  31+ 9275
  32+ 9275 3A C1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9278 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 927A 32 C1 89     	ld (Ctrl_0),a
  35+ 927D
  36+ 927D C9           	ret
  37+ 927E
  38+ 927E              ; *******************************************************************************************************************************************************************************************
  39+ 927E              ;	21/01/23
  40+ 927E              ;
  41+ 927E              ; 	Comprueba_limite_horizontal.
  42+ 927E              ;
  43+ 927E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 927E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 927E              ;
  46+ 927E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 927E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 927E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 927E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 927E
  51+ 927E
  52+ 927E
  53+ 927E 3A C1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9281 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9283 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9285 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9287 32 C1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 928A 18 09            jr 6F
  59+ 928C CB 5F        1 bit 3,a
  60+ 928E 28 0A            jr z,2F
  61+ 9290 E6 F7            and $f7
  62+ 9292 32 C1 89         ld (Ctrl_0),a
  63+ 9295 CD E8 93     6 call Inicializacion
  64+ 9298 18 5B            jr 5F
  65+ 929A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 929B
  67+ 929B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 929B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 929B
  70+ 929B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 929C 2A CC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 929F CD ED 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 92A2 67           	ld h,a
  74+ 92A3 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 92A4 CD ED 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 92A7 67           	ld h,a
  77+ 92A8 A7           	and a
  78+ 92A9 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 92AB 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 92AC 3A A7 89     	ld a,(Cuad_objeto)
  81+ 92AF FE 02        	cp 2
  82+ 92B1 38 1E        	jr c,3F
  83+ 92B3 28 1C        	jr z,3F
  84+ 92B5 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 92B6 28 23            jr z,7F
  86+ 92B8 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 92BA 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 92BC E1           	pop hl
  89+ 92BD
  90+ 92BD              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 92BD              ; _para indicar con E="2" en caso necesario.
  92+ 92BD
  93+ 92BD E5               push hl
  94+ 92BE C5               push bc
  95+ 92BF CD ED 97     	call calcula_tercio
  96+ 92C2 FE 01        	cp 1
  97+ 92C4 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 92C6 CD F6 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 92C9 28 26            jr z,9F
 100+ 92CB 38 24            jr c,9F
 101+ 92CD 1E 00        11 ld e,0
 102+ 92CF 18 22            jr 8F
 103+ 92D1 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 92D2 28 07        	jr z, 7F
 105+ 92D4 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 92D6 1E 00         	ld e,0
 107+ 92D8 E1           	pop hl
 108+ 92D9 18 04        	jr 4F
 109+ 92DB 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 92DD 18 15            jr 10F
 111+ 92DF
 112+ 92DF              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 92DF              ; _para indicar con E="2" en caso necesario.
 114+ 92DF
 115+ 92DF E5           4 push hl
 116+ 92E0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 92E1 CD ED 97     	call calcula_tercio
 118+ 92E4 FE 01        	cp 1
 119+ 92E6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 92E8 CD F6 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 92EB 28 04            jr z,9F
 122+ 92ED 30 02            jr nc,9F
 123+ 92EF 18 02        	jr 8F
 124+ 92F1 1E 02        9 ld e,2
 125+ 92F3 C1           8 pop bc
 126+ 92F4 E1           10 pop hl
 127+ 92F5 C9           5 ret
 128+ 92F6
 129+ 92F6              ; --------------------
 130+ 92F6              ;
 131+ 92F6              ; 25/08/22
 132+ 92F6
 133+ 92F6 CD ED 97     Comprueba_centro call calcula_tercio
 134+ 92F9 67               ld h,a
 135+ 92FA 08           	ex af,af
 136+ 92FB FE 02        	cp 2
 137+ 92FD 38 07        	jr c,1F
 138+ 92FF 28 05        	jr z,1F
 139+ 9301 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9304 18 03        	jr 2F
 141+ 9306 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9309 08           2 ex af,af
 143+ 930A A7               and a
 144+ 930B ED 42            sbc hl,bc
 145+ 930D C9               ret
 146+ 930E
 147+ 930E              ; *********************************************************************************************************************************************************************************************
 148+ 930E              ;
 149+ 930E              ;   16/8/22
 150+ 930E              ;
 151+ 930E              ;	Comprueba_limite_vertical
 152+ 930E              ;
 153+ 930E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 930E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 930E              ;
 156+ 930E
 157+ 930E 2A 95 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9311 7D           	ld a,l
 159+ 9312 E6 1F        	and $1F
 160+ 9314 57           	ld d,a
 161+ 9315 3A CE 89     	ld a,(Limite_vertical)
 162+ 9318 BA           	cp d 											; Límite - Posición.
 163+ 9319 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 931A 3A A7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 931D CB 47        	bit 0,a
 166+ 931F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9321
 168+ 9321              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9321
 170+ 9321 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9322 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9324
 173+ 9324              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9324              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9324
 176+ 9324 3A 99 89         ld a,(Coordenada_X)
 177+ 9327 16 0F            ld d,Centro_izquierda
 178+ 9329 A7               and a
 179+ 932A 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 932B 28 1E            jr z,3F
 181+ 932D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 932F              ;                                                    ; _salimos sin modificar nada.
 183+ 932F 18 0E            jr 2F
 184+ 9331 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9332 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9334
 187+ 9334              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9334              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9334
 190+ 9334 3A 99 89         ld a,(Coordenada_X)
 191+ 9337 16 10            ld d,Centro_derecha
 192+ 9339 A7               and a
 193+ 933A 92               sub d
 194+ 933B 28 0E            jr z,3F
 195+ 933D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 933F              ;                                                    ; _salimos sin modificar nada.
 197+ 933F CB 43        2 bit 0,e
 198+ 9341 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9343 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9344 CD D8 93         call Modificaccionne
 201+ 9347 C1           	pop bc
 202+ 9348 CD E8 93         call Inicializacion
 203+ 934B C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 934C
 205+ 934C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 934C
 207+ 934C C5           4 push bc
 208+ 934D 01 94 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9350 0A           	ld a,(bc)
 210+ 9351 3D           	dec a
 211+ 9352 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9353 7D           	ld a,l
 213+ 9354 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9355 CB 47        	bit 0,a
 215+ 9357 28 03        	jr z,5F
 216+ 9359 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 935A 18 2E        	jr 7F
 218+ 935C
 219+ 935C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 935C
 221+ 935C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 935D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 935E 3A C1 89     	ld a,(Ctrl_0)
 224+ 9361 CB 4F        	bit 1,a
 225+ 9363 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9365 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9366
 228+ 9366              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9366
 230+ 9366 1C               inc e
 231+ 9367 1D               dec e
 232+ 9368 20 07            jr nz,12F
 233+ 936A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 936B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 936C 22 95 89     	ld (Posicion_actual),hl
 236+ 936F 18 44        13 jr 9F
 237+ 9371 CB 43        12 bit 0,e
 238+ 9373 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9375              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9375 C1           	pop bc
 241+ 9376 18 D3        	jr 3B
 242+ 9378 80           14 add b
 243+ 9379 6F               ld l,a
 244+ 937A 22 95 89     	ld (Posicion_actual),hl
 245+ 937D CD D8 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9380 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9382 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9384 32 C1 89         ld (Ctrl_0),a
 249+ 9387 F1           	pop af
 250+ 9388 18 2B        	jr 9F
 251+ 938A
 252+ 938A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 938A
 254+ 938A F5           7 push af
 255+ 938B 3A C1 89     	ld a,(Ctrl_0)
 256+ 938E CB 47        	bit 0,a
 257+ 9390 20 1D        	jr nz,8F
 258+ 9392 F1           	pop af
 259+ 9393
 260+ 9393              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9393
 262+ 9393 1C           	inc e
 263+ 9394 1D               dec e
 264+ 9395 20 07            jr nz,10F
 265+ 9397 90           	sub b
 266+ 9398 6F               ld l,a
 267+ 9399 22 95 89     	ld (Posicion_actual),hl
 268+ 939C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 939E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 939E CB 43        10 bit 0,e
 271+ 93A0 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 93A2              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 93A2 C1           	pop bc
 274+ 93A3 18 A6        	jr 3B
 275+ 93A5 90           16 sub b
 276+ 93A6 6F               ld l,a
 277+ 93A7 22 95 89     	ld (Posicion_actual),hl
 278+ 93AA CD D8 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 93AD 18 06            jr 9F
 280+ 93AF E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 93B1 32 C1 89         ld (Ctrl_0),a
 282+ 93B4 F1           	pop af
 283+ 93B5 C1           9 pop bc
 284+ 93B6 1E 00        	ld e,0
 285+ 93B8 CD E8 93         call Inicializacion
 286+ 93BB F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 93BC 08           	ex af,af
 288+ 93BD F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 93BE 18 8B            jr 3B
 290+ 93C0
 291+ 93C0              ; --------------------
 292+ 93C0
 293+ 93C0 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 93C2 CD 3C 95     1 call PreviousScan
 295+ 93C5 10 FB            djnz 1B
 296+ 93C7 22 95 89     	ld (Posicion_actual),hl
 297+ 93CA AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 93CB C9           	ret
 299+ 93CC
 300+ 93CC              ; --------------------
 301+ 93CC
 302+ 93CC 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 93CE CD 2D 95     1 call NextScan
 304+ 93D1 10 FB            djnz 1B
 305+ 93D3 22 95 89     	ld (Posicion_actual),hl
 306+ 93D6 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 93D7 C9           	ret
 308+ 93D8
 309+ 93D8              ; --------------------
 310+ 93D8              ;
 311+ 93D8              ;	22/01/23
 312+ 93D8              ;
 313+ 93D8              ;	E="1". Hemos cambiado de cuadrante.
 314+ 93D8              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 93D8              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 93D8
 317+ 93D8
 318+ 93D8              Modificaccionne
 319+ 93D8
 320+ 93D8 3A A7 89     	ld a,(Cuad_objeto)
 321+ 93DB FE 02        	cp 2
 322+ 93DD CC C0 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 93E0 DC C0 93         call c,Modifica_Pos_actual
 324+ 93E3 C8           	ret z
 325+ 93E4 CD CC 93         call Modifica_Pos_actual2
 326+ 93E7 C9               ret
 327+ 93E8
 328+ 93E8              ; *************************************************************************************************************************************************************************************************
 329+ 93E8              ;
 330+ 93E8              ;	13/8/22
 331+ 93E8              ;
 332+ 93E8              ;	Inicializacion
 333+ 93E8              ;
 334+ 93E8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 93E8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 93E8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 93E8              ;
 338+ 93E8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 93E8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 93E8              ;	_ desaparece/aparece.
 341+ 93E8
 342+ 93E8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 93E8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 93E8              ;
 345+ 93E8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 93E8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 93E8              ; 		   [E] ="0"
 348+ 93E8
 349+ 93E8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 93E8
 351+ 93E8 CD ED 97     Inicializacion call calcula_tercio
 352+ 93EB 28 36        	jr z,primit
 353+ 93ED E6 02        	and 2
 354+ 93EF 20 07        	jr nz,segmit
 355+ 93F1 7D           	ld a,l
 356+ 93F2 FE 7F        	cp $7f
 357+ 93F4 38 2D        	jr c,primit
 358+ 93F6 28 2B        	jr z,primit
 359+ 93F8 CD 55 94     segmit call column
 360+ 93FB 38 13        	jr c,tercuad
 361+ 93FD 3E 04        cuarcuad ld a,4
 362+ 93FF 32 A7 89     	ld (Cuad_objeto),a
 363+ 9402 21 20 48     	ld hl,$4820
 364+ 9405 22 CC 89     	ld (Limite_horizontal),hl
 365+ 9408 21 CE 89     	ld hl,Limite_vertical
 366+ 940B 36 0D        	ld (hl),$0d
 367+ 940D 08           	ex af,af
 368+ 940E 18 3C        	jr 1F
 369+ 9410              tercuad
 370+ 9410 3E 03        	ld a,3
 371+ 9412 32 A7 89     	ld (Cuad_objeto),a
 372+ 9415 21 20 48     	ld hl,$4820
 373+ 9418 22 CC 89     	ld (Limite_horizontal),hl
 374+ 941B 21 CE 89     	ld hl,Limite_vertical
 375+ 941E 36 12        	ld (hl),$12
 376+ 9420 08           	ex af,af
 377+ 9421 18 29        	jr 1F
 378+ 9423 CD 55 94     primit call column
 379+ 9426 38 13        	jr c, primcuad
 380+ 9428              segcuad
 381+ 9428 3E 02        	ld a,2
 382+ 942A 32 A7 89     	ld (Cuad_objeto),a
 383+ 942D 21 C0 4F     	ld hl,$4fc0
 384+ 9430 22 CC 89     	ld (Limite_horizontal),hl
 385+ 9433 21 CE 89     	ld hl,Limite_vertical
 386+ 9436 36 0D        	ld (hl),$0d
 387+ 9438 08           	ex af,af
 388+ 9439 18 11        	jr 1F
 389+ 943B              primcuad
 390+ 943B 3E 01        	ld a,1
 391+ 943D 32 A7 89     	ld (Cuad_objeto),a
 392+ 9440 21 C0 4F     	ld hl,$4fc0
 393+ 9443 22 CC 89     	ld (Limite_horizontal),hl
 394+ 9446 21 CE 89     	ld hl,Limite_vertical
 395+ 9449 36 12        	ld (hl),$12
 396+ 944B 08           	ex af,af
 397+ 944C CD 59 9B     1 call Genera_coordenadas
 398+ 944F 21 C1 89     	ld hl,Ctrl_0
 399+ 9452 CB EE        	set 5,(hl)
 400+ 9454 C9           	ret
 401+ 9455
 402+ 9455              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9455
 404+ 9455              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9455              ;
 406+ 9455              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9455
 408+ 9455 7D           column ld a,l
 409+ 9456 E6 1F        	and $1f
 410+ 9458 FE 10         	cp $10
 411+ 945A C9            	ret
 412+ 945B
 413+ 945B              ; --------------------------------------------------------------------------------------------------------------------
 414+ 945B              ;
 415+ 945B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 945B              ;
 417+ 945B              ; 14/12/22
 418+ 945B              ;
 419+ 945B              ;	Modifica: A y BC.
 420+ 945B
 421+ 945B 3A A7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 945E E6 01        	and 1
 423+ 9460 28 17        	jr z,1F
 424+ 9462
 425+ 9462              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9462
 427+ 9462 3A 99 89     	ld a,(Coordenada_X)
 428+ 9465 47           	ld b,a
 429+ 9466 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9467 79           	ld a,c
 431+ 9468 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9469 38 08        	jr c,2F
 433+ 946B 47           	ld b,a
 434+ 946C 79           	ld a,c
 435+ 946D 90           	sub b
 436+ 946E 32 CB 89     	ld (Columnas),a
 437+ 9471 18 1B        	jr 4F
 438+ 9473 79           2 ld a,c
 439+ 9474 32 CB 89     	ld (Columnas),a
 440+ 9477 18 15        	jr 4F
 441+ 9479
 442+ 9479              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9479
 444+ 9479 3A 99 89     1 ld a,(Coordenada_X)
 445+ 947C 81           	add c
 446+ 947D 3D           	dec a
 447+ 947E D6 1F        	sub $1f
 448+ 9480 38 08        	jr c,3F
 449+ 9482 47           	ld b,a
 450+ 9483 79           	ld a,c
 451+ 9484 90           	sub b
 452+ 9485 32 CB 89     	ld (Columnas),a
 453+ 9488 18 04        	jr 4F
 454+ 948A 79           3 ld a,c
 455+ 948B 32 CB 89     	ld (Columnas),a
 456+ 948E D9           4 exx
 457+ 948F 4F           	ld c,a
 458+ 9490 D9           	exx
 459+ 9491 C9            ret
 460+ 9492
 461+ 9492              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9492              ;
 463+ 9492              ; 7/1/23
 464+ 9492              ;
 465+ 9492              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9492              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9492              ;
 468+ 9492              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9492              ;	DESTRUYE: HL,B Y A.
 470+ 9492
 471+ 9492 3A A7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9495 FE 02        	cp 2
 473+ 9497 38 18        	jr c,1F
 474+ 9499 28 16        	jr z,1F
 475+ 949B E6 01        	and 1
 476+ 949D 28 0D        	jr z,3F
 477+ 949F
 478+ 949F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 949F
 480+ 949F CD DB 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 94A2
 482+ 94A2 7D           9 ld a,l
 483+ 94A3 E6 1F        	and $1f
 484+ 94A5 28 2A        	jr z,7F
 485+ 94A7 2B           	dec hl
 486+ 94A8 10 F8        	djnz 9B
 487+ 94AA 18 25        	jr 7F
 488+ 94AC
 489+ 94AC              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 94AC
 491+ 94AC 2A 95 89     3 ld hl,(Posicion_actual)
 492+ 94AF 18 20        	jr 7F
 493+ 94B1
 494+ 94B1 28 14        1 jr z,2F
 495+ 94B3
 496+ 94B3              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 94B3
 498+ 94B3 CD DB 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 94B6 7D           4 ld a,l
 500+ 94B7 E6 1F        	and $1f
 501+ 94B9 28 03        	jr z,6F
 502+ 94BB 2B           	dec hl
 503+ 94BC 10 F8        	djnz 4B
 504+ 94BE 06 0F        6 ld b,15
 505+ 94C0 CD 3C 95     5 call PreviousScan
 506+ 94C3 10 FB        	djnz 5B
 507+ 94C5 18 0A        	jr 7F
 508+ 94C7
 509+ 94C7              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 94C7
 511+ 94C7 CD DB 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 94CA 06 0F        	ld b,15
 513+ 94CC CD 3C 95     8 call PreviousScan
 514+ 94CF 10 FB        	djnz 8B
 515+ 94D1
 516+ 94D1 E5           7 push hl
 517+ 94D2 DD E1        	pop ix
 518+ 94D4
 519+ 94D4 2A 97 89     	ld hl,(Puntero_objeto)
 520+ 94D7 E5           	push hl
 521+ 94D8 FD E1        	pop iy
 522+ 94DA
 523+ 94DA C9           	ret
 524+ 94DB
 525+ 94DB              ; --------------------------------------------------------------------------------------------------------------------
 526+ 94DB              ;
 527+ 94DB              ;	2/1/23
 528+ 94DB              ;
 529+ 94DB              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 94DB              ;
 531+ 94DB              ;	Tras esta rutina tenemos:
 532+ 94DB              ;
 533+ 94DB              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 94DB              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 94DB              ;
 536+ 94DB              ;	DESTRUYE!!!!! HL,B y A.
 537+ 94DB
 538+ 94DB 2A 95 89     Operandos ld hl,(Posicion_actual)
 539+ 94DE 3A CB 89     	ld a,(Columnas)
 540+ 94E1 3D           	dec a
 541+ 94E2 20 01        	jr nz,1F
 542+ 94E4 3C           	inc a
 543+ 94E5 47           1 ld b,a
 544+ 94E6 C9           	ret
 545+ 94E7
 546+ 94E7              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94E7              ;
 548+ 94E7              ;	3/1/23
 549+ 94E7              ;
 550+ 94E7              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 94E7              ;
 552+ 94E7              ;	Destruye: A,B,HL y DE.
 553+ 94E7
 554+ 94E7              Define_rutina_de_impresion
 555+ 94E7
 556+ 94E7 3A 94 89     	ld a,(Columns)
 557+ 94EA 47           	ld b,a
 558+ 94EB 3A CB 89     	ld a,(Columnas)
 559+ 94EE B8           	cp b
 560+ 94EF 20 0D        	jr nz,2f
 561+ 94F1
 562+ 94F1              ;	La entidad se imprime entera.
 563+ 94F1
 564+ 94F1 21 BD 95     	ld hl, Indice_entidades_completas
 565+ 94F4 E6 01        	and 1
 566+ 94F6 28 02        	jr z,1F
 567+ 94F8
 568+ 94F8 23           	inc hl
 569+ 94F9 23           	inc hl
 570+ 94FA
 571+ 94FA CD F6 8C     1 call Extrae_address
 572+ 94FD C9           	ret		;	ret
 573+ 94FE
 574+ 94FE              ;	La entidad no se imprime entera en pantalla.
 575+ 94FE
 576+ 94FE 3A A7 89     2 ld a,(Cuad_objeto)
 577+ 9501 E6 01        	and 1
 578+ 9503 28 17        	jr z,3F
 579+ 9505
 580+ 9505              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9505
 582+ 9505 21 C1 95     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9508 3A 94 89     4 ld a,(Columns)
 584+ 950B E6 01        	and 1
 585+ 950D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 950F
 587+ 950F 23           	inc hl
 588+ 9510 23           	inc hl
 589+ 9511
 590+ 9511 3A CB 89     	ld a,(Columnas)
 591+ 9514 E6 01        	and 1
 592+ 9516 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9518
 594+ 9518 23           	inc hl
 595+ 9519 23           	inc hl
 596+ 951A
 597+ 951A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 951C
 599+ 951C 21 C7 95     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 951F 18 E7        	jr 4B
 601+ 9521
 602+ 9521              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9521              ;
 604+ 9521              ;	Prepara_draw
 605+ 9521              ;
 606+ 9521              ;	Es una rutina de carga.
 607+ 9521              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9521              ;
 609+ 9521              ;	FUNCIONAMIENTO:
 610+ 9521              ;
 611+ 9521              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9521              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9521              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9521              ;
 615+ 9521              ;	DESTRUYE:
 616+ 9521              ;
 617+ 9521              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9521
 619+ 9521 21 93 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9524 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9525 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9526 4E           	ld c,(hl)
 623+ 9527 2A 95 89     	ld hl,(Posicion_actual)
 624+ 952A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 952C C9           	ret
 626+ 952D
 627+ 952D              ;----------------------------------------------------------------------------------------------------------------
 628+ 952D              ;
 629+ 952D              ;	5/08/22
 630+ 952D              ;
 631+ 952D              ;   NextScan.
 632+ 952D              ;
 633+ 952D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 952D              ;
 635+ 952D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 952D              ;
 637+ 952D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 952D              ;
 639+ 952D              ;       DESTRUIDOS: AF y HL !!!
 640+ 952D              ;
 641+ 952D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 952D              ;
 643+ 952D
 644+ 952D 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 952E 7C               ld a,h
 646+ 952F E6 07            and 7
 647+ 9531 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9532
 649+ 9532 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9533 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9535 6F               ld l,a
 652+ 9536 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9537
 654+ 9537 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9538 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 953A 67               ld h,a
 657+ 953B C9               ret
 658+ 953C
 659+ 953C              ;----------------------------------------------------------------------------------------------------------------
 660+ 953C              ;
 661+ 953C              ;	5/08/22
 662+ 953C              ;
 663+ 953C              ;   PreviousScan.
 664+ 953C              ;
 665+ 953C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 953C              ;
 667+ 953C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 953C              ;
 669+ 953C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 953C              ;
 671+ 953C              ;       DESTRUIDOS: AF y HL !!!
 672+ 953C              ;
 673+ 953C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 953C              ;
 675+ 953C
 676+ 953C 7C           PreviousScan ld a,h
 677+ 953D 25               dec h               ; Dec H.
 678+ 953E E6 07            and 7
 679+ 9540 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9541
 681+ 9541 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9542 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9544 6F               ld l,a
 684+ 9545 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9546
 686+ 9546 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9547 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9549 67               ld h,a
 689+ 954A C9               ret
 690+ 954B
 691+ 954B              ; -----------------------------------------------------------------------------------
 692+ 954B              ;
 693+ 954B              ;	28/2/23
 694+ 954B              ;
 695+ 954B              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 954B              ;	Extrae fotos de Album_de_fotos.
 697+ 954B
 698+ 954B 3A DD 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 954E A7           	and a
 700+ 954F C8           	ret z
 701+ 9550 ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9554 31 00 70     	ld sp,Album_de_fotos
 703+ 9557
 704+ 9557 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9559 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 955A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 955B
 708+ 955B ED 73 E4 89  	ld (Stack_2),sp
 709+ 955F ED 7B E2 89  	ld sp,(Stack)
 710+ 9563
 711+ 9563              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9563
 713+ 9563 3E CD        	ld a,$cd
 714+ 9565 32 6D 95     	ld (Imprime),a
 715+ 9568 EB           	ex de,hl
 716+ 9569 22 6E 95     	ld (Imprime+1),hl
 717+ 956C EB           	ex de,hl
 718+ 956D
 719+ 956D              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 956D
 721+ 956D 00 00 00     Imprime db 0,0,0
 722+ 9570
 723+ 9570 3A DD 89     	ld a,(Numero_de_malotes)
 724+ 9573 3D           	dec a
 725+ 9574 28 09        	jr z,1F
 726+ 9576 32 DD 89      	ld (Numero_de_malotes),a
 727+ 9579
 728+ 9579 ED 7B E4 89   	ld sp,(Stack_2)
 729+ 957D 18 D8        	jr 2B
 730+ 957F
 731+ 957F AF           1 xor a
 732+ 9580 32 E4 89     	ld (Stack_2),a
 733+ 9583 C9           	ret
 734+ 9584
 735+ 9584              ; -----------------------------------------------------------------------------------
 736+ 9584              ;
 737+ 9584              ;	28/2/23
 738+ 9584              ;
 739+ 9584              ;	Pinta los disparos generados.
 740+ 9584
 741+ 9584              Extrae_foto_disparos
 742+ 9584
 743+ 9584 3A EA 89     	ld a,(Numero_de_disparotes)
 744+ 9587 A7           	and a
 745+ 9588 C8           	ret z
 746+ 9589 ED 73 E2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 958D 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 9590
 749+ 9590 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9592 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9593 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9594
 753+ 9594 ED 73 E4 89  	ld (Stack_2),sp
 754+ 9598 ED 7B E2 89  	ld sp,(Stack)
 755+ 959C
 756+ 959C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 959C
 758+ 959C 3E CD        	ld a,$cd
 759+ 959E 32 A6 95     	ld (Imprime2),a
 760+ 95A1 EB           	ex de,hl
 761+ 95A2 22 A7 95     	ld (Imprime2+1),hl
 762+ 95A5 EB           	ex de,hl
 763+ 95A6
 764+ 95A6              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 95A6
 766+ 95A6 00 00 00     Imprime2 db 0,0,0
 767+ 95A9
 768+ 95A9 3A EA 89     	ld a,(Numero_de_disparotes)
 769+ 95AC 3D           	dec a
 770+ 95AD 28 09        	jr z,1F
 771+ 95AF 32 EA 89      	ld (Numero_de_disparotes),a
 772+ 95B2
 773+ 95B2 ED 7B E4 89  	ld sp,(Stack_2)
 774+ 95B6 18 D8        	jr 2B
 775+ 95B8
 776+ 95B8 AF           1 xor a
 777+ 95B9 32 E4 89     	ld (Stack_2),a
 778+ 95BC C9           	ret
 779+ 95BD
# file closed: Draw_XOR.asm
1217  95BD              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95BD              ;   índices de Rutinas de impresión.
   2+ 95BD
   3+ 95BD CD 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95BF FA 95            defw Pinta_Amadeus_3x2
   5+ 95C1
   6+ 95C1 50 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95C3 F0 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95C5 A4 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95C7
  10+ 95C7 7A 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95C9 7E 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95CB 32 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95CD
  14+ 95CD
  15+ 95CD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95CD              ;
  17+ 95CD              ;   12/12/22
  18+ 95CD              ;
  19+ 95CD              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95CD              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95CD              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95CD              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95CD              ;
  24+ 95CD              ;   Modifica: DE y HL.
  25+ 95CD
  26+ 95CD ED 73 E2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95D1 FD F9        	ld sp,iy
  28+ 95D3 06 10            ld b,16
  29+ 95D5 D1           1 pop de
  30+ 95D6 7B               ld a,e
  31+ 95D7 AE               xor (hl)
  32+ 95D8 77           	ld (hl),a
  33+ 95D9 23           	inc hl
  34+ 95DA 7A               ld a,d
  35+ 95DB AE               xor (hl)
  36+ 95DC 77           	ld (hl),a
  37+ 95DD 2B           	dec hl
  38+ 95DE 24           	inc h
  39+ 95DF 7C               ld a,h
  40+ 95E0 E6 07            and 7
  41+ 95E2 20 0A            jr nz,2F
  42+ 95E4 7D               ld a,l
  43+ 95E5 C6 20            add a,$20
  44+ 95E7 6F               ld l,a
  45+ 95E8 38 04            jr c,2F
  46+ 95EA 7C               ld a,h
  47+ 95EB D6 08            sub 8
  48+ 95ED 67               ld h,a
  49+ 95EE 7C           2 ld a,h
  50+ 95EF FE 58            cp $58
  51+ 95F1 28 02            jr z,3F
  52+ 95F3 10 E0            djnz 1B
  53+ 95F5 ED 7B E2 89  3 ld sp,(Stack)
  54+ 95F9 C9           	ret
  55+ 95FA
  56+ 95FA ED 73 E2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95FE FD F9        	ld sp,iy
  58+ 9600 06 08            ld b,8
  59+ 9602 D1           1 pop de
  60+ 9603 7B               ld a,e
  61+ 9604 AE               xor (hl)
  62+ 9605 77           	ld (hl),a
  63+ 9606 23           	inc hl
  64+ 9607 7A               ld a,d
  65+ 9608 AE               xor (hl)
  66+ 9609 77           	ld (hl),a
  67+ 960A 23           	inc hl
  68+ 960B D1           	pop de
  69+ 960C 7B               ld a,e
  70+ 960D AE               xor (hl)
  71+ 960E 77           	ld (hl),a
  72+ 960F 2B           	dec hl
  73+ 9610 2B           	dec hl
  74+ 9611 24           	inc h
  75+ 9612 7C               ld a,h
  76+ 9613 E6 07            and 7
  77+ 9615 20 0A            jr nz,2F
  78+ 9617 7D               ld a,l
  79+ 9618 C6 20            add a,$20
  80+ 961A 6F               ld l,a
  81+ 961B 38 04            jr c,2F
  82+ 961D 7C               ld a,h
  83+ 961E D6 08            sub 8
  84+ 9620 67               ld h,a
  85+ 9621 7C           2 ld a,h
  86+ 9622 FE 58            cp $58
  87+ 9624 28 25            jr z,4F
  88+ 9626 7A               ld a,d
  89+ 9627 AE               xor (hl)
  90+ 9628 77               ld (hl),a
  91+ 9629 D1           	pop de
  92+ 962A 23           	inc hl
  93+ 962B 7B               ld a,e
  94+ 962C AE               xor (hl)
  95+ 962D 77           	ld (hl),a
  96+ 962E 23           	inc hl
  97+ 962F 7A               ld a,d
  98+ 9630 AE               xor (hl)
  99+ 9631 77           	ld (hl),a
 100+ 9632 2B           	dec hl
 101+ 9633 2B           	dec hl
 102+ 9634 24           	inc h
 103+ 9635 7C               ld a,h
 104+ 9636 E6 07            and 7
 105+ 9638 20 0A            jr nz,3F
 106+ 963A 7D               ld a,l
 107+ 963B C6 20            add a,$20
 108+ 963D 6F               ld l,a
 109+ 963E 38 04            jr c,3F
 110+ 9640 7C               ld a,h
 111+ 9641 D6 08            sub 8
 112+ 9643 67               ld h,a
 113+ 9644 7C           3 ld a,h
 114+ 9645 FE 58            cp $58
 115+ 9647 28 02            jr z,4F
 116+ 9649 10 B7            djnz 1B
 117+ 964B ED 7B E2 89  4 ld sp,(Stack)
 118+ 964F C9           	ret
 119+ 9650
 120+ 9650              ; ---------------------------------------------------
 121+ 9650
 122+ 9650 ED 73 E2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9654 FD F9        	ld sp,iy
 124+ 9656
 125+ 9656              ; >>>
 126+ 9656
 127+ 9656 06 10            ld b,16
 128+ 9658 D1           1 pop de
 129+ 9659 7A           	ld a,d
 130+ 965A AE           	xor (hl)
 131+ 965B 77           	ld (hl),a
 132+ 965C 24           	inc h
 133+ 965D 7C               ld a,h
 134+ 965E E6 07            and 7
 135+ 9660 20 0C            jr nz,2F
 136+ 9662 7D               ld a,l
 137+ 9663 C6 20            add a,$20
 138+ 9665 6F               ld l,a
 139+ 9666 38 06            jr c,2F
 140+ 9668 7C               ld a,h
 141+ 9669 D6 08            sub 8
 142+ 966B 67               ld h,a
 143+ 966C 18 00            jr 2F
 144+ 966E 7C           2 ld a,h
 145+ 966F FE 58            cp $58
 146+ 9671 28 02            jr z,3F
 147+ 9673 10 E3            djnz 1B
 148+ 9675 ED 7B E2 89  3 ld sp,(Stack)
 149+ 9679 C9           	ret
 150+ 967A
 151+ 967A ED 73 E2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 967E FD F9        	ld sp,iy
 153+ 9680
 154+ 9680              ; >>>
 155+ 9680
 156+ 9680 06 10            ld b,16
 157+ 9682 D1           1 pop de
 158+ 9683 7B           	ld a,e
 159+ 9684 AE           	xor (hl)
 160+ 9685 77           	ld (hl),a
 161+ 9686 24           	inc h
 162+ 9687 7C               ld a,h
 163+ 9688 E6 07            and 7
 164+ 968A 20 0C            jr nz,2F
 165+ 968C 7D               ld a,l
 166+ 968D C6 20            add a,$20
 167+ 968F 6F               ld l,a
 168+ 9690 38 06            jr c,2F
 169+ 9692 7C               ld a,h
 170+ 9693 D6 08            sub 8
 171+ 9695 67               ld h,a
 172+ 9696 18 00            jr 2F
 173+ 9698 7C           2 ld a,h
 174+ 9699 FE 58            cp $58
 175+ 969B 28 02            jr z,3F
 176+ 969D 10 E3            djnz 1B
 177+ 969F ED 7B E2 89  3 ld sp,(Stack)
 178+ 96A3 C9           	ret
 179+ 96A4
 180+ 96A4              ; ---------------------------------------------------
 181+ 96A4
 182+ 96A4 ED 73 E2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96A8 FD F9        	ld sp,iy
 184+ 96AA 06 08            ld b,8
 185+ 96AC D1           1 pop de
 186+ 96AD 7A           	ld a,d
 187+ 96AE AE           	xor (hl)
 188+ 96AF 77           	ld (hl),a
 189+ 96B0 23           	inc hl
 190+ 96B1 D1           	pop de
 191+ 96B2 7B           	ld a,e
 192+ 96B3 AE           	xor (hl)
 193+ 96B4 77           	ld (hl),a
 194+ 96B5 2B           	dec hl
 195+ 96B6 24            	inc h
 196+ 96B7 7C               ld a,h
 197+ 96B8 E6 07            and 7
 198+ 96BA 20 0A            jr nz,2F
 199+ 96BC 7D               ld a,l
 200+ 96BD C6 20            add a,$20
 201+ 96BF 6F               ld l,a
 202+ 96C0 38 04            jr c,2F
 203+ 96C2 7C               ld a,h
 204+ 96C3 D6 08            sub 8
 205+ 96C5 67               ld h,a
 206+ 96C6 7C           2 ld a,h
 207+ 96C7 FE 58            cp $58
 208+ 96C9 28 20            jr z,4F
 209+ 96CB D1               pop de
 210+ 96CC 7B           	ld a,e
 211+ 96CD AE           	xor (hl)
 212+ 96CE 77           	ld (hl),a
 213+ 96CF 23           	inc hl
 214+ 96D0 7A           	ld a,d
 215+ 96D1 AE           	xor (hl)
 216+ 96D2 77           	ld (hl),a
 217+ 96D3 2B           	dec hl
 218+ 96D4 24           	inc h
 219+ 96D5 7C               ld a,h
 220+ 96D6 E6 07            and 7
 221+ 96D8 20 0A            jr nz,3F
 222+ 96DA 7D               ld a,l
 223+ 96DB C6 20            add a,$20
 224+ 96DD 6F               ld l,a
 225+ 96DE 38 04            jr c,3F
 226+ 96E0 7C               ld a,h
 227+ 96E1 D6 08            sub 8
 228+ 96E3 67               ld h,a
 229+ 96E4 7C           3 ld a,h
 230+ 96E5 FE 58            cp $58
 231+ 96E7 28 02            jr z,4F
 232+ 96E9 10 C1            djnz 1B
 233+ 96EB ED 7B E2 89  4 ld sp,(Stack)
 234+ 96EF C9           	ret
 235+ 96F0
 236+ 96F0 ED 73 E2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96F4 FD F9        	ld sp,iy
 238+ 96F6 06 08            ld b,8
 239+ 96F8 D1           1 pop de
 240+ 96F9 D1           	pop de
 241+ 96FA 7B           	ld a,e
 242+ 96FB AE           	xor (hl)
 243+ 96FC 77           	ld (hl),a
 244+ 96FD 24            	inc h
 245+ 96FE 7C               ld a,h
 246+ 96FF E6 07            and 7
 247+ 9701 20 0A            jr nz,2F
 248+ 9703 7D               ld a,l
 249+ 9704 C6 20            add a,$20
 250+ 9706 6F               ld l,a
 251+ 9707 38 04            jr c,2F
 252+ 9709 7C               ld a,h
 253+ 970A D6 08            sub 8
 254+ 970C 67               ld h,a
 255+ 970D 7C           2 ld a,h
 256+ 970E FE 58            cp $58
 257+ 9710 28 1B            jr z,4F
 258+ 9712 D1               pop de
 259+ 9713 7A           	ld a,d
 260+ 9714 AE           	xor (hl)
 261+ 9715 77           	ld (hl),a
 262+ 9716 24           	inc h
 263+ 9717 7C               ld a,h
 264+ 9718 E6 07            and 7
 265+ 971A 20 0A            jr nz,3F
 266+ 971C 7D               ld a,l
 267+ 971D C6 20            add a,$20
 268+ 971F 6F               ld l,a
 269+ 9720 38 04            jr c,3F
 270+ 9722 7C               ld a,h
 271+ 9723 D6 08            sub 8
 272+ 9725 67               ld h,a
 273+ 9726 7C           3 ld a,h
 274+ 9727 FE 58            cp $58
 275+ 9729 28 02            jr z,4F
 276+ 972B 10 CB            djnz 1B
 277+ 972D ED 7B E2 89  4 ld sp,(Stack)
 278+ 9731 C9           	ret
 279+ 9732
 280+ 9732 ED 73 E2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9736 FD F9        	ld sp,iy
 282+ 9738 06 08            ld b,8
 283+ 973A D1           1 pop de
 284+ 973B 7B           	ld a,e
 285+ 973C AE           	xor (hl)
 286+ 973D 77           	ld (hl),a
 287+ 973E 23           	inc hl
 288+ 973F 7A           	ld a,d
 289+ 9740 AE           	xor (hl)
 290+ 9741 77           	ld (hl),a
 291+ 9742 2B           	dec hl
 292+ 9743 24             	inc h
 293+ 9744 7C               ld a,h
 294+ 9745 E6 07            and 7
 295+ 9747 20 0A            jr nz,2F
 296+ 9749 7D               ld a,l
 297+ 974A C6 20            add a,$20
 298+ 974C 6F               ld l,a
 299+ 974D 38 04            jr c,2F
 300+ 974F 7C               ld a,h
 301+ 9750 D6 08            sub 8
 302+ 9752 67               ld h,a
 303+ 9753 7C           2 ld a,h
 304+ 9754 FE 58            cp $58
 305+ 9756 28 21            jr z,4F
 306+ 9758 D1               pop de
 307+ 9759 7A           	ld a,d
 308+ 975A AE           	xor (hl)
 309+ 975B 77           	ld (hl),a
 310+ 975C 23           	inc hl
 311+ 975D D1               pop de
 312+ 975E 7B           	ld a,e
 313+ 975F AE           	xor (hl)
 314+ 9760 77           	ld (hl),a
 315+ 9761 2B           	dec hl
 316+ 9762 24           	inc h
 317+ 9763 7C               ld a,h
 318+ 9764 E6 07            and 7
 319+ 9766 20 0A            jr nz,3F
 320+ 9768 7D               ld a,l
 321+ 9769 C6 20            add a,$20
 322+ 976B 6F               ld l,a
 323+ 976C 38 04            jr c,3F
 324+ 976E 7C               ld a,h
 325+ 976F D6 08            sub 8
 326+ 9771 67               ld h,a
 327+ 9772 7C           3 ld a,h
 328+ 9773 FE 58            cp $58
 329+ 9775 28 02            jr z,4F
 330+ 9777 10 C1            djnz 1B
 331+ 9779 ED 7B E2 89  4 ld sp,(Stack)
 332+ 977D C9           	ret
 333+ 977E
 334+ 977E ED 73 E2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9782 FD F9        	ld sp,iy
 336+ 9784 06 08            ld b,8
 337+ 9786 D1           1 pop de
 338+ 9787 7B           	ld a,e
 339+ 9788 AE           	xor (hl)
 340+ 9789 77           	ld (hl),a
 341+ 978A 24            	inc h
 342+ 978B 7C               ld a,h
 343+ 978C E6 07            and 7
 344+ 978E 20 0A            jr nz,2F
 345+ 9790 7D               ld a,l
 346+ 9791 C6 20            add a,$20
 347+ 9793 6F               ld l,a
 348+ 9794 38 04            jr c,2F
 349+ 9796 7C               ld a,h
 350+ 9797 D6 08            sub 8
 351+ 9799 67               ld h,a
 352+ 979A 7C           2 ld a,h
 353+ 979B FE 58            cp $58
 354+ 979D 28 1C            jr z,4F
 355+ 979F D1               pop de
 356+ 97A0 7A           	ld a,d
 357+ 97A1 AE           	xor (hl)
 358+ 97A2 77           	ld (hl),a
 359+ 97A3 24           	inc h
 360+ 97A4 7C               ld a,h
 361+ 97A5 E6 07            and 7
 362+ 97A7 20 0A            jr nz,3F
 363+ 97A9 7D               ld a,l
 364+ 97AA C6 20            add a,$20
 365+ 97AC 6F               ld l,a
 366+ 97AD 38 04            jr c,3F
 367+ 97AF 7C               ld a,h
 368+ 97B0 D6 08            sub 8
 369+ 97B2 67               ld h,a
 370+ 97B3 7C           3 ld a,h
 371+ 97B4 FE 58            cp $58
 372+ 97B6 28 03            jr z,4F
 373+ 97B8 D1               pop de
 374+ 97B9 10 CB            djnz 1B
 375+ 97BB ED 7B E2 89  4 ld sp,(Stack)
 376+ 97BF C9           	ret
 377+ 97C0
 378+ 97C0              ; ---------------------------------------------------
 379+ 97C0              ;
 380+ 97C0              ;   27/02/23
 381+ 97C0              ;
 382+ 97C0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97C0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97C0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97C0
 386+ 97C0 ED 73 E2 89  Pinta_Disparo ld (Stack),sp
 387+ 97C4 FD F9            ld sp,iy
 388+ 97C6 06 02            ld b,2
 389+ 97C8 D1           1 pop de
 390+ 97C9 7B               ld a,e
 391+ 97CA AE               xor (hl)
 392+ 97CB 77               ld (hl),a
 393+ 97CC 23               inc hl
 394+ 97CD 7A               ld a,d
 395+ 97CE AE               xor (hl)
 396+ 97CF 77               ld (hl),a
 397+ 97D0 2B               dec hl
 398+ 97D1
 399+ 97D1 24               inc h
 400+ 97D2 7C               ld a,h
 401+ 97D3 E6 07            and 7
 402+ 97D5 20 0A            jr nz,2F
 403+ 97D7 7D               ld a,l
 404+ 97D8 C6 20            add a,$20
 405+ 97DA 6F               ld l,a
 406+ 97DB 38 04            jr c,2F
 407+ 97DD 7C               ld a,h
 408+ 97DE D6 08            sub 8
 409+ 97E0 67               ld h,a
 410+ 97E1 7C           2 ld a,h
 411+ 97E2 FE 58            cp $58
 412+ 97E4 28 02            jr z,3F
 413+ 97E6
 414+ 97E6 10 E0            djnz 1B
 415+ 97E8 ED 7B E2 89  3 ld sp,(Stack)
 416+ 97EC C9               ret
 417+ 97ED
# file closed: Rutinas_de_impresion_sprites.asm
1218  97ED              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97ED              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97ED              ;
   3+ 97ED              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97ED              ;
   5+ 97ED              ; *****************************************************************************************************************************************************************************************
   6+ 97ED              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97ED
   8+ 97ED 7C           calcula_tercio ld a,h
   9+ 97EE E6 18        	and $18
  10+ 97F0 CB 2F        	sra a
  11+ 97F2 CB 2F        	sra a
  12+ 97F4 CB 2F        	sra a
  13+ 97F6 C9           	ret
  14+ 97F7
# file closed: calcula_tercio.asm
1219  97F7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97F7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97F7              ;
   3+ 97F7              ;
   4+ 97F7              ;	CLS.
   5+ 97F7              ;
   6+ 97F7              ;	Limpia la pantalla y define sus atributos.
   7+ 97F7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97F7              ;
   9+ 97F7              ;	COLORES: 0 ..... NEGRO
  10+ 97F7              ;    		 1 ..... AZUL
  11+ 97F7              ; 			 2 ..... ROJO
  12+ 97F7              ;			 3 ..... MAGENTA
  13+ 97F7              ; 			 4 ..... VERDE
  14+ 97F7              ; 			 5 ..... CIAN
  15+ 97F7              ;			 6 ..... AMARILLO
  16+ 97F7              ; 			 7 ..... BLANCO
  17+ 97F7              ;
  18+ 97F7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97F7              ;
  20+ 97F7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97F7
  22+ 97F7
  23+ 97F7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97FA 11 01 40     	LD DE,$4001
  25+ 97FD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9800 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9802 ED B0        	LDIR
  28+ 9804 01 FF 02     	LD BC,767
  29+ 9807 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9808 ED B0        	LDIR
  31+ 980A C9           	ret
  32+ 980B
# file closed: Cls.asm
1220  980B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 980B              ; ******************************************************************************************************************************************************************************************
   2+ 980B              ;
   3+ 980B              ;   20/05/23
   4+ 980B              ;
   5+ 980B              ;	Recompone_posicion_inicio
   6+ 980B              ;
   7+ 980B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 980B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 980B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 980B              ;	_ a una u otra rutina.
  11+ 980B
  12+ 980B              Recompone_posicion_inicio
  13+ 980B
  14+ 980B 2A A5 89     	ld hl,(Posicion_inicio)
  15+ 980E 7D           	ld a,l
  16+ 980F E6 1F        	and $1f
  17+ 9811 28 16        	jr z,1F
  18+ 9813
  19+ 9813 FE 1F        	cp $1f
  20+ 9815 28 0D        	jr z,3F
  21+ 9817
  22+ 9817 21 CF 89     	ld hl,Ctrl_2
  23+ 981A CB C6        	set 0,(hl)
  24+ 981C 2A 97 89     	ld hl,(Puntero_objeto)
  25+ 981F 22 D2 89     	ld (Repone_puntero_objeto),hl
  26+ 9822 18 08        	jr 2F
  27+ 9824
  28+ 9824 CD C5 99     3 call Mov_left
  29+ 9827 18 03        	jr 2F
  30+ 9829
  31+ 9829 CD A7 98     1 call Mov_right
  32+ 982C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 982F 22 97 89     	ld (Puntero_objeto),hl
  34+ 9832 C9           	ret
  35+ 9833
  36+ 9833              ; ******************************************************************************************************************************************************************************************
  37+ 9833              ;
  38+ 9833              ;   27/05/23
  39+ 9833              ;
  40+ 9833              ;	Mov_down
  41+ 9833              ;
  42+ 9833              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9833              ;
  44+ 9833              ;
  45+ 9833              Mov_down
  46+ 9833
  47+ 9833 CD 95 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9836              ;																	; _ repone (Puntero_objeto).
  49+ 9836 21 C1 89     	ld hl,Ctrl_0
  50+ 9839 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 983B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 983B              ; 																	; _ en el caso de que no lo haya.
  53+ 983B 3A AB 89     	ld a,(Vel_down)
  54+ 983E 47           	ld b,a
  55+ 983F 2A 95 89         ld hl,(Posicion_actual)
  56+ 9842 CD ED 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9845 E6 02        	and 2
  58+ 9847 28 0F        	jr z,1F
  59+ 9849
  60+ 9849              ; Nos encontramos en el último tercio de pantalla.
  61+ 9849              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9849
  63+ 9849 7C           	ld a,h
  64+ 984A FE 57        	cp $57
  65+ 984C 20 0A        	jr nz,1F
  66+ 984E 7D           	ld a,l
  67+ 984F C6 20        	add $20
  68+ 9851 30 05        	jr nc,1F
  69+ 9853
  70+ 9853              ; ------------------------------
  71+ 9853 CD 43 9B     	call Reaparece_arriba
  72+ 9856              ;	call Reinicio
  73+ 9856              ; ------------------------------
  74+ 9856
  75+ 9856 18 08        	jr 3F
  76+ 9858 CD 2D 95     1 call NextScan
  77+ 985B 22 95 89     	ld (Posicion_actual),hl
  78+ 985E 10 E2            djnz 2B
  79+ 9860 CD 59 9B     3 call Genera_coordenadas
  80+ 9863 C9           	ret
  81+ 9864
  82+ 9864              ; ******************************************************************************************************************************************************************************************
  83+ 9864              ;
  84+ 9864              ;   27/05/23
  85+ 9864              ;
  86+ 9864              ;	Mov_up
  87+ 9864              ;
  88+ 9864              ; 	Mueve el Sprite hacia arriba.
  89+ 9864              ;
  90+ 9864              ;
  91+ 9864              Mov_up
  92+ 9864
  93+ 9864 CD 95 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9867              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9867 21 C1 89     	ld hl,Ctrl_0
  96+ 986A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 986C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 986C              ; 																		; _ en el caso de que no lo haya.
  99+ 986C 3A AA 89     	ld a,(Vel_up)
 100+ 986F 47           	ld b,a
 101+ 9870 2A 95 89     	ld hl,(Posicion_actual)
 102+ 9873 CD ED 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9876 A7           	and a
 104+ 9877 20 10        	jr nz,1F
 105+ 9879
 106+ 9879              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9879              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9879
 109+ 9879 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 987A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 987C 20 0B            jr nz,1F
 112+ 987E 7D               ld a,l
 113+ 987F D6 20            sub $20
 114+ 9881 30 06            jr nc,1F
 115+ 9883 25               dec h
 116+ 9884
 117+ 9884              ; -----------------------------
 118+ 9884 CD 33 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9887              ;	call Reinicio
 120+ 9887              ; -----------------------------
 121+ 9887
 122+ 9887 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9889 CD 3C 95     1 call PreviousScan
 124+ 988C 22 95 89     	ld (Posicion_actual),hl
 125+ 988F 10 E2            djnz 3B
 126+ 9891 CD 59 9B     2 call Genera_coordenadas
 127+ 9894 C9           	ret
 128+ 9895
 129+ 9895              ; -----------------------------
 130+ 9895              ;
 131+ 9895              ;	27/5/23
 132+ 9895              ;
 133+ 9895              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9895              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9895              ;
 136+ 9895              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9895              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9895              ;
 139+ 9895              ;	Modifica: A y (Puntero_objeto).
 140+ 9895
 141+ 9895 3A CF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9898 CB 47        	bit 0,a
 143+ 989A C8           	ret z
 144+ 989B CB 87        	res 0,a
 145+ 989D 32 CF 89     	ld (Ctrl_2),a
 146+ 98A0 2A D2 89     	ld hl,(Repone_puntero_objeto)
 147+ 98A3 22 97 89     	ld (Puntero_objeto),hl
 148+ 98A6 C9           	ret
 149+ 98A7
 150+ 98A7              ; ******************************************************************************************************************************************************************************************
 151+ 98A7              ;
 152+ 98A7              ;	19/10/22
 153+ 98A7              ;
 154+ 98A7              ;	Mov_right.
 155+ 98A7              ;
 156+ 98A7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 98A7              ;
 158+ 98A7
 159+ 98A7 21 C1 89     Mov_right ld hl,Ctrl_0
 160+ 98AA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 98AC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 98AC              ; 																	; _ en el caso de que no lo haya.
 163+ 98AC 3A C1 89     	ld a,(Ctrl_0)
 164+ 98AF CB 77        	bit 6,a
 165+ 98B1 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 98B3
 167+ 98B3 CD E1 9A     	call Stop_Amadeus_right
 168+ 98B6 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 98B7 18 4D        	jr 8F
 170+ 98B9
 171+ 98B9 3A 99 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 98BC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 98BE 20 46        	jr nz,8F
 174+ 98C0
 175+ 98C0 3A 9B 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 98C3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 98C4 28 40        	jr z,8F
 178+ 98C6
 179+ 98C6              ; ---------- ---------- ----------
 180+ 98C6              ;
 181+ 98C6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 98C6
 183+ 98C6 3A A9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 98C9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 98CB 28 11        	jr z,1F
 186+ 98CD 38 06        	jr c,6F
 187+ 98CF FE 04        	cp 4
 188+ 98D1 28 14        	jr z,7F
 189+ 98D3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 98D5
 191+ 98D5              ; ---------- ---------- ----------
 192+ 98D5              ;
 193+ 98D5              ; Perfiles de velocidad
 194+ 98D5              ;
 195+ 98D5
 196+ 98D5 3A 9B 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 98D8 FE FE        	cp $fe
 198+ 98DA 20 2A        	jr nz,8F
 199+ 98DC 18 10        	jr 3F
 200+ 98DE 3A 9B 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 98E1 FE FD        	cp $fd
 202+ 98E3 20 21        	jr nz,8F
 203+ 98E5 18 07        	jr 3F
 204+ 98E7 3A 9B 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 98EA FE FB        	cp $fb
 206+ 98EC 20 18        	jr nz,8F
 207+ 98EE
 208+ 98EE              ; ---------- ---------- ----------
 209+ 98EE
 210+ 98EE              3
 211+ 98EE CD 21 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 98F1              ;	call Reinicio
 213+ 98F1
 214+ 98F1              ; ---------- ---------- ----------
 215+ 98F1              ;
 216+ 98F1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 98F1
 218+ 98F1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 98F3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 98F4 CD 0D 99     	call DESPLZ_DER
 221+ 98F7 C1           	pop bc
 222+ 98F8 10 F9        	djnz 5B
 223+ 98FA 2A 95 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 98FD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 98FE 22 95 89     	ld (Posicion_actual),hl
 226+ 9901 CD 59 9B     	call Genera_coordenadas
 227+ 9904 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 9906
 229+ 9906              ; ---------- ---------- ----------
 230+ 9906
 231+ 9906 2A 95 89     8 ld hl,(Posicion_actual)
 232+ 9909 CD 0D 99     	call DESPLZ_DER
 233+ 990C C9           2 ret
 234+ 990D
 235+ 990D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 990D              ;
 237+ 990D              ;	22/9/22
 238+ 990D              ;
 239+ 990D
 240+ 990D CD 1C 99     DESPLZ_DER call Desplaza_derecha
 241+ 9910 CD 68 99         call modifica_parametros_1er_DESPLZ_2
 242+ 9913 CD 91 99         call Ciclo_completo
 243+ 9916 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9919 CB FE        	set 7,(hl)
 245+ 991B C9           	ret
 246+ 991C
 247+ 991C              ; ******************************************************************************************************************************************************************************************
 248+ 991C              ;	15/02/23
 249+ 991C              ;
 250+ 991C
 251+ 991C 3A A9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 991F 47           	ld b,a
 253+ 9920 2A A1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9923 23           1 inc hl
 255+ 9924 23           	inc hl
 256+ 9925 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9927 22 A1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 992A CD F6 8C     	call Extrae_address
 259+ 992D 22 97 89     	ld (Puntero_objeto),hl
 260+ 9930
 261+ 9930              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9930
 263+ 9930              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9930              ; Cuántos movimientos hemos hecho ??
 265+ 9930              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9930
 267+ 9930 2A 9D 89     7 ld hl,(Indice_Sprite_der)
 268+ 9933 EB           	ex de,hl
 269+ 9934 A7           	and a
 270+ 9935 ED 52        	sbc hl,de
 271+ 9937 CB 3D        	srl l
 272+ 9939 3E 08        6 ld a,8
 273+ 993B 95           	sub l
 274+ 993C 30 1E        	jr nc,3F
 275+ 993E
 276+ 993E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 993E              ; B="0".
 278+ 993E
 279+ 993E 04           4 inc b
 280+ 993F 3C           	inc a
 281+ 9940 20 FC        	jr nz,4B
 282+ 9942 78           	ld a,b
 283+ 9943 08           	ex af,af
 284+ 9944 2A 9D 89     	ld hl,(Indice_Sprite_der)
 285+ 9947 23           5 inc hl
 286+ 9948 23           	inc hl
 287+ 9949 10 FC        	djnz 5B
 288+ 994B 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 994E CD F6 8C     	call Extrae_address
 290+ 9951 22 97 89     	ld (Puntero_objeto),hl
 291+ 9954
 292+ 9954              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9954              ; _(Posicion_actual).
 294+ 9954
 295+ 9954 21 95 89     	ld hl,Posicion_actual
 296+ 9957 34           	inc (hl)
 297+ 9958 08               ex af,af
 298+ 9959 6F           	ld l,a
 299+ 995A 18 DD        	jr 6B
 300+ 995C
 301+ 995C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 995C
 303+ 995C 47           3 ld b,a
 304+ 995D 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 305+ 9960 23           2 inc hl
 306+ 9961 23           	inc hl
 307+ 9962 10 FC        	djnz 2B
 308+ 9964 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9967 C9           8 ret
 310+ 9968
 311+ 9968              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9968              ;
 313+ 9968              ;	24/7/22
 314+ 9968              ;
 315+ 9968              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9968              ;
 317+ 9968              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9968              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9968              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9968
 321+ 9968 3A 9B 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 996B A7           	and a
 323+ 996C 20 1F        	jr nz,1F
 324+ 996E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9970 32 9B 89         ld (CTRL_DESPLZ),a
 326+ 9973
 327+ 9973 21 94 89     	ld hl,Columns
 328+ 9976 34           	inc (hl)
 329+ 9977 3A A7 89     	ld a,(Cuad_objeto)
 330+ 997A E6 01        	and 1
 331+ 997C 28 0F        	jr z,1F
 332+ 997E 2A 95 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9981 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9982 22 95 89     	ld (Posicion_actual),hl
 335+ 9985 CD 59 9B     	call Genera_coordenadas
 336+ 9988 CD ED 9A     	call Inc_CTRL_DESPLZ
 337+ 998B 18 03        	jr 2F
 338+ 998D CD ED 9A     1 call Inc_CTRL_DESPLZ
 339+ 9990 C9           2 ret
 340+ 9991
 341+ 9991              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9991              ;
 343+ 9991              ;	24/7/22
 344+ 9991              ;
 345+ 9991              ;	Ciclo_completo.
 346+ 9991              ;
 347+ 9991              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9991              ;
 349+ 9991              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9991              ; 	Decrementamos (Columns).
 351+ 9991              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9991              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9991
 354+ 9991
 355+ 9991 3A 9B 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9994 FE FF        	cp $ff
 357+ 9996 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9998 E6 F0        	and $f0
 359+ 999A 20 28        	jr nz,3F
 360+ 999C
 361+ 999C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 999C
 363+ 999C 3A 9B 89     	ld a,(CTRL_DESPLZ)
 364+ 999F 47           	ld b,a
 365+ 99A0 3E F8        	ld a,$f8
 366+ 99A2 80           	add b
 367+ 99A3 32 9B 89     	ld (CTRL_DESPLZ),a
 368+ 99A6 18 1C        	jr 3F
 369+ 99A8 21 94 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 99AB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 99AC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 99AD 32 9B 89     	ld (CTRL_DESPLZ),a
 373+ 99B0 3A A7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 99B3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 99B5 20 0A        	jr nz,2F
 376+ 99B7 2A 95 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 99BA 23           	inc hl
 378+ 99BB 22 95 89     	ld (Posicion_actual),hl
 379+ 99BE CD 59 9B     	call Genera_coordenadas
 380+ 99C1
 381+ 99C1              ; Inicia el puntero de Sprite.
 382+ 99C1
 383+ 99C1 CD 0D 8D     2 call Inicia_puntero_objeto_der
 384+ 99C4 C9           3 ret
 385+ 99C5
 386+ 99C5              ; ******************************************************************************************************************************************************************************************
 387+ 99C5              ;
 388+ 99C5              ;	15/02/23
 389+ 99C5              ;
 390+ 99C5              ;	Mov_left.
 391+ 99C5              ;
 392+ 99C5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 99C5              ;
 394+ 99C5 21 C1 89     Mov_left ld hl,Ctrl_0
 395+ 99C8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 99CA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 99CA              ; 																	; _ en el caso de que no lo haya.
 398+ 99CA 3A C1 89     	ld a,(Ctrl_0)
 399+ 99CD CB 77        	bit 6,a
 400+ 99CF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 99D1
 402+ 99D1 CD E7 9A     	call Stop_Amadeus_left
 403+ 99D4 C8           	ret z
 404+ 99D5 20 4A        	jr nz,8F
 405+ 99D7
 406+ 99D7 3A 99 89     11 ld a,(Coordenada_X)
 407+ 99DA A7           	and a
 408+ 99DB 20 44        	jr nz,8F
 409+ 99DD
 410+ 99DD 3A 9B 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 99E0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 99E1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 99E3
 414+ 99E3              ; ---------- ---------- ----------
 415+ 99E3
 416+ 99E3 3A A8 89     	ld a,(Vel_left)
 417+ 99E6 FE 02        	cp 2
 418+ 99E8 28 0F        	jr z,1F
 419+ 99EA 38 04        	jr c,6F
 420+ 99EC FE 04        	cp 4
 421+ 99EE 28 12        	jr z,7F
 422+ 99F0
 423+ 99F0              ; ---------- ---------- ----------
 424+ 99F0
 425+ 99F0 3A 9B 89     6 ld a,(CTRL_DESPLZ)
 426+ 99F3 FE F8        	cp $f8
 427+ 99F5 20 2A        	jr nz,8F
 428+ 99F7 18 10        	jr 4F
 429+ 99F9 3A 9B 89     1 ld a,(CTRL_DESPLZ)
 430+ 99FC FE F9        	cp $f9
 431+ 99FE 20 21        	jr nz,8F
 432+ 9A00 18 07        	jr 4F
 433+ 9A02 3A 9B 89     7 ld a,(CTRL_DESPLZ)
 434+ 9A05 FE FB        	cp $fb
 435+ 9A07 20 18        	jr nz,8F
 436+ 9A09
 437+ 9A09              ; ---------- ---------- ----------
 438+ 9A09
 439+ 9A09              4
 440+ 9A09 CD 0F 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9A0C              ;	call Reinicio
 442+ 9A0C
 443+ 9A0C              ; ---------- ---------- ----------
 444+ 9A0C
 445+ 9A0C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9A0E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9A0F
 448+ 9A0F              ;	ld hl,(Indice_Sprite_izq)
 449+ 9A0F              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9A0F
 451+ 9A0F CD 28 9A     	call DESPLZ_IZQ
 452+ 9A12 C1           	pop bc
 453+ 9A13 10 F9        	djnz 5B
 454+ 9A15 2A 95 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9A18 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9A19 22 95 89     	ld (Posicion_actual),hl
 457+ 9A1C CD 59 9B     	call Genera_coordenadas
 458+ 9A1F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9A21
 460+ 9A21              ; ---------- ---------- ----------
 461+ 9A21
 462+ 9A21              ; Movemos, no hay recolocación.
 463+ 9A21
 464+ 9A21 2A 95 89     8 ld hl,(Posicion_actual)
 465+ 9A24 CD 28 9A     	call DESPLZ_IZQ
 466+ 9A27 C9           2 ret
 467+ 9A28
 468+ 9A28              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9A28              ;
 470+ 9A28              ;	22/9/22
 471+ 9A28
 472+ 9A28              DESPLZ_IZQ
 473+ 9A28
 474+ 9A28 CD 37 9A     	call Desplaza_izquierda
 475+ 9A2B CD 83 9A         call modifica_parametros_1er_DESPLZ
 476+ 9A2E CD AB 9A     	call Ciclo_completo_2
 477+ 9A31 21 C1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9A34 CB BE        	res 7,(hl)
 479+ 9A36 C9           	ret
 480+ 9A37
 481+ 9A37              Desplaza_izquierda
 482+ 9A37
 483+ 9A37 3A A8 89     	ld a,(Vel_left)
 484+ 9A3A 47           	ld b,a
 485+ 9A3B 2A A3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9A3E 23           1 inc hl
 487+ 9A3F 23           	inc hl
 488+ 9A40 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9A42 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9A45 CD F6 8C     	call Extrae_address
 491+ 9A48 22 97 89     	ld (Puntero_objeto),hl
 492+ 9A4B
 493+ 9A4B              ; Modifica (Puntero_DESPLZ_der).
 494+ 9A4B
 495+ 9A4B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9A4B              ; Cuántos movimientos hemos hecho ??
 497+ 9A4B              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9A4B
 499+ 9A4B 2A 9F 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9A4E EB           	ex de,hl
 501+ 9A4F A7           	and a
 502+ 9A50 ED 52        	sbc hl,de
 503+ 9A52 CB 3D        	srl l
 504+ 9A54 3E 08        6 ld a,8
 505+ 9A56 95           	sub l
 506+ 9A57 30 1E        	jr nc,3F
 507+ 9A59
 508+ 9A59              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9A59              ; B="0".
 510+ 9A59
 511+ 9A59 04           4 inc b
 512+ 9A5A 3C           	inc a
 513+ 9A5B 20 FC        	jr nz,4B
 514+ 9A5D 78           	ld a,b
 515+ 9A5E 08           	ex af,af
 516+ 9A5F 2A 9F 89     	ld hl,(Indice_Sprite_izq)
 517+ 9A62 23           5 inc hl
 518+ 9A63 23           	inc hl
 519+ 9A64 10 FC        	djnz 5B
 520+ 9A66 22 A3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9A69 CD F6 8C     	call Extrae_address
 522+ 9A6C 22 97 89     	ld (Puntero_objeto),hl
 523+ 9A6F
 524+ 9A6F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9A6F              ; _(Posicion_actual).
 526+ 9A6F
 527+ 9A6F 21 95 89     	ld hl,Posicion_actual
 528+ 9A72 35           	dec (hl)
 529+ 9A73 08           	ex af,af
 530+ 9A74 6F           	ld l,a
 531+ 9A75 18 DD        	jr 6B
 532+ 9A77
 533+ 9A77              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9A77
 535+ 9A77 47           3 ld b,a
 536+ 9A78 2A 9D 89     	ld hl,(Indice_Sprite_der)
 537+ 9A7B 23           2 inc hl
 538+ 9A7C 23           	inc hl
 539+ 9A7D 10 FC        	djnz 2B
 540+ 9A7F 22 A1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9A82 C9           8 ret
 542+ 9A83
 543+ 9A83              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9A83              ;
 545+ 9A83              ;	modifica_parametros_1er_DESPLZ
 546+ 9A83              ;
 547+ 9A83              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9A83              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9A83              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9A83
 551+ 9A83 3A 9B 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9A86 A7           	and a
 553+ 9A87 20 1E        	jr nz,1F
 554+ 9A89 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9A8A 32 9B 89         ld (CTRL_DESPLZ),a
 556+ 9A8D 21 94 89     	ld hl,Columns
 557+ 9A90 34           	inc (hl)
 558+ 9A91 3A A7 89     	ld a,(Cuad_objeto)
 559+ 9A94 E6 01        	and 1
 560+ 9A96 20 0F        	jr nz,1F
 561+ 9A98 2A 95 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9A9B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9A9C 22 95 89     	ld (Posicion_actual),hl
 564+ 9A9F CD 59 9B     	call Genera_coordenadas
 565+ 9AA2 CD FE 9A     	call Dec_CTRL_DESPLZ
 566+ 9AA5 18 03        	jr 2F
 567+ 9AA7 CD FE 9A     1 call Dec_CTRL_DESPLZ
 568+ 9AAA C9           2 ret
 569+ 9AAB
 570+ 9AAB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9AAB
 572+ 9AAB 3A 9B 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9AAE FE F7        	cp $f7
 574+ 9AB0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9AB2 30 2C        	jr nc,3F
 576+ 9AB4
 577+ 9AB4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9AB4
 579+ 9AB4 06 00        	ld b,0
 580+ 9AB6 04           4 inc b
 581+ 9AB7 3C           	inc a
 582+ 9AB8 FE F7        	cp $f7
 583+ 9ABA 20 FA        	jr nz,4B
 584+ 9ABC 3E FF        	ld a,$ff
 585+ 9ABE 90           	sub b
 586+ 9ABF 32 9B 89     	ld (CTRL_DESPLZ),a
 587+ 9AC2 18 1C        	jr 3F
 588+ 9AC4
 589+ 9AC4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9AC4
 591+ 9AC4 21 94 89     1 ld hl,Columns
 592+ 9AC7 35           	dec (hl)
 593+ 9AC8 AF           	xor a
 594+ 9AC9 32 9B 89     	ld (CTRL_DESPLZ),a
 595+ 9ACC 3A A7 89     	ld a,(Cuad_objeto)
 596+ 9ACF E6 01        	and 1
 597+ 9AD1 28 0A        	jr z,2F
 598+ 9AD3 2A 95 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9AD6 2B           	dec hl
 600+ 9AD7 22 95 89     	ld (Posicion_actual),hl
 601+ 9ADA CD 59 9B     	call Genera_coordenadas
 602+ 9ADD
 603+ 9ADD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9ADD
 605+ 9ADD CD 20 8D     2 call Inicia_puntero_objeto_izq
 606+ 9AE0 C9           3 ret
 607+ 9AE1
 608+ 9AE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9AE1              ;
 610+ 9AE1              ;	19/10/22
 611+ 9AE1              ;
 612+ 9AE1              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9AE1              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9AE1
 615+ 9AE1 3A 99 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9AE4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9AE6 C9           	ret
 618+ 9AE7
 619+ 9AE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9AE7              ;
 621+ 9AE7              ;	19/10/22
 622+ 9AE7              ;
 623+ 9AE7              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9AE7              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9AE7
 626+ 9AE7 3A 99 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9AEA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9AEC C9           	ret
 629+ 9AED
 630+ 9AED              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9AED              ;
 632+ 9AED              ;	24/7/22
 633+ 9AED              ;
 634+ 9AED              ;	Inc_CTRL_DESPLZ
 635+ 9AED              ;
 636+ 9AED              ;
 637+ 9AED              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9AED
 639+ 9AED 21 9B 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9AF0 3A A9 89     	ld a,(Vel_right)
 641+ 9AF3 A7           	and a
 642+ 9AF4 28 06        	jr z,1F
 643+ 9AF6 47           	ld b,a
 644+ 9AF7 34           3 inc (hl)
 645+ 9AF8 10 FD        	djnz 3B
 646+ 9AFA 18 01        	jr 2F
 647+ 9AFC 34           1 inc (hl)
 648+ 9AFD C9           2 ret
 649+ 9AFE
 650+ 9AFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9AFE              ;
 652+ 9AFE              ;	5/2/23
 653+ 9AFE              ;
 654+ 9AFE              ;	Dec_CTRL_DESPLZ
 655+ 9AFE              ;
 656+ 9AFE              ;
 657+ 9AFE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9AFE
 659+ 9AFE 21 9B 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9B01 3A A8 89     	ld a,(Vel_left)
 661+ 9B04 A7           	and a
 662+ 9B05 28 06        	jr z,1F
 663+ 9B07 47           	ld b,a
 664+ 9B08 35           3 dec (hl)
 665+ 9B09 10 FD        	djnz 3B
 666+ 9B0B 18 01        	jr 2F
 667+ 9B0D 35           1 dec (hl)
 668+ 9B0E C9           2 ret
 669+ 9B0F
 670+ 9B0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9B0F
 672+ 9B0F 2A 95 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9B12 01 1F 00     	ld bc,31
 674+ 9B15 A7           	and a
 675+ 9B16 ED 4A        	adc hl,bc
 676+ 9B18 22 95 89     	ld (Posicion_actual),hl
 677+ 9B1B 21 C1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9B1E CB C6        	set 0,(hl)
 679+ 9B20 C9           	ret
 680+ 9B21
 681+ 9B21              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9B21
 683+ 9B21 2A 95 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9B24 01 1F 00     	ld bc,31
 685+ 9B27 A7           	and a
 686+ 9B28 ED 42        	sbc hl,bc
 687+ 9B2A 22 95 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9B2D 21 C1 89     	ld hl,Ctrl_0
 689+ 9B30 CB CE        	set 1,(hl)
 690+ 9B32 C9           	ret
 691+ 9B33
 692+ 9B33              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9B33
 694+ 9B33 24           Reaparece_abajo inc h
 695+ 9B34 01 E0 17     	ld bc,$17e0
 696+ 9B37 A7           	and a
 697+ 9B38 ED 4A        	adc hl,bc
 698+ 9B3A 22 95 89     	ld (Posicion_actual),hl
 699+ 9B3D 21 C1 89     	ld hl,Ctrl_0
 700+ 9B40 CB D6        	set 2,(hl)
 701+ 9B42 C9           	ret
 702+ 9B43
 703+ 9B43              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9B43
 705+ 9B43 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9B46 A7           	and a
 707+ 9B47 ED 42        	sbc hl,bc
 708+ 9B49 22 95 89     	ld (Posicion_actual),hl
 709+ 9B4C 21 C1 89     	ld hl,Ctrl_0
 710+ 9B4F CB DE        	set 3,(hl)
 711+ 9B51 C9           	ret
 712+ 9B52
 713+ 9B52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9B52
 715+ 9B52 2A A5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9B55 22 95 89     	ld (Posicion_actual),hl
 717+ 9B58 C9           	ret
# file closed: Direcciones.asm
1221  9B59              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B59              ; ------------------------------------------------------------------------
   2+ 9B59              ;
   3+ 9B59              ;	02/04/23
   4+ 9B59              ;
   5+ 9B59              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B59              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B59              ;
   8+ 9B59              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B59              ;
  10+ 9B59              ;	Modifica: A,BC y DE.
  11+ 9B59
  12+ 9B59 C5           Genera_coordenadas push bc
  13+ 9B5A E5           	push hl
  14+ 9B5B D5           	push de
  15+ 9B5C
  16+ 9B5C 2A 95 89     	ld hl,(Posicion_actual)
  17+ 9B5F
  18+ 9B5F 7D           	ld a,l
  19+ 9B60 E6 1F        	and $1f
  20+ 9B62 32 99 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9B65
  22+ 9B65 CD ED 97     	call calcula_tercio
  23+ 9B68 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9B69
  25+ 9B69 1E 00        	ld e,0
  26+ 9B6B 7D           	ld a,l
  27+ 9B6C E6 E0        	and $e0
  28+ 9B6E 28 01        	jr z,1F
  29+ 9B70 04           	inc b
  30+ 9B71
  31+ 9B71 04           1 inc b
  32+ 9B72 05           	dec b
  33+ 9B73 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9B75              ;														; _ , salimos.
  35+ 9B75 1C           3 inc e
  36+ 9B76 D6 20        	sub 32
  37+ 9B78 20 FB        	jr nz,3B
  38+ 9B7A 10 F5        	djnz 1B
  39+ 9B7C
  40+ 9B7C 7B           2 ld a,e
  41+ 9B7D 32 9A 89     	ld (Coordenada_y),a
  42+ 9B80
  43+ 9B80 D1           	pop de
  44+ 9B81 E1           	pop hl
  45+ 9B82 C1           	pop bc
  46+ 9B83
  47+ 9B83 C9           	ret
  48+ 9B84
  49+ 9B84              ; ------------------------------------------------------------------------
  50+ 9B84              ;	28/05/23
  51+ 9B84              ;
  52+ 9B84              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9B84              ;	Fila superior "0", Columna izquierda "0".
  54+ 9B84              ;
  55+ 9B84              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9B84              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9B84              ;
  58+ 9B84              ;		DE="$120d"
  59+ 9B84              ;
  60+ 9B84              ;		D, (Coordenada_X), Columnas, $12
  61+ 9B84              ;		E, (Coordenada_y), Filas, $0d
  62+ 9B84              ;
  63+ 9B84              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9B84
  65+ 9B84              ;	Modifica: A,BC y DE.
  66+ 9B84
  67+ 9B84
  68+ 9B84              Genera_coordenadas_disparo
  69+ 9B84
  70+ 9B84              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9B84
  72+ 9B84 7D           	ld a,l
  73+ 9B85 E6 1F        	and $1f
  74+ 9B87 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9B88 CD ED 97     	call calcula_tercio
  76+ 9B8B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9B8C 1E 00        	ld e,0
  78+ 9B8E 7D           	ld a,l
  79+ 9B8F E6 E0        	and $e0
  80+ 9B91 28 01        	jr z,1F
  81+ 9B93 04           	inc b
  82+ 9B94 1C           1 inc e
  83+ 9B95 D6 20        	sub 32
  84+ 9B97 20 FB        	jr nz,1B
  85+ 9B99 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9B9B C9           	ret
  87+ 9B9C
# file closed: Genera_coordenadas.asm
1222  9B9C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B9C
   2+ 9B9C
   3+ 9B9C              ;   11/8/22
   4+ 9B9C              ;
   5+ 9B9C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B9C              ;
   7+ 9B9C              ;   Mov_obj.asm
   8+ 9B9C              ;
   9+ 9B9C              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9B9C              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9B9C              ;
  12+ 9B9C              ;   Codificación:
  13+ 9B9C              ;
  14+ 9B9C              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9B9C
  16+ 9B9C              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9B9C
  18+ 9B9C 02 40 00     Arriba db 2,%01000000,0
  19+ 9B9F 02 80 00     Abajo db 2,%10000000,0
  20+ 9BA2 02 20 00     Derecha db 2,%00100000,0
  21+ 9BA5 02 10 00     Izquierda db 2,%00010000,0
  22+ 9BA8 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9BAC 60 42 60 40
  22+ 9BB0 63
  23+ 9BB1 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9BB5 22 A3 80 A0
  24+ 9BB9 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9BBD 84 A0 83 A0
  25+ 9BC1 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9BC5 80 A3 22 A0
  26+ 9BC9 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9BCD 40 60 42 60
  27+ 9BD1 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9BD5
  29+ 9BD5 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9BD9 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9BDD 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9BE1 84 00
  32+ 9BE3 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9BE7 84 00
  33+ 9BE9 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9BED 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9BF1 1F 1F 1F 1F
  35+ 9BF5 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9BF9 1F 1F 1F 1F
  35+ 9BFD 1F
  36+ 9BFE 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9C02 2F 2F 2F 2F
  36+ 9C06 2F 2F
  37+ 9C08 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9C0C 2F 2F 00
  38+ 9C0F
  39+ 9C0F              ; ----- ----- ----- ----- -----
  40+ 9C0F
  41+ 9C0F ED 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9C11 E9 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9C13 A5 9B        Indice_mov_Izquierda defw Izquierda
  44+ 9C15 A2 9B        Indice_mov_Derecha defw Derecha
  45+ 9C17 9F 9B        Indice_mov_Abajo defw Abajo
  46+ 9C19 9C 9B        Indice_mov_Arriba defw Arriba
  47+ 9C1B D9 9B        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9C1D DD 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9C1F D5 9B        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9C21 E3 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9C23 A8 9B        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9C25              ; ----- ----- ----- ----- -----
  53+ 9C25
  54+ 9C25 3A C8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9C28 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9C29 28 02            jr z,1F
  57+ 9C2B 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9C2D 3A C9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9C30 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9C32 32 C9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9C35              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9C35 2A C6 89         ld hl,(Puntero_mov)
  63+ 9C38 7E               ld a,(hl)
  64+ 9C39 32 C8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9C3C 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9C3D 22 C6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9C40
  68+ 9C40 3A CA 89     Decoder ld a,(Repetimos_db)
  69+ 9C43 A7               and a
  70+ 9C44 20 0C            jr nz,12F
  71+ 9C46 2A C6 89         ld hl,(Puntero_mov)
  72+ 9C49 7E               ld a,(hl)
  73+ 9C4A A7               and a
  74+ 9C4B 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9C4D E6 0F            and $0f
  76+ 9C4F 32 CA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9C52              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9C52 2A C6 89     12 ld hl,(Puntero_mov)
  79+ 9C55 CB 7E            bit 7,(hl)
  80+ 9C57 28 03            jr z,2F
  81+ 9C59 CD 33 98         call Mov_down
  82+ 9C5C 2A C6 89     2 ld hl, (Puntero_mov)
  83+ 9C5F CB 76            bit 6,(hl)
  84+ 9C61 28 03            jr z,3F
  85+ 9C63 CD 64 98         call Mov_up
  86+ 9C66 2A C6 89     3 ld hl, (Puntero_mov)
  87+ 9C69 CB 6E            bit 5,(hl)
  88+ 9C6B 28 03            jr z,4F
  89+ 9C6D CD A7 98         call Mov_right
  90+ 9C70 2A C6 89     4 ld hl, (Puntero_mov)
  91+ 9C73 CB 66            bit 4,(hl)
  92+ 9C75 28 03            jr z,5F
  93+ 9C77 CD C5 99         call Mov_left
  94+ 9C7A
  95+ 9C7A              ; ---------- --------- --------- ---------- ----------
  96+ 9C7A
  97+ 9C7A 3A CA 89     5 ld a,(Repetimos_db)
  98+ 9C7D A7               and a
  99+ 9C7E 28 07            jr z,6F
 100+ 9C80 3D               dec a
 101+ 9C81 32 CA 89         ld (Repetimos_db),a
 102+ 9C84 28 01            jr z,6f
 103+ 9C86 C9           11 ret
 104+ 9C87 21 C8 89     6 ld hl,Contador_db_mov
 105+ 9C8A 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9C8B 2A C6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9C8E 23               inc hl
 108+ 9C8F 22 C6 89         ld (Puntero_mov),hl
 109+ 9C92 18 F2            jr 11B
 110+ 9C94 2A C4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9C97 3A C9 89         ld a,(Incrementa_puntero)
 112+ 9C9A 47               ld b,a
 113+ 9C9B 23           8 inc hl
 114+ 9C9C 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9C9E 5E               ld e,(hl)
 116+ 9C9F 23               inc hl
 117+ 9CA0 56               ld d,(hl)
 118+ 9CA1 EB               ex de,hl
 119+ 9CA2 22 C6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9CA5 18 DF            jr 11B
 121+ 9CA7
 122+ 9CA7              ; ---------- --------- --------- ---------- ----------
 123+ 9CA7              ;
 124+ 9CA7              ;   11/8/22
 125+ 9CA7              ;
 126+ 9CA7              ;   Prepara_Puntero_mov
 127+ 9CA7
 128+ 9CA7 E5           Prepara_Puntero_mov push hl
 129+ 9CA8 D5               push de
 130+ 9CA9 2A C4 89         ld hl,(Puntero_indice_mov)
 131+ 9CAC 5E               ld e,(hl)
 132+ 9CAD 23               inc hl
 133+ 9CAE 56               ld d,(hl)
 134+ 9CAF EB               ex de,hl
 135+ 9CB0 22 C6 89         ld (Puntero_mov),hl
 136+ 9CB3 D1               pop de
 137+ 9CB4 E1               pop hl
 138+ 9CB5 C9               ret
 139+ 9CB6
 140+ 9CB6              ; ---------- --------- --------- ---------- ----------
 141+ 9CB6              ;
 142+ 9CB6              ;   11/8/22
 143+ 9CB6              ;
 144+ 9CB6              ;   Reinicia_el_movimiento
 145+ 9CB6
 146+ 9CB6 CD A7 9C     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9CB9 AF               xor a
 148+ 9CBA 32 C8 89         ld (Contador_db_mov),a
 149+ 9CBD 32 C9 89         ld (Incrementa_puntero),a
 150+ 9CC0 C3 25 9C         jp Movimiento
 151+ 9CC3 C9               ret
 152+ 9CC4              ; ---------- --------- --------- ---------- ----------
 153+ 9CC4
 154+ 9CC4
 155+ 9CC4
 156+ 9CC4
 157+ 9CC4
 158+ 9CC4
 159+ 9CC4
 160+ 9CC4
 161+ 9CC4
 162+ 9CC4
 163+ 9CC4
 164+ 9CC4
 165+ 9CC4
 166+ 9CC4
 167+ 9CC4
 168+ 9CC4
 169+ 9CC4
 170+ 9CC4
# file closed: Patrones_de_mov.asm
1223  9CC4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9CC4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9CC4              ;
   3+ 9CC4              ;	3/1/23
   4+ 9CC4              ;
   5+ 9CC4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9CC4
   7+ 9CC4              ;	ADC HL,SP	LD (addr),SP
   8+ 9CC4              ;	ADD HL,SP	LD SP,(addr)
   9+ 9CC4              ;	ADD IX,SP	LD SP,nn
  10+ 9CC4              ; 	ADD IY,SP	LD SP,HL
  11+ 9CC4              ;				LD SP,IX
  12+ 9CC4              ;	DEC SP		LD SP,IY
  13+ 9CC4
  14+ 9CC4              ;	EX (SP),HL
  15+ 9CC4              ;	EX (SP),IX
  16+ 9CC4              ;	EX (SP),IY
  17+ 9CC4
  18+ 9CC4              ;	INC SP
  19+ 9CC4
  20+ 9CC4
  21+ 9CC4                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 E2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E8 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E6 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E8 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E6 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B E2 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1224  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1225  7FE6
1226  7FE6              	SAVESNA "Pruebas.sna", START
1227  7FE6
1228  7FE6
1229  7FE6
1230  7FE6
# file closed: Banco_de_pruebas.asm
