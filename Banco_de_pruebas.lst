# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD 18 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 43 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 49 89        	defw End_Snapshot_1
 267+ 8500 4D 89        	defw End_Snapshot_2
 268+ 8502 51 89        	defw End_Snapshot_3
 269+ 8504 45 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 4B 89        	defw End_Snapshot_disparos_1
 271+ 8508 4F 89        	defw End_Snapshot_disparos_2
 272+ 850A 53 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E1 85        	defw Caja_1
  98+ 858E 24 86        	defw Caja_2
  99+ 8590 67 86        	defw Caja_3
 100+ 8592 AA 86        	defw Caja_4
 101+ 8594 ED 86        	defw Caja_5
 102+ 8596 30 87        	defw Caja_6
 103+ 8598 73 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00        	db 0,0											; Variables_de_borrado
 129+ 85BA 00 00        	defw 0											;	" " " " " " "
 130+ 85BC 00 00        	defw 0											;	" " " " " " "
 131+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 132+ 85C2
 133+ 85C2 00 00        	db 0,0											; Variables_de_pintado
 134+ 85C4 00 00        	defw 0											;	" " " " " " "
 135+ 85C6 00 00        	defw 0											;	" " " " " " "
 136+ 85C8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85CC
 138+ 85CC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 139+ 85CE
 140+ 85CE 00           	db 0											; (Autoriza_movimiento).
 141+ 85CF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 141+ 85D3 00 00
 142+ 85D5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 143+ 85D8
 144+ 85D8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85DA 00           	db 0											; (Cola_de_desplazamiento).
 146+ 85DB
 147+ 85DB 00           	db 0 											; (Columnas).
 148+ 85DC 00 00        	defw 0											; (Limite_horizontal).
 149+ 85DE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 150+ 85E1
 151+ 85E1              ; ---------- ---------- ---------- ---------- ----------
 152+ 85E1
 153+ 85E1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 154+ 85E3 00 00        	defw 0											; (Posicion_actual).
 155+ 85E5 00 00        	defw 0 											; (Puntero_objeto).
 156+ 85E7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 157+ 85EA
 158+ 85EA 00           	db %00000000 									; (Attr).
 159+ 85EB
 160+ 85EB 00 00        	defw 0											; (Indice_Sprite_der).
 161+ 85ED 00 00        	defw 0											; (Indice_Sprite_izq).
 162+ 85EF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 163+ 85F1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 164+ 85F3
 165+ 85F3 00 00        	defw 0											; (Posicion_inicio).
 166+ 85F5 00           	db 0											; (Cuad_objeto).
 167+ 85F6
 168+ 85F6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 169+ 85FA
 170+ 85FA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 171+ 85FB
 172+ 85FB 00 00        	db 0,0										    ; Variables_de_borrado
 173+ 85FD 00 00        	defw 0											;	" " " " " " "
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 176+ 8605
 177+ 8605 00 00        	db 0,0											; Variables_de_pintado
 178+ 8607 00 00        	defw 0											;	" " " " " " "
 179+ 8609 00 00        	defw 0											;	" " " " " " "
 180+ 860B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860F
 182+ 860F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 183+ 8611
 184+ 8611 00           	db 0											; (Autoriza_movimiento).
 185+ 8612 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 185+ 8616 00 00
 186+ 8618 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 187+ 861B
 188+ 861B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 189+ 861D 00           	db 0											; (Cola_de_desplazamiento).
 190+ 861E
 191+ 861E 00           	db 0 											; (Columnas).
 192+ 861F 00 00        	defw 0											; (Limite_horizontal).
 193+ 8621 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 194+ 8624
 195+ 8624              ; ---------- ---------- ---------- ---------- ----------
 196+ 8624
 197+ 8624 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 198+ 8626 00 00        	defw 0											; (Posicion_actual).
 199+ 8628 00 00        	defw 0 											; (Puntero_objeto).
 200+ 862A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 201+ 862D
 202+ 862D 00           	db %00000000 									; (Attr).
 203+ 862E
 204+ 862E 00 00        	defw 0											; (Indice_Sprite_der).
 205+ 8630 00 00        	defw 0											; (Indice_Sprite_izq).
 206+ 8632 00 00        	defw 0											; (Puntero_DESPLZ_der).
 207+ 8634 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 208+ 8636
 209+ 8636 00 00        	defw 0											; (Posicion_inicio).
 210+ 8638 00           	db 0											; (Cuad_objeto).
 211+ 8639
 212+ 8639 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 213+ 863D
 214+ 863D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 215+ 863E
 216+ 863E 00 00        	db 0,0										    ; Variables_de_borrado
 217+ 8640 00 00        	defw 0											;	" " " " " " "
 218+ 8642 00 00        	defw 0											;	" " " " " " "
 219+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 8648
 221+ 8648 00 00        	db 0,0											; Variables_de_pintado
 222+ 864A 00 00        	defw 0											;	" " " " " " "
 223+ 864C 00 00        	defw 0											;	" " " " " " "
 224+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 8652
 226+ 8652 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 227+ 8654
 228+ 8654 00           	db 0											; (Autoriza_movimiento).
 229+ 8655 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 229+ 8659 00 00
 230+ 865B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 231+ 865E
 232+ 865E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 233+ 8660 00           	db 0											; (Cola_de_desplazamiento).
 234+ 8661
 235+ 8661 00           	db 0 											; (Columnas).
 236+ 8662 00 00        	defw 0											; (Limite_horizontal).
 237+ 8664 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 238+ 8667
 239+ 8667              ; ---------- ---------- ---------- ---------- ----------
 240+ 8667
 241+ 8667 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 242+ 8669 00 00        	defw 0											; (Posicion_actual).
 243+ 866B 00 00        	defw 0 											; (Puntero_objeto).
 244+ 866D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 245+ 8670
 246+ 8670 00           	db %00000000 									; (Attr).
 247+ 8671
 248+ 8671 00 00        	defw 0											; (Indice_Sprite_der).
 249+ 8673 00 00        	defw 0											; (Indice_Sprite_izq).
 250+ 8675 00 00        	defw 0											; (Puntero_DESPLZ_der).
 251+ 8677 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 252+ 8679
 253+ 8679 00 00        	defw 0											; (Posicion_inicio).
 254+ 867B 00           	db 0											; (Cuad_objeto).
 255+ 867C
 256+ 867C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 257+ 8680
 258+ 8680 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 259+ 8681
 260+ 8681 00 00        	db 0,0										    ; Variables_de_borrado
 261+ 8683 00 00        	defw 0											;	" " " " " " "
 262+ 8685 00 00        	defw 0											;	" " " " " " "
 263+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 868B
 265+ 868B 00 00        	db 0,0											; Variables_de_pintado
 266+ 868D 00 00        	defw 0											;	" " " " " " "
 267+ 868F 00 00        	defw 0											;	" " " " " " "
 268+ 8691 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8695
 270+ 8695 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 8697
 272+ 8697 00           	db 0											; (Autoriza_movimiento).
 273+ 8698 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 869C 00 00
 274+ 869E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 86A1
 276+ 86A1 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 86A3 00           	db 0											; (Cola_de_desplazamiento).
 278+ 86A4
 279+ 86A4 00           	db 0 											; (Columnas).
 280+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 281+ 86A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 86AA
 283+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 284+ 86AA
 285+ 86AA 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 86AC 00 00        	defw 0											; (Posicion_actual).
 287+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 288+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 86B3
 290+ 86B3 00           	db %00000000 									; (Attr).
 291+ 86B4
 292+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 86BC
 297+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 298+ 86BE 00           	db 0											; (Cuad_objeto).
 299+ 86BF
 300+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 86C3
 302+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 86C4
 304+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 305+ 86C6 00 00        	defw 0											;	" " " " " " "
 306+ 86C8 00 00        	defw 0											;	" " " " " " "
 307+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 308+ 86CE
 309+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 310+ 86D0 00 00        	defw 0											;	" " " " " " "
 311+ 86D2 00 00        	defw 0											;	" " " " " " "
 312+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D8
 314+ 86D8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 315+ 86DA
 316+ 86DA 00           	db 0											; (Autoriza_movimiento).
 317+ 86DB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 317+ 86DF 00 00
 318+ 86E1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 319+ 86E4
 320+ 86E4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86E6 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86E7
 323+ 86E7 00           	db 0 											; (Columnas).
 324+ 86E8 00 00        	defw 0											; (Limite_horizontal).
 325+ 86EA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86ED
 327+ 86ED              ; ---------- ---------- ---------- ---------- ----------
 328+ 86ED
 329+ 86ED 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86EF 00 00        	defw 0											; (Posicion_actual).
 331+ 86F1 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86F3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86F6
 334+ 86F6 00           	db %00000000 									; (Attr).
 335+ 86F7
 336+ 86F7 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86F9 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86FB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86FD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86FF
 341+ 86FF 00 00        	defw 0											; (Posicion_inicio).
 342+ 8701 00           	db 0											; (Cuad_objeto).
 343+ 8702
 344+ 8702 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 8706
 346+ 8706 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 8707
 348+ 8707 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 8709 00 00        	defw 0											;	" " " " " " "
 350+ 870B 00 00        	defw 0											;	" " " " " " "
 351+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 8711
 353+ 8711 00 00        	db 0,0											; Variables_de_pintado
 354+ 8713 00 00        	defw 0											;	" " " " " " "
 355+ 8715 00 00        	defw 0											;	" " " " " " "
 356+ 8717 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 871B
 358+ 871B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 871D
 360+ 871D 00           	db 0											; (Autoriza_movimiento).
 361+ 871E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8722 00 00
 362+ 8724 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 363+ 8727
 364+ 8727 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 365+ 8729 00           	db 0											; (Cola_de_desplazamiento).
 366+ 872A
 367+ 872A 00           	db 0 											; (Columnas).
 368+ 872B 00 00        	defw 0											; (Limite_horizontal).
 369+ 872D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 370+ 8730
 371+ 8730              ; ---------- ---------- ---------- ---------- ----------
 372+ 8730
 373+ 8730 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 374+ 8732 00 00        	defw 0											; (Posicion_actual).
 375+ 8734 00 00        	defw 0 											; (Puntero_objeto).
 376+ 8736 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 377+ 8739
 378+ 8739 00           	db %00000000 									; (Attr).
 379+ 873A
 380+ 873A 00 00        	defw 0											; (Indice_Sprite_der).
 381+ 873C 00 00        	defw 0											; (Indice_Sprite_izq).
 382+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 383+ 8740 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 384+ 8742
 385+ 8742 00 00        	defw 0											; (Posicion_inicio).
 386+ 8744 00           	db 0											; (Cuad_objeto).
 387+ 8745
 388+ 8745 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 389+ 8749
 390+ 8749 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 391+ 874A
 392+ 874A 00 00        	db 0,0										    ; Variables_de_borrado
 393+ 874C 00 00        	defw 0											;	" " " " " " "
 394+ 874E 00 00        	defw 0											;	" " " " " " "
 395+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 8754
 397+ 8754 00 00        	db 0,0											; Variables_de_pintado
 398+ 8756 00 00        	defw 0											;	" " " " " " "
 399+ 8758 00 00        	defw 0											;	" " " " " " "
 400+ 875A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875E
 402+ 875E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 403+ 8760
 404+ 8760 00           	db 0											; (Autoriza_movimiento).
 405+ 8761 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 405+ 8765 00 00
 406+ 8767 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 407+ 876A
 408+ 876A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 409+ 876C 00           	db 0											; (Cola_de_desplazamiento).
 410+ 876D
 411+ 876D 00           	db 0 											; (Columnas).
 412+ 876E 00 00        	defw 0											; (Limite_horizontal).
 413+ 8770 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 414+ 8773
 415+ 8773              ; ---------- ---------- ---------- ---------- ----------
 416+ 8773
 417+ 8773 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 418+ 8775 00 00        	defw 0											; (Posicion_actual).
 419+ 8777 00 00        	defw 0 											; (Puntero_objeto).
 420+ 8779 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 421+ 877C
 422+ 877C 00           	db %00000000 									; (Attr).
 423+ 877D
 424+ 877D 00 00        	defw 0											; (Indice_Sprite_der).
 425+ 877F 00 00        	defw 0											; (Indice_Sprite_izq).
 426+ 8781 00 00        	defw 0											; (Puntero_DESPLZ_der).
 427+ 8783 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 428+ 8785
 429+ 8785 00 00        	defw 0											; (Posicion_inicio).
 430+ 8787 00           	db 0											; (Cuad_objeto).
 431+ 8788
 432+ 8788 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 433+ 878C
 434+ 878C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 435+ 878D
 436+ 878D 00 00        	db 0,0										    ; Variables_de_borrado
 437+ 878F 00 00        	defw 0											;	" " " " " " "
 438+ 8791 00 00        	defw 0											;	" " " " " " "
 439+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 440+ 8797
 441+ 8797 00 00        	db 0,0											; Variables_de_pintado
 442+ 8799 00 00        	defw 0											;	" " " " " " "
 443+ 879B 00 00        	defw 0											;	" " " " " " "
 444+ 879D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 87A1
 446+ 87A1 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 447+ 87A3
 448+ 87A3 00           	db 0											; (Autoriza_movimiento).
 449+ 87A4 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 449+ 87A8 00 00
 450+ 87AA 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 451+ 87AD
 452+ 87AD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 453+ 87AF 00           	db 0											; (Cola_de_desplazamiento).
 454+ 87B0
 455+ 87B0 00           	db 0 											; (Columnas).
 456+ 87B1 00 00        	defw 0											; (Limite_horizontal).
 457+ 87B3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 458+ 87B6
 459+ 87B6              ; -------------------------------------------------------------------------------------
 460+ 87B6              ;
 461+ 87B6              ;	20/05/23
 462+ 87B6              ;
 463+ 87B6              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 464+ 87B6              ;
 465+ 87B6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 466+ 87B6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 467+ 87B6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 468+ 87B6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 469+ 87B6
 470+ 87B6              Indice_de_entidades
 471+ 87B6
 472+ 87B6 BA 87        	defw Entidad_1
 473+ 87B8 CA 87        	defw Entidad_2
 474+ 87BA
 475+ 87BA              ;	BADSAT, (Satélite malvado).
 476+ 87BA
 477+ 87BA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 478+ 87BC 04           	db %00000100									; (Attr).
 479+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 480+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 481+ 87C1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 482+ 87C3 01           	db 1											; (Cuad_objeto).
 483+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 484+ 87C8 84 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 485+ 87CA
 486+ 87CA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 487+ 87CC 02           	db %00000010									; (Attr).
 488+ 87CD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 489+ 87CF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 490+ 87D1 40 50        	defw $5040                                      ; (Posicion_inicio).
 491+ 87D3 01           	db 1											; (Cuad_objeto).
 492+ 87D4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 493+ 87D8 84 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 494+ 87DA
# file closed: Cajas_y_disparos.asm
  22  87DA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87DA              ; 13/05/23
   2+ 87DA
   3+ 87DA              Indice_de_niveles
   4+ 87DA
   5+ 87DA E8 87        	defw Nivel_1
   6+ 87DC EB 87        	defw Nivel_2
   7+ 87DE F8 87        	defw Nivel_3
   8+ 87E0 08 88        	defw Nivel_4
   9+ 87E2 1A 88        	defw Nivel_5
  10+ 87E4              ;	...
  11+ 87E4              ;	...
  12+ 87E4              ;	+ Niveles ...
  13+ 87E4
  14+ 87E4 00 00        	defw 0
  15+ 87E6 00 00        	defw 0
  16+ 87E8
  17+ 87E8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87E9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 87EB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87EC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 87F0 01 02
  21+ 87F2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87F6 01 02
  22+ 87F8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87F9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 87FD 01
  24+ 87FE 03 01 01 01  	db 3,1,1,1,1
  24+ 8802 01
  25+ 8803 03 01 01 01  	db 3,1,1,1,1
  25+ 8807 01
  26+ 8808 11           Nivel_4 db 17									; Nº de entidades.
  27+ 8809 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 880D 01
  28+ 880E 04 01 01 01  	db 4,1,1,1,1
  28+ 8812 01
  29+ 8813 04 01 01 01  	db 4,1,1,1,1
  29+ 8817 01
  30+ 8818 02 03        	db 2,3
  31+ 881A 14           Nivel_5 db 20									; Nº de entidades.
  32+ 881B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 881F 01
  33+ 8820 05 01 01 01  	db 5,1,1,1,1
  33+ 8824 01
  34+ 8825 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 8829 01
  35+ 882A 05 01 01 01  	db 5,1,1,1,1
  35+ 882E 01
  36+ 882F
  37+ 882F              ;---------------------------------------------------------------------------------------------------------------
  38+ 882F              ;
  39+ 882F              ;   3/9/23
  40+ 882F              ;
  41+ 882F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 882F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 882F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 882F              ;	_en la caja DRAW correspondiente.
  45+ 882F              ;
  46+ 882F              ;	MODIFICA: HL,DE y A.
  47+ 882F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 882F
  49+ 882F              Inicializa_Punteros_de_nivel
  50+ 882F
  51+ 882F 21 DA 87     	ld hl,Indice_de_niveles
  52+ 8832 22 80 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8835 CD EE 8C     	call Extrae_address
  54+ 8838 7E           	ld a,(hl)
  55+ 8839 32 31 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 883C 23           	inc hl
  57+ 883D 22 82 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8840 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8841
  60+ 8841              ;---------------------------------------------------------------------------------------------------------------
  61+ 8841              ;
  62+ 8841              ;   13/5/23
  63+ 8841              ;
  64+ 8841              ;	Destruye A,BC,HL,DE
  65+ 8841
  66+ 8841              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8841              ;	_del juego.
  68+ 8841
  69+ 8841              Prepara_cajas
  70+ 8841
  71+ 8841              ; Preparamos los punteros de las cajas.
  72+ 8841
  73+ 8841 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8844 CD EE 8C     	call Extrae_address
  75+ 8847 CD 84 88     	call Avanza_caja
  76+ 884A
  77+ 884A CD C8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 884D
  79+ 884D 2A 82 89     	ld hl,(Datos_de_nivel)
  80+ 8850
  81+ 8850              ; HL está en los datos del nivel correspondiente.
  82+ 8850              ; B actuará como contador de cajas.
  83+ 8850
  84+ 8850 C5           1 push bc
  85+ 8851
  86+ 8851 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8852 CD 75 88     	call PreparaBC
  88+ 8855
  89+ 8855 21 B6 87     	ld hl,Indice_de_entidades
  90+ 8858 CD 7D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 885B 22 37 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 885E
  93+ 885E CD 8E 88     	call Datos_de_entidad_a_caja
  94+ 8861
  95+ 8861 2A 2F 89     	ld hl,(Indice_restore_caja)
  96+ 8864 CD EE 8C     	call Extrae_address
  97+ 8867 CD 84 88     	call Avanza_caja
  98+ 886A
  99+ 886A 2A 82 89     	ld hl,(Datos_de_nivel)
 100+ 886D 23           	inc hl
 101+ 886E 22 82 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8871
 103+ 8871 C1           	pop bc
 104+ 8872 10 DC        	djnz 1B
 105+ 8874 C9           	ret
 106+ 8875
 107+ 8875 CB 27        PreparaBC sla a
 108+ 8877 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8879 4F           	ld c,a
 110+ 887A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 887C C9           	ret
 112+ 887D
 113+ 887D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 887E ED 4A        	adc hl,bc
 115+ 8880 CD EE 8C     	call Extrae_address
 116+ 8883 C9           	ret
 117+ 8884
 118+ 8884 22 2B 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8887 13           	inc de
 120+ 8888 13           	inc de
 121+ 8889 EB           	ex de,hl
 122+ 888A 22 2F 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 888D C9           	ret
 124+ 888E
 125+ 888E              Datos_de_entidad_a_caja
 126+ 888E
 127+ 888E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 888E
 129+ 888E
 130+ 888E ED 5B 2B 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8892
 132+ 8892 01 02 00     	ld bc,2
 133+ 8895 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8897
 135+ 8897 01 07 00     	ld bc,7
 136+ 889A CD C2 88     	call Situa_DE
 137+ 889D
 138+ 889D 01 05 00     	ld bc,5
 139+ 88A0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A2
 141+ 88A2 01 04 00     	ld bc,4
 142+ 88A5 CD C2 88     	call Situa_DE
 143+ 88A8
 144+ 88A8 01 07 00     	ld bc,7
 145+ 88AB ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AD
 147+ 88AD 01 18 00     	ld bc,24
 148+ 88B0 CD C2 88     	call Situa_DE
 149+ 88B3
 150+ 88B3 01 02 00     	ld bc,2
 151+ 88B6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B8
 153+ 88B8              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88B8              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88B8
 156+ 88B8 01 0F 00     	ld bc,15									; *****
 157+ 88BB CD C2 88     	call Situa_DE
 158+ 88BE
 159+ 88BE 3E 03        	ld a,3
 160+ 88C0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88C1
 162+ 88C1 C9           	ret
 163+ 88C2
 164+ 88C2 EB           Situa_DE ex de,hl
 165+ 88C3 A7           	and a
 166+ 88C4 ED 4A        	adc hl,bc
 167+ 88C6 EB           	ex de,hl
 168+ 88C7 C9           	ret
 169+ 88C8
 170+ 88C8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88C8              ;
 172+ 88C8              ;	21/5/23
 173+ 88C8              ;
 174+ 88C8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88C8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88C8              ;
 177+ 88C8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88C8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88C8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88C8              ;
 181+ 88C8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88C8              ;	MODIFICA: A y B.
 183+ 88C8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88C8
 185+ 88C8              Admin_num_entidades
 186+ 88C8
 187+ 88C8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88C8
 189+ 88C8 3A 31 89     	ld a,(Numero_de_entidades)
 190+ 88CB A7           	and a
 191+ 88CC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88CC              ;	jr z,$
 193+ 88CC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88CC
 195+ 88CC 20 03        	jr nz,3F
 196+ 88CE
 197+ 88CE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88CE
 199+ 88CE CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88D1
 201+ 88D1 3A 31 89     3 ld a,(Numero_de_entidades)
 202+ 88D4 FE 0A        	cp 10
 203+ 88D6 38 08        	jr c,1F
 204+ 88D8
 205+ 88D8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88D8              ; Actualizamos variables.
 207+ 88D8
 208+ 88D8 3E 0A        	ld a,10
 209+ 88DA 32 32 89     	ld (Numero_parcial_de_entidades),a
 210+ 88DD 47           	ld b,a
 211+ 88DE 18 04        	jr 2F
 212+ 88E0
 213+ 88E0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88E0              ; (Numero_de_entidades)="0".
 215+ 88E0
 216+ 88E0 32 32 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88E3 47           	ld b,a
 218+ 88E4 C9           2 ret
# file closed: Niveles.asm
  23  88E5
  24  88E5              ; ******************************************************************************************************************************************************************************************
  25  88E5              ; Constantes.
  26  88E5              ; ******************************************************************************************************************************************************************************************
  27  88E5              ;
  28  88E5              ; 4/9/23
  29  88E5              ;
  30  88E5              ; Constantes generales.
  31  88E5              ;
  32  88E5
  33  88E5              Sprite_vacio equ $f000
  34  88E5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  88E5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  88E5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  88E5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  88E5
  39  88E5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  88E5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  88E5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  42  88E5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  88E5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  88E5              ;
  45  88E5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  46  88E5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  47  88E5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  48  88E5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  49  88E5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  50  88E5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  51  88E5
  52  88E5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
  53  88E5
  54  88E5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  55  88E5
  56  88E5              ; ******************************************************************************************************************************************************************************************
  57  88E5              ; Variables.
  58  88E5              ; ******************************************************************************************************************************************************************************************
  59  88E5              ;
  60  88E5              ; 28/07/23
  61  88E5              ;
  62  88E5              ; Variables de DRAW. (Motor principal).
  63  88E5              ;
  64  88E5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  65  88E5
  66  88E5 00           Filas db 0												; Filas. [DRAW]
  67  88E6 00           Columns db 0  											; Nº de columnas. [DRAW]
  68  88E7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  69  88E9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  70  88EB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  71  88EC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  72  88ED
  73  88ED              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  74  88ED
  75  88ED 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  76  88EE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  77  88EE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  78  88EE 00           Attr db 0												; Atributos de la entidad:
  79  88EF
  80  88EF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  81  88EF              ;
  82  88EF              ;	COLORES: 0 ..... NEGRO
  83  88EF              ;    		 1 ..... AZUL
  84  88EF              ; 			 2 ..... ROJO
  85  88EF              ;			 3 ..... MAGENTA
  86  88EF              ; 			 4 ..... VERDE
  87  88EF              ; 			 5 ..... CIAN
  88  88EF              ;			 6 ..... AMARILLO
  89  88EF              ; 			 7 ..... BLANCO
  90  88EF
  91  88EF 00 00        Indice_Sprite_der defw 0
  92  88F1 00 00        Indice_Sprite_izq defw 0
  93  88F3 00 00        Puntero_DESPLZ_der defw 0
  94  88F5 00 00        Puntero_DESPLZ_izq defw 0
  95  88F7
  96  88F7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  97  88F9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  98  88FA
  99  88FA              ; Variables de objeto. (Características).
 100  88FA
 101  88FA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 102  88FB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 103  88FC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 104  88FD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 105  88FE
 106  88FE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 107  88FF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 108  88FF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 109  88FF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 110  8901 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 111  8903 00 00        	defw 0
 112  8905 00 00 00 00  	db 0,0,0,0
 113  8909
 114  8909 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 115  890B 00 00        	defw 0
 116  890D 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  890F 00 00 00 00  	db 0,0,0,0
 118  8913
 119  8913              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 120  8913
 121  8913 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 122  8914              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 123  8914              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 124  8914              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 125  8914              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 126  8914              ;
 127  8914              ; 														DESCRIPCIÖN:
 128  8914              ;
 129  8914              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 130  8914              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 131  8914              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 132  8914              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 133  8914              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 134  8914              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 135  8914              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 136  8914              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 137  8914              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 138  8914              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 139  8914              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 140  8914              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 141  8914              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 142  8914              ;
 143  8914              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 144  8914              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 145  8914              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 146  8914
 147  8914 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 148  8915
 149  8915              ; Movimiento. ------------------------------------------------------------------------------------------------------
 150  8915
 151  8915 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 152  8916 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 153  8918 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 154  891A 00 00        Puntero_indice_mov_bucle defw 0							;
 155  891C              ;
 156  891C              ;
 157  891C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 158  891D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 159  891D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 160  891D 00           Incrementa_puntero_backup db 0
 161  891E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 162  891F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 163  891F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 164  8920 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 165  8921 00           Cola_de_desplazamiento db 0								; Este byte indica:
 166  8922              ;
 167  8922              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 168  8922              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 169  8922              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 170  8922              ;
 171  8922              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 172  8922              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 173  8922              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 174  8922              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 175  8922              ;
 176  8922              ;														;	"$ff" ..... Bucle infinito de repetición.
 177  8922              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 178  8922              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 179  8922
 180  8922
 181  8922              ; Variables de funcionamiento. [DRAW].
 182  8922
 183  8922 00           Columnas db 0
 184  8923 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 185  8925              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  8925 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  8926
 188  8926              ; variables de control general.
 189  8926
 190  8926 00           Ctrl_2 db 0
 191  8927              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 192  8927              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 193  8927              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 194  8927              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 195  8927              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 196  8927              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 197  8927              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 198  8927              ;
 199  8927              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 200  8927              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 201  8927              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 202  8927              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 203  8927              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 204  8927
 205  8927 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 206  8928
 207  8928              ;! 67 Bytes por entidad.
 208  8928
 209  8928              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 210  8928              ;					         		---------;      ;---------
 211  8928
 212  8928
 213  8928              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 214  8928
 215  8928 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 216  8929
 217  8929              ;														DESCRIPCIÓN:
 218  8929              ;
 219  8929              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 220  8929              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 221  8929              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 222  8929              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 223  8929              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 224  8929              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 225  8929
 226  8929              ;														BIT 3, Recarga de nueva oleada.
 227  8929              ;														BIT 4, Recarga de nueva oleada.
 228  8929              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 229  8929              ;														BIT 6, **** Frame completo.
 230  8929
 231  8929 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 232  892B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 233  892B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 234  892B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 235  892B
 236  892B
 237  892B
 238  892B              ; Gestión de ENTIDADES y CAJAS.
 239  892B
 240  892B 00 00        Puntero_store_caja defw 0
 241  892D 00 00        Puntero_restore_caja defw 0
 242  892F 00 00        Indice_restore_caja defw 0
 243  8931 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 244  8932 00           Numero_parcial_de_entidades db 0
 245  8933 00           Entidades_en_curso db 0									; ..... ..... .....
 246  8934 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 247  8935              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 248  8935              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 249  8935              ;														; _ (Numero_de_malotes)="0".
 250  8935 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 251  8937 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 252  8939              ;														; _ puntero (Indice_entidades).
 253  8939
 254  8939
 255  8939              ;---------------------------------------------------------------------------------------------------------------
 256  8939              ;
 257  8939              ;	2/9/23
 258  8939              ;
 259  8939              ;	Álbumes.
 260  8939
 261  8939 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 262  893B              ;														; _variable para almacenar lo posición del puntero_
 263  893B              ; 														; _de pila, SP.
 264  893B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 265  893D              ;														; La utiliza la rutina [Extrae_foto_registros].
 266  893D 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 267  893F 00 00        Stack_snapshot defw 0
 268  8941 00 00        Stack_snapshot_disparos defw 0
 269  8943
 270  8943 00 00        End_Snapshot defw 0
 271  8945              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 272  8945 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 273  8947              ;														; _el snapshot de los registros del siguiente disparo.
 274  8947              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 275  8947 00 00        End_Snapshot_Amadeus defw 0
 276  8949 00 00        End_Snapshot_1 defw 0
 277  894B 00 00        End_Snapshot_disparos_1 defw 0
 278  894D 00 00        End_Snapshot_2 defw 0
 279  894F 00 00        End_Snapshot_disparos_2 defw 0
 280  8951 00 00        End_Snapshot_3 defw 0
 281  8953 00 00        End_Snapshot_disparos_3 defw 0
 282  8955
 283  8955 00 00        Puntero_indice_album_de_fotos defw 0
 284  8957 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 285  8959
 286  8959 00 00        Puntero_indice_End_Snapshot defw 0
 287  895B 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 288  895D 00 00        Puntero_de_End_Snapshot defw 0
 289  895F 00 00        Puntero_de_End_Snapshot_disparos defw 0
 290  8961
 291  8961              ;---------------------------------------------------------------------------------------------------------------
 292  8961
 293  8961              ; Gestión de Disparos.
 294  8961
 295  8961 00           Numero_de_disparotes db 0
 296  8962 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 297  8964 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 298  8966 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 299  8967              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 300  8967              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 301  8967 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 302  8969              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 303  8969              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 304  8969              ;														; _produzca colisión.
 305  8969 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 306  896B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 307  896B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 308  896E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 309  896E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  8971              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 311  8971 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 312  8973 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 313  8974
 314  8974              ;---------------------------------------------------------------------------------------------------------------
 315  8974
 316  8974              ; Relojes y temporizaciones.
 317  8974
 318  8974 00           Contador_de_frames db 0
 319  8975 00           Contador_de_frames_2 db 0
 320  8976
 321  8976 04           Clock_explosion db 4
 322  8977 1E           Clock_Entidades_en_curso db 30
 323  8978 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 324  8979              ;														; Repite la oleada de entidades.
 325  8979 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 326  897A 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 327  897B 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 328  897C
 329  897C 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 330  897D 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 331  897E 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 332  897F
 333  897F              ;---------------------------------------------------------------------------------------------------------------
 334  897F
 335  897F              ; Gestión de NIVELES.
 336  897F
 337  897F 00           Nivel db 0												; Nivel actual del juego.
 338  8980 00 00        Puntero_indice_NIVELES defw 0
 339  8982 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 340  8984              ; 														; _ que definen el NIVEL.
 341  8984              ; Y todo comienza aquí .....
 342  8984              ;
 343  8984              ; Rutina principal *************************************************************************************************************************************************************************
 344  8984              ;
 345  8984              ;	14/11/22
 346  8984
 347  8984              START
 348  8984
 349  8984 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 350  8987 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 351  8989 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 352  898B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 353  898D F3           	DI
 354  898E
 355  898E 3E 07        	ld a,%00000111
 356  8990 CD B1 99     	call Cls
 357  8993
 358  8993 CD C7 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 359  8996
 360  8996              ; INICIALIZACIÓN.
 361  8996
 362  8996 CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 363  8999
 364  8999 CD 41 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 365  899C
 366  899C CD 07 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 367  899F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 368  899F CD 1D 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 369  89A2              ;													     ; _ malotes antes de guardar ninguna foto.
 370  89A2              ; ----------
 371  89A2
 372  89A2 CD 77 8D     	call Restore_entidad
 373  89A5
 374  89A5 21 32 89     	ld hl,Numero_parcial_de_entidades
 375  89A8 46           	ld b,(hl)
 376  89A9 04           	inc b
 377  89AA 05           	dec b
 378  89AB 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 379  89AD
 380  89AD              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 381  89AD              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 382  89AD              ;	Pintamos el resto de entidades:
 383  89AD
 384  89AD              ;	INICIA ENTIDADES !!!!!
 385  89AD
 386  89AD C5           1 push bc  												; Guardo el contador de entidades.
 387  89AE
 388  89AE CD AE 8B     	call Inicia_entidad
 389  89B1
 390  89B1 C1           	pop bc
 391  89B2 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 392  89B4
 393  89B4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 394  89B4              ; (Esto se dá cuando se inicia una nueva oleada).
 395  89B4
 396  89B4 3A 28 89     	ld a,(Ctrl_1)
 397  89B7 CB 5F        	bit 3,a
 398  89B9 20 18        	jr nz,5F											; Loop
 399  89BB
 400  89BB              ; 	INICIA AMADEUS !!!!!
 401  89BB
 402  89BB CD 9E 8D     3 call Restore_Amadeus
 403  89BE CD F4 8C     	call Inicia_Puntero_objeto
 404  89C1 CD A4 93     	call Draw
 405  89C4 CD A0 7F     	call Guarda_foto_registros
 406  89C7 11 9E 85     	ld de,Amadeus_db
 407  89CA CD B0 8D     	call Store_Amadeus
 408  89CD
 409  89CD              ; 	INICIA DISPAROS !!!!!
 410  89CD
 411  89CD CD 7F 8C     	call Inicia_Puntero_Disparo_Entidades
 412  89D0 CD 86 8C     	call Inicia_Puntero_Disparo_Amadeus
 413  89D3
 414  89D3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 415  89D3
 416  89D3 CD 07 8C     5 call Inicia_punteros_de_cajas
 417  89D6 CD 77 8D     	call Restore_entidad
 418  89D9
 419  89D9 3A 28 89     	ld a,(Ctrl_1)
 420  89DC CB 5F        	bit 3,a
 421  89DE 28 0A        	jr z,6F
 422  89E0
 423  89E0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 424  89E0
 425  89E0 21 28 89     	ld hl,Ctrl_1
 426  89E3 CB 9E        	res 3,(hl)
 427  89E5 CD A6 8C     	call Calcula_numero_de_malotes
 428  89E8 18 09        	jr Main
 429  89EA
 430  89EA              ; ----------
 431  89EA
 432  89EA 3A 32 89     6 ld a,(Numero_parcial_de_entidades)
 433  89ED 32 34 89     	ld (Numero_de_malotes),a
 434  89F0
 435  89F0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 436  89F0              ; _ tenemos calculado (Numero_de_malotes).
 437  89F0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 438  89F0              ; _ para situarnos en el siguiente album.
 439  89F0
 440  89F0 CD 4E 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 441  89F3
 442  89F3              ; ------------------------------------
 443  89F3
 444  89F3              Main
 445  89F3
 446  89F3              ;
 447  89F3              ;	3/8/23
 448  89F3
 449  89F3 FB           	ei
 450  89F4
 451  89F4 3A 77 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 452  89F7 47           	ld b,a
 453  89F8 3A 74 89     	ld a,(Contador_de_frames)
 454  89FB B8           	cp b
 455  89FC 20 18        	jr nz,13F
 456  89FE
 457  89FE 3A 32 89     	ld a,(Numero_parcial_de_entidades)
 458  8A01 47           	ld b,a
 459  8A02 3A 33 89     	ld a,(Entidades_en_curso)
 460  8A05 B8           	cp b
 461  8A06 28 0E        	jr z,13F
 462  8A08 30 0C        	jr nc,13F
 463  8A0A
 464  8A0A 3C           	inc a
 465  8A0B 32 33 89     	ld (Entidades_en_curso),a
 466  8A0E
 467  8A0E 3A 77 89     	ld a,(Clock_Entidades_en_curso)
 468  8A11
 469  8A11              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 470  8A11              ;! _ IMPREDECIBLE !!!!
 471  8A11
 472  8A11 C6 64        	add 100
 473  8A13 32 77 89     	ld (Clock_Entidades_en_curso),a
 474  8A16
 475  8A16              ; Habilita disparos.
 476  8A16
 477  8A16 21 79 89     13 ld hl,Disparo_Amadeus
 478  8A19 11 7B 89     	ld de,CLOCK_repone_disparo_Amadeus
 479  8A1C CD 75 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 480  8A1F
 481  8A1F 21 7C 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 482  8A22 11 7E 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 483  8A25 CD 75 9D     	call Habilita_disparos
 484  8A28
 485  8A28              ; COLISIONES.
 486  8A28
 487  8A28 CD 86 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 488  8A2B
 489  8A2B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 490  8A2B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 491  8A2B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 492  8A2B
 493  8A2B AF           	xor a
 494  8A2C 32 66 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 495  8A2F
 496  8A2F CD 07 8C     	call Inicia_punteros_de_cajas
 497  8A32 CD 77 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 498  8A35              ; 														; _ en DRAW.
 499  8A35 3A E5 88     	ld a,(Filas)
 500  8A38 A7           	and a
 501  8A39 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 502  8A3B CD 89 8D     	call Incrementa_punteros_de_cajas
 503  8A3E 18 F2        	jr 12B
 504  8A40
 505  8A40              ; ---------------------------------------------------------------------------------------
 506  8A40
 507  8A40 3A 32 89     10 ld a,(Numero_parcial_de_entidades)
 508  8A43 47               ld b,a
 509  8A44 A7           	and a
 510  8A45 20 14        	jr nz,11F
 511  8A47
 512  8A47 21 28 89     	ld hl,Ctrl_1
 513  8A4A CB 66        	bit 4,(hl)
 514  8A4C C2 D8 8A     	jp nz,16F
 515  8A4F
 516  8A4F 21 28 89     	ld hl,Ctrl_1
 517  8A52 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 518  8A54
 519  8A54 3A 74 89     	ld a,(Contador_de_frames)
 520  8A57 3C           	inc a
 521  8A58 32 78 89     	ld (Activa_recarga_cajas),a
 522  8A5B
 523  8A5B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 524  8A5B
 525  8A5B 3A 33 89     11 ld a,(Entidades_en_curso)
 526  8A5E A7           	and a
 527  8A5F CA D8 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 528  8A62 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 529  8A63
 530  8A63              ; Código que ejecutamos con cada entidad:
 531  8A63              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 532  8A63
 533  8A63 C5           15 push bc 												; Nº de entidades en curso.
 534  8A64
 535  8A64              ; Impacto ???
 536  8A64
 537  8A64 3A FE 88     	ld a,(Impacto)
 538  8A67 A7           	and a
 539  8A68 28 2D        	jr z,8F
 540  8A6A
 541  8A6A              ; Hay Impacto en esta entidad.
 542  8A6A
 543  8A6A 21 76 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 544  8A6D 35           	dec (hl)
 545  8A6E 20 62        	jr nz,17F
 546  8A70
 547  8A70              ;! Velocidad de la animación de la explosión.
 548  8A70
 549  8A70 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 550  8A72              ;														; _,(velocidad de la explosión).
 551  8A72 CD BE 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 552  8A75
 553  8A75              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 554  8A75
 555  8A75 3A 26 89     	ld a,(Ctrl_2)
 556  8A78 CB 4F        	bit 1,a
 557  8A7A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 558  8A7C
 559  8A7C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 560  8A7C
 561  8A7C 3A ED 88     	ld a,(CTRL_DESPLZ)
 562  8A7F A7           	and a
 563  8A80 20 08        	jr nz,18F
 564  8A82
 565  8A82 21 84 84     	ld hl,Indice_Explosion_2x2-2
 566  8A85 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 567  8A88 18 06        	jr 19F
 568  8A8A
 569  8A8A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 570  8A8D 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 571  8A90
 572  8A90 21 26 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 573  8A93 CB CE        	set 1,(hl)
 574  8A95 18 22        	jr 7F
 575  8A97
 576  8A97              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 577  8A97              ; _con las coordenadas de la entidad almacenada en DRAW.
 578  8A97
 579  8A97 3A 28 89     8 ld a,(Ctrl_1)
 580  8A9A CB 57        	bit 2,a
 581  8A9C 28 1B        	jr z,7F
 582  8A9E
 583  8A9E 2A 69 89     	ld hl,(Coordenadas_disparo_certero)
 584  8AA1 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 585  8AA2              ;														; E contiene la coordenada_X del disparo.
 586  8AA2 2A EB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 587  8AA5              ;														; H FILA, (Coordenada_y de la entidad).
 588  8AA5 A7           	and a
 589  8AA6 ED 52        	sbc hl,de
 590  8AA8
 591  8AA8 CD BD 92     	call Determina_resultado_comparativa
 592  8AAB
 593  8AAB 78           	ld a,b
 594  8AAC A7           	and a
 595  8AAD 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 596  8AAF
 597  8AAF              ; ----- ----- -----
 598  8AAF
 599  8AAF 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 600  8AB1 32 FE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 601  8AB4
 602  8AB4 21 28 89     	ld hl,Ctrl_1
 603  8AB7 CB 96        	res 2,(hl)
 604  8AB9
 605  8AB9 CD 30 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 606  8ABC
 607  8ABC 3A 13 89     	ld a,(Ctrl_0)
 608  8ABF CB 67        	bit 4,a
 609  8AC1 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 610  8AC3
 611  8AC3              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 612  8AC3              ; [[[
 613  8AC3 CD 12 8E     	call Detecta_disparo_entidad
 614  8AC6              ; ]]]
 615  8AC6 CD CE 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 616  8AC9
 617  8AC9 21 13 89     	ld hl,Ctrl_0
 618  8ACC CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 619  8ACE AF           	xor a
 620  8ACF 32 14 89     	ld (Obj_dibujado),a
 621  8AD2
 622  8AD2 CD 3C 8D     17 call Store_Restore_cajas
 623  8AD5
 624  8AD5 C1           	pop bc
 625  8AD6 10 8B        	djnz 15B
 626  8AD8
 627  8AD8              ; ------------------------------------
 628  8AD8
 629  8AD8              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 630  8AD8              ; Hemos gestionado todas las unidades.
 631  8AD8              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 632  8AD8
 633  8AD8              ;	ld hl,Ctrl_1
 634  8AD8              ;	res 2,(hl)
 635  8AD8
 636  8AD8              ; ------------------------------------
 637  8AD8
 638  8AD8              ; Tras la gestión de las entidades, ... AMADEUS.
 639  8AD8
 640  8AD8 CD 9E 8D     16 call Restore_Amadeus
 641  8ADB
 642  8ADB              ;! Activa/desactiva impacto con Amadeus.
 643  8ADB
 644  8ADB 3A FE 88     	ld a,(Impacto)
 645  8ADE A7           	and a
 646  8ADF 20 FE        	jr nz,$
 647  8AE1
 648  8AE1 CD 8F 8B     	call Mov_Amadeus
 649  8AE4
 650  8AE4 3A 13 89     	ld a,(Ctrl_0)
 651  8AE7 CB 67        	bit 4,a
 652  8AE9 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 653  8AEB
 654  8AEB CD CE 8B     	call Guarda_foto_entidad_a_pintar
 655  8AEE
 656  8AEE 21 13 89     14 ld hl,Ctrl_0
 657  8AF1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 658  8AF3
 659  8AF3 AF           	xor a
 660  8AF4 32 14 89     	ld (Obj_dibujado),a
 661  8AF7
 662  8AF7 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 663  8AFA CD B0 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 664  8AFD
 665  8AFD              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 666  8AFD
 667  8AFD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 668  8AFD
 669  8AFD              ;	call Calcula_numero_de_disparotes
 670  8AFD
 671  8AFD CD 4E 8C      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 672  8B00              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 673  8B00              ;														; _ interrupción.
 674  8B00 3E 04        	ld a,4
 675  8B02 D3 FE        	out ($fe),a
 676  8B04
 677  8B04              ; ----------------------------------------
 678  8B04
 679  8B04 3A 28 89     	ld a,(Ctrl_1) 										; Existe Loop?
 680  8B07 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 681  8B09 CA F3 89     	jp z,Main
 682  8B0C
 683  8B0C              ; -----
 684  8B0C              ;	(((
 685  8B0C
 686  8B0C 3A 74 89     	ld a,(Contador_de_frames)
 687  8B0F 47           	ld b,a
 688  8B10 3A 78 89     	ld a,(Activa_recarga_cajas)
 689  8B13 B8           	cp b
 690  8B14 28 08        	jr z,20F
 691  8B16
 692  8B16 21 28 89     	ld hl,Ctrl_1
 693  8B19 CB E6        	set 4,(hl)
 694  8B1B C3 F3 89     	jp Main
 695  8B1E
 696  8B1E 21 28 89     20 ld hl,Ctrl_1
 697  8B21 CB A6        	res 4,(hl)
 698  8B23 F3           	di
 699  8B24
 700  8B24 3A 74 89     	ld a,(Contador_de_frames)
 701  8B27
 702  8B27              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 703  8B27              ;! _ IMPREDECIBLE !!!!
 704  8B27
 705  8B27 C6 0A        	add 10
 706  8B29 32 77 89     	ld (Clock_Entidades_en_curso),a
 707  8B2C
 708  8B2C C3 99 89     	jp 4B
 709  8B2F
 710  8B2F C9           	ret
 711  8B30
 712  8B30              ; --------------------------------------------------------------------------------------------------------------
 713  8B30              ;
 714  8B30              ;	27/05/23
 715  8B30
 716  8B30              Mov_obj
 717  8B30
 718  8B30 3A 26 89     	ld a,(Ctrl_2)
 719  8B33 CB 4F        	bit 1,a
 720  8B35 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 721  8B37
 722  8B37              ; Explosión:
 723  8B37
 724  8B37 3A 27 89     	ld a,(Frames_explosion)
 725  8B3A A7           	and a
 726  8B3B 20 11        	jr nz,4F
 727  8B3D
 728  8B3D              ; Una alimaña menos!!!!!!!!!1
 729  8B3D
 730  8B3D CD B9 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 731  8B40 21 32 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 732  8B43 35           	dec (hl)
 733  8B44 21 33 89     	ld hl,Entidades_en_curso
 734  8B47 35           	dec (hl)
 735  8B48 21 31 89     	ld hl,Numero_de_entidades
 736  8B4B 35           	dec (hl)
 737  8B4C 18 40        	jr 3F
 738  8B4E
 739  8B4E              ; -----
 740  8B4E
 741  8B4E              ;	`Movemos´ la explosión.
 742  8B4E
 743  8B4E 2A F3 88     4 ld hl,(Puntero_DESPLZ_der)
 744  8B51 23           	inc hl
 745  8B52 23           	inc hl
 746  8B53 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 747  8B56 CD EE 8C     	call Extrae_address
 748  8B59 22 E9 88     	ld (Puntero_objeto),hl
 749  8B5C
 750  8B5C 21 27 89     	ld hl,Frames_explosion
 751  8B5F 35           	dec (hl)
 752  8B60
 753  8B60 CD BE 8B     	call Guarda_foto_entidad_a_borrar
 754  8B63 18 29        	jr 3F
 755  8B65
 756  8B65 AF           2 xor a
 757  8B66 32 14 89     	ld (Obj_dibujado),a
 758  8B69 32 13 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 759  8B6C              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 760  8B6C              ; 														; _de la entidad.
 761  8B6C CD D8 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 762  8B6F              ;														; Obj_dibujado="0".
 763  8B6F              ; Movemos Entidades malignas.
 764  8B6F
 765  8B6F              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 766  8B6F              ;	and a 												; _a movernos. (Limitador_de_entidades).
 767  8B6F              ;	ret z
 768  8B6F
 769  8B6F CD 20 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 770  8B72
 771  8B72 3A 13 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 772  8B75 CB 67        	bit 4,a
 773  8B77 C8           	ret z
 774  8B78
 775  8B78              ; Ha habido desplazamiento de la entidad maligna.
 776  8B78              ; Ha llegado a zona de AMADEUS ???
 777  8B78
 778  8B78 3A EC 88     	ld a,(Coordenada_y)
 779  8B7B FE 14        	cp $14
 780  8B7D D4 4B 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 781  8B80              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 782  8B80              ; ---------
 783  8B80
 784  8B80 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 785  8B82 32 14 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 786  8B85 CD D8 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 787  8B88 CD EF 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 788  8B8B CD BE 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 789  8B8E C9           3 ret													; _de la misma.
 790  8B8F
 791  8B8F              ; --------------------------------------------------------------------------------------------------------------
 792  8B8F              ;
 793  8B8F              ;	29/1/23
 794  8B8F
 795  8B8F              Mov_Amadeus
 796  8B8F
 797  8B8F AF           	xor a
 798  8B90 32 14 89     	ld (Obj_dibujado),a
 799  8B93 CD D8 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 800  8B96              ;														; Obj_dibujado="0".
 801  8B96              ; Movemos Amadeus.
 802  8B96
 803  8B96 CD DB 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 804  8B99 3A 13 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 805  8B9C CB 67        	bit 4,a
 806  8B9E C8           	ret z
 807  8B9F
 808  8B9F              ; ---------
 809  8B9F
 810  8B9F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 811  8BA1 32 14 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 812  8BA4 CD D8 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 813  8BA7 CD EF 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 814  8BAA CD BE 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 815  8BAD C9           	ret													; _de la nave.
 816  8BAE
 817  8BAE              ; -----------------------------------------------------------------------------------
 818  8BAE
 819  8BAE CD F4 8C     Inicia_entidad	call Inicia_Puntero_objeto
 820  8BB1 CD C5 99     	call Recompone_posicion_inicio
 821  8BB4 CD A4 93     	call Draw
 822  8BB7 CD A0 7F     	call Guarda_foto_registros
 823  8BBA CD 3C 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 824  8BBD C9           	ret
 825  8BBE
 826  8BBE              ; --------------------------------------------------------------------------------------------------------------
 827  8BBE              ;
 828  8BBE              ;	31/8/23
 829  8BBE              ;
 830  8BBE              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 831  8BBE
 832  8BBE              Guarda_foto_entidad_a_borrar
 833  8BBE
 834  8BBE CD 88 96     	call Prepara_draw
 835  8BC1 CD B8 95     	call calcula_CColumnass
 836  8BC4 CD EF 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 837  8BC7 CD 4E 96     	call Define_rutina_de_impresion
 838  8BCA CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 839  8BCD C9           	ret
 840  8BCE
 841  8BCE              ; --------------------------------------------------------------------------------------------------------------
 842  8BCE              ;
 843  8BCE              ;	31/08/23
 844  8BCE              ;
 845  8BCE              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8BCE              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8BCE
 848  8BCE              Guarda_foto_entidad_a_pintar
 849  8BCE
 850  8BCE CD FB 8B     	call Repone_pintar
 851  8BD1 CD A4 93     	call Draw
 852  8BD4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 853  8BD7 C9           	ret
 854  8BD8
 855  8BD8              ; --------------------------------------------------------------------------------------------------------------
 856  8BD8              ;
 857  8BD8              ;
 858  8BD8
 859  8BD8 21 E5 88     Prepara_var_pintado_borrado	ld hl,Filas
 860  8BDB 3A 14 89     	ld a,(Obj_dibujado)
 861  8BDE A7           	and a
 862  8BDF 28 05        	jr z,1F
 863  8BE1 11 09 89     	ld de,Variables_de_pintado
 864  8BE4 18 03        	jr 2F
 865  8BE6 11 FF 88     1 ld de,Variables_de_borrado
 866  8BE9 01 08 00     2 ld bc,8
 867  8BEC ED B0        	ldir
 868  8BEE C9           	ret
 869  8BEF
 870  8BEF              ; --------------------------------------------------------------------------------------------------------------
 871  8BEF
 872  8BEF 21 FF 88     Repone_borrar ld hl,Variables_de_borrado
 873  8BF2 11 E5 88     	ld de,Filas
 874  8BF5 01 08 00     	ld bc,8
 875  8BF8 ED B0        	ldir
 876  8BFA C9           	ret
 877  8BFB
 878  8BFB 21 09 89     Repone_pintar ld hl,Variables_de_pintado
 879  8BFE 11 E5 88     	ld de,Filas
 880  8C01 01 08 00     	ld bc,8
 881  8C04 ED B0        	ldir
 882  8C06 C9           	ret
 883  8C07
 884  8C07              ; *************************************************************************************************************************************************************
 885  8C07              ;
 886  8C07              ; 8/1/23
 887  8C07              ;
 888  8C07              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 889  8C07              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 890  8C07              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 891  8C07
 892  8C07              ; Destruye HL y DE !!!!!
 893  8C07
 894  8C07              Inicia_punteros_de_cajas
 895  8C07
 896  8C07 21 8C 85     	ld hl,Indice_de_cajas
 897  8C0A CD EE 8C         call Extrae_address
 898  8C0D 22 2B 89         ld (Puntero_store_caja),hl
 899  8C10 21 8E 85     	ld hl,Indice_de_cajas+2
 900  8C13 22 2F 89     	ld (Indice_restore_caja),hl
 901  8C16 CD EE 8C     	call Extrae_address
 902  8C19 22 2D 89     	ld (Puntero_restore_caja),hl
 903  8C1C C9               ret
 904  8C1D
 905  8C1D              ; ---------------------------------------------------------------
 906  8C1D              ;
 907  8C1D              ;	9/8/23
 908  8C1D              ;
 909  8C1D              ;	Inicialización y gestión de álbumes de fotos y cajas.
 910  8C1D
 911  8C1D              Inicia_punteros_de_albumes_y_malotes
 912  8C1D
 913  8C1D 21 EC 84     	ld hl,Indice_album_de_fotos
 914  8C20 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
 915  8C23 CD EE 8C     	call Extrae_address
 916  8C26 22 3F 89     	ld (Stack_snapshot),hl
 917  8C29
 918  8C29 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 919  8C2C 22 57 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 920  8C2F CD EE 8C     	call Extrae_address
 921  8C32 22 41 89     	ld (Stack_snapshot_disparos),hl
 922  8C35
 923  8C35 21 FC 84     	ld hl,Indice_End_Snapshot
 924  8C38 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
 925  8C3B CD EE 8C     	call Extrae_address
 926  8C3E 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
 927  8C41
 928  8C41 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 929  8C44 22 5B 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 930  8C47 CD EE 8C     	call Extrae_address
 931  8C4A 22 5F 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 932  8C4D
 933  8C4D C9           	ret
 934  8C4E
 935  8C4E              ;	2/9/23
 936  8C4E
 937  8C4E              Avanza_puntero_de_album_de_fotos_y_malotes
 938  8C4E
 939  8C4E              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 940  8C4E
 941  8C4E              ; Estamos en el último álbum del índice???.
 942  8C4E
 943  8C4E 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
 944  8C51 01 F2 84     	ld bc,Indice_album_de_fotos+6
 945  8C54 A7           	and a
 946  8C55 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 947  8C57 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 948  8C59
 949  8C59 21 28 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 950  8C5C CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 951  8C5E 76           	halt
 952  8C5F C9           	ret
 953  8C60
 954  8C60 F3           1 di
 955  8C61 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
 956  8C64 23           	inc hl
 957  8C65 23           	inc hl
 958  8C66 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
 959  8C69 CD EE 8C     	call Extrae_address
 960  8C6C 22 3F 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 961  8C6F
 962  8C6F 2A 59 89     	ld hl,(Puntero_indice_End_Snapshot)
 963  8C72 23           	inc hl
 964  8C73 23           	inc hl
 965  8C74 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
 966  8C77 CD EE 8C     	call Extrae_address
 967  8C7A 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
 968  8C7D FB           	ei
 969  8C7E
 970  8C7E C9           	ret
 971  8C7F
 972  8C7F              ; *************************************************************************************************************************************************************
 973  8C7F              ;
 974  8C7F              ; 8/1/23
 975  8C7F              ;
 976  8C7F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 977  8C7F
 978  8C7F 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 979  8C82 22 62 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 980  8C85 C9           	ret
 981  8C86 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 982  8C89 22 64 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 983  8C8C C9           	ret
 984  8C8D
 985  8C8D              ; -------------------------------------------------------------------------------------------------------------
 986  8C8D              ;
 987  8C8D              ; 4/9/23
 988  8C8D              ;
 989  8C8D
 990  8C8D              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 991  8C8D
 992  8C8D 2A 47 89     Limpia_album_Amadeus ld hl,(End_Snapshot_Amadeus)
 993  8C90 01 A0 72     	ld bc,Album_de_fotos_Amadeus
 994  8C93 A7           	and a
 995  8C94 ED 42        	sbc hl,bc
 996  8C96
 997  8C96 45           	ld b,l
 998  8C97
 999  8C97 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1000  8C9A 36 00        1 ld (hl),0
1001  8C9C 23           	inc hl
1002  8C9D 10 FB        	djnz 1B
1003  8C9F
1004  8C9F              ; Restauramos (End_Snapshot_Amadeus).
1005  8C9F
1006  8C9F 21 00 00     	ld hl,0
1007  8CA2 22 47 89     	ld (End_Snapshot_Amadeus),hl
1008  8CA5
1009  8CA5 C9           	ret
1010  8CA6
1011  8CA6              ; -------------------------------------------------------------------------------------------------------------
1012  8CA6              ;
1013  8CA6              ; 4/9/23
1014  8CA6              ;
1015  8CA6
1016  8CA6              Calcula_numero_de_malotes
1017  8CA6
1018  8CA6 21 00 70     	ld hl,Album_de_fotos
1019  8CA9 EB           	ex de,hl
1020  8CAA 2A 43 89     	ld hl,(End_Snapshot)
1021  8CAD
1022  8CAD 06 00        4 ld b,0
1023  8CAF 7D           	ld a,l
1024  8CB0 93           	sub e
1025  8CB1 28 07        	jr z,1F
1026  8CB3
1027  8CB3              ; Nº de malotes no es "0".
1028  8CB3
1029  8CB3 D6 06        2 sub 6
1030  8CB5 04           	inc b
1031  8CB6 A7           	and a
1032  8CB7 20 FA        	jr nz,2B
1033  8CB9 78           	ld a,b
1034  8CBA
1035  8CBA 32 34 89     1 ld (Numero_de_malotes),a
1036  8CBD C9           	ret
1037  8CBE
1038  8CBE              ; -------------------------------------------------------------------------------------------------------------
1039  8CBE              ;
1040  8CBE              ; 4/9/23
1041  8CBE              ;
1042  8CBE
1043  8CBE              Calcula_malotes_Amadeus
1044  8CBE
1045  8CBE 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1046  8CC1 EB           	ex de,hl
1047  8CC2 2A 47 89     	ld hl,(End_Snapshot_Amadeus)
1048  8CC5
1049  8CC5 06 00        	ld b,0
1050  8CC7 7D           	ld a,l
1051  8CC8 93           	sub e
1052  8CC9 28 07        	jr z,1F
1053  8CCB
1054  8CCB              ; Nº de malotes no es "0".
1055  8CCB
1056  8CCB D6 06        2 sub 6
1057  8CCD 04           	inc b
1058  8CCE A7           	and a
1059  8CCF 20 FA        	jr nz,2B
1060  8CD1 78           	ld a,b
1061  8CD2
1062  8CD2 32 34 89     1 ld (Numero_de_malotes),a
1063  8CD5 C9           	ret
1064  8CD6
1065  8CD6              ; -------------------------------------------------------------------------------------------------------------
1066  8CD6              ;
1067  8CD6              ; 28/2/23
1068  8CD6              ;
1069  8CD6
1070  8CD6              Calcula_numero_de_disparotes
1071  8CD6
1072  8CD6 21 50 71     	ld hl,Album_de_fotos_disparos
1073  8CD9 EB           	ex de,hl
1074  8CDA 2A 5F 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1075  8CDD
1076  8CDD 06 00        	ld b,0
1077  8CDF 7D           	ld a,l
1078  8CE0 93           	sub e
1079  8CE1 28 07        	jr z,1F
1080  8CE3
1081  8CE3              ; Nº de malotes no es "0".
1082  8CE3
1083  8CE3 D6 06        2 sub 6
1084  8CE5 04           	inc b
1085  8CE6 A7           	and a
1086  8CE7 20 FA        	jr nz,2B
1087  8CE9 78           	ld a,b
1088  8CEA
1089  8CEA 32 61 89     1 ld (Numero_de_disparotes),a
1090  8CED C9           	ret
1091  8CEE
1092  8CEE              ; *************************************************************************************************************************************************************
1093  8CEE              ;
1094  8CEE              ; 20/10/22
1095  8CEE              ;
1096  8CEE              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1097  8CEE              ;
1098  8CEE              ; Destruye el puntero y DE !!!!!
1099  8CEE
1100  8CEE 5E           Extrae_address ld e,(hl)
1101  8CEF 23           	inc hl
1102  8CF0 56           	ld d,(hl)
1103  8CF1 2B           	dec hl
1104  8CF2 EB           	ex de,hl
1105  8CF3 C9           	ret
1106  8CF4
1107  8CF4              ; *************************************************************************************************************************************************************
1108  8CF4              ;
1109  8CF4              ;	7/2/23
1110  8CF4              ;
1111  8CF4              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1112  8CF4              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1113  8CF4              ;
1114  8CF4              ;   Destruye HL y BC !!!!!,
1115  8CF4              ;
1116  8CF4              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1117  8CF4              ;					"0" ..... Izquierda.
1118  8CF4
1119  8CF4              Inicia_Puntero_objeto
1120  8CF4
1121  8CF4 3A F9 88     	ld a,(Cuad_objeto)
1122  8CF7 E6 01        	and 1
1123  8CF9 F5           	push af
1124  8CFA CC 18 8D     	call z,Inicia_puntero_objeto_izq
1125  8CFD F1           	pop af
1126  8CFE 28 2B        	jr z,1F
1127  8D00 CD 05 8D     	call Inicia_puntero_objeto_der
1128  8D03 18 26        	jr 1F
1129  8D05
1130  8D05              ; Arrancamos desde la parte izquierda de la pantalla.
1131  8D05              ; Iniciamos (Indice_Sprite_der).
1132  8D05
1133  8D05 2A EF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1134  8D08 22 F3 88     	ld (Puntero_DESPLZ_der),hl
1135  8D0B CD EE 8C     	call Extrae_address
1136  8D0E 22 E9 88     	ld (Puntero_objeto),hl
1137  8D11
1138  8D11 2A F1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1139  8D14 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
1140  8D17 C9           	ret
1141  8D18
1142  8D18              ; Arrancamos desde la parte derecha de la pantalla.
1143  8D18              ; Iniciamos (Indice_Sprite_izq).
1144  8D18
1145  8D18 2A F1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1146  8D1B 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
1147  8D1E CD EE 8C     	call Extrae_address
1148  8D21 22 E9 88     	ld (Puntero_objeto),hl
1149  8D24
1150  8D24 2A EF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1151  8D27 22 F3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1152  8D2A C9           	ret
1153  8D2B
1154  8D2B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1155  8D2B
1156  8D2B 21 40 83     1 ld hl,Amadeus
1157  8D2E ED 4B E9 88  	ld bc,(Puntero_objeto)
1158  8D32 B7 ED 42     	sub hl,bc
1159  8D35 C0           	ret nz
1160  8D36 21 13 89     	ld hl,Ctrl_0
1161  8D39 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1162  8D3B C9           	ret 												; _de nuestra nave en los extremos.
1163  8D3C
1164  8D3C              ; *************************************************************************************************************************************************************
1165  8D3C              ;
1166  8D3C              ;	14/5/23
1167  8D3C              ;
1168  8D3C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1169  8D3C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1170  8D3C
1171  8D3C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1172  8D3C              ;	_de la 2ª y 3ª entidad respectivamente.
1173  8D3C
1174  8D3C              Store_Restore_cajas
1175  8D3C
1176  8D3C E5           	push hl
1177  8D3D D5           	push de
1178  8D3E C5            	push bc
1179  8D3F
1180  8D3F              ;	STORE !!!!!
1181  8D3F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1182  8D3F
1183  8D3F 21 E5 88     	ld hl,Filas
1184  8D42 ED 5B 2B 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1185  8D46 01 43 00     	ld bc,67
1186  8D49 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1187  8D4B
1188  8D4B              ; 	Entidad_sospechosa. 20/4/23
1189  8D4B
1190  8D4B 3A FE 88     	ld a,(Impacto)
1191  8D4E A7           	and a
1192  8D4F 28 0C        	jr z,1F
1193  8D51
1194  8D51 2A 2B 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1195  8D54 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1196  8D57 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1197  8D58 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1198  8D5A 22 67 89     	ld (Entidad_sospechosa_de_colision),hl
1199  8D5D
1200  8D5D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1201  8D5D
1202  8D5D 2A 2D 89     1 ld hl,(Puntero_restore_caja)
1203  8D60 7E           	ld a,(hl)
1204  8D61 A7           	and a
1205  8D62 F5           	push af
1206  8D63 28 08        	jr z,2F
1207  8D65
1208  8D65 11 E5 88     	ld de,Filas
1209  8D68 01 43 00     	ld bc,67
1210  8D6B ED B0        	ldir
1211  8D6D
1212  8D6D CD 89 8D     2 call Incrementa_punteros_de_cajas
1213  8D70 F1           	pop af
1214  8D71 28 EA        	jr z,1B
1215  8D73
1216  8D73 C1           	pop bc
1217  8D74 D1           	pop de
1218  8D75 E1           	pop hl
1219  8D76
1220  8D76 C9           	ret
1221  8D77
1222  8D77              ; **************************************************************************************************
1223  8D77              ;
1224  8D77              ;	12/05/23
1225  8D77              ;
1226  8D77              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1227  8D77
1228  8D77 E5           Restore_entidad push hl
1229  8D78 D5           	push de
1230  8D79 C5            	push bc
1231  8D7A
1232  8D7A 2A 2B 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1233  8D7D 11 E5 88     	ld de,Filas
1234  8D80 01 43 00     	ld bc,67
1235  8D83 ED B0        	ldir
1236  8D85
1237  8D85 C1           	pop bc
1238  8D86 D1           	pop de
1239  8D87 E1           	pop hl
1240  8D88 C9           	ret
1241  8D89
1242  8D89
1243  8D89              ; **************************************************************************************************
1244  8D89              ;
1245  8D89              ;	08/05/23
1246  8D89              ;
1247  8D89              ;	Incrementamos los dos punteros de entidades. (+1).
1248  8D89
1249  8D89 2A 2D 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1250  8D8C 22 2B 89     	ld (Puntero_store_caja),hl
1251  8D8F 2A 2F 89     	ld hl,(Indice_restore_caja)
1252  8D92 23           	inc hl
1253  8D93 23           	inc hl
1254  8D94 22 2F 89     	ld (Indice_restore_caja),hl
1255  8D97 CD EE 8C         call Extrae_address
1256  8D9A 22 2D 89         ld (Puntero_restore_caja),hl
1257  8D9D C9               ret
1258  8D9E
1259  8D9E              ; **************************************************************************************************
1260  8D9E              ;
1261  8D9E              ;	25/01/23
1262  8D9E              ;
1263  8D9E              ;	Restore_Amadeus
1264  8D9E              ;
1265  8D9E              ;	Cargamos en DRAW los parámetros de Amadeus.
1266  8D9E              ;
1267  8D9E
1268  8D9E E5           Restore_Amadeus	push hl
1269  8D9F D5           	push de
1270  8DA0 C5            	push bc
1271  8DA1 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1272  8DA4 11 E5 88     	ld de,Filas
1273  8DA7 01 43 00     	ld bc,67
1274  8DAA ED B0        	ldir
1275  8DAC C1           	pop bc
1276  8DAD D1           	pop de
1277  8DAE E1           	pop hl
1278  8DAF C9           	ret
1279  8DB0
1280  8DB0              ; *************************************************************************************************************************************************************
1281  8DB0              ;
1282  8DB0              ;	29/04/23
1283  8DB0              ;
1284  8DB0              ;	Store_Amadeus
1285  8DB0              ;
1286  8DB0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1287  8DB0              ;
1288  8DB0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1289  8DB0              ;
1290  8DB0              ;	DESTRUYE: HL y BC y DE.
1291  8DB0
1292  8DB0 21 E5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1293  8DB3 01 43 00     	ld bc,67
1294  8DB6 ED B0        	ldir
1295  8DB8 C9           	ret
1296  8DB9
1297  8DB9              ; -----------------------------------------------------------
1298  8DB9              ;
1299  8DB9              ;	27/04/23
1300  8DB9              ;
1301  8DB9              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1302  8DB9              ;
1303  8DB9              ;	Destruye: HL,BC,DE,A
1304  8DB9
1305  8DB9 21 E5 88     Borra_datos_entidad ld hl,Filas
1306  8DBC 01 42 00     	ld bc,66
1307  8DBF AF           	xor a
1308  8DC0 77           	ld (hl),a
1309  8DC1 11 E6 88     	ld de,Filas+1
1310  8DC4 ED B0        	ldir
1311  8DC6 C9           	ret
1312  8DC7
1313  8DC7              ; -----------------------------------------------------------
1314  8DC7
1315  8DC7              ; Teclado.
1316  8DC7
1317  8DC7 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1318  8DC9 DB FE        	in a,($fe)
1319  8DCB E6 01        	and $01
1320  8DCD 28 02        	jr z,1f
1321  8DCF 18 F6        	jr Pulsa_ENTER
1322  8DD1 C9           1 ret
1323  8DD2
1324  8DD2              ; **************************************************************************************************
1325  8DD2              ;
1326  8DD2              ; Temporización.
1327  8DD2
1328  8DD2              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1329  8DD2              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1330  8DD2              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1331  8DD2              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1332  8DD2
1333  8DD2              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1334  8DD2              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1335  8DD2              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1336  8DD2
1337  8DD2              ; A partir de $4f61 no hace falta DELAY.
1338  8DD2
1339  8DD2              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1340  8DD2
1341  8DD2 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1342  8DD5 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1343  8DD6 78           	LD A,B
1344  8DD7 A7           	AND A
1345  8DD8 20 FB        	JR NZ,wait
1346  8DDA C9           	RET
1347  8DDB
1348  8DDB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1349  8DDB              ;
1350  8DDB              ;	5/3/23
1351  8DDB              ;
1352  8DDB              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1353  8DDB
1354  8DDB              Movimiento_Amadeus
1355  8DDB
1356  8DDB              ; Disparo.
1357  8DDB
1358  8DDB 3A 79 89     	ld a,(Disparo_Amadeus)
1359  8DDE A7           	and a
1360  8DDF 20 02        	jr nz,1F
1361  8DE1 18 15        	jr 2F
1362  8DE3
1363  8DE3 3E F7        1 ld a,$f7													; "5" para disparar.
1364  8DE5 DB FE        	in a,($fe)
1365  8DE7 E6 10        	and $10
1366  8DE9
1367  8DE9 F5           	push af
1368  8DEA CC AE 8E     	call z,Genera_disparo
1369  8DED F1           	pop af
1370  8DEE 20 08        	jr nz,2F
1371  8DF0
1372  8DF0 3A 79 89     	ld a,(Disparo_Amadeus)
1373  8DF3 EE 01        	xor 1
1374  8DF5 32 79 89     	ld (Disparo_Amadeus),a
1375  8DF8
1376  8DF8 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1377  8DFA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1378  8DFC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1379  8DFE CC 7F 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1380  8E01 3E F7        	ld a,$f7
1381  8E03 DB FE        	in a,($fe)
1382  8E05 E6 01        	and $01
1383  8E07 C8           	ret z
1384  8E08
1385  8E08 3E F7        	ld a,$f7
1386  8E0A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1387  8E0C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1388  8E0E CC 61 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1389  8E11 C9           	ret
1390  8E12
1391  8E12              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1392  8E12              ;
1393  8E12              ;	Rutina provisional para que los malotes cagen balas.
1394  8E12
1395  8E12              Detecta_disparo_entidad
1396  8E12
1397  8E12 3A 7C 89     	ld a,(Disparo_entidad)
1398  8E15 A7           	and a
1399  8E16 C8           	ret z
1400  8E17
1401  8E17              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1402  8E17
1403  8E17              ;	ld a,$7f				; Detecta SPACE.
1404  8E17              ;	in a,($fe)
1405  8E17              ;	and 1
1406  8E17              ;	ret nz
1407  8E17
1408  8E17              ;	call Genera_disparo
1409  8E17 C9           	ret
1410  8E18
1411  8E18              ; ----------------------------------------------------------------------
1412  8E18              ;
1413  8E18              ;	11/8/23
1414  8E18
1415  8E18              Frame
1416  8E18
1417  8E18              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1418  8E18              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1419  8E18
1420  8E18              ; PINTAMOS.
1421  8E18
1422  8E18 ED 73 3D 89  	ld (Stack_3),sp
1423  8E1C
1424  8E1C              ; Guardamos registros y SP.
1425  8E1C
1426  8E1C 08           	ex af,af'
1427  8E1D F5           	push af	;af'
1428  8E1E D9           	exx
1429  8E1F E5           	push hl	;hl'
1430  8E20 D5           	push de	;de'
1431  8E21 C5           	push bc	;bc'
1432  8E22 D9           	exx
1433  8E23 E5           	push hl	;hl
1434  8E24 D5           	push de	;de
1435  8E25 C5           	push bc	;bc
1436  8E26 08           	ex af,af'
1437  8E27 F5           	push af	;af
1438  8E28 DD E5        	push ix
1439  8E2A FD E5        	push iy
1440  8E2C
1441  8E2C 3E 02        	ld a,2
1442  8E2E D3 FE            out ($fe),a											; Rojo.
1443  8E30
1444  8E30              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1445  8E30              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1446  8E30
1447  8E30 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
1448  8E33 01 EC 84     	ld bc,Indice_album_de_fotos
1449  8E36 A7           	and a
1450  8E37 ED 42        	sbc hl,bc
1451  8E39 28 57        	jr z,6F
1452  8E3B
1453  8E3B              ; $59,
1454  8E3B
1455  8E3B              ;	jr $
1456  8E3B
1457  8E3B CD A6 8C     	call Calcula_numero_de_malotes
1458  8E3E CD B2 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1459  8E41
1460  8E41 CD BE 8C     	call Calcula_malotes_Amadeus
1461  8E44 CD 34 97     	call Extrae_foto_Amadeus
1462  8E47 CD 8D 8C     	call Limpia_album_Amadeus
1463  8E4A
1464  8E4A              ;	call Extrae_foto_disparos
1465  8E4A 3E 01            ld a,1
1466  8E4C D3 FE            out ($fe),a											; Azul.
1467  8E4E
1468  8E4E              ; 	Gestiona albumes de fotos.
1469  8E4E
1470  8E4E              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1471  8E4E CD AD 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1472  8E51
1473  8E51              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1474  8E51
1475  8E51 3A 28 89     	ld a,(Ctrl_1)
1476  8E54 CB 6F        	bit 5,a
1477  8E56 20 24        	jr nz,1F
1478  8E58
1479  8E58              ; No hemos terminado de guardar el último FRAME.
1480  8E58
1481  8E58 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
1482  8E5B              ;	ld bc,Indice_album_de_fotos
1483  8E5B 2B           	dec hl
1484  8E5C 2B           	dec hl
1485  8E5D
1486  8E5D              ;	ld a,l
1487  8E5D              ;	sub c
1488  8E5D              ;	jr z,$
1489  8E5D
1490  8E5D 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
1491  8E60
1492  8E60 2A 59 89     	ld hl,(Puntero_indice_End_Snapshot)
1493  8E63 2B           	dec hl
1494  8E64 2B           	dec hl
1495  8E65 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
1496  8E68 CD EE 8C     	call Extrae_address
1497  8E6B 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
1498  8E6E
1499  8E6E CD EE 8C     	call Extrae_address
1500  8E71
1501  8E71              ; Esta vacío este album???
1502  8E71
1503  8E71 24           	inc h
1504  8E72 25           	dec h
1505  8E73 20 02        	jr nz,5F
1506  8E75
1507  8E75              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1508  8E75
1509  8E75 18 05        	jr 1F
1510  8E77
1511  8E77 22 3F 89     5 ld (Stack_snapshot),hl
1512  8E7A 18 09        	jr 2F
1513  8E7C
1514  8E7C              ; FRAME completo.
1515  8E7C
1516  8E7C 2A 55 89     1 ld hl,(Puntero_indice_album_de_fotos)
1517  8E7F CD EE 8C     	call Extrae_address
1518  8E82 22 3F 89     	ld (Stack_snapshot),hl
1519  8E85
1520  8E85              ;	En este punto:
1521  8E85
1522  8E85              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1523  8E85              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1524  8E85
1525  8E85              ; RELOJES.
1526  8E85
1527  8E85 21 74 89     2 ld hl,Contador_de_frames
1528  8E88 7E           	ld a,(hl)
1529  8E89 FE FF        	cp $ff
1530  8E8B 20 04        	jr nz,3F
1531  8E8D 34           	inc (hl)
1532  8E8E 21 75 89     	ld hl,Contador_de_frames_2
1533  8E91 34           3 inc (hl)											; 0 - 255
1534  8E92
1535  8E92 21 28 89     6 ld hl,Ctrl_1
1536  8E95 CB AE        	res 5,(hl)
1537  8E97
1538  8E97              ; Recuperamos registros y SP.
1539  8E97
1540  8E97 FD E1        	pop iy
1541  8E99 DD E1        	pop ix
1542  8E9B F1           	pop af
1543  8E9C C1           	pop bc
1544  8E9D D1           	pop de
1545  8E9E E1           	pop hl
1546  8E9F D9           	exx
1547  8EA0 C1           	pop bc
1548  8EA1 D1           	pop de
1549  8EA2 E1           	pop hl
1550  8EA3 08           	ex af,af'
1551  8EA4 F1           	pop af
1552  8EA5 08           	ex af,af'
1553  8EA6 D9           	exx
1554  8EA7
1555  8EA7 ED 7B 3D 89  	ld sp,(Stack_3)
1556  8EAB
1557  8EAB 18 FE        	jr $
1558  8EAD
1559  8EAD C9           	ret
1560  8EAE
1561  8EAE              ; ---------------------------------------------------------------
1562  8EAE
1563  8EAE              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EAE              ; ******************************************************************************************************************************************************************************************
   2+ 8EAE              ;
   3+ 8EAE              ;   21/07/23
   4+ 8EAE              ;
   5+ 8EAE              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EAE              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EAE              ;
   8+ 8EAE              ;
   9+ 8EAE              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EAE              ;
  11+ 8EAE              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EAE              ;               _ hacen las entidades hacia abajo.
  13+ 8EAE              ;
  14+ 8EAE              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EAE              ;
  16+ 8EAE              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EAE              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EAE              ;
  19+ 8EAE              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EAE              ;           _ la bala.
  21+ 8EAE              ;
  22+ 8EAE              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EAE              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EAE              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EAE              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EAE              ;           _ en el momento de generarse la bala)).
  27+ 8EAE
  28+ 8EAE              Genera_disparo
  29+ 8EAE
  30+ 8EAE              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EAE              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EAE              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EAE              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EAE              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EAE              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EAE              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EAE
  38+ 8EAE              ; Exclusiones:
  39+ 8EAE
  40+ 8EAE 3A FD 88         ld a,(Vel_down)
  41+ 8EB1 47               ld b,a
  42+ 8EB2 3A 73 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EB5 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB6 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EB7 3A 22 89         ld a,(Columnas)
  46+ 8EBA 47               ld b,a
  47+ 8EBB 3A E6 88         ld a,(Columns)
  48+ 8EBE B8               cp b
  49+ 8EBF C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EC0
  51+ 8EC0              ; ----- ----- -----
  52+ 8EC0
  53+ 8EC0 3A 13 89         ld a,(Ctrl_0)
  54+ 8EC3 CB 77            bit 6,a
  55+ 8EC5 20 06            jr nz,14F
  56+ 8EC7
  57+ 8EC7 3A EC 88         ld a,(Coordenada_y)
  58+ 8ECA FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ECC D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ECD
  61+ 8ECD 21 00 80     14 ld hl,Indice_disparo
  62+ 8ED0 3A ED 88         ld a,(CTRL_DESPLZ)
  63+ 8ED3 4F               ld c,a
  64+ 8ED4 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED6              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED6              ;                                            ""        ""       "f9", B="1"
  67+ 8ED6              ;                                            ""        ""       "fb", B="2"
  68+ 8ED6              ;                                            ""        ""       "fb", B="3"
  69+ 8ED6 A7               and a
  70+ 8ED7 28 10            jr z,1F
  71+ 8ED9 E6 01            and 1
  72+ 8EDB C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EDC
  74+ 8EDC 79               ld a,c
  75+ 8EDD 16 F9            ld d,$f9
  76+ 8EDF 23           2 inc hl
  77+ 8EE0 23               inc hl
  78+ 8EE1 04               inc b
  79+ 8EE2 BA               cp d
  80+ 8EE3 28 04            jr z,1F
  81+ 8EE5 14               inc d
  82+ 8EE6 14               inc d
  83+ 8EE7 18 F6            jr 2B
  84+ 8EE9
  85+ 8EE9 CD EE 8C     1 call Extrae_address
  86+ 8EEC E5               push hl
  87+ 8EED FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EEF DD 21 7A 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EF3
  90+ 8EF3              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EF3              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EF3
  93+ 8EF3 3A 13 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF6 CB 77            bit 6,a
  95+ 8EF8 20 04            jr nz,19F
  96+ 8EFA
  97+ 8EFA AF               xor a
  98+ 8EFB 32 7C 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EFE
 100+ 8EFE 3A F9 88     19 ld a,(Cuad_objeto)
 101+ 8F01 FE 02            cp 2
 102+ 8F03 38 66            jr c,3F
 103+ 8F05 28 64            jr z,3F
 104+ 8F07
 105+ 8F07              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F07
 107+ 8F07 E6 01            and 1
 108+ 8F09 28 30            jr z,4F
 109+ 8F0B
 110+ 8F0B              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F0B              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F0B              ;
 113+ 8F0B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F0B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F0B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F0B
 117+ 8F0B 2A E7 88     	ld hl,(Posicion_actual)
 118+ 8F0E
 119+ 8F0E              ;   Amadeus o entidad ???.
 120+ 8F0E
 121+ 8F0E 3A 13 89         ld a,(Ctrl_0)
 122+ 8F11 CB 77            bit 6,a
 123+ 8F13 28 0A            jr z,8F
 124+ 8F15
 125+ 8F15              ; 	Dispara Amadeus.
 126+ 8F15
 127+ 8F15 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F17 CD A3 96         call PreviousScan
 129+ 8F1A CD A3 96         call PreviousScan
 130+ 8F1D
 131+ 8F1D              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F1D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F1D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F1D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F1D
 136+ 8F1D 18 11            jr 10F
 137+ 8F1F
 138+ 8F1F              ; 	Dispara Entidad.
 139+ 8F1F
 140+ 8F1F 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F22              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F22
 143+ 8F22              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F22              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F22
 146+ 8F22 C5               push bc
 147+ 8F23 06 10            ld b,16
 148+ 8F25 CD 94 96     9 call NextScan
 149+ 8F28 10 FB            djnz 9B
 150+ 8F2A C1               pop bc
 151+ 8F2B CD 95 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F2E 18 06            jr 17F
 153+ 8F30
 154+ 8F30              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F30              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F30              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F30              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F30
 159+ 8F30 CD 95 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F33 CD 0A 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F36              ;                                                      ; _al generar el disparo.
 162+ 8F36
 163+ 8F36              ; 	LLegados a este punto tendremos:
 164+ 8F36              ;
 165+ 8F36              ;       Puntero_objeto_disparo en IY.
 166+ 8F36              ;       Rutinas_de_impresion en IX.
 167+ 8F36              ;       Puntero_de_impresion en HL.
 168+ 8F36              ;       Impacto/Dirección en BC.
 169+ 8F36
 170+ 8F36 CD 9D 8F     17 call Almacena_disparo
 171+ 8F39 18 52            jr 6F                                             ; RET.
 172+ 8F3B
 173+ 8F3B              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F3B              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F3B              ;
 176+ 8F3B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F3B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F3B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F3B
 180+ 8F3B 2A E7 88     4 ld hl,(Posicion_actual)
 181+ 8F3E
 182+ 8F3E              ;   Amadeus o entidad ???.
 183+ 8F3E
 184+ 8F3E 3A 13 89         ld a,(Ctrl_0)
 185+ 8F41 CB 77            bit 6,a
 186+ 8F43 28 0A            jr z,11F
 187+ 8F45
 188+ 8F45              ; 	Dispara Amadeus.
 189+ 8F45
 190+ 8F45 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F47 CD A3 96         call PreviousScan
 192+ 8F4A CD A3 96         call PreviousScan
 193+ 8F4D
 194+ 8F4D              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F4D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F4D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F4D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F4D
 199+ 8F4D 18 11            jr 13F
 200+ 8F4F
 201+ 8F4F              ; 	Dispara Entidad.
 202+ 8F4F
 203+ 8F4F 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F52              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F52
 206+ 8F52              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F52              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F52
 209+ 8F52 C5               push bc
 210+ 8F53 06 10            ld b,16
 211+ 8F55 CD 94 96     12 call NextScan
 212+ 8F58 10 FB            djnz 12B
 213+ 8F5A C1               pop bc
 214+ 8F5B
 215+ 8F5B CD 8E 8F         call Ajusta_disparo_parte_derecha
 216+ 8F5E 18 06            jr 18F
 217+ 8F60
 218+ 8F60              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F60              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F60              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F60              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F60
 223+ 8F60 CD 8E 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F63 CD 0A 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F66              ;                                                       ; _al generar el disparo.
 226+ 8F66
 227+ 8F66              ; LLegados a este punto tendremos:
 228+ 8F66              ;
 229+ 8F66              ;       Puntero_objeto_disparo en IY.
 230+ 8F66              ;       Rutinas_de_impresion en IX.
 231+ 8F66              ;       Puntero_de_impresion en HL.
 232+ 8F66              ;       Impacto/Dirección en BC.
 233+ 8F66
 234+ 8F66 CD 9D 8F     18 call Almacena_disparo
 235+ 8F69 18 22            jr 6F                                               ; RET.
 236+ 8F6B
 237+ 8F6B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F6B
 239+ 8F6B 28 11        3 jr z,5F
 240+ 8F6D
 241+ 8F6D              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F6D              ;
 243+ 8F6D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F6D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F6D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F6D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F6D
 248+ 8F6D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F6D              ;	   ""        ""       "f9", B="1"
 250+ 8F6D              ;	   ""        ""       "fb", B="2"
 251+ 8F6D              ; 	   ""        ""       "fb", B="3"
 252+ 8F6D
 253+ 8F6D 2A E7 88     	ld hl,(Posicion_actual)
 254+ 8F70 CD 94 96     	call NextScan
 255+ 8F73
 256+ 8F73              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F73              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F73              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F73              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F73
 261+ 8F73 CD 95 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F76
 263+ 8F76              ; 	No se produce impacto. B="$80"
 264+ 8F76              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F76
 266+ 8F76 01 80 80         ld bc,$8080
 267+ 8F79
 268+ 8F79              ; 	LLegados a este punto tendremos:
 269+ 8F79              ;
 270+ 8F79              ;       Puntero_objeto_disparo en IY.
 271+ 8F79              ;       Rutinas_de_impresion en IX.
 272+ 8F79              ;       Puntero_de_impresion en HL.
 273+ 8F79              ;       Impacto/Dirección en BC.
 274+ 8F79
 275+ 8F79 CD 9D 8F         call Almacena_disparo
 276+ 8F7C 18 0F            jr 6F                                           ; RET.
 277+ 8F7E
 278+ 8F7E              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F7E              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F7E              ;
 281+ 8F7E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F7E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F7E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F7E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F7E
 286+ 8F7E 2A E7 88     5 ld hl,(Posicion_actual)
 287+ 8F81 CD 94 96     	call NextScan
 288+ 8F84
 289+ 8F84              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F84              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F84              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F84              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F84
 294+ 8F84 CD 8E 8F         call Ajusta_disparo_parte_derecha
 295+ 8F87
 296+ 8F87              ; 	No se produce impacto. B="$80"
 297+ 8F87              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F87
 299+ 8F87 01 80 80     15 ld bc,$8080
 300+ 8F8A
 301+ 8F8A              ; 	LLegados a este punto tendremos:
 302+ 8F8A              ;
 303+ 8F8A              ;       Puntero_objeto_disparo en IY.
 304+ 8F8A              ;       Rutinas_de_impresion en IX.
 305+ 8F8A              ;       Puntero_de_impresion en HL.
 306+ 8F8A              ;       Impacto/Dirección en BC.
 307+ 8F8A
 308+ 8F8A CD 9D 8F         call Almacena_disparo
 309+ 8F8D
 310+ 8F8D C9           6 ret
 311+ 8F8E
 312+ 8F8E              ; ----------------------------------------------------------------
 313+ 8F8E              ;
 314+ 8F8E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F8E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F8E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F8E
 318+ 8F8E 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F8F FE 02            cp 2
 320+ 8F91 38 01            jr c,1F
 321+ 8F93 23               inc hl
 322+ 8F94 C9           1 ret
 323+ 8F95
 324+ 8F95 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F96 FE 01        	cp 1
 326+ 8F98 20 01        	jr nz,1F
 327+ 8F9A 2B           	dec hl
 328+ 8F9B 2B           1 dec hl
 329+ 8F9C C9               ret
 330+ 8F9D
 331+ 8F9D              ; ----------------------------------------------------------------
 332+ 8F9D              ;
 333+ 8F9D              ;   25/02/23
 334+ 8F9D              ;
 335+ 8F9D              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F9D              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F9D              ;
 338+ 8F9D              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F9D              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F9D
 341+ 8F9D              Almacena_disparo
 342+ 8F9D
 343+ 8F9D E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F9E F1               pop af
 345+ 8F9F 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FA0
 347+ 8FA0 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FA1 E6 01            and 1
 349+ 8FA3 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FA5              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FA5              ; 	Dispara AMADEUS.
 352+ 8FA5
 353+ 8FA5              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FA5              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FA5              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FA5              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FA5
 358+ 8FA5 C5               push bc
 359+ 8FA6 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FA9 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FAC A7               and a
 362+ 8FAD ED 42            sbc hl,bc
 363+ 8FAF CC 86 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FB2 C1               pop bc
 365+ 8FB3 28 54            jr z,4F
 366+ 8FB5
 367+ 8FB5 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FB8 23               inc hl
 369+ 8FB9 23               inc hl
 370+ 8FBA 22 64 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FBD              ;                                                   ; _ Disparo_(+1).
 372+ 8FBD 18 18            jr 2F
 373+ 8FBF
 374+ 8FBF              ; Dispara una entidad.
 375+ 8FBF
 376+ 8FBF C5           1 push bc
 377+ 8FC0 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FC3 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC6 A7               and a
 380+ 8FC7 ED 42            sbc hl,bc
 381+ 8FC9 CC 7F 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FCC C1               pop bc
 383+ 8FCD 28 3A            jr z,4F
 384+ 8FCF
 385+ 8FCF 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FD2 23               inc hl
 387+ 8FD3 23               inc hl
 388+ 8FD4 22 62 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FD7              ;                                                   ; _ Disparo_(+1).
 390+ 8FD7 CD EE 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FDA              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FDA              ;
 393+ 8FDA              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FDA              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FDA              ;                                                     Puntero_de_impresion en HL.
 396+ 8FDA              ;                                                     Impacto/Dirección en BC.
 397+ 8FDA
 398+ 8FDA 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FDB 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FDC 23               inc hl                                          ; _ al siguiente.
 401+ 8FDD A7               and a
 402+ 8FDE 20 C0            jr nz,3B
 403+ 8FE0
 404+ 8FE0 08               ex af,af
 405+ 8FE1 ED 73 39 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FE5 F9               ld sp,hl
 407+ 8FE6
 408+ 8FE6 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FE8 F5               push af                                         ; Puntero de impresión.
 410+ 8FE9 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FEB C5               push bc                                         ; Control.
 412+ 8FEC
 413+ 8FEC ED 7B 39 89      ld sp,(Stack)
 414+ 8FF0
 415+ 8FF0              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FF0
 417+ 8FF0 21 28 89     	ld hl,Ctrl_1
 418+ 8FF3 CB C6        	set 0,(hl)
 419+ 8FF5
 420+ 8FF5 DD E5        	push ix
 421+ 8FF7 E1               pop hl
 422+ 8FF8 F5               push af
 423+ 8FF9 DD E1            pop ix
 424+ 8FFB
 425+ 8FFB CD A0 7F     	call Guarda_foto_registros
 426+ 8FFE
 427+ 8FFE 21 28 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9001 CB 86        	res 0,(hl)
 429+ 9003
 430+ 9003              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9003              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9003
 433+ 9003 CD 86 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9006 CD 7F 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9009
 436+ 9009 C9           4 ret
 437+ 900A
 438+ 900A              ; ----------------------------------------------------------------
 439+ 900A              ;
 440+ 900A              ;   4/3/23
 441+ 900A              ;
 442+ 900A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 900A              ;   _ al generarse el disparo.
 444+ 900A              ;
 445+ 900A              ;       "$80" ..... No se produce colisión.
 446+ 900A              ;       "$81" ..... Se produce colisión.
 447+ 900A              ;
 448+ 900A              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 900A              ;         _ que forman el disparo.
 450+ 900A
 451+ 900A
 452+ 900A              Comprueba_Colision
 453+ 900A
 454+ 900A              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 900A
 456+ 900A FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 900C E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 900D
 459+ 900D CD 43 90         call Modifica_H_Velocidad_disparo
 460+ 9010
 461+ 9010 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9011 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9013 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9015
 465+ 9015 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9017 CD 33 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 901A
 468+ 901A 7B               ld a,e
 469+ 901B E6 01            and 1
 470+ 901D 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 901F              ;                                                  ; _ para activar IMPACTO.
 472+ 901F E1               pop hl
 473+ 9020 E5               push hl
 474+ 9021 CD 94 96         call NextScan
 475+ 9024
 476+ 9024 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9025 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9027 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9029              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9029 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 902B CD 33 90         call Bucle_2
 482+ 902E
 483+ 902E 43           1 ld b,e
 484+ 902F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9030 FD E1            pop iy
 486+ 9032 C9               ret
 487+ 9033
 488+ 9033              ; ---------- ----------
 489+ 9033
 490+ 9033 06 02        Bucle_2 ld b,2
 491+ 9035 FD 7E 00     2 ld a,(iy)
 492+ 9038 A6               and (hl)
 493+ 9039 28 02            jr z,1F
 494+ 903B 1E 81            ld e,$81
 495+ 903D 23           1 inc hl
 496+ 903E FD 23            inc iy
 497+ 9040 10 F3            djnz 2B
 498+ 9042 C9               ret
 499+ 9043
 500+ 9043              ; ---------- ----------
 501+ 9043              ;
 502+ 9043              ;   21/7/23
 503+ 9043
 504+ 9043              Modifica_H_Velocidad_disparo
 505+ 9043
 506+ 9043 3A 73 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9046 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9048 D0               ret nc                                         ; _ incrementamos H.
 509+ 9049 24               inc h
 510+ 904A
 511+ 904A C9               ret
 512+ 904B
 513+ 904B              ; -------------------------------------------------------------------------------------------------------------
 514+ 904B              ;
 515+ 904B              ;   11/04/23
 516+ 904B              ;
 517+ 904B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 904B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 904B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 904B              ;
 521+ 904B              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 904B
 523+ 904B              Compara_coordenadas_X
 524+ 904B
 525+ 904B              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 904B              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 904B
 528+ 904B              ; Preparamos registros:
 529+ 904B
 530+ 904B 21 EB 88         ld hl,Filas+6
 531+ 904E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 904F 23               inc hl
 533+ 9050 23               inc hl
 534+ 9051 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9052 43               ld b,e
 536+ 9053
 537+ 9053 21 F9 88         ld hl,Filas+20
 538+ 9056 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9057 21 6E 89         ld hl,Coordenadas_X_Entidad
 540+ 905A CD 76 92         call Guarda_coordenadas_X
 541+ 905D
 542+ 905D              ; Preparamos registros:
 543+ 905D
 544+ 905D 21 A4 85         ld hl,Amadeus_db+6
 545+ 9060 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9061 23               inc hl
 547+ 9062 23               inc hl
 548+ 9063 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9064 7B               ld a,e
 550+ 9065 08               ex af,af'
 551+ 9066 21 B2 85         ld hl,Amadeus_db+20
 552+ 9069 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 906A 21 6B 89         ld hl,Coordenadas_X_Amadeus
 554+ 906D CD 76 92         call Guarda_coordenadas_X
 555+ 9070
 556+ 9070              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9070              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9070
 559+ 9070 04               inc b
 560+ 9071 05               dec b
 561+ 9072 28 04            jr z,1F
 562+ 9074 06 03            ld b,3
 563+ 9076 18 02            jr 2F
 564+ 9078 06 02        1 ld b,2
 565+ 907A 08           2 ex af,af'
 566+ 907B 3C               inc a
 567+ 907C 3D               dec a
 568+ 907D 28 04            jr z,5F
 569+ 907F 0E 03            ld c,3
 570+ 9081 18 02            jr 6F
 571+ 9083 0E 02        5 ld c,2
 572+ 9085 79           6 ld a,c
 573+ 9086 08               ex af,af'
 574+ 9087 11 6E 89         ld de,Coordenadas_X_Entidad
 575+ 908A 1A           4 ld a,(de)
 576+ 908B 21 6B 89         ld hl,Coordenadas_X_Amadeus
 577+ 908E BE           3 cp (hl)
 578+ 908F 28 0E            jr z,7F
 579+ 9091 23               inc hl
 580+ 9092 0D               dec c
 581+ 9093 20 F9            jr nz,3B
 582+ 9095 13               inc de
 583+ 9096 08               ex af,af'
 584+ 9097 4F               ld c,a
 585+ 9098 08               ex af,af'
 586+ 9099 10 EF            djnz 4B
 587+ 909B
 588+ 909B              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 909B
 590+ 909B CD B2 92     8 call Limpia_Coordenadas_X
 591+ 909E C9               ret
 592+ 909F
 593+ 909F 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90A1 32 FE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90A4 21 66 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90A7 CB D6            set 2,(hl)
 597+ 90A9 18 F0            jr 8B
 598+ 90AB
 599+ 90AB              ; -----------------------------------------------------------------------
 600+ 90AB              ;
 601+ 90AB              ;   17/04/23
 602+ 90AB              ;
 603+ 90AB
 604+ 90AB              Detecta_colision_nave_entidad
 605+ 90AB
 606+ 90AB              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90AB
 608+ 90AB 2A E7 88         ld hl,(Posicion_actual)
 609+ 90AE CD EF 95         call Calcula_puntero_de_impresion
 610+ 90B1
 611+ 90B1              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90B1              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90B1
 614+ 90B1 DD E5            push ix
 615+ 90B3 E1               pop hl
 616+ 90B4 E5               push hl
 617+ 90B5
 618+ 90B5              ; ----- ----- -----
 619+ 90B5 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90B7 06 0A            ld b,10
 621+ 90B9 CD E9 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90BC 7B               ld a,e
 623+ 90BD FE 05            cp 5
 624+ 90BF 38 0E            jr c,3F
 625+ 90C1
 626+ 90C1              ; LLegados a este punto:
 627+ 90C1              ;
 628+ 90C1              ;   HAY COLISIÓN !!!!!.
 629+ 90C1              ;
 630+ 90C1              ;   .db (Impacto) de Amadeus a "1".
 631+ 90C1              ;   SET el bit3 de (Impacto2).
 632+ 90C1              ;
 633+ 90C1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90C1
 635+ 90C1 21 B7 85         ld hl,Amadeus_db+25
 636+ 90C4 36 01            ld (hl),1
 637+ 90C6 21 66 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90C9 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90CB CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90CD 18 18            jr 1F
 641+ 90CF
 642+ 90CF              ; -----
 643+ 90CF
 644+ 90CF E1           3 pop hl
 645+ 90D0 CD 94 96         call NextScan
 646+ 90D3 E5               push hl
 647+ 90D4 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90D5 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90D7 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90D9 30 0C            jr nc,1F
 651+ 90DB              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90DB 10 DC            djnz 2B
 653+ 90DD
 654+ 90DD              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90DD
 656+ 90DD              ; LLegados a este punto:
 657+ 90DD              ;
 658+ 90DD              ;   NO HAY COLISIÓN !!!!!.
 659+ 90DD              ;
 660+ 90DD              ;   .db (Impacto) de Amadeus a "0".
 661+ 90DD              ;   RES el bit2 de (Impacto2).
 662+ 90DD              ;
 663+ 90DD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90DD              ;   Lo colocamos a "0".
 665+ 90DD
 666+ 90DD 21 66 89         ld hl,Impacto2
 667+ 90E0 CB 96            res 2,(hl)
 668+ 90E2 2A 67 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90E5 36 00            ld (hl),0
 670+ 90E7
 671+ 90E7 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90E8 C9               ret
 673+ 90E9
 674+ 90E9               ; ---------- ----------
 675+ 90E9
 676+ 90E9 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90EA 3A E6 88         ld a,(Columns)
 678+ 90ED 47               ld b,a
 679+ 90EE FD 7E 00     2 ld a,(iy)
 680+ 90F1 BE               cp (hl)
 681+ 90F2 28 01            jr z,1F
 682+ 90F4
 683+ 90F4 1C               inc e
 684+ 90F5
 685+ 90F5 23           1 inc hl
 686+ 90F6 FD 23            inc iy
 687+ 90F8 10 F4            djnz 2B
 688+ 90FA C1               pop bc
 689+ 90FB C9               ret
 690+ 90FC
 691+ 90FC              ; -------------------------------------------------------------------------------------------------------------
 692+ 90FC              ;
 693+ 90FC              ;   13/03/23
 694+ 90FC              ;
 695+ 90FC              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90FC              ;
 697+ 90FC              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90FC
 699+ 90FC 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90FF 7E               ld a,(hl)
 701+ 9100 A7               and a
 702+ 9101 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9102
 704+ 9102 44               ld b,h
 705+ 9103 4D               ld c,l
 706+ 9104 2A 41 89         ld hl,(Stack_snapshot_disparos)
 707+ 9107 E5               push hl
 708+ 9108 A7               and a
 709+ 9109 ED 42            sbc hl,bc
 710+ 910B E5               push hl
 711+ 910C C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 910D
 713+ 910D E1               pop hl
 714+ 910E 54               ld d,h
 715+ 910F 5D               ld e,l
 716+ 9110 1B               dec de
 717+ 9111 ED B8            lddr                                                ; Limpiamos.
 718+ 9113
 719+ 9113 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9116 22 41 89         ld (Stack_snapshot_disparos),hl
 721+ 9119
 722+ 9119 C9               ret
 723+ 911A
 724+ 911A              ; -------------------------------------------------------------------------------------------------------------
 725+ 911A              ;
 726+ 911A              ;   18/07/23
 727+ 911A              ;
 728+ 911A
 729+ 911A              Motor_de_disparos
 730+ 911A
 731+ 911A              ; Gestiona DISPAROS DE AMADEUS.
 732+ 911A
 733+ 911A 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 911D 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9120
 736+ 9120 CD EE 8C     2 call Extrae_address
 737+ 9123 7E               ld a,(hl)
 738+ 9124 A7               and a
 739+ 9125 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9127
 741+ 9127              ; ----- ----- ----- ----- ----- -----
 742+ 9127
 743+ 9127 C5               push bc
 744+ 9128 CD EC 91         call foto_disparo_a_borrar
 745+ 912B
 746+ 912B              ; Existe colisión con este disparo???
 747+ 912B
 748+ 912B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 912C 7E               ld a,(hl)
 750+ 912D 2B               dec hl
 751+ 912E E6 01            and 1
 752+ 9130 28 1D            jr z,9F
 753+ 9132
 754+ 9132              ;   En este punto:
 755+ 9132              ;
 756+ 9132              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9132              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9132              ;   _con la entidad).
 759+ 9132              ;
 760+ 9132              ;   Disparo_2A defw 0                                ; Control.
 761+ 9132              ;    defw 0                                          ; Puntero objeto.
 762+ 9132              ;    defw 0                                          ; Puntero de impresión.
 763+ 9132              ;    defw 0                                          ; Rutina de impresión.
 764+ 9132
 765+ 9132 E5               push hl
 766+ 9133
 767+ 9133 06 04            ld b,4
 768+ 9135 23           19 inc hl
 769+ 9136 10 FD            djnz 19B
 770+ 9138
 771+ 9138 CD EE 8C         call Extrae_address
 772+ 913B CD 5D 9D         call Genera_coordenadas_disparo
 773+ 913E
 774+ 913E              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 913E
 776+ 913E 21 69 89         ld hl,Coordenadas_disparo_certero
 777+ 9141 72               ld (hl),d
 778+ 9142 23               inc hl
 779+ 9143 73               ld (hl),e
 780+ 9144
 781+ 9144              ; Elimino el disparo de la base de datos.
 782+ 9144
 783+ 9144 E1               pop hl
 784+ 9145 CD 6B 92         call Elimina_disparo_de_base_de_datos
 785+ 9148 21 66 89         ld hl,Impacto2
 786+ 914B CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 914D
 788+ 914D 18 06            jr 11F
 789+ 914F
 790+ 914F CD 15 92     9 call Mueve_disparo
 791+ 9152 CD EC 91         call foto_disparo_a_borrar
 792+ 9155
 793+ 9155 C1           11 pop bc
 794+ 9156 18 04            jr 7F
 795+ 9158
 796+ 9158              ; ----- ----- ----- ----- ----- -----
 797+ 9158
 798+ 9158 ED 42        1 sbc hl,bc
 799+ 915A 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 915C
 801+ 915C 2A 64 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 915F 23               inc hl
 803+ 9160 23               inc hl
 804+ 9161 22 64 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9164 18 BA            jr 2B
 806+ 9166
 807+ 9166 CD 86 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9169              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9169
 810+ 9169              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9169
 812+ 9169 01 8A 85         ld bc,Disparo_11
 813+ 916C 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 916F
 815+ 916F CD EE 8C     5 call Extrae_address
 816+ 9172 7E               ld a,(hl)
 817+ 9173 A7               and a
 818+ 9174 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9176
 820+ 9176              ; ----- ----- ----- ----- ----- -----
 821+ 9176
 822+ 9176 C5               push bc
 823+ 9177 CD EC 91         call foto_disparo_a_borrar
 824+ 917A
 825+ 917A              ; Existe colisión con este disparo???
 826+ 917A
 827+ 917A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 917B 7E               ld a,(hl)
 829+ 917C 2B               dec hl
 830+ 917D E6 01            and 1
 831+ 917F 28 4D            jr z,10F
 832+ 9181
 833+ 9181              ;! La colisión se produce con Amadeus???
 834+ 9181              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9181
 836+ 9181 E5               push hl
 837+ 9182
 838+ 9182 06 04            ld b,4
 839+ 9184 23           16 inc hl
 840+ 9185 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9187
 842+ 9187 CD EE 8C         call Extrae_address
 843+ 918A CD 5D 9D         call Genera_coordenadas_disparo
 844+ 918D
 845+ 918D 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 918E FE 16            cp $16
 847+ 9190 38 2A            jr c,15F
 848+ 9192
 849+ 9192
 850+ 9192              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9192
 852+ 9192 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9193
 854+ 9193              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9193
 856+ 9193
 857+ 9193 2A 71 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9196
 859+ 9196              ; Coordenada X de Amadeus en D.
 860+ 9196
 861+ 9196 7D               ld a,l
 862+ 9197 E6 1F            and $1F
 863+ 9199 57               ld d,a
 864+ 919A
 865+ 919A 21 A6 85         ld hl,Amadeus_db+8
 866+ 919D 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 919E
 868+ 919E 21 6B 89         ld hl,Coordenadas_X_Amadeus
 869+ 91A1 CD 76 92         call Guarda_coordenadas_X
 870+ 91A4
 871+ 91A4 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91A5
 873+ 91A5              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91A5
 875+ 91A5 06 02            ld b,2
 876+ 91A7 C5           20 push bc
 877+ 91A8
 878+ 91A8 06 03            ld b,3
 879+ 91AA 21 6B 89         ld hl,Coordenadas_X_Amadeus
 880+ 91AD 7E           18 ld a,(hl)
 881+ 91AE BA               cp d
 882+ 91AF 20 04            jr nz,17F
 883+ 91B1
 884+ 91B1              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91B1
 886+ 91B1 C1               pop bc
 887+ 91B2 E1               pop hl
 888+ 91B3 18 0D            jr 14F
 889+ 91B5
 890+ 91B5 23           17 inc hl
 891+ 91B6 10 F5            djnz 18B
 892+ 91B8
 893+ 91B8 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91B9
 895+ 91B9 C1               pop bc
 896+ 91BA 10 EB            djnz 20B
 897+ 91BC
 898+ 91BC
 899+ 91BC              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91BC              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91BC
 902+ 91BC E1           15 pop hl
 903+ 91BD 23               inc hl
 904+ 91BE 35               dec (hl)
 905+ 91BF 2B               dec hl
 906+ 91C0 18 0C            jr 10F
 907+ 91C2
 908+ 91C2              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91C2              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91C2
 911+ 91C2 E5           14 push hl
 912+ 91C3 CD 6B 92         call Elimina_disparo_de_base_de_datos
 913+ 91C6 21 66 89         ld hl,Impacto2
 914+ 91C9 CB CE            set 1,(hl)
 915+ 91CB E1               pop hl
 916+ 91CC 18 06            jr 12F
 917+ 91CE
 918+ 91CE              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91CE
 920+ 91CE CD 15 92     10 call Mueve_disparo
 921+ 91D1 CD EC 91         call foto_disparo_a_borrar
 922+ 91D4 C1           12 pop bc
 923+ 91D5
 924+ 91D5 18 04            jr 8F
 925+ 91D7
 926+ 91D7              ; ----- ----- ----- ----- ----- -----
 927+ 91D7
 928+ 91D7 ED 42        4 sbc hl,bc
 929+ 91D9 28 0A            jr z,6F
 930+ 91DB
 931+ 91DB 2A 62 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91DE 23               inc hl
 933+ 91DF 23               inc hl
 934+ 91E0 22 62 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91E3 18 8A            jr 5B
 936+ 91E5
 937+ 91E5 CD 7F 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91E8 CD B2 92         call Limpia_Coordenadas_X
 939+ 91EB C9               ret
 940+ 91EC
 941+ 91EC              ; ------------------------------------------------------------------
 942+ 91EC
 943+ 91EC              foto_disparo_a_borrar
 944+ 91EC
 945+ 91EC 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91ED A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91EE C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91EF
 949+ 91EF E5               push hl
 950+ 91F0 23               inc hl
 951+ 91F1 23               inc hl
 952+ 91F2 ED 73 39 89      ld (Stack),sp
 953+ 91F6 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91F7 FD E1            pop iy
 955+ 91F9 DD E1            pop ix
 956+ 91FB E1               pop hl
 957+ 91FC ED 7B 39 89      ld sp,(Stack)
 958+ 9200 3A 28 89         ld a,(Ctrl_1)
 959+ 9203 CB C7            set 0,a
 960+ 9205 32 28 89         ld (Ctrl_1),a
 961+ 9208 CD A0 7F         call Guarda_foto_registros
 962+ 920B 3A 28 89         ld a,(Ctrl_1)
 963+ 920E CB 87            res 0,a
 964+ 9210 32 28 89         ld (Ctrl_1),a
 965+ 9213 E1               pop hl
 966+ 9214 C9               ret
 967+ 9215
 968+ 9215              ;---------------------------------------------------
 969+ 9215              ;
 970+ 9215              ;   18/07/23
 971+ 9215              ;
 972+ 9215
 973+ 9215              Mueve_disparo
 974+ 9215
 975+ 9215              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9215              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9215              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9215
 979+ 9215 E5               push hl
 980+ 9216
 981+ 9216 7E               ld a,(hl)
 982+ 9217
 983+ 9217 06 04            ld b,4
 984+ 9219 23           1 inc hl
 985+ 921A 10 FD            djnz 1B
 986+ 921C
 987+ 921C              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 921C
 989+ 921C CD EE 8C         call Extrae_address
 990+ 921F
 991+ 921F E6 01            and 1
 992+ 9221 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9223
 994+ 9223              ; Disparo hacia arriba, (Amadeus).
 995+ 9223
 996+ 9223              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9223              ; _ de la dificultad.
 998+ 9223
 999+ 9223 CD A3 96         call PreviousScan
1000+ 9226 CD A3 96         call PreviousScan
1001+ 9229 CD A3 96         call PreviousScan
1002+ 922C CD A3 96         call PreviousScan
1003+ 922F
1004+ 922F              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 922F
1006+ 922F 7C               ld a,h
1007+ 9230 FE 40            cp $40
1008+ 9232 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9234
1010+ 9234              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9234
1012+ 9234 EB               ex de,hl
1013+ 9235 06 04            ld b,4
1014+ 9237 2B           6 dec hl
1015+ 9238 10 FD            djnz 6B
1016+ 923A
1017+ 923A CD 6B 92         call Elimina_disparo_de_base_de_datos
1018+ 923D E1               pop hl
1019+ 923E 18 10            jr 7F
1020+ 9240
1021+ 9240              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9240              ; HL contiene el puntero de impresión del disparo.
1023+ 9240              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9240
1025+ 9240 D5           3 push de
1026+ 9241 C5               push bc
1027+ 9242
1028+ 9242 CD 0A 90         call Comprueba_Colision
1029+ 9245
1030+ 9245              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9245
1032+ 9245 78               ld a,b
1033+ 9246
1034+ 9246 C1               pop bc
1035+ 9247 D1               pop de
1036+ 9248
1037+ 9248 EB               ex de,hl
1038+ 9249
1039+ 9249 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 924A 23               inc hl                                      ; _ movimiento.
1041+ 924B 72               ld (hl),d
1042+ 924C
1043+ 924C E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 924D
1045+ 924D 23               inc hl                                      ; _ en curso.
1046+ 924E 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 924F 2B               dec hl
1048+ 9250
1049+ 9250 C9           7 ret
1050+ 9251
1051+ 9251              ; Disparo hacia abajo, (Entidad).
1052+ 9251
1053+ 9251 3A 73 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9254 47               ld b,a
1055+ 9255
1056+ 9255 CD 94 96     4 call NextScan
1057+ 9258 10 FB            djnz 4B
1058+ 925A
1059+ 925A              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 925A
1061+ 925A 7C               ld a,h
1062+ 925B FE 58            cp $58
1063+ 925D 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 925F
1065+ 925F EB               ex de,hl
1066+ 9260 06 04            ld b,4
1067+ 9262 2B           5 dec hl
1068+ 9263 10 FD            djnz 5B
1069+ 9265
1070+ 9265 CD 6B 92         call Elimina_disparo_de_base_de_datos
1071+ 9268 E1               pop hl
1072+ 9269 18 E5            jr 7B
1073+ 926B
1074+ 926B              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 926B
1076+ 926B 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 926E AF               xor a
1078+ 926F 77               ld (hl),a
1079+ 9270 54               ld d,h
1080+ 9271 5D               ld e,l
1081+ 9272 13               inc de
1082+ 9273 ED B0            ldir
1083+ 9275 C9               ret
1084+ 9276
1085+ 9276              ; -----------------------------------------------------------------
1086+ 9276              ;
1087+ 9276              ;   19/7/23
1088+ 9276              ;
1089+ 9276              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9276              ;
1091+ 9276              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9276              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9276              ;
1094+ 9276              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9276              ;
1096+ 9276              ;   INPUTS:
1097+ 9276              ;
1098+ 9276              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9276              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9276
1101+ 9276              ;   MODIFICA: A, HL, BC y DE.
1102+ 9276
1103+ 9276              Guarda_coordenadas_X
1104+ 9276
1105+ 9276 7B               ld a,e
1106+ 9277 A7               and a
1107+ 9278 20 04            jr nz,1F
1108+ 927A
1109+ 927A 06 02            ld b,2
1110+ 927C 18 02            jr 2F
1111+ 927E
1112+ 927E 06 03        1 ld b,3
1113+ 9280 72           2 ld (hl),d
1114+ 9281 23               inc hl
1115+ 9282 14               inc d
1116+ 9283 10 FB            djnz 2B
1117+ 9285
1118+ 9285 C9               ret
1119+ 9286
1120+ 9286              ; -----------------------------------------------------------------
1121+ 9286              ;
1122+ 9286              ;   12/04/23
1123+ 9286              ;
1124+ 9286
1125+ 9286 3A 66 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9289 A7               and a
1127+ 928A C8               ret z
1128+ 928B
1129+ 928B FE 04            cp 4
1130+ 928D 20 09            jr nz,1F
1131+ 928F
1132+ 928F
1133+ 928F              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 928F
1135+ 928F CD AB 90         call Detecta_colision_nave_entidad
1136+ 9292
1137+ 9292 21 66 89         ld hl,Impacto2
1138+ 9295 CB 5E            bit 3,(hl)
1139+ 9297 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9298
1141+ 9298              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9298              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9298
1144+ 9298 21 66 89     1 ld hl,Impacto2
1145+ 929B CB 4E            bit 1,(hl)
1146+ 929D 28 07            jr z,2F
1147+ 929F
1148+ 929F 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92A2 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92A4 18 0B            jr 3F
1151+ 92A6
1152+ 92A6 21 66 89     2 ld hl,Impacto2
1153+ 92A9 CB 46            bit 0,(hl)
1154+ 92AB C8               ret z
1155+ 92AC
1156+ 92AC              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92AC
1158+ 92AC 21 28 89         ld hl,Ctrl_1
1159+ 92AF CB D6            set 2,(hl)
1160+ 92B1
1161+ 92B1 C9           3 ret
1162+ 92B2
1163+ 92B2              ; -----------------------------------------------------------------
1164+ 92B2              ;
1165+ 92B2              ;   19/7/23
1166+ 92B2              ;
1167+ 92B2              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92B2
1169+ 92B2 AF           Limpia_Coordenadas_X xor a
1170+ 92B3 06 06            ld b,6
1171+ 92B5 21 6B 89         ld hl,Coordenadas_X_Amadeus
1172+ 92B8 77           1 ld (hl),a
1173+ 92B9 23               inc hl
1174+ 92BA 10 FC            djnz 1B
1175+ 92BC C9               ret
1176+ 92BD
1177+ 92BD              ; -----------------------------------------------------------------
1178+ 92BD              ;
1179+ 92BD              ;   25/04/23
1180+ 92BD              ;
1181+ 92BD
1182+ 92BD              Determina_resultado_comparativa
1183+ 92BD
1184+ 92BD              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92BD              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92BD              ;
1187+ 92BD              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92BD              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92BD              ;
1190+ 92BD              ;   SBC HL,DE
1191+ 92BD
1192+ 92BD              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92BD              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92BD
1195+ 92BD              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92BD              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92BD
1198+ 92BD
1199+ 92BD 3A F9 88         ld a,(Cuad_objeto)
1200+ 92C0 FE 02            cp 2
1201+ 92C2 28 26            jr z,2F
1202+ 92C4 38 24            jr c,2F
1203+ 92C6
1204+ 92C6              ; Cuadrantes 3º y 4º
1205+ 92C6
1206+ 92C6 E6 01            and 1
1207+ 92C8 28 10            jr z,4F
1208+ 92CA
1209+ 92CA              ; Cuadrante 3º
1210+ 92CA
1211+ 92CA 7C               ld a,h
1212+ 92CB 06 00            ld b,0
1213+ 92CD
1214+ 92CD CD 58 93         call Compara_cositas_H3
1215+ 92D0
1216+ 92D0 04               inc b
1217+ 92D1 05               dec b
1218+ 92D2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92D3
1220+ 92D3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92D4 06 00            ld b,0
1222+ 92D6
1223+ 92D6 CD 6A 93         call Compara_cositas_L3
1224+ 92D9 C9               ret
1225+ 92DA
1226+ 92DA              ; Cuadrante 4º
1227+ 92DA
1228+ 92DA 7C           4 ld a,h
1229+ 92DB 06 00            ld b,0
1230+ 92DD
1231+ 92DD CD 7C 93         call Compara_cositas_H4
1232+ 92E0
1233+ 92E0 04               inc b
1234+ 92E1 05               dec b
1235+ 92E2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92E3
1237+ 92E3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92E4 06 00            ld b,0
1239+ 92E6
1240+ 92E6 CD 92 93         call Compara_cositas_L4
1241+ 92E9 C9               ret
1242+ 92EA
1243+ 92EA              ; Cuadrantes 1º y 2º.
1244+ 92EA
1245+ 92EA 28 10        2 jr z,3F
1246+ 92EC
1247+ 92EC              ; 1er Cuadrante
1248+ 92EC
1249+ 92EC 7C               ld a,h
1250+ 92ED 06 00            ld b,0
1251+ 92EF
1252+ 92EF CD 30 93         call Compara_cositas_H1
1253+ 92F2
1254+ 92F2 04               inc b
1255+ 92F3 05               dec b
1256+ 92F4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92F5
1258+ 92F5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92F6 06 00            ld b,0
1260+ 92F8
1261+ 92F8 CD 46 93         call Compara_cositas_L1
1262+ 92FB C9               ret
1263+ 92FC
1264+ 92FC
1265+ 92FC              ; 2º Cuadrante
1266+ 92FC
1267+ 92FC 7C           3 ld a,h
1268+ 92FD 06 00            ld b,0
1269+ 92FF
1270+ 92FF CD 0C 93         call Compara_cositas_H2
1271+ 9302
1272+ 9302 04               inc b
1273+ 9303 05               dec b
1274+ 9304 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9305
1276+ 9305 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9306 06 00            ld b,0
1278+ 9308
1279+ 9308 CD 1E 93         call Compara_cositas_L2
1280+ 930B C9               ret
1281+ 930C
1282+ 930C A7           Compara_cositas_H2 and a
1283+ 930D 28 0D            jr z,1F
1284+ 930F              ;    cp $fd
1285+ 930F              ;    jr z,1F
1286+ 930F              ;    cp $fe
1287+ 930F              ;    jr z,1F
1288+ 930F FE FF            cp $ff
1289+ 9311 28 09            jr z,1F
1290+ 9313 FE 01            cp $01
1291+ 9315 28 05            jr z,1F
1292+ 9317 FE 02            cp $02
1293+ 9319 28 01            jr z,1F
1294+ 931B C0               ret nz
1295+ 931C 04           1 inc b
1296+ 931D C9               ret
1297+ 931E
1298+ 931E A7           Compara_cositas_L2 and a
1299+ 931F 28 0D            jr z,1F
1300+ 9321              ;    cp $fd
1301+ 9321              ;    jr z,1F
1302+ 9321 FE FE            cp $fe
1303+ 9323 28 09            jr z,1F
1304+ 9325 FE FF            cp $ff
1305+ 9327 28 05            jr z,1F
1306+ 9329 FE 01            cp $01
1307+ 932B 28 01            jr z,1F
1308+ 932D              ;    cp $02
1309+ 932D              ;    jr z,1F
1310+ 932D C0               ret nz
1311+ 932E 04           1 inc b
1312+ 932F C9               ret
1313+ 9330
1314+ 9330 A7           Compara_cositas_H1 and a
1315+ 9331 28 11            jr z,1F
1316+ 9333              ;    cp $fd
1317+ 9333              ;    jr z,1F
1318+ 9333              ;    cp $fe
1319+ 9333              ;    jr z,1F
1320+ 9333 FE FF            cp $ff
1321+ 9335 28 0D            jr z,1F
1322+ 9337 FE 01            cp $01
1323+ 9339 28 09            jr z,1F
1324+ 933B FE 02            cp $02
1325+ 933D 28 05            jr z,1F
1326+ 933F FE 03            cp $03
1327+ 9341 28 01            jr z,1F
1328+ 9343 C0               ret nz
1329+ 9344 04           1 inc b
1330+ 9345 C9               ret
1331+ 9346
1332+ 9346 A7           Compara_cositas_L1 and a
1333+ 9347 28 0D            jr z,1F
1334+ 9349              ;    cp $fd
1335+ 9349              ;    jr z,1F
1336+ 9349              ;    cp $fe
1337+ 9349              ;    jr z,1F
1338+ 9349              ;    cp $ff
1339+ 9349              ;    jr z,1F
1340+ 9349 FE 01            cp $01
1341+ 934B 28 09            jr z,1F
1342+ 934D FE 02            cp $02
1343+ 934F 28 05            jr z,1F
1344+ 9351 FE 03            cp $03
1345+ 9353 28 01            jr z,1F
1346+ 9355 C0               ret nz
1347+ 9356 04           1 inc b
1348+ 9357 C9               ret
1349+ 9358
1350+ 9358 A7           Compara_cositas_H3 and a
1351+ 9359 28 0D            jr z,1F
1352+ 935B              ;    cp $fd
1353+ 935B              ;    jr z,1F
1354+ 935B FE FE            cp $fe
1355+ 935D 28 09            jr z,1F
1356+ 935F FE FF            cp $ff
1357+ 9361 28 05            jr z,1F
1358+ 9363 FE 01            cp $01
1359+ 9365 28 01            jr z,1F
1360+ 9367              ;    cp $02
1361+ 9367              ;    jr z,1F
1362+ 9367              ;    cp $03
1363+ 9367              ;    jr z,1F
1364+ 9367 C0               ret nz
1365+ 9368 04           1 inc b
1366+ 9369 C9               ret
1367+ 936A
1368+ 936A A7           Compara_cositas_L3 and a
1369+ 936B 28 0D            jr z,1F
1370+ 936D              ;    cp $fd
1371+ 936D              ;    jr z,1F
1372+ 936D              ;    cp $fe
1373+ 936D              ;    jr z,1F
1374+ 936D              ;    cp $ff
1375+ 936D              ;    jr z,1F
1376+ 936D FE 01            cp $01
1377+ 936F 28 09            jr z,1F
1378+ 9371 FE 02            cp $02
1379+ 9373 28 05            jr z,1F
1380+ 9375 FE 03            cp $03
1381+ 9377 28 01            jr z,1F
1382+ 9379 C0               ret nz
1383+ 937A 04           1 inc b
1384+ 937B C9               ret
1385+ 937C
1386+ 937C A7           Compara_cositas_H4 and a
1387+ 937D 28 11            jr z,1F
1388+ 937F FE FD            cp $fd
1389+ 9381 28 0D            jr z,1F
1390+ 9383 FE FE            cp $fe
1391+ 9385 28 09            jr z,1F
1392+ 9387 FE FF            cp $ff
1393+ 9389 28 05            jr z,1F
1394+ 938B FE 01            cp $01
1395+ 938D 28 01            jr z,1F
1396+ 938F              ;    cp $02
1397+ 938F              ;    jr z,1F
1398+ 938F              ;    cp $03
1399+ 938F              ;    jr z,1F
1400+ 938F C0               ret nz
1401+ 9390 04           1 inc b
1402+ 9391 C9               ret
1403+ 9392
1404+ 9392 A7           Compara_cositas_L4 and a
1405+ 9393 28 0D            jr z,1F
1406+ 9395              ;    cp $fd
1407+ 9395              ;    jr z,1F
1408+ 9395 FE FE            cp $fe
1409+ 9397 28 09            jr z,1F
1410+ 9399 FE FF            cp $ff
1411+ 939B 28 05            jr z,1F
1412+ 939D FE 01            cp $01
1413+ 939F 28 01            jr z,1F
1414+ 93A1              ;    cp $02
1415+ 93A1              ;    jr z,1F
1416+ 93A1              ;    cp $03
1417+ 93A1              ;    jr z,1F
1418+ 93A1 C0               ret nz
1419+ 93A2 04           1 inc b
1420+ 93A3 C9               ret
# file closed: Disparo.asm
1564  93A4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A4              ; ******************************************************************************************************************************************************************************************
   2+ 93A4              ;
   3+ 93A4              ; 26/06/23
   4+ 93A4              ;
   5+ 93A4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A4
   7+ 93A4 CD 88 96     Draw call Prepara_draw
   8+ 93A7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93A8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93A9 28 05        	jr z,2F
  11+ 93AB
  12+ 93AB 3A F9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93AE 18 0C        	jr 1F
  14+ 93B0
  15+ 93B0 2A F7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93B3 22 E7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93B6 CD 45 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93B9              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93B9 CD EA 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93BC
  21+ 93BC 3A 13 89     1 ld a,(Ctrl_0)
  22+ 93BF CB 6F        	bit 5,a
  23+ 93C1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93C3
  25+ 93C3 CD DB 93     	call Comprueba_limite_horizontal
  26+ 93C6 CD 6B 94     	call Comprueba_limite_vertical
  27+ 93C9
  28+ 93C9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93C9              ; -----------------------
  30+ 93C9              ; -----------------------
  31+ 93C9              ; -----------------------
  32+ 93C9
  33+ 93C9 CD B8 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93CC CD EF 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93CF CD 4E 96     	call Define_rutina_de_impresion
  36+ 93D2
  37+ 93D2 3A 13 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93D5 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93D7 32 13 89     	ld (Ctrl_0),a
  40+ 93DA
  41+ 93DA C9           	ret
  42+ 93DB
  43+ 93DB              ; *******************************************************************************************************************************************************************************************
  44+ 93DB              ;	21/01/23
  45+ 93DB              ;
  46+ 93DB              ; 	Comprueba_limite_horizontal.
  47+ 93DB              ;
  48+ 93DB              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93DB              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93DB              ;
  51+ 93DB              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93DB              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93DB              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93DB              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93DB
  56+ 93DB
  57+ 93DB
  58+ 93DB 3A 13 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93DE CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93E0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93E2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93E4 32 13 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93E7 18 09            jr 6F
  64+ 93E9 CB 5F        1 bit 3,a
  65+ 93EB 28 0A            jr z,2F
  66+ 93ED E6 F7            and $f7
  67+ 93EF 32 13 89         ld (Ctrl_0),a
  68+ 93F2 CD 45 95     6 call Inicializacion
  69+ 93F5 18 5B            jr 5F
  70+ 93F7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93F8
  72+ 93F8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93F8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93F8
  75+ 93F8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93F9 2A 23 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93FC CD A7 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93FF 67           	ld h,a
  79+ 9400 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9401 CD A7 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9404 67           	ld h,a
  82+ 9405 A7           	and a
  83+ 9406 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9408 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9409 3A F9 88     	ld a,(Cuad_objeto)
  86+ 940C FE 02        	cp 2
  87+ 940E 38 1E        	jr c,3F
  88+ 9410 28 1C        	jr z,3F
  89+ 9412 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9413 28 23            jr z,7F
  91+ 9415 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9417 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9419 E1           	pop hl
  94+ 941A
  95+ 941A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 941A              ; _para indicar con E="2" en caso necesario.
  97+ 941A
  98+ 941A E5               push hl
  99+ 941B C5               push bc
 100+ 941C CD A7 99     	call calcula_tercio
 101+ 941F FE 01        	cp 1
 102+ 9421 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9423 CD 53 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9426 28 26            jr z,9F
 105+ 9428 38 24            jr c,9F
 106+ 942A 1E 00        11 ld e,0
 107+ 942C 18 22            jr 8F
 108+ 942E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 942F 28 07        	jr z, 7F
 110+ 9431 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9433 1E 00         	ld e,0
 112+ 9435 E1           	pop hl
 113+ 9436 18 04        	jr 4F
 114+ 9438 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 943A 18 15            jr 10F
 116+ 943C
 117+ 943C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 943C              ; _para indicar con E="2" en caso necesario.
 119+ 943C
 120+ 943C E5           4 push hl
 121+ 943D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 943E CD A7 99     	call calcula_tercio
 123+ 9441 FE 01        	cp 1
 124+ 9443 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9445 CD 53 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9448 28 04            jr z,9F
 127+ 944A 30 02            jr nc,9F
 128+ 944C 18 02        	jr 8F
 129+ 944E 1E 02        9 ld e,2
 130+ 9450 C1           8 pop bc
 131+ 9451 E1           10 pop hl
 132+ 9452 C9           5 ret
 133+ 9453
 134+ 9453              ; --------------------
 135+ 9453              ;
 136+ 9453              ; 25/08/22
 137+ 9453
 138+ 9453 CD A7 99     Comprueba_centro call calcula_tercio
 139+ 9456 67               ld h,a
 140+ 9457 08           	ex af,af
 141+ 9458 FE 02        	cp 2
 142+ 945A 38 07        	jr c,1F
 143+ 945C 28 05        	jr z,1F
 144+ 945E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9461 18 03        	jr 2F
 146+ 9463 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9466 08           2 ex af,af
 148+ 9467 A7               and a
 149+ 9468 ED 42            sbc hl,bc
 150+ 946A C9               ret
 151+ 946B
 152+ 946B              ; *********************************************************************************************************************************************************************************************
 153+ 946B              ;
 154+ 946B              ;   16/8/22
 155+ 946B              ;
 156+ 946B              ;	Comprueba_limite_vertical
 157+ 946B              ;
 158+ 946B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 946B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 946B              ;
 161+ 946B
 162+ 946B 2A E7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 946E 7D           	ld a,l
 164+ 946F E6 1F        	and $1F
 165+ 9471 57           	ld d,a
 166+ 9472 3A 25 89     	ld a,(Limite_vertical)
 167+ 9475 BA           	cp d 											; Límite - Posición.
 168+ 9476 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9477 3A F9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 947A CB 47        	bit 0,a
 171+ 947C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 947E
 173+ 947E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 947E
 175+ 947E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 947F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9481
 178+ 9481              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9481              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9481
 181+ 9481 3A EB 88         ld a,(Coordenada_X)
 182+ 9484 16 0F            ld d,Centro_izquierda
 183+ 9486 A7               and a
 184+ 9487 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9488 28 1E            jr z,3F
 186+ 948A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 948C              ;                                                    ; _salimos sin modificar nada.
 188+ 948C 18 0E            jr 2F
 189+ 948E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 948F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9491
 192+ 9491              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9491              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9491
 195+ 9491 3A EB 88         ld a,(Coordenada_X)
 196+ 9494 16 10            ld d,Centro_derecha
 197+ 9496 A7               and a
 198+ 9497 92               sub d
 199+ 9498 28 0E            jr z,3F
 200+ 949A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 949C              ;                                                    ; _salimos sin modificar nada.
 202+ 949C CB 43        2 bit 0,e
 203+ 949E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94A0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94A1 CD 35 95         call Modificaccionne
 206+ 94A4 C1           	pop bc
 207+ 94A5 CD 45 95         call Inicializacion
 208+ 94A8 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94A9
 210+ 94A9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94A9
 212+ 94A9 C5           4 push bc
 213+ 94AA 01 E6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94AD 0A           	ld a,(bc)
 215+ 94AE 3D           	dec a
 216+ 94AF 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94B0 7D           	ld a,l
 218+ 94B1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94B2 CB 47        	bit 0,a
 220+ 94B4 28 03        	jr z,5F
 221+ 94B6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94B7 18 2E        	jr 7F
 223+ 94B9
 224+ 94B9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94B9
 226+ 94B9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94BA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94BB 3A 13 89     	ld a,(Ctrl_0)
 229+ 94BE CB 4F        	bit 1,a
 230+ 94C0 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94C2 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94C3
 233+ 94C3              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94C3
 235+ 94C3 1C               inc e
 236+ 94C4 1D               dec e
 237+ 94C5 20 07            jr nz,12F
 238+ 94C7 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94C8 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94C9 22 E7 88     	ld (Posicion_actual),hl
 241+ 94CC 18 44        13 jr 9F
 242+ 94CE CB 43        12 bit 0,e
 243+ 94D0 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94D2              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94D2 C1           	pop bc
 246+ 94D3 18 D3        	jr 3B
 247+ 94D5 80           14 add b
 248+ 94D6 6F               ld l,a
 249+ 94D7 22 E7 88     	ld (Posicion_actual),hl
 250+ 94DA CD 35 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94DD 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94DF E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94E1 32 13 89         ld (Ctrl_0),a
 254+ 94E4 F1           	pop af
 255+ 94E5 18 2B        	jr 9F
 256+ 94E7
 257+ 94E7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94E7
 259+ 94E7 F5           7 push af
 260+ 94E8 3A 13 89     	ld a,(Ctrl_0)
 261+ 94EB CB 47        	bit 0,a
 262+ 94ED 20 1D        	jr nz,8F
 263+ 94EF F1           	pop af
 264+ 94F0
 265+ 94F0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94F0
 267+ 94F0 1C           	inc e
 268+ 94F1 1D               dec e
 269+ 94F2 20 07            jr nz,10F
 270+ 94F4 90           	sub b
 271+ 94F5 6F               ld l,a
 272+ 94F6 22 E7 88     	ld (Posicion_actual),hl
 273+ 94F9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94FB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94FB CB 43        10 bit 0,e
 276+ 94FD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94FF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94FF C1           	pop bc
 279+ 9500 18 A6        	jr 3B
 280+ 9502 90           16 sub b
 281+ 9503 6F               ld l,a
 282+ 9504 22 E7 88     	ld (Posicion_actual),hl
 283+ 9507 CD 35 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 950A 18 06            jr 9F
 285+ 950C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 950E 32 13 89         ld (Ctrl_0),a
 287+ 9511 F1           	pop af
 288+ 9512 C1           9 pop bc
 289+ 9513 1E 00        	ld e,0
 290+ 9515 CD 45 95         call Inicializacion
 291+ 9518 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9519 08           	ex af,af
 293+ 951A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 951B 18 8B            jr 3B
 295+ 951D
 296+ 951D              ; --------------------
 297+ 951D
 298+ 951D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 951F CD A3 96     1 call PreviousScan
 300+ 9522 10 FB            djnz 1B
 301+ 9524 22 E7 88     	ld (Posicion_actual),hl
 302+ 9527 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9528 C9           	ret
 304+ 9529
 305+ 9529              ; --------------------
 306+ 9529
 307+ 9529 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 952B CD 94 96     1 call NextScan
 309+ 952E 10 FB            djnz 1B
 310+ 9530 22 E7 88     	ld (Posicion_actual),hl
 311+ 9533 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9534 C9           	ret
 313+ 9535
 314+ 9535              ; --------------------
 315+ 9535              ;
 316+ 9535              ;	22/01/23
 317+ 9535              ;
 318+ 9535              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9535              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9535              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9535
 322+ 9535
 323+ 9535              Modificaccionne
 324+ 9535
 325+ 9535 3A F9 88     	ld a,(Cuad_objeto)
 326+ 9538 FE 02        	cp 2
 327+ 953A CC 1D 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 953D DC 1D 95         call c,Modifica_Pos_actual
 329+ 9540 C8           	ret z
 330+ 9541 CD 29 95         call Modifica_Pos_actual2
 331+ 9544 C9               ret
 332+ 9545
 333+ 9545              ; *************************************************************************************************************************************************************************************************
 334+ 9545              ;
 335+ 9545              ;	13/8/22
 336+ 9545              ;
 337+ 9545              ;	Inicializacion
 338+ 9545              ;
 339+ 9545              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9545              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9545              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9545              ;
 343+ 9545              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9545              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9545              ;	_ desaparece/aparece.
 346+ 9545
 347+ 9545              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9545              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9545              ;
 350+ 9545              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9545              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9545              ; 		   [E] ="0"
 353+ 9545
 354+ 9545              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9545
 356+ 9545 CD A7 99     Inicializacion call calcula_tercio
 357+ 9548 28 36        	jr z,primit
 358+ 954A E6 02        	and 2
 359+ 954C 20 07        	jr nz,segmit
 360+ 954E 7D           	ld a,l
 361+ 954F FE 7F        	cp $7f
 362+ 9551 38 2D        	jr c,primit
 363+ 9553 28 2B        	jr z,primit
 364+ 9555 CD B2 95     segmit call column
 365+ 9558 38 13        	jr c,tercuad
 366+ 955A 3E 04        cuarcuad ld a,4
 367+ 955C 32 F9 88     	ld (Cuad_objeto),a
 368+ 955F 21 20 48     	ld hl,$4820
 369+ 9562 22 23 89     	ld (Limite_horizontal),hl
 370+ 9565 21 25 89     	ld hl,Limite_vertical
 371+ 9568 36 0D        	ld (hl),$0d
 372+ 956A 08           	ex af,af
 373+ 956B 18 3C        	jr 1F
 374+ 956D              tercuad
 375+ 956D 3E 03        	ld a,3
 376+ 956F 32 F9 88     	ld (Cuad_objeto),a
 377+ 9572 21 20 48     	ld hl,$4820
 378+ 9575 22 23 89     	ld (Limite_horizontal),hl
 379+ 9578 21 25 89     	ld hl,Limite_vertical
 380+ 957B 36 12        	ld (hl),$12
 381+ 957D 08           	ex af,af
 382+ 957E 18 29        	jr 1F
 383+ 9580 CD B2 95     primit call column
 384+ 9583 38 13        	jr c, primcuad
 385+ 9585              segcuad
 386+ 9585 3E 02        	ld a,2
 387+ 9587 32 F9 88     	ld (Cuad_objeto),a
 388+ 958A 21 C0 4F     	ld hl,$4fc0
 389+ 958D 22 23 89     	ld (Limite_horizontal),hl
 390+ 9590 21 25 89     	ld hl,Limite_vertical
 391+ 9593 36 0D        	ld (hl),$0d
 392+ 9595 08           	ex af,af
 393+ 9596 18 11        	jr 1F
 394+ 9598              primcuad
 395+ 9598 3E 01        	ld a,1
 396+ 959A 32 F9 88     	ld (Cuad_objeto),a
 397+ 959D 21 C0 4F     	ld hl,$4fc0
 398+ 95A0 22 23 89     	ld (Limite_horizontal),hl
 399+ 95A3 21 25 89     	ld hl,Limite_vertical
 400+ 95A6 36 12        	ld (hl),$12
 401+ 95A8 08           	ex af,af
 402+ 95A9 CD 32 9D     1 call Genera_coordenadas
 403+ 95AC 21 13 89     	ld hl,Ctrl_0
 404+ 95AF CB EE        	set 5,(hl)
 405+ 95B1 C9           	ret
 406+ 95B2
 407+ 95B2              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95B2
 409+ 95B2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95B2              ;
 411+ 95B2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95B2
 413+ 95B2 7D           column ld a,l
 414+ 95B3 E6 1F        	and $1f
 415+ 95B5 FE 10         	cp $10
 416+ 95B7 C9            	ret
 417+ 95B8
 418+ 95B8              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95B8              ;
 420+ 95B8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95B8              ;
 422+ 95B8              ; 14/12/22
 423+ 95B8              ;
 424+ 95B8              ;	Modifica: A y BC.
 425+ 95B8
 426+ 95B8 3A F9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95BB E6 01        	and 1
 428+ 95BD 28 17        	jr z,1F
 429+ 95BF
 430+ 95BF              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95BF
 432+ 95BF 3A EB 88     	ld a,(Coordenada_X)
 433+ 95C2 47           	ld b,a
 434+ 95C3 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95C4 79           	ld a,c
 436+ 95C5 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95C6 38 08        	jr c,2F
 438+ 95C8 47           	ld b,a
 439+ 95C9 79           	ld a,c
 440+ 95CA 90           	sub b
 441+ 95CB 32 22 89     	ld (Columnas),a
 442+ 95CE 18 1B        	jr 4F
 443+ 95D0 79           2 ld a,c
 444+ 95D1 32 22 89     	ld (Columnas),a
 445+ 95D4 18 15        	jr 4F
 446+ 95D6
 447+ 95D6              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95D6
 449+ 95D6 3A EB 88     1 ld a,(Coordenada_X)
 450+ 95D9 81           	add c
 451+ 95DA 3D           	dec a
 452+ 95DB D6 1F        	sub $1f
 453+ 95DD 38 08        	jr c,3F
 454+ 95DF 47           	ld b,a
 455+ 95E0 79           	ld a,c
 456+ 95E1 90           	sub b
 457+ 95E2 32 22 89     	ld (Columnas),a
 458+ 95E5 18 04        	jr 4F
 459+ 95E7 79           3 ld a,c
 460+ 95E8 32 22 89     	ld (Columnas),a
 461+ 95EB D9           4 exx
 462+ 95EC 4F           	ld c,a
 463+ 95ED D9           	exx
 464+ 95EE C9            ret
 465+ 95EF
 466+ 95EF              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95EF              ;
 468+ 95EF              ;   19/7/23
 469+ 95EF              ;
 470+ 95EF              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95EF              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95EF              ;
 473+ 95EF              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95EF              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95EF              ;
 476+ 95EF              ;	DESTRUYE: HL,B Y A.
 477+ 95EF
 478+ 95EF 3A F9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95F2 FE 02        	cp 2
 480+ 95F4 38 18        	jr c,1F
 481+ 95F6 28 16        	jr z,1F
 482+ 95F8 E6 01        	and 1
 483+ 95FA 28 0D        	jr z,3F
 484+ 95FC
 485+ 95FC              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95FC
 487+ 95FC CD 42 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95FF
 489+ 95FF 7D           9 ld a,l
 490+ 9600 E6 1F        	and $1f
 491+ 9602 28 2A        	jr z,7F
 492+ 9604 2B           	dec hl
 493+ 9605 10 F8        	djnz 9B
 494+ 9607 18 25        	jr 7F
 495+ 9609
 496+ 9609              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9609
 498+ 9609 2A E7 88     3 ld hl,(Posicion_actual)
 499+ 960C 18 20        	jr 7F
 500+ 960E
 501+ 960E 28 14        1 jr z,2F
 502+ 9610
 503+ 9610              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9610
 505+ 9610 CD 42 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9613
 507+ 9613 7D           4 ld a,l
 508+ 9614 E6 1F        	and $1f
 509+ 9616 28 03        	jr z,6F
 510+ 9618 2B           	dec hl
 511+ 9619 10 F8        	djnz 4B
 512+ 961B 06 0F        6 ld b,15
 513+ 961D CD A3 96     5 call PreviousScan
 514+ 9620 10 FB        	djnz 5B
 515+ 9622 18 0A        	jr 7F
 516+ 9624
 517+ 9624              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9624
 519+ 9624 CD 42 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9627 06 0F        	ld b,15
 521+ 9629 CD A3 96     8 call PreviousScan
 522+ 962C 10 FB        	djnz 8B
 523+ 962E
 524+ 962E E5           7 push hl
 525+ 962F DD E1        	pop ix
 526+ 9631
 527+ 9631 2A E9 88     	ld hl,(Puntero_objeto)
 528+ 9634 E5           	push hl
 529+ 9635 FD E1        	pop iy
 530+ 9637
 531+ 9637              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9637
 533+ 9637 3A 13 89     	ld a,(Ctrl_0)
 534+ 963A CB 77        	bit 6,a
 535+ 963C C8           	ret z
 536+ 963D
 537+ 963D              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 963D              ; _ entidad / Amadeus´.
 539+ 963D
 540+ 963D DD 22 71 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9641
 542+ 9641 C9           	ret
 543+ 9642
 544+ 9642              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9642              ;
 546+ 9642              ;	2/1/23
 547+ 9642              ;
 548+ 9642              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9642              ;
 550+ 9642              ;	Tras esta rutina tenemos:
 551+ 9642              ;
 552+ 9642              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9642              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9642              ;
 555+ 9642              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9642
 557+ 9642 2A E7 88     Operandos ld hl,(Posicion_actual)
 558+ 9645 3A 22 89     	ld a,(Columnas)
 559+ 9648 3D           	dec a
 560+ 9649 20 01        	jr nz,1F
 561+ 964B 3C           	inc a
 562+ 964C 47           1 ld b,a
 563+ 964D C9           	ret
 564+ 964E
 565+ 964E              ; --------------------------------------------------------------------------------------------------------------------
 566+ 964E              ;
 567+ 964E              ;	3/1/23
 568+ 964E              ;
 569+ 964E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 964E              ;
 571+ 964E              ;	Destruye: A,B,HL y DE.
 572+ 964E
 573+ 964E              Define_rutina_de_impresion
 574+ 964E
 575+ 964E 3A E6 88     	ld a,(Columns)
 576+ 9651 47           	ld b,a
 577+ 9652 3A 22 89     	ld a,(Columnas)
 578+ 9655 B8           	cp b
 579+ 9656 20 0D        	jr nz,2f
 580+ 9658
 581+ 9658              ;	La entidad se imprime entera.
 582+ 9658
 583+ 9658 21 77 97     	ld hl, Indice_entidades_completas
 584+ 965B E6 01        	and 1
 585+ 965D 28 02        	jr z,1F
 586+ 965F
 587+ 965F 23           	inc hl
 588+ 9660 23           	inc hl
 589+ 9661
 590+ 9661 CD EE 8C     1 call Extrae_address
 591+ 9664 C9           	ret		;	ret
 592+ 9665
 593+ 9665              ;	La entidad no se imprime entera en pantalla.
 594+ 9665
 595+ 9665 3A F9 88     2 ld a,(Cuad_objeto)
 596+ 9668 E6 01        	and 1
 597+ 966A 28 17        	jr z,3F
 598+ 966C
 599+ 966C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 966C
 601+ 966C 21 7B 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 966F 3A E6 88     4 ld a,(Columns)
 603+ 9672 E6 01        	and 1
 604+ 9674 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9676
 606+ 9676 23           	inc hl
 607+ 9677 23           	inc hl
 608+ 9678
 609+ 9678 3A 22 89     	ld a,(Columnas)
 610+ 967B E6 01        	and 1
 611+ 967D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 967F
 613+ 967F 23           	inc hl
 614+ 9680 23           	inc hl
 615+ 9681
 616+ 9681 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9683
 618+ 9683 21 81 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9686 18 E7        	jr 4B
 620+ 9688
 621+ 9688              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9688              ;
 623+ 9688              ;	Prepara_draw
 624+ 9688              ;
 625+ 9688              ;	Es una rutina de carga.
 626+ 9688              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9688              ;
 628+ 9688              ;	FUNCIONAMIENTO:
 629+ 9688              ;
 630+ 9688              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9688              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9688              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9688              ;
 634+ 9688              ;	DESTRUYE:
 635+ 9688              ;
 636+ 9688              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9688
 638+ 9688 21 E5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 968B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 968C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 968D 4E           	ld c,(hl)
 642+ 968E 2A E7 88     	ld hl,(Posicion_actual)
 643+ 9691 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9693 C9           	ret
 645+ 9694
 646+ 9694              ;----------------------------------------------------------------------------------------------------------------
 647+ 9694              ;
 648+ 9694              ;	5/08/22
 649+ 9694              ;
 650+ 9694              ;   NextScan.
 651+ 9694              ;
 652+ 9694              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9694              ;
 654+ 9694              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9694              ;
 656+ 9694              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9694              ;
 658+ 9694              ;       DESTRUIDOS: AF y HL !!!
 659+ 9694              ;
 660+ 9694              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9694              ;
 662+ 9694
 663+ 9694 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9695 7C               ld a,h
 665+ 9696 E6 07            and 7
 666+ 9698 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9699
 668+ 9699 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 969A C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 969C 6F               ld l,a
 671+ 969D D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 969E
 673+ 969E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 969F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96A1 67               ld h,a
 676+ 96A2 C9               ret
 677+ 96A3
 678+ 96A3              ;----------------------------------------------------------------------------------------------------------------
 679+ 96A3              ;
 680+ 96A3              ;	5/08/22
 681+ 96A3              ;
 682+ 96A3              ;   PreviousScan.
 683+ 96A3              ;
 684+ 96A3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96A3              ;
 686+ 96A3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96A3              ;
 688+ 96A3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96A3              ;
 690+ 96A3              ;       DESTRUIDOS: AF y HL !!!
 691+ 96A3              ;
 692+ 96A3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96A3              ;
 694+ 96A3
 695+ 96A3 7C           PreviousScan ld a,h
 696+ 96A4 25               dec h               ; Dec H.
 697+ 96A5 E6 07            and 7
 698+ 96A7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96A8
 700+ 96A8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96A9 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96AB 6F               ld l,a
 703+ 96AC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96AD
 705+ 96AD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96AE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96B0 67               ld h,a
 708+ 96B1 C9               ret
 709+ 96B2
 710+ 96B2              ; -----------------------------------------------------------------------------------
 711+ 96B2              ;
 712+ 96B2              ;	31/7/23
 713+ 96B2              ;
 714+ 96B2              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96B2              ;	Extrae fotos de Album_de_fotos.
 716+ 96B2
 717+ 96B2              Extrae_foto_entidades
 718+ 96B2
 719+ 96B2 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96B5 7E           	ld a,(hl)
 721+ 96B6 A7           	and a
 722+ 96B7 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96B8
 724+ 96B8 3A 34 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96BB A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96BC C8           	ret z
 727+ 96BD
 728+ 96BD              ; -----------------------------------
 729+ 96BD
 730+ 96BD ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96C1 31 00 70     	ld sp,Album_de_fotos
 732+ 96C4
 733+ 96C4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96C6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96C7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96C8
 737+ 96C8 ED 73 3B 89  	ld (Stack_2),sp
 738+ 96CC ED 7B 39 89  	ld sp,(Stack)
 739+ 96D0
 740+ 96D0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96D0
 742+ 96D0 3E CD        	ld a,$cd
 743+ 96D2 32 DA 96     	ld (Imprime),a
 744+ 96D5 EB           	ex de,hl
 745+ 96D6 22 DB 96     	ld (Imprime+1),hl
 746+ 96D9 EB           	ex de,hl
 747+ 96DA
 748+ 96DA              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96DA
 750+ 96DA 00 00 00     Imprime db 0,0,0
 751+ 96DD
 752+ 96DD ED 73 39 89  	ld (Stack),sp
 753+ 96E1
 754+ 96E1 3A 34 89     	ld a,(Numero_de_malotes)
 755+ 96E4 3D           	dec a
 756+ 96E5 28 09        	jr z,1F
 757+ 96E7 32 34 89      	ld (Numero_de_malotes),a
 758+ 96EA
 759+ 96EA ED 7B 3B 89  	ld sp,(Stack_2)
 760+ 96EE 18 D4        	jr 2B
 761+ 96F0
 762+ 96F0 AF           1 xor a
 763+ 96F1 32 3B 89     	ld (Stack_2),a
 764+ 96F4
 765+ 96F4 C9           	ret
 766+ 96F5
 767+ 96F5              ; -----------------------------------------------------------------------------------
 768+ 96F5              ;
 769+ 96F5              ;	28/2/23
 770+ 96F5              ;
 771+ 96F5              ;	Pinta los disparos generados.
 772+ 96F5
 773+ 96F5              Extrae_foto_disparos
 774+ 96F5
 775+ 96F5 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96F8 7E               ld a,(hl)
 777+ 96F9 A7               and a
 778+ 96FA C8               ret z
 779+ 96FB
 780+ 96FB 3A 61 89     	ld a,(Numero_de_disparotes)
 781+ 96FE A7           	and a
 782+ 96FF C8           	ret z
 783+ 9700 ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9704 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9707
 786+ 9707 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9709 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 970A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 970B
 790+ 970B ED 73 3B 89  	ld (Stack_2),sp
 791+ 970F ED 7B 39 89  	ld sp,(Stack)
 792+ 9713
 793+ 9713              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9713
 795+ 9713 3E CD        	ld a,$cd
 796+ 9715 32 1D 97     	ld (Imprime2),a
 797+ 9718 EB           	ex de,hl
 798+ 9719 22 1E 97     	ld (Imprime2+1),hl
 799+ 971C EB           	ex de,hl
 800+ 971D
 801+ 971D              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 971D
 803+ 971D 00 00 00     Imprime2 db 0,0,0
 804+ 9720
 805+ 9720 3A 61 89     	ld a,(Numero_de_disparotes)
 806+ 9723 3D           	dec a
 807+ 9724 28 09        	jr z,1F
 808+ 9726 32 61 89      	ld (Numero_de_disparotes),a
 809+ 9729
 810+ 9729 ED 7B 3B 89  	ld sp,(Stack_2)
 811+ 972D 18 D8        	jr 2B
 812+ 972F
 813+ 972F AF           1 xor a
 814+ 9730 32 3B 89     	ld (Stack_2),a
 815+ 9733 C9           	ret
 816+ 9734
 817+ 9734              ; -----------------------------------------------------------------------------------
 818+ 9734              ;
 819+ 9734              ;	4/9/23
 820+ 9734              ;
 821+ 9734              ;	Rutina principal de pintado de Amadeus.
 822+ 9734              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9734
 824+ 9734              Extrae_foto_Amadeus
 825+ 9734
 826+ 9734              ;	jr $
 827+ 9734
 828+ 9734 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 829+ 9737 7E           	ld a,(hl)
 830+ 9738 A7           	and a
 831+ 9739 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 973A
 833+ 973A 3A 34 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 973D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 973E C8           	ret z
 836+ 973F
 837+ 973F              ; -----------------------------------
 838+ 973F
 839+ 973F ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9743 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 841+ 9746
 842+ 9746 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9748 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9749 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 974A
 846+ 974A ED 73 3B 89  	ld (Stack_2),sp
 847+ 974E ED 7B 39 89  	ld sp,(Stack)
 848+ 9752
 849+ 9752              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9752
 851+ 9752 3E CD        	ld a,$cd
 852+ 9754 32 5C 97     	ld (Imprime_Amadeus),a
 853+ 9757 EB           	ex de,hl
 854+ 9758 22 5D 97     	ld (Imprime_Amadeus+1),hl
 855+ 975B EB           	ex de,hl
 856+ 975C
 857+ 975C              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 975C
 859+ 975C 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 975F
 861+ 975F ED 73 39 89  	ld (Stack),sp
 862+ 9763
 863+ 9763 3A 34 89     	ld a,(Numero_de_malotes)
 864+ 9766 3D           	dec a
 865+ 9767 28 09        	jr z,1F
 866+ 9769 32 34 89      	ld (Numero_de_malotes),a
 867+ 976C
 868+ 976C ED 7B 3B 89  	ld sp,(Stack_2)
 869+ 9770 18 D4        	jr 2B
 870+ 9772
 871+ 9772 AF           1 xor a
 872+ 9773 32 3B 89     	ld (Stack_2),a
 873+ 9776
 874+ 9776 C9           	ret
# file closed: Draw_XOR.asm
1565  9777              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9777              ;   índices de Rutinas de impresión.
   2+ 9777
   3+ 9777 87 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9779 B4 97            defw Pinta_Amadeus_3x2
   5+ 977B
   6+ 977B 0A 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 977D AA 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 977F 5E 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9781
  10+ 9781 34 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9783 38 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9785 EC 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9787
  14+ 9787
  15+ 9787              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9787              ;
  17+ 9787              ;   12/12/22
  18+ 9787              ;
  19+ 9787              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9787              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9787              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9787              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9787              ;
  24+ 9787              ;   Modifica: DE y HL.
  25+ 9787
  26+ 9787 ED 73 39 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 978B FD F9        	ld sp,iy
  28+ 978D 06 10            ld b,16
  29+ 978F D1           1 pop de
  30+ 9790 7B               ld a,e
  31+ 9791 AE               xor (hl)
  32+ 9792 77           	ld (hl),a
  33+ 9793 23           	inc hl
  34+ 9794 7A               ld a,d
  35+ 9795 AE               xor (hl)
  36+ 9796 77           	ld (hl),a
  37+ 9797 2B           	dec hl
  38+ 9798 24           	inc h
  39+ 9799 7C               ld a,h
  40+ 979A E6 07            and 7
  41+ 979C 20 0A            jr nz,2F
  42+ 979E 7D               ld a,l
  43+ 979F C6 20            add a,$20
  44+ 97A1 6F               ld l,a
  45+ 97A2 38 04            jr c,2F
  46+ 97A4 7C               ld a,h
  47+ 97A5 D6 08            sub 8
  48+ 97A7 67               ld h,a
  49+ 97A8 7C           2 ld a,h
  50+ 97A9 FE 58            cp $58
  51+ 97AB 28 02            jr z,3F
  52+ 97AD 10 E0            djnz 1B
  53+ 97AF ED 7B 39 89  3 ld sp,(Stack)
  54+ 97B3 C9           	ret
  55+ 97B4
  56+ 97B4 ED 73 39 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97B8 FD F9        	ld sp,iy
  58+ 97BA 06 08            ld b,8
  59+ 97BC D1           1 pop de
  60+ 97BD 7B               ld a,e
  61+ 97BE AE               xor (hl)
  62+ 97BF 77           	ld (hl),a
  63+ 97C0 23           	inc hl
  64+ 97C1 7A               ld a,d
  65+ 97C2 AE               xor (hl)
  66+ 97C3 77           	ld (hl),a
  67+ 97C4 23           	inc hl
  68+ 97C5 D1           	pop de
  69+ 97C6 7B               ld a,e
  70+ 97C7 AE               xor (hl)
  71+ 97C8 77           	ld (hl),a
  72+ 97C9 2B           	dec hl
  73+ 97CA 2B           	dec hl
  74+ 97CB 24           	inc h
  75+ 97CC 7C               ld a,h
  76+ 97CD E6 07            and 7
  77+ 97CF 20 0A            jr nz,2F
  78+ 97D1 7D               ld a,l
  79+ 97D2 C6 20            add a,$20
  80+ 97D4 6F               ld l,a
  81+ 97D5 38 04            jr c,2F
  82+ 97D7 7C               ld a,h
  83+ 97D8 D6 08            sub 8
  84+ 97DA 67               ld h,a
  85+ 97DB 7C           2 ld a,h
  86+ 97DC FE 58            cp $58
  87+ 97DE 28 25            jr z,4F
  88+ 97E0 7A               ld a,d
  89+ 97E1 AE               xor (hl)
  90+ 97E2 77               ld (hl),a
  91+ 97E3 D1           	pop de
  92+ 97E4 23           	inc hl
  93+ 97E5 7B               ld a,e
  94+ 97E6 AE               xor (hl)
  95+ 97E7 77           	ld (hl),a
  96+ 97E8 23           	inc hl
  97+ 97E9 7A               ld a,d
  98+ 97EA AE               xor (hl)
  99+ 97EB 77           	ld (hl),a
 100+ 97EC 2B           	dec hl
 101+ 97ED 2B           	dec hl
 102+ 97EE 24           	inc h
 103+ 97EF 7C               ld a,h
 104+ 97F0 E6 07            and 7
 105+ 97F2 20 0A            jr nz,3F
 106+ 97F4 7D               ld a,l
 107+ 97F5 C6 20            add a,$20
 108+ 97F7 6F               ld l,a
 109+ 97F8 38 04            jr c,3F
 110+ 97FA 7C               ld a,h
 111+ 97FB D6 08            sub 8
 112+ 97FD 67               ld h,a
 113+ 97FE 7C           3 ld a,h
 114+ 97FF FE 58            cp $58
 115+ 9801 28 02            jr z,4F
 116+ 9803 10 B7            djnz 1B
 117+ 9805 ED 7B 39 89  4 ld sp,(Stack)
 118+ 9809 C9           	ret
 119+ 980A
 120+ 980A              ; ---------------------------------------------------
 121+ 980A
 122+ 980A ED 73 39 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 980E FD F9        	ld sp,iy
 124+ 9810
 125+ 9810              ; >>>
 126+ 9810
 127+ 9810 06 10            ld b,16
 128+ 9812 D1           1 pop de
 129+ 9813 7A           	ld a,d
 130+ 9814 AE           	xor (hl)
 131+ 9815 77           	ld (hl),a
 132+ 9816 24           	inc h
 133+ 9817 7C               ld a,h
 134+ 9818 E6 07            and 7
 135+ 981A 20 0C            jr nz,2F
 136+ 981C 7D               ld a,l
 137+ 981D C6 20            add a,$20
 138+ 981F 6F               ld l,a
 139+ 9820 38 06            jr c,2F
 140+ 9822 7C               ld a,h
 141+ 9823 D6 08            sub 8
 142+ 9825 67               ld h,a
 143+ 9826 18 00            jr 2F
 144+ 9828 7C           2 ld a,h
 145+ 9829 FE 58            cp $58
 146+ 982B 28 02            jr z,3F
 147+ 982D 10 E3            djnz 1B
 148+ 982F ED 7B 39 89  3 ld sp,(Stack)
 149+ 9833 C9           	ret
 150+ 9834
 151+ 9834 ED 73 39 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9838 FD F9        	ld sp,iy
 153+ 983A
 154+ 983A              ; >>>
 155+ 983A
 156+ 983A 06 10            ld b,16
 157+ 983C D1           1 pop de
 158+ 983D 7B           	ld a,e
 159+ 983E AE           	xor (hl)
 160+ 983F 77           	ld (hl),a
 161+ 9840 24           	inc h
 162+ 9841 7C               ld a,h
 163+ 9842 E6 07            and 7
 164+ 9844 20 0C            jr nz,2F
 165+ 9846 7D               ld a,l
 166+ 9847 C6 20            add a,$20
 167+ 9849 6F               ld l,a
 168+ 984A 38 06            jr c,2F
 169+ 984C 7C               ld a,h
 170+ 984D D6 08            sub 8
 171+ 984F 67               ld h,a
 172+ 9850 18 00            jr 2F
 173+ 9852 7C           2 ld a,h
 174+ 9853 FE 58            cp $58
 175+ 9855 28 02            jr z,3F
 176+ 9857 10 E3            djnz 1B
 177+ 9859 ED 7B 39 89  3 ld sp,(Stack)
 178+ 985D C9           	ret
 179+ 985E
 180+ 985E              ; ---------------------------------------------------
 181+ 985E
 182+ 985E ED 73 39 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9862 FD F9        	ld sp,iy
 184+ 9864 06 08            ld b,8
 185+ 9866 D1           1 pop de
 186+ 9867 7A           	ld a,d
 187+ 9868 AE           	xor (hl)
 188+ 9869 77           	ld (hl),a
 189+ 986A 23           	inc hl
 190+ 986B D1           	pop de
 191+ 986C 7B           	ld a,e
 192+ 986D AE           	xor (hl)
 193+ 986E 77           	ld (hl),a
 194+ 986F 2B           	dec hl
 195+ 9870 24            	inc h
 196+ 9871 7C               ld a,h
 197+ 9872 E6 07            and 7
 198+ 9874 20 0A            jr nz,2F
 199+ 9876 7D               ld a,l
 200+ 9877 C6 20            add a,$20
 201+ 9879 6F               ld l,a
 202+ 987A 38 04            jr c,2F
 203+ 987C 7C               ld a,h
 204+ 987D D6 08            sub 8
 205+ 987F 67               ld h,a
 206+ 9880 7C           2 ld a,h
 207+ 9881 FE 58            cp $58
 208+ 9883 28 20            jr z,4F
 209+ 9885 D1               pop de
 210+ 9886 7B           	ld a,e
 211+ 9887 AE           	xor (hl)
 212+ 9888 77           	ld (hl),a
 213+ 9889 23           	inc hl
 214+ 988A 7A           	ld a,d
 215+ 988B AE           	xor (hl)
 216+ 988C 77           	ld (hl),a
 217+ 988D 2B           	dec hl
 218+ 988E 24           	inc h
 219+ 988F 7C               ld a,h
 220+ 9890 E6 07            and 7
 221+ 9892 20 0A            jr nz,3F
 222+ 9894 7D               ld a,l
 223+ 9895 C6 20            add a,$20
 224+ 9897 6F               ld l,a
 225+ 9898 38 04            jr c,3F
 226+ 989A 7C               ld a,h
 227+ 989B D6 08            sub 8
 228+ 989D 67               ld h,a
 229+ 989E 7C           3 ld a,h
 230+ 989F FE 58            cp $58
 231+ 98A1 28 02            jr z,4F
 232+ 98A3 10 C1            djnz 1B
 233+ 98A5 ED 7B 39 89  4 ld sp,(Stack)
 234+ 98A9 C9           	ret
 235+ 98AA
 236+ 98AA ED 73 39 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98AE FD F9        	ld sp,iy
 238+ 98B0 06 08            ld b,8
 239+ 98B2 D1           1 pop de
 240+ 98B3 D1           	pop de
 241+ 98B4 7B           	ld a,e
 242+ 98B5 AE           	xor (hl)
 243+ 98B6 77           	ld (hl),a
 244+ 98B7 24            	inc h
 245+ 98B8 7C               ld a,h
 246+ 98B9 E6 07            and 7
 247+ 98BB 20 0A            jr nz,2F
 248+ 98BD 7D               ld a,l
 249+ 98BE C6 20            add a,$20
 250+ 98C0 6F               ld l,a
 251+ 98C1 38 04            jr c,2F
 252+ 98C3 7C               ld a,h
 253+ 98C4 D6 08            sub 8
 254+ 98C6 67               ld h,a
 255+ 98C7 7C           2 ld a,h
 256+ 98C8 FE 58            cp $58
 257+ 98CA 28 1B            jr z,4F
 258+ 98CC D1               pop de
 259+ 98CD 7A           	ld a,d
 260+ 98CE AE           	xor (hl)
 261+ 98CF 77           	ld (hl),a
 262+ 98D0 24           	inc h
 263+ 98D1 7C               ld a,h
 264+ 98D2 E6 07            and 7
 265+ 98D4 20 0A            jr nz,3F
 266+ 98D6 7D               ld a,l
 267+ 98D7 C6 20            add a,$20
 268+ 98D9 6F               ld l,a
 269+ 98DA 38 04            jr c,3F
 270+ 98DC 7C               ld a,h
 271+ 98DD D6 08            sub 8
 272+ 98DF 67               ld h,a
 273+ 98E0 7C           3 ld a,h
 274+ 98E1 FE 58            cp $58
 275+ 98E3 28 02            jr z,4F
 276+ 98E5 10 CB            djnz 1B
 277+ 98E7 ED 7B 39 89  4 ld sp,(Stack)
 278+ 98EB C9           	ret
 279+ 98EC
 280+ 98EC ED 73 39 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98F0 FD F9        	ld sp,iy
 282+ 98F2 06 08            ld b,8
 283+ 98F4 D1           1 pop de
 284+ 98F5 7B           	ld a,e
 285+ 98F6 AE           	xor (hl)
 286+ 98F7 77           	ld (hl),a
 287+ 98F8 23           	inc hl
 288+ 98F9 7A           	ld a,d
 289+ 98FA AE           	xor (hl)
 290+ 98FB 77           	ld (hl),a
 291+ 98FC 2B           	dec hl
 292+ 98FD 24             	inc h
 293+ 98FE 7C               ld a,h
 294+ 98FF E6 07            and 7
 295+ 9901 20 0A            jr nz,2F
 296+ 9903 7D               ld a,l
 297+ 9904 C6 20            add a,$20
 298+ 9906 6F               ld l,a
 299+ 9907 38 04            jr c,2F
 300+ 9909 7C               ld a,h
 301+ 990A D6 08            sub 8
 302+ 990C 67               ld h,a
 303+ 990D 7C           2 ld a,h
 304+ 990E FE 58            cp $58
 305+ 9910 28 21            jr z,4F
 306+ 9912 D1               pop de
 307+ 9913 7A           	ld a,d
 308+ 9914 AE           	xor (hl)
 309+ 9915 77           	ld (hl),a
 310+ 9916 23           	inc hl
 311+ 9917 D1               pop de
 312+ 9918 7B           	ld a,e
 313+ 9919 AE           	xor (hl)
 314+ 991A 77           	ld (hl),a
 315+ 991B 2B           	dec hl
 316+ 991C 24           	inc h
 317+ 991D 7C               ld a,h
 318+ 991E E6 07            and 7
 319+ 9920 20 0A            jr nz,3F
 320+ 9922 7D               ld a,l
 321+ 9923 C6 20            add a,$20
 322+ 9925 6F               ld l,a
 323+ 9926 38 04            jr c,3F
 324+ 9928 7C               ld a,h
 325+ 9929 D6 08            sub 8
 326+ 992B 67               ld h,a
 327+ 992C 7C           3 ld a,h
 328+ 992D FE 58            cp $58
 329+ 992F 28 02            jr z,4F
 330+ 9931 10 C1            djnz 1B
 331+ 9933 ED 7B 39 89  4 ld sp,(Stack)
 332+ 9937 C9           	ret
 333+ 9938
 334+ 9938 ED 73 39 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 993C FD F9        	ld sp,iy
 336+ 993E 06 08            ld b,8
 337+ 9940 D1           1 pop de
 338+ 9941 7B           	ld a,e
 339+ 9942 AE           	xor (hl)
 340+ 9943 77           	ld (hl),a
 341+ 9944 24            	inc h
 342+ 9945 7C               ld a,h
 343+ 9946 E6 07            and 7
 344+ 9948 20 0A            jr nz,2F
 345+ 994A 7D               ld a,l
 346+ 994B C6 20            add a,$20
 347+ 994D 6F               ld l,a
 348+ 994E 38 04            jr c,2F
 349+ 9950 7C               ld a,h
 350+ 9951 D6 08            sub 8
 351+ 9953 67               ld h,a
 352+ 9954 7C           2 ld a,h
 353+ 9955 FE 58            cp $58
 354+ 9957 28 1C            jr z,4F
 355+ 9959 D1               pop de
 356+ 995A 7A           	ld a,d
 357+ 995B AE           	xor (hl)
 358+ 995C 77           	ld (hl),a
 359+ 995D 24           	inc h
 360+ 995E 7C               ld a,h
 361+ 995F E6 07            and 7
 362+ 9961 20 0A            jr nz,3F
 363+ 9963 7D               ld a,l
 364+ 9964 C6 20            add a,$20
 365+ 9966 6F               ld l,a
 366+ 9967 38 04            jr c,3F
 367+ 9969 7C               ld a,h
 368+ 996A D6 08            sub 8
 369+ 996C 67               ld h,a
 370+ 996D 7C           3 ld a,h
 371+ 996E FE 58            cp $58
 372+ 9970 28 03            jr z,4F
 373+ 9972 D1               pop de
 374+ 9973 10 CB            djnz 1B
 375+ 9975 ED 7B 39 89  4 ld sp,(Stack)
 376+ 9979 C9           	ret
 377+ 997A
 378+ 997A              ; ---------------------------------------------------
 379+ 997A              ;
 380+ 997A              ;   27/02/23
 381+ 997A              ;
 382+ 997A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 997A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 997A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 997A
 386+ 997A ED 73 39 89  Pinta_Disparo ld (Stack),sp
 387+ 997E FD F9            ld sp,iy
 388+ 9980 06 03            ld b,3
 389+ 9982 D1           1 pop de
 390+ 9983 7B               ld a,e
 391+ 9984 AE               xor (hl)
 392+ 9985 77               ld (hl),a
 393+ 9986 23               inc hl
 394+ 9987 7A               ld a,d
 395+ 9988 AE               xor (hl)
 396+ 9989 77               ld (hl),a
 397+ 998A 2B               dec hl
 398+ 998B
 399+ 998B 24               inc h
 400+ 998C 7C               ld a,h
 401+ 998D E6 07            and 7
 402+ 998F 20 0A            jr nz,2F
 403+ 9991 7D               ld a,l
 404+ 9992 C6 20            add a,$20
 405+ 9994 6F               ld l,a
 406+ 9995 38 04            jr c,2F
 407+ 9997 7C               ld a,h
 408+ 9998 D6 08            sub 8
 409+ 999A 67               ld h,a
 410+ 999B 7C           2 ld a,h
 411+ 999C FE 58            cp $58
 412+ 999E 28 02            jr z,3F
 413+ 99A0
 414+ 99A0 10 E0            djnz 1B
 415+ 99A2 ED 7B 39 89  3 ld sp,(Stack)
 416+ 99A6 C9               ret
 417+ 99A7
# file closed: Rutinas_de_impresion_sprites.asm
1566  99A7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99A7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99A7              ;
   3+ 99A7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99A7              ;
   5+ 99A7              ; *****************************************************************************************************************************************************************************************
   6+ 99A7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99A7
   8+ 99A7 7C           calcula_tercio ld a,h
   9+ 99A8 E6 18        	and $18
  10+ 99AA CB 2F        	sra a
  11+ 99AC CB 2F        	sra a
  12+ 99AE CB 2F        	sra a
  13+ 99B0 C9           	ret
  14+ 99B1
# file closed: calcula_tercio.asm
1567  99B1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B1              ;
   3+ 99B1              ;
   4+ 99B1              ;	CLS.
   5+ 99B1              ;
   6+ 99B1              ;	Limpia la pantalla y define sus atributos.
   7+ 99B1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B1              ;
   9+ 99B1              ;	COLORES: 0 ..... NEGRO
  10+ 99B1              ;    		 1 ..... AZUL
  11+ 99B1              ; 			 2 ..... ROJO
  12+ 99B1              ;			 3 ..... MAGENTA
  13+ 99B1              ; 			 4 ..... VERDE
  14+ 99B1              ; 			 5 ..... CIAN
  15+ 99B1              ;			 6 ..... AMARILLO
  16+ 99B1              ; 			 7 ..... BLANCO
  17+ 99B1              ;
  18+ 99B1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B1              ;
  20+ 99B1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B1
  22+ 99B1
  23+ 99B1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B4 11 01 40     	LD DE,$4001
  25+ 99B7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99BA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99BC ED B0        	LDIR
  28+ 99BE 01 FF 02     	LD BC,767
  29+ 99C1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C2 ED B0        	LDIR
  31+ 99C4 C9           	ret
  32+ 99C5
# file closed: Cls.asm
1568  99C5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C5              ; ******************************************************************************************************************************************************************************************
   2+ 99C5              ;
   3+ 99C5              ;   20/05/23
   4+ 99C5              ;
   5+ 99C5              ;	Recompone_posicion_inicio
   6+ 99C5              ;
   7+ 99C5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99C5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99C5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99C5              ;	_ a una u otra rutina.
  11+ 99C5
  12+ 99C5              Recompone_posicion_inicio
  13+ 99C5
  14+ 99C5 2A F7 88     	ld hl,(Posicion_inicio)
  15+ 99C8 7D           	ld a,l
  16+ 99C9 E6 1F        	and $1f
  17+ 99CB 28 16        	jr z,1F
  18+ 99CD
  19+ 99CD FE 1F        	cp $1f
  20+ 99CF 28 0D        	jr z,3F
  21+ 99D1
  22+ 99D1 21 26 89     	ld hl,Ctrl_2
  23+ 99D4 CB C6        	set 0,(hl)
  24+ 99D6 2A E9 88     	ld hl,(Puntero_objeto)
  25+ 99D9 22 29 89     	ld (Repone_puntero_objeto),hl
  26+ 99DC 18 08        	jr 2F
  27+ 99DE
  28+ 99DE CD 7F 9B     3 call Mov_left
  29+ 99E1 18 03        	jr 2F
  30+ 99E3
  31+ 99E3 CD 61 9A     1 call Mov_right
  32+ 99E6 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99E9 22 E9 88     	ld (Puntero_objeto),hl
  34+ 99EC C9           	ret
  35+ 99ED
  36+ 99ED              ; ******************************************************************************************************************************************************************************************
  37+ 99ED              ;
  38+ 99ED              ;   27/05/23
  39+ 99ED              ;
  40+ 99ED              ;	Mov_down
  41+ 99ED              ;
  42+ 99ED              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99ED              ;
  44+ 99ED              ;
  45+ 99ED              Mov_down
  46+ 99ED
  47+ 99ED CD 4F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99F0              ;																	; _ repone (Puntero_objeto).
  49+ 99F0 21 13 89     	ld hl,Ctrl_0
  50+ 99F3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99F5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99F5              ; 																	; _ en el caso de que no lo haya.
  53+ 99F5 3A FD 88     	ld a,(Vel_down)
  54+ 99F8 47           	ld b,a
  55+ 99F9 2A E7 88         ld hl,(Posicion_actual)
  56+ 99FC CD A7 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99FF E6 02        	and 2
  58+ 9A01 28 0F        	jr z,1F
  59+ 9A03
  60+ 9A03              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A03              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A03
  63+ 9A03 7C           	ld a,h
  64+ 9A04 FE 57        	cp $57
  65+ 9A06 20 0A        	jr nz,1F
  66+ 9A08
  67+ 9A08 7D           	ld a,l
  68+ 9A09 C6 20        	add $20
  69+ 9A0B 30 05        	jr nc,1F
  70+ 9A0D
  71+ 9A0D              ; ------------------------------
  72+ 9A0D              ;	call Reaparece_arriba
  73+ 9A0D CD 0C 9D     	call Reinicio
  74+ 9A10              ; ------------------------------
  75+ 9A10
  76+ 9A10 18 08        	jr 3F
  77+ 9A12 CD 94 96     1 call NextScan
  78+ 9A15 22 E7 88     	ld (Posicion_actual),hl
  79+ 9A18 10 E2            djnz 2B
  80+ 9A1A CD 32 9D     3 call Genera_coordenadas
  81+ 9A1D C9           	ret
  82+ 9A1E
  83+ 9A1E              ; ******************************************************************************************************************************************************************************************
  84+ 9A1E              ;
  85+ 9A1E              ;   27/05/23
  86+ 9A1E              ;
  87+ 9A1E              ;	Mov_up
  88+ 9A1E              ;
  89+ 9A1E              ; 	Mueve el Sprite hacia arriba.
  90+ 9A1E              ;
  91+ 9A1E              ;
  92+ 9A1E              Mov_up
  93+ 9A1E
  94+ 9A1E CD 4F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A21              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A21 21 13 89     	ld hl,Ctrl_0
  97+ 9A24 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A26              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A26              ; 																		; _ en el caso de que no lo haya.
 100+ 9A26 3A FC 88     	ld a,(Vel_up)
 101+ 9A29 47           	ld b,a
 102+ 9A2A 2A E7 88     	ld hl,(Posicion_actual)
 103+ 9A2D CD A7 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A30 A7           	and a
 105+ 9A31 20 10        	jr nz,1F
 106+ 9A33
 107+ 9A33              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A33              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A33
 110+ 9A33 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A34 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A36 20 0B            jr nz,1F
 113+ 9A38 7D               ld a,l
 114+ 9A39 D6 20            sub $20
 115+ 9A3B 30 06            jr nc,1F
 116+ 9A3D 25               dec h
 117+ 9A3E
 118+ 9A3E              ; -----------------------------
 119+ 9A3E CD ED 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A41              ;	call Reinicio
 121+ 9A41              ; -----------------------------
 122+ 9A41
 123+ 9A41 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A43 CD A3 96     1 call PreviousScan
 125+ 9A46 22 E7 88     	ld (Posicion_actual),hl
 126+ 9A49 10 E2            djnz 3B
 127+ 9A4B CD 32 9D     2 call Genera_coordenadas
 128+ 9A4E C9           	ret
 129+ 9A4F
 130+ 9A4F              ; -----------------------------
 131+ 9A4F              ;
 132+ 9A4F              ;	27/5/23
 133+ 9A4F              ;
 134+ 9A4F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A4F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A4F              ;
 137+ 9A4F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A4F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A4F              ;
 140+ 9A4F              ;	Modifica: A y (Puntero_objeto).
 141+ 9A4F
 142+ 9A4F 3A 26 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A52 CB 47        	bit 0,a
 144+ 9A54 C8           	ret z
 145+ 9A55 CB 87        	res 0,a
 146+ 9A57 32 26 89     	ld (Ctrl_2),a
 147+ 9A5A 2A 29 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A5D 22 E9 88     	ld (Puntero_objeto),hl
 149+ 9A60 C9           	ret
 150+ 9A61
 151+ 9A61              ; ******************************************************************************************************************************************************************************************
 152+ 9A61              ;
 153+ 9A61              ;	19/10/22
 154+ 9A61              ;
 155+ 9A61              ;	Mov_right.
 156+ 9A61              ;
 157+ 9A61              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A61              ;
 159+ 9A61
 160+ 9A61 21 13 89     Mov_right ld hl,Ctrl_0
 161+ 9A64 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A66              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A66              ; 																	; _ en el caso de que no lo haya.
 164+ 9A66 3A 13 89     	ld a,(Ctrl_0)
 165+ 9A69 CB 77        	bit 6,a
 166+ 9A6B 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A6D
 168+ 9A6D CD 9B 9C     	call Stop_Amadeus_right
 169+ 9A70 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A71 18 4D        	jr 8F
 171+ 9A73
 172+ 9A73 3A EB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A76 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A78 20 46        	jr nz,8F
 175+ 9A7A
 176+ 9A7A 3A ED 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A7D A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A7E 28 40        	jr z,8F
 179+ 9A80
 180+ 9A80              ; ---------- ---------- ----------
 181+ 9A80              ;
 182+ 9A80              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A80
 184+ 9A80 3A FB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A83 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A85 28 11        	jr z,1F
 187+ 9A87 38 06        	jr c,6F
 188+ 9A89 FE 04        	cp 4
 189+ 9A8B 28 14        	jr z,7F
 190+ 9A8D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A8F
 192+ 9A8F              ; ---------- ---------- ----------
 193+ 9A8F              ;
 194+ 9A8F              ; Perfiles de velocidad
 195+ 9A8F              ;
 196+ 9A8F
 197+ 9A8F 3A ED 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A92 FE FE        	cp $fe
 199+ 9A94 20 2A        	jr nz,8F
 200+ 9A96 18 10        	jr 3F
 201+ 9A98 3A ED 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A9B FE FD        	cp $fd
 203+ 9A9D 20 21        	jr nz,8F
 204+ 9A9F 18 07        	jr 3F
 205+ 9AA1 3A ED 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AA4 FE FB        	cp $fb
 207+ 9AA6 20 18        	jr nz,8F
 208+ 9AA8
 209+ 9AA8              ; ---------- ---------- ----------
 210+ 9AA8
 211+ 9AA8              3
 212+ 9AA8 CD DB 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AAB              ;	call Reinicio
 214+ 9AAB
 215+ 9AAB              ; ---------- ---------- ----------
 216+ 9AAB              ;
 217+ 9AAB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AAB
 219+ 9AAB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AAD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AAE CD C7 9A     	call DESPLZ_DER
 222+ 9AB1 C1           	pop bc
 223+ 9AB2 10 F9        	djnz 5B
 224+ 9AB4 2A E7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AB7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AB8 22 E7 88     	ld (Posicion_actual),hl
 227+ 9ABB CD 32 9D     	call Genera_coordenadas
 228+ 9ABE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AC0
 230+ 9AC0              ; ---------- ---------- ----------
 231+ 9AC0
 232+ 9AC0 2A E7 88     8 ld hl,(Posicion_actual)
 233+ 9AC3 CD C7 9A     	call DESPLZ_DER
 234+ 9AC6 C9           2 ret
 235+ 9AC7
 236+ 9AC7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AC7              ;
 238+ 9AC7              ;	22/9/22
 239+ 9AC7              ;
 240+ 9AC7
 241+ 9AC7 CD D6 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ACA CD 22 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9ACD CD 4B 9B         call Ciclo_completo
 244+ 9AD0 21 13 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AD3 CB FE        	set 7,(hl)
 246+ 9AD5 C9           	ret
 247+ 9AD6
 248+ 9AD6              ; ******************************************************************************************************************************************************************************************
 249+ 9AD6              ;	15/02/23
 250+ 9AD6              ;
 251+ 9AD6
 252+ 9AD6 3A FB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AD9 47           	ld b,a
 254+ 9ADA 2A F3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9ADD 23           1 inc hl
 256+ 9ADE 23           	inc hl
 257+ 9ADF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AE1 22 F3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AE4 CD EE 8C     	call Extrae_address
 260+ 9AE7 22 E9 88     	ld (Puntero_objeto),hl
 261+ 9AEA
 262+ 9AEA              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AEA
 264+ 9AEA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AEA              ; Cuántos movimientos hemos hecho ??
 266+ 9AEA              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AEA
 268+ 9AEA 2A EF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AED EB           	ex de,hl
 270+ 9AEE A7           	and a
 271+ 9AEF ED 52        	sbc hl,de
 272+ 9AF1 CB 3D        	srl l
 273+ 9AF3 3E 08        6 ld a,8
 274+ 9AF5 95           	sub l
 275+ 9AF6 30 1E        	jr nc,3F
 276+ 9AF8
 277+ 9AF8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AF8              ; B="0".
 279+ 9AF8
 280+ 9AF8 04           4 inc b
 281+ 9AF9 3C           	inc a
 282+ 9AFA 20 FC        	jr nz,4B
 283+ 9AFC 78           	ld a,b
 284+ 9AFD 08           	ex af,af
 285+ 9AFE 2A EF 88     	ld hl,(Indice_Sprite_der)
 286+ 9B01 23           5 inc hl
 287+ 9B02 23           	inc hl
 288+ 9B03 10 FC        	djnz 5B
 289+ 9B05 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B08 CD EE 8C     	call Extrae_address
 291+ 9B0B 22 E9 88     	ld (Puntero_objeto),hl
 292+ 9B0E
 293+ 9B0E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B0E              ; _(Posicion_actual).
 295+ 9B0E
 296+ 9B0E 21 E7 88     	ld hl,Posicion_actual
 297+ 9B11 34           	inc (hl)
 298+ 9B12 08               ex af,af
 299+ 9B13 6F           	ld l,a
 300+ 9B14 18 DD        	jr 6B
 301+ 9B16
 302+ 9B16              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B16
 304+ 9B16 47           3 ld b,a
 305+ 9B17 2A F1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B1A 23           2 inc hl
 307+ 9B1B 23           	inc hl
 308+ 9B1C 10 FC        	djnz 2B
 309+ 9B1E 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B21 C9           8 ret
 311+ 9B22
 312+ 9B22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B22              ;
 314+ 9B22              ;	24/7/22
 315+ 9B22              ;
 316+ 9B22              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B22              ;
 318+ 9B22              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B22              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B22              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B22
 322+ 9B22 3A ED 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B25 A7           	and a
 324+ 9B26 20 1F        	jr nz,1F
 325+ 9B28 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B2A 32 ED 88         ld (CTRL_DESPLZ),a
 327+ 9B2D
 328+ 9B2D 21 E6 88     	ld hl,Columns
 329+ 9B30 34           	inc (hl)
 330+ 9B31 3A F9 88     	ld a,(Cuad_objeto)
 331+ 9B34 E6 01        	and 1
 332+ 9B36 28 0F        	jr z,1F
 333+ 9B38 2A E7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B3B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B3C 22 E7 88     	ld (Posicion_actual),hl
 336+ 9B3F CD 32 9D     	call Genera_coordenadas
 337+ 9B42 CD A7 9C     	call Inc_CTRL_DESPLZ
 338+ 9B45 18 03        	jr 2F
 339+ 9B47 CD A7 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B4A C9           2 ret
 341+ 9B4B
 342+ 9B4B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B4B              ;
 344+ 9B4B              ;	24/7/22
 345+ 9B4B              ;
 346+ 9B4B              ;	Ciclo_completo.
 347+ 9B4B              ;
 348+ 9B4B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B4B              ;
 350+ 9B4B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B4B              ; 	Decrementamos (Columns).
 352+ 9B4B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B4B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B4B
 355+ 9B4B
 356+ 9B4B 3A ED 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B4E FE FF        	cp $ff
 358+ 9B50 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B52 E6 F0        	and $f0
 360+ 9B54 20 28        	jr nz,3F
 361+ 9B56
 362+ 9B56              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B56
 364+ 9B56 3A ED 88     	ld a,(CTRL_DESPLZ)
 365+ 9B59 47           	ld b,a
 366+ 9B5A 3E F8        	ld a,$f8
 367+ 9B5C 80           	add b
 368+ 9B5D 32 ED 88     	ld (CTRL_DESPLZ),a
 369+ 9B60 18 1C        	jr 3F
 370+ 9B62 21 E6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B65 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B66 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B67 32 ED 88     	ld (CTRL_DESPLZ),a
 374+ 9B6A 3A F9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B6D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B6F 20 0A        	jr nz,2F
 377+ 9B71 2A E7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B74 23           	inc hl
 379+ 9B75 22 E7 88     	ld (Posicion_actual),hl
 380+ 9B78 CD 32 9D     	call Genera_coordenadas
 381+ 9B7B
 382+ 9B7B              ; Inicia el puntero de Sprite.
 383+ 9B7B
 384+ 9B7B CD 05 8D     2 call Inicia_puntero_objeto_der
 385+ 9B7E C9           3 ret
 386+ 9B7F
 387+ 9B7F              ; ******************************************************************************************************************************************************************************************
 388+ 9B7F              ;
 389+ 9B7F              ;	15/02/23
 390+ 9B7F              ;
 391+ 9B7F              ;	Mov_left.
 392+ 9B7F              ;
 393+ 9B7F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B7F              ;
 395+ 9B7F 21 13 89     Mov_left ld hl,Ctrl_0
 396+ 9B82 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B84              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B84              ; 																	; _ en el caso de que no lo haya.
 399+ 9B84 3A 13 89     	ld a,(Ctrl_0)
 400+ 9B87 CB 77        	bit 6,a
 401+ 9B89 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B8B
 403+ 9B8B CD A1 9C     	call Stop_Amadeus_left
 404+ 9B8E C8           	ret z
 405+ 9B8F 20 4A        	jr nz,8F
 406+ 9B91
 407+ 9B91 3A EB 88     11 ld a,(Coordenada_X)
 408+ 9B94 A7           	and a
 409+ 9B95 20 44        	jr nz,8F
 410+ 9B97
 411+ 9B97 3A ED 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B9A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B9B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B9D
 415+ 9B9D              ; ---------- ---------- ----------
 416+ 9B9D
 417+ 9B9D 3A FA 88     	ld a,(Vel_left)
 418+ 9BA0 FE 02        	cp 2
 419+ 9BA2 28 0F        	jr z,1F
 420+ 9BA4 38 04        	jr c,6F
 421+ 9BA6 FE 04        	cp 4
 422+ 9BA8 28 12        	jr z,7F
 423+ 9BAA
 424+ 9BAA              ; ---------- ---------- ----------
 425+ 9BAA
 426+ 9BAA 3A ED 88     6 ld a,(CTRL_DESPLZ)
 427+ 9BAD FE F8        	cp $f8
 428+ 9BAF 20 2A        	jr nz,8F
 429+ 9BB1 18 10        	jr 4F
 430+ 9BB3 3A ED 88     1 ld a,(CTRL_DESPLZ)
 431+ 9BB6 FE F9        	cp $f9
 432+ 9BB8 20 21        	jr nz,8F
 433+ 9BBA 18 07        	jr 4F
 434+ 9BBC 3A ED 88     7 ld a,(CTRL_DESPLZ)
 435+ 9BBF FE FB        	cp $fb
 436+ 9BC1 20 18        	jr nz,8F
 437+ 9BC3
 438+ 9BC3              ; ---------- ---------- ----------
 439+ 9BC3
 440+ 9BC3              4
 441+ 9BC3 CD C9 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BC6              ;	call Reinicio
 443+ 9BC6
 444+ 9BC6              ; ---------- ---------- ----------
 445+ 9BC6
 446+ 9BC6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BC8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BC9
 449+ 9BC9              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BC9              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BC9
 452+ 9BC9 CD E2 9B     	call DESPLZ_IZQ
 453+ 9BCC C1           	pop bc
 454+ 9BCD 10 F9        	djnz 5B
 455+ 9BCF 2A E7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BD2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BD3 22 E7 88     	ld (Posicion_actual),hl
 458+ 9BD6 CD 32 9D     	call Genera_coordenadas
 459+ 9BD9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BDB
 461+ 9BDB              ; ---------- ---------- ----------
 462+ 9BDB
 463+ 9BDB              ; Movemos, no hay recolocación.
 464+ 9BDB
 465+ 9BDB 2A E7 88     8 ld hl,(Posicion_actual)
 466+ 9BDE CD E2 9B     	call DESPLZ_IZQ
 467+ 9BE1 C9           2 ret
 468+ 9BE2
 469+ 9BE2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BE2              ;
 471+ 9BE2              ;	22/9/22
 472+ 9BE2
 473+ 9BE2              DESPLZ_IZQ
 474+ 9BE2
 475+ 9BE2 CD F1 9B     	call Desplaza_izquierda
 476+ 9BE5 CD 3D 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BE8 CD 65 9C     	call Ciclo_completo_2
 478+ 9BEB 21 13 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BEE CB BE        	res 7,(hl)
 480+ 9BF0 C9           	ret
 481+ 9BF1
 482+ 9BF1              Desplaza_izquierda
 483+ 9BF1
 484+ 9BF1 3A FA 88     	ld a,(Vel_left)
 485+ 9BF4 47           	ld b,a
 486+ 9BF5 2A F5 88     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9BF8 23           1 inc hl
 488+ 9BF9 23           	inc hl
 489+ 9BFA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9BFC 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 491+ 9BFF CD EE 8C     	call Extrae_address
 492+ 9C02 22 E9 88     	ld (Puntero_objeto),hl
 493+ 9C05
 494+ 9C05              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C05
 496+ 9C05              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C05              ; Cuántos movimientos hemos hecho ??
 498+ 9C05              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C05
 500+ 9C05 2A F1 88     7 ld hl,(Indice_Sprite_izq)
 501+ 9C08 EB           	ex de,hl
 502+ 9C09 A7           	and a
 503+ 9C0A ED 52        	sbc hl,de
 504+ 9C0C CB 3D        	srl l
 505+ 9C0E 3E 08        6 ld a,8
 506+ 9C10 95           	sub l
 507+ 9C11 30 1E        	jr nc,3F
 508+ 9C13
 509+ 9C13              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C13              ; B="0".
 511+ 9C13
 512+ 9C13 04           4 inc b
 513+ 9C14 3C           	inc a
 514+ 9C15 20 FC        	jr nz,4B
 515+ 9C17 78           	ld a,b
 516+ 9C18 08           	ex af,af
 517+ 9C19 2A F1 88     	ld hl,(Indice_Sprite_izq)
 518+ 9C1C 23           5 inc hl
 519+ 9C1D 23           	inc hl
 520+ 9C1E 10 FC        	djnz 5B
 521+ 9C20 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C23 CD EE 8C     	call Extrae_address
 523+ 9C26 22 E9 88     	ld (Puntero_objeto),hl
 524+ 9C29
 525+ 9C29              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C29              ; _(Posicion_actual).
 527+ 9C29
 528+ 9C29 21 E7 88     	ld hl,Posicion_actual
 529+ 9C2C 35           	dec (hl)
 530+ 9C2D 08           	ex af,af
 531+ 9C2E 6F           	ld l,a
 532+ 9C2F 18 DD        	jr 6B
 533+ 9C31
 534+ 9C31              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C31
 536+ 9C31 47           3 ld b,a
 537+ 9C32 2A EF 88     	ld hl,(Indice_Sprite_der)
 538+ 9C35 23           2 inc hl
 539+ 9C36 23           	inc hl
 540+ 9C37 10 FC        	djnz 2B
 541+ 9C39 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 542+ 9C3C C9           8 ret
 543+ 9C3D
 544+ 9C3D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C3D              ;
 546+ 9C3D              ;	modifica_parametros_1er_DESPLZ
 547+ 9C3D              ;
 548+ 9C3D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C3D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C3D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C3D
 552+ 9C3D 3A ED 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C40 A7           	and a
 554+ 9C41 20 1E        	jr nz,1F
 555+ 9C43 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C44 32 ED 88         ld (CTRL_DESPLZ),a
 557+ 9C47 21 E6 88     	ld hl,Columns
 558+ 9C4A 34           	inc (hl)
 559+ 9C4B 3A F9 88     	ld a,(Cuad_objeto)
 560+ 9C4E E6 01        	and 1
 561+ 9C50 20 0F        	jr nz,1F
 562+ 9C52 2A E7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C55 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C56 22 E7 88     	ld (Posicion_actual),hl
 565+ 9C59 CD 32 9D     	call Genera_coordenadas
 566+ 9C5C CD B8 9C     	call Dec_CTRL_DESPLZ
 567+ 9C5F 18 03        	jr 2F
 568+ 9C61 CD B8 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C64 C9           2 ret
 570+ 9C65
 571+ 9C65              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C65
 573+ 9C65 3A ED 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C68 FE F7        	cp $f7
 575+ 9C6A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C6C 30 2C        	jr nc,3F
 577+ 9C6E
 578+ 9C6E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C6E
 580+ 9C6E 06 00        	ld b,0
 581+ 9C70 04           4 inc b
 582+ 9C71 3C           	inc a
 583+ 9C72 FE F7        	cp $f7
 584+ 9C74 20 FA        	jr nz,4B
 585+ 9C76 3E FF        	ld a,$ff
 586+ 9C78 90           	sub b
 587+ 9C79 32 ED 88     	ld (CTRL_DESPLZ),a
 588+ 9C7C 18 1C        	jr 3F
 589+ 9C7E
 590+ 9C7E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C7E
 592+ 9C7E 21 E6 88     1 ld hl,Columns
 593+ 9C81 35           	dec (hl)
 594+ 9C82 AF           	xor a
 595+ 9C83 32 ED 88     	ld (CTRL_DESPLZ),a
 596+ 9C86 3A F9 88     	ld a,(Cuad_objeto)
 597+ 9C89 E6 01        	and 1
 598+ 9C8B 28 0A        	jr z,2F
 599+ 9C8D 2A E7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C90 2B           	dec hl
 601+ 9C91 22 E7 88     	ld (Posicion_actual),hl
 602+ 9C94 CD 32 9D     	call Genera_coordenadas
 603+ 9C97
 604+ 9C97              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C97
 606+ 9C97 CD 18 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C9A C9           3 ret
 608+ 9C9B
 609+ 9C9B              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C9B              ;
 611+ 9C9B              ;	19/10/22
 612+ 9C9B              ;
 613+ 9C9B              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C9B              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C9B
 616+ 9C9B 3A EB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C9E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CA0 C9           	ret
 619+ 9CA1
 620+ 9CA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CA1              ;
 622+ 9CA1              ;	19/10/22
 623+ 9CA1              ;
 624+ 9CA1              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CA1              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CA1
 627+ 9CA1 3A EB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CA4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CA6 C9           	ret
 630+ 9CA7
 631+ 9CA7              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CA7              ;
 633+ 9CA7              ;	24/7/22
 634+ 9CA7              ;
 635+ 9CA7              ;	Inc_CTRL_DESPLZ
 636+ 9CA7              ;
 637+ 9CA7              ;
 638+ 9CA7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CA7
 640+ 9CA7 21 ED 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CAA 3A FB 88     	ld a,(Vel_right)
 642+ 9CAD A7           	and a
 643+ 9CAE 28 06        	jr z,1F
 644+ 9CB0 47           	ld b,a
 645+ 9CB1 34           3 inc (hl)
 646+ 9CB2 10 FD        	djnz 3B
 647+ 9CB4 18 01        	jr 2F
 648+ 9CB6 34           1 inc (hl)
 649+ 9CB7 C9           2 ret
 650+ 9CB8
 651+ 9CB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CB8              ;
 653+ 9CB8              ;	5/2/23
 654+ 9CB8              ;
 655+ 9CB8              ;	Dec_CTRL_DESPLZ
 656+ 9CB8              ;
 657+ 9CB8              ;
 658+ 9CB8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CB8
 660+ 9CB8 21 ED 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CBB 3A FA 88     	ld a,(Vel_left)
 662+ 9CBE A7           	and a
 663+ 9CBF 28 06        	jr z,1F
 664+ 9CC1 47           	ld b,a
 665+ 9CC2 35           3 dec (hl)
 666+ 9CC3 10 FD        	djnz 3B
 667+ 9CC5 18 01        	jr 2F
 668+ 9CC7 35           1 dec (hl)
 669+ 9CC8 C9           2 ret
 670+ 9CC9
 671+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CC9
 673+ 9CC9 2A E7 88     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CCC 01 1F 00     	ld bc,31
 675+ 9CCF A7           	and a
 676+ 9CD0 ED 4A        	adc hl,bc
 677+ 9CD2 22 E7 88     	ld (Posicion_actual),hl
 678+ 9CD5 21 13 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CD8 CB C6        	set 0,(hl)
 680+ 9CDA C9           	ret
 681+ 9CDB
 682+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CDB
 684+ 9CDB 2A E7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CDE 01 1F 00     	ld bc,31
 686+ 9CE1 A7           	and a
 687+ 9CE2 ED 42        	sbc hl,bc
 688+ 9CE4 22 E7 88     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CE7 21 13 89     	ld hl,Ctrl_0
 690+ 9CEA CB CE        	set 1,(hl)
 691+ 9CEC C9           	ret
 692+ 9CED
 693+ 9CED              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CED
 695+ 9CED 24           Reaparece_abajo inc h
 696+ 9CEE 01 E0 17     	ld bc,$17e0
 697+ 9CF1 A7           	and a
 698+ 9CF2 ED 4A        	adc hl,bc
 699+ 9CF4 22 E7 88     	ld (Posicion_actual),hl
 700+ 9CF7 21 13 89     	ld hl,Ctrl_0
 701+ 9CFA CB D6        	set 2,(hl)
 702+ 9CFC C9           	ret
 703+ 9CFD
 704+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9CFD
 706+ 9CFD 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D00 A7           	and a
 708+ 9D01 ED 42        	sbc hl,bc
 709+ 9D03 22 E7 88     	ld (Posicion_actual),hl
 710+ 9D06 21 13 89     	ld hl,Ctrl_0
 711+ 9D09 CB DE        	set 3,(hl)
 712+ 9D0B C9           	ret
 713+ 9D0C
 714+ 9D0C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D0C              ;
 716+ 9D0C              ;	15/07/23
 717+ 9D0C
 718+ 9D0C              Reinicio
 719+ 9D0C
 720+ 9D0C              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D0C
 722+ 9D0C AF           	xor a
 723+ 9D0D 21 1A 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D10 CD 2E 9D     	call Limpia_contenido_hl
 725+ 9D13
 726+ 9D13 21 E7 88     	ld hl,Posicion_actual
 727+ 9D16 CD 2E 9D     	call Limpia_contenido_hl
 728+ 9D19
 729+ 9D19 CD 60 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D1C CD EA 9F     	call Inicia_Puntero_mov
 731+ 9D1F
 732+ 9D1F 21 1C 89     	ld hl,Incrementa_puntero
 733+ 9D22 06 05        	ld b,5
 734+ 9D24 77           1 ld (hl),a
 735+ 9D25 23           	inc hl
 736+ 9D26 10 FC        	djnz 1B
 737+ 9D28
 738+ 9D28 21 26 89     	ld hl,Ctrl_2
 739+ 9D2B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D2D
 741+ 9D2D C9           	ret
 742+ 9D2E
 743+ 9D2E 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D2F 23           	inc hl
 745+ 9D30 77           	ld (hl),a
 746+ 9D31 C9           	ret
 747+ 9D32
 748+ 9D32
# file closed: Direcciones.asm
1569  9D32              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D32              ; ------------------------------------------------------------------------
   2+ 9D32              ;
   3+ 9D32              ;	02/04/23
   4+ 9D32              ;
   5+ 9D32              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D32              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D32              ;
   8+ 9D32              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D32              ;
  10+ 9D32              ;	Modifica: A,BC y DE.
  11+ 9D32
  12+ 9D32 C5           Genera_coordenadas push bc
  13+ 9D33 E5           	push hl
  14+ 9D34 D5           	push de
  15+ 9D35
  16+ 9D35 2A E7 88     	ld hl,(Posicion_actual)
  17+ 9D38
  18+ 9D38 7D           	ld a,l
  19+ 9D39 E6 1F        	and $1f
  20+ 9D3B 32 EB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D3E
  22+ 9D3E CD A7 99     	call calcula_tercio
  23+ 9D41 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D42
  25+ 9D42 1E 00        	ld e,0
  26+ 9D44 7D           	ld a,l
  27+ 9D45 E6 E0        	and $e0
  28+ 9D47 28 01        	jr z,1F
  29+ 9D49 04           	inc b
  30+ 9D4A
  31+ 9D4A 04           1 inc b
  32+ 9D4B 05           	dec b
  33+ 9D4C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D4E              ;														; _ , salimos.
  35+ 9D4E 1C           3 inc e
  36+ 9D4F D6 20        	sub 32
  37+ 9D51 20 FB        	jr nz,3B
  38+ 9D53 10 F5        	djnz 1B
  39+ 9D55
  40+ 9D55 7B           2 ld a,e
  41+ 9D56 32 EC 88     	ld (Coordenada_y),a
  42+ 9D59
  43+ 9D59 D1           	pop de
  44+ 9D5A E1           	pop hl
  45+ 9D5B C1           	pop bc
  46+ 9D5C
  47+ 9D5C C9           	ret
  48+ 9D5D
  49+ 9D5D              ; ------------------------------------------------------------------------
  50+ 9D5D              ;	28/05/23
  51+ 9D5D              ;
  52+ 9D5D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D5D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D5D              ;
  55+ 9D5D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D5D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D5D              ;
  58+ 9D5D              ;		DE="$120d"
  59+ 9D5D              ;
  60+ 9D5D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D5D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D5D              ;
  63+ 9D5D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D5D
  65+ 9D5D              ;	Modifica: A,BC y DE.
  66+ 9D5D
  67+ 9D5D
  68+ 9D5D              Genera_coordenadas_disparo
  69+ 9D5D
  70+ 9D5D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D5D
  72+ 9D5D 7D           	ld a,l
  73+ 9D5E E6 1F        	and $1f
  74+ 9D60 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D61 CD A7 99     	call calcula_tercio
  76+ 9D64 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D65 1E 00        	ld e,0
  78+ 9D67 7D           	ld a,l
  79+ 9D68 E6 E0        	and $e0
  80+ 9D6A 28 01        	jr z,1F
  81+ 9D6C 04           	inc b
  82+ 9D6D 1C           1 inc e
  83+ 9D6E D6 20        	sub 32
  84+ 9D70 20 FB        	jr nz,1B
  85+ 9D72 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D74 C9           	ret
  87+ 9D75
# file closed: Genera_coordenadas.asm
1570  9D75              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D75              ; Relojes y temporizaciones.
   2+ 9D75
   3+ 9D75              ; ------------------------------------------------------
   4+ 9D75              ;
   5+ 9D75              ;	16/7/23
   6+ 9D75              ;
   7+ 9D75              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D75              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D75              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D75              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D75              ;
  12+ 9D75              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D75              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D75
  15+ 9D75              ; Disparo_entidad db 1
  16+ 9D75              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D75              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D75
  19+ 9D75              Habilita_disparos
  20+ 9D75
  21+ 9D75 7E           	ld a,(hl)
  22+ 9D76 A7           	and a
  23+ 9D77 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D78
  25+ 9D78 EB           	ex de,hl
  26+ 9D79
  27+ 9D79 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D7A C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D7B
  30+ 9D7B              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D7B
  32+ 9D7B 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D7C 7E           	ld a,(hl)
  34+ 9D7D 23           	inc hl
  35+ 9D7E 77           	ld (hl),a
  36+ 9D7F
  37+ 9D7F EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D80 3E 01        	ld a,1
  39+ 9D82 77           	ld (hl),a
  40+ 9D83 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1571  9D84              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D84
   2+ 9D84
   3+ 9D84              ;   07/07/23
   4+ 9D84              ;
   5+ 9D84              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D84              ;
   7+ 9D84              ;   Codificación:
   8+ 9D84              ;
   9+ 9D84              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D84              ;
  11+ 9D84              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D84              ;
  13+ 9D84              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D84              ;
  15+ 9D84              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D84              ;
  17+ 9D84              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D84              ;                               ..... %01000010 Vel_up 4
  19+ 9D84              ;                                               Vel_down 2
  20+ 9D84              ;                               ..... $42
  21+ 9D84              ;
  22+ 9D84              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D84              ;
  24+ 9D84              ;                               ..... %01000010 Vel_left 4
  25+ 9D84              ;                                               Vel_right 2
  26+ 9D84              ;                               ..... $42
  27+ 9D84              ;
  28+ 9D84              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D84              ;
  30+ 9D84              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D84              ;
  32+ 9D84              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D84              ;
  34+ 9D84              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D84              ;                                     $53
  36+ 9D84              ;
  37+ 9D84              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D84              ;
  39+ 9D84              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D84              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D84              ;
  42+ 9D84              ;                       Arriba ..... $81
  43+ 9D84              ;                       Arriba - izquierda ..... $a1
  44+ 9D84              ;                       Arriba - derecha ..... $91
  45+ 9D84              ;
  46+ 9D84              ;                       Abajo ..... $41
  47+ 9D84              ;                       Abajo - izquierda ..... $61
  48+ 9D84              ;                       Abajo - derecha ..... $51
  49+ 9D84              ;
  50+ 9D84              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D84              ;
  52+ 9D84              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D84              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D84              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D84              ;
  56+ 9D84              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D84              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D84              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D84              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D84              ;
  61+ 9D84              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D84              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D84              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D84              ;
  65+ 9D84              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D84              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D84              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D84              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D84
  70+ 9D84              ; ----- ----- ----- ----- -----
  71+ 9D84
  72+ 9D84 B0 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D86 B8 9D            defw F_1
  74+ 9D88 C2 9D            defw F_2
  75+ 9D8A CC 9D            defw Codo_abajo_derecha
  76+ 9D8C 00 9E            defw Derecha_y_subiendo
  77+ 9D8E 0A 9E            defw Derecha_y_subiendo_1
  78+ 9D90 14 9E            defw F_3
  79+ 9D92 1E 9E            defw F_4
  80+ 9D94 28 9E            defw Derecha_y_bajando
  81+ 9D96 32 9E            defw Derecha_y_bajando_1
  82+ 9D98 3C 9E            defw Derecha_y_bajando_2
  83+ 9D9A 46 9E            defw Codo_derecha_abajo
  84+ 9D9C 76 9E            defw Codo_abajo_izq.
  85+ 9D9E AA 9E            defw Izquierda_y_subiendo
  86+ 9DA0 B4 9E            defw Izquierda_y_subiendo_1
  87+ 9DA2 BE 9E            defw F_5
  88+ 9DA4 C8 9E            defw F_6
  89+ 9DA6 D2 9E            defw Izquierda_y_bajando
  90+ 9DA8 DC 9E            defw Izquierda_y_bajando_1
  91+ 9DAA E6 9E            defw Izquierda_y_bajando_2
  92+ 9DAC F0 9E            defw Codo_izquierda_abajo
  93+ 9DAE 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB0
  95+ 9DB0 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DB4 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DB8
  98+ 9DB8 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DBC 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC0 08 00
 100+ 9DC2 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC6 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DCA 0F FE
 102+ 9DCC
 103+ 9DCC 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DD4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DD8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DDC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DE4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DE8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DEC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF0 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DF4 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DF8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DFC 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E00
 117+ 9E00 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E04 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E08 06 00
 119+ 9E0A
 120+ 9E0A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E0E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E12 02 00
 122+ 9E14
 123+ 9E14 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E18 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E1C 04 00
 125+ 9E1E 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E22 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E26 08 00
 127+ 9E28
 128+ 9E28 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E2C 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E30 02 00
 130+ 9E32
 131+ 9E32 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E36 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E3A 06 00
 133+ 9E3C
 134+ 9E3C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E40 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E44 06 00
 136+ 9E46
 137+ 9E46              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E46
 139+ 9E46 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E4A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E4E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E52 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E56 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E5A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E62 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E66 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E6A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E6E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E72 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E76
 152+ 9E76 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E7A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E7E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E82 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E86 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E8A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E8E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E92 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E96 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E9A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E9E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EA2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA6 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EAA
 166+ 9EAA 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EAE 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EB2 06 00
 168+ 9EB4
 169+ 9EB4 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EB8 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EBC 02 00
 171+ 9EBE
 172+ 9EBE 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EC2 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC6 04 00
 174+ 9EC8 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ECC 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED0 08 00
 176+ 9ED2
 177+ 9ED2 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED6 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EDA 02 00
 179+ 9EDC
 180+ 9EDC 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE0 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EE4 06 00
 182+ 9EE6
 183+ 9EE6 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EEA 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EEE 06 00
 185+ 9EF0
 186+ 9EF0 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EF4 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EF8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EFC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F00 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F04 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F08 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F0C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F10 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F14 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F18 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F1C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F20
 199+ 9F20              ; ----- ----- ----- ----- -----
 200+ 9F20              ;
 201+ 9F20              ;   27/06/23
 202+ 9F20
 203+ 9F20              Movimiento
 204+ 9F20
 205+ 9F20              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F20
 207+ 9F20              ;    ld hl,(Posicion_actual)
 208+ 9F20
 209+ 9F20 FB               ei
 210+ 9F21
 211+ 9F21 3A 26 89         ld a,(Ctrl_2)
 212+ 9F24 CB 57            bit 2,a
 213+ 9F26 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F28
 215+ 9F28 2A 18 89         ld hl,(Puntero_mov)
 216+ 9F2B 7E               ld a,(hl)
 217+ 9F2C
 218+ 9F2C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F2C
 220+ 9F2C              Inicia_desplazamiento.
 221+ 9F2C
 222+ 9F2C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F2C
 224+ 9F2C CD 21 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F2F
 226+ 9F2F              ; Iniciamos (Repetimos_mov).
 227+ 9F2F
 228+ 9F2F 7E               ld a,(hl)
 229+ 9F30 E6 0F            and $0f
 230+ 9F32 32 1E 89         ld (Repetimos_desplazamiento),a
 231+ 9F35 32 1F 89         ld (Repetimos_desplazamiento_backup),a
 232+ 9F38
 233+ 9F38              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F38
 235+ 9F38 23               inc hl
 236+ 9F39 7E               ld a,(hl)
 237+ 9F3A 32 21 89         ld (Cola_de_desplazamiento),a
 238+ 9F3D 2B               dec hl
 239+ 9F3E
 240+ 9F3E 21 26 89         ld hl,Ctrl_2
 241+ 9F41 CB D6            set 2,(hl)
 242+ 9F43
 243+ 9F43              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F43              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F43
 246+ 9F43              Desplazamiento_iniciado
 247+ 9F43
 248+ 9F43 CD F5 9F         call Aplica_desplazamiento
 249+ 9F46
 250+ 9F46 3A 26 89         ld a,(Ctrl_2)
 251+ 9F49 CB 67            bit 4,a
 252+ 9F4B C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F4C
 254+ 9F4C 21 1E 89     3 ld hl,Repetimos_desplazamiento
 255+ 9F4F 35               dec (hl)
 256+ 9F50 C0               ret nz
 257+ 9F51
 258+ 9F51              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F51              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F51              ; Analiza (Cola_de_desplazamiento).
 261+ 9F51
 262+ 9F51 3A 21 89     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F54 A7               and a
 264+ 9F55 CC 4A A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F58 28 30            jr z,Reinicia_el_movimiento
 266+ 9F5A
 267+ 9F5A FE FF            cp $ff
 268+ 9F5C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F5E
 270+ 9F5E FE FE            cp $fe
 271+ 9F60 CC CE 9F         call z,Fijamos_bucle
 272+ 9F63 28 25            jr z,Reinicia_el_movimiento
 273+ 9F65
 274+ 9F65 FE FD            cp $fd
 275+ 9F67 20 11            jr nz,1F
 276+ 9F69
 277+ 9F69              ; ---
 278+ 9F69              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F69
 280+ 9F69 3A 26 89         ld a,(Ctrl_2)
 281+ 9F6C CB 5F            bit 3,a
 282+ 9F6E 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F70
 284+ 9F70              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F70
 286+ 9F70 21 26 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F73 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F75
 289+ 9F75 CD DF 9F         call Inicia_Repetimos_movimiento
 290+ 9F78 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F7A              ; ---
 292+ 9F7A
 293+ 9F7A FE 01        1 cp 1
 294+ 9F7C CA B8 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F7F
 296+ 9F7F 3D               dec a
 297+ 9F80 32 21 89         ld (Cola_de_desplazamiento),a
 298+ 9F83
 299+ 9F83 3A 1F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F86 32 1E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F89              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F89 C9               ret
 303+ 9F8A
 304+ 9F8A              Reinicia_el_movimiento
 305+ 9F8A
 306+ 9F8A F3               di
 307+ 9F8B
 308+ 9F8B 3A 26 89         ld a,(Ctrl_2)
 309+ 9F8E CB 5F            bit 3,a
 310+ 9F90 28 1B            jr z,2F
 311+ 9F92
 312+ 9F92              ; (Cola_de_desplazamiento)="254".
 313+ 9F92
 314+ 9F92 21 20 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F95 35               dec (hl)
 316+ 9F96 20 15            jr nz,2F
 317+ 9F98
 318+ 9F98              ; Fin de las repeticiones del último movimiento.
 319+ 9F98
 320+ 9F98 21 26 89         ld hl,Ctrl_2
 321+ 9F9B CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F9D
 323+ 9F9D 2A 18 89         ld hl,(Puntero_mov)
 324+ 9FA0 23               inc hl
 325+ 9FA1 23               inc hl
 326+ 9FA2 23               inc hl
 327+ 9FA3 22 18 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FA6              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FA6 7E               ld a,(hl)
 330+ 9FA7 32 21 89         ld (Cola_de_desplazamiento),a
 331+ 9FAA
 332+ 9FAA C3 51 9F         jp Cola
 333+ 9FAD
 334+ 9FAD CD EA 9F     2 call Inicia_Puntero_mov
 335+ 9FB0
 336+ 9FB0 21 26 89         ld hl,Ctrl_2
 337+ 9FB3 CB 96            res 2,(hl)
 338+ 9FB5
 339+ 9FB5 C3 20 9F         jp Movimiento
 340+ 9FB8
 341+ 9FB8              Siguiente_desplazamiento
 342+ 9FB8
 343+ 9FB8              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FB8              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FB8
 346+ 9FB8 21 26 89         ld hl,Ctrl_2
 347+ 9FBB CB 96            res 2,(hl)
 348+ 9FBD
 349+ 9FBD 2A 18 89         ld hl,(Puntero_mov)
 350+ 9FC0 23               inc hl
 351+ 9FC1 23               inc hl
 352+ 9FC2 22 18 89         ld (Puntero_mov),hl
 353+ 9FC5
 354+ 9FC5 7E               ld a,(hl)
 355+ 9FC6 A7               and a
 356+ 9FC7 CC 4A A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FCA CA 8A 9F         jp z,Reinicia_el_movimiento
 358+ 9FCD
 359+ 9FCD C9               ret
 360+ 9FCE              ; Subrutinas -----------------------------------------
 361+ 9FCE              ; ---------- --------- --------- ---------- ----------
 362+ 9FCE              ;
 363+ 9FCE              ;   24/07/23
 364+ 9FCE              ;
 365+ 9FCE              ;   Fijamos_bucle
 366+ 9FCE              ;
 367+ 9FCE              ;
 368+ 9FCE
 369+ 9FCE              Fijamos_bucle
 370+ 9FCE
 371+ 9FCE 3A 1C 89         ld a,(Incrementa_puntero)
 372+ 9FD1 3C               inc a
 373+ 9FD2 32 1D 89         ld (Incrementa_puntero_backup),a
 374+ 9FD5
 375+ 9FD5 CD 4A A0         call Incrementa_Puntero_indice_mov
 376+ 9FD8 2A 16 89         ld hl,(Puntero_indice_mov)
 377+ 9FDB 22 1A 89         ld (Puntero_indice_mov_bucle),hl
 378+ 9FDE C9               ret
 379+ 9FDF
 380+ 9FDF              ; ---------- --------- --------- ---------- ----------
 381+ 9FDF              ;
 382+ 9FDF              ;   07/7/23
 383+ 9FDF              ;
 384+ 9FDF              ;   Inicia_Repetimos_movimiento
 385+ 9FDF              ;
 386+ 9FDF              ;
 387+ 9FDF
 388+ 9FDF              Inicia_Repetimos_movimiento
 389+ 9FDF
 390+ 9FDF              ; Iniciamos (Repetimos_movimiento).
 391+ 9FDF
 392+ 9FDF DD 2A 18 89      ld ix,(Puntero_mov)
 393+ 9FE3 DD 7E 02         ld a,(ix+2)
 394+ 9FE6 32 20 89         ld (Repetimos_movimiento),a
 395+ 9FE9
 396+ 9FE9 C9               ret
 397+ 9FEA
 398+ 9FEA              ; ---------- --------- --------- ---------- ----------
 399+ 9FEA              ;
 400+ 9FEA              ;   26/6/23
 401+ 9FEA              ;
 402+ 9FEA              ;   Inicia_Puntero_mov
 403+ 9FEA              ;
 404+ 9FEA              ;
 405+ 9FEA
 406+ 9FEA 2A 16 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FED 5E               ld e,(hl)
 408+ 9FEE 23               inc hl
 409+ 9FEF 56               ld d,(hl)
 410+ 9FF0 EB               ex de,hl
 411+ 9FF1 22 18 89         ld (Puntero_mov),hl
 412+ 9FF4 C9               ret
 413+ 9FF5
 414+ 9FF5              ; ---------- --------- --------- ---------- ----------
 415+ 9FF5              ;
 416+ 9FF5              ;   27/06/23
 417+ 9FF5              ;
 418+ 9FF5              ;   Aplica_movimiento.
 419+ 9FF5
 420+ 9FF5              Aplica_desplazamiento
 421+ 9FF5
 422+ 9FF5              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FF5
 424+ 9FF5 2A 18 89         ld hl, (Puntero_mov)
 425+ 9FF8
 426+ 9FF8 7E               ld a,(hl)
 427+ 9FF9 E6 F0            and $f0
 428+ 9FFB C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FFC
 430+ 9FFC CB 7E            bit 7,(hl)
 431+ 9FFE 28 03            jr z,1F
 432+ A000 CD 1E 9A         call Mov_up
 433+ A003 2A 18 89     1 ld hl, (Puntero_mov)
 434+ A006 CB 76            bit 6,(hl)
 435+ A008 28 03            jr z,2F
 436+ A00A CD ED 99         call Mov_down
 437+ A00D 2A 18 89     2 ld hl, (Puntero_mov)
 438+ A010 CB 6E            bit 5,(hl)
 439+ A012 28 03            jr z,3F
 440+ A014 CD 7F 9B         call Mov_left
 441+ A017 2A 18 89     3 ld hl, (Puntero_mov)
 442+ A01A CB 66            bit 4,(hl)
 443+ A01C C8               ret z
 444+ A01D CD 61 9A         call Mov_right
 445+ A020 C9               ret
 446+ A021
 447+ A021              ; ---------- --------- --------- ---------- ----------
 448+ A021              ;
 449+ A021              ;   26/06/23
 450+ A021              ;
 451+ A021              ;   Ajusta_velocidad_desplazamiento.
 452+ A021
 453+ A021              Ajusta_velocidad_desplazamiento
 454+ A021
 455+ A021              ; 1er byte de la cadena de movimiento.
 456+ A021              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A021
 458+ A021 CD 3F A0         call Extrae_nibble_alto
 459+ A024
 460+ A024 32 FC 88         ld (Vel_up),a
 461+ A027 79               ld a,c
 462+ A028 E6 0F            and $0f
 463+ A02A 32 FD 88         ld (Vel_down),a
 464+ A02D
 465+ A02D              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A02D              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A02D
 468+ A02D 23               inc hl
 469+ A02E CD 3F A0         call Extrae_nibble_alto
 470+ A031
 471+ A031 32 FA 88         ld (Vel_left),a
 472+ A034 79               ld a,c
 473+ A035 E6 0F            and $0f
 474+ A037 32 FB 88         ld (Vel_right),a
 475+ A03A
 476+ A03A              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A03A
 478+ A03A 23               inc hl
 479+ A03B 22 18 89         ld (Puntero_mov),hl
 480+ A03E C9               ret
 481+ A03F
 482+ A03F 06 04        Extrae_nibble_alto ld b,4
 483+ A041 7E               ld a,(hl)
 484+ A042 4F               ld c,a
 485+ A043 E6 F0            and $f0
 486+ A045 CB 3F        1 srl a
 487+ A047 10 FC            djnz 1B
 488+ A049 C9               ret
 489+ A04A
 490+ A04A              ; ---------- --------- --------- ---------- ----------
 491+ A04A              ;
 492+ A04A              ;   5/7/23
 493+ A04A              ;
 494+ A04A              ;   Incrementa_Puntero_indice_mov
 495+ A04A
 496+ A04A              Incrementa_Puntero_indice_mov
 497+ A04A
 498+ A04A 21 1C 89         ld hl,Incrementa_puntero
 499+ A04D 34               inc (hl)
 500+ A04E
 501+ A04E 2A 16 89         ld hl,(Puntero_indice_mov)
 502+ A051 01 02 00         ld bc,2
 503+ A054 A7               and a
 504+ A055 09               add hl,bc
 505+ A056 22 16 89         ld (Puntero_indice_mov),hl
 506+ A059
 507+ A059 7E               ld a,(hl)
 508+ A05A A7               and a
 509+ A05B
 510+ A05B              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A05B
 512+ A05B              ;    jr z,$
 513+ A05B
 514+ A05B              ;! Reinicia el Patrón de movimiento.
 515+ A05B
 516+ A05B CC 60 A0         call z,Inicializa_Puntero_indice_mov
 517+ A05E
 518+ A05E AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A05F
 520+ A05F C9               ret
 521+ A060
 522+ A060
 523+ A060              ; ---------- --------- --------- ---------- ----------
 524+ A060              ;
 525+ A060              ;   24/07/23
 526+ A060              ;
 527+ A060              ;   Inicializa_Puntero_indice_mov
 528+ A060
 529+ A060              Inicializa_Puntero_indice_mov
 530+ A060
 531+ A060              ; Existe etiqueta de bucle principal???
 532+ A060
 533+ A060 2A 1A 89         ld hl,(Puntero_indice_mov_bucle)
 534+ A063 24               inc h
 535+ A064 25               dec h
 536+ A065 28 05            jr z,2F
 537+ A067
 538+ A067 22 16 89         ld (Puntero_indice_mov),hl
 539+ A06A 18 14            jr 3F
 540+ A06C
 541+ A06C              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A06C
 543+ A06C 3A 1C 89     2 ld a,(Incrementa_puntero)
 544+ A06F 47               ld b,a
 545+ A070
 546+ A070 2A 16 89         ld hl,(Puntero_indice_mov)
 547+ A073 2B           1 dec hl
 548+ A074 2B               dec hl
 549+ A075 10 FC            djnz 1B
 550+ A077 22 16 89         ld (Puntero_indice_mov),hl
 551+ A07A
 552+ A07A AF               xor a
 553+ A07B 32 1C 89         ld (Incrementa_puntero),a
 554+ A07E 18 06            jr 4F
 555+ A080
 556+ A080 3A 1D 89     3 ld a,(Incrementa_puntero_backup)
 557+ A083 32 1C 89         ld (Incrementa_puntero),a
 558+ A086 C9           4 ret
 559+ A087
 560+ A087
 561+ A087
# file closed: Patrones_de_mov.asm
1572  A087              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A087              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A087              ;
   3+ A087              ;	4/9/23
   4+ A087              ;
   5+ A087              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A087
   7+ A087              ;	ADC HL,SP	LD (addr),SP
   8+ A087              ;	ADD HL,SP	LD SP,(addr)
   9+ A087              ;	ADD IX,SP	LD SP,nn
  10+ A087              ; 	ADD IY,SP	LD SP,HL
  11+ A087              ;				LD SP,IX
  12+ A087              ;	DEC SP		LD SP,IY
  13+ A087
  14+ A087              ;	EX (SP),HL
  15+ A087              ;	EX (SP),IX
  16+ A087              ;	EX (SP),IY
  17+ A087
  18+ A087              ;	INC SP
  19+ A087
  20+ A087                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 39 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 28 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 41 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A 13 89     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 21 A0 72         ld hl,Album_de_fotos_Amadeus
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 3F 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 28 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 41 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 12            jr 6F
  75+ 7FDD
  76+ 7FDD 3A 13 89     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 08            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 47 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 39 89      ld sp,(Stack)
  82+ 7FEB C9               ret
  83+ 7FEC
  84+ 7FEC 22 3F 89     8 ld (Stack_snapshot),hl
  85+ 7FEF ED 7B 39 89  6 ld sp,(Stack)
  86+ 7FF3
  87+ 7FF3              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  88+ 7FF3
  89+ 7FF3 5D               ld e,l
  90+ 7FF4 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  91+ 7FF5
  92+ 7FF5 2A 5D 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  93+ 7FF8 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  94+ 7FF9 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  95+ 7FFA 72               ld (hl),d                                     ; _ álbum a otro.
  96+ 7FFB
  97+ 7FFB FB               ei
  98+ 7FFC
  99+ 7FFC C9               ret
 100+ 7FFD
 101+ 7FFD              ; ------------------------------------------------
 102+ 7FFD              ;
 103+ 7FFD              ;   3/08/23
 104+ 7FFD              ;
 105+ 7FFD              ;   La rutina estará situada justo después de:
 106+ 7FFD              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 107+ 7FFD              ;
 108+ 7FFD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFD
 111+ 7FFD                  org $72ad
 112+ 72AD
 113+ 72AD              Gestiona_albumes_de_fotos
 114+ 72AD
 115+ 72AD              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72AD              ;   Vaciamos Album_de_fotos.
 117+ 72AD
 118+ 72AD              ;   Album_de_fotos. Contiene datos ???
 119+ 72AD
 120+ 72AD 21 01 70         ld hl,Album_de_fotos+1
 121+ 72B0 7E               ld a,(hl)
 122+ 72B1 A7               and a
 123+ 72B2 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72B4
 125+ 72B4 2A 43 89         ld hl,(End_Snapshot)
 126+ 72B7 01 00 70         ld bc,Album_de_fotos
 127+ 72BA 11 01 70         ld de,Album_de_fotos+1
 128+ 72BD AF               xor a
 129+ 72BE 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72BF
 131+ 72BF CD 4F 73         call Limpia_album
 132+ 72C2
 133+ 72C2 21 00 00         ld hl,0
 134+ 72C5 22 43 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72C8
 136+ 72C8              ; ----- ----- ----- -----
 137+ 72C8
 138+ 72C8              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72C8
 140+ 72C8 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72CB 7E               ld a,(hl)
 142+ 72CC A7               and a
 143+ 72CD 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72CF              ;                               ; _ información del album2 al album1.
 145+ 72CF
 146+ 72CF              ; ----- ----- ----- -----
 147+ 72CF              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72CF
 149+ 72CF 2A 49 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D2 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72D5 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72D8
 153+ 72D8 CD 4F 73         call Limpia_album
 154+ 72DB
 155+ 72DB              ;   Calculamos (End_Snapshot)
 156+ 72DB
 157+ 72DB A7               and a
 158+ 72DC ED 4A            adc hl,bc
 159+ 72DE 22 43 89         ld (End_Snapshot),hl
 160+ 72E1
 161+ 72E1              ;   Limpiamos Album_de_fotos_1.
 162+ 72E1
 163+ 72E1 2A 49 89         ld hl,(End_Snapshot_1)
 164+ 72E4 01 54 70         ld bc,Album_de_fotos_1
 165+ 72E7 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72EA AF               xor a
 167+ 72EB 02               ld (bc),a
 168+ 72EC
 169+ 72EC CD 4F 73         call Limpia_album
 170+ 72EF
 171+ 72EF 21 00 00         ld hl,0
 172+ 72F2 22 49 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72F5
 174+ 72F5              ; ----- ----- ----- -----
 175+ 72F5
 176+ 72F5              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72F5
 178+ 72F5 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72F8 7E               ld a,(hl)
 180+ 72F9 A7               and a
 181+ 72FA 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 72FC              ;                               ; _ información del album3 al album2.
 183+ 72FC              ; ----- ----- ----- -----
 184+ 72FC              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 72FC
 186+ 72FC 2A 4D 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 72FF 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7302 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 7305
 190+ 7305 CD 4F 73         call Limpia_album
 191+ 7308
 192+ 7308              ;   Calculamos (End_Snapshot_1):
 193+ 7308
 194+ 7308 A7               and a
 195+ 7309 ED 4A            adc hl,bc
 196+ 730B 22 49 89         ld (End_Snapshot_1),hl
 197+ 730E
 198+ 730E              ;   Limpiamos Album_de_fotos_2.
 199+ 730E
 200+ 730E 2A 4D 89         ld hl,(End_Snapshot_2)
 201+ 7311 01 A8 70         ld bc,Album_de_fotos_2
 202+ 7314 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 7317 AF               xor a
 204+ 7318 02               ld (bc),a
 205+ 7319
 206+ 7319 CD 4F 73         call Limpia_album
 207+ 731C
 208+ 731C 21 00 00         ld hl,0
 209+ 731F 22 4D 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7322
 211+ 7322              ; ----- ----- ----- -----
 212+ 7322
 213+ 7322              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7322
 215+ 7322 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 7325 7E               ld a,(hl)
 217+ 7326 A7               and a
 218+ 7327 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 7328
 220+ 7328              ; ----- ----- ----- -----
 221+ 7328              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 7328
 223+ 7328 2A 51 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 732B 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 732E 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7331
 227+ 7331 CD 4F 73         call Limpia_album
 228+ 7334
 229+ 7334              ;   Calculamos (End_Snapshot_2):
 230+ 7334
 231+ 7334 A7               and a
 232+ 7335 ED 4A            adc hl,bc
 233+ 7337 22 4D 89         ld (End_Snapshot_2),hl
 234+ 733A
 235+ 733A              ;   Limpiamos Album_de_fotos_3.
 236+ 733A
 237+ 733A 2A 51 89         ld hl,(End_Snapshot_3)
 238+ 733D 01 FC 70         ld bc,Album_de_fotos_3
 239+ 7340 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7343 AF               xor a
 241+ 7344 02               ld (bc),a
 242+ 7345
 243+ 7345 CD 4F 73         call Limpia_album
 244+ 7348
 245+ 7348 21 00 00         ld hl,0
 246+ 734B 22 51 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 734E C9               ret
 248+ 734F
 249+ 734F              ; ----------------------------------------------------
 250+ 734F              ;
 251+ 734F              ;   10/8/23
 252+ 734F              ;
 253+ 734F              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 734F              ;
 255+ 734F              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 734F              ;           BC ..... Dirección de inicio del álbum.
 257+ 734F              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 734F
 259+ 734F              ;    ld hl,(End_Snapshot)
 260+ 734F              ;    ld bc,Album_de_fotos
 261+ 734F              ;    ld de,Album_de_fotos+1
 262+ 734F
 263+ 734F              ;   MODIFICA: A,HL,BC y DE.
 264+ 734F
 265+ 734F              Limpia_album
 266+ 734F D5               push de            ; Guardo DESTINO.
 267+ 7350 C5               push bc            ; Guardo ORIGEN.
 268+ 7351 ED 42            sbc hl,bc
 269+ 7353 4D               ld c,l
 270+ 7354 44               ld b,h
 271+ 7355 E1               pop hl
 272+ 7356 C5               push bc
 273+ 7357 ED B0            ldir
 274+ 7359 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 735A E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 735B C9               ret                         ; _ a otro).
 277+ 735C              ;
 278+ 735C
 279+ 735C              ; -----------------------------------------------
 280+ 735C
 281+ 735C
 282+ 735C
 283+ 735C
 284+ 735C
# file closed: Guarda_foto_registros.asm
1573  735C
1574  735C              	SAVESNA "Pruebas.sna", START
1575  735C
1576  735C
1577  735C
1578  735C
# file closed: Banco_de_pruebas.asm
