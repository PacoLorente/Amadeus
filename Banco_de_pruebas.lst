# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15 CD 48 8E     	call Frame
  34  AA18 CD AD 8E     	call Pinta_Amadeus
  35  AA1B CD DE 8A     	call Gestiona_Amadeus
  36  AA1E
  37  AA1E FD E1        	pop iy
  38  AA20 DD E1        	pop ix
  39  AA22 F1           	pop af
  40  AA23 C1           	pop bc
  41  AA24 D1           	pop de
  42  AA25 E1           	pop hl
  43  AA26 D9           	exx
  44  AA27 C1           	pop bc
  45  AA28 D1           	pop de
  46  AA29 E1           	pop hl
  47  AA2A 08           	ex af,af'
  48  AA2B F1           	pop af
  49  AA2C 08           	ex af,af'
  50  AA2D D9           	exx
  51  AA2E
  52  AA2E ED 7B 18 89  	ld sp,(Stack_3)
  53  AA32
  54  AA32 FB           	ei
  55  AA33 ED 4D        	reti
  56  AA35
  57  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  58  AA35
  59  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  60  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 91 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 91 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  61  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 5B 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD D9 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 5D 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD D9 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 5D 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD D9 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 5D 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 5D 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD D9 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 14 00     	ld bc,20
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 0A        	cp 10
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 0A        	ld a,10
 209+ 88B9 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  62  88C4
  63  88C4              ; ******************************************************************************************************************************************************************************************
  64  88C4              ; Constantes.
  65  88C4              ; ******************************************************************************************************************************************************************************************
  66  88C4              ;
  67  88C4              ; 4/9/23
  68  88C4              ;
  69  88C4              ; Constantes generales.
  70  88C4              ;
  71  88C4
  72  88C4              Sprite_vacio equ $f000
  73  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  74  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  75  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  76  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  77  88C4
  78  88C4              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  79  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  80  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  81  88C4              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  82  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  83  88C4              ;
  84  88C4              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  85  88C4              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  86  88C4              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  87  88C4              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  88  88C4              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  89  88C4              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  90  88C4
  91  88C4              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  92  88C4
  93  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  94  88C4
  95  88C4              ; ******************************************************************************************************************************************************************************************
  96  88C4              ; Variables.
  97  88C4              ; ******************************************************************************************************************************************************************************************
  98  88C4              ;
  99  88C4              ; 28/07/23
 100  88C4              ;
 101  88C4              ; Variables de DRAW. (Motor principal).
 102  88C4              ;
 103  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 104  88C4
 105  88C4 00           Filas db 0												; Filas. [DRAW]
 106  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 107  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 108  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 109  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 110  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 111  88CC
 112  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 113  88CC
 114  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 115  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 116  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 117  88CD 00           Attr db 0												; Atributos de la entidad:
 118  88CE
 119  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 120  88CE              ;
 121  88CE              ;	COLORES: 0 ..... NEGRO
 122  88CE              ;    		 1 ..... AZUL
 123  88CE              ; 			 2 ..... ROJO
 124  88CE              ;			 3 ..... MAGENTA
 125  88CE              ; 			 4 ..... VERDE
 126  88CE              ; 			 5 ..... CIAN
 127  88CE              ;			 6 ..... AMARILLO
 128  88CE              ; 			 7 ..... BLANCO
 129  88CE
 130  88CE 00 00        Indice_Sprite_der defw 0
 131  88D0 00 00        Indice_Sprite_izq defw 0
 132  88D2 00 00        Puntero_DESPLZ_der defw 0
 133  88D4 00 00        Puntero_DESPLZ_izq defw 0
 134  88D6
 135  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 136  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 137  88D9
 138  88D9              ; Variables de objeto. (Características).
 139  88D9
 140  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 141  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 142  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 143  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 144  88DD
 145  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 146  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 147  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 148  88DE 00 00 00...  Variables_de_borrado ds 6
 149  88E4
 150  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 151  88E6 00 00        	defw 0
 152  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 153  88EA 00 00 00 00  	db 0,0,0,0
 154  88EE
 155  88EE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 156  88EE
 157  88EE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 158  88EF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 159  88EF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 160  88EF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 161  88EF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 162  88EF              ;
 163  88EF              ; 														DESCRIPCIÖN:
 164  88EF              ;
 165  88EF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 166  88EF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 167  88EF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 168  88EF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 169  88EF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 170  88EF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 171  88EF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 172  88EF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 173  88EF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 174  88EF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 175  88EF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 176  88EF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 177  88EF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 178  88EF              ;
 179  88EF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 180  88EF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 181  88EF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 182  88EF
 183  88EF 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 184  88F0
 185  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 186  88F0
 187  88F0 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 188  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 189  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 190  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 191  88F7              ;
 192  88F7              ;
 193  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 194  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 195  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 196  88F8 00           Incrementa_puntero_backup db 0
 197  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 198  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 199  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 200  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 201  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 202  88FD              ;
 203  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 204  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 205  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 206  88FD              ;
 207  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 208  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 209  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 210  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 211  88FD              ;
 212  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 213  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 214  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 215  88FD
 216  88FD
 217  88FD              ; Variables de funcionamiento. [DRAW].
 218  88FD
 219  88FD 00           Columnas db 0
 220  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 221  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 222  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 223  8901
 224  8901              ; variables de control general.
 225  8901
 226  8901 00           Ctrl_2 db 0
 227  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 228  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 229  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 230  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 231  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 232  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 233  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 234  8902              ;
 235  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 236  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 237  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 238  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 239  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 240  8902
 241  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 242  8903
 243  8903              ;! 63 Bytes por entidad.
 244  8903
 245  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 246  8903              ;					         		---------;      ;---------
 247  8903
 248  8903
 249  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 250  8903
 251  8903 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 252  8904
 253  8904              ;														DESCRIPCIÓN:
 254  8904              ;
 255  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 256  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 257  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 258  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 259  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 260  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 261  8904
 262  8904              ;														BIT 3, Recarga de nueva oleada.
 263  8904              ;														BIT 4, Recarga de nueva oleada.
 264  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 265  8904              ;														BIT 6, **** Frame completo.
 266  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 267  8904
 268  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 269  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 270  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 271  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 272  8906
 273  8906
 274  8906
 275  8906              ; Gestión de ENTIDADES y CAJAS.
 276  8906
 277  8906 00 00        Puntero_store_caja defw 0
 278  8908 00 00        Puntero_restore_caja defw 0
 279  890A 00 00        Indice_restore_caja defw 0
 280  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 281  890D 00           Numero_parcial_de_entidades db 0
 282  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 283  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 284  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 285  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 286  8910              ;														; _ (Numero_de_malotes)="0".
 287  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 288  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 289  8914              ;														; _ puntero (Indice_entidades).
 290  8914
 291  8914
 292  8914              ;---------------------------------------------------------------------------------------------------------------
 293  8914              ;
 294  8914              ;	2/9/23
 295  8914              ;
 296  8914              ;	Álbumes.
 297  8914
 298  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 299  8916              ;														; _variable para almacenar lo posición del puntero_
 300  8916              ; 														; _de pila, SP.
 301  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 302  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 303  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 304  891A 00 00        Stack_snapshot defw 0
 305  891C 00 00        Stack_snapshot_disparos defw 0
 306  891E
 307  891E 00 00        End_Snapshot defw 0
 308  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 309  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 310  8922              ;														; _el snapshot de los registros del siguiente disparo.
 311  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 312  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 313  8924 00 00        End_Snapshot_1 defw 0
 314  8926 00 00        End_Snapshot_disparos_1 defw 0
 315  8928 00 00        End_Snapshot_2 defw 0
 316  892A 00 00        End_Snapshot_disparos_2 defw 0
 317  892C 00 00        End_Snapshot_3 defw 0
 318  892E 00 00        End_Snapshot_disparos_3 defw 0
 319  8930
 320  8930 00 00        Puntero_indice_album_de_fotos defw 0
 321  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 322  8934
 323  8934 00 00        Puntero_indice_End_Snapshot defw 0
 324  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 325  8938 00 00        Puntero_de_End_Snapshot defw 0
 326  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 327  893C
 328  893C              ;---------------------------------------------------------------------------------------------------------------
 329  893C
 330  893C              ; Gestión de Disparos.
 331  893C
 332  893C 00           Numero_de_disparotes db 0
 333  893D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 334  893F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 335  8941 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 336  8942              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 337  8942              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 338  8942 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 339  8944              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 340  8944              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 341  8944              ;														; _produzca colisión.
 342  8944 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 343  8946              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 344  8946 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 345  8949              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 346  8949 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 347  894C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 348  894C 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 349  894E 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 350  894F
 351  894F              ;---------------------------------------------------------------------------------------------------------------
 352  894F
 353  894F              ; Relojes y temporizaciones.
 354  894F
 355  894F 00           Contador_de_frames db 0
 356  8950 00           Contador_de_frames_2 db 0
 357  8951
 358  8951 04           Clock_explosion db 4
 359  8952 1E           Clock_Entidades_en_curso db 30
 360  8953 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 361  8954              ;														; Repite la oleada de entidades.
 362  8954 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 363  8955 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 364  8956 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 365  8957
 366  8957 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 367  8958 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 368  8959 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 369  895A
 370  895A              ;---------------------------------------------------------------------------------------------------------------
 371  895A
 372  895A              ; Gestión de NIVELES.
 373  895A
 374  895A 00           Nivel db 0												; Nivel actual del juego.
 375  895B 00 00        Puntero_indice_NIVELES defw 0
 376  895D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 377  895F              ; 														; _ que definen el NIVEL.
 378  895F              ; Y todo comienza aquí .....
 379  895F              ;
 380  895F              ; Rutina principal *************************************************************************************************************************************************************************
 381  895F              ;
 382  895F              ;	14/11/22
 383  895F
 384  895F              START
 385  895F
 386  895F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 387  8962 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 388  8964 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 389  8966 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 390  8968 F3           	DI
 391  8969
 392  8969 3E 07        	ld a,%00000111
 393  896B CD BE 99     	call Cls
 394  896E
 395  896E CD B2 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 396  8971
 397  8971              ; INICIALIZACIÓN.
 398  8971
 399  8971 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 400  8974
 401  8974 CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 402  8977
 403  8977 CD DB 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 404  897A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 405  897A CD F1 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 406  897D              ;													     ; _ malotes antes de guardar ninguna foto.
 407  897D              ; ----------
 408  897D
 409  897D CD 62 8D     	call Restore_entidad
 410  8980
 411  8980 21 0D 89     	ld hl,Numero_parcial_de_entidades
 412  8983 46           	ld b,(hl)
 413  8984 04           	inc b
 414  8985 05           	dec b
 415  8986 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 416  8988
 417  8988              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 418  8988              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 419  8988              ;	Pintamos el resto de entidades:
 420  8988
 421  8988              ;	INICIA ENTIDADES !!!!!
 422  8988
 423  8988 C5           1 push bc  												; Guardo el contador de entidades.
 424  8989 CD 81 8B     	call Inicia_entidad
 425  898C C1           	pop bc
 426  898D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 427  898F
 428  898F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 429  898F              ; (Esto se dá cuando se inicia una nueva oleada).
 430  898F
 431  898F 3A 03 89     	ld a,(Ctrl_1)
 432  8992 CB 5F        	bit 3,a
 433  8994 20 15        	jr nz,5F											; Loop
 434  8996
 435  8996              ; 	INICIA AMADEUS !!!!!
 436  8996
 437  8996 CD 89 8D     3 call Restore_Amadeus
 438  8999 CD DF 8C     	call Inicia_Puntero_objeto
 439  899C CD B1 93     	call Draw
 440  899F CD A0 7F     	call Guarda_foto_registros
 441  89A2 CD 15 8E     	call Guarda_datos_de_borrado_Amadeus
 442  89A5
 443  89A5 11 9E 85     	ld de,Amadeus_db
 444  89A8 CD 9B 8D     	call Store_Amadeus
 445  89AB
 446  89AB              ; 	INICIA DISPAROS !!!!!
 447  89AB
 448  89AB              ;	call Inicia_Puntero_Disparo_Entidades
 449  89AB              ;	call Inicia_Puntero_Disparo_Amadeus
 450  89AB
 451  89AB              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 452  89AB
 453  89AB CD DB 8B     5 call Inicia_punteros_de_cajas
 454  89AE CD 62 8D     	call Restore_entidad
 455  89B1
 456  89B1 3A 03 89     	ld a,(Ctrl_1)
 457  89B4 CB 5F        	bit 3,a
 458  89B6 28 07        	jr z,6F
 459  89B8
 460  89B8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 461  89B8
 462  89B8 21 03 89     	ld hl,Ctrl_1
 463  89BB CB 9E        	res 3,(hl)
 464  89BD 18 04        	jr Main
 465  89BF
 466  89BF
 467  89BF              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 468  89BF              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 469  89BF              ; _ para situarnos en el siguiente album.
 470  89BF
 471  89BF CD 22 8C     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 472  89C2 F3           	di
 473  89C3
 474  89C3              ; ------------------------------------
 475  89C3
 476  89C3              Main
 477  89C3              ;
 478  89C3              ;	3/8/23
 479  89C3
 480  89C3 3E 01            ld a,1
 481  89C5 D3 FE        	out ($fe),a											; Azul.
 482  89C7
 483  89C7 FB           	ei
 484  89C8
 485  89C8 3A 52 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 486  89CB 47           	ld b,a
 487  89CC 3A 4F 89     	ld a,(Contador_de_frames)
 488  89CF B8           	cp b
 489  89D0 20 18        	jr nz,13F
 490  89D2
 491  89D2 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 492  89D5 47           	ld b,a
 493  89D6 3A 0E 89     	ld a,(Entidades_en_curso)
 494  89D9 B8           	cp b
 495  89DA 28 0E        	jr z,13F
 496  89DC 30 0C        	jr nc,13F
 497  89DE
 498  89DE 3C           	inc a
 499  89DF 32 0E 89     	ld (Entidades_en_curso),a
 500  89E2
 501  89E2 3A 52 89     	ld a,(Clock_Entidades_en_curso)
 502  89E5
 503  89E5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 504  89E5              ;! _ IMPREDECIBLE !!!!
 505  89E5
 506  89E5 C6 64        	add 100
 507  89E7 32 52 89     	ld (Clock_Entidades_en_curso),a
 508  89EA
 509  89EA              ; Habilita disparos.
 510  89EA
 511  89EA 21 54 89     13 ld hl,Disparo_Amadeus
 512  89ED 11 56 89     	ld de,CLOCK_repone_disparo_Amadeus
 513  89F0 CD 82 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 514  89F3
 515  89F3 21 57 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 516  89F6 11 59 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 517  89F9 CD 82 9D     	call Habilita_disparos
 518  89FC
 519  89FC              ; COLISIONES.
 520  89FC
 521  89FC CD 93 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 522  89FF
 523  89FF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 524  89FF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 525  89FF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 526  89FF
 527  89FF AF           	xor a
 528  8A00 32 41 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 529  8A03
 530  8A03 CD DB 8B     	call Inicia_punteros_de_cajas
 531  8A06 CD 62 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 532  8A09              ; 														; _ en DRAW.
 533  8A09 3A C4 88     	ld a,(Filas)
 534  8A0C A7           	and a
 535  8A0D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 536  8A0F CD 74 8D     	call Incrementa_punteros_de_cajas
 537  8A12 18 F2        	jr 12B
 538  8A14
 539  8A14              ; ---------------------------------------------------------------------------------------
 540  8A14
 541  8A14 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 542  8A17 47               ld b,a
 543  8A18 A7           	and a
 544  8A19 20 14        	jr nz,11F
 545  8A1B
 546  8A1B 21 03 89     	ld hl,Ctrl_1
 547  8A1E CB 66        	bit 4,(hl)
 548  8A20 C2 AF 8A     	jp nz,16F
 549  8A23
 550  8A23 21 03 89     	ld hl,Ctrl_1
 551  8A26 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 552  8A28
 553  8A28 3A 4F 89     	ld a,(Contador_de_frames)
 554  8A2B 3C           	inc a
 555  8A2C 32 53 89     	ld (Activa_recarga_cajas),a
 556  8A2F
 557  8A2F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 558  8A2F
 559  8A2F 3A 0E 89     11 ld a,(Entidades_en_curso)
 560  8A32 A7           	and a
 561  8A33 CA AF 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 562  8A36 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 563  8A37
 564  8A37              ; Código que ejecutamos con cada entidad:
 565  8A37              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 566  8A37
 567  8A37 C5           15 push bc 												; Nº de entidades en curso.
 568  8A38
 569  8A38              ; Impacto ???
 570  8A38
 571  8A38 3A DD 88     	ld a,(Impacto)
 572  8A3B A7           	and a
 573  8A3C 28 2D        	jr z,8F
 574  8A3E
 575  8A3E              ; Hay Impacto en esta entidad.
 576  8A3E
 577  8A3E 21 51 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 578  8A41 35           	dec (hl)
 579  8A42 20 65        	jr nz,17F
 580  8A44
 581  8A44              ;! Velocidad de la animación de la explosión.
 582  8A44
 583  8A44 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 584  8A46              ;														; _,(velocidad de la explosión).
 585  8A46 CD 95 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 586  8A49
 587  8A49              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 588  8A49
 589  8A49 3A 01 89     	ld a,(Ctrl_2)
 590  8A4C CB 4F        	bit 1,a
 591  8A4E 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 592  8A50
 593  8A50              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 594  8A50
 595  8A50 3A CC 88     	ld a,(CTRL_DESPLZ)
 596  8A53 A7           	and a
 597  8A54 20 08        	jr nz,18F
 598  8A56
 599  8A56 21 84 84     	ld hl,Indice_Explosion_2x2-2
 600  8A59 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 601  8A5C 18 06        	jr 19F
 602  8A5E
 603  8A5E 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 604  8A61 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 605  8A64
 606  8A64 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 607  8A67 CB CE        	set 1,(hl)
 608  8A69 18 22        	jr 7F
 609  8A6B
 610  8A6B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 611  8A6B              ; _con las coordenadas de la entidad almacenada en DRAW.
 612  8A6B
 613  8A6B 3A 03 89     8 ld a,(Ctrl_1)
 614  8A6E CB 57        	bit 2,a
 615  8A70 28 1B        	jr z,7F
 616  8A72
 617  8A72 2A 44 89     	ld hl,(Coordenadas_disparo_certero)
 618  8A75 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 619  8A76              ;														; E contiene la coordenada_X del disparo.
 620  8A76 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 621  8A79              ;														; H FILA, (Coordenada_y de la entidad).
 622  8A79 A7           	and a
 623  8A7A ED 52        	sbc hl,de
 624  8A7C
 625  8A7C CD CA 92     	call Determina_resultado_comparativa
 626  8A7F
 627  8A7F 78           	ld a,b
 628  8A80 A7           	and a
 629  8A81 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 630  8A83
 631  8A83              ; ----- ----- -----
 632  8A83
 633  8A83 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 634  8A85 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 635  8A88
 636  8A88 21 03 89     	ld hl,Ctrl_1
 637  8A8B CB 96        	res 2,(hl)
 638  8A8D
 639  8A8D CD 10 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 640  8A90
 641  8A90 3A EE 88     	ld a,(Ctrl_0)
 642  8A93 CB 67        	bit 4,a
 643  8A95 28 12        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 644  8A97
 645  8A97              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 646  8A97              ; [[[
 647  8A97 CD FD 8D     	call Detecta_disparo_entidad
 648  8A9A              ; ]]]
 649  8A9A
 650  8A9A CD A5 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 651  8A9D CD 03 8E     	call Guarda_datos_de_borrado
 652  8AA0
 653  8AA0 21 EE 88     	ld hl,Ctrl_0
 654  8AA3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 655  8AA5 AF           	xor a
 656  8AA6 32 EF 88     	ld (Obj_dibujado),a
 657  8AA9
 658  8AA9 CD 27 8D     17 call Store_Restore_cajas
 659  8AAC
 660  8AAC C1           	pop bc
 661  8AAD 10 88        	djnz 15B
 662  8AAF
 663  8AAF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 664  8AAF              ; Hemos gestionado todas las unidades.
 665  8AAF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 666  8AAF
 667  8AAF              ;	ld hl,Ctrl_1
 668  8AAF              ;	res 2,(hl)
 669  8AAF
 670  8AAF CD 22 8C     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 671  8AB2              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 672  8AB2              ;														; _ interrupción.
 673  8AB2              ; ----------------------------------------
 674  8AB2
 675  8AB2 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 676  8AB5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 677  8AB7 CA C3 89     	jp z,Main
 678  8ABA
 679  8ABA 3A 4F 89     	ld a,(Contador_de_frames)
 680  8ABD 47           	ld b,a
 681  8ABE 3A 53 89     	ld a,(Activa_recarga_cajas)
 682  8AC1 B8           	cp b
 683  8AC2 28 08        	jr z,20F
 684  8AC4
 685  8AC4 21 03 89     	ld hl,Ctrl_1
 686  8AC7 CB E6        	set 4,(hl)
 687  8AC9 C3 C3 89     	jp Main
 688  8ACC
 689  8ACC 21 03 89     20 ld hl,Ctrl_1
 690  8ACF CB A6        	res 4,(hl)
 691  8AD1
 692  8AD1 F3           	di
 693  8AD2
 694  8AD2 3A 4F 89     	ld a,(Contador_de_frames)
 695  8AD5
 696  8AD5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 697  8AD5              ;! _ IMPREDECIBLE !!!!
 698  8AD5
 699  8AD5 C6 0A        	add 10
 700  8AD7 32 52 89     	ld (Clock_Entidades_en_curso),a
 701  8ADA
 702  8ADA C3 74 89     	jp 4B
 703  8ADD
 704  8ADD C9           	ret
 705  8ADE
 706  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 707  8ADE
 708  8ADE              Gestiona_Amadeus
 709  8ADE
 710  8ADE 3E 04            ld a,4
 711  8AE0 D3 FE        	out ($fe),a											; Azul.
 712  8AE2
 713  8AE2
 714  8AE2 3A 4F 89     	ld a,(Contador_de_frames)
 715  8AE5 18 FE        	jr $
 716  8AE7
 717  8AE7
 718  8AE7 CD 89 8D     	call Restore_Amadeus
 719  8AEA
 720  8AEA              ;! Activa/desactiva impacto con Amadeus.
 721  8AEA
 722  8AEA 3A DD 88     	ld a,(Impacto)
 723  8AED A7           	and a
 724  8AEE 20 FE        	jr nz,$
 725  8AF0
 726  8AF0 CD 69 8B     	call Mov_Amadeus
 727  8AF3
 728  8AF3 3A EE 88     	ld a,(Ctrl_0)
 729  8AF6 CB 67        	bit 4,a
 730  8AF8 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 731  8AFA
 732  8AFA CD A5 8B     	call Guarda_foto_entidad_a_pintar
 733  8AFD CD 15 8E     	call Guarda_datos_de_borrado_Amadeus
 734  8B00
 735  8B00 21 EE 88     14 ld hl,Ctrl_0
 736  8B03 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 737  8B05
 738  8B05 AF           	xor a
 739  8B06 32 EF 88     	ld (Obj_dibujado),a
 740  8B09
 741  8B09 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 742  8B0C CD 9B 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 743  8B0F
 744  8B0F              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 745  8B0F
 746  8B0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 747  8B0F
 748  8B0F              ;	call Calcula_numero_de_disparotes
 749  8B0F
 750  8B0F C9           	ret
 751  8B10
 752  8B10              ; --------------------------------------------------------------------------------------------------------------
 753  8B10              ;
 754  8B10              ;	27/05/23
 755  8B10
 756  8B10              Mov_obj
 757  8B10
 758  8B10 3A 01 89     	ld a,(Ctrl_2)
 759  8B13 CB 4F        	bit 1,a
 760  8B15 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 761  8B17
 762  8B17              ; Explosión:
 763  8B17
 764  8B17 3A 02 89     	ld a,(Frames_explosion)
 765  8B1A A7           	and a
 766  8B1B 20 11        	jr nz,4F
 767  8B1D
 768  8B1D              ; Una alimaña menos!!!!!!!!!1
 769  8B1D
 770  8B1D CD A4 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 771  8B20 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 772  8B23 35           	dec (hl)
 773  8B24 21 0E 89     	ld hl,Entidades_en_curso
 774  8B27 35           	dec (hl)
 775  8B28 21 0C 89     	ld hl,Numero_de_entidades
 776  8B2B 35           	dec (hl)
 777  8B2C 18 3A        	jr 3F
 778  8B2E
 779  8B2E              ; -----
 780  8B2E
 781  8B2E              ;	`Movemos´ la explosión.
 782  8B2E
 783  8B2E 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 784  8B31 23           	inc hl
 785  8B32 23           	inc hl
 786  8B33 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 787  8B36 CD D9 8C     	call Extrae_address
 788  8B39 22 C8 88     	ld (Puntero_objeto),hl
 789  8B3C
 790  8B3C 21 02 89     	ld hl,Frames_explosion
 791  8B3F 35           	dec (hl)
 792  8B40
 793  8B40 CD 95 8B     	call Guarda_foto_entidad_a_borrar
 794  8B43 18 23        	jr 3F
 795  8B45
 796  8B45 AF           2 xor a
 797  8B46 32 EE 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 798  8B49
 799  8B49              ; Movemos Entidades malignas.
 800  8B49
 801  8B49 CD 2D 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 802  8B4C
 803  8B4C 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8B4F CB 67        	bit 4,a
 805  8B51 C8           	ret z
 806  8B52
 807  8B52              ; Ha habido desplazamiento de la entidad maligna.
 808  8B52              ; Ha llegado a zona de AMADEUS ???
 809  8B52
 810  8B52 3A CB 88     	ld a,(Coordenada_y)
 811  8B55 FE 14        	cp $14
 812  8B57 D4 58 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 813  8B5A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 814  8B5A              ; ---------
 815  8B5A
 816  8B5A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 817  8B5C 32 EF 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 818  8B5F CD AC 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 819  8B62 CD 35 8E     	call Repone_datos_de_borrado
 820  8B65 CD 7B 8C     	call Limpia_Variables_de_borrado
 821  8B68
 822  8B68 C9           3 ret													; _de la misma.
 823  8B69
 824  8B69              ; --------------------------------------------------------------------------------------------------------------
 825  8B69              ;
 826  8B69              ;	29/1/23
 827  8B69
 828  8B69              Mov_Amadeus
 829  8B69
 830  8B69 CD C6 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 831  8B6C
 832  8B6C 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 833  8B6F CB 67        	bit 4,a
 834  8B71 C8           	ret z
 835  8B72
 836  8B72              ; ---------
 837  8B72
 838  8B72 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 839  8B74 32 EF 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 840  8B77 CD AC 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 841  8B7A
 842  8B7A CD 25 8E     	call Repone_datos_de_borrado_Amadeus
 843  8B7D CD 7B 8C     	call Limpia_Variables_de_borrado
 844  8B80
 845  8B80 C9           	ret
 846  8B81
 847  8B81              ; -----------------------------------------------------------------------------------
 848  8B81
 849  8B81 CD DF 8C     Inicia_entidad	call Inicia_Puntero_objeto
 850  8B84 CD D2 99     	call Recompone_posicion_inicio
 851  8B87 CD B1 93     	call Draw
 852  8B8A CD A0 7F     	call Guarda_foto_registros
 853  8B8D CD 03 8E     	call Guarda_datos_de_borrado
 854  8B90 F3           	di
 855  8B91 CD 27 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 856  8B94 C9           	ret
 857  8B95
 858  8B95              ; --------------------------------------------------------------------------------------------------------------
 859  8B95              ;
 860  8B95              ;	31/8/23
 861  8B95              ;
 862  8B95              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 863  8B95
 864  8B95              Guarda_foto_entidad_a_borrar
 865  8B95
 866  8B95 CD 95 96     	call Prepara_draw
 867  8B98 CD C5 95     	call calcula_CColumnass
 868  8B9B CD FC 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 869  8B9E CD 5B 96     	call Define_rutina_de_impresion
 870  8BA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 871  8BA4 C9           	ret
 872  8BA5
 873  8BA5              ; --------------------------------------------------------------------------------------------------------------
 874  8BA5              ;
 875  8BA5              ;	31/08/23
 876  8BA5              ;
 877  8BA5              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 878  8BA5              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 879  8BA5
 880  8BA5              Guarda_foto_entidad_a_pintar
 881  8BA5
 882  8BA5              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 883  8BA5
 884  8BA5 CD B1 93     	call Draw
 885  8BA8 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 886  8BAB C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 887  8BAC
 888  8BAC              ; --------------------------------------------------------------------------------------------------------------
 889  8BAC              ;
 890  8BAC              ;
 891  8BAC
 892  8BAC 21 C4 88     Prepara_var_pintado_borrado	ld hl,Filas
 893  8BAF 3A EF 88     	ld a,(Obj_dibujado)
 894  8BB2 A7           	and a
 895  8BB3 28 05        	jr z,1F
 896  8BB5 11 E4 88     	ld de,Variables_de_pintado
 897  8BB8 18 03        	jr 2F
 898  8BBA 11 DE 88     1 ld de,Variables_de_borrado
 899  8BBD 01 08 00     2 ld bc,8
 900  8BC0 ED B0        	ldir
 901  8BC2 C9           	ret
 902  8BC3
 903  8BC3              ; --------------------------------------------------------------------------------------------------------------
 904  8BC3
 905  8BC3 21 DE 88     Repone_borrar ld hl,Variables_de_borrado
 906  8BC6 11 C4 88     	ld de,Filas
 907  8BC9 01 08 00     	ld bc,8
 908  8BCC ED B0        	ldir
 909  8BCE C9           	ret
 910  8BCF
 911  8BCF 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
 912  8BD2 11 C4 88     	ld de,Filas
 913  8BD5 01 08 00     	ld bc,8
 914  8BD8 ED B0        	ldir
 915  8BDA C9           	ret
 916  8BDB
 917  8BDB              ; *************************************************************************************************************************************************************
 918  8BDB              ;
 919  8BDB              ; 8/1/23
 920  8BDB              ;
 921  8BDB              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 922  8BDB              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 923  8BDB              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 924  8BDB
 925  8BDB              ; Destruye HL y DE !!!!!
 926  8BDB
 927  8BDB              Inicia_punteros_de_cajas
 928  8BDB
 929  8BDB 21 8C 85     	ld hl,Indice_de_cajas
 930  8BDE CD D9 8C         call Extrae_address
 931  8BE1 22 06 89         ld (Puntero_store_caja),hl
 932  8BE4 21 8E 85     	ld hl,Indice_de_cajas+2
 933  8BE7 22 0A 89     	ld (Indice_restore_caja),hl
 934  8BEA CD D9 8C     	call Extrae_address
 935  8BED 22 08 89     	ld (Puntero_restore_caja),hl
 936  8BF0 C9               ret
 937  8BF1
 938  8BF1              ; ---------------------------------------------------------------
 939  8BF1              ;
 940  8BF1              ;	9/8/23
 941  8BF1              ;
 942  8BF1              ;	Inicialización y gestión de álbumes de fotos y cajas.
 943  8BF1
 944  8BF1              Inicia_punteros_de_albumes_y_malotes
 945  8BF1
 946  8BF1 21 EC 84     	ld hl,Indice_album_de_fotos
 947  8BF4 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 948  8BF7 CD D9 8C     	call Extrae_address
 949  8BFA 22 1A 89     	ld (Stack_snapshot),hl
 950  8BFD
 951  8BFD 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 952  8C00 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 953  8C03 CD D9 8C     	call Extrae_address
 954  8C06 22 1C 89     	ld (Stack_snapshot_disparos),hl
 955  8C09
 956  8C09 21 FC 84     	ld hl,Indice_End_Snapshot
 957  8C0C 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 958  8C0F CD D9 8C     	call Extrae_address
 959  8C12 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 960  8C15
 961  8C15 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 962  8C18 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 963  8C1B CD D9 8C     	call Extrae_address
 964  8C1E 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 965  8C21
 966  8C21 C9           	ret
 967  8C22
 968  8C22              ;	2/9/23
 969  8C22
 970  8C22              Avanza_puntero_de_album_de_fotos_y_malotes
 971  8C22
 972  8C22              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 973  8C22
 974  8C22              ; Estamos en el último álbum del índice???.
 975  8C22
 976  8C22 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 977  8C25 01 F2 84     	ld bc,Indice_album_de_fotos+6
 978  8C28 A7           	and a
 979  8C29 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 980  8C2B 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 981  8C2D
 982  8C2D 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 983  8C30 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 984  8C32 76           	halt
 985  8C33 C9           	ret
 986  8C34
 987  8C34 F3           1 di
 988  8C35 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 989  8C38 23           	inc hl
 990  8C39 23           	inc hl
 991  8C3A 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 992  8C3D CD D9 8C     	call Extrae_address
 993  8C40 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 994  8C43
 995  8C43 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
 996  8C46 23           	inc hl
 997  8C47 23           	inc hl
 998  8C48 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 999  8C4B CD D9 8C     	call Extrae_address
1000  8C4E 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1001  8C51 FB           	ei
1002  8C52
1003  8C52 C9           	ret
1004  8C53
1005  8C53              ; *************************************************************************************************************************************************************
1006  8C53              ;
1007  8C53              ; 8/1/23
1008  8C53              ;
1009  8C53              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1010  8C53
1011  8C53 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1012  8C56 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1013  8C59 C9           	ret
1014  8C5A 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1015  8C5D 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1016  8C60 C9           	ret
1017  8C61
1018  8C61              ; -------------------------------------------------------------------------------------------------------------
1019  8C61              ;
1020  8C61              ; 4/9/23
1021  8C61              ;
1022  8C61
1023  8C61              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1024  8C61
1025  8C61 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
1026  8C64 7E           	ld a,(hl)
1027  8C65 A7           	and a
1028  8C66 C8           	ret z
1029  8C67
1030  8C67 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1031  8C6A 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1032  8C6D 01 0C 00     	ld bc,12
1033  8C70 AF           	xor a
1034  8C71 77           	ld (hl),a
1035  8C72 ED B0        	ldir
1036  8C74
1037  8C74 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1038  8C77 22 22 89     	ld (End_Snapshot_Amadeus),hl
1039  8C7A
1040  8C7A C9           	ret
1041  8C7B
1042  8C7B 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1043  8C7E 11 DF 88     	ld de,Variables_de_borrado+1
1044  8C81 01 05 00     	ld bc,5
1045  8C84 AF           	xor a
1046  8C85 77           	ld (hl),a
1047  8C86 ED B0        	ldir
1048  8C88 C9           	ret
1049  8C89
1050  8C89              ; -------------------------------------------------------------------------------------------------------------
1051  8C89              ;
1052  8C89              ; 8/9/23
1053  8C89              ;
1054  8C89
1055  8C89              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1056  8C89              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1057  8C89
1058  8C89              Calcula_numero_de_malotes
1059  8C89
1060  8C89 21 00 70     	ld hl,Album_de_fotos
1061  8C8C EB           	ex de,hl
1062  8C8D 2A 1E 89     	ld hl,(End_Snapshot)
1063  8C90
1064  8C90 7C           	ld a,h
1065  8C91 A7           	and a
1066  8C92 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1067  8C94
1068  8C94 06 00        4 ld b,0
1069  8C96 7D           	ld a,l
1070  8C97 93           	sub e
1071  8C98 28 07        	jr z,1F
1072  8C9A
1073  8C9A              ; Nº de malotes no es "0".
1074  8C9A
1075  8C9A D6 06        2 sub 6
1076  8C9C 04           	inc b
1077  8C9D A7           	and a
1078  8C9E 20 FA        	jr nz,2B
1079  8CA0 78           	ld a,b
1080  8CA1
1081  8CA1 32 0F 89     1 ld (Numero_de_malotes),a
1082  8CA4 C9           	ret
1083  8CA5
1084  8CA5              ; -------------------------------------------------------------------------------------------------------------
1085  8CA5              ;
1086  8CA5              ; 8/9/23
1087  8CA5              ;
1088  8CA5
1089  8CA5              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1090  8CA5              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1091  8CA5
1092  8CA5              Calcula_malotes_Amadeus
1093  8CA5
1094  8CA5 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1095  8CA8 EB           	ex de,hl
1096  8CA9 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1097  8CAC
1098  8CAC 7C           	ld a,h
1099  8CAD A7           	and a
1100  8CAE 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1101  8CB0
1102  8CB0 06 00        	ld b,0
1103  8CB2 7D           	ld a,l
1104  8CB3 93           	sub e
1105  8CB4 28 07        	jr z,1F
1106  8CB6
1107  8CB6              ; Nº de malotes no es "0".
1108  8CB6
1109  8CB6 D6 06        2 sub 6
1110  8CB8 04           	inc b
1111  8CB9 A7           	and a
1112  8CBA 20 FA        	jr nz,2B
1113  8CBC 78           	ld a,b
1114  8CBD
1115  8CBD 32 0F 89     1 ld (Numero_de_malotes),a
1116  8CC0 C9           	ret
1117  8CC1
1118  8CC1              ; -------------------------------------------------------------------------------------------------------------
1119  8CC1              ;
1120  8CC1              ; 28/2/23
1121  8CC1              ;
1122  8CC1
1123  8CC1              Calcula_numero_de_disparotes
1124  8CC1
1125  8CC1 21 50 71     	ld hl,Album_de_fotos_disparos
1126  8CC4 EB           	ex de,hl
1127  8CC5 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1128  8CC8
1129  8CC8 06 00        	ld b,0
1130  8CCA 7D           	ld a,l
1131  8CCB 93           	sub e
1132  8CCC 28 07        	jr z,1F
1133  8CCE
1134  8CCE              ; Nº de malotes no es "0".
1135  8CCE
1136  8CCE D6 06        2 sub 6
1137  8CD0 04           	inc b
1138  8CD1 A7           	and a
1139  8CD2 20 FA        	jr nz,2B
1140  8CD4 78           	ld a,b
1141  8CD5
1142  8CD5 32 3C 89     1 ld (Numero_de_disparotes),a
1143  8CD8 C9           	ret
1144  8CD9
1145  8CD9              ; *************************************************************************************************************************************************************
1146  8CD9              ;
1147  8CD9              ; 20/10/22
1148  8CD9              ;
1149  8CD9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1150  8CD9              ;
1151  8CD9              ; Destruye el puntero y DE !!!!!
1152  8CD9
1153  8CD9 5E           Extrae_address ld e,(hl)
1154  8CDA 23           	inc hl
1155  8CDB 56           	ld d,(hl)
1156  8CDC 2B           	dec hl
1157  8CDD EB           	ex de,hl
1158  8CDE C9           	ret
1159  8CDF
1160  8CDF              ; *************************************************************************************************************************************************************
1161  8CDF              ;
1162  8CDF              ;	7/2/23
1163  8CDF              ;
1164  8CDF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1165  8CDF              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1166  8CDF              ;
1167  8CDF              ;   Destruye HL y BC !!!!!,
1168  8CDF              ;
1169  8CDF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1170  8CDF              ;					"0" ..... Izquierda.
1171  8CDF
1172  8CDF              Inicia_Puntero_objeto
1173  8CDF
1174  8CDF 3A D8 88     	ld a,(Cuad_objeto)
1175  8CE2 E6 01        	and 1
1176  8CE4 F5           	push af
1177  8CE5 CC 03 8D     	call z,Inicia_puntero_objeto_izq
1178  8CE8 F1           	pop af
1179  8CE9 28 2B        	jr z,1F
1180  8CEB CD F0 8C     	call Inicia_puntero_objeto_der
1181  8CEE 18 26        	jr 1F
1182  8CF0
1183  8CF0              ; Arrancamos desde la parte izquierda de la pantalla.
1184  8CF0              ; Iniciamos (Indice_Sprite_der).
1185  8CF0
1186  8CF0 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1187  8CF3 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1188  8CF6 CD D9 8C     	call Extrae_address
1189  8CF9 22 C8 88     	ld (Puntero_objeto),hl
1190  8CFC
1191  8CFC 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1192  8CFF 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1193  8D02 C9           	ret
1194  8D03
1195  8D03              ; Arrancamos desde la parte derecha de la pantalla.
1196  8D03              ; Iniciamos (Indice_Sprite_izq).
1197  8D03
1198  8D03 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1199  8D06 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1200  8D09 CD D9 8C     	call Extrae_address
1201  8D0C 22 C8 88     	ld (Puntero_objeto),hl
1202  8D0F
1203  8D0F 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1204  8D12 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1205  8D15 C9           	ret
1206  8D16
1207  8D16              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1208  8D16
1209  8D16 21 40 83     1 ld hl,Amadeus
1210  8D19 ED 4B C8 88  	ld bc,(Puntero_objeto)
1211  8D1D B7 ED 42     	sub hl,bc
1212  8D20 C0           	ret nz
1213  8D21 21 EE 88     	ld hl,Ctrl_0
1214  8D24 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1215  8D26 C9           	ret 												; _de nuestra nave en los extremos.
1216  8D27
1217  8D27              ; *************************************************************************************************************************************************************
1218  8D27              ;
1219  8D27              ;	14/5/23
1220  8D27              ;
1221  8D27              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1222  8D27              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1223  8D27
1224  8D27              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1225  8D27              ;	_de la 2ª y 3ª entidad respectivamente.
1226  8D27
1227  8D27              Store_Restore_cajas
1228  8D27
1229  8D27 E5           	push hl
1230  8D28 D5           	push de
1231  8D29 C5            	push bc
1232  8D2A
1233  8D2A              ;	STORE !!!!!
1234  8D2A              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1235  8D2A
1236  8D2A 21 C4 88     	ld hl,Filas
1237  8D2D ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1238  8D31 01 3F 00     	ld bc,63
1239  8D34 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1240  8D36
1241  8D36              ; 	Entidad_sospechosa. 20/4/23
1242  8D36
1243  8D36 3A DD 88     	ld a,(Impacto)
1244  8D39 A7           	and a
1245  8D3A 28 0C        	jr z,1F
1246  8D3C
1247  8D3C 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1248  8D3F 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1249  8D42 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1250  8D43 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1251  8D45 22 42 89     	ld (Entidad_sospechosa_de_colision),hl
1252  8D48
1253  8D48              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1254  8D48
1255  8D48 2A 08 89     1 ld hl,(Puntero_restore_caja)
1256  8D4B 7E           	ld a,(hl)
1257  8D4C A7           	and a
1258  8D4D F5           	push af
1259  8D4E 28 08        	jr z,2F
1260  8D50
1261  8D50 11 C4 88     	ld de,Filas
1262  8D53 01 3F 00     	ld bc,63
1263  8D56 ED B0        	ldir
1264  8D58
1265  8D58 CD 74 8D     2 call Incrementa_punteros_de_cajas
1266  8D5B F1           	pop af
1267  8D5C 28 EA        	jr z,1B
1268  8D5E
1269  8D5E C1           	pop bc
1270  8D5F D1           	pop de
1271  8D60 E1           	pop hl
1272  8D61
1273  8D61 C9           	ret
1274  8D62
1275  8D62              ; **************************************************************************************************
1276  8D62              ;
1277  8D62              ;	12/05/23
1278  8D62              ;
1279  8D62              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1280  8D62
1281  8D62 E5           Restore_entidad push hl
1282  8D63 D5           	push de
1283  8D64 C5            	push bc
1284  8D65
1285  8D65 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1286  8D68 11 C4 88     	ld de,Filas
1287  8D6B 01 3F 00     	ld bc,63
1288  8D6E ED B0        	ldir
1289  8D70
1290  8D70 C1           	pop bc
1291  8D71 D1           	pop de
1292  8D72 E1           	pop hl
1293  8D73 C9           	ret
1294  8D74
1295  8D74
1296  8D74              ; **************************************************************************************************
1297  8D74              ;
1298  8D74              ;	08/05/23
1299  8D74              ;
1300  8D74              ;	Incrementamos los dos punteros de entidades. (+1).
1301  8D74
1302  8D74 2A 08 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1303  8D77 22 06 89     	ld (Puntero_store_caja),hl
1304  8D7A 2A 0A 89     	ld hl,(Indice_restore_caja)
1305  8D7D 23           	inc hl
1306  8D7E 23           	inc hl
1307  8D7F 22 0A 89     	ld (Indice_restore_caja),hl
1308  8D82 CD D9 8C         call Extrae_address
1309  8D85 22 08 89         ld (Puntero_restore_caja),hl
1310  8D88 C9               ret
1311  8D89
1312  8D89              ; **************************************************************************************************
1313  8D89              ;
1314  8D89              ;	25/01/23
1315  8D89              ;
1316  8D89              ;	Restore_Amadeus
1317  8D89              ;
1318  8D89              ;	Cargamos en DRAW los parámetros de Amadeus.
1319  8D89              ;
1320  8D89
1321  8D89 E5           Restore_Amadeus	push hl
1322  8D8A D5           	push de
1323  8D8B C5            	push bc
1324  8D8C 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1325  8D8F 11 C4 88     	ld de,Filas
1326  8D92 01 3F 00     	ld bc,63
1327  8D95 ED B0        	ldir
1328  8D97 C1           	pop bc
1329  8D98 D1           	pop de
1330  8D99 E1           	pop hl
1331  8D9A C9           	ret
1332  8D9B
1333  8D9B              ; *************************************************************************************************************************************************************
1334  8D9B              ;
1335  8D9B              ;	29/04/23
1336  8D9B              ;
1337  8D9B              ;	Store_Amadeus
1338  8D9B              ;
1339  8D9B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1340  8D9B              ;
1341  8D9B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1342  8D9B              ;
1343  8D9B              ;	DESTRUYE: HL y BC y DE.
1344  8D9B
1345  8D9B 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1346  8D9E 01 3F 00     	ld bc,63
1347  8DA1 ED B0        	ldir
1348  8DA3 C9           	ret
1349  8DA4
1350  8DA4              ; -----------------------------------------------------------
1351  8DA4              ;
1352  8DA4              ;	27/04/23
1353  8DA4              ;
1354  8DA4              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1355  8DA4              ;
1356  8DA4              ;	Destruye: HL,BC,DE,A
1357  8DA4
1358  8DA4 21 C4 88     Borra_datos_entidad ld hl,Filas
1359  8DA7 01 3E 00     	ld bc,62
1360  8DAA AF           	xor a
1361  8DAB 77           	ld (hl),a
1362  8DAC 11 C5 88     	ld de,Filas+1
1363  8DAF ED B0        	ldir
1364  8DB1 C9           	ret
1365  8DB2
1366  8DB2              ; -----------------------------------------------------------
1367  8DB2
1368  8DB2              ; Teclado.
1369  8DB2
1370  8DB2 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1371  8DB4 DB FE        	in a,($fe)
1372  8DB6 E6 01        	and $01
1373  8DB8 28 02        	jr z,1f
1374  8DBA 18 F6        	jr Pulsa_ENTER
1375  8DBC C9           1 ret
1376  8DBD
1377  8DBD              ; **************************************************************************************************
1378  8DBD              ;
1379  8DBD              ; Temporización.
1380  8DBD
1381  8DBD              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1382  8DBD              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1383  8DBD              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1384  8DBD              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1385  8DBD
1386  8DBD              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1387  8DBD              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1388  8DBD              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1389  8DBD
1390  8DBD              ; A partir de $4f61 no hace falta DELAY.
1391  8DBD
1392  8DBD              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1393  8DBD
1394  8DBD 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1395  8DC0 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1396  8DC1 78           	LD A,B
1397  8DC2 A7           	AND A
1398  8DC3 20 FB        	JR NZ,wait
1399  8DC5 C9           	RET
1400  8DC6
1401  8DC6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1402  8DC6              ;
1403  8DC6              ;	5/3/23
1404  8DC6              ;
1405  8DC6              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1406  8DC6
1407  8DC6              Movimiento_Amadeus
1408  8DC6
1409  8DC6              ; Disparo.
1410  8DC6
1411  8DC6 3A 54 89     	ld a,(Disparo_Amadeus)
1412  8DC9 A7           	and a
1413  8DCA 20 02        	jr nz,1F
1414  8DCC 18 15        	jr 2F
1415  8DCE
1416  8DCE 3E F7        1 ld a,$f7													; "5" para disparar.
1417  8DD0 DB FE        	in a,($fe)
1418  8DD2 E6 10        	and $10
1419  8DD4
1420  8DD4 F5           	push af
1421  8DD5 CC BB 8E     	call z,Genera_disparo
1422  8DD8 F1           	pop af
1423  8DD9 20 08        	jr nz,2F
1424  8DDB
1425  8DDB 3A 54 89     	ld a,(Disparo_Amadeus)
1426  8DDE EE 01        	xor 1
1427  8DE0 32 54 89     	ld (Disparo_Amadeus),a
1428  8DE3
1429  8DE3 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1430  8DE5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1431  8DE7 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1432  8DE9 CC 8C 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1433  8DEC
1434  8DEC 3E F7        	ld a,$f7
1435  8DEE DB FE        	in a,($fe)
1436  8DF0 E6 01        	and $01
1437  8DF2 C8           	ret z
1438  8DF3
1439  8DF3 3E F7        	ld a,$f7
1440  8DF5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1441  8DF7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1442  8DF9 CC 6E 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1443  8DFC C9           	ret
1444  8DFD
1445  8DFD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1446  8DFD              ;
1447  8DFD              ;	Rutina provisional para que los malotes cagen balas.
1448  8DFD
1449  8DFD              Detecta_disparo_entidad
1450  8DFD
1451  8DFD 3A 57 89     	ld a,(Disparo_entidad)
1452  8E00 A7           	and a
1453  8E01 C8           	ret z
1454  8E02
1455  8E02              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1456  8E02
1457  8E02              ;	ld a,$7f				; Detecta SPACE.
1458  8E02              ;	in a,($fe)
1459  8E02              ;	and 1
1460  8E02              ;	ret nz
1461  8E02
1462  8E02              ;	call Genera_disparo
1463  8E02 C9           	ret
1464  8E03
1465  8E03              ; ----------------------------------------------------------------------
1466  8E03              ;
1467  8E03              ;	8/9/23
1468  8E03
1469  8E03              Guarda_datos_de_borrado
1470  8E03
1471  8E03 F3           	di
1472  8E04
1473  8E04 2A 1A 89     	ld hl,(Stack_snapshot)
1474  8E07
1475  8E07 2B           	dec hl
1476  8E08 7E           	ld a,(hl)
1477  8E09 A7           	and a
1478  8E0A C8           	ret z										; Salimos si es álbum está vacío.
1479  8E0B
1480  8E0B 11 E3 88     	ld de,Variables_de_borrado+5
1481  8E0E 01 06 00     	ld bc,6
1482  8E11 ED B8        	lddr
1483  8E13
1484  8E13 FB           	ei
1485  8E14
1486  8E14 C9           	ret
1487  8E15
1488  8E15              ; ----------------------------------------------------------------------
1489  8E15              ;
1490  8E15              ;	8/9/23
1491  8E15
1492  8E15 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1493  8E18 2B            	dec hl
1494  8E19 7E           	ld a,(hl)
1495  8E1A A7           	and a
1496  8E1B C8           	ret z										; Salimos si es álbum está vacío.
1497  8E1C
1498  8E1C 11 E3 88     	ld de,Variables_de_borrado+5
1499  8E1F 01 06 00     	ld bc,6
1500  8E22 ED B8        	lddr
1501  8E24 C9           	ret
1502  8E25
1503  8E25              ; ----------------------------------------------------------------------
1504  8E25              ;
1505  8E25              ;	9/9/23
1506  8E25
1507  8E25              Repone_datos_de_borrado_Amadeus
1508  8E25
1509  8E25 21 DE 88     	ld hl,Variables_de_borrado
1510  8E28 11 A0 72     	ld de,Album_de_fotos_Amadeus
1511  8E2B 01 06 00     	ld bc,6
1512  8E2E ED B0        	ldir
1513  8E30
1514  8E30 EB           	ex de,hl
1515  8E31 22 22 89     	ld (End_Snapshot_Amadeus),hl
1516  8E34
1517  8E34 C9           	ret
1518  8E35
1519  8E35              ; ----------------------------------------------------------------------
1520  8E35              ;
1521  8E35              ;	18/9/23
1522  8E35              ;
1523  8E35
1524  8E35              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1525  8E35              ;	_ Album_de_fotos correspondiente.
1526  8E35
1527  8E35              ;	DI.
1528  8E35
1529  8E35              Repone_datos_de_borrado
1530  8E35
1531  8E35 F3           	di
1532  8E36
1533  8E36 ED 5B 1A 89  	ld de,(Stack_snapshot)
1534  8E3A 21 DE 88     	ld hl,Variables_de_borrado
1535  8E3D 01 06 00     	ld bc,6
1536  8E40 ED B0        	ldir
1537  8E42
1538  8E42 EB           	ex de,hl
1539  8E43 22 1A 89     	ld (Stack_snapshot),hl
1540  8E46
1541  8E46 FB           	ei
1542  8E47
1543  8E47 C9           	ret
1544  8E48
1545  8E48              ; ----------------------------------------------------------------------
1546  8E48              ;
1547  8E48              ;	11/8/23
1548  8E48
1549  8E48              Frame
1550  8E48
1551  8E48              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1552  8E48              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1553  8E48
1554  8E48              ; PINTAMOS.
1555  8E48
1556  8E48 3E 02        	ld a,2
1557  8E4A D3 FE            out ($fe),a											; Rojo.
1558  8E4C
1559  8E4C              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1560  8E4C              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1561  8E4C
1562  8E4C 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1563  8E4F 01 EC 84     	ld bc,Indice_album_de_fotos
1564  8E52 A7           	and a
1565  8E53 ED 42        	sbc hl,bc
1566  8E55
1567  8E55 28 FE        	jr z,$
1568  8E57 28 4E        	jr z,6F
1569  8E59
1570  8E59 CD 89 8C     	call Calcula_numero_de_malotes
1571  8E5C CD BF 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1572  8E5F
1573  8E5F              ;	call Extrae_foto_disparos
1574  8E5F 3E 01            ld a,1
1575  8E61 D3 FE            out ($fe),a											; Azul.
1576  8E63
1577  8E63              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1578  8E63 CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1579  8E66
1580  8E66              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1581  8E66
1582  8E66 3A 03 89     	ld a,(Ctrl_1)
1583  8E69 CB 6F        	bit 5,a
1584  8E6B 20 24        	jr nz,1F
1585  8E6D
1586  8E6D              ; No hemos terminado de guardar el último FRAME.
1587  8E6D
1588  8E6D 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1589  8E70 2B           	dec hl
1590  8E71 2B           	dec hl
1591  8E72 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1592  8E75
1593  8E75 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1594  8E78 2B           	dec hl
1595  8E79 2B           	dec hl
1596  8E7A 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1597  8E7D CD D9 8C     	call Extrae_address
1598  8E80 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1599  8E83
1600  8E83 CD D9 8C     	call Extrae_address
1601  8E86
1602  8E86              ; Esta vacío este album???
1603  8E86
1604  8E86 24           	inc h
1605  8E87 25           	dec h
1606  8E88 20 02        	jr nz,5F
1607  8E8A
1608  8E8A              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1609  8E8A
1610  8E8A 18 05        	jr 1F
1611  8E8C
1612  8E8C 22 1A 89     5 ld (Stack_snapshot),hl
1613  8E8F 18 09        	jr 2F
1614  8E91
1615  8E91              ; FRAME completo.
1616  8E91
1617  8E91 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1618  8E94 CD D9 8C     	call Extrae_address
1619  8E97 22 1A 89     	ld (Stack_snapshot),hl
1620  8E9A
1621  8E9A              ;	En este punto:
1622  8E9A
1623  8E9A              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1624  8E9A              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1625  8E9A
1626  8E9A              ; RELOJES.
1627  8E9A
1628  8E9A 21 4F 89     2 ld hl,Contador_de_frames
1629  8E9D 7E           	ld a,(hl)
1630  8E9E FE FF        	cp $ff
1631  8EA0 20 04        	jr nz,3F
1632  8EA2 34           	inc (hl)
1633  8EA3 21 50 89     	ld hl,Contador_de_frames_2
1634  8EA6 34           3 inc (hl)											; 0 - 255
1635  8EA7
1636  8EA7 21 03 89     6 ld hl,Ctrl_1
1637  8EAA CB AE        	res 5,(hl)
1638  8EAC C9           	ret
1639  8EAD
1640  8EAD              Pinta_Amadeus
1641  8EAD
1642  8EAD 3E 06        	ld a,6
1643  8EAF D3 FE            out ($fe),a										; Amarillo
1644  8EB1
1645  8EB1 CD A5 8C        	call Calcula_malotes_Amadeus
1646  8EB4 CD 41 97     	call Extrae_foto_Amadeus
1647  8EB7 CD 61 8C     	call Limpia_album_Amadeus
1648  8EBA C9           	ret
1649  8EBB
1650  8EBB              ; ---------------------------------------------------------------
1651  8EBB
1652  8EBB              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EBB              ; ******************************************************************************************************************************************************************************************
   2+ 8EBB              ;
   3+ 8EBB              ;   21/07/23
   4+ 8EBB              ;
   5+ 8EBB              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EBB              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EBB              ;
   8+ 8EBB              ;
   9+ 8EBB              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EBB              ;
  11+ 8EBB              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EBB              ;               _ hacen las entidades hacia abajo.
  13+ 8EBB              ;
  14+ 8EBB              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EBB              ;
  16+ 8EBB              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EBB              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EBB              ;
  19+ 8EBB              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EBB              ;           _ la bala.
  21+ 8EBB              ;
  22+ 8EBB              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EBB              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EBB              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EBB              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EBB              ;           _ en el momento de generarse la bala)).
  27+ 8EBB
  28+ 8EBB              Genera_disparo
  29+ 8EBB
  30+ 8EBB              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EBB              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EBB              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EBB              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EBB              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EBB              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EBB              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EBB
  38+ 8EBB              ; Exclusiones:
  39+ 8EBB
  40+ 8EBB 3A DC 88         ld a,(Vel_down)
  41+ 8EBE 47               ld b,a
  42+ 8EBF 3A 4E 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EC2 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EC3 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EC4 3A FD 88         ld a,(Columnas)
  46+ 8EC7 47               ld b,a
  47+ 8EC8 3A C5 88         ld a,(Columns)
  48+ 8ECB B8               cp b
  49+ 8ECC C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8ECD
  51+ 8ECD              ; ----- ----- -----
  52+ 8ECD
  53+ 8ECD 3A EE 88         ld a,(Ctrl_0)
  54+ 8ED0 CB 77            bit 6,a
  55+ 8ED2 20 06            jr nz,14F
  56+ 8ED4
  57+ 8ED4 3A CB 88         ld a,(Coordenada_y)
  58+ 8ED7 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ED9 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EDA
  61+ 8EDA 21 00 80     14 ld hl,Indice_disparo
  62+ 8EDD 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8EE0 4F               ld c,a
  64+ 8EE1 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EE3              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EE3              ;                                            ""        ""       "f9", B="1"
  67+ 8EE3              ;                                            ""        ""       "fb", B="2"
  68+ 8EE3              ;                                            ""        ""       "fb", B="3"
  69+ 8EE3 A7               and a
  70+ 8EE4 28 10            jr z,1F
  71+ 8EE6 E6 01            and 1
  72+ 8EE8 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EE9
  74+ 8EE9 79               ld a,c
  75+ 8EEA 16 F9            ld d,$f9
  76+ 8EEC 23           2 inc hl
  77+ 8EED 23               inc hl
  78+ 8EEE 04               inc b
  79+ 8EEF BA               cp d
  80+ 8EF0 28 04            jr z,1F
  81+ 8EF2 14               inc d
  82+ 8EF3 14               inc d
  83+ 8EF4 18 F6            jr 2B
  84+ 8EF6
  85+ 8EF6 CD D9 8C     1 call Extrae_address
  86+ 8EF9 E5               push hl
  87+ 8EFA FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EFC DD 21 87 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F00
  90+ 8F00              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F00              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F00
  93+ 8F00 3A EE 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F03 CB 77            bit 6,a
  95+ 8F05 20 04            jr nz,19F
  96+ 8F07
  97+ 8F07 AF               xor a
  98+ 8F08 32 57 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F0B
 100+ 8F0B 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8F0E FE 02            cp 2
 102+ 8F10 38 66            jr c,3F
 103+ 8F12 28 64            jr z,3F
 104+ 8F14
 105+ 8F14              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F14
 107+ 8F14 E6 01            and 1
 108+ 8F16 28 30            jr z,4F
 109+ 8F18
 110+ 8F18              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F18              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F18              ;
 113+ 8F18              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F18              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F18              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F18
 117+ 8F18 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8F1B
 119+ 8F1B              ;   Amadeus o entidad ???.
 120+ 8F1B
 121+ 8F1B 3A EE 88         ld a,(Ctrl_0)
 122+ 8F1E CB 77            bit 6,a
 123+ 8F20 28 0A            jr z,8F
 124+ 8F22
 125+ 8F22              ; 	Dispara Amadeus.
 126+ 8F22
 127+ 8F22 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F24 CD B0 96         call PreviousScan
 129+ 8F27 CD B0 96         call PreviousScan
 130+ 8F2A
 131+ 8F2A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F2A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F2A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F2A
 136+ 8F2A 18 11            jr 10F
 137+ 8F2C
 138+ 8F2C              ; 	Dispara Entidad.
 139+ 8F2C
 140+ 8F2C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F2F              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F2F
 143+ 8F2F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F2F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F2F
 146+ 8F2F C5               push bc
 147+ 8F30 06 10            ld b,16
 148+ 8F32 CD A1 96     9 call NextScan
 149+ 8F35 10 FB            djnz 9B
 150+ 8F37 C1               pop bc
 151+ 8F38 CD A2 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F3B 18 06            jr 17F
 153+ 8F3D
 154+ 8F3D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F3D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F3D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F3D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F3D
 159+ 8F3D CD A2 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F40 CD 17 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F43              ;                                                      ; _al generar el disparo.
 162+ 8F43
 163+ 8F43              ; 	LLegados a este punto tendremos:
 164+ 8F43              ;
 165+ 8F43              ;       Puntero_objeto_disparo en IY.
 166+ 8F43              ;       Rutinas_de_impresion en IX.
 167+ 8F43              ;       Puntero_de_impresion en HL.
 168+ 8F43              ;       Impacto/Dirección en BC.
 169+ 8F43
 170+ 8F43 CD AA 8F     17 call Almacena_disparo
 171+ 8F46 18 52            jr 6F                                             ; RET.
 172+ 8F48
 173+ 8F48              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F48              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F48              ;
 176+ 8F48              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F48              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F48              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F48
 180+ 8F48 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8F4B
 182+ 8F4B              ;   Amadeus o entidad ???.
 183+ 8F4B
 184+ 8F4B 3A EE 88         ld a,(Ctrl_0)
 185+ 8F4E CB 77            bit 6,a
 186+ 8F50 28 0A            jr z,11F
 187+ 8F52
 188+ 8F52              ; 	Dispara Amadeus.
 189+ 8F52
 190+ 8F52 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F54 CD B0 96         call PreviousScan
 192+ 8F57 CD B0 96         call PreviousScan
 193+ 8F5A
 194+ 8F5A              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F5A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F5A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F5A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F5A
 199+ 8F5A 18 11            jr 13F
 200+ 8F5C
 201+ 8F5C              ; 	Dispara Entidad.
 202+ 8F5C
 203+ 8F5C 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F5F              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F5F
 206+ 8F5F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F5F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F5F
 209+ 8F5F C5               push bc
 210+ 8F60 06 10            ld b,16
 211+ 8F62 CD A1 96     12 call NextScan
 212+ 8F65 10 FB            djnz 12B
 213+ 8F67 C1               pop bc
 214+ 8F68
 215+ 8F68 CD 9B 8F         call Ajusta_disparo_parte_derecha
 216+ 8F6B 18 06            jr 18F
 217+ 8F6D
 218+ 8F6D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F6D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F6D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F6D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F6D
 223+ 8F6D CD 9B 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F70 CD 17 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F73              ;                                                       ; _al generar el disparo.
 226+ 8F73
 227+ 8F73              ; LLegados a este punto tendremos:
 228+ 8F73              ;
 229+ 8F73              ;       Puntero_objeto_disparo en IY.
 230+ 8F73              ;       Rutinas_de_impresion en IX.
 231+ 8F73              ;       Puntero_de_impresion en HL.
 232+ 8F73              ;       Impacto/Dirección en BC.
 233+ 8F73
 234+ 8F73 CD AA 8F     18 call Almacena_disparo
 235+ 8F76 18 22            jr 6F                                               ; RET.
 236+ 8F78
 237+ 8F78              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F78
 239+ 8F78 28 11        3 jr z,5F
 240+ 8F7A
 241+ 8F7A              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F7A              ;
 243+ 8F7A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F7A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F7A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F7A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F7A
 248+ 8F7A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F7A              ;	   ""        ""       "f9", B="1"
 250+ 8F7A              ;	   ""        ""       "fb", B="2"
 251+ 8F7A              ; 	   ""        ""       "fb", B="3"
 252+ 8F7A
 253+ 8F7A 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F7D CD A1 96     	call NextScan
 255+ 8F80
 256+ 8F80              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F80              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F80              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F80              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F80
 261+ 8F80 CD A2 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F83
 263+ 8F83              ; 	No se produce impacto. B="$80"
 264+ 8F83              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F83
 266+ 8F83 01 80 80         ld bc,$8080
 267+ 8F86
 268+ 8F86              ; 	LLegados a este punto tendremos:
 269+ 8F86              ;
 270+ 8F86              ;       Puntero_objeto_disparo en IY.
 271+ 8F86              ;       Rutinas_de_impresion en IX.
 272+ 8F86              ;       Puntero_de_impresion en HL.
 273+ 8F86              ;       Impacto/Dirección en BC.
 274+ 8F86
 275+ 8F86 CD AA 8F         call Almacena_disparo
 276+ 8F89 18 0F            jr 6F                                           ; RET.
 277+ 8F8B
 278+ 8F8B              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F8B              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F8B              ;
 281+ 8F8B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F8B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F8B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F8B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F8B
 286+ 8F8B 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F8E CD A1 96     	call NextScan
 288+ 8F91
 289+ 8F91              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F91              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F91              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F91              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F91
 294+ 8F91 CD 9B 8F         call Ajusta_disparo_parte_derecha
 295+ 8F94
 296+ 8F94              ; 	No se produce impacto. B="$80"
 297+ 8F94              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F94
 299+ 8F94 01 80 80     15 ld bc,$8080
 300+ 8F97
 301+ 8F97              ; 	LLegados a este punto tendremos:
 302+ 8F97              ;
 303+ 8F97              ;       Puntero_objeto_disparo en IY.
 304+ 8F97              ;       Rutinas_de_impresion en IX.
 305+ 8F97              ;       Puntero_de_impresion en HL.
 306+ 8F97              ;       Impacto/Dirección en BC.
 307+ 8F97
 308+ 8F97 CD AA 8F         call Almacena_disparo
 309+ 8F9A
 310+ 8F9A C9           6 ret
 311+ 8F9B
 312+ 8F9B              ; ----------------------------------------------------------------
 313+ 8F9B              ;
 314+ 8F9B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F9B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F9B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F9B
 318+ 8F9B 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F9C FE 02            cp 2
 320+ 8F9E 38 01            jr c,1F
 321+ 8FA0 23               inc hl
 322+ 8FA1 C9           1 ret
 323+ 8FA2
 324+ 8FA2 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FA3 FE 01        	cp 1
 326+ 8FA5 20 01        	jr nz,1F
 327+ 8FA7 2B           	dec hl
 328+ 8FA8 2B           1 dec hl
 329+ 8FA9 C9               ret
 330+ 8FAA
 331+ 8FAA              ; ----------------------------------------------------------------
 332+ 8FAA              ;
 333+ 8FAA              ;   25/02/23
 334+ 8FAA              ;
 335+ 8FAA              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FAA              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FAA              ;
 338+ 8FAA              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FAA              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FAA
 341+ 8FAA              Almacena_disparo
 342+ 8FAA
 343+ 8FAA E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FAB F1               pop af
 345+ 8FAC 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FAD
 347+ 8FAD 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FAE E6 01            and 1
 349+ 8FB0 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FB2              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FB2              ; 	Dispara AMADEUS.
 352+ 8FB2
 353+ 8FB2              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FB2              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FB2              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FB2              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FB2
 358+ 8FB2 C5               push bc
 359+ 8FB3 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FB6 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FB9 A7               and a
 362+ 8FBA ED 42            sbc hl,bc
 363+ 8FBC CC 5A 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FBF C1               pop bc
 365+ 8FC0 28 54            jr z,4F
 366+ 8FC2
 367+ 8FC2 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FC5 23               inc hl
 369+ 8FC6 23               inc hl
 370+ 8FC7 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FCA              ;                                                   ; _ Disparo_(+1).
 372+ 8FCA 18 18            jr 2F
 373+ 8FCC
 374+ 8FCC              ; Dispara una entidad.
 375+ 8FCC
 376+ 8FCC C5           1 push bc
 377+ 8FCD 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FD0 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FD3 A7               and a
 380+ 8FD4 ED 42            sbc hl,bc
 381+ 8FD6 CC 53 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FD9 C1               pop bc
 383+ 8FDA 28 3A            jr z,4F
 384+ 8FDC
 385+ 8FDC 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FDF 23               inc hl
 387+ 8FE0 23               inc hl
 388+ 8FE1 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FE4              ;                                                   ; _ Disparo_(+1).
 390+ 8FE4 CD D9 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FE7              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FE7              ;
 393+ 8FE7              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FE7              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FE7              ;                                                     Puntero_de_impresion en HL.
 396+ 8FE7              ;                                                     Impacto/Dirección en BC.
 397+ 8FE7
 398+ 8FE7 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FE8 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FE9 23               inc hl                                          ; _ al siguiente.
 401+ 8FEA A7               and a
 402+ 8FEB 20 C0            jr nz,3B
 403+ 8FED
 404+ 8FED 08               ex af,af
 405+ 8FEE ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FF2 F9               ld sp,hl
 407+ 8FF3
 408+ 8FF3 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FF5 F5               push af                                         ; Puntero de impresión.
 410+ 8FF6 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FF8 C5               push bc                                         ; Control.
 412+ 8FF9
 413+ 8FF9 ED 7B 14 89      ld sp,(Stack)
 414+ 8FFD
 415+ 8FFD              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FFD
 417+ 8FFD 21 03 89     	ld hl,Ctrl_1
 418+ 9000 CB C6        	set 0,(hl)
 419+ 9002
 420+ 9002 DD E5        	push ix
 421+ 9004 E1               pop hl
 422+ 9005 F5               push af
 423+ 9006 DD E1            pop ix
 424+ 9008
 425+ 9008 CD A0 7F     	call Guarda_foto_registros
 426+ 900B
 427+ 900B 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 900E CB 86        	res 0,(hl)
 429+ 9010
 430+ 9010              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9010              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9010
 433+ 9010 CD 5A 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9013 CD 53 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9016
 436+ 9016 C9           4 ret
 437+ 9017
 438+ 9017              ; ----------------------------------------------------------------
 439+ 9017              ;
 440+ 9017              ;   4/3/23
 441+ 9017              ;
 442+ 9017              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9017              ;   _ al generarse el disparo.
 444+ 9017              ;
 445+ 9017              ;       "$80" ..... No se produce colisión.
 446+ 9017              ;       "$81" ..... Se produce colisión.
 447+ 9017              ;
 448+ 9017              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9017              ;         _ que forman el disparo.
 450+ 9017
 451+ 9017
 452+ 9017              Comprueba_Colision
 453+ 9017
 454+ 9017              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9017
 456+ 9017 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9019 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 901A
 459+ 901A CD 50 90         call Modifica_H_Velocidad_disparo
 460+ 901D
 461+ 901D 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 901E FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9020 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9022
 465+ 9022 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9024 CD 40 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9027
 468+ 9027 7B               ld a,e
 469+ 9028 E6 01            and 1
 470+ 902A 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 902C              ;                                                  ; _ para activar IMPACTO.
 472+ 902C E1               pop hl
 473+ 902D E5               push hl
 474+ 902E CD A1 96         call NextScan
 475+ 9031
 476+ 9031 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9032 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9034 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9036              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9036 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9038 CD 40 90         call Bucle_2
 482+ 903B
 483+ 903B 43           1 ld b,e
 484+ 903C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 903D FD E1            pop iy
 486+ 903F C9               ret
 487+ 9040
 488+ 9040              ; ---------- ----------
 489+ 9040
 490+ 9040 06 02        Bucle_2 ld b,2
 491+ 9042 FD 7E 00     2 ld a,(iy)
 492+ 9045 A6               and (hl)
 493+ 9046 28 02            jr z,1F
 494+ 9048 1E 81            ld e,$81
 495+ 904A 23           1 inc hl
 496+ 904B FD 23            inc iy
 497+ 904D 10 F3            djnz 2B
 498+ 904F C9               ret
 499+ 9050
 500+ 9050              ; ---------- ----------
 501+ 9050              ;
 502+ 9050              ;   21/7/23
 503+ 9050
 504+ 9050              Modifica_H_Velocidad_disparo
 505+ 9050
 506+ 9050 3A 4E 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9053 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9055 D0               ret nc                                         ; _ incrementamos H.
 509+ 9056 24               inc h
 510+ 9057
 511+ 9057 C9               ret
 512+ 9058
 513+ 9058              ; -------------------------------------------------------------------------------------------------------------
 514+ 9058              ;
 515+ 9058              ;   11/04/23
 516+ 9058              ;
 517+ 9058              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9058              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9058              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9058              ;
 521+ 9058              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9058
 523+ 9058              Compara_coordenadas_X
 524+ 9058
 525+ 9058              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9058              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9058
 528+ 9058              ; Preparamos registros:
 529+ 9058
 530+ 9058 21 CA 88         ld hl,Filas+6
 531+ 905B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 905C 23               inc hl
 533+ 905D 23               inc hl
 534+ 905E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 905F 43               ld b,e
 536+ 9060
 537+ 9060 21 D8 88         ld hl,Filas+20
 538+ 9063 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9064 21 49 89         ld hl,Coordenadas_X_Entidad
 540+ 9067 CD 83 92         call Guarda_coordenadas_X
 541+ 906A
 542+ 906A              ; Preparamos registros:
 543+ 906A
 544+ 906A 21 A4 85         ld hl,Amadeus_db+6
 545+ 906D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 906E 23               inc hl
 547+ 906F 23               inc hl
 548+ 9070 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9071 7B               ld a,e
 550+ 9072 08               ex af,af'
 551+ 9073 21 B2 85         ld hl,Amadeus_db+20
 552+ 9076 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9077 21 46 89         ld hl,Coordenadas_X_Amadeus
 554+ 907A CD 83 92         call Guarda_coordenadas_X
 555+ 907D
 556+ 907D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 907D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 907D
 559+ 907D 04               inc b
 560+ 907E 05               dec b
 561+ 907F 28 04            jr z,1F
 562+ 9081 06 03            ld b,3
 563+ 9083 18 02            jr 2F
 564+ 9085 06 02        1 ld b,2
 565+ 9087 08           2 ex af,af'
 566+ 9088 3C               inc a
 567+ 9089 3D               dec a
 568+ 908A 28 04            jr z,5F
 569+ 908C 0E 03            ld c,3
 570+ 908E 18 02            jr 6F
 571+ 9090 0E 02        5 ld c,2
 572+ 9092 79           6 ld a,c
 573+ 9093 08               ex af,af'
 574+ 9094 11 49 89         ld de,Coordenadas_X_Entidad
 575+ 9097 1A           4 ld a,(de)
 576+ 9098 21 46 89         ld hl,Coordenadas_X_Amadeus
 577+ 909B BE           3 cp (hl)
 578+ 909C 28 0E            jr z,7F
 579+ 909E 23               inc hl
 580+ 909F 0D               dec c
 581+ 90A0 20 F9            jr nz,3B
 582+ 90A2 13               inc de
 583+ 90A3 08               ex af,af'
 584+ 90A4 4F               ld c,a
 585+ 90A5 08               ex af,af'
 586+ 90A6 10 EF            djnz 4B
 587+ 90A8
 588+ 90A8              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90A8
 590+ 90A8 CD BF 92     8 call Limpia_Coordenadas_X
 591+ 90AB C9               ret
 592+ 90AC
 593+ 90AC 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90AE 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90B1 21 41 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90B4 CB D6            set 2,(hl)
 597+ 90B6 18 F0            jr 8B
 598+ 90B8
 599+ 90B8              ; -----------------------------------------------------------------------
 600+ 90B8              ;
 601+ 90B8              ;   17/04/23
 602+ 90B8              ;
 603+ 90B8
 604+ 90B8              Detecta_colision_nave_entidad
 605+ 90B8
 606+ 90B8              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90B8
 608+ 90B8 2A C6 88         ld hl,(Posicion_actual)
 609+ 90BB CD FC 95         call Calcula_puntero_de_impresion
 610+ 90BE
 611+ 90BE              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90BE              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90BE
 614+ 90BE DD E5            push ix
 615+ 90C0 E1               pop hl
 616+ 90C1 E5               push hl
 617+ 90C2
 618+ 90C2              ; ----- ----- -----
 619+ 90C2 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90C4 06 0A            ld b,10
 621+ 90C6 CD F6 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90C9 7B               ld a,e
 623+ 90CA FE 05            cp 5
 624+ 90CC 38 0E            jr c,3F
 625+ 90CE
 626+ 90CE              ; LLegados a este punto:
 627+ 90CE              ;
 628+ 90CE              ;   HAY COLISIÓN !!!!!.
 629+ 90CE              ;
 630+ 90CE              ;   .db (Impacto) de Amadeus a "1".
 631+ 90CE              ;   SET el bit3 de (Impacto2).
 632+ 90CE              ;
 633+ 90CE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90CE
 635+ 90CE 21 B7 85         ld hl,Amadeus_db+25
 636+ 90D1 36 01            ld (hl),1
 637+ 90D3 21 41 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90D6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90D8 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90DA 18 18            jr 1F
 641+ 90DC
 642+ 90DC              ; -----
 643+ 90DC
 644+ 90DC E1           3 pop hl
 645+ 90DD CD A1 96         call NextScan
 646+ 90E0 E5               push hl
 647+ 90E1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90E2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90E4 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90E6 30 0C            jr nc,1F
 651+ 90E8              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90E8 10 DC            djnz 2B
 653+ 90EA
 654+ 90EA              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90EA
 656+ 90EA              ; LLegados a este punto:
 657+ 90EA              ;
 658+ 90EA              ;   NO HAY COLISIÓN !!!!!.
 659+ 90EA              ;
 660+ 90EA              ;   .db (Impacto) de Amadeus a "0".
 661+ 90EA              ;   RES el bit2 de (Impacto2).
 662+ 90EA              ;
 663+ 90EA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90EA              ;   Lo colocamos a "0".
 665+ 90EA
 666+ 90EA 21 41 89         ld hl,Impacto2
 667+ 90ED CB 96            res 2,(hl)
 668+ 90EF 2A 42 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90F2 36 00            ld (hl),0
 670+ 90F4
 671+ 90F4 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90F5 C9               ret
 673+ 90F6
 674+ 90F6               ; ---------- ----------
 675+ 90F6
 676+ 90F6 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90F7 3A C5 88         ld a,(Columns)
 678+ 90FA 47               ld b,a
 679+ 90FB FD 7E 00     2 ld a,(iy)
 680+ 90FE BE               cp (hl)
 681+ 90FF 28 01            jr z,1F
 682+ 9101
 683+ 9101 1C               inc e
 684+ 9102
 685+ 9102 23           1 inc hl
 686+ 9103 FD 23            inc iy
 687+ 9105 10 F4            djnz 2B
 688+ 9107 C1               pop bc
 689+ 9108 C9               ret
 690+ 9109
 691+ 9109              ; -------------------------------------------------------------------------------------------------------------
 692+ 9109              ;
 693+ 9109              ;   13/03/23
 694+ 9109              ;
 695+ 9109              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9109              ;
 697+ 9109              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9109
 699+ 9109 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 910C 7E               ld a,(hl)
 701+ 910D A7               and a
 702+ 910E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 910F
 704+ 910F 44               ld b,h
 705+ 9110 4D               ld c,l
 706+ 9111 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 9114 E5               push hl
 708+ 9115 A7               and a
 709+ 9116 ED 42            sbc hl,bc
 710+ 9118 E5               push hl
 711+ 9119 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 911A
 713+ 911A E1               pop hl
 714+ 911B 54               ld d,h
 715+ 911C 5D               ld e,l
 716+ 911D 1B               dec de
 717+ 911E ED B8            lddr                                                ; Limpiamos.
 718+ 9120
 719+ 9120 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9123 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 9126
 722+ 9126 C9               ret
 723+ 9127
 724+ 9127              ; -------------------------------------------------------------------------------------------------------------
 725+ 9127              ;
 726+ 9127              ;   18/07/23
 727+ 9127              ;
 728+ 9127
 729+ 9127              Motor_de_disparos
 730+ 9127
 731+ 9127              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9127
 733+ 9127 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 912A 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 912D
 736+ 912D CD D9 8C     2 call Extrae_address
 737+ 9130 7E               ld a,(hl)
 738+ 9131 A7               and a
 739+ 9132 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9134
 741+ 9134              ; ----- ----- ----- ----- ----- -----
 742+ 9134
 743+ 9134 C5               push bc
 744+ 9135 CD F9 91         call foto_disparo_a_borrar
 745+ 9138
 746+ 9138              ; Existe colisión con este disparo???
 747+ 9138
 748+ 9138 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9139 7E               ld a,(hl)
 750+ 913A 2B               dec hl
 751+ 913B E6 01            and 1
 752+ 913D 28 1D            jr z,9F
 753+ 913F
 754+ 913F              ;   En este punto:
 755+ 913F              ;
 756+ 913F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 913F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 913F              ;   _con la entidad).
 759+ 913F              ;
 760+ 913F              ;   Disparo_2A defw 0                                ; Control.
 761+ 913F              ;    defw 0                                          ; Puntero objeto.
 762+ 913F              ;    defw 0                                          ; Puntero de impresión.
 763+ 913F              ;    defw 0                                          ; Rutina de impresión.
 764+ 913F
 765+ 913F E5               push hl
 766+ 9140
 767+ 9140 06 04            ld b,4
 768+ 9142 23           19 inc hl
 769+ 9143 10 FD            djnz 19B
 770+ 9145
 771+ 9145 CD D9 8C         call Extrae_address
 772+ 9148 CD 6A 9D         call Genera_coordenadas_disparo
 773+ 914B
 774+ 914B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 914B
 776+ 914B 21 44 89         ld hl,Coordenadas_disparo_certero
 777+ 914E 72               ld (hl),d
 778+ 914F 23               inc hl
 779+ 9150 73               ld (hl),e
 780+ 9151
 781+ 9151              ; Elimino el disparo de la base de datos.
 782+ 9151
 783+ 9151 E1               pop hl
 784+ 9152 CD 78 92         call Elimina_disparo_de_base_de_datos
 785+ 9155 21 41 89         ld hl,Impacto2
 786+ 9158 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 915A
 788+ 915A 18 06            jr 11F
 789+ 915C
 790+ 915C CD 22 92     9 call Mueve_disparo
 791+ 915F CD F9 91         call foto_disparo_a_borrar
 792+ 9162
 793+ 9162 C1           11 pop bc
 794+ 9163 18 04            jr 7F
 795+ 9165
 796+ 9165              ; ----- ----- ----- ----- ----- -----
 797+ 9165
 798+ 9165 ED 42        1 sbc hl,bc
 799+ 9167 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9169
 801+ 9169 2A 3F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 916C 23               inc hl
 803+ 916D 23               inc hl
 804+ 916E 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9171 18 BA            jr 2B
 806+ 9173
 807+ 9173 CD 5A 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9176              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9176
 810+ 9176              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9176
 812+ 9176 01 8A 85         ld bc,Disparo_11
 813+ 9179 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 917C
 815+ 917C CD D9 8C     5 call Extrae_address
 816+ 917F 7E               ld a,(hl)
 817+ 9180 A7               and a
 818+ 9181 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9183
 820+ 9183              ; ----- ----- ----- ----- ----- -----
 821+ 9183
 822+ 9183 C5               push bc
 823+ 9184 CD F9 91         call foto_disparo_a_borrar
 824+ 9187
 825+ 9187              ; Existe colisión con este disparo???
 826+ 9187
 827+ 9187 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9188 7E               ld a,(hl)
 829+ 9189 2B               dec hl
 830+ 918A E6 01            and 1
 831+ 918C 28 4D            jr z,10F
 832+ 918E
 833+ 918E              ;! La colisión se produce con Amadeus???
 834+ 918E              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 918E
 836+ 918E E5               push hl
 837+ 918F
 838+ 918F 06 04            ld b,4
 839+ 9191 23           16 inc hl
 840+ 9192 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9194
 842+ 9194 CD D9 8C         call Extrae_address
 843+ 9197 CD 6A 9D         call Genera_coordenadas_disparo
 844+ 919A
 845+ 919A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 919B FE 16            cp $16
 847+ 919D 38 2A            jr c,15F
 848+ 919F
 849+ 919F
 850+ 919F              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 919F
 852+ 919F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91A0
 854+ 91A0              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91A0
 856+ 91A0
 857+ 91A0 2A 4C 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91A3
 859+ 91A3              ; Coordenada X de Amadeus en D.
 860+ 91A3
 861+ 91A3 7D               ld a,l
 862+ 91A4 E6 1F            and $1F
 863+ 91A6 57               ld d,a
 864+ 91A7
 865+ 91A7 21 A6 85         ld hl,Amadeus_db+8
 866+ 91AA 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91AB
 868+ 91AB 21 46 89         ld hl,Coordenadas_X_Amadeus
 869+ 91AE CD 83 92         call Guarda_coordenadas_X
 870+ 91B1
 871+ 91B1 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91B2
 873+ 91B2              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91B2
 875+ 91B2 06 02            ld b,2
 876+ 91B4 C5           20 push bc
 877+ 91B5
 878+ 91B5 06 03            ld b,3
 879+ 91B7 21 46 89         ld hl,Coordenadas_X_Amadeus
 880+ 91BA 7E           18 ld a,(hl)
 881+ 91BB BA               cp d
 882+ 91BC 20 04            jr nz,17F
 883+ 91BE
 884+ 91BE              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91BE
 886+ 91BE C1               pop bc
 887+ 91BF E1               pop hl
 888+ 91C0 18 0D            jr 14F
 889+ 91C2
 890+ 91C2 23           17 inc hl
 891+ 91C3 10 F5            djnz 18B
 892+ 91C5
 893+ 91C5 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91C6
 895+ 91C6 C1               pop bc
 896+ 91C7 10 EB            djnz 20B
 897+ 91C9
 898+ 91C9
 899+ 91C9              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91C9              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91C9
 902+ 91C9 E1           15 pop hl
 903+ 91CA 23               inc hl
 904+ 91CB 35               dec (hl)
 905+ 91CC 2B               dec hl
 906+ 91CD 18 0C            jr 10F
 907+ 91CF
 908+ 91CF              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91CF              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91CF
 911+ 91CF E5           14 push hl
 912+ 91D0 CD 78 92         call Elimina_disparo_de_base_de_datos
 913+ 91D3 21 41 89         ld hl,Impacto2
 914+ 91D6 CB CE            set 1,(hl)
 915+ 91D8 E1               pop hl
 916+ 91D9 18 06            jr 12F
 917+ 91DB
 918+ 91DB              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91DB
 920+ 91DB CD 22 92     10 call Mueve_disparo
 921+ 91DE CD F9 91         call foto_disparo_a_borrar
 922+ 91E1 C1           12 pop bc
 923+ 91E2
 924+ 91E2 18 04            jr 8F
 925+ 91E4
 926+ 91E4              ; ----- ----- ----- ----- ----- -----
 927+ 91E4
 928+ 91E4 ED 42        4 sbc hl,bc
 929+ 91E6 28 0A            jr z,6F
 930+ 91E8
 931+ 91E8 2A 3D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91EB 23               inc hl
 933+ 91EC 23               inc hl
 934+ 91ED 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91F0 18 8A            jr 5B
 936+ 91F2
 937+ 91F2 CD 53 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91F5 CD BF 92         call Limpia_Coordenadas_X
 939+ 91F8 C9               ret
 940+ 91F9
 941+ 91F9              ; ------------------------------------------------------------------
 942+ 91F9
 943+ 91F9              foto_disparo_a_borrar
 944+ 91F9
 945+ 91F9 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91FA A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91FB C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91FC
 949+ 91FC E5               push hl
 950+ 91FD 23               inc hl
 951+ 91FE 23               inc hl
 952+ 91FF ED 73 14 89      ld (Stack),sp
 953+ 9203 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9204 FD E1            pop iy
 955+ 9206 DD E1            pop ix
 956+ 9208 E1               pop hl
 957+ 9209 ED 7B 14 89      ld sp,(Stack)
 958+ 920D 3A 03 89         ld a,(Ctrl_1)
 959+ 9210 CB C7            set 0,a
 960+ 9212 32 03 89         ld (Ctrl_1),a
 961+ 9215 CD A0 7F         call Guarda_foto_registros
 962+ 9218 3A 03 89         ld a,(Ctrl_1)
 963+ 921B CB 87            res 0,a
 964+ 921D 32 03 89         ld (Ctrl_1),a
 965+ 9220 E1               pop hl
 966+ 9221 C9               ret
 967+ 9222
 968+ 9222              ;---------------------------------------------------
 969+ 9222              ;
 970+ 9222              ;   18/07/23
 971+ 9222              ;
 972+ 9222
 973+ 9222              Mueve_disparo
 974+ 9222
 975+ 9222              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9222              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9222              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9222
 979+ 9222 E5               push hl
 980+ 9223
 981+ 9223 7E               ld a,(hl)
 982+ 9224
 983+ 9224 06 04            ld b,4
 984+ 9226 23           1 inc hl
 985+ 9227 10 FD            djnz 1B
 986+ 9229
 987+ 9229              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9229
 989+ 9229 CD D9 8C         call Extrae_address
 990+ 922C
 991+ 922C E6 01            and 1
 992+ 922E 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9230
 994+ 9230              ; Disparo hacia arriba, (Amadeus).
 995+ 9230
 996+ 9230              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9230              ; _ de la dificultad.
 998+ 9230
 999+ 9230 CD B0 96         call PreviousScan
1000+ 9233 CD B0 96         call PreviousScan
1001+ 9236 CD B0 96         call PreviousScan
1002+ 9239 CD B0 96         call PreviousScan
1003+ 923C
1004+ 923C              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 923C
1006+ 923C 7C               ld a,h
1007+ 923D FE 40            cp $40
1008+ 923F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9241
1010+ 9241              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9241
1012+ 9241 EB               ex de,hl
1013+ 9242 06 04            ld b,4
1014+ 9244 2B           6 dec hl
1015+ 9245 10 FD            djnz 6B
1016+ 9247
1017+ 9247 CD 78 92         call Elimina_disparo_de_base_de_datos
1018+ 924A E1               pop hl
1019+ 924B 18 10            jr 7F
1020+ 924D
1021+ 924D              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 924D              ; HL contiene el puntero de impresión del disparo.
1023+ 924D              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 924D
1025+ 924D D5           3 push de
1026+ 924E C5               push bc
1027+ 924F
1028+ 924F CD 17 90         call Comprueba_Colision
1029+ 9252
1030+ 9252              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9252
1032+ 9252 78               ld a,b
1033+ 9253
1034+ 9253 C1               pop bc
1035+ 9254 D1               pop de
1036+ 9255
1037+ 9255 EB               ex de,hl
1038+ 9256
1039+ 9256 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9257 23               inc hl                                      ; _ movimiento.
1041+ 9258 72               ld (hl),d
1042+ 9259
1043+ 9259 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 925A
1045+ 925A 23               inc hl                                      ; _ en curso.
1046+ 925B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 925C 2B               dec hl
1048+ 925D
1049+ 925D C9           7 ret
1050+ 925E
1051+ 925E              ; Disparo hacia abajo, (Entidad).
1052+ 925E
1053+ 925E 3A 4E 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9261 47               ld b,a
1055+ 9262
1056+ 9262 CD A1 96     4 call NextScan
1057+ 9265 10 FB            djnz 4B
1058+ 9267
1059+ 9267              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9267
1061+ 9267 7C               ld a,h
1062+ 9268 FE 58            cp $58
1063+ 926A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 926C
1065+ 926C EB               ex de,hl
1066+ 926D 06 04            ld b,4
1067+ 926F 2B           5 dec hl
1068+ 9270 10 FD            djnz 5B
1069+ 9272
1070+ 9272 CD 78 92         call Elimina_disparo_de_base_de_datos
1071+ 9275 E1               pop hl
1072+ 9276 18 E5            jr 7B
1073+ 9278
1074+ 9278              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9278
1076+ 9278 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 927B AF               xor a
1078+ 927C 77               ld (hl),a
1079+ 927D 54               ld d,h
1080+ 927E 5D               ld e,l
1081+ 927F 13               inc de
1082+ 9280 ED B0            ldir
1083+ 9282 C9               ret
1084+ 9283
1085+ 9283              ; -----------------------------------------------------------------
1086+ 9283              ;
1087+ 9283              ;   19/7/23
1088+ 9283              ;
1089+ 9283              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9283              ;
1091+ 9283              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9283              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9283              ;
1094+ 9283              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9283              ;
1096+ 9283              ;   INPUTS:
1097+ 9283              ;
1098+ 9283              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9283              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9283
1101+ 9283              ;   MODIFICA: A, HL, BC y DE.
1102+ 9283
1103+ 9283              Guarda_coordenadas_X
1104+ 9283
1105+ 9283 7B               ld a,e
1106+ 9284 A7               and a
1107+ 9285 20 04            jr nz,1F
1108+ 9287
1109+ 9287 06 02            ld b,2
1110+ 9289 18 02            jr 2F
1111+ 928B
1112+ 928B 06 03        1 ld b,3
1113+ 928D 72           2 ld (hl),d
1114+ 928E 23               inc hl
1115+ 928F 14               inc d
1116+ 9290 10 FB            djnz 2B
1117+ 9292
1118+ 9292 C9               ret
1119+ 9293
1120+ 9293              ; -----------------------------------------------------------------
1121+ 9293              ;
1122+ 9293              ;   12/04/23
1123+ 9293              ;
1124+ 9293
1125+ 9293 3A 41 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9296 A7               and a
1127+ 9297 C8               ret z
1128+ 9298
1129+ 9298 FE 04            cp 4
1130+ 929A 20 09            jr nz,1F
1131+ 929C
1132+ 929C
1133+ 929C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 929C
1135+ 929C CD B8 90         call Detecta_colision_nave_entidad
1136+ 929F
1137+ 929F 21 41 89         ld hl,Impacto2
1138+ 92A2 CB 5E            bit 3,(hl)
1139+ 92A4 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92A5
1141+ 92A5              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92A5              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92A5
1144+ 92A5 21 41 89     1 ld hl,Impacto2
1145+ 92A8 CB 4E            bit 1,(hl)
1146+ 92AA 28 07            jr z,2F
1147+ 92AC
1148+ 92AC 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92AF 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92B1 18 0B            jr 3F
1151+ 92B3
1152+ 92B3 21 41 89     2 ld hl,Impacto2
1153+ 92B6 CB 46            bit 0,(hl)
1154+ 92B8 C8               ret z
1155+ 92B9
1156+ 92B9              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92B9
1158+ 92B9 21 03 89         ld hl,Ctrl_1
1159+ 92BC CB D6            set 2,(hl)
1160+ 92BE
1161+ 92BE C9           3 ret
1162+ 92BF
1163+ 92BF              ; -----------------------------------------------------------------
1164+ 92BF              ;
1165+ 92BF              ;   19/7/23
1166+ 92BF              ;
1167+ 92BF              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92BF
1169+ 92BF AF           Limpia_Coordenadas_X xor a
1170+ 92C0 06 06            ld b,6
1171+ 92C2 21 46 89         ld hl,Coordenadas_X_Amadeus
1172+ 92C5 77           1 ld (hl),a
1173+ 92C6 23               inc hl
1174+ 92C7 10 FC            djnz 1B
1175+ 92C9 C9               ret
1176+ 92CA
1177+ 92CA              ; -----------------------------------------------------------------
1178+ 92CA              ;
1179+ 92CA              ;   25/04/23
1180+ 92CA              ;
1181+ 92CA
1182+ 92CA              Determina_resultado_comparativa
1183+ 92CA
1184+ 92CA              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92CA              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92CA              ;
1187+ 92CA              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92CA              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92CA              ;
1190+ 92CA              ;   SBC HL,DE
1191+ 92CA
1192+ 92CA              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92CA              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92CA
1195+ 92CA              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92CA              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92CA
1198+ 92CA
1199+ 92CA 3A D8 88         ld a,(Cuad_objeto)
1200+ 92CD FE 02            cp 2
1201+ 92CF 28 26            jr z,2F
1202+ 92D1 38 24            jr c,2F
1203+ 92D3
1204+ 92D3              ; Cuadrantes 3º y 4º
1205+ 92D3
1206+ 92D3 E6 01            and 1
1207+ 92D5 28 10            jr z,4F
1208+ 92D7
1209+ 92D7              ; Cuadrante 3º
1210+ 92D7
1211+ 92D7 7C               ld a,h
1212+ 92D8 06 00            ld b,0
1213+ 92DA
1214+ 92DA CD 65 93         call Compara_cositas_H3
1215+ 92DD
1216+ 92DD 04               inc b
1217+ 92DE 05               dec b
1218+ 92DF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92E0
1220+ 92E0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92E1 06 00            ld b,0
1222+ 92E3
1223+ 92E3 CD 77 93         call Compara_cositas_L3
1224+ 92E6 C9               ret
1225+ 92E7
1226+ 92E7              ; Cuadrante 4º
1227+ 92E7
1228+ 92E7 7C           4 ld a,h
1229+ 92E8 06 00            ld b,0
1230+ 92EA
1231+ 92EA CD 89 93         call Compara_cositas_H4
1232+ 92ED
1233+ 92ED 04               inc b
1234+ 92EE 05               dec b
1235+ 92EF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92F0
1237+ 92F0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92F1 06 00            ld b,0
1239+ 92F3
1240+ 92F3 CD 9F 93         call Compara_cositas_L4
1241+ 92F6 C9               ret
1242+ 92F7
1243+ 92F7              ; Cuadrantes 1º y 2º.
1244+ 92F7
1245+ 92F7 28 10        2 jr z,3F
1246+ 92F9
1247+ 92F9              ; 1er Cuadrante
1248+ 92F9
1249+ 92F9 7C               ld a,h
1250+ 92FA 06 00            ld b,0
1251+ 92FC
1252+ 92FC CD 3D 93         call Compara_cositas_H1
1253+ 92FF
1254+ 92FF 04               inc b
1255+ 9300 05               dec b
1256+ 9301 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9302
1258+ 9302 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9303 06 00            ld b,0
1260+ 9305
1261+ 9305 CD 53 93         call Compara_cositas_L1
1262+ 9308 C9               ret
1263+ 9309
1264+ 9309
1265+ 9309              ; 2º Cuadrante
1266+ 9309
1267+ 9309 7C           3 ld a,h
1268+ 930A 06 00            ld b,0
1269+ 930C
1270+ 930C CD 19 93         call Compara_cositas_H2
1271+ 930F
1272+ 930F 04               inc b
1273+ 9310 05               dec b
1274+ 9311 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9312
1276+ 9312 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9313 06 00            ld b,0
1278+ 9315
1279+ 9315 CD 2B 93         call Compara_cositas_L2
1280+ 9318 C9               ret
1281+ 9319
1282+ 9319 A7           Compara_cositas_H2 and a
1283+ 931A 28 0D            jr z,1F
1284+ 931C              ;    cp $fd
1285+ 931C              ;    jr z,1F
1286+ 931C              ;    cp $fe
1287+ 931C              ;    jr z,1F
1288+ 931C FE FF            cp $ff
1289+ 931E 28 09            jr z,1F
1290+ 9320 FE 01            cp $01
1291+ 9322 28 05            jr z,1F
1292+ 9324 FE 02            cp $02
1293+ 9326 28 01            jr z,1F
1294+ 9328 C0               ret nz
1295+ 9329 04           1 inc b
1296+ 932A C9               ret
1297+ 932B
1298+ 932B A7           Compara_cositas_L2 and a
1299+ 932C 28 0D            jr z,1F
1300+ 932E              ;    cp $fd
1301+ 932E              ;    jr z,1F
1302+ 932E FE FE            cp $fe
1303+ 9330 28 09            jr z,1F
1304+ 9332 FE FF            cp $ff
1305+ 9334 28 05            jr z,1F
1306+ 9336 FE 01            cp $01
1307+ 9338 28 01            jr z,1F
1308+ 933A              ;    cp $02
1309+ 933A              ;    jr z,1F
1310+ 933A C0               ret nz
1311+ 933B 04           1 inc b
1312+ 933C C9               ret
1313+ 933D
1314+ 933D A7           Compara_cositas_H1 and a
1315+ 933E 28 11            jr z,1F
1316+ 9340              ;    cp $fd
1317+ 9340              ;    jr z,1F
1318+ 9340              ;    cp $fe
1319+ 9340              ;    jr z,1F
1320+ 9340 FE FF            cp $ff
1321+ 9342 28 0D            jr z,1F
1322+ 9344 FE 01            cp $01
1323+ 9346 28 09            jr z,1F
1324+ 9348 FE 02            cp $02
1325+ 934A 28 05            jr z,1F
1326+ 934C FE 03            cp $03
1327+ 934E 28 01            jr z,1F
1328+ 9350 C0               ret nz
1329+ 9351 04           1 inc b
1330+ 9352 C9               ret
1331+ 9353
1332+ 9353 A7           Compara_cositas_L1 and a
1333+ 9354 28 0D            jr z,1F
1334+ 9356              ;    cp $fd
1335+ 9356              ;    jr z,1F
1336+ 9356              ;    cp $fe
1337+ 9356              ;    jr z,1F
1338+ 9356              ;    cp $ff
1339+ 9356              ;    jr z,1F
1340+ 9356 FE 01            cp $01
1341+ 9358 28 09            jr z,1F
1342+ 935A FE 02            cp $02
1343+ 935C 28 05            jr z,1F
1344+ 935E FE 03            cp $03
1345+ 9360 28 01            jr z,1F
1346+ 9362 C0               ret nz
1347+ 9363 04           1 inc b
1348+ 9364 C9               ret
1349+ 9365
1350+ 9365 A7           Compara_cositas_H3 and a
1351+ 9366 28 0D            jr z,1F
1352+ 9368              ;    cp $fd
1353+ 9368              ;    jr z,1F
1354+ 9368 FE FE            cp $fe
1355+ 936A 28 09            jr z,1F
1356+ 936C FE FF            cp $ff
1357+ 936E 28 05            jr z,1F
1358+ 9370 FE 01            cp $01
1359+ 9372 28 01            jr z,1F
1360+ 9374              ;    cp $02
1361+ 9374              ;    jr z,1F
1362+ 9374              ;    cp $03
1363+ 9374              ;    jr z,1F
1364+ 9374 C0               ret nz
1365+ 9375 04           1 inc b
1366+ 9376 C9               ret
1367+ 9377
1368+ 9377 A7           Compara_cositas_L3 and a
1369+ 9378 28 0D            jr z,1F
1370+ 937A              ;    cp $fd
1371+ 937A              ;    jr z,1F
1372+ 937A              ;    cp $fe
1373+ 937A              ;    jr z,1F
1374+ 937A              ;    cp $ff
1375+ 937A              ;    jr z,1F
1376+ 937A FE 01            cp $01
1377+ 937C 28 09            jr z,1F
1378+ 937E FE 02            cp $02
1379+ 9380 28 05            jr z,1F
1380+ 9382 FE 03            cp $03
1381+ 9384 28 01            jr z,1F
1382+ 9386 C0               ret nz
1383+ 9387 04           1 inc b
1384+ 9388 C9               ret
1385+ 9389
1386+ 9389 A7           Compara_cositas_H4 and a
1387+ 938A 28 11            jr z,1F
1388+ 938C FE FD            cp $fd
1389+ 938E 28 0D            jr z,1F
1390+ 9390 FE FE            cp $fe
1391+ 9392 28 09            jr z,1F
1392+ 9394 FE FF            cp $ff
1393+ 9396 28 05            jr z,1F
1394+ 9398 FE 01            cp $01
1395+ 939A 28 01            jr z,1F
1396+ 939C              ;    cp $02
1397+ 939C              ;    jr z,1F
1398+ 939C              ;    cp $03
1399+ 939C              ;    jr z,1F
1400+ 939C C0               ret nz
1401+ 939D 04           1 inc b
1402+ 939E C9               ret
1403+ 939F
1404+ 939F A7           Compara_cositas_L4 and a
1405+ 93A0 28 0D            jr z,1F
1406+ 93A2              ;    cp $fd
1407+ 93A2              ;    jr z,1F
1408+ 93A2 FE FE            cp $fe
1409+ 93A4 28 09            jr z,1F
1410+ 93A6 FE FF            cp $ff
1411+ 93A8 28 05            jr z,1F
1412+ 93AA FE 01            cp $01
1413+ 93AC 28 01            jr z,1F
1414+ 93AE              ;    cp $02
1415+ 93AE              ;    jr z,1F
1416+ 93AE              ;    cp $03
1417+ 93AE              ;    jr z,1F
1418+ 93AE C0               ret nz
1419+ 93AF 04           1 inc b
1420+ 93B0 C9               ret
# file closed: Disparo.asm
1653  93B1              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93B1              ; ******************************************************************************************************************************************************************************************
   2+ 93B1              ;
   3+ 93B1              ; 26/06/23
   4+ 93B1              ;
   5+ 93B1              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93B1
   7+ 93B1 CD 95 96     Draw call Prepara_draw
   8+ 93B4 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93B5 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93B6 28 05        	jr z,2F
  11+ 93B8
  12+ 93B8 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93BB 18 0C        	jr 1F
  14+ 93BD
  15+ 93BD 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93C0 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93C3 CD 52 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93C6              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93C6 CD F7 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93C9
  21+ 93C9 3A EE 88     1 ld a,(Ctrl_0)
  22+ 93CC CB 6F        	bit 5,a
  23+ 93CE 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93D0
  25+ 93D0 CD E8 93     	call Comprueba_limite_horizontal
  26+ 93D3 CD 78 94     	call Comprueba_limite_vertical
  27+ 93D6
  28+ 93D6              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93D6              ; -----------------------
  30+ 93D6              ; -----------------------
  31+ 93D6              ; -----------------------
  32+ 93D6
  33+ 93D6 CD C5 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93D9 CD FC 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93DC CD 5B 96     	call Define_rutina_de_impresion
  36+ 93DF
  37+ 93DF 3A EE 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93E2 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93E4 32 EE 88     	ld (Ctrl_0),a
  40+ 93E7
  41+ 93E7 C9           	ret
  42+ 93E8
  43+ 93E8              ; *******************************************************************************************************************************************************************************************
  44+ 93E8              ;	21/01/23
  45+ 93E8              ;
  46+ 93E8              ; 	Comprueba_limite_horizontal.
  47+ 93E8              ;
  48+ 93E8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93E8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93E8              ;
  51+ 93E8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93E8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93E8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93E8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93E8
  56+ 93E8
  57+ 93E8
  58+ 93E8 3A EE 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93EB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93ED 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93EF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93F1 32 EE 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93F4 18 09            jr 6F
  64+ 93F6 CB 5F        1 bit 3,a
  65+ 93F8 28 0A            jr z,2F
  66+ 93FA E6 F7            and $f7
  67+ 93FC 32 EE 88         ld (Ctrl_0),a
  68+ 93FF CD 52 95     6 call Inicializacion
  69+ 9402 18 5B            jr 5F
  70+ 9404 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9405
  72+ 9405              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9405              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9405
  75+ 9405 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9406 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9409 CD B4 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 940C 67           	ld h,a
  79+ 940D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 940E CD B4 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9411 67           	ld h,a
  82+ 9412 A7           	and a
  83+ 9413 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9415 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9416 3A D8 88     	ld a,(Cuad_objeto)
  86+ 9419 FE 02        	cp 2
  87+ 941B 38 1E        	jr c,3F
  88+ 941D 28 1C        	jr z,3F
  89+ 941F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9420 28 23            jr z,7F
  91+ 9422 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9424 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9426 E1           	pop hl
  94+ 9427
  95+ 9427              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9427              ; _para indicar con E="2" en caso necesario.
  97+ 9427
  98+ 9427 E5               push hl
  99+ 9428 C5               push bc
 100+ 9429 CD B4 99     	call calcula_tercio
 101+ 942C FE 01        	cp 1
 102+ 942E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9430 CD 60 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9433 28 26            jr z,9F
 105+ 9435 38 24            jr c,9F
 106+ 9437 1E 00        11 ld e,0
 107+ 9439 18 22            jr 8F
 108+ 943B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 943C 28 07        	jr z, 7F
 110+ 943E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9440 1E 00         	ld e,0
 112+ 9442 E1           	pop hl
 113+ 9443 18 04        	jr 4F
 114+ 9445 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9447 18 15            jr 10F
 116+ 9449
 117+ 9449              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9449              ; _para indicar con E="2" en caso necesario.
 119+ 9449
 120+ 9449 E5           4 push hl
 121+ 944A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 944B CD B4 99     	call calcula_tercio
 123+ 944E FE 01        	cp 1
 124+ 9450 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9452 CD 60 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9455 28 04            jr z,9F
 127+ 9457 30 02            jr nc,9F
 128+ 9459 18 02        	jr 8F
 129+ 945B 1E 02        9 ld e,2
 130+ 945D C1           8 pop bc
 131+ 945E E1           10 pop hl
 132+ 945F C9           5 ret
 133+ 9460
 134+ 9460              ; --------------------
 135+ 9460              ;
 136+ 9460              ; 25/08/22
 137+ 9460
 138+ 9460 CD B4 99     Comprueba_centro call calcula_tercio
 139+ 9463 67               ld h,a
 140+ 9464 08           	ex af,af
 141+ 9465 FE 02        	cp 2
 142+ 9467 38 07        	jr c,1F
 143+ 9469 28 05        	jr z,1F
 144+ 946B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 946E 18 03        	jr 2F
 146+ 9470 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9473 08           2 ex af,af
 148+ 9474 A7               and a
 149+ 9475 ED 42            sbc hl,bc
 150+ 9477 C9               ret
 151+ 9478
 152+ 9478              ; *********************************************************************************************************************************************************************************************
 153+ 9478              ;
 154+ 9478              ;   16/8/22
 155+ 9478              ;
 156+ 9478              ;	Comprueba_limite_vertical
 157+ 9478              ;
 158+ 9478              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9478              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9478              ;
 161+ 9478
 162+ 9478 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 947B 7D           	ld a,l
 164+ 947C E6 1F        	and $1F
 165+ 947E 57           	ld d,a
 166+ 947F 3A 00 89     	ld a,(Limite_vertical)
 167+ 9482 BA           	cp d 											; Límite - Posición.
 168+ 9483 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9484 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9487 CB 47        	bit 0,a
 171+ 9489 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 948B
 173+ 948B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 948B
 175+ 948B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 948C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 948E
 178+ 948E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 948E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 948E
 181+ 948E 3A CA 88         ld a,(Coordenada_X)
 182+ 9491 16 0F            ld d,Centro_izquierda
 183+ 9493 A7               and a
 184+ 9494 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9495 28 1E            jr z,3F
 186+ 9497 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9499              ;                                                    ; _salimos sin modificar nada.
 188+ 9499 18 0E            jr 2F
 189+ 949B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 949C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 949E
 192+ 949E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 949E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 949E
 195+ 949E 3A CA 88         ld a,(Coordenada_X)
 196+ 94A1 16 10            ld d,Centro_derecha
 197+ 94A3 A7               and a
 198+ 94A4 92               sub d
 199+ 94A5 28 0E            jr z,3F
 200+ 94A7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94A9              ;                                                    ; _salimos sin modificar nada.
 202+ 94A9 CB 43        2 bit 0,e
 203+ 94AB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94AD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94AE CD 42 95         call Modificaccionne
 206+ 94B1 C1           	pop bc
 207+ 94B2 CD 52 95         call Inicializacion
 208+ 94B5 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94B6
 210+ 94B6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94B6
 212+ 94B6 C5           4 push bc
 213+ 94B7 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94BA 0A           	ld a,(bc)
 215+ 94BB 3D           	dec a
 216+ 94BC 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94BD 7D           	ld a,l
 218+ 94BE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94BF CB 47        	bit 0,a
 220+ 94C1 28 03        	jr z,5F
 221+ 94C3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94C4 18 2E        	jr 7F
 223+ 94C6
 224+ 94C6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94C6
 226+ 94C6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94C7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94C8 3A EE 88     	ld a,(Ctrl_0)
 229+ 94CB CB 4F        	bit 1,a
 230+ 94CD 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94CF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94D0
 233+ 94D0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94D0
 235+ 94D0 1C               inc e
 236+ 94D1 1D               dec e
 237+ 94D2 20 07            jr nz,12F
 238+ 94D4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94D5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94D6 22 C6 88     	ld (Posicion_actual),hl
 241+ 94D9 18 44        13 jr 9F
 242+ 94DB CB 43        12 bit 0,e
 243+ 94DD 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94DF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94DF C1           	pop bc
 246+ 94E0 18 D3        	jr 3B
 247+ 94E2 80           14 add b
 248+ 94E3 6F               ld l,a
 249+ 94E4 22 C6 88     	ld (Posicion_actual),hl
 250+ 94E7 CD 42 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94EA 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94EC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94EE 32 EE 88         ld (Ctrl_0),a
 254+ 94F1 F1           	pop af
 255+ 94F2 18 2B        	jr 9F
 256+ 94F4
 257+ 94F4              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94F4
 259+ 94F4 F5           7 push af
 260+ 94F5 3A EE 88     	ld a,(Ctrl_0)
 261+ 94F8 CB 47        	bit 0,a
 262+ 94FA 20 1D        	jr nz,8F
 263+ 94FC F1           	pop af
 264+ 94FD
 265+ 94FD              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94FD
 267+ 94FD 1C           	inc e
 268+ 94FE 1D               dec e
 269+ 94FF 20 07            jr nz,10F
 270+ 9501 90           	sub b
 271+ 9502 6F               ld l,a
 272+ 9503 22 C6 88     	ld (Posicion_actual),hl
 273+ 9506 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9508              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9508 CB 43        10 bit 0,e
 276+ 950A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 950C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 950C C1           	pop bc
 279+ 950D 18 A6        	jr 3B
 280+ 950F 90           16 sub b
 281+ 9510 6F               ld l,a
 282+ 9511 22 C6 88     	ld (Posicion_actual),hl
 283+ 9514 CD 42 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9517 18 06            jr 9F
 285+ 9519 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 951B 32 EE 88         ld (Ctrl_0),a
 287+ 951E F1           	pop af
 288+ 951F C1           9 pop bc
 289+ 9520 1E 00        	ld e,0
 290+ 9522 CD 52 95         call Inicializacion
 291+ 9525 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9526 08           	ex af,af
 293+ 9527 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9528 18 8B            jr 3B
 295+ 952A
 296+ 952A              ; --------------------
 297+ 952A
 298+ 952A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 952C CD B0 96     1 call PreviousScan
 300+ 952F 10 FB            djnz 1B
 301+ 9531 22 C6 88     	ld (Posicion_actual),hl
 302+ 9534 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9535 C9           	ret
 304+ 9536
 305+ 9536              ; --------------------
 306+ 9536
 307+ 9536 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9538 CD A1 96     1 call NextScan
 309+ 953B 10 FB            djnz 1B
 310+ 953D 22 C6 88     	ld (Posicion_actual),hl
 311+ 9540 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9541 C9           	ret
 313+ 9542
 314+ 9542              ; --------------------
 315+ 9542              ;
 316+ 9542              ;	22/01/23
 317+ 9542              ;
 318+ 9542              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9542              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9542              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9542
 322+ 9542
 323+ 9542              Modificaccionne
 324+ 9542
 325+ 9542 3A D8 88     	ld a,(Cuad_objeto)
 326+ 9545 FE 02        	cp 2
 327+ 9547 CC 2A 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 954A DC 2A 95         call c,Modifica_Pos_actual
 329+ 954D C8           	ret z
 330+ 954E CD 36 95         call Modifica_Pos_actual2
 331+ 9551 C9               ret
 332+ 9552
 333+ 9552              ; *************************************************************************************************************************************************************************************************
 334+ 9552              ;
 335+ 9552              ;	13/8/22
 336+ 9552              ;
 337+ 9552              ;	Inicializacion
 338+ 9552              ;
 339+ 9552              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9552              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9552              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9552              ;
 343+ 9552              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9552              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9552              ;	_ desaparece/aparece.
 346+ 9552
 347+ 9552              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9552              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9552              ;
 350+ 9552              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9552              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9552              ; 		   [E] ="0"
 353+ 9552
 354+ 9552              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9552
 356+ 9552 CD B4 99     Inicializacion call calcula_tercio
 357+ 9555 28 36        	jr z,primit
 358+ 9557 E6 02        	and 2
 359+ 9559 20 07        	jr nz,segmit
 360+ 955B 7D           	ld a,l
 361+ 955C FE 7F        	cp $7f
 362+ 955E 38 2D        	jr c,primit
 363+ 9560 28 2B        	jr z,primit
 364+ 9562 CD BF 95     segmit call column
 365+ 9565 38 13        	jr c,tercuad
 366+ 9567 3E 04        cuarcuad ld a,4
 367+ 9569 32 D8 88     	ld (Cuad_objeto),a
 368+ 956C 21 20 48     	ld hl,$4820
 369+ 956F 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9572 21 00 89     	ld hl,Limite_vertical
 371+ 9575 36 0D        	ld (hl),$0d
 372+ 9577 08           	ex af,af
 373+ 9578 18 3C        	jr 1F
 374+ 957A              tercuad
 375+ 957A 3E 03        	ld a,3
 376+ 957C 32 D8 88     	ld (Cuad_objeto),a
 377+ 957F 21 20 48     	ld hl,$4820
 378+ 9582 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9585 21 00 89     	ld hl,Limite_vertical
 380+ 9588 36 12        	ld (hl),$12
 381+ 958A 08           	ex af,af
 382+ 958B 18 29        	jr 1F
 383+ 958D CD BF 95     primit call column
 384+ 9590 38 13        	jr c, primcuad
 385+ 9592              segcuad
 386+ 9592 3E 02        	ld a,2
 387+ 9594 32 D8 88     	ld (Cuad_objeto),a
 388+ 9597 21 C0 4F     	ld hl,$4fc0
 389+ 959A 22 FE 88     	ld (Limite_horizontal),hl
 390+ 959D 21 00 89     	ld hl,Limite_vertical
 391+ 95A0 36 0D        	ld (hl),$0d
 392+ 95A2 08           	ex af,af
 393+ 95A3 18 11        	jr 1F
 394+ 95A5              primcuad
 395+ 95A5 3E 01        	ld a,1
 396+ 95A7 32 D8 88     	ld (Cuad_objeto),a
 397+ 95AA 21 C0 4F     	ld hl,$4fc0
 398+ 95AD 22 FE 88     	ld (Limite_horizontal),hl
 399+ 95B0 21 00 89     	ld hl,Limite_vertical
 400+ 95B3 36 12        	ld (hl),$12
 401+ 95B5 08           	ex af,af
 402+ 95B6 CD 3F 9D     1 call Genera_coordenadas
 403+ 95B9 21 EE 88     	ld hl,Ctrl_0
 404+ 95BC CB EE        	set 5,(hl)
 405+ 95BE C9           	ret
 406+ 95BF
 407+ 95BF              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95BF
 409+ 95BF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95BF              ;
 411+ 95BF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95BF
 413+ 95BF 7D           column ld a,l
 414+ 95C0 E6 1F        	and $1f
 415+ 95C2 FE 10         	cp $10
 416+ 95C4 C9            	ret
 417+ 95C5
 418+ 95C5              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95C5              ;
 420+ 95C5              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95C5              ;
 422+ 95C5              ; 14/12/22
 423+ 95C5              ;
 424+ 95C5              ;	Modifica: A y BC.
 425+ 95C5
 426+ 95C5 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95C8 E6 01        	and 1
 428+ 95CA 28 17        	jr z,1F
 429+ 95CC
 430+ 95CC              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95CC
 432+ 95CC 3A CA 88     	ld a,(Coordenada_X)
 433+ 95CF 47           	ld b,a
 434+ 95D0 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95D1 79           	ld a,c
 436+ 95D2 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95D3 38 08        	jr c,2F
 438+ 95D5 47           	ld b,a
 439+ 95D6 79           	ld a,c
 440+ 95D7 90           	sub b
 441+ 95D8 32 FD 88     	ld (Columnas),a
 442+ 95DB 18 1B        	jr 4F
 443+ 95DD 79           2 ld a,c
 444+ 95DE 32 FD 88     	ld (Columnas),a
 445+ 95E1 18 15        	jr 4F
 446+ 95E3
 447+ 95E3              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95E3
 449+ 95E3 3A CA 88     1 ld a,(Coordenada_X)
 450+ 95E6 81           	add c
 451+ 95E7 3D           	dec a
 452+ 95E8 D6 1F        	sub $1f
 453+ 95EA 38 08        	jr c,3F
 454+ 95EC 47           	ld b,a
 455+ 95ED 79           	ld a,c
 456+ 95EE 90           	sub b
 457+ 95EF 32 FD 88     	ld (Columnas),a
 458+ 95F2 18 04        	jr 4F
 459+ 95F4 79           3 ld a,c
 460+ 95F5 32 FD 88     	ld (Columnas),a
 461+ 95F8 D9           4 exx
 462+ 95F9 4F           	ld c,a
 463+ 95FA D9           	exx
 464+ 95FB C9            ret
 465+ 95FC
 466+ 95FC              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95FC              ;
 468+ 95FC              ;   19/7/23
 469+ 95FC              ;
 470+ 95FC              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95FC              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95FC              ;
 473+ 95FC              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95FC              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95FC              ;
 476+ 95FC              ;	DESTRUYE: HL,B Y A.
 477+ 95FC
 478+ 95FC 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95FF FE 02        	cp 2
 480+ 9601 38 18        	jr c,1F
 481+ 9603 28 16        	jr z,1F
 482+ 9605 E6 01        	and 1
 483+ 9607 28 0D        	jr z,3F
 484+ 9609
 485+ 9609              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9609
 487+ 9609 CD 4F 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 960C
 489+ 960C 7D           9 ld a,l
 490+ 960D E6 1F        	and $1f
 491+ 960F 28 2A        	jr z,7F
 492+ 9611 2B           	dec hl
 493+ 9612 10 F8        	djnz 9B
 494+ 9614 18 25        	jr 7F
 495+ 9616
 496+ 9616              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9616
 498+ 9616 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 9619 18 20        	jr 7F
 500+ 961B
 501+ 961B 28 14        1 jr z,2F
 502+ 961D
 503+ 961D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 961D
 505+ 961D CD 4F 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9620
 507+ 9620 7D           4 ld a,l
 508+ 9621 E6 1F        	and $1f
 509+ 9623 28 03        	jr z,6F
 510+ 9625 2B           	dec hl
 511+ 9626 10 F8        	djnz 4B
 512+ 9628 06 0F        6 ld b,15
 513+ 962A CD B0 96     5 call PreviousScan
 514+ 962D 10 FB        	djnz 5B
 515+ 962F 18 0A        	jr 7F
 516+ 9631
 517+ 9631              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9631
 519+ 9631 CD 4F 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9634 06 0F        	ld b,15
 521+ 9636 CD B0 96     8 call PreviousScan
 522+ 9639 10 FB        	djnz 8B
 523+ 963B
 524+ 963B E5           7 push hl
 525+ 963C DD E1        	pop ix
 526+ 963E
 527+ 963E 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 9641 E5           	push hl
 529+ 9642 FD E1        	pop iy
 530+ 9644
 531+ 9644              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9644
 533+ 9644 3A EE 88     	ld a,(Ctrl_0)
 534+ 9647 CB 77        	bit 6,a
 535+ 9649 C8           	ret z
 536+ 964A
 537+ 964A              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 964A              ; _ entidad / Amadeus´.
 539+ 964A
 540+ 964A DD 22 4C 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 964E
 542+ 964E C9           	ret
 543+ 964F
 544+ 964F              ; --------------------------------------------------------------------------------------------------------------------
 545+ 964F              ;
 546+ 964F              ;	2/1/23
 547+ 964F              ;
 548+ 964F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 964F              ;
 550+ 964F              ;	Tras esta rutina tenemos:
 551+ 964F              ;
 552+ 964F              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 964F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 964F              ;
 555+ 964F              ;	DESTRUYE!!!!! HL,B y A.
 556+ 964F
 557+ 964F 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 9652 3A FD 88     	ld a,(Columnas)
 559+ 9655 3D           	dec a
 560+ 9656 20 01        	jr nz,1F
 561+ 9658 3C           	inc a
 562+ 9659 47           1 ld b,a
 563+ 965A C9           	ret
 564+ 965B
 565+ 965B              ; --------------------------------------------------------------------------------------------------------------------
 566+ 965B              ;
 567+ 965B              ;	3/1/23
 568+ 965B              ;
 569+ 965B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 965B              ;
 571+ 965B              ;	Destruye: A,B,HL y DE.
 572+ 965B
 573+ 965B              Define_rutina_de_impresion
 574+ 965B
 575+ 965B 3A C5 88     	ld a,(Columns)
 576+ 965E 47           	ld b,a
 577+ 965F 3A FD 88     	ld a,(Columnas)
 578+ 9662 B8           	cp b
 579+ 9663 20 0D        	jr nz,2f
 580+ 9665
 581+ 9665              ;	La entidad se imprime entera.
 582+ 9665
 583+ 9665 21 84 97     	ld hl, Indice_entidades_completas
 584+ 9668 E6 01        	and 1
 585+ 966A 28 02        	jr z,1F
 586+ 966C
 587+ 966C 23           	inc hl
 588+ 966D 23           	inc hl
 589+ 966E
 590+ 966E CD D9 8C     1 call Extrae_address
 591+ 9671 C9           	ret		;	ret
 592+ 9672
 593+ 9672              ;	La entidad no se imprime entera en pantalla.
 594+ 9672
 595+ 9672 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 9675 E6 01        	and 1
 597+ 9677 28 17        	jr z,3F
 598+ 9679
 599+ 9679              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9679
 601+ 9679 21 88 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 967C 3A C5 88     4 ld a,(Columns)
 603+ 967F E6 01        	and 1
 604+ 9681 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9683
 606+ 9683 23           	inc hl
 607+ 9684 23           	inc hl
 608+ 9685
 609+ 9685 3A FD 88     	ld a,(Columnas)
 610+ 9688 E6 01        	and 1
 611+ 968A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 968C
 613+ 968C 23           	inc hl
 614+ 968D 23           	inc hl
 615+ 968E
 616+ 968E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9690
 618+ 9690 21 8E 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9693 18 E7        	jr 4B
 620+ 9695
 621+ 9695              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9695              ;
 623+ 9695              ;	Prepara_draw
 624+ 9695              ;
 625+ 9695              ;	Es una rutina de carga.
 626+ 9695              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9695              ;
 628+ 9695              ;	FUNCIONAMIENTO:
 629+ 9695              ;
 630+ 9695              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9695              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9695              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9695              ;
 634+ 9695              ;	DESTRUYE:
 635+ 9695              ;
 636+ 9695              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9695
 638+ 9695 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9698 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9699 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 969A 4E           	ld c,(hl)
 642+ 969B 2A C6 88     	ld hl,(Posicion_actual)
 643+ 969E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96A0 C9           	ret
 645+ 96A1
 646+ 96A1              ;----------------------------------------------------------------------------------------------------------------
 647+ 96A1              ;
 648+ 96A1              ;	5/08/22
 649+ 96A1              ;
 650+ 96A1              ;   NextScan.
 651+ 96A1              ;
 652+ 96A1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96A1              ;
 654+ 96A1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96A1              ;
 656+ 96A1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96A1              ;
 658+ 96A1              ;       DESTRUIDOS: AF y HL !!!
 659+ 96A1              ;
 660+ 96A1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96A1              ;
 662+ 96A1
 663+ 96A1 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96A2 7C               ld a,h
 665+ 96A3 E6 07            and 7
 666+ 96A5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96A6
 668+ 96A6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96A7 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96A9 6F               ld l,a
 671+ 96AA D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96AB
 673+ 96AB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96AC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96AE 67               ld h,a
 676+ 96AF C9               ret
 677+ 96B0
 678+ 96B0              ;----------------------------------------------------------------------------------------------------------------
 679+ 96B0              ;
 680+ 96B0              ;	5/08/22
 681+ 96B0              ;
 682+ 96B0              ;   PreviousScan.
 683+ 96B0              ;
 684+ 96B0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96B0              ;
 686+ 96B0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96B0              ;
 688+ 96B0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96B0              ;
 690+ 96B0              ;       DESTRUIDOS: AF y HL !!!
 691+ 96B0              ;
 692+ 96B0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96B0              ;
 694+ 96B0
 695+ 96B0 7C           PreviousScan ld a,h
 696+ 96B1 25               dec h               ; Dec H.
 697+ 96B2 E6 07            and 7
 698+ 96B4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96B5
 700+ 96B5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96B6 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96B8 6F               ld l,a
 703+ 96B9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96BA
 705+ 96BA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96BB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96BD 67               ld h,a
 708+ 96BE C9               ret
 709+ 96BF
 710+ 96BF              ; -----------------------------------------------------------------------------------
 711+ 96BF              ;
 712+ 96BF              ;	31/7/23
 713+ 96BF              ;
 714+ 96BF              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96BF              ;	Extrae fotos de Album_de_fotos.
 716+ 96BF
 717+ 96BF              Extrae_foto_entidades
 718+ 96BF
 719+ 96BF 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96C2 7E           	ld a,(hl)
 721+ 96C3 A7           	and a
 722+ 96C4 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96C5
 724+ 96C5 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96C8 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96C9 C8           	ret z
 727+ 96CA
 728+ 96CA              ; -----------------------------------
 729+ 96CA
 730+ 96CA ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96CE 31 00 70     	ld sp,Album_de_fotos
 732+ 96D1
 733+ 96D1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96D3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96D4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96D5
 737+ 96D5 ED 73 16 89  	ld (Stack_2),sp
 738+ 96D9 ED 7B 14 89  	ld sp,(Stack)
 739+ 96DD
 740+ 96DD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96DD
 742+ 96DD 3E CD        	ld a,$cd
 743+ 96DF 32 E7 96     	ld (Imprime),a
 744+ 96E2 EB           	ex de,hl
 745+ 96E3 22 E8 96     	ld (Imprime+1),hl
 746+ 96E6 EB           	ex de,hl
 747+ 96E7
 748+ 96E7              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96E7
 750+ 96E7 00 00 00     Imprime db 0,0,0
 751+ 96EA
 752+ 96EA ED 73 14 89  	ld (Stack),sp
 753+ 96EE
 754+ 96EE 3A 0F 89     	ld a,(Numero_de_malotes)
 755+ 96F1 3D           	dec a
 756+ 96F2 28 09        	jr z,1F
 757+ 96F4 32 0F 89      	ld (Numero_de_malotes),a
 758+ 96F7
 759+ 96F7 ED 7B 16 89  	ld sp,(Stack_2)
 760+ 96FB 18 D4        	jr 2B
 761+ 96FD
 762+ 96FD AF           1 xor a
 763+ 96FE 32 16 89     	ld (Stack_2),a
 764+ 9701
 765+ 9701 C9           	ret
 766+ 9702
 767+ 9702              ; -----------------------------------------------------------------------------------
 768+ 9702              ;
 769+ 9702              ;	28/2/23
 770+ 9702              ;
 771+ 9702              ;	Pinta los disparos generados.
 772+ 9702
 773+ 9702              Extrae_foto_disparos
 774+ 9702
 775+ 9702 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 9705 7E               ld a,(hl)
 777+ 9706 A7               and a
 778+ 9707 C8               ret z
 779+ 9708
 780+ 9708 3A 3C 89     	ld a,(Numero_de_disparotes)
 781+ 970B A7           	and a
 782+ 970C C8           	ret z
 783+ 970D ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9711 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9714
 786+ 9714 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9716 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 9717 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9718
 790+ 9718 ED 73 16 89  	ld (Stack_2),sp
 791+ 971C ED 7B 14 89  	ld sp,(Stack)
 792+ 9720
 793+ 9720              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9720
 795+ 9720 3E CD        	ld a,$cd
 796+ 9722 32 2A 97     	ld (Imprime2),a
 797+ 9725 EB           	ex de,hl
 798+ 9726 22 2B 97     	ld (Imprime2+1),hl
 799+ 9729 EB           	ex de,hl
 800+ 972A
 801+ 972A              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 972A
 803+ 972A 00 00 00     Imprime2 db 0,0,0
 804+ 972D
 805+ 972D 3A 3C 89     	ld a,(Numero_de_disparotes)
 806+ 9730 3D           	dec a
 807+ 9731 28 09        	jr z,1F
 808+ 9733 32 3C 89      	ld (Numero_de_disparotes),a
 809+ 9736
 810+ 9736 ED 7B 16 89  	ld sp,(Stack_2)
 811+ 973A 18 D8        	jr 2B
 812+ 973C
 813+ 973C AF           1 xor a
 814+ 973D 32 16 89     	ld (Stack_2),a
 815+ 9740 C9           	ret
 816+ 9741
 817+ 9741              ; -----------------------------------------------------------------------------------
 818+ 9741              ;
 819+ 9741              ;	4/9/23
 820+ 9741              ;
 821+ 9741              ;	Rutina principal de pintado de Amadeus.
 822+ 9741              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9741
 824+ 9741 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9744 7E           	ld a,(hl)
 826+ 9745 A7           	and a
 827+ 9746 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9747
 829+ 9747 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 974A A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 974B C8           	ret z
 832+ 974C
 833+ 974C              ; -----------------------------------
 834+ 974C
 835+ 974C ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 9750 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9753
 838+ 9753 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9755 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9756 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9757
 842+ 9757 ED 73 16 89  	ld (Stack_2),sp
 843+ 975B ED 7B 14 89  	ld sp,(Stack)
 844+ 975F
 845+ 975F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 975F
 847+ 975F 3E CD        	ld a,$cd
 848+ 9761 32 69 97     	ld (Imprime_Amadeus),a
 849+ 9764 EB           	ex de,hl
 850+ 9765 22 6A 97     	ld (Imprime_Amadeus+1),hl
 851+ 9768 EB           	ex de,hl
 852+ 9769
 853+ 9769              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9769
 855+ 9769 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 976C
 857+ 976C ED 73 14 89  	ld (Stack),sp
 858+ 9770
 859+ 9770 3A 0F 89     	ld a,(Numero_de_malotes)
 860+ 9773 3D           	dec a
 861+ 9774 28 09        	jr z,1F
 862+ 9776 32 0F 89      	ld (Numero_de_malotes),a
 863+ 9779
 864+ 9779 ED 7B 16 89  	ld sp,(Stack_2)
 865+ 977D 18 D4        	jr 2B
 866+ 977F
 867+ 977F AF           1 xor a
 868+ 9780 32 16 89     	ld (Stack_2),a
 869+ 9783
 870+ 9783 C9           	ret
# file closed: Draw_XOR.asm
1654  9784              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9784              ;   índices de Rutinas de impresión.
   2+ 9784
   3+ 9784 94 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9786 C1 97            defw Pinta_Amadeus_3x2
   5+ 9788
   6+ 9788 17 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 978A B7 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 978C 6B 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 978E
  10+ 978E 41 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9790 45 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9792 F9 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9794
  14+ 9794
  15+ 9794              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9794              ;
  17+ 9794              ;   12/12/22
  18+ 9794              ;
  19+ 9794              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9794              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9794              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9794              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9794              ;
  24+ 9794              ;   Modifica: DE y HL.
  25+ 9794
  26+ 9794 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9798 FD F9        	ld sp,iy
  28+ 979A 06 10            ld b,16
  29+ 979C D1           1 pop de
  30+ 979D 7B               ld a,e
  31+ 979E AE               xor (hl)
  32+ 979F 77           	ld (hl),a
  33+ 97A0 23           	inc hl
  34+ 97A1 7A               ld a,d
  35+ 97A2 AE               xor (hl)
  36+ 97A3 77           	ld (hl),a
  37+ 97A4 2B           	dec hl
  38+ 97A5 24           	inc h
  39+ 97A6 7C               ld a,h
  40+ 97A7 E6 07            and 7
  41+ 97A9 20 0A            jr nz,2F
  42+ 97AB 7D               ld a,l
  43+ 97AC C6 20            add a,$20
  44+ 97AE 6F               ld l,a
  45+ 97AF 38 04            jr c,2F
  46+ 97B1 7C               ld a,h
  47+ 97B2 D6 08            sub 8
  48+ 97B4 67               ld h,a
  49+ 97B5 7C           2 ld a,h
  50+ 97B6 FE 58            cp $58
  51+ 97B8 28 02            jr z,3F
  52+ 97BA 10 E0            djnz 1B
  53+ 97BC ED 7B 14 89  3 ld sp,(Stack)
  54+ 97C0 C9           	ret
  55+ 97C1
  56+ 97C1 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97C5 FD F9        	ld sp,iy
  58+ 97C7 06 08            ld b,8
  59+ 97C9 D1           1 pop de
  60+ 97CA 7B               ld a,e
  61+ 97CB AE               xor (hl)
  62+ 97CC 77           	ld (hl),a
  63+ 97CD 23           	inc hl
  64+ 97CE 7A               ld a,d
  65+ 97CF AE               xor (hl)
  66+ 97D0 77           	ld (hl),a
  67+ 97D1 23           	inc hl
  68+ 97D2 D1           	pop de
  69+ 97D3 7B               ld a,e
  70+ 97D4 AE               xor (hl)
  71+ 97D5 77           	ld (hl),a
  72+ 97D6 2B           	dec hl
  73+ 97D7 2B           	dec hl
  74+ 97D8 24           	inc h
  75+ 97D9 7C               ld a,h
  76+ 97DA E6 07            and 7
  77+ 97DC 20 0A            jr nz,2F
  78+ 97DE 7D               ld a,l
  79+ 97DF C6 20            add a,$20
  80+ 97E1 6F               ld l,a
  81+ 97E2 38 04            jr c,2F
  82+ 97E4 7C               ld a,h
  83+ 97E5 D6 08            sub 8
  84+ 97E7 67               ld h,a
  85+ 97E8 7C           2 ld a,h
  86+ 97E9 FE 58            cp $58
  87+ 97EB 28 25            jr z,4F
  88+ 97ED 7A               ld a,d
  89+ 97EE AE               xor (hl)
  90+ 97EF 77               ld (hl),a
  91+ 97F0 D1           	pop de
  92+ 97F1 23           	inc hl
  93+ 97F2 7B               ld a,e
  94+ 97F3 AE               xor (hl)
  95+ 97F4 77           	ld (hl),a
  96+ 97F5 23           	inc hl
  97+ 97F6 7A               ld a,d
  98+ 97F7 AE               xor (hl)
  99+ 97F8 77           	ld (hl),a
 100+ 97F9 2B           	dec hl
 101+ 97FA 2B           	dec hl
 102+ 97FB 24           	inc h
 103+ 97FC 7C               ld a,h
 104+ 97FD E6 07            and 7
 105+ 97FF 20 0A            jr nz,3F
 106+ 9801 7D               ld a,l
 107+ 9802 C6 20            add a,$20
 108+ 9804 6F               ld l,a
 109+ 9805 38 04            jr c,3F
 110+ 9807 7C               ld a,h
 111+ 9808 D6 08            sub 8
 112+ 980A 67               ld h,a
 113+ 980B 7C           3 ld a,h
 114+ 980C FE 58            cp $58
 115+ 980E 28 02            jr z,4F
 116+ 9810 10 B7            djnz 1B
 117+ 9812 ED 7B 14 89  4 ld sp,(Stack)
 118+ 9816 C9           	ret
 119+ 9817
 120+ 9817              ; ---------------------------------------------------
 121+ 9817
 122+ 9817 ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 981B FD F9        	ld sp,iy
 124+ 981D
 125+ 981D              ; >>>
 126+ 981D
 127+ 981D 06 10            ld b,16
 128+ 981F D1           1 pop de
 129+ 9820 7A           	ld a,d
 130+ 9821 AE           	xor (hl)
 131+ 9822 77           	ld (hl),a
 132+ 9823 24           	inc h
 133+ 9824 7C               ld a,h
 134+ 9825 E6 07            and 7
 135+ 9827 20 0C            jr nz,2F
 136+ 9829 7D               ld a,l
 137+ 982A C6 20            add a,$20
 138+ 982C 6F               ld l,a
 139+ 982D 38 06            jr c,2F
 140+ 982F 7C               ld a,h
 141+ 9830 D6 08            sub 8
 142+ 9832 67               ld h,a
 143+ 9833 18 00            jr 2F
 144+ 9835 7C           2 ld a,h
 145+ 9836 FE 58            cp $58
 146+ 9838 28 02            jr z,3F
 147+ 983A 10 E3            djnz 1B
 148+ 983C ED 7B 14 89  3 ld sp,(Stack)
 149+ 9840 C9           	ret
 150+ 9841
 151+ 9841 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9845 FD F9        	ld sp,iy
 153+ 9847
 154+ 9847              ; >>>
 155+ 9847
 156+ 9847 06 10            ld b,16
 157+ 9849 D1           1 pop de
 158+ 984A 7B           	ld a,e
 159+ 984B AE           	xor (hl)
 160+ 984C 77           	ld (hl),a
 161+ 984D 24           	inc h
 162+ 984E 7C               ld a,h
 163+ 984F E6 07            and 7
 164+ 9851 20 0C            jr nz,2F
 165+ 9853 7D               ld a,l
 166+ 9854 C6 20            add a,$20
 167+ 9856 6F               ld l,a
 168+ 9857 38 06            jr c,2F
 169+ 9859 7C               ld a,h
 170+ 985A D6 08            sub 8
 171+ 985C 67               ld h,a
 172+ 985D 18 00            jr 2F
 173+ 985F 7C           2 ld a,h
 174+ 9860 FE 58            cp $58
 175+ 9862 28 02            jr z,3F
 176+ 9864 10 E3            djnz 1B
 177+ 9866 ED 7B 14 89  3 ld sp,(Stack)
 178+ 986A C9           	ret
 179+ 986B
 180+ 986B              ; ---------------------------------------------------
 181+ 986B
 182+ 986B ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 986F FD F9        	ld sp,iy
 184+ 9871 06 08            ld b,8
 185+ 9873 D1           1 pop de
 186+ 9874 7A           	ld a,d
 187+ 9875 AE           	xor (hl)
 188+ 9876 77           	ld (hl),a
 189+ 9877 23           	inc hl
 190+ 9878 D1           	pop de
 191+ 9879 7B           	ld a,e
 192+ 987A AE           	xor (hl)
 193+ 987B 77           	ld (hl),a
 194+ 987C 2B           	dec hl
 195+ 987D 24            	inc h
 196+ 987E 7C               ld a,h
 197+ 987F E6 07            and 7
 198+ 9881 20 0A            jr nz,2F
 199+ 9883 7D               ld a,l
 200+ 9884 C6 20            add a,$20
 201+ 9886 6F               ld l,a
 202+ 9887 38 04            jr c,2F
 203+ 9889 7C               ld a,h
 204+ 988A D6 08            sub 8
 205+ 988C 67               ld h,a
 206+ 988D 7C           2 ld a,h
 207+ 988E FE 58            cp $58
 208+ 9890 28 20            jr z,4F
 209+ 9892 D1               pop de
 210+ 9893 7B           	ld a,e
 211+ 9894 AE           	xor (hl)
 212+ 9895 77           	ld (hl),a
 213+ 9896 23           	inc hl
 214+ 9897 7A           	ld a,d
 215+ 9898 AE           	xor (hl)
 216+ 9899 77           	ld (hl),a
 217+ 989A 2B           	dec hl
 218+ 989B 24           	inc h
 219+ 989C 7C               ld a,h
 220+ 989D E6 07            and 7
 221+ 989F 20 0A            jr nz,3F
 222+ 98A1 7D               ld a,l
 223+ 98A2 C6 20            add a,$20
 224+ 98A4 6F               ld l,a
 225+ 98A5 38 04            jr c,3F
 226+ 98A7 7C               ld a,h
 227+ 98A8 D6 08            sub 8
 228+ 98AA 67               ld h,a
 229+ 98AB 7C           3 ld a,h
 230+ 98AC FE 58            cp $58
 231+ 98AE 28 02            jr z,4F
 232+ 98B0 10 C1            djnz 1B
 233+ 98B2 ED 7B 14 89  4 ld sp,(Stack)
 234+ 98B6 C9           	ret
 235+ 98B7
 236+ 98B7 ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98BB FD F9        	ld sp,iy
 238+ 98BD 06 08            ld b,8
 239+ 98BF D1           1 pop de
 240+ 98C0 D1           	pop de
 241+ 98C1 7B           	ld a,e
 242+ 98C2 AE           	xor (hl)
 243+ 98C3 77           	ld (hl),a
 244+ 98C4 24            	inc h
 245+ 98C5 7C               ld a,h
 246+ 98C6 E6 07            and 7
 247+ 98C8 20 0A            jr nz,2F
 248+ 98CA 7D               ld a,l
 249+ 98CB C6 20            add a,$20
 250+ 98CD 6F               ld l,a
 251+ 98CE 38 04            jr c,2F
 252+ 98D0 7C               ld a,h
 253+ 98D1 D6 08            sub 8
 254+ 98D3 67               ld h,a
 255+ 98D4 7C           2 ld a,h
 256+ 98D5 FE 58            cp $58
 257+ 98D7 28 1B            jr z,4F
 258+ 98D9 D1               pop de
 259+ 98DA 7A           	ld a,d
 260+ 98DB AE           	xor (hl)
 261+ 98DC 77           	ld (hl),a
 262+ 98DD 24           	inc h
 263+ 98DE 7C               ld a,h
 264+ 98DF E6 07            and 7
 265+ 98E1 20 0A            jr nz,3F
 266+ 98E3 7D               ld a,l
 267+ 98E4 C6 20            add a,$20
 268+ 98E6 6F               ld l,a
 269+ 98E7 38 04            jr c,3F
 270+ 98E9 7C               ld a,h
 271+ 98EA D6 08            sub 8
 272+ 98EC 67               ld h,a
 273+ 98ED 7C           3 ld a,h
 274+ 98EE FE 58            cp $58
 275+ 98F0 28 02            jr z,4F
 276+ 98F2 10 CB            djnz 1B
 277+ 98F4 ED 7B 14 89  4 ld sp,(Stack)
 278+ 98F8 C9           	ret
 279+ 98F9
 280+ 98F9 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98FD FD F9        	ld sp,iy
 282+ 98FF 06 08            ld b,8
 283+ 9901 D1           1 pop de
 284+ 9902 7B           	ld a,e
 285+ 9903 AE           	xor (hl)
 286+ 9904 77           	ld (hl),a
 287+ 9905 23           	inc hl
 288+ 9906 7A           	ld a,d
 289+ 9907 AE           	xor (hl)
 290+ 9908 77           	ld (hl),a
 291+ 9909 2B           	dec hl
 292+ 990A 24             	inc h
 293+ 990B 7C               ld a,h
 294+ 990C E6 07            and 7
 295+ 990E 20 0A            jr nz,2F
 296+ 9910 7D               ld a,l
 297+ 9911 C6 20            add a,$20
 298+ 9913 6F               ld l,a
 299+ 9914 38 04            jr c,2F
 300+ 9916 7C               ld a,h
 301+ 9917 D6 08            sub 8
 302+ 9919 67               ld h,a
 303+ 991A 7C           2 ld a,h
 304+ 991B FE 58            cp $58
 305+ 991D 28 21            jr z,4F
 306+ 991F D1               pop de
 307+ 9920 7A           	ld a,d
 308+ 9921 AE           	xor (hl)
 309+ 9922 77           	ld (hl),a
 310+ 9923 23           	inc hl
 311+ 9924 D1               pop de
 312+ 9925 7B           	ld a,e
 313+ 9926 AE           	xor (hl)
 314+ 9927 77           	ld (hl),a
 315+ 9928 2B           	dec hl
 316+ 9929 24           	inc h
 317+ 992A 7C               ld a,h
 318+ 992B E6 07            and 7
 319+ 992D 20 0A            jr nz,3F
 320+ 992F 7D               ld a,l
 321+ 9930 C6 20            add a,$20
 322+ 9932 6F               ld l,a
 323+ 9933 38 04            jr c,3F
 324+ 9935 7C               ld a,h
 325+ 9936 D6 08            sub 8
 326+ 9938 67               ld h,a
 327+ 9939 7C           3 ld a,h
 328+ 993A FE 58            cp $58
 329+ 993C 28 02            jr z,4F
 330+ 993E 10 C1            djnz 1B
 331+ 9940 ED 7B 14 89  4 ld sp,(Stack)
 332+ 9944 C9           	ret
 333+ 9945
 334+ 9945 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9949 FD F9        	ld sp,iy
 336+ 994B 06 08            ld b,8
 337+ 994D D1           1 pop de
 338+ 994E 7B           	ld a,e
 339+ 994F AE           	xor (hl)
 340+ 9950 77           	ld (hl),a
 341+ 9951 24            	inc h
 342+ 9952 7C               ld a,h
 343+ 9953 E6 07            and 7
 344+ 9955 20 0A            jr nz,2F
 345+ 9957 7D               ld a,l
 346+ 9958 C6 20            add a,$20
 347+ 995A 6F               ld l,a
 348+ 995B 38 04            jr c,2F
 349+ 995D 7C               ld a,h
 350+ 995E D6 08            sub 8
 351+ 9960 67               ld h,a
 352+ 9961 7C           2 ld a,h
 353+ 9962 FE 58            cp $58
 354+ 9964 28 1C            jr z,4F
 355+ 9966 D1               pop de
 356+ 9967 7A           	ld a,d
 357+ 9968 AE           	xor (hl)
 358+ 9969 77           	ld (hl),a
 359+ 996A 24           	inc h
 360+ 996B 7C               ld a,h
 361+ 996C E6 07            and 7
 362+ 996E 20 0A            jr nz,3F
 363+ 9970 7D               ld a,l
 364+ 9971 C6 20            add a,$20
 365+ 9973 6F               ld l,a
 366+ 9974 38 04            jr c,3F
 367+ 9976 7C               ld a,h
 368+ 9977 D6 08            sub 8
 369+ 9979 67               ld h,a
 370+ 997A 7C           3 ld a,h
 371+ 997B FE 58            cp $58
 372+ 997D 28 03            jr z,4F
 373+ 997F D1               pop de
 374+ 9980 10 CB            djnz 1B
 375+ 9982 ED 7B 14 89  4 ld sp,(Stack)
 376+ 9986 C9           	ret
 377+ 9987
 378+ 9987              ; ---------------------------------------------------
 379+ 9987              ;
 380+ 9987              ;   27/02/23
 381+ 9987              ;
 382+ 9987              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9987              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9987              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9987
 386+ 9987 ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 998B FD F9            ld sp,iy
 388+ 998D 06 03            ld b,3
 389+ 998F D1           1 pop de
 390+ 9990 7B               ld a,e
 391+ 9991 AE               xor (hl)
 392+ 9992 77               ld (hl),a
 393+ 9993 23               inc hl
 394+ 9994 7A               ld a,d
 395+ 9995 AE               xor (hl)
 396+ 9996 77               ld (hl),a
 397+ 9997 2B               dec hl
 398+ 9998
 399+ 9998 24               inc h
 400+ 9999 7C               ld a,h
 401+ 999A E6 07            and 7
 402+ 999C 20 0A            jr nz,2F
 403+ 999E 7D               ld a,l
 404+ 999F C6 20            add a,$20
 405+ 99A1 6F               ld l,a
 406+ 99A2 38 04            jr c,2F
 407+ 99A4 7C               ld a,h
 408+ 99A5 D6 08            sub 8
 409+ 99A7 67               ld h,a
 410+ 99A8 7C           2 ld a,h
 411+ 99A9 FE 58            cp $58
 412+ 99AB 28 02            jr z,3F
 413+ 99AD
 414+ 99AD 10 E0            djnz 1B
 415+ 99AF ED 7B 14 89  3 ld sp,(Stack)
 416+ 99B3 C9               ret
 417+ 99B4
# file closed: Rutinas_de_impresion_sprites.asm
1655  99B4              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99B4              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99B4              ;
   3+ 99B4              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99B4              ;
   5+ 99B4              ; *****************************************************************************************************************************************************************************************
   6+ 99B4              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99B4
   8+ 99B4 7C           calcula_tercio ld a,h
   9+ 99B5 E6 18        	and $18
  10+ 99B7 CB 2F        	sra a
  11+ 99B9 CB 2F        	sra a
  12+ 99BB CB 2F        	sra a
  13+ 99BD C9           	ret
  14+ 99BE
# file closed: calcula_tercio.asm
1656  99BE              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99BE              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99BE              ;
   3+ 99BE              ;
   4+ 99BE              ;	CLS.
   5+ 99BE              ;
   6+ 99BE              ;	Limpia la pantalla y define sus atributos.
   7+ 99BE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99BE              ;
   9+ 99BE              ;	COLORES: 0 ..... NEGRO
  10+ 99BE              ;    		 1 ..... AZUL
  11+ 99BE              ; 			 2 ..... ROJO
  12+ 99BE              ;			 3 ..... MAGENTA
  13+ 99BE              ; 			 4 ..... VERDE
  14+ 99BE              ; 			 5 ..... CIAN
  15+ 99BE              ;			 6 ..... AMARILLO
  16+ 99BE              ; 			 7 ..... BLANCO
  17+ 99BE              ;
  18+ 99BE              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99BE              ;
  20+ 99BE              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99BE
  22+ 99BE
  23+ 99BE 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99C1 11 01 40     	LD DE,$4001
  25+ 99C4 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99C7 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99C9 ED B0        	LDIR
  28+ 99CB 01 FF 02     	LD BC,767
  29+ 99CE 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99CF ED B0        	LDIR
  31+ 99D1 C9           	ret
  32+ 99D2
# file closed: Cls.asm
1657  99D2              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D2              ; ******************************************************************************************************************************************************************************************
   2+ 99D2              ;
   3+ 99D2              ;   20/05/23
   4+ 99D2              ;
   5+ 99D2              ;	Recompone_posicion_inicio
   6+ 99D2              ;
   7+ 99D2              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D2              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D2              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D2              ;	_ a una u otra rutina.
  11+ 99D2
  12+ 99D2              Recompone_posicion_inicio
  13+ 99D2
  14+ 99D2 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 99D5 7D           	ld a,l
  16+ 99D6 E6 1F        	and $1f
  17+ 99D8 28 16        	jr z,1F
  18+ 99DA
  19+ 99DA FE 1F        	cp $1f
  20+ 99DC 28 0D        	jr z,3F
  21+ 99DE
  22+ 99DE 21 01 89     	ld hl,Ctrl_2
  23+ 99E1 CB C6        	set 0,(hl)
  24+ 99E3 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 99E6 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99E9 18 08        	jr 2F
  27+ 99EB
  28+ 99EB CD 8C 9B     3 call Mov_left
  29+ 99EE 18 03        	jr 2F
  30+ 99F0
  31+ 99F0 CD 6E 9A     1 call Mov_right
  32+ 99F3 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99F6 22 C8 88     	ld (Puntero_objeto),hl
  34+ 99F9 C9           	ret
  35+ 99FA
  36+ 99FA              ; ******************************************************************************************************************************************************************************************
  37+ 99FA              ;
  38+ 99FA              ;   27/05/23
  39+ 99FA              ;
  40+ 99FA              ;	Mov_down
  41+ 99FA              ;
  42+ 99FA              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99FA              ;
  44+ 99FA              ;
  45+ 99FA              Mov_down
  46+ 99FA
  47+ 99FA CD 5C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99FD              ;																	; _ repone (Puntero_objeto).
  49+ 99FD 21 EE 88     	ld hl,Ctrl_0
  50+ 9A00 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A02              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A02              ; 																	; _ en el caso de que no lo haya.
  53+ 9A02 3A DC 88     	ld a,(Vel_down)
  54+ 9A05 47           	ld b,a
  55+ 9A06 2A C6 88         ld hl,(Posicion_actual)
  56+ 9A09 CD B4 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A0C E6 02        	and 2
  58+ 9A0E 28 0F        	jr z,1F
  59+ 9A10
  60+ 9A10              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A10              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A10
  63+ 9A10 7C           	ld a,h
  64+ 9A11 FE 57        	cp $57
  65+ 9A13 20 0A        	jr nz,1F
  66+ 9A15
  67+ 9A15 7D           	ld a,l
  68+ 9A16 C6 20        	add $20
  69+ 9A18 30 05        	jr nc,1F
  70+ 9A1A
  71+ 9A1A              ; ------------------------------
  72+ 9A1A              ;	call Reaparece_arriba
  73+ 9A1A CD 19 9D     	call Reinicio
  74+ 9A1D              ; ------------------------------
  75+ 9A1D
  76+ 9A1D 18 08        	jr 3F
  77+ 9A1F CD A1 96     1 call NextScan
  78+ 9A22 22 C6 88     	ld (Posicion_actual),hl
  79+ 9A25 10 E2            djnz 2B
  80+ 9A27 CD 3F 9D     3 call Genera_coordenadas
  81+ 9A2A C9           	ret
  82+ 9A2B
  83+ 9A2B              ; ******************************************************************************************************************************************************************************************
  84+ 9A2B              ;
  85+ 9A2B              ;   27/05/23
  86+ 9A2B              ;
  87+ 9A2B              ;	Mov_up
  88+ 9A2B              ;
  89+ 9A2B              ; 	Mueve el Sprite hacia arriba.
  90+ 9A2B              ;
  91+ 9A2B              ;
  92+ 9A2B              Mov_up
  93+ 9A2B
  94+ 9A2B CD 5C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A2E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A2E 21 EE 88     	ld hl,Ctrl_0
  97+ 9A31 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A33              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A33              ; 																		; _ en el caso de que no lo haya.
 100+ 9A33 3A DB 88     	ld a,(Vel_up)
 101+ 9A36 47           	ld b,a
 102+ 9A37 2A C6 88     	ld hl,(Posicion_actual)
 103+ 9A3A CD B4 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A3D A7           	and a
 105+ 9A3E 20 10        	jr nz,1F
 106+ 9A40
 107+ 9A40              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A40              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A40
 110+ 9A40 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A41 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A43 20 0B            jr nz,1F
 113+ 9A45 7D               ld a,l
 114+ 9A46 D6 20            sub $20
 115+ 9A48 30 06            jr nc,1F
 116+ 9A4A 25               dec h
 117+ 9A4B
 118+ 9A4B              ; -----------------------------
 119+ 9A4B CD FA 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A4E              ;	call Reinicio
 121+ 9A4E              ; -----------------------------
 122+ 9A4E
 123+ 9A4E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A50 CD B0 96     1 call PreviousScan
 125+ 9A53 22 C6 88     	ld (Posicion_actual),hl
 126+ 9A56 10 E2            djnz 3B
 127+ 9A58 CD 3F 9D     2 call Genera_coordenadas
 128+ 9A5B C9           	ret
 129+ 9A5C
 130+ 9A5C              ; -----------------------------
 131+ 9A5C              ;
 132+ 9A5C              ;	27/5/23
 133+ 9A5C              ;
 134+ 9A5C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A5C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A5C              ;
 137+ 9A5C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A5C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A5C              ;
 140+ 9A5C              ;	Modifica: A y (Puntero_objeto).
 141+ 9A5C
 142+ 9A5C 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A5F CB 47        	bit 0,a
 144+ 9A61 C8           	ret z
 145+ 9A62 CB 87        	res 0,a
 146+ 9A64 32 01 89     	ld (Ctrl_2),a
 147+ 9A67 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A6A 22 C8 88     	ld (Puntero_objeto),hl
 149+ 9A6D C9           	ret
 150+ 9A6E
 151+ 9A6E              ; ******************************************************************************************************************************************************************************************
 152+ 9A6E              ;
 153+ 9A6E              ;	19/10/22
 154+ 9A6E              ;
 155+ 9A6E              ;	Mov_right.
 156+ 9A6E              ;
 157+ 9A6E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A6E              ;
 159+ 9A6E
 160+ 9A6E 21 EE 88     Mov_right ld hl,Ctrl_0
 161+ 9A71 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A73              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A73              ; 																	; _ en el caso de que no lo haya.
 164+ 9A73 3A EE 88     	ld a,(Ctrl_0)
 165+ 9A76 CB 77        	bit 6,a
 166+ 9A78 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A7A
 168+ 9A7A CD A8 9C     	call Stop_Amadeus_right
 169+ 9A7D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A7E 18 4D        	jr 8F
 171+ 9A80
 172+ 9A80 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A83 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A85 20 46        	jr nz,8F
 175+ 9A87
 176+ 9A87 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A8A A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A8B 28 40        	jr z,8F
 179+ 9A8D
 180+ 9A8D              ; ---------- ---------- ----------
 181+ 9A8D              ;
 182+ 9A8D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A8D
 184+ 9A8D 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A90 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A92 28 11        	jr z,1F
 187+ 9A94 38 06        	jr c,6F
 188+ 9A96 FE 04        	cp 4
 189+ 9A98 28 14        	jr z,7F
 190+ 9A9A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A9C
 192+ 9A9C              ; ---------- ---------- ----------
 193+ 9A9C              ;
 194+ 9A9C              ; Perfiles de velocidad
 195+ 9A9C              ;
 196+ 9A9C
 197+ 9A9C 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A9F FE FE        	cp $fe
 199+ 9AA1 20 2A        	jr nz,8F
 200+ 9AA3 18 10        	jr 3F
 201+ 9AA5 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AA8 FE FD        	cp $fd
 203+ 9AAA 20 21        	jr nz,8F
 204+ 9AAC 18 07        	jr 3F
 205+ 9AAE 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AB1 FE FB        	cp $fb
 207+ 9AB3 20 18        	jr nz,8F
 208+ 9AB5
 209+ 9AB5              ; ---------- ---------- ----------
 210+ 9AB5
 211+ 9AB5              3
 212+ 9AB5 CD E8 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AB8              ;	call Reinicio
 214+ 9AB8
 215+ 9AB8              ; ---------- ---------- ----------
 216+ 9AB8              ;
 217+ 9AB8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AB8
 219+ 9AB8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ABA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9ABB CD D4 9A     	call DESPLZ_DER
 222+ 9ABE C1           	pop bc
 223+ 9ABF 10 F9        	djnz 5B
 224+ 9AC1 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AC4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AC5 22 C6 88     	ld (Posicion_actual),hl
 227+ 9AC8 CD 3F 9D     	call Genera_coordenadas
 228+ 9ACB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9ACD
 230+ 9ACD              ; ---------- ---------- ----------
 231+ 9ACD
 232+ 9ACD 2A C6 88     8 ld hl,(Posicion_actual)
 233+ 9AD0 CD D4 9A     	call DESPLZ_DER
 234+ 9AD3 C9           2 ret
 235+ 9AD4
 236+ 9AD4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AD4              ;
 238+ 9AD4              ;	22/9/22
 239+ 9AD4              ;
 240+ 9AD4
 241+ 9AD4 CD E3 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AD7 CD 2F 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9ADA CD 58 9B         call Ciclo_completo
 244+ 9ADD 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AE0 CB FE        	set 7,(hl)
 246+ 9AE2 C9           	ret
 247+ 9AE3
 248+ 9AE3              ; ******************************************************************************************************************************************************************************************
 249+ 9AE3              ;	15/02/23
 250+ 9AE3              ;
 251+ 9AE3
 252+ 9AE3 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AE6 47           	ld b,a
 254+ 9AE7 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AEA 23           1 inc hl
 256+ 9AEB 23           	inc hl
 257+ 9AEC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AEE 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AF1 CD D9 8C     	call Extrae_address
 260+ 9AF4 22 C8 88     	ld (Puntero_objeto),hl
 261+ 9AF7
 262+ 9AF7              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AF7
 264+ 9AF7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AF7              ; Cuántos movimientos hemos hecho ??
 266+ 9AF7              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AF7
 268+ 9AF7 2A CE 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AFA EB           	ex de,hl
 270+ 9AFB A7           	and a
 271+ 9AFC ED 52        	sbc hl,de
 272+ 9AFE CB 3D        	srl l
 273+ 9B00 3E 08        6 ld a,8
 274+ 9B02 95           	sub l
 275+ 9B03 30 1E        	jr nc,3F
 276+ 9B05
 277+ 9B05              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B05              ; B="0".
 279+ 9B05
 280+ 9B05 04           4 inc b
 281+ 9B06 3C           	inc a
 282+ 9B07 20 FC        	jr nz,4B
 283+ 9B09 78           	ld a,b
 284+ 9B0A 08           	ex af,af
 285+ 9B0B 2A CE 88     	ld hl,(Indice_Sprite_der)
 286+ 9B0E 23           5 inc hl
 287+ 9B0F 23           	inc hl
 288+ 9B10 10 FC        	djnz 5B
 289+ 9B12 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B15 CD D9 8C     	call Extrae_address
 291+ 9B18 22 C8 88     	ld (Puntero_objeto),hl
 292+ 9B1B
 293+ 9B1B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B1B              ; _(Posicion_actual).
 295+ 9B1B
 296+ 9B1B 21 C6 88     	ld hl,Posicion_actual
 297+ 9B1E 34           	inc (hl)
 298+ 9B1F 08               ex af,af
 299+ 9B20 6F           	ld l,a
 300+ 9B21 18 DD        	jr 6B
 301+ 9B23
 302+ 9B23              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B23
 304+ 9B23 47           3 ld b,a
 305+ 9B24 2A D0 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B27 23           2 inc hl
 307+ 9B28 23           	inc hl
 308+ 9B29 10 FC        	djnz 2B
 309+ 9B2B 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B2E C9           8 ret
 311+ 9B2F
 312+ 9B2F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B2F              ;
 314+ 9B2F              ;	24/7/22
 315+ 9B2F              ;
 316+ 9B2F              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B2F              ;
 318+ 9B2F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B2F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B2F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B2F
 322+ 9B2F 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B32 A7           	and a
 324+ 9B33 20 1F        	jr nz,1F
 325+ 9B35 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B37 32 CC 88         ld (CTRL_DESPLZ),a
 327+ 9B3A
 328+ 9B3A 21 C5 88     	ld hl,Columns
 329+ 9B3D 34           	inc (hl)
 330+ 9B3E 3A D8 88     	ld a,(Cuad_objeto)
 331+ 9B41 E6 01        	and 1
 332+ 9B43 28 0F        	jr z,1F
 333+ 9B45 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B48 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B49 22 C6 88     	ld (Posicion_actual),hl
 336+ 9B4C CD 3F 9D     	call Genera_coordenadas
 337+ 9B4F CD B4 9C     	call Inc_CTRL_DESPLZ
 338+ 9B52 18 03        	jr 2F
 339+ 9B54 CD B4 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B57 C9           2 ret
 341+ 9B58
 342+ 9B58              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B58              ;
 344+ 9B58              ;	24/7/22
 345+ 9B58              ;
 346+ 9B58              ;	Ciclo_completo.
 347+ 9B58              ;
 348+ 9B58              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B58              ;
 350+ 9B58              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B58              ; 	Decrementamos (Columns).
 352+ 9B58              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B58              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B58
 355+ 9B58
 356+ 9B58 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B5B FE FF        	cp $ff
 358+ 9B5D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B5F E6 F0        	and $f0
 360+ 9B61 20 28        	jr nz,3F
 361+ 9B63
 362+ 9B63              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B63
 364+ 9B63 3A CC 88     	ld a,(CTRL_DESPLZ)
 365+ 9B66 47           	ld b,a
 366+ 9B67 3E F8        	ld a,$f8
 367+ 9B69 80           	add b
 368+ 9B6A 32 CC 88     	ld (CTRL_DESPLZ),a
 369+ 9B6D 18 1C        	jr 3F
 370+ 9B6F 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B72 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B73 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B74 32 CC 88     	ld (CTRL_DESPLZ),a
 374+ 9B77 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B7A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B7C 20 0A        	jr nz,2F
 377+ 9B7E 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B81 23           	inc hl
 379+ 9B82 22 C6 88     	ld (Posicion_actual),hl
 380+ 9B85 CD 3F 9D     	call Genera_coordenadas
 381+ 9B88
 382+ 9B88              ; Inicia el puntero de Sprite.
 383+ 9B88
 384+ 9B88 CD F0 8C     2 call Inicia_puntero_objeto_der
 385+ 9B8B C9           3 ret
 386+ 9B8C
 387+ 9B8C              ; ******************************************************************************************************************************************************************************************
 388+ 9B8C              ;
 389+ 9B8C              ;	15/02/23
 390+ 9B8C              ;
 391+ 9B8C              ;	Mov_left.
 392+ 9B8C              ;
 393+ 9B8C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B8C              ;
 395+ 9B8C              Mov_left
 396+ 9B8C
 397+ 9B8C 21 EE 88     	ld hl,Ctrl_0
 398+ 9B8F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B91              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B91              ; 																	; _ en el caso de que no lo haya.
 401+ 9B91 3A EE 88     	ld a,(Ctrl_0)
 402+ 9B94 CB 77        	bit 6,a
 403+ 9B96 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B98
 405+ 9B98 CD AE 9C     	call Stop_Amadeus_left
 406+ 9B9B C8           	ret z
 407+ 9B9C 20 4A        	jr nz,8F
 408+ 9B9E
 409+ 9B9E 3A CA 88     11 ld a,(Coordenada_X)
 410+ 9BA1 A7           	and a
 411+ 9BA2 20 44        	jr nz,8F
 412+ 9BA4
 413+ 9BA4 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9BA7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9BA8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BAA
 417+ 9BAA              ; ---------- ---------- ----------
 418+ 9BAA
 419+ 9BAA 3A D9 88     	ld a,(Vel_left)
 420+ 9BAD FE 02        	cp 2
 421+ 9BAF 28 0F        	jr z,1F
 422+ 9BB1 38 04        	jr c,6F
 423+ 9BB3 FE 04        	cp 4
 424+ 9BB5 28 12        	jr z,7F
 425+ 9BB7
 426+ 9BB7              ; ---------- ---------- ----------
 427+ 9BB7
 428+ 9BB7 3A CC 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BBA FE F8        	cp $f8
 430+ 9BBC 20 2A        	jr nz,8F
 431+ 9BBE 18 10        	jr 4F
 432+ 9BC0 3A CC 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BC3 FE F9        	cp $f9
 434+ 9BC5 20 21        	jr nz,8F
 435+ 9BC7 18 07        	jr 4F
 436+ 9BC9 3A CC 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BCC FE FB        	cp $fb
 438+ 9BCE 20 18        	jr nz,8F
 439+ 9BD0
 440+ 9BD0              ; ---------- ---------- ----------
 441+ 9BD0
 442+ 9BD0              4
 443+ 9BD0 CD D6 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BD3              ;	call Reinicio
 445+ 9BD3
 446+ 9BD3              ; ---------- ---------- ----------
 447+ 9BD3
 448+ 9BD3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BD5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BD6
 451+ 9BD6              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BD6              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BD6
 454+ 9BD6 CD EF 9B     	call DESPLZ_IZQ
 455+ 9BD9 C1           	pop bc
 456+ 9BDA 10 F9        	djnz 5B
 457+ 9BDC 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BDF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BE0 22 C6 88     	ld (Posicion_actual),hl
 460+ 9BE3 CD 3F 9D     	call Genera_coordenadas
 461+ 9BE6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BE8
 463+ 9BE8              ; ---------- ---------- ----------
 464+ 9BE8
 465+ 9BE8              ; Movemos, no hay recolocación.
 466+ 9BE8
 467+ 9BE8 2A C6 88     8 ld hl,(Posicion_actual)
 468+ 9BEB CD EF 9B     	call DESPLZ_IZQ
 469+ 9BEE C9           2 ret
 470+ 9BEF
 471+ 9BEF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BEF              ;
 473+ 9BEF              ;	22/9/22
 474+ 9BEF
 475+ 9BEF              DESPLZ_IZQ
 476+ 9BEF
 477+ 9BEF CD FE 9B     	call Desplaza_izquierda
 478+ 9BF2 CD 4A 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BF5 CD 72 9C     	call Ciclo_completo_2
 480+ 9BF8 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BFB CB BE        	res 7,(hl)
 482+ 9BFD C9           	ret
 483+ 9BFE
 484+ 9BFE              Desplaza_izquierda
 485+ 9BFE
 486+ 9BFE 3A D9 88     	ld a,(Vel_left)
 487+ 9C01 47           	ld b,a
 488+ 9C02 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9C05 23           1 inc hl
 490+ 9C06 23           	inc hl
 491+ 9C07 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9C09 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C0C CD D9 8C     	call Extrae_address
 494+ 9C0F 22 C8 88     	ld (Puntero_objeto),hl
 495+ 9C12
 496+ 9C12              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C12
 498+ 9C12              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C12              ; Cuántos movimientos hemos hecho ??
 500+ 9C12              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C12
 502+ 9C12 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C15 EB           	ex de,hl
 504+ 9C16 A7           	and a
 505+ 9C17 ED 52        	sbc hl,de
 506+ 9C19 CB 3D        	srl l
 507+ 9C1B 3E 08        6 ld a,8
 508+ 9C1D 95           	sub l
 509+ 9C1E 30 1E        	jr nc,3F
 510+ 9C20
 511+ 9C20              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C20              ; B="0".
 513+ 9C20
 514+ 9C20 04           4 inc b
 515+ 9C21 3C           	inc a
 516+ 9C22 20 FC        	jr nz,4B
 517+ 9C24 78           	ld a,b
 518+ 9C25 08           	ex af,af
 519+ 9C26 2A D0 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C29 23           5 inc hl
 521+ 9C2A 23           	inc hl
 522+ 9C2B 10 FC        	djnz 5B
 523+ 9C2D 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C30 CD D9 8C     	call Extrae_address
 525+ 9C33 22 C8 88     	ld (Puntero_objeto),hl
 526+ 9C36
 527+ 9C36              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C36              ; _(Posicion_actual).
 529+ 9C36
 530+ 9C36 21 C6 88     	ld hl,Posicion_actual
 531+ 9C39 35           	dec (hl)
 532+ 9C3A 08           	ex af,af
 533+ 9C3B 6F           	ld l,a
 534+ 9C3C 18 DD        	jr 6B
 535+ 9C3E
 536+ 9C3E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C3E
 538+ 9C3E 47           3 ld b,a
 539+ 9C3F 2A CE 88     	ld hl,(Indice_Sprite_der)
 540+ 9C42 23           2 inc hl
 541+ 9C43 23           	inc hl
 542+ 9C44 10 FC        	djnz 2B
 543+ 9C46 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C49 C9           8 ret
 545+ 9C4A
 546+ 9C4A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C4A              ;
 548+ 9C4A              ;	modifica_parametros_1er_DESPLZ
 549+ 9C4A              ;
 550+ 9C4A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C4A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C4A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C4A
 554+ 9C4A 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C4D A7           	and a
 556+ 9C4E 20 1E        	jr nz,1F
 557+ 9C50 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C51 32 CC 88         ld (CTRL_DESPLZ),a
 559+ 9C54 21 C5 88     	ld hl,Columns
 560+ 9C57 34           	inc (hl)
 561+ 9C58 3A D8 88     	ld a,(Cuad_objeto)
 562+ 9C5B E6 01        	and 1
 563+ 9C5D 20 0F        	jr nz,1F
 564+ 9C5F 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C62 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C63 22 C6 88     	ld (Posicion_actual),hl
 567+ 9C66 CD 3F 9D     	call Genera_coordenadas
 568+ 9C69 CD C5 9C     	call Dec_CTRL_DESPLZ
 569+ 9C6C 18 03        	jr 2F
 570+ 9C6E CD C5 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C71 C9           2 ret
 572+ 9C72
 573+ 9C72              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C72
 575+ 9C72 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C75 FE F7        	cp $f7
 577+ 9C77 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C79 30 2C        	jr nc,3F
 579+ 9C7B
 580+ 9C7B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C7B
 582+ 9C7B 06 00        	ld b,0
 583+ 9C7D 04           4 inc b
 584+ 9C7E 3C           	inc a
 585+ 9C7F FE F7        	cp $f7
 586+ 9C81 20 FA        	jr nz,4B
 587+ 9C83 3E FF        	ld a,$ff
 588+ 9C85 90           	sub b
 589+ 9C86 32 CC 88     	ld (CTRL_DESPLZ),a
 590+ 9C89 18 1C        	jr 3F
 591+ 9C8B
 592+ 9C8B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C8B
 594+ 9C8B 21 C5 88     1 ld hl,Columns
 595+ 9C8E 35           	dec (hl)
 596+ 9C8F AF           	xor a
 597+ 9C90 32 CC 88     	ld (CTRL_DESPLZ),a
 598+ 9C93 3A D8 88     	ld a,(Cuad_objeto)
 599+ 9C96 E6 01        	and 1
 600+ 9C98 28 0A        	jr z,2F
 601+ 9C9A 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C9D 2B           	dec hl
 603+ 9C9E 22 C6 88     	ld (Posicion_actual),hl
 604+ 9CA1 CD 3F 9D     	call Genera_coordenadas
 605+ 9CA4
 606+ 9CA4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9CA4
 608+ 9CA4 CD 03 8D     2 call Inicia_puntero_objeto_izq
 609+ 9CA7 C9           3 ret
 610+ 9CA8
 611+ 9CA8              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9CA8              ;
 613+ 9CA8              ;	19/10/22
 614+ 9CA8              ;
 615+ 9CA8              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9CA8              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9CA8
 618+ 9CA8 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CAB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CAD C9           	ret
 621+ 9CAE
 622+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CAE              ;
 624+ 9CAE              ;	19/10/22
 625+ 9CAE              ;
 626+ 9CAE              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CAE              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CAE
 629+ 9CAE 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CB1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CB3 C9           	ret
 632+ 9CB4
 633+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CB4              ;
 635+ 9CB4              ;	24/7/22
 636+ 9CB4              ;
 637+ 9CB4              ;	Inc_CTRL_DESPLZ
 638+ 9CB4              ;
 639+ 9CB4              ;
 640+ 9CB4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CB4
 642+ 9CB4 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CB7 3A DA 88     	ld a,(Vel_right)
 644+ 9CBA A7           	and a
 645+ 9CBB 28 06        	jr z,1F
 646+ 9CBD 47           	ld b,a
 647+ 9CBE 34           3 inc (hl)
 648+ 9CBF 10 FD        	djnz 3B
 649+ 9CC1 18 01        	jr 2F
 650+ 9CC3 34           1 inc (hl)
 651+ 9CC4 C9           2 ret
 652+ 9CC5
 653+ 9CC5              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CC5              ;
 655+ 9CC5              ;	5/2/23
 656+ 9CC5              ;
 657+ 9CC5              ;	Dec_CTRL_DESPLZ
 658+ 9CC5              ;
 659+ 9CC5              ;
 660+ 9CC5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CC5
 662+ 9CC5 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CC8 3A D9 88     	ld a,(Vel_left)
 664+ 9CCB A7           	and a
 665+ 9CCC 28 06        	jr z,1F
 666+ 9CCE 47           	ld b,a
 667+ 9CCF 35           3 dec (hl)
 668+ 9CD0 10 FD        	djnz 3B
 669+ 9CD2 18 01        	jr 2F
 670+ 9CD4 35           1 dec (hl)
 671+ 9CD5 C9           2 ret
 672+ 9CD6
 673+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CD6
 675+ 9CD6 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CD9 01 1F 00     	ld bc,31
 677+ 9CDC A7           	and a
 678+ 9CDD ED 4A        	adc hl,bc
 679+ 9CDF 22 C6 88     	ld (Posicion_actual),hl
 680+ 9CE2 21 EE 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CE5 CB C6        	set 0,(hl)
 682+ 9CE7 C9           	ret
 683+ 9CE8
 684+ 9CE8              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CE8
 686+ 9CE8 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CEB 01 1F 00     	ld bc,31
 688+ 9CEE A7           	and a
 689+ 9CEF ED 42        	sbc hl,bc
 690+ 9CF1 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CF4 21 EE 88     	ld hl,Ctrl_0
 692+ 9CF7 CB CE        	set 1,(hl)
 693+ 9CF9 C9           	ret
 694+ 9CFA
 695+ 9CFA              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CFA
 697+ 9CFA 24           Reaparece_abajo inc h
 698+ 9CFB 01 E0 17     	ld bc,$17e0
 699+ 9CFE A7           	and a
 700+ 9CFF ED 4A        	adc hl,bc
 701+ 9D01 22 C6 88     	ld (Posicion_actual),hl
 702+ 9D04 21 EE 88     	ld hl,Ctrl_0
 703+ 9D07 CB D6        	set 2,(hl)
 704+ 9D09 C9           	ret
 705+ 9D0A
 706+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D0A
 708+ 9D0A 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D0D A7           	and a
 710+ 9D0E ED 42        	sbc hl,bc
 711+ 9D10 22 C6 88     	ld (Posicion_actual),hl
 712+ 9D13 21 EE 88     	ld hl,Ctrl_0
 713+ 9D16 CB DE        	set 3,(hl)
 714+ 9D18 C9           	ret
 715+ 9D19
 716+ 9D19              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D19              ;
 718+ 9D19              ;	15/07/23
 719+ 9D19
 720+ 9D19              Reinicio
 721+ 9D19
 722+ 9D19              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D19
 724+ 9D19 AF           	xor a
 725+ 9D1A 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D1D CD 3B 9D     	call Limpia_contenido_hl
 727+ 9D20
 728+ 9D20 21 C6 88     	ld hl,Posicion_actual
 729+ 9D23 CD 3B 9D     	call Limpia_contenido_hl
 730+ 9D26
 731+ 9D26 CD 6D A0     	call Inicializa_Puntero_indice_mov
 732+ 9D29 CD F7 9F     	call Inicia_Puntero_mov
 733+ 9D2C
 734+ 9D2C 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9D2F 06 05        	ld b,5
 736+ 9D31 77           1 ld (hl),a
 737+ 9D32 23           	inc hl
 738+ 9D33 10 FC        	djnz 1B
 739+ 9D35
 740+ 9D35 21 01 89     	ld hl,Ctrl_2
 741+ 9D38 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D3A
 743+ 9D3A C9           	ret
 744+ 9D3B
 745+ 9D3B 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D3C 23           	inc hl
 747+ 9D3D 77           	ld (hl),a
 748+ 9D3E C9           	ret
 749+ 9D3F
 750+ 9D3F
# file closed: Direcciones.asm
1658  9D3F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D3F              ; ------------------------------------------------------------------------
   2+ 9D3F              ;
   3+ 9D3F              ;	02/04/23
   4+ 9D3F              ;
   5+ 9D3F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D3F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D3F              ;
   8+ 9D3F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D3F              ;
  10+ 9D3F              ;	Modifica: A,BC y DE.
  11+ 9D3F
  12+ 9D3F C5           Genera_coordenadas push bc
  13+ 9D40 E5           	push hl
  14+ 9D41 D5           	push de
  15+ 9D42
  16+ 9D42 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9D45
  18+ 9D45 7D           	ld a,l
  19+ 9D46 E6 1F        	and $1f
  20+ 9D48 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D4B
  22+ 9D4B CD B4 99     	call calcula_tercio
  23+ 9D4E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D4F
  25+ 9D4F 1E 00        	ld e,0
  26+ 9D51 7D           	ld a,l
  27+ 9D52 E6 E0        	and $e0
  28+ 9D54 28 01        	jr z,1F
  29+ 9D56 04           	inc b
  30+ 9D57
  31+ 9D57 04           1 inc b
  32+ 9D58 05           	dec b
  33+ 9D59 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D5B              ;														; _ , salimos.
  35+ 9D5B 1C           3 inc e
  36+ 9D5C D6 20        	sub 32
  37+ 9D5E 20 FB        	jr nz,3B
  38+ 9D60 10 F5        	djnz 1B
  39+ 9D62
  40+ 9D62 7B           2 ld a,e
  41+ 9D63 32 CB 88     	ld (Coordenada_y),a
  42+ 9D66
  43+ 9D66 D1           	pop de
  44+ 9D67 E1           	pop hl
  45+ 9D68 C1           	pop bc
  46+ 9D69
  47+ 9D69 C9           	ret
  48+ 9D6A
  49+ 9D6A              ; ------------------------------------------------------------------------
  50+ 9D6A              ;	28/05/23
  51+ 9D6A              ;
  52+ 9D6A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D6A              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D6A              ;
  55+ 9D6A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D6A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D6A              ;
  58+ 9D6A              ;		DE="$120d"
  59+ 9D6A              ;
  60+ 9D6A              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D6A              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D6A              ;
  63+ 9D6A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D6A
  65+ 9D6A              ;	Modifica: A,BC y DE.
  66+ 9D6A
  67+ 9D6A
  68+ 9D6A              Genera_coordenadas_disparo
  69+ 9D6A
  70+ 9D6A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D6A
  72+ 9D6A 7D           	ld a,l
  73+ 9D6B E6 1F        	and $1f
  74+ 9D6D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D6E CD B4 99     	call calcula_tercio
  76+ 9D71 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D72 1E 00        	ld e,0
  78+ 9D74 7D           	ld a,l
  79+ 9D75 E6 E0        	and $e0
  80+ 9D77 28 01        	jr z,1F
  81+ 9D79 04           	inc b
  82+ 9D7A 1C           1 inc e
  83+ 9D7B D6 20        	sub 32
  84+ 9D7D 20 FB        	jr nz,1B
  85+ 9D7F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D81 C9           	ret
  87+ 9D82
# file closed: Genera_coordenadas.asm
1659  9D82              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D82              ; Relojes y temporizaciones.
   2+ 9D82
   3+ 9D82              ; ------------------------------------------------------
   4+ 9D82              ;
   5+ 9D82              ;	16/7/23
   6+ 9D82              ;
   7+ 9D82              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D82              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D82              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D82              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D82              ;
  12+ 9D82              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D82              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D82
  15+ 9D82              ; Disparo_entidad db 1
  16+ 9D82              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D82              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D82
  19+ 9D82              Habilita_disparos
  20+ 9D82
  21+ 9D82 7E           	ld a,(hl)
  22+ 9D83 A7           	and a
  23+ 9D84 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D85
  25+ 9D85 EB           	ex de,hl
  26+ 9D86
  27+ 9D86 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D87 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D88
  30+ 9D88              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D88
  32+ 9D88 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D89 7E           	ld a,(hl)
  34+ 9D8A 23           	inc hl
  35+ 9D8B 77           	ld (hl),a
  36+ 9D8C
  37+ 9D8C EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D8D 3E 01        	ld a,1
  39+ 9D8F 77           	ld (hl),a
  40+ 9D90 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1660  9D91              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D91
   2+ 9D91
   3+ 9D91              ;   07/07/23
   4+ 9D91              ;
   5+ 9D91              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D91              ;
   7+ 9D91              ;   Codificación:
   8+ 9D91              ;
   9+ 9D91              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D91              ;
  11+ 9D91              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D91              ;
  13+ 9D91              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D91              ;
  15+ 9D91              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D91              ;
  17+ 9D91              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D91              ;                               ..... %01000010 Vel_up 4
  19+ 9D91              ;                                               Vel_down 2
  20+ 9D91              ;                               ..... $42
  21+ 9D91              ;
  22+ 9D91              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D91              ;
  24+ 9D91              ;                               ..... %01000010 Vel_left 4
  25+ 9D91              ;                                               Vel_right 2
  26+ 9D91              ;                               ..... $42
  27+ 9D91              ;
  28+ 9D91              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D91              ;
  30+ 9D91              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D91              ;
  32+ 9D91              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D91              ;
  34+ 9D91              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D91              ;                                     $53
  36+ 9D91              ;
  37+ 9D91              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D91              ;
  39+ 9D91              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D91              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D91              ;
  42+ 9D91              ;                       Arriba ..... $81
  43+ 9D91              ;                       Arriba - izquierda ..... $a1
  44+ 9D91              ;                       Arriba - derecha ..... $91
  45+ 9D91              ;
  46+ 9D91              ;                       Abajo ..... $41
  47+ 9D91              ;                       Abajo - izquierda ..... $61
  48+ 9D91              ;                       Abajo - derecha ..... $51
  49+ 9D91              ;
  50+ 9D91              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D91              ;
  52+ 9D91              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D91              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D91              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D91              ;
  56+ 9D91              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D91              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D91              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D91              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D91              ;
  61+ 9D91              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D91              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D91              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D91              ;
  65+ 9D91              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D91              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D91              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D91              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D91
  70+ 9D91              ; ----- ----- ----- ----- -----
  71+ 9D91
  72+ 9D91 BD 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D93 C5 9D            defw F_1
  74+ 9D95 CF 9D            defw F_2
  75+ 9D97 D9 9D            defw Codo_abajo_derecha
  76+ 9D99 0D 9E            defw Derecha_y_subiendo
  77+ 9D9B 17 9E            defw Derecha_y_subiendo_1
  78+ 9D9D 21 9E            defw F_3
  79+ 9D9F 2B 9E            defw F_4
  80+ 9DA1 35 9E            defw Derecha_y_bajando
  81+ 9DA3 3F 9E            defw Derecha_y_bajando_1
  82+ 9DA5 49 9E            defw Derecha_y_bajando_2
  83+ 9DA7 53 9E            defw Codo_derecha_abajo
  84+ 9DA9 83 9E            defw Codo_abajo_izq.
  85+ 9DAB B7 9E            defw Izquierda_y_subiendo
  86+ 9DAD C1 9E            defw Izquierda_y_subiendo_1
  87+ 9DAF CB 9E            defw F_5
  88+ 9DB1 D5 9E            defw F_6
  89+ 9DB3 DF 9E            defw Izquierda_y_bajando
  90+ 9DB5 E9 9E            defw Izquierda_y_bajando_1
  91+ 9DB7 F3 9E            defw Izquierda_y_bajando_2
  92+ 9DB9 FD 9E            defw Codo_izquierda_abajo
  93+ 9DBB 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DBD
  95+ 9DBD 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC1 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DC5
  98+ 9DC5 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DC9 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DCD 08 00
 100+ 9DCF 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD3 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DD7 0F FE
 102+ 9DD9
 103+ 9DD9 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DDD 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DE5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DE9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DED 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DF5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DF9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DFD 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E01 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E05 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E09 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E0D
 117+ 9E0D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E11 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E15 06 00
 119+ 9E17
 120+ 9E17 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E1B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E1F 02 00
 122+ 9E21
 123+ 9E21 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E25 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E29 04 00
 125+ 9E2B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E2F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E33 08 00
 127+ 9E35
 128+ 9E35 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E39 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E3D 02 00
 130+ 9E3F
 131+ 9E3F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E43 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E47 06 00
 133+ 9E49
 134+ 9E49 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E4D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E51 06 00
 136+ 9E53
 137+ 9E53              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E53
 139+ 9E53 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E57 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E5B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E63 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E67 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E6B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E6F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E73 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E77 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E7B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E7F 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E83
 152+ 9E83 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E87 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E8B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E8F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E93 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E97 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E9B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E9F 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA3 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EA7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EAB 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EAF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB3 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EB7
 166+ 9EB7 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EBB 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EBF 06 00
 168+ 9EC1
 169+ 9EC1 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EC5 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EC9 02 00
 171+ 9ECB
 172+ 9ECB 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ECF 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED3 04 00
 174+ 9ED5 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ED9 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EDD 08 00
 176+ 9EDF
 177+ 9EDF 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE3 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EE7 02 00
 179+ 9EE9
 180+ 9EE9 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EED 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF1 06 00
 182+ 9EF3
 183+ 9EF3 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EF7 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EFB 06 00
 185+ 9EFD
 186+ 9EFD 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F01 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F05 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F09 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F0D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F11 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F15 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F19 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F1D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F21 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F25 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F29 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F2D
 199+ 9F2D              ; ----- ----- ----- ----- -----
 200+ 9F2D              ;
 201+ 9F2D              ;   27/06/23
 202+ 9F2D
 203+ 9F2D              Movimiento
 204+ 9F2D
 205+ 9F2D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F2D
 207+ 9F2D              ;    ld hl,(Posicion_actual)
 208+ 9F2D
 209+ 9F2D FB               ei
 210+ 9F2E
 211+ 9F2E 3A 01 89         ld a,(Ctrl_2)
 212+ 9F31 CB 57            bit 2,a
 213+ 9F33 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F35
 215+ 9F35 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F38 7E               ld a,(hl)
 217+ 9F39
 218+ 9F39              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F39
 220+ 9F39              Inicia_desplazamiento.
 221+ 9F39
 222+ 9F39              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F39
 224+ 9F39 CD 2E A0         call Ajusta_velocidad_desplazamiento
 225+ 9F3C
 226+ 9F3C              ; Iniciamos (Repetimos_mov).
 227+ 9F3C
 228+ 9F3C 7E               ld a,(hl)
 229+ 9F3D E6 0F            and $0f
 230+ 9F3F 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F42 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F45
 233+ 9F45              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F45
 235+ 9F45 23               inc hl
 236+ 9F46 7E               ld a,(hl)
 237+ 9F47 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F4A 2B               dec hl
 239+ 9F4B
 240+ 9F4B 21 01 89         ld hl,Ctrl_2
 241+ 9F4E CB D6            set 2,(hl)
 242+ 9F50
 243+ 9F50              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F50              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F50
 246+ 9F50              Desplazamiento_iniciado
 247+ 9F50
 248+ 9F50 CD 02 A0         call Aplica_desplazamiento
 249+ 9F53
 250+ 9F53 3A 01 89         ld a,(Ctrl_2)
 251+ 9F56 CB 67            bit 4,a
 252+ 9F58 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F59
 254+ 9F59 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F5C 35               dec (hl)
 256+ 9F5D C0               ret nz
 257+ 9F5E
 258+ 9F5E              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F5E              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F5E              ; Analiza (Cola_de_desplazamiento).
 261+ 9F5E
 262+ 9F5E 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F61 A7               and a
 264+ 9F62 CC 57 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F65 28 30            jr z,Reinicia_el_movimiento
 266+ 9F67
 267+ 9F67 FE FF            cp $ff
 268+ 9F69 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F6B
 270+ 9F6B FE FE            cp $fe
 271+ 9F6D CC DB 9F         call z,Fijamos_bucle
 272+ 9F70 28 25            jr z,Reinicia_el_movimiento
 273+ 9F72
 274+ 9F72 FE FD            cp $fd
 275+ 9F74 20 11            jr nz,1F
 276+ 9F76
 277+ 9F76              ; ---
 278+ 9F76              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F76
 280+ 9F76 3A 01 89         ld a,(Ctrl_2)
 281+ 9F79 CB 5F            bit 3,a
 282+ 9F7B 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F7D
 284+ 9F7D              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F7D
 286+ 9F7D 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F80 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F82
 289+ 9F82 CD EC 9F         call Inicia_Repetimos_movimiento
 290+ 9F85 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F87              ; ---
 292+ 9F87
 293+ 9F87 FE 01        1 cp 1
 294+ 9F89 CA C5 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F8C
 296+ 9F8C 3D               dec a
 297+ 9F8D 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F90
 299+ 9F90 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F93 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F96              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F96 C9               ret
 303+ 9F97
 304+ 9F97              Reinicia_el_movimiento
 305+ 9F97
 306+ 9F97 F3               di
 307+ 9F98
 308+ 9F98 3A 01 89         ld a,(Ctrl_2)
 309+ 9F9B CB 5F            bit 3,a
 310+ 9F9D 28 1B            jr z,2F
 311+ 9F9F
 312+ 9F9F              ; (Cola_de_desplazamiento)="254".
 313+ 9F9F
 314+ 9F9F 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FA2 35               dec (hl)
 316+ 9FA3 20 15            jr nz,2F
 317+ 9FA5
 318+ 9FA5              ; Fin de las repeticiones del último movimiento.
 319+ 9FA5
 320+ 9FA5 21 01 89         ld hl,Ctrl_2
 321+ 9FA8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FAA
 323+ 9FAA 2A F3 88         ld hl,(Puntero_mov)
 324+ 9FAD 23               inc hl
 325+ 9FAE 23               inc hl
 326+ 9FAF 23               inc hl
 327+ 9FB0 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FB3              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FB3 7E               ld a,(hl)
 330+ 9FB4 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9FB7
 332+ 9FB7 C3 5E 9F         jp Cola
 333+ 9FBA
 334+ 9FBA CD F7 9F     2 call Inicia_Puntero_mov
 335+ 9FBD
 336+ 9FBD 21 01 89         ld hl,Ctrl_2
 337+ 9FC0 CB 96            res 2,(hl)
 338+ 9FC2
 339+ 9FC2 C3 2D 9F         jp Movimiento
 340+ 9FC5
 341+ 9FC5              Siguiente_desplazamiento
 342+ 9FC5
 343+ 9FC5              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FC5              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FC5
 346+ 9FC5 21 01 89         ld hl,Ctrl_2
 347+ 9FC8 CB 96            res 2,(hl)
 348+ 9FCA
 349+ 9FCA 2A F3 88         ld hl,(Puntero_mov)
 350+ 9FCD 23               inc hl
 351+ 9FCE 23               inc hl
 352+ 9FCF 22 F3 88         ld (Puntero_mov),hl
 353+ 9FD2
 354+ 9FD2 7E               ld a,(hl)
 355+ 9FD3 A7               and a
 356+ 9FD4 CC 57 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FD7 CA 97 9F         jp z,Reinicia_el_movimiento
 358+ 9FDA
 359+ 9FDA C9               ret
 360+ 9FDB              ; Subrutinas -----------------------------------------
 361+ 9FDB              ; ---------- --------- --------- ---------- ----------
 362+ 9FDB              ;
 363+ 9FDB              ;   24/07/23
 364+ 9FDB              ;
 365+ 9FDB              ;   Fijamos_bucle
 366+ 9FDB              ;
 367+ 9FDB              ;
 368+ 9FDB
 369+ 9FDB              Fijamos_bucle
 370+ 9FDB
 371+ 9FDB 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FDE 3C               inc a
 373+ 9FDF 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FE2
 375+ 9FE2 CD 57 A0         call Incrementa_Puntero_indice_mov
 376+ 9FE5 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FE8 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FEB C9               ret
 379+ 9FEC
 380+ 9FEC              ; ---------- --------- --------- ---------- ----------
 381+ 9FEC              ;
 382+ 9FEC              ;   07/7/23
 383+ 9FEC              ;
 384+ 9FEC              ;   Inicia_Repetimos_movimiento
 385+ 9FEC              ;
 386+ 9FEC              ;
 387+ 9FEC
 388+ 9FEC              Inicia_Repetimos_movimiento
 389+ 9FEC
 390+ 9FEC              ; Iniciamos (Repetimos_movimiento).
 391+ 9FEC
 392+ 9FEC DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FF0 DD 7E 02         ld a,(ix+2)
 394+ 9FF3 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FF6
 396+ 9FF6 C9               ret
 397+ 9FF7
 398+ 9FF7              ; ---------- --------- --------- ---------- ----------
 399+ 9FF7              ;
 400+ 9FF7              ;   26/6/23
 401+ 9FF7              ;
 402+ 9FF7              ;   Inicia_Puntero_mov
 403+ 9FF7              ;
 404+ 9FF7              ;
 405+ 9FF7
 406+ 9FF7 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FFA 5E               ld e,(hl)
 408+ 9FFB 23               inc hl
 409+ 9FFC 56               ld d,(hl)
 410+ 9FFD EB               ex de,hl
 411+ 9FFE 22 F3 88         ld (Puntero_mov),hl
 412+ A001 C9               ret
 413+ A002
 414+ A002              ; ---------- --------- --------- ---------- ----------
 415+ A002              ;
 416+ A002              ;   27/06/23
 417+ A002              ;
 418+ A002              ;   Aplica_movimiento.
 419+ A002
 420+ A002              Aplica_desplazamiento
 421+ A002
 422+ A002              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ A002
 424+ A002 2A F3 88         ld hl, (Puntero_mov)
 425+ A005
 426+ A005 7E               ld a,(hl)
 427+ A006 E6 F0            and $f0
 428+ A008 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A009
 430+ A009 CB 7E            bit 7,(hl)
 431+ A00B 28 03            jr z,1F
 432+ A00D CD 2B 9A         call Mov_up
 433+ A010 2A F3 88     1 ld hl, (Puntero_mov)
 434+ A013 CB 76            bit 6,(hl)
 435+ A015 28 03            jr z,2F
 436+ A017 CD FA 99         call Mov_down
 437+ A01A 2A F3 88     2 ld hl, (Puntero_mov)
 438+ A01D CB 6E            bit 5,(hl)
 439+ A01F 28 03            jr z,3F
 440+ A021 CD 8C 9B         call Mov_left
 441+ A024 2A F3 88     3 ld hl, (Puntero_mov)
 442+ A027 CB 66            bit 4,(hl)
 443+ A029 C8               ret z
 444+ A02A CD 6E 9A         call Mov_right
 445+ A02D C9               ret
 446+ A02E
 447+ A02E              ; ---------- --------- --------- ---------- ----------
 448+ A02E              ;
 449+ A02E              ;   26/06/23
 450+ A02E              ;
 451+ A02E              ;   Ajusta_velocidad_desplazamiento.
 452+ A02E
 453+ A02E              Ajusta_velocidad_desplazamiento
 454+ A02E
 455+ A02E              ; 1er byte de la cadena de movimiento.
 456+ A02E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A02E
 458+ A02E CD 4C A0         call Extrae_nibble_alto
 459+ A031
 460+ A031 32 DB 88         ld (Vel_up),a
 461+ A034 79               ld a,c
 462+ A035 E6 0F            and $0f
 463+ A037 32 DC 88         ld (Vel_down),a
 464+ A03A
 465+ A03A              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A03A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A03A
 468+ A03A 23               inc hl
 469+ A03B CD 4C A0         call Extrae_nibble_alto
 470+ A03E
 471+ A03E 32 D9 88         ld (Vel_left),a
 472+ A041 79               ld a,c
 473+ A042 E6 0F            and $0f
 474+ A044 32 DA 88         ld (Vel_right),a
 475+ A047
 476+ A047              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A047
 478+ A047 23               inc hl
 479+ A048 22 F3 88         ld (Puntero_mov),hl
 480+ A04B C9               ret
 481+ A04C
 482+ A04C 06 04        Extrae_nibble_alto ld b,4
 483+ A04E 7E               ld a,(hl)
 484+ A04F 4F               ld c,a
 485+ A050 E6 F0            and $f0
 486+ A052 CB 3F        1 srl a
 487+ A054 10 FC            djnz 1B
 488+ A056 C9               ret
 489+ A057
 490+ A057              ; ---------- --------- --------- ---------- ----------
 491+ A057              ;
 492+ A057              ;   5/7/23
 493+ A057              ;
 494+ A057              ;   Incrementa_Puntero_indice_mov
 495+ A057
 496+ A057              Incrementa_Puntero_indice_mov
 497+ A057
 498+ A057 21 F7 88         ld hl,Incrementa_puntero
 499+ A05A 34               inc (hl)
 500+ A05B
 501+ A05B 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A05E 01 02 00         ld bc,2
 503+ A061 A7               and a
 504+ A062 09               add hl,bc
 505+ A063 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A066
 507+ A066 7E               ld a,(hl)
 508+ A067 A7               and a
 509+ A068
 510+ A068              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A068
 512+ A068              ;    jr z,$
 513+ A068
 514+ A068              ;! Reinicia el Patrón de movimiento.
 515+ A068
 516+ A068 CC 6D A0         call z,Inicializa_Puntero_indice_mov
 517+ A06B
 518+ A06B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A06C
 520+ A06C C9               ret
 521+ A06D
 522+ A06D
 523+ A06D              ; ---------- --------- --------- ---------- ----------
 524+ A06D              ;
 525+ A06D              ;   24/07/23
 526+ A06D              ;
 527+ A06D              ;   Inicializa_Puntero_indice_mov
 528+ A06D
 529+ A06D              Inicializa_Puntero_indice_mov
 530+ A06D
 531+ A06D              ; Existe etiqueta de bucle principal???
 532+ A06D
 533+ A06D 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A070 24               inc h
 535+ A071 25               dec h
 536+ A072 28 05            jr z,2F
 537+ A074
 538+ A074 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A077 18 14            jr 3F
 540+ A079
 541+ A079              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A079
 543+ A079 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A07C 47               ld b,a
 545+ A07D
 546+ A07D 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A080 2B           1 dec hl
 548+ A081 2B               dec hl
 549+ A082 10 FC            djnz 1B
 550+ A084 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A087
 552+ A087 AF               xor a
 553+ A088 32 F7 88         ld (Incrementa_puntero),a
 554+ A08B 18 06            jr 4F
 555+ A08D
 556+ A08D 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A090 32 F7 88         ld (Incrementa_puntero),a
 558+ A093 C9           4 ret
 559+ A094
 560+ A094
 561+ A094
# file closed: Patrones_de_mov.asm
1661  A094              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A094              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A094              ;
   3+ A094              ;	4/9/23
   4+ A094              ;
   5+ A094              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A094
   7+ A094              ;	ADC HL,SP	LD (addr),SP
   8+ A094              ;	ADD HL,SP	LD SP,(addr)
   9+ A094              ;	ADD IX,SP	LD SP,nn
  10+ A094              ; 	ADD IY,SP	LD SP,HL
  11+ A094              ;				LD SP,IX
  12+ A094              ;	DEC SP		LD SP,IY
  13+ A094
  14+ A094              ;	EX (SP),HL
  15+ A094              ;	EX (SP),IX
  16+ A094              ;	EX (SP),IY
  17+ A094
  18+ A094              ;	INC SP
  19+ A094
  20+ A094                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A EE 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1C 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A EE 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 22 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 14 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1A 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 14 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 113+ 7FFE              ;
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ac
 118+ 72AC
 119+ 72AC              Gestiona_albumes_de_fotos
 120+ 72AC
 121+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72AC              ;   Vaciamos Album_de_fotos.
 123+ 72AC
 124+ 72AC              ;   Album_de_fotos. Contiene datos ???
 125+ 72AC
 126+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72AF 7E               ld a,(hl)
 128+ 72B0 A7               and a
 129+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72B3
 131+ 72B3 2A 1E 89         ld hl,(End_Snapshot)
 132+ 72B6 01 00 70         ld bc,Album_de_fotos
 133+ 72B9 11 01 70         ld de,Album_de_fotos+1
 134+ 72BC AF               xor a
 135+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72BE
 137+ 72BE CD 4E 73         call Limpia_album
 138+ 72C1
 139+ 72C1 21 00 00         ld hl,0
 140+ 72C4 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 72C7
 142+ 72C7              ; ----- ----- ----- -----
 143+ 72C7
 144+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 145+ 72C7
 146+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 72CA 7E               ld a,(hl)
 148+ 72CB A7               and a
 149+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 72CE              ;                               ; _ información del album2 al album1.
 151+ 72CE
 152+ 72CE              ; ----- ----- ----- -----
 153+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 72CE
 155+ 72CE 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 72D7
 159+ 72D7 CD 4E 73         call Limpia_album
 160+ 72DA
 161+ 72DA              ;   Calculamos (End_Snapshot)
 162+ 72DA
 163+ 72DA A7               and a
 164+ 72DB ED 4A            adc hl,bc
 165+ 72DD 22 1E 89         ld (End_Snapshot),hl
 166+ 72E0
 167+ 72E0              ;   Limpiamos Album_de_fotos_1.
 168+ 72E0
 169+ 72E0 2A 24 89         ld hl,(End_Snapshot_1)
 170+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 171+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 172+ 72E9 AF               xor a
 173+ 72EA 02               ld (bc),a
 174+ 72EB
 175+ 72EB CD 4E 73         call Limpia_album
 176+ 72EE
 177+ 72EE 21 00 00         ld hl,0
 178+ 72F1 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 72F4
 180+ 72F4              ; ----- ----- ----- -----
 181+ 72F4
 182+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 183+ 72F4
 184+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 72F7 7E               ld a,(hl)
 186+ 72F8 A7               and a
 187+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 72FB              ;                               ; _ información del album3 al album2.
 189+ 72FB              ; ----- ----- ----- -----
 190+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 72FB
 192+ 72FB 2A 28 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7304
 196+ 7304 CD 4E 73         call Limpia_album
 197+ 7307
 198+ 7307              ;   Calculamos (End_Snapshot_1):
 199+ 7307
 200+ 7307 A7               and a
 201+ 7308 ED 4A            adc hl,bc
 202+ 730A 22 24 89         ld (End_Snapshot_1),hl
 203+ 730D
 204+ 730D              ;   Limpiamos Album_de_fotos_2.
 205+ 730D
 206+ 730D 2A 28 89         ld hl,(End_Snapshot_2)
 207+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7316 AF               xor a
 210+ 7317 02               ld (bc),a
 211+ 7318
 212+ 7318 CD 4E 73         call Limpia_album
 213+ 731B
 214+ 731B 21 00 00         ld hl,0
 215+ 731E 22 28 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7321
 217+ 7321              ; ----- ----- ----- -----
 218+ 7321
 219+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7321
 221+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7324 7E               ld a,(hl)
 223+ 7325 A7               and a
 224+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7327
 226+ 7327              ; ----- ----- ----- -----
 227+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7327
 229+ 7327 2A 2C 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7330
 233+ 7330 CD 4E 73         call Limpia_album
 234+ 7333
 235+ 7333              ;   Calculamos (End_Snapshot_2):
 236+ 7333
 237+ 7333 A7               and a
 238+ 7334 ED 4A            adc hl,bc
 239+ 7336 22 28 89         ld (End_Snapshot_2),hl
 240+ 7339
 241+ 7339              ;   Limpiamos Album_de_fotos_3.
 242+ 7339
 243+ 7339 2A 2C 89         ld hl,(End_Snapshot_3)
 244+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7342 AF               xor a
 247+ 7343 02               ld (bc),a
 248+ 7344
 249+ 7344 CD 4E 73         call Limpia_album
 250+ 7347
 251+ 7347 21 00 00         ld hl,0
 252+ 734A 22 2C 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 734D C9               ret
 254+ 734E
 255+ 734E              ; ----------------------------------------------------
 256+ 734E              ;
 257+ 734E              ;   10/8/23
 258+ 734E              ;
 259+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 734E              ;
 261+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 734E              ;           BC ..... Dirección de inicio del álbum.
 263+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 734E
 265+ 734E              ;    ld hl,(End_Snapshot)
 266+ 734E              ;    ld bc,Album_de_fotos
 267+ 734E              ;    ld de,Album_de_fotos+1
 268+ 734E
 269+ 734E              ;   MODIFICA: A,HL,BC y DE.
 270+ 734E
 271+ 734E              Limpia_album
 272+ 734E D5               push de                     ; Guardo DESTINO.
 273+ 734F C5               push bc                     ; Guardo ORIGEN.
 274+ 7350 ED 42            sbc hl,bc
 275+ 7352 4D               ld c,l
 276+ 7353 44               ld b,h
 277+ 7354 E1               pop hl
 278+ 7355 C5               push bc
 279+ 7356 ED B0            ldir
 280+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 735A C9               ret                         ; _ a otro).
 283+ 735B              ;
 284+ 735B
 285+ 735B              ; -----------------------------------------------
 286+ 735B
 287+ 735B
 288+ 735B
 289+ 735B
 290+ 735B
# file closed: Guarda_foto_registros.asm
1662  735B
1663  735B              	SAVESNA "Pruebas.sna", START
1664  735B
1665  735B
1666  735B
1667  735B
# file closed: Banco_de_pruebas.asm
