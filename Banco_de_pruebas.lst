# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2C 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD E2 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 52 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD EA 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 50 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 50 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 53 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD FA 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7C 83        	defw Disparo_f9
  13+ 8374 80 83        	defw Disparo_fb
  14+ 8376 84 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  19+ 837C              ; Disparo (CTRL_DESPLZ)="f9"
  20+ 837C 00 60        Disparo_f9 DEFB $00,$60
  21+ 837E 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  22+ 8380              ; Disparo (CTRL_DESPLZ)="fb"
  23+ 8380 18 00        Disparo_fb DEFB $18,$00
  24+ 8382 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  25+ 8384              ; Disparo (CTRL_DESPLZ)="fd"
  26+ 8384 06 00        Disparo_fd DEFB $06,$00
  27+ 8386 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  28+ 8388
  29+ 8388              ; ----------------------------------------------------------------------------------------
  30+ 8388
  31+ 8388              ; Badsat_izq. 2x2.
  32+ 8388
  33+ 8388 98 83        Indice_Badsat_izq defw Badsat_izquierda
  34+ 838A 00 85        	defw Badsat_izq_fe
  35+ 838C C0 84        	defw Badsat_izq_fd
  36+ 838E 90 84        	defw Badsat_izq_fc
  37+ 8390 60 84        	defw Badsat_izq_fb
  38+ 8392 30 84        	defw Badsat_izq_fa
  39+ 8394 00 84        	defw Badsat_izq_f9
  40+ 8396 C8 83        	defw Badsat_izq_f8
  41+ 8398
  42+ 8398 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  43+ 839B 02 14 00     	DEFB 	$02,$14,$00
  44+ 839E 02 2A 00     	DEFB 	$02,$2A,$00
  45+ 83A1 02 55 00     	DEFB 	$02,$55,$00
  46+ 83A4 02 AA 00     	DEFB	$02,$AA,$00
  47+ 83A7 02 54 00     	DEFB 	$02,$54,$00
  48+ 83AA 7F E8 00     	DEFB 	$7F,$E8,$00
  49+ 83AD 03 60 00     	DEFB 	$03,$60,$00
  50+ 83B0 0A E0 00     	DEFB	$0A,$E0,$00
  51+ 83B3 17 F8 00     	DEFB 	$17,$F8,$00
  52+ 83B6 2B E8 00     	DEFB 	$2B,$E8,$00
  53+ 83B9 54 40 00     	DEFB 	$54,$40,$00
  54+ 83BC AA 60 00     	DEFB	$AA,$60,$00
  55+ 83BF 54 00 00     	DEFB 	$54,$00,$00
  56+ 83C2 28 00 00     	DEFB 	$28,$00,$00
  57+ 83C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  58+ 83C8
  59+ 83C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  59+ 83CC 0A 00 01 15
  60+ 83D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  60+ 83D4 01 55 00 01
  61+ 83D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  61+ 83DC 00 01 B0 00
  62+ 83E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  62+ 83E4 FC 00 15 F4
  63+ 83E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  63+ 83EC 55 30 00 2A
  64+ 83F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  64+ 83F4 00 08 00 00
  65+ 83F8
  66+ 83F8              	org $8400
  67+ 8400
  68+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  68+ 8404 85 00 00 8A
  69+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  69+ 840C 00 AA 80 00
  70+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  70+ 8414 00 00 D8 00
  71+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  71+ 841C FE 00 0A FA
  72+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  72+ 8424 2A 98 00 15
  73+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  73+ 842C 00 04 00 00
  74+ 8430
  75+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  75+ 8434 42 80 00 45
  76+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  76+ 843C 00 55 40 00
  77+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  77+ 8444 00 00 6C 00
  78+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  78+ 844C FF 00 05 7D
  79+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  79+ 8454 15 4C 00 0A
  80+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  80+ 845C 00 02 00 00
  81+ 8460
  82+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  82+ 8464 21 40 00 22
  83+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  83+ 846C 00 2A A0 00
  84+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  84+ 8474 80 00 36 00
  85+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  85+ 847C 7F 80 02 BE
  86+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  86+ 8484 0A A6 00 05
  87+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  87+ 848C 00 01 00 00
  88+ 8490
  89+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  89+ 8494 10 A0 00 11
  90+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  90+ 849C 00 15 50 00
  91+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  91+ 84A4 40 00 1B 00
  92+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  92+ 84AC BF C0 01 5F
  93+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  93+ 84B4 05 53 00 02
  94+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  94+ 84BC 00 00 80 00
  95+ 84C0
  96+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  96+ 84C4 08 50 00 08
  97+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  97+ 84CC 00 0A A8 00
  98+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  98+ 84D4 A0 00 0D 80
  99+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  99+ 84DC 5F F8 00 AF
 100+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 100+ 84E4 02 A9 00 01
 101+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 101+ 84EC 00 00 40 00
 102+ 84F0
 103+ 84F0              	org $8500
 104+ 8500
 105+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 105+ 8504 04 28 00 04
 106+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 106+ 850C 00 05 54 00
 107+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 107+ 8514 D0 00 06 C0
 108+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 108+ 851C 2F FC 00 57
 109+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 109+ 8524 01 54 80 00
 110+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 110+ 852C 00 00 20 00
 111+ 8530
 112+ 8530
 113+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 114+ 8532 70 85        	defw Badsat_der_f8
 115+ 8534 A0 85        	defw Badsat_der_f9
 116+ 8536 D0 85        	defw Badsat_der_fa
 117+ 8538 00 86        	defw Badsat_der_fb
 118+ 853A 30 86        	defw Badsat_der_fc
 119+ 853C 60 86        	defw Badsat_der_fd
 120+ 853E 90 86        	defw Badsat_der_fe
 121+ 8540
 122+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 123+ 8543 28 40 00     	DEFB    $28,$40,$00
 124+ 8546 54 40 00     	DEFB	$54,$40,$00
 125+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 126+ 854C 55 40 00     	DEFB	$55,$40,$00
 127+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 128+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 129+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 130+ 8558 07 50 00     	DEFB	$07,$50,$00
 131+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 132+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 133+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 134+ 8564 06 55 00     	DEFB	$06,$55,$00
 135+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 136+ 856A 00 14 00     	DEFB	$00,$14,$00
 137+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 138+ 8570
 139+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 139+ 8574 20 00 2A 20
 140+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 140+ 857C 2A A0 00 15
 141+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 141+ 8584 00 03 60 00
 142+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 142+ 858C F4 00 0B EA
 143+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 143+ 8594 03 2A 80 00
 144+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 144+ 859C 00 00 04 00
 145+ 85A0
 146+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 146+ 85A4 10 00 15 10
 147+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 147+ 85AC 15 50 00 0A
 148+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 148+ 85B4 80 01 B0 00
 149+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 149+ 85BC FA 00 05 F5
 150+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 150+ 85C4 01 95 40 00
 151+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 151+ 85CC 00 00 02 00
 152+ 85D0
 153+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 153+ 85D4 08 00 0A 88
 154+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 154+ 85DC 0A A8 00 05
 155+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 155+ 85E4 C0 00 D8 00
 156+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 156+ 85EC FD 00 02 FA
 157+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 157+ 85F4 00 CA A0 00
 158+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 158+ 85FC 80 00 01 00
 159+ 8600
 160+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 160+ 8604 84 00 05 44
 161+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 161+ 860C 05 54 00 02
 162+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 162+ 8614 E0 00 6C 00
 163+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 163+ 861C FE 80 01 7D
 164+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 164+ 8624 00 65 50 00
 165+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 165+ 862C 40 00 00 80
 166+ 8630
 167+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8634 42 00 02 A2
 168+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 863C 02 AA 00 01
 169+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8644 F0 00 36 00
 170+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 864C FF 40 00 BE
 171+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8654 00 32 A8 00
 172+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 865C A0 00 00 40
 173+ 8660
 174+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8664 A1 00 01 51
 175+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 866C 01 55 00 00
 176+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8674 F8 00 1B 00
 177+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 867C FF A0 00 1F
 178+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8684 00 09 54 00
 179+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 868C 50 00 00 20
 180+ 8690
 181+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8694 50 80 00 A8
 182+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 869C 00 AA 80 00
 183+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 86A4 FC 00 0D 80
 184+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 86AC FF D0 00 0F
 185+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 86B4 00 04 AA 00
 186+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 86BC 28 00 00 10
 187+ 86C0
 188+ 86C0              ; ----------------------------------------------------------------------------------------
 189+ 86C0
 190+ 86C0              ; Amadeus. 2x2.
 191+ 86C0
 192+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 193+ 86C2 00 00        	defw 0
 194+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 195+ 86C6 00 00        	defw 0
 196+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 197+ 86CA 00 00        	defw 0
 198+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 199+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 200+ 86D0
 201+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 202+ 86D2 00 00        	defw 0
 203+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 204+ 86D6 00 00        	defw 0
 205+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 206+ 86DA 00 00        	defw 0
 207+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 208+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 209+ 86E0
 210+ 86E0              	org $8700
 211+ 8700
 212+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 213+ 8703 23 C4 00     	DEFB	$23,$C4,0
 214+ 8706 26 64 00     	DEFB	$26,$64,0
 215+ 8709 24 24 00     	DEFB	$24,$24,0
 216+ 870C 2C 34 00     	DEFB	$2C,$34,0
 217+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 218+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 219+ 8715 67 E6 00     	DEFB	$67,$E6,0
 220+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 222+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 223+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 224+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 225+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 226+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 227+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 8730
 229+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 229+ 8734 F1 00 09 99
 230+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 230+ 873C 0B 0D 00 1B
 231+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 231+ 8744 80 19 F9 80
 232+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 232+ 874C F3 C0 3D FB
 233+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 233+ 8754 3E F7 C0 3E
 234+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 234+ 875C 40 1C 63 80
 235+ 8760
 236+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 236+ 8764 3C 40 02 66
 237+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 237+ 876C 02 C3 40 06
 238+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 238+ 8774 60 06 7E 60
 239+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 239+ 877C 3C F0 0F 7E
 240+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 240+ 8784 0F BD F0 0F
 241+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 241+ 878C 10 07 18 E0
 242+ 8790
 243+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 243+ 8794 8F 10 00 99
 244+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 244+ 879C 00 B0 D0 01
 245+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 245+ 87A4 D8 01 9F 98
 246+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 246+ 87AC CF 3C 03 DF
 247+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 247+ 87B4 03 EF 7C 03
 248+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 248+ 87BC 44 01 C6 38
 249+ 87C0
 250+ 87C0              ; ----------------------------------------------------------------------------------------
 251+ 87C0
 252+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 253+ 87C2 00 88        	defw Explosion_entidades_2
 254+ 87C4 30 88        	defw Explosion_entidades_3
 255+ 87C6
 256+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 257+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 258+ 87CC 04 38 40     	DEFB	$04,$38,$40
 259+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 260+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 261+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 262+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 263+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 264+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 265+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 266+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 267+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 268+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 269+ 87ED 03 00 40     	DEFB	$03,$00,$40
 270+ 87F0 04 00 00     	DEFB	$04,$00,$00
 271+ 87F3 08 00 00     	DEFB	$08,$00,$00
 272+ 87F6
 273+ 87F6              	org $8800
 274+ 8800
 275+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 275+ 8804 38 10 03 BC
 276+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 276+ 880C 04 06 C0 00
 277+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 277+ 8814 00 03 DD 80
 278+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 278+ 881C 3A 70 01 9C
 279+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 279+ 8824 04 F8 80 06
 280+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 280+ 882C 00 00 00 00
 281+ 8830
 282+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 282+ 8834 00 20 08 00
 283+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 283+ 883C 00 06 00 00
 284+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 284+ 8844 00 00 14 30
 285+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 285+ 884C 38 00 01 08
 286+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 286+ 8854 00 80 00 04
 287+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 287+ 885C 10 08 00 20
 288+ 8860
 289+ 8860              ; ------------------------------------------
 290+ 8860
 291+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 292+ 8862 96 88        	defw Explosion_Amadeus_2
 293+ 8864 C6 88        	defw Explosion_Amadeus_3
 294+ 8866
 295+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 296+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 297+ 886C 02 66 56     	DEFB	$02,$66,$56
 298+ 886F 02 42 48     	DEFB	$02,$42,$48
 299+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 300+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 301+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 302+ 887B 06 79 68     	DEFB	$06,$79,$68
 303+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 304+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 305+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 306+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 307+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 308+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 309+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 310+ 8893 07 19 80     	DEFB	$07,$19,$80
 311+ 8896
 312+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 313+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 314+ 889C 00 66 56     	DEFB	$00,$66,$56
 315+ 889F 04 42 48     	DEFB	$04,$42,$48
 316+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 317+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 318+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 319+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 320+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 321+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 322+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 323+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 324+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 325+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 326+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 327+ 88C3 07 19 80     	DEFB	$07,$19,$80
 328+ 88C6
 329+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 330+ 88C9 00 00 00     	DEFB	$00,$00,$00
 331+ 88CC 00 00 00     	DEFB	$00,$00,$00
 332+ 88CF 00 00 40     	DEFB	$00,$00,$40
 333+ 88D2 00 00 30     	DEFB	$00,$00,$30
 334+ 88D5 00 00 08     	DEFB	$00,$00,$08
 335+ 88D8 00 82 40     	DEFB	$00,$82,$40
 336+ 88DB 04 04 68     	DEFB	$04,$04,$68
 337+ 88DE 04 20 58     	DEFB	$04,$20,$58
 338+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 339+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 340+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 341+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 342+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 343+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 344+ 88F3 07 11 80     	DEFB	$07,$11,$80
 345+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F9 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 27 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927              ;	db 0											; Impacto.
  39+ 8927
  40+ 8927 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 8929 00 00        	defw 0											; Puntero de impresión.
  42+ 892B              ;	db 0											; Impacto.
  43+ 892B
  44+ 892B 39 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892D 3E 89        	defw Disparo_2
  46+ 892F 43 89        	defw Disparo_3
  47+ 8931 48 89        	defw Disparo_4
  48+ 8933 4D 89        	defw Disparo_5
  49+ 8935 52 89        	defw Disparo_6
  50+ 8937 57 89        	defw Disparo_7
  51+ 8939
  52+ 8939 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893B 00 00        	defw 0											; Puntero de impresión.
  54+ 893D 00           	db 0											; Control.
  55+ 893E
  56+ 893E 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8940 00 00        	defw 0											; Puntero de impresión.
  58+ 8942 00           	db 0											; Control.
  59+ 8943
  60+ 8943 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8945 00 00        	defw 0											; Puntero de impresión.
  62+ 8947 00           	db 0											; Control.
  63+ 8948
  64+ 8948 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894A 00 00        	defw 0											; Puntero de impresión.
  66+ 894C 00           	db 0											; Control.
  67+ 894D
  68+ 894D 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 894F 00 00        	defw 0											; Puntero de impresión.
  70+ 8951 00           	db 0											; Control.
  71+ 8952
  72+ 8952 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8954 00 00        	defw 0											; Puntero de impresión.
  74+ 8956 00           	db 0											; Control.
  75+ 8957
  76+ 8957 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 8959 00 00        	defw 0											; Puntero de impresión.
  78+ 895B 00           	db 0											; Control.
  79+ 895C
  80+ 895C              ; -------------------------------------------------------------------------------------
  81+ 895C              ;
  82+ 895C              ;	Índice de cajas de entidades.
  83+ 895C              ;
  84+ 895C              ;	18/1/24
  85+ 895C              ;
  86+ 895C
  87+ 895C              Indice_de_cajas_de_entidades
  88+ 895C
  89+ 895C 7A 89        	defw Caja_1
  90+ 895E 86 89        	defw Caja_2
  91+ 8960 92 89        	defw Caja_3
  92+ 8962 9E 89        	defw Caja_4
  93+ 8964 AA 89        	defw Caja_5
  94+ 8966 B6 89        	defw Caja_6
  95+ 8968 C2 89        	defw Caja_7
  96+ 896A
  97+ 896A 00 00        	defw 0
  98+ 896C 00 00        	defw 0
  99+ 896E
 100+ 896E              ; -------------------------
 101+ 896E
 102+ 896E              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 896E
 104+ 896E              ;	db 0
 105+ 896E
 106+ 896E              ; ---------- ---------- ---------- ---------- ----------
 107+ 896E              ;
 108+ 896E              ;	28/05/24
 109+ 896E              ;
 110+ 896E              ; 	Cada caja tiene 14 bytes !!!
 111+ 896E              ;
 112+ 896E              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 896E
 114+ 896E 00           Amadeus_BOX db 0										; (Tipo).
 115+ 896F 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8971 00           	db 0												; (Contador_de_vueltas).
 117+ 8972 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8973 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8975 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8977 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 8979 00           	db 0												; (Velocidad).
 122+ 897A
 123+ 897A              ; ---------- ---------- ---------- ---------- ----------
 124+ 897A              ;
 125+ 897A              ;	22/01/24
 126+ 897A              ;
 127+ 897A              ; 	Cada caja tiene 12 bytes !!!
 128+ 897A
 129+ 897A 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897D 00           	db 0												; (Contador_de_vueltas).
 131+ 897E 00           	db 0												; (Impacto).
 132+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8985 00           	db 0												; (Velocidad).
 136+ 8986
 137+ 8986              ; ---------- ---------- ---------- ---------- ----------
 138+ 8986
 139+ 8986 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 8989 00           	db 0 												; (Contador_de_vueltas).
 141+ 898A 00           	db 0												; (Impacto).
 142+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8991 00           	db 0												; (Velocidad).
 146+ 8992
 147+ 8992              ; ---------- ---------- ---------- ---------- ----------
 148+ 8992
 149+ 8992 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8995 00           	db 0 												; (Contador_de_vueltas).
 151+ 8996 00           	db 0												; (Impacto).
 152+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899D 00           	db 0												; (Velocidad).
 156+ 899E
 157+ 899E              ; ---------- ---------- ---------- ---------- ----------
 158+ 899E
 159+ 899E 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A1 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A2 00           	db 0												; (Impacto).
 162+ 89A3 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89A9 00           	db 0												; (Velocidad).
 166+ 89AA
 167+ 89AA              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AA
 169+ 89AA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AD 00           	db 0 												; (Contador_de_vueltas).
 171+ 89AE 00           	db 0												; (Impacto).
 172+ 89AF 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B5 00           	db 0												; (Velocidad).
 176+ 89B6
 177+ 89B6              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B6
 179+ 89B6 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89B9 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BA 00           	db 0												; (Impacto).
 182+ 89BB 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89BF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C1 00           	db 0												; (Velocidad).
 186+ 89C2
 187+ 89C2              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C2
 189+ 89C2 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C5 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C6 00           	db 0												; (Impacto).
 192+ 89C7 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89C9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CD 00           	db 0												; (Velocidad).
 196+ 89CE
 197+ 89CE              ; -------------------------------------------------------------------------------------
 198+ 89CE              ;
 199+ 89CE              ;	11/1/24
 200+ 89CE              ;
 201+ 89CE              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89CE              ;
 203+ 89CE              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89CE              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89CE              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89CE              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89CE
 208+ 89CE              Indice_de_definiciones_de_entidades
 209+ 89CE
 210+ 89CE D2 89        	defw Entidad_1
 211+ 89D0 DF 89        	defw Entidad_2
 212+ 89D2
 213+ 89D2              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D2
 215+ 89D2              ;	BADSAT, (Satélite malvado).
 216+ 89D2
 217+ 89D2 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D5 01           	db 1												; (Contador_de_vueltas).
 219+ 89D6 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89D8 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DA 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DC 01           	db 1												; (Cuad_objeto).
 223+ 89DD 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89DF
 225+ 89DF 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E2 01           	db 1												; (Contador_de_vueltas).
 227+ 89E3 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E5 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E7 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89E9 01           	db 1												; (Cuad_objeto).
 231+ 89EA 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EC
 233+ 89EC              ; -------------------------------------------------------------------------------------
 234+ 89EC              ;
 235+ 89EC              ;	28/05/24
 236+ 89EC              ;
 237+ 89EC              ;	Definición de Amadeus.
 238+ 89EC              ;
 239+ 89EC              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EC              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EC
 242+ 89EC 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89EF 00           	db 0												; (Contador_de_vueltas).
 244+ 89F0 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F2 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F4 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F6 03           	db 3												; (Cuad_objeto).
 248+ 89F7 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F9
   2+ 89F9
   3+ 89F9              ;   07/07/23
   4+ 89F9              ;
   5+ 89F9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F9              ;
   7+ 89F9              ;   Codificación:
   8+ 89F9              ;
   9+ 89F9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F9              ;
  11+ 89F9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F9              ;
  13+ 89F9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F9              ;
  15+ 89F9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F9              ;
  17+ 89F9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F9              ;                               ..... %01000010 Vel_up 4
  19+ 89F9              ;                                               Vel_down 2
  20+ 89F9              ;                               ..... $42
  21+ 89F9              ;
  22+ 89F9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F9              ;
  24+ 89F9              ;                               ..... %01000010 Vel_left 4
  25+ 89F9              ;                                               Vel_right 2
  26+ 89F9              ;                               ..... $42
  27+ 89F9              ;
  28+ 89F9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F9              ;
  30+ 89F9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F9              ;
  32+ 89F9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F9              ;
  34+ 89F9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F9              ;                                     $53
  36+ 89F9              ;
  37+ 89F9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F9              ;
  39+ 89F9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F9              ;
  42+ 89F9              ;                       Arriba ..... $81
  43+ 89F9              ;                       Arriba - izquierda ..... $a1
  44+ 89F9              ;                       Arriba - derecha ..... $91
  45+ 89F9              ;
  46+ 89F9              ;                       Abajo ..... $41
  47+ 89F9              ;                       Abajo - izquierda ..... $61
  48+ 89F9              ;                       Abajo - derecha ..... $51
  49+ 89F9              ;
  50+ 89F9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F9              ;
  52+ 89F9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F9              ;
  56+ 89F9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F9              ;
  61+ 89F9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F9              ;
  65+ 89F9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F9
  70+ 89F9              ; ----- ----- ----- ----- -----
  71+ 89F9
  72+ 89F9 25 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FB 2D 8A            defw F_1
  74+ 89FD 37 8A            defw F_2
  75+ 89FF 41 8A            defw Codo_abajo_derecha
  76+ 8A01 75 8A            defw Derecha_y_subiendo
  77+ 8A03 7F 8A            defw Derecha_y_subiendo_1
  78+ 8A05 89 8A            defw F_3
  79+ 8A07 93 8A            defw F_4
  80+ 8A09 9D 8A            defw Derecha_y_bajando
  81+ 8A0B A7 8A            defw Derecha_y_bajando_1
  82+ 8A0D B1 8A            defw Derecha_y_bajando_2
  83+ 8A0F BB 8A            defw Codo_derecha_abajo
  84+ 8A11 EB 8A            defw Codo_abajo_izq.
  85+ 8A13 1F 8B            defw Izquierda_y_subiendo
  86+ 8A15 29 8B            defw Izquierda_y_subiendo_1
  87+ 8A17 33 8B            defw F_5
  88+ 8A19 3D 8B            defw F_6
  89+ 8A1B 47 8B            defw Izquierda_y_bajando
  90+ 8A1D 51 8B            defw Izquierda_y_bajando_1
  91+ 8A1F 5B 8B            defw Izquierda_y_bajando_2
  92+ 8A21 65 8B            defw Codo_izquierda_abajo
  93+ 8A23 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A25
  95+ 8A25 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A29 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2D
  98+ 8A2D 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A31 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A35 08 00
 100+ 8A37
 101+ 8A37 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3B 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3F 0F FE
 103+ 8A41
 104+ 8A41 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A45 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A55 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A69 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A71 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A75
 118+ 8A75 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A79 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7D 06 00
 120+ 8A7F
 121+ 8A7F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A83 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A87 02 00
 123+ 8A89
 124+ 8A89 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8D 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A91 04 00
 126+ 8A93
 127+ 8A93 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A97 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9B 08 00
 129+ 8A9D
 130+ 8A9D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA1 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA5 02 00
 132+ 8AA7
 133+ 8AA7 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAB 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAF 06 00
 135+ 8AB1
 136+ 8AB1 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB5 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB9 06 00
 138+ 8ABB
 139+ 8ABB              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABB
 141+ 8ABB 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACF 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEB
 154+ 8AEB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B03 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B07 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0B 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B13 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B17 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1B 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1F
 168+ 8B1F 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B23 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B27 06 00
 170+ 8B29
 171+ 8B29 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2D 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B31 02 00
 173+ 8B33
 174+ 8B33 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B37 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3B 04 00
 176+ 8B3D
 177+ 8B3D 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B41 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B45 08 00
 179+ 8B47
 180+ 8B47 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4B 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4F 02 00
 182+ 8B51
 183+ 8B51 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B55 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B59 06 00
 185+ 8B5B
 186+ 8B5B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5F 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B63 06 00
 188+ 8B65
 189+ 8B65 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B71 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B79 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B81 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B85 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B89 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B91 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B95
 202+ 8B95
 203+ 8B95
 204+ 8B95
 205+ 8B95
 206+ 8B95
 207+ 8B95
 208+ 8B95
 209+ 8B95
 210+ 8B95
# file closed: Patrones_de_mov.asm
 143  8B95              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B95              ; 19/1/24
   2+ 8B95
   3+ 8B95              Indice_de_niveles
   4+ 8B95
   5+ 8B95 9D 8B        	defw Nivel_1
   6+ 8B97 A8 8B        	defw Nivel_2
   7+ 8B99
   8+ 8B99              ;	...
   9+ 8B99              ;	...
  10+ 8B99              ;	+ Niveles ...
  11+ 8B99
  12+ 8B99 00 00        	defw 0
  13+ 8B9B 00 00        	defw 0
  14+ 8B9D
  15+ 8B9D 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9E 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA2 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA6 01 01
  18+ 8BA8
  19+ 8BA8 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA9 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB1 01 02
  22+ 8BB3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB7 01 02
  23+ 8BB9
# file closed: Niveles.asm
 144  8BB9
 145  8BB9              ; --------------------------------------------------------------------------------
 146  8BB9              ;
 147  8BB9              ; 12/05/24
 148  8BB9              ;
 149  8BB9              ; Parámetros DRAW.
 150  8BB9              ;
 151  8BB9
 152  8BB9              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB9
 154  8BB9 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBA              ;															- Patrón de movimiento.
 156  8BBA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBC
 159  8BBC 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBD              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBD
 162  8BBD              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBD              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBD              ; Ejemplos.
 165  8BBD
 166  8BBD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBD
 172  8BBD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BBE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BBE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BBE
 176  8BBE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC0              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC0
 179  8BC0 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC2
 181  8BC2              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC2
 183  8BC2 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BC4              ;														; _palabras que componen el "movimiento_masticado".
 185  8BC4
 186  8BC4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BC4
 188  8BC4 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BC5              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BC5              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BC5              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BC5              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BC5
 194  8BC5 00           Ctrl_2 db 0
 195  8BC6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC6              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC6              ;
 203  8BC6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC6              ;														BIT 4, ???
 209  8BC6              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC6
 211  8BC6 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC7              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC7              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC7              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC7              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC7              ;
 217  8BC7              ; 														DESCRIPCIÖN:
 218  8BC7              ;
 219  8BC7              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC7              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC7              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC7              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC7              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC7              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC7              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC7              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC7              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC7              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC7              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC7              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC7              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC7              ;
 233  8BC7              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC7              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC7              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC7
 237  8BC7              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC7
 239  8BC7 00           Filas db 0												; Filas. [DRAW]
 240  8BC8 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BCB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BCD
 244  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BCD
 246  8BCD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BCE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BCE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BCE
 250  8BCE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCE
 252  8BCE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BCE              ;
 254  8BCE              ;	COLORES: 0 ..... NEGRO
 255  8BCE              ;    		 1 ..... AZUL
 256  8BCE              ; 			 2 ..... ROJO
 257  8BCE              ;			 3 ..... MAGENTA
 258  8BCE              ; 			 4 ..... VERDE
 259  8BCE              ; 			 5 ..... CIAN
 260  8BCE              ;			 6 ..... AMARILLO
 261  8BCE              ; 			 7 ..... BLANCO
 262  8BCE
 263  8BCE 00 00        Indice_Sprite_der defw 0
 264  8BD0 00 00        Indice_Sprite_izq defw 0
 265  8BD2 00 00        Puntero_DESPLZ_der defw 0
 266  8BD4 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD6
 268  8BD6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD9 00           Columnas db 0
 271  8BDA 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BDC              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BDC 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDD
 275  8BDD              ; variables de control general.
 276  8BDD
 277  8BDD 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BDE
 279  8BDE              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BDE
 281  8BDE              Perfiles_de_velocidad
 282  8BDE
 283  8BDE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BDF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BE0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BE2
 288  8BE2              ; Contadores de 16 bits.
 289  8BE2
 290  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BEA
 295  8BEA              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BEA
 297  8BEA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BEC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BEE 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BF0              ;
 301  8BF0              ;
 302  8BF0 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF1              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF1              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF1 00           Incrementa_puntero_backup db 0
 306  8BF2 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BF3              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BF3 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BF4 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BF5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF6              ;
 312  8BF6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF6              ;
 316  8BF6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF6              ;
 321  8BF6              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF6
 325  8BF6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF7
 327  8BF7              ;														DESCRIPCIÓN:
 328  8BF7              ;
 329  8BF7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF7              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF7              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF7
 336  8BF7              ;														BIT 3, Recarga de nueva oleada.
 337  8BF7              ;														BIT 4, Recarga de nueva oleada.
 338  8BF7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF7              ;														BIT 6, **** Frame completo.
 340  8BF7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF7
 342  8BF7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF9
 347  8BF9              ; Gestión de ENTIDADES y CAJAS.
 348  8BF9
 349  8BF9 00 00        Puntero_store_caja defw 0
 350  8BFB 00 00        Puntero_restore_caja defw 0
 351  8BFD 00 00        Indice_restore_caja defw 0
 352  8BFF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8C00 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C01 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C02
 356  8C02 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C04 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C06              ;														; _ puntero (Indice_entidades).
 359  8C06
 360  8C06              ;---------------------------------------------------------------------------------------------------------------
 361  8C06              ;
 362  8C06              ;	31/08/24
 363  8C06              ;
 364  8C06              ;	Álbumes.
 365  8C06
 366  8C06 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C08              ;														; _variable para almacenar lo posición del puntero_
 368  8C08              ; 														; _de pila, SP.
 369  8C08 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C0A              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C0A
 372  8C0A              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C0A
 374  8C0A 00 00        Album_de_pintado defw 0
 375  8C0C 00 00        Album_de_borrado defw 0
 376  8C0E 00 00        Album_de_pintado_Amadeus defw 0
 377  8C10 00 00        Album_de_borrado_Amadeus defw 0
 378  8C12 00 00        Album_de_pintado_disparos defw 0
 379  8C14 00 00        Album_de_borrado_disparos defw 0
 380  8C16
 381  8C16 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C18 00           Num_de_bytes_album_de_disparos db 0
 383  8C19 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C1A
 385  8C1A 02           Numero_de_disparos_de_Amadeus db 2						; Inicialmente disponemos de 2 disparos.
 386  8C1B 00           Numero_de_disparos_de_entidades db 0
 387  8C1C
 388  8C1C 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C1D              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 390  8C1D
 391  8C1D 00 00        Puntero_rancio_disparos_album defw 0
 392  8C1F
 393  8C1F 00 00        Techo_Scanlines_album defw 0
 394  8C21 00 00        Techo_Scanlines_album_2 defw 0
 395  8C23 00           Switch db 0
 396  8C24 00 00        Techo defw 0
 397  8C26 00 00        Scanlines_album_SP defw 0
 398  8C28 00 89        India_SP defw Tabla_de_pintado
 399  8C2A 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2C
 401  8C2C 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C2D              ;
 403  8C2D              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C2D              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C2D              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C2D              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C2D              ;																Habilita el borrado/pintado de sprites.
 408  8C2D              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C2D              ;																_ a la baja.
 410  8C2D              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C2D              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C2D              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C2D              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C2D              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C2D              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C2D
 417  8C2D 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C2E              ;
 419  8C2E              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C2E              ;
 421  8C2E              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C2E              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C2E              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C2E              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C2E              ;
 426  8C2E              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C2E              ;															_ masticados ya generados.
 428  8C2E              ;
 429  8C2E              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C2E              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C2E              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C2E              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C2E
 434  8C2E 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 435  8C2F              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 436  8C2F              ; Gestión de Disparos.
 437  8C2F
 438  8C2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 440  8C33
 441  8C33 00           Impacto2 db 0											; Byte de control de impactos.
 442  8C34
 443  8C34              ;
 444  8C34              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 445  8C34              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 446  8C34              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 447  8C34              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 448  8C34
 449  8C34
 450  8C34
 451  8C34
 452  8C34
 453  8C34
 454  8C34
 455  8C34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 456  8C36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 457  8C36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 458  8C36
 459  8C36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 460  8C38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 461  8C38 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C3B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 463  8C3B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C3E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 465  8C3E
 466  8C3E              ;---------------------------------------------------------------------------------------------------------------
 467  8C3E
 468  8C3E              ; Relojes y temporizaciones.
 469  8C3E
 470  8C3E 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 471  8C3F 05           Clock_explosion_Amadeus db 5
 472  8C40 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 473  8C41
 474  8C41 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 475  8C43
 476  8C43 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 477  8C45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 478  8C46              ;														; Repite la oleada de entidades.
 479  8C46
 480  8C46              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 481  8C46 14           CLOCK_repone_disparo_Amadeus db 20	 					; Reloj, decreciente.
 482  8C47              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 483  8C47              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 484  8C47
 485  8C47              ;---------------------------------------------------------------------------------------------------------------
 486  8C47
 487  8C47              ; Gestión de NIVELES.
 488  8C47
 489  8C47 00           Nivel db 0												; Nivel actual del juego.
 490  8C48 00 00        Puntero_indice_NIVELES defw 0
 491  8C4A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C4C              ; 														; _ que definen el NIVEL.
 493  8C4C
 494  8C4C              ; ---------------------------------------------------------------------------------------------------------------
 495  8C4C
 496  8C4C              ; Temporizaciones Shield.
 497  8C4C
 498  8C4C 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C50 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C52 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C53 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C54 00           Shield_3 db 0
 503  8C55
 504  8C55 06           Lives db 6
 505  8C56
 506  8C56              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C56              ;
 508  8C56              ;	5/1/24
 509  8C56
 510  8C56              START
 511  8C56
 512  8C56 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C59 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C5B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C5D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C5F F3           	DI
 517  8C60
 518  8C60              ; Limpiamos pantalla.
 519  8C60
 520  8C60 3E 07        	ld a,%00000111
 521  8C62 CD 87 94     	call Cls
 522  8C65 CD DF 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C68
 524  8C68              ; INICIALIZACIÓN.
 525  8C68
 526  8C68 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C6A CD 2C 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C6D CD 6F 8E     	call Extrae_numero_aleatorio_y_avanza
 529  8C70
 530  8C70 6F           	ld l,a
 531  8C71 26 00        	ld h,0
 532  8C73 22 43 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 533  8C76
 534  8C76              ;	Inicializa 1er Nivel.
 535  8C76
 536  8C76 21 95 8B     	ld hl,Indice_de_niveles
 537  8C79 22 48 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 538  8C7C CD 5C 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 539  8C7F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 540  8C7F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 541  8C7F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 542  8C7F
 543  8C7F              ;	Inicia los álbumes de líneas.
 544  8C7F
 545  8C7F CD 28 90     	call Inicia_albumes_de_lineas
 546  8C82              ;
 547  8C82 CD 38 90     	call Inicia_albumes_de_lineas_Amadeus
 548  8C85 CD 45 90     	call Inicia_albumes_de_disparos
 549  8C88
 550  8C88
 551  8C88 CD A1 92     4 call Inicia_Entidades
 552  8C8B CD 04 93     	call Inicia_Amadeus
 553  8C8E
 554  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 555  8C8E              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 556  8C8E              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 557  8C8E
 558  8C8E 11 6E 89     	ld de,Amadeus_BOX
 559  8C91 CD 57 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 560  8C94 CD 47 93     	call Limpiamos_bandeja_DRAW
 561  8C97
 562  8C97              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 563  8C97
 564  8C97 06 3C        	ld b,60
 565  8C99 CD 29 9D     2 call Amadeus_a_izquierda
 566  8C9C 10 FB        	djnz 2B
 567  8C9E
 568  8C9E CD 06 90     	call Genera_datos_de_impresion_Amadeus
 569  8CA1
 570  8CA1              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 571  8CA1
 572  8CA1 CD 58 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 573  8CA4              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 574  8CA4
 575  8CA4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 576  8CA4              ; (Esto se dá cuando se inicia una nueva oleada).
 577  8CA4
 578  8CA4              ;	ld a,(Ctrl_1)
 579  8CA4              ;	bit 3,a
 580  8CA4              ;	jr nz,5F											 ; Loop
 581  8CA4
 582  8CA4              ;	ld de,Amadeus_db
 583  8CA4              ;	call Store_Amadeus
 584  8CA4
 585  8CA4              ; 	INICIA DISPAROS !!!!!
 586  8CA4
 587  8CA4 CD 6E 90     	call Inicia_Puntero_Disparo_Entidades
 588  8CA7 CD 75 90     	call Inicia_Puntero_Disparo_Amadeus
 589  8CAA
 590  8CAA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CAA
 592  8CAA              ;5 call Inicia_punteros_de_cajas
 593  8CAA              ;	call Restore_entidad
 594  8CAA
 595  8CAA              ;	ld a,(Ctrl_1)
 596  8CAA              ;	bit 3,a
 597  8CAA              ;	jr z,6F
 598  8CAA
 599  8CAA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CAA
 601  8CAA              ;	ld hl,Ctrl_1
 602  8CAA              ;	res 3,(hl)
 603  8CAA              ;	jr Main
 604  8CAA
 605  8CAA              ; Damos por concluida la construcción del FRAME.
 606  8CAA              ;
 607  8CAA
 608  8CAA CD EA 90     	call Inicia_Shield
 609  8CAD
 610  8CAD
 611  8CAD 2A 26 8C     6 ld hl,(Scanlines_album_SP)
 612  8CB0 22 1F 8C     	ld (Techo_Scanlines_album),hl
 613  8CB3
 614  8CB3 2A 0C 8C     	ld hl,(Album_de_borrado)
 615  8CB6 22 26 8C     	ld (Scanlines_album_SP),hl
 616  8CB9
 617  8CB9 21 00 89     	ld hl,Tabla_de_pintado
 618  8CBC 22 28 8C     	ld (India_SP),hl
 619  8CBF
 620  8CBF 21 2C 8C     	ld hl,Ctrl_3
 621  8CC2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CC4 CB D6        	set 2,(hl)
 623  8CC6 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC8
 625  8CC8 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC9
 627  8CC9 76           	halt
 628  8CCA
 629  8CCA              ; ------------------------------------
 630  8CCA
 631  8CCA              Main
 632  8CCA              ;
 633  8CCA              ; 22/08/24
 634  8CCA
 635  8CCA              ; Gestión de disparos.
 636  8CCA
 637  8CCA CD 10 9F     	call Limpia_album_de_borrado_disparos
 638  8CCD CD 51 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CD0 CD 53 9F     	call Motor_Disparos
 640  8CD3
 641  8CD3              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 642  8CD3              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 643  8CD3              ; Este hecho lo indica el bit2 de (Impacto2).
 644  8CD3
 645  8CD3 CD 5F A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD6
 647  8CD6              ;	TEMPORIZACIONES !!!!!!!!!!!!!!!!
 648  8CD6
 649  8CD6              ;	ld a,(Permiso_de_disparo_Amadeus)
 650  8CD6              ;	and a
 651  8CD6              ;	jr nz,4F
 652  8CD6
 653  8CD6              ;	ld hl,CLOCK_repone_disparo_Amadeus
 654  8CD6              ;	inc (hl)
 655  8CD6              ;	dec (hl)
 656  8CD6
 657  8CD6              ;	call z,Autoriza_disparo_Amadeus_y_repone_clock
 658  8CD6
 659  8CD6              ;	dec (hl)
 660  8CD6
 661  8CD6
 662  8CD6 2A 43 8C     4 ld hl,(Clock_next_entity)
 663  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 664  8CDD A7           	and a
 665  8CDE ED 42        	sbc hl,bc
 666  8CE0 20 16        	jr nz,1F
 667  8CE2
 668  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 669  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 670  8CE2
 671  8CE2 3A 00 8C     	ld a,(Numero_parcial_de_entidades)
 672  8CE5 47           	ld b,a
 673  8CE6 3A 01 8C     	ld a,(Entidades_en_curso)
 674  8CE9 B8           	cp b
 675  8CEA 28 0C        	jr z,1F
 676  8CEC 30 0A        	jr nc,1F
 677  8CEE
 678  8CEE 3C           	inc a
 679  8CEF 32 01 8C     	ld (Entidades_en_curso),a
 680  8CF2
 681  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 682  8CF2
 683  8CF2 CD 6F 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 684  8CF5 CD 8B 8E     	call Define_Clock_next_entity
 685  8CF8
 686  8CF8 3A 01 8C     1 ld a,(Entidades_en_curso)
 687  8CFB A7           	and a
 688  8CFC CA 6F 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 689  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 690  8D00
 691  8D00              ; ( Código que ejecutamos con cada entidad: ).
 692  8D00
 693  8D00              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 694  8D00              ;
 695  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 696  8D00
 697  8D00 21 00 89     	ld hl,Tabla_de_pintado
 698  8D03 22 28 8C     	ld (India_SP),hl
 699  8D06
 700  8D06 21 2C 8C     	ld hl,Ctrl_3
 701  8D09 CB D6        	set 2,(hl)
 702  8D0B CD 26 8E     	call Change
 703  8D0E
 704  8D0E C5           2 push bc 												; Nº de entidades en curso.
 705  8D0F
 706  8D0F CD B7 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 707  8D12 ED 5B 26 8C  	ld de,(Scanlines_album_SP)
 708  8D16
 709  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 710  8D16
 711  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 712  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 713  8D16
 714  8D16 3A 33 8C     	ld a,(Impacto2)
 715  8D19 CB 5F        	bit 3,a
 716  8D1B C4 D6 9E     	call nz,Compara_con_coordenadas_de_disparo
 717  8D1E
 718  8D1E 3A BD 8B     	ld a,(Impacto)
 719  8D21 CB 4F        	bit 1,a
 720  8D23 C4 C7 91     	call nz,Genera_explosion
 721  8D26 20 2A        	jr nz,Gestiona_siguiente_entidad
 722  8D28
 723  8D28 3A BD 8B     	ld a,(Impacto)
 724  8D2B A7           	and a
 725  8D2C 28 0C        	jr z,3F
 726  8D2E
 727  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 728  8D2E
 729  8D2E              ; 5/7/24
 730  8D2E              ; Nota importante:
 731  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 732  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 733  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 734  8D2E
 735  8D2E 3A 72 89     	ld a,(Impacto_Amadeus)
 736  8D31 A7           	and a
 737  8D32 C4 C7 91     	call nz,Genera_explosion
 738  8D35 20 1B        	jr nz,Gestiona_siguiente_entidad
 739  8D37
 740  8D37              ; Falsa colisión !!!
 741  8D37
 742  8D37 32 BD 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 743  8D3A
 744  8D3A              ; -------------------------------------------
 745  8D3A
 746  8D3A CD CF 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 747  8D3D CD 06 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 748  8D40 CD BF 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 749  8D43 CD C7 94     	call Genera_datos_de_impresion
 750  8D46 CD 6A 93     	call Decrementa_Contador_de_mov_masticados
 751  8D49
 752  8D49              ; -------------------------------------------
 753  8D49
 754  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 755  8D49
 756  8D49 2A BE 8B     	ld hl,(Puntero_de_impresion)
 757  8D4C CD 9B 94     	call Genera_coordenadas
 758  8D4F
 759  8D4F CD DD A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 760  8D52
 761  8D52              Gestiona_siguiente_entidad
 762  8D52
 763  8D52 CD 3C 93      	call Store_Restore_cajas
 764  8D55 C1           	pop bc
 765  8D56 10 B6        	djnz 2B
 766  8D58
 767  8D58              ; Hemos gestionado todas las entidades.
 768  8D58
 769  8D58              ; ----- ----- -----
 770  8D58
 771  8D58 CD E3 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 772  8D5B CD FA 8E     	call Ordena_tabla_de_impresion
 773  8D5E CD 58 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 774  8D61
 775  8D61              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 776  8D61              ; Hemos gestionado todas las unidades.
 777  8D61              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 778  8D61
 779  8D61              ;	ld hl,Ctrl_1
 780  8D61              ;	res 2,(hl)
 781  8D61
 782  8D61 CD A0 8E     	call Borra_diferencia
 783  8D64
 784  8D64 3A 2C 8C     	ld a,(Ctrl_3)
 785  8D67 CB 5F        	bit 3,a
 786  8D69 20 04        	jr nz,Gestion_de_Amadeus
 787  8D6B
 788  8D6B EB           	ex de,hl
 789  8D6C 71           	ld (hl),c
 790  8D6D 2C           	inc l
 791  8D6E 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 792  8D6F
 793  8D6F
 794  8D6F              ;! GESTIONA AMADEUS !!!!!!!!!!
 795  8D6F
 796  8D6F              Gestion_de_Amadeus
 797  8D6F
 798  8D6F 21 2C 8C     	ld hl,Ctrl_3
 799  8D72 CB 76        	bit 6,(hl)
 800  8D74 28 13        	jr z,Amadeus_vivo
 801  8D76
 802  8D76              ; Amadeus ha sido destruido.
 803  8D76              ; Decrementa (Temp_new_live).
 804  8D76
 805  8D76 21 40 8C     	ld hl,Temp_new_live
 806  8D79 35           	dec (hl)
 807  8D7A 20 26        	jr nz,End_frame
 808  8D7C
 809  8D7C              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 810  8D7C
 811  8D7C 21 55 8C     	ld hl,Lives
 812  8D7F 35           	dec (hl)
 813  8D80
 814  8D80              ;! Fin del juego
 815  8D80
 816  8D80 F3           	di
 817  8D81 28 FE        	jr z,$
 818  8D83 FB           	ei
 819  8D84
 820  8D84              ; Nueva nave.
 821  8D84
 822  8D84 CD CC 8D     	call Reinicia_Amadeus
 823  8D87 18 19        	jr End_frame
 824  8D89
 825  8D89              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 826  8D89
 827  8D89              Amadeus_vivo
 828  8D89
 829  8D89 3A 72 89     	ld a,(Impacto_Amadeus)
 830  8D8C A7           	and a
 831  8D8D C4 F7 91     	call nz, Genera_explosion_Amadeus
 832  8D90 20 10        	jr nz, End_frame
 833  8D92
 834  8D92 CD A4 91     	call Teclado
 835  8D95
 836  8D95 21 2C 8C     	ld hl,Ctrl_3
 837  8D98 CB 6E        	bit 5,(hl)
 838  8D9A 28 06        	jr z,End_frame
 839  8D9C
 840  8D9C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 841  8D9C
 842  8D9C CD 41 8E     	call Change_Amadeus
 843  8D9F CD 06 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 844  8DA2
 845  8DA2              End_frame
 846  8DA2
 847  8DA2              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 848  8DA2              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 849  8DA2
 850  8DA2 CD 13 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 851  8DA5 CD 2C 9F     	call Calcula_bytes_pintado_disparos
 852  8DA8 CD 39 9F     	call Limpia_album_de_pintado_disparos
 853  8DAB
 854  8DAB              ; ------------ ------------- --------------
 855  8DAB
 856  8DAB 2A 0C 8C     	ld hl,(Album_de_borrado)
 857  8DAE 22 26 8C     	ld (Scanlines_album_SP),hl
 858  8DB1
 859  8DB1 21 2C 8C     	ld hl,Ctrl_3
 860  8DB4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 861  8DB6 CB 9E        	res 3,(hl)
 862  8DB8 CB A6        	res 4,(hl)
 863  8DBA
 864  8DBA AF           	xor a
 865  8DBB D3 FE        	out ($fe),a
 866  8DBD
 867  8DBD 76           	halt
 868  8DBE
 869  8DBE              ; ----------------------------------------
 870  8DBE
 871  8DBE              ;	ld a,(Ctrl_1) 										; Existe Loop?
 872  8DBE              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 873  8DBE CA CA 8C     	jp z,Main
 874  8DC1
 875  8DC1              ; ----------------------------------------
 876  8DC1
 877  8DC1              Autoriza_disparo_Amadeus_y_repone_clock
 878  8DC1
 879  8DC1 3E 15        	ld a,21
 880  8DC3 36 15        	ld (hl),21
 881  8DC5
 882  8DC5 3E 01        	ld a,1
 883  8DC7 32 1C 8C     	ld (Permiso_de_disparo_Amadeus),a
 884  8DCA
 885  8DCA C9           	ret
 886  8DCB
 887  8DCB              ; ----------------------------------------
 888  8DCB
 889  8DCB              ; RECARGA DE NUEVA OLEADA.
 890  8DCB
 891  8DCB              ;	ld a,(Contador_de_frames)
 892  8DCB              ;	ld b,a
 893  8DCB              ;	ld a,(Activa_recarga_cajas)
 894  8DCB              ;	cp b
 895  8DCB              ;	jr z,20F
 896  8DCB
 897  8DCB              ;	ld hl,Ctrl_1
 898  8DCB              ;	set 4,(hl)
 899  8DCB              ;	jp Main
 900  8DCB
 901  8DCB              ;20 ld hl,Ctrl_1
 902  8DCB              ;	res 4,(hl)
 903  8DCB
 904  8DCB              ;	ld a,(Contador_de_frames)
 905  8DCB
 906  8DCB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 907  8DCB              ;! _ IMPREDECIBLE !!!!
 908  8DCB
 909  8DCB              ;	add 10
 910  8DCB              ;	ld (Clock_next_entity),a
 911  8DCB
 912  8DCB              ;	jp 4B
 913  8DCB
 914  8DCB C9           	ret
 915  8DCC
 916  8DCC              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 917  8DCC              ;
 918  8DCC              ;	16/11/23
 919  8DCC
 920  8DCC              ;;Gestiona_Amadeus
 921  8DCC
 922  8DCC              ;! Activa/desactiva impacto con Amadeus.
 923  8DCC
 924  8DCC              ;	ld a,(Impacto)
 925  8DCC              ;	and a
 926  8DCC              ;	jr nz,2F
 927  8DCC
 928  8DCC              ;;	call Mov_Amadeus
 929  8DCC
 930  8DCC              ;;2 ld a,(Ctrl_0)
 931  8DCC              ;;	bit 4,a
 932  8DCC              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 933  8DCC
 934  8DCC              ;;	call Guarda_foto_entidad_a_pintar
 935  8DCC              ;;	call Guarda_datos_de_borrado_Amadeus
 936  8DCC
 937  8DCC              ;;1 ld hl,Ctrl_0
 938  8DCC              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 939  8DCC
 940  8DCC              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 941  8DCC
 942  8DCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 943  8DCC
 944  8DCC              ;	call Calcula_numero_de_disparotes
 945  8DCC
 946  8DCC              ;;	ret
 947  8DCC
 948  8DCC              ; -----------------------------
 949  8DCC              ;
 950  8DCC              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 951  8DCC              ;
 952  8DCC              ;	INPUTS: B a de estar a "0".
 953  8DCC
 954  8DCC              ;Prepara_Borra_sprites
 955  8DCC
 956  8DCC              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 957  8DCC              ;	ld a,l
 958  8DCC              ;	ret z
 959  8DCC
 960  8DCC              ;	srl a
 961  8DCC
 962  8DCC              ;2 sub 16
 963  8DCC              ;	jr z,1F
 964  8DCC              ;	inc b
 965  8DCC              ;	jr 2B
 966  8DCC
 967  8DCC              ;1 inc b
 968  8DCC
 969  8DCC              ;	exx
 970  8DCC              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 971  8DCC              ;	exx
 972  8DCC
 973  8DCC              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 974  8DCC              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 975  8DCC
 976  8DCC              ;	ret
 977  8DCC
 978  8DCC              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 979  8DCC              ;
 980  8DCC              ;	24/07/24
 981  8DCC
 982  8DCC              Reinicia_Amadeus
 983  8DCC
 984  8DCC              ;	Reinicia posición y estado.
 985  8DCC
 986  8DCC 21 CF 50     	ld hl,$50cf
 987  8DCF 22 73 89     	ld (p.imp.amadeus),hl
 988  8DD2 21 F0 E0     	ld hl,$e0f0
 989  8DD5 22 75 89     	ld (Pamm_Amadeus),hl
 990  8DD8 21 3D 00     	ld hl,$003d
 991  8DDB 22 77 89     	ld (Comm_Amadeus),hl
 992  8DDE
 993  8DDE              ;	limpiamos el álbum de borrado.
 994  8DDE
 995  8DDE 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
 996  8DE1
 997  8DE1 AF           	xor a
 998  8DE2 77           	ld (hl),a
 999  8DE3
1000  8DE3 E5           	push hl
1001  8DE4 D1           	pop de
1002  8DE5 13           	inc de
1003  8DE6
1004  8DE6 01 23 00     	ld bc,35
1005  8DE9 ED B0        	ldir
1006  8DEB
1007  8DEB CD 06 90     	call Genera_datos_de_impresion_Amadeus
1008  8DEE
1009  8DEE              ;	Reinicia temporizaciones.
1010  8DEE
1011  8DEE CD EA 90     	call Inicia_Shield
1012  8DF1
1013  8DF1 3E 5A        	ld a,90
1014  8DF3 32 52 8C     	ld (Shield),a
1015  8DF6
1016  8DF6 3E 64        	ld a,100
1017  8DF8 32 40 8C     	ld (Temp_new_live),a
1018  8DFB
1019  8DFB              ; 	Restauramos el FLAG: Amadeus vivo.
1020  8DFB
1021  8DFB 21 2C 8C     	ld hl,Ctrl_3
1022  8DFE CB B6        	res 6,(hl)
1023  8E00
1024  8E00              ;	Fuerza la impresión de la nave en el siguiente frame.
1025  8E00
1026  8E00 21 2C 8C      	ld hl,Ctrl_3
1027  8E03 CB EE        	set 5,(hl)
1028  8E05
1029  8E05 C9           	ret
1030  8E06
1031  8E06              ; --------------------------------------------------------------------------------------------------------------
1032  8E06              ;
1033  8E06              ;	12/05/24
1034  8E06
1035  8E06 3A C4 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1036  8E09 CB 27        	sla a
1037  8E0B 32 C4 8B     	ld (Velocidad),a
1038  8E0E E6 10        	and $10
1039  8E10 C8           	ret z
1040  8E11
1041  8E11              ; Restaura (Velocidad) a razón del nº de vueltas.
1042  8E11
1043  8E11 3A BC 8B     	ld a,(Contador_de_vueltas)
1044  8E14 CB 2F        	sra a
1045  8E16 CB 2F        	sra a
1046  8E18 32 C4 8B     	ld (Velocidad),a
1047  8E1B
1048  8E1B 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1049  8E1E 23           	inc hl
1050  8E1F 23           	inc hl
1051  8E20 23           	inc hl
1052  8E21 23           	inc hl
1053  8E22 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1054  8E25
1055  8E25 C9           	ret
1056  8E26
1057  8E26              ; --------------------------------------------------------------------------------------------------------------
1058  8E26              ;
1059  8E26              ;	25/08/24
1060  8E26
1061  8E26              Change
1062  8E26
1063  8E26 3A 23 8C     	ld a,(Switch)
1064  8E29 EE 01        	xor 1
1065  8E2B 32 23 8C     	ld (Switch),a
1066  8E2E 2A 0A 8C     	ld hl,(Album_de_pintado)
1067  8E31 ED 5B 0C 8C  	ld de,(Album_de_borrado)
1068  8E35 EB           	ex de,hl
1069  8E36 22 0A 8C     	ld (Album_de_pintado),hl
1070  8E39 22 26 8C     	ld (Scanlines_album_SP),hl
1071  8E3C ED 53 0C 8C  	ld (Album_de_borrado),de
1072  8E40 C9           	ret
1073  8E41
1074  8E41              Change_Amadeus
1075  8E41
1076  8E41 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1077  8E44 ED 5B 10 8C  	ld de,(Album_de_borrado_Amadeus)
1078  8E48 EB           	ex de,hl
1079  8E49 22 0E 8C     	ld (Album_de_pintado_Amadeus),hl
1080  8E4C ED 53 10 8C  	ld (Album_de_borrado_Amadeus),de
1081  8E50 C9           	ret
1082  8E51
1083  8E51              Change_Disparos
1084  8E51
1085  8E51              ;	Exclusiones:
1086  8E51
1087  8E51 3A 1A 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1088  8E54 A7           	and a
1089  8E55 C8           	ret z
1090  8E56
1091  8E56              ; -----
1092  8E56
1093  8E56 2A 12 8C     	ld hl,(Album_de_pintado_disparos)
1094  8E59 ED 5B 14 8C  	ld de,(Album_de_borrado_disparos)
1095  8E5D EB           	ex de,hl
1096  8E5E 22 12 8C     	ld (Album_de_pintado_disparos),hl
1097  8E61 ED 53 14 8C  	ld (Album_de_borrado_disparos),de
1098  8E65 22 16 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1099  8E68
1100  8E68 3A 18 8C     	ld a,(Num_de_bytes_album_de_disparos)
1101  8E6B 32 19 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1102  8E6E
1103  8E6E C9           	ret
1104  8E6F
1105  8E6F              ; ------------------------------------
1106  8E6F              ;
1107  8E6F              ; 1/05/24
1108  8E6F
1109  8E6F              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1110  8E6F              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1111  8E6F
1112  8E6F              ;	DESTRUYE: HL,DE,A
1113  8E6F              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1114  8E6F
1115  8E6F              ;	Variables implicadas: (RND_SP).
1116  8E6F
1117  8E6F              Extrae_numero_aleatorio_y_avanza
1118  8E6F
1119  8E6F 21 00 89     	ld hl,Tabla_de_pintado
1120  8E72 EB           	ex de,hl
1121  8E73 2A 41 8C     	ld hl,(RND_SP)
1122  8E76 EB           	ex de,hl
1123  8E77 A7           	and a
1124  8E78 ED 52        	sbc hl,de
1125  8E7A
1126  8E7A 2A 41 8C     	ld hl,(RND_SP)
1127  8E7D 20 06        	jr nz,1F
1128  8E7F
1129  8E7F              ; Sitúa HL al principio de la tabla de nº aleatorios.
1130  8E7F
1131  8E7F 21 F6 88     	ld hl,Numeros_aleatorios
1132  8E82 22 41 8C     	ld (RND_SP),HL
1133  8E85
1134  8E85              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1135  8E85
1136  8E85 7E           1 ld a,(hl)
1137  8E86 23           	inc hl
1138  8E87 22 41 8C     	ld (RND_SP),hl
1139  8E8A C9           	ret
1140  8E8B
1141  8E8B              ; ------------------------------------
1142  8E8B              ;
1143  8E8B              ; 1/05/24
1144  8E8B
1145  8E8B              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1146  8E8B              ; (1 a 4 segundos).
1147  8E8B              ; Actualizamos (Clock_next_entity) con A.
1148  8E8B
1149  8E8B              ;	DESTRUYE: A y B.
1150  8E8B              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1151  8E8B              ;			 Actualiza (Clock_next_entity) con A.
1152  8E8B
1153  8E8B              ;	Variables implicadas: (Clock_next_entity).
1154  8E8B
1155  8E8B              ; Notas:
1156  8E8B
1157  8E8B              ; 	$32 1 seg.
1158  8E8B              ; 	$64 2 seg.
1159  8E8B              ; 	$96 3 seg.
1160  8E8B              ; 	$c8 4 seg.
1161  8E8B              ; 	$fa 5 seg.
1162  8E8B
1163  8E8B              ; $ffff 1310,7 seg, 22 minutos.
1164  8E8B
1165  8E8B              ;	$0100  5 seg. aproximadamente.
1166  8E8B              ;	$0200 10 seg. aproximadamente.
1167  8E8B              ;	$0300 15 seg. aproximadamente.
1168  8E8B              ;	$0400 20 seg. aproximadamente.
1169  8E8B              ;	$0500 25 seg. aproximadamente.
1170  8E8B              ;	$0600 30 seg. aproximadamente.
1171  8E8B
1172  8E8B              Define_Clock_next_entity
1173  8E8B
1174  8E8B FE 34        	cp $34
1175  8E8D 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1176  8E8F
1177  8E8F              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1178  8E8F
1179  8E8F 4F           3 ld c,a
1180  8E90 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1181  8E92 2A 78 5C     	ld hl,(FRAMES)
1182  8E95 A7           	and a
1183  8E96 ED 4A        	adc hl,bc
1184  8E98 22 43 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1185  8E9B C9           	ret
1186  8E9C
1187  8E9C 3E 34        1 ld a,$34
1188  8E9E 18 EF        	jr 3B
1189  8EA0
1190  8EA0              ; ------------------------------------
1191  8EA0              ;
1192  8EA0              ; 18/03/24
1193  8EA0
1194  8EA0              Borra_diferencia
1195  8EA0
1196  8EA0 ED 4B 26 8C  	ld bc,(Scanlines_album_SP)
1197  8EA4
1198  8EA4 3A 23 8C     	ld a,(Switch)
1199  8EA7 A7           	and a
1200  8EA8 28 08        	jr z,2F
1201  8EAA
1202  8EAA 2A 21 8C     	ld hl,(Techo_Scanlines_album_2)
1203  8EAD 11 21 8C     	ld de,Techo_Scanlines_album_2
1204  8EB0 18 06        	jr 3F
1205  8EB2
1206  8EB2 2A 1F 8C     2 ld hl,(Techo_Scanlines_album)
1207  8EB5 11 1F 8C     	ld de,Techo_Scanlines_album
1208  8EB8
1209  8EB8              ; Diferencia.
1210  8EB8
1211  8EB8 ED 42        3 sbc hl,bc
1212  8EBA
1213  8EBA C8           	ret z
1214  8EBB D8           	ret c
1215  8EBC
1216  8EBC              ; Nuevo techo, (más bajo que el anterior).
1217  8EBC              ; Fijamos nuevo techo y borramos bytes sobrantes.
1218  8EBC
1219  8EBC EB           	ex de,hl
1220  8EBD
1221  8EBD 71           	ld (hl),c
1222  8EBE 2C           	inc l
1223  8EBF 70           	ld (hl),b
1224  8EC0
1225  8EC0 AF           	xor a
1226  8EC1 43           	ld b,e
1227  8EC2
1228  8EC2 2A 26 8C     	ld hl,(Scanlines_album_SP)
1229  8EC5
1230  8EC5 77           1 ld (hl),a
1231  8EC6 23           	inc hl
1232  8EC7 10 FC        	djnz 1B
1233  8EC9
1234  8EC9              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1235  8EC9
1236  8EC9 21 2C 8C     	ld hl,Ctrl_3
1237  8ECC CB DE        	set 3,(hl)
1238  8ECE
1239  8ECE C9           	ret
1240  8ECF
1241  8ECF              ; --------------------------------------------------------------------------------------------------------------
1242  8ECF              ;
1243  8ECF              ;	26/3/24
1244  8ECF
1245  8ECF              Recauda_informacion_de_entidad_en_curso
1246  8ECF
1247  8ECF              ; Almacena la Coordenada Y de la entidad en curso.
1248  8ECF
1249  8ECF              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1250  8ECF
1251  8ECF 3A BB 8B     	ld a,(Coordenada_y)
1252  8ED2 2A 28 8C     	ld hl,(India_SP)
1253  8ED5 77           	ld (hl),a
1254  8ED6 2C           	inc l
1255  8ED7
1256  8ED7              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1257  8ED7
1258  8ED7 ED 5B 26 8C  	ld de,(Scanlines_album_SP)
1259  8EDB
1260  8EDB 73           	ld (hl),e
1261  8EDC 2C           	inc l
1262  8EDD 72           	ld (hl),d
1263  8EDE 2C           	inc l
1264  8EDF
1265  8EDF 22 28 8C     	ld (India_SP),hl
1266  8EE2
1267  8EE2 C9           	ret
1268  8EE3
1269  8EE3              ; --------------------------------------------------------------------------------------------------------------
1270  8EE3              ;
1271  8EE3              ;	27/03/24
1272  8EE3              ;
1273  8EE3
1274  8EE3              Inicializa_India_y_limpia_Tabla_de_impresion
1275  8EE3
1276  8EE3 2A 28 8C     	ld hl,(India_SP)
1277  8EE6 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1278  8EE9
1279  8EE9 79           	ld a,c
1280  8EEA 95           	sub l
1281  8EEB 28 06        	jr z,2F
1282  8EED 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1283  8EEE              ;														; _ y pasamos a inicializar (India_SP).
1284  8EEE AF           	xor a
1285  8EEF
1286  8EEF 77           1 ld (hl),a
1287  8EF0 2C           	inc l
1288  8EF1 10 FC        	djnz 1B												; Limpia Tabla.
1289  8EF3
1290  8EF3 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1291  8EF6 22 28 8C     	ld (India_SP),hl
1292  8EF9
1293  8EF9 C9           	ret
1294  8EFA
1295  8EFA              ; --------------------------------------------------------------------------------------------------------------
1296  8EFA              ;
1297  8EFA              ;	31/3/24
1298  8EFA
1299  8EFA              Ordena_tabla_de_impresion
1300  8EFA
1301  8EFA              ; 5794 T/states.
1302  8EFA              ; 6278 T/states.
1303  8EFA              ; 5310 T/states.
1304  8EFA
1305  8EFA              ; Inicializamos punteros (India_SP) e (India_2_SP).
1306  8EFA              ; Inicializamos contador de comparaciones, [C].
1307  8EFA              ; Cargamos los registros A y B para efectuar comparación.
1308  8EFA
1309  8EFA FD 2E 00     	ld iyl,0
1310  8EFD
1311  8EFD 3A 01 8C     	ld a,(Entidades_en_curso)
1312  8F00 FE 04        	cp 4 	;	4
1313  8F02 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1314  8F03
1315  8F03 3D           	dec a
1316  8F04 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1317  8F05 51           	ld d,c 										; Copia de respaldo.
1318  8F06
1319  8F06 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1320  8F07
1321  8F07 21 03 89     	ld hl,Tabla_de_pintado+3
1322  8F0A 46           	ld b,(hl)
1323  8F0B 22 2A 8C     	ld (India_2_SP),hl
1324  8F0E
1325  8F0E B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1326  8F0F DC 37 8F     	call c, Avanza_India_2_SP
1327  8F12 CC 37 8F     	call z, Avanza_India_2_SP
1328  8F15
1329  8F15 FD 2D        	dec iyl
1330  8F17 28 18        	jr z,2F
1331  8F19
1332  8F19
1333  8F19              ; --------------------------------------------------------------------------------------------------------------
1334  8F19              ;
1335  8F19              ;	7/4/24
1336  8F19
1337  8F19              Trueque
1338  8F19
1339  8F19              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1340  8F19              ;  			A contiene en nº de fila de (India_SP).
1341  8F19              ;			HL contiene (India_2_SP).
1342  8F19
1343  8F19 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1344  8F1A E5           	push hl										; Preservo (India_2_SP).
1345  8F1B
1346  8F1B ED 5B 28 8C  	ld de,(India_SP)
1347  8F1F EB           	ex de,hl
1348  8F20 70           	ld (hl),b
1349  8F21 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1350  8F22
1351  8F22 CD 63 8F     	call Intercambia_1_byte
1352  8F25 CD 63 8F     	call Intercambia_1_byte
1353  8F28
1354  8F28
1355  8F28              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1356  8F28              ; Recuperamos (India_2_SP) en HL.
1357  8F28
1358  8F28 2A 28 8C     	ld hl,(India_SP)
1359  8F2B 7E           	ld a,(hl)
1360  8F2C
1361  8F2C E1           	pop hl
1362  8F2D D1           	pop de
1363  8F2E
1364  8F2E              ; --------------------------------------------------------------------------------------------------------------
1365  8F2E
1366  8F2E CD 37 8F     	call Avanza_India_2_SP
1367  8F31
1368  8F31 14           2 inc d
1369  8F32 15           	dec d
1370  8F33 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1371  8F34 18 D8        	jr 1B
1372  8F36
1373  8F36 C9           	ret
1374  8F37
1375  8F37              ; ----- ----- ----- ----- -----
1376  8F37
1377  8F37              Avanza_India_2_SP
1378  8F37
1379  8F37 0D           	dec c
1380  8F38 28 0A        	jr z,Avanza_punteros_indios
1381  8F3A
1382  8F3A FD 2C        	inc iyl
1383  8F3C
1384  8F3C 2C           	inc l
1385  8F3D 2C           	inc l
1386  8F3E 2C           	inc l
1387  8F3F
1388  8F3F 46           	ld b,(hl)
1389  8F40 22 2A 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1390  8F43
1391  8F43 C9           	ret
1392  8F44
1393  8F44              ; ----- ----- ----- ----- -----
1394  8F44
1395  8F44              Avanza_punteros_indios
1396  8F44
1397  8F44 15           	dec d
1398  8F45 28 15        	jr z,Prepara_salida
1399  8F47
1400  8F47 4A           	ld c,d
1401  8F48
1402  8F48 2A 28 8C     	ld hl,(India_SP)
1403  8F4B 2C           	inc l
1404  8F4C 2C           	inc l
1405  8F4D 2C           	inc l
1406  8F4E 7E           	ld a,(hl)
1407  8F4F 22 28 8C     	ld (India_SP),hl
1408  8F52
1409  8F52 2C           	inc l
1410  8F53 2C           	inc l
1411  8F54 2C           	inc l
1412  8F55 46           	ld b,(hl)
1413  8F56 22 2A 8C     	ld (India_2_SP),hl
1414  8F59
1415  8F59 FD 2C        	inc iyl
1416  8F5B
1417  8F5B C9           	ret
1418  8F5C
1419  8F5C              Prepara_salida
1420  8F5C
1421  8F5C 21 00 89     	ld hl,Tabla_de_pintado
1422  8F5F 22 28 8C     	ld (India_SP),hl
1423  8F62 C9           	ret
1424  8F63
1425  8F63
1426  8F63 2C           Intercambia_1_byte inc l
1427  8F64 1C           	inc e
1428  8F65 46           	ld b,(hl)
1429  8F66 1A           	ld a,(de)
1430  8F67 EB           	ex de,hl
1431  8F68 70           	ld (hl),b
1432  8F69 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1433  8F6A C9           	ret
1434  8F6B
1435  8F6B              ; -----------------------------------------------------------------------------------
1436  8F6B              ;
1437  8F6B              ;	20/01/24
1438  8F6B              ;
1439  8F6B              ;
1440  8F6B
1441  8F6B              Construye_movimientos_masticados_entidad
1442  8F6B
1443  8F6B 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1444  8F6E E5           	push hl
1445  8F6F CD B2 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1446  8F72              ;															; _ el (Contador_de_mov_masticados).
1447  8F72 CD 82 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1448  8F75              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1449  8F75 CD AF 99     	call Recompone_posicion_inicio
1450  8F78
1451  8F78 CD DF 96     1 call Draw
1452  8F7B CD 97 8F     	call Guarda_movimiento_masticado
1453  8F7E
1454  8F7E CD 5C 9D     	call Movimiento
1455  8F81
1456  8F81 3A 2C 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1457  8F84 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1458  8F86 28 F0        	jr z,1B
1459  8F88
1460  8F88              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1461  8F88              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1462  8F88
1463  8F88 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1464  8F89 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1465  8F8C
1466  8F8C              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1467  8F8C
1468  8F8C CD C0 9E     	call Situa_en_contador_general_de_mov_masticados
1469  8F8F
1470  8F8F              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1471  8F8F              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1472  8F8F
1473  8F8F ED 4B C2 8B  	ld bc,(Contador_de_mov_masticados)
1474  8F93
1475  8F93 71           	ld (hl),c
1476  8F94 23           	inc hl
1477  8F95 70           	ld (hl),b
1478  8F96
1479  8F96 C9           	ret
1480  8F97
1481  8F97              ; -----------------------------------------------------------------------------------
1482  8F97              ;
1483  8F97              ;	28/12/23
1484  8F97              ;
1485  8F97              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1486  8F97              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1487  8F97
1488  8F97              Guarda_movimiento_masticado
1489  8F97
1490  8F97 ED 73 06 8C  	ld (Stack),sp
1491  8F9B ED 7B C0 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1492  8F9F
1493  8F9F DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1494  8FA1 FD E5            push iy 												; Pushea Puntero_objeto.
1495  8FA3
1496  8FA3 ED 7B 06 8C      ld sp,(Stack)
1497  8FA7
1498  8FA7 2A C2 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1499  8FAA 23           	inc hl
1500  8FAB 22 C2 8B     	ld (Contador_de_mov_masticados),hl
1501  8FAE
1502  8FAE CD B2 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1503  8FB1              ;															; _ el (Contador_de_mov_masticados).
1504  8FB1 C9               ret
1505  8FB2
1506  8FB2              ; --------------------------------------------------------------------------------------------------------------
1507  8FB2              ;
1508  8FB2              ;	12/1/24
1509  8FB2              ;
1510  8FB2              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1511  8FB2
1512  8FB2              Actualiza_Puntero_de_almacen_de_mov_masticados
1513  8FB2
1514  8FB2 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1515  8FB5 01 04 00     	ld bc,4
1516  8FB8 A7           	and a
1517  8FB9 ED 4A        	adc hl,bc
1518  8FBB 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1519  8FBE C9           	ret
1520  8FBF
1521  8FBF              ; --------------------------------------------------------------------------------------------------------------
1522  8FBF              ;
1523  8FBF              ;	24/03/24
1524  8FBF              ;
1525  8FBF              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1526  8FBF              ;
1527  8FBF              ;	IX contiene el puntero de impresión.
1528  8FBF              ;	DE contiene (Puntero_objeto).
1529  8FBF
1530  8FBF
1531  8FBF              Cargamos_registros_con_mov_masticado
1532  8FBF
1533  8FBF ED 73 06 8C  	ld (Stack),sp
1534  8FC3 ED 7B C0 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1535  8FC7
1536  8FC7 D1           	pop de 															; DE contiene Puntero_objeto
1537  8FC8 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1538  8FCA
1539  8FCA ED 73 C0 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1540  8FCE ED 7B 06 8C  	ld sp,(Stack)
1541  8FD2
1542  8FD2 7B           	ld a,e
1543  8FD3 82           	add d															; Comprueba si ya no hay datos en el almacén.
1544  8FD4
1545  8FD4 CC 72 93     	call z,Reinicia_entidad_maliciosa
1546  8FD7
1547  8FD7 C9           	ret
1548  8FD8
1549  8FD8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1550  8FD8              ;
1551  8FD8              ;	22/7/24
1552  8FD8
1553  8FD8              Cargamos_registros_con_explosion
1554  8FD8
1555  8FD8
1556  8FD8 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1557  8FDB CD 7C 90     	call Extrae_address
1558  8FDE
1559  8FDE 5D           	ld e,l
1560  8FDF 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1561  8FE0
1562  8FE0 DD 2A BE 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1563  8FE4
1564  8FE4 C9           	ret
1565  8FE5
1566  8FE5
1567  8FE5              Cargamos_registros_con_explosion_Amadeus
1568  8FE5
1569  8FE5 2A 75 89     	ld hl,(Pamm_Amadeus)
1570  8FE8 CD 7C 90     	call Extrae_address
1571  8FEB
1572  8FEB 5D           	ld e,l
1573  8FEC 54           	ld d,h
1574  8FED
1575  8FED DD 2A 73 89  	ld ix,(p.imp.amadeus)
1576  8FF1
1577  8FF1 C9           	ret
1578  8FF2
1579  8FF2              ; --------------------------------------------------------------------------------------------------------------
1580  8FF2              ;
1581  8FF2              ;	17/06/24
1582  8FF2              ;
1583  8FF2              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1584  8FF2              ;
1585  8FF2              ;	IX contiene el puntero de impresión.
1586  8FF2              ;	DE contiene (Puntero_objeto).
1587  8FF2
1588  8FF2
1589  8FF2              Cargamos_registros_con_mov_masticado_Amadeus
1590  8FF2
1591  8FF2 ED 73 06 8C  	ld (Stack),sp
1592  8FF6 ED 7B 75 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1593  8FFA D1           	pop de 															; DE contiene Puntero_objeto
1594  8FFB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1595  8FFD DD 22 73 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1596  9001 ED 7B 06 8C  	ld sp,(Stack)
1597  9005 C9           	ret
1598  9006
1599  9006              ; ---------------------------------------------------------------------------------------------------------------------
1600  9006              ;
1601  9006              ;	18/6/24
1602  9006              ;
1603  9006              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1604  9006
1605  9006              Genera_datos_de_impresion_Amadeus
1606  9006
1607  9006 3A 72 89     	ld a,(Impacto_Amadeus)
1608  9009 A7           	and a
1609  900A 20 03        	jr nz,1F
1610  900C
1611  900C              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1612  900C              ; _apuntando a la correspondiente explosión.
1613  900C
1614  900C CD F2 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1615  900F
1616  900F DD 7D        1 ld a,ixl
1617  9011 E6 1F        	and $1f
1618  9013 32 6F 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1619  9016
1620  9016 2A 26 8C     	ld hl,(Scanlines_album_SP)
1621  9019 E5           	push hl
1622  901A
1623  901A 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1624  901D 22 26 8C     	ld (Scanlines_album_SP),hl
1625  9020
1626  9020 CD C7 94     	call Genera_datos_de_impresion
1627  9023
1628  9023 E1           	pop hl
1629  9024 22 26 8C     	ld (Scanlines_album_SP),hl
1630  9027
1631  9027 C9           	ret
1632  9028
1633  9028              ; ---------------------------------------------------------------------------------------------------------------------
1634  9028              ;
1635  9028              ;	13/03/24
1636  9028              ;
1637  9028              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1638  9028
1639  9028              Inicia_albumes_de_lineas
1640  9028
1641  9028 21 00 80     	ld hl,Scanlines_album
1642  902B 22 0A 8C     	ld (Album_de_pintado),hl
1643  902E 22 26 8C     	ld (Scanlines_album_SP),hl
1644  9031
1645  9031 21 1A 81     	ld hl,Scanlines_album_2
1646  9034 22 0C 8C     	ld (Album_de_borrado),hl
1647  9037
1648  9037 C9           	ret
1649  9038
1650  9038              Inicia_albumes_de_lineas_Amadeus
1651  9038
1652  9038 21 34 82     	ld hl,Amadeus_scanlines_album
1653  903B 22 0E 8C     	ld (Album_de_pintado_Amadeus),hl
1654  903E 21 58 82     	ld hl,Amadeus_scanlines_album_2
1655  9041 22 10 8C     	ld (Album_de_borrado_Amadeus),hl
1656  9044
1657  9044 C9           	ret
1658  9045
1659  9045              Inicia_albumes_de_disparos
1660  9045
1661  9045 21 7C 82     	ld hl,Disparos_scanlines_album
1662  9048 22 12 8C     	ld (Album_de_pintado_disparos),hl
1663  904B 21 8E 82     	ld hl,Disparos_scanlines_album_2
1664  904E 22 14 8C     	ld (Album_de_borrado_disparos),hl
1665  9051
1666  9051 21 7C 82     	ld hl,Disparos_scanlines_album
1667  9054 22 16 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1668  9057
1669  9057 C9           	ret
1670  9058
1671  9058              ; ---------------------------------------------------------------------------------------------------------------------
1672  9058              ;
1673  9058              ; 8/1/23
1674  9058              ;
1675  9058              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1676  9058              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1677  9058              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1678  9058
1679  9058              ; Destruye HL y DE !!!!!
1680  9058
1681  9058              Inicia_punteros_de_cajas
1682  9058
1683  9058 21 5C 89     	ld hl,Indice_de_cajas_de_entidades
1684  905B CD 7C 90         call Extrae_address
1685  905E 22 F9 8B         ld (Puntero_store_caja),hl
1686  9061 21 5E 89     	ld hl,Indice_de_cajas_de_entidades+2
1687  9064 22 FD 8B     	ld (Indice_restore_caja),hl
1688  9067 CD 7C 90     	call Extrae_address
1689  906A 22 FB 8B     	ld (Puntero_restore_caja),hl
1690  906D C9               ret
1691  906E
1692  906E              ; *************************************************************************************************************************************************************
1693  906E              ;
1694  906E              ; 8/1/23
1695  906E              ;
1696  906E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1697  906E
1698  906E 21 2B 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1699  9071 22 2F 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1700  9074 C9           	ret
1701  9075 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1702  9078 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1703  907B C9           	ret
1704  907C
1705  907C              ; *************************************************************************************************************************************************************
1706  907C              ;
1707  907C              ; 20/10/22
1708  907C              ;
1709  907C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1710  907C              ;
1711  907C              ; Destruye el puntero y DE !!!!!
1712  907C
1713  907C 5E           Extrae_address ld e,(hl)
1714  907D 23           	inc hl
1715  907E 56           	ld d,(hl)
1716  907F 2B           	dec hl
1717  9080 EB           	ex de,hl
1718  9081 C9           	ret
1719  9082
1720  9082              ; *************************************************************************************************************************************************************
1721  9082              ;
1722  9082              ;	20/1/24
1723  9082              ;
1724  9082              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1725  9082              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1726  9082              ;
1727  9082              ;   Destruye HL y BC !!!!!,
1728  9082              ;
1729  9082              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1730  9082              ;					"0" ..... Izquierda.
1731  9082
1732  9082              Inicia_Puntero_objeto
1733  9082
1734  9082 3A D8 8B     	ld a,(Cuad_objeto)
1735  9085 E6 01        	and 1
1736  9087 F5           	push af
1737  9088 CC A4 90     	call z,Inicia_puntero_objeto_izq
1738  908B F1           	pop af
1739  908C C8           	ret z
1740  908D CD 91 90     	call Inicia_puntero_objeto_der
1741  9090 C9           	ret
1742  9091
1743  9091              ; Arrancamos desde la parte izquierda de la pantalla.
1744  9091              ; Iniciamos (Indice_Sprite_der).
1745  9091
1746  9091 2A CE 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1747  9094 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
1748  9097 CD 7C 90     	call Extrae_address
1749  909A 22 CB 8B     	ld (Puntero_objeto),hl
1750  909D
1751  909D 2A D0 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1752  90A0 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
1753  90A3 C9           	ret
1754  90A4
1755  90A4              ; Arrancamos desde la parte derecha de la pantalla.
1756  90A4              ; Iniciamos (Indice_Sprite_izq).
1757  90A4
1758  90A4 2A D0 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1759  90A7 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
1760  90AA CD 7C 90     	call Extrae_address
1761  90AD 22 CB 8B     	ld (Puntero_objeto),hl
1762  90B0
1763  90B0 2A CE 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1764  90B3 22 D2 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1765  90B6 C9           	ret
1766  90B7
1767  90B7              ; **************************************************************************************************
1768  90B7              ;
1769  90B7              ;	06/07/24
1770  90B7              ;
1771  90B7              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1772  90B7
1773  90B7              Restore_entidad
1774  90B7
1775  90B7 2A F9 8B     	ld hl,(Puntero_store_caja)
1776  90BA 7E           	ld a,(hl)
1777  90BB A7           	and a
1778  90BC CC CA 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1779  90BF 28 F6        	jr z,Restore_entidad
1780  90C1
1781  90C1 11 B9 8B     	ld de,Bandeja_DRAW
1782  90C4 01 0C 00     	ld bc,12
1783  90C7 ED B0        	ldir
1784  90C9 C9           	ret
1785  90CA
1786  90CA              ; **************************************************************************************************
1787  90CA              ;
1788  90CA              ;	08/05/23
1789  90CA              ;
1790  90CA              ;	Incrementamos los dos punteros de entidades. (+1).
1791  90CA
1792  90CA              Incrementa_punteros_de_cajas
1793  90CA
1794  90CA 2A FB 8B     	ld hl,(Puntero_restore_caja)
1795  90CD 22 F9 8B     	ld (Puntero_store_caja),hl
1796  90D0 2A FD 8B     	ld hl,(Indice_restore_caja)
1797  90D3 23           	inc hl
1798  90D4 23           	inc hl
1799  90D5 22 FD 8B     	ld (Indice_restore_caja),hl
1800  90D8 CD 7C 90         call Extrae_address
1801  90DB 22 FB 8B         ld (Puntero_restore_caja),hl
1802  90DE C9               ret
1803  90DF
1804  90DF              ; -----------------------------------------------------------
1805  90DF
1806  90DF              ; Teclado.
1807  90DF
1808  90DF 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1809  90E1 DB FE        	in a,($fe)
1810  90E3 E6 01        	and $01
1811  90E5 28 02        	jr z,1f
1812  90E7 18 F6        	jr Pulsa_ENTER
1813  90E9 C9           1 ret
1814  90EA
1815  90EA              ; **************************************************************************************************
1816  90EA              ;
1817  90EA              ; Temporización.
1818  90EA
1819  90EA              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1820  90EA              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1821  90EA              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1822  90EA              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1823  90EA
1824  90EA              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1825  90EA              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1826  90EA              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1827  90EA
1828  90EA              ; A partir de $4f61 no hace falta DELAY.
1829  90EA
1830  90EA              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1831  90EA
1832  90EA              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1833  90EA              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1834  90EA              ;	LD A,B
1835  90EA              ;	AND A
1836  90EA              ;	JR NZ,wait
1837  90EA              ;	RET
1838  90EA
1839  90EA              ; ---------------------------------------------------------------------------------------------------------------
1840  90EA              ;
1841  90EA              ;	13/07/24
1842  90EA              ;
1843  90EA
1844  90EA              Inicia_Shield
1845  90EA
1846  90EA 21 4C 8C     	ld hl,Datos_Shield
1847  90ED 22 50 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1848  90F0
1849  90F0 7E           	ld a,(hl)
1850  90F1 32 53 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1851  90F4
1852  90F4 3E 01        	ld a,1
1853  90F6 32 54 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1854  90F9
1855  90F9 C9           	ret
1856  90FA
1857  90FA              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1858  90FA              ;
1859  90FA              ;	4/6/24
1860  90FA              ;
1861  90FA              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1862  90FA              ;
1863  90FA              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1864  90FA              ;
1865  90FA
1866  90FA              Actualiza_pantalla
1867  90FA
1868  90FA 3E 02        	ld a,2
1869  90FC D3 FE        	out ($fe),a
1870  90FE
1871  90FE 3A 2C 8C     	ld a,(Ctrl_3)
1872  9101 CB 57        	bit 2,a
1873  9103 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1874  9105
1875  9105              Borrando_entidades
1876  9105
1877  9105 2A 26 8C     	ld hl,(Scanlines_album_SP)
1878  9108 CD 7C 90     	call Extrae_address
1879  910B 24           	inc h
1880  910C 25           	dec h
1881  910D 28 05        	jr z,Pintando_entidades
1882  910F CD BC 95     	call Pinta_Sprites
1883  9112 18 F1        	jr Borrando_entidades
1884  9114
1885  9114              Pintando_entidades
1886  9114
1887  9114 2A 28 8C     	ld hl,(India_SP)
1888  9117 2C           	inc l
1889  9118 CD 7C 90     	call Extrae_address
1890  911B 24           	inc h
1891  911C 25           	dec h
1892  911D 28 0E        	jr z,Ejecuta_escudo
1893  911F 1C           	inc e
1894  9120 1C           	inc e
1895  9121 ED 53 28 8C  	ld (India_SP),de
1896  9125 CD 7C 90     	call Extrae_address
1897  9128 CD BC 95     	call Pinta_Sprites
1898  912B 18 E7        	jr Pintando_entidades
1899  912D
1900  912D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1901  912D
1902  912D              Ejecuta_escudo
1903  912D
1904  912D 3A 52 8C     	ld a,(Shield)
1905  9130 A7           	and a
1906  9131 20 2F        	jr nz,Aplica_Shield
1907  9133
1908  9133              Borrando_Amadeus
1909  9133
1910  9133 21 2C 8C     	ld hl,Ctrl_3
1911  9136 CB 6E        	bit 5,(hl)
1912  9138 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1913  913A
1914  913A 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
1915  913D CD 7C 90     	call Extrae_address
1916  9140 24           	inc h
1917  9141 25           	dec h
1918  9142 28 03        	jr z,Pintando_Amadeus
1919  9144 CD BC 95     	call Pinta_Sprites
1920  9147
1921  9147              Pintando_Amadeus
1922  9147
1923  9147 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1924  914A CD 7C 90     	call Extrae_address
1925  914D 24           	inc h
1926  914E 25           	dec h
1927  914F 28 03        	jr z,1F
1928  9151 CD BC 95     	call Pinta_Sprites
1929  9154
1930  9154              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1931  9154
1932  9154 21 2C 8C     1 ld hl,Ctrl_3
1933  9157 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1934  9159 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1935  915B CB AE        	res 5,(hl)
1936  915D
1937  915D 3E 01        	ld a,1												; Borde azul.
1938  915F D3 FE        	out ($fe),a
1939  9161
1940  9161 C9           	ret
1941  9162
1942  9162              Aplica_Shield
1943  9162
1944  9162              ;	Bit 1 "1" (Shield_3) Sólo borra.
1945  9162              ;		  "0"     ""     Borra/Pinta.
1946  9162              ;	Bit 2    ""  RET.	 No borra, no pinta.
1947  9162
1948  9162 21 54 8C     	ld hl,Shield_3
1949  9165
1950  9165 CB 5E        	bit 3,(hl)
1951  9167 20 DE        	jr nz,Pintando_Amadeus
1952  9169
1953  9169 CB 56        	bit 2,(hl)
1954  916B 20 E7        	jr nz,1B
1955  916D
1956  916D CB 4E        	bit 1,(hl)
1957  916F C4 76 91     	call nz,Borra_Amadeus_shield
1958  9172
1959  9172 28 BF        	jr z,Borrando_Amadeus
1960  9174 18 DE        	jr 1B
1961  9176
1962  9176              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1963  9176
1964  9176              Borra_Amadeus_shield
1965  9176
1966  9176 3A 2C 8C     	ld a,(Ctrl_3)
1967  9179 CB 6F        	bit 5,a
1968  917B 28 08        	jr z,1F
1969  917D
1970  917D 2A 10 8C     	ld hl,(Album_de_borrado_Amadeus)
1971  9180 CD 7C 90     	call Extrae_address
1972  9183 18 06        	jr 2F
1973  9185
1974  9185 2A 0E 8C     1 ld hl,(Album_de_pintado_Amadeus)
1975  9188 CD 7C 90     	call Extrae_address
1976  918B
1977  918B CD BC 95     2 call Pinta_Sprites
1978  918E
1979  918E AF           	xor a
1980  918F 3C           	inc a											; Asegura NZ en la salida de la rutina.
1981  9190
1982  9190 C9           	ret
1983  9191
1984  9191              Pinta_Amadeus_shield
1985  9191
1986  9191 2A 0E 8C     	ld hl,(Album_de_pintado_Amadeus)
1987  9194 CD 7C 90     	call Extrae_address
1988  9197 CD BC 95     	call Pinta_Sprites
1989  919A
1990  919A AF           	xor a
1991  919B 3C           	inc a											; Asegura NZ en la salida de la rutina.
1992  919C
1993  919C C9           	ret
1994  919D
1995  919D              Borra_Pinta_Amadeus_shield
1996  919D
1997  919D CD 76 91     	call Borra_Amadeus_shield
1998  91A0 CD 91 91     	call Pinta_Amadeus_shield
1999  91A3 C9           	ret
2000  91A4
2001  91A4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2002  91A4              ;
2003  91A4              ;	19/6/24
2004  91A4              ;
2005  91A4
2006  91A4              Teclado
2007  91A4
2008  91A4              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2009  91A4
2010  91A4 3E F7        	ld a,$f7												; "5" para disparar.
2011  91A6 DB FE        	in a,($fe)
2012  91A8 E6 10        	and $10
2013  91AA
2014  91AA CC 50 A0     	call z,Genera_disparo_Amadeus
2015  91AD
2016  91AD 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2017  91AF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2018  91B1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2019  91B3 CC 29 9D         call z,Amadeus_a_izquierda
2020  91B6
2021  91B6 3E F7        	ld a,$f7
2022  91B8 DB FE        	in a,($fe)
2023  91BA E6 01        	and $01
2024  91BC C8           	ret z
2025  91BD
2026  91BD 3E F7        	ld a,$f7
2027  91BF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2028  91C1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2029  91C3 CC 41 9D     	call z,Amadeus_a_derecha
2030  91C6
2031  91C6 C9           	ret
2032  91C7
2033  91C7              ; ------------------------------------------------------------------------------------------------------------------------
2034  91C7              ;
2035  91C7              ;	06/07/24
2036  91C7              ;
2037  91C7
2038  91C7              Genera_explosion
2039  91C7
2040  91C7 21 3E 8C     	ld hl,Clock_explosion
2041  91CA 35           	dec (hl)
2042  91CB 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2043  91CD
2044  91CD              Borra_entidad_colisionada
2045  91CD
2046  91CD CD CF 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2047  91D0 CD D8 8F     	call Cargamos_registros_con_explosion
2048  91D3 CD C7 94     	call Genera_datos_de_impresion
2049  91D6
2050  91D6 AF           	xor a
2051  91D7 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2052  91D8
2053  91D8 C9           	ret
2054  91D9
2055  91D9              Siguiente_frame_explosion
2056  91D9
2057  91D9 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2058  91DB
2059  91DB              ; Avanza Frame de explosión.
2060  91DB
2061  91DB 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2062  91DE 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2063  91E1
2064  91E1 79           	ld a,c
2065  91E2 95           	sub l
2066  91E3 20 0B        	jr nz,1F
2067  91E5
2068  91E5              ; Fín de la entidad !!!!!!!!!!!!!
2069  91E5
2070  91E5 21 00 8C     	ld hl,Numero_parcial_de_entidades
2071  91E8 35           	dec (hl)
2072  91E9 23           	inc hl
2073  91EA 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2074  91EB
2075  91EB CD 47 93     	call Limpiamos_bandeja_DRAW
2076  91EE 18 DD        	jr Borra_entidad_colisionada
2077  91F0
2078  91F0 23           1 inc hl
2079  91F1 23           	inc hl
2080  91F2 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2081  91F5 18 D6        	jr Borra_entidad_colisionada
2082  91F7
2083  91F7              ; ----- ----- ----- ----- -----
2084  91F7
2085  91F7              Genera_explosion_Amadeus
2086  91F7
2087  91F7 21 3F 8C     	ld hl,Clock_explosion_Amadeus
2088  91FA 35           	dec (hl)
2089  91FB 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2090  91FD
2091  91FD              Borra_Amadeus_impactado
2092  91FD
2093  91FD CD 41 8E     	call Change_Amadeus
2094  9200 CD E5 8F     	call Cargamos_registros_con_explosion_Amadeus
2095  9203 CD 06 90     	call Genera_datos_de_impresion_Amadeus
2096  9206
2097  9206 21 2C 8C     	ld hl,Ctrl_3
2098  9209 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2099  920B
2100  920B AF           	xor a
2101  920C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2102  920D
2103  920D C9           	ret
2104  920E
2105  920E              Siguiente_frame_explosion_Amadeus
2106  920E
2107  920E 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2108  9210
2109  9210              ; Avanza Frame de explosión.
2110  9210
2111  9210 2A 75 89     	ld hl,(Pamm_Amadeus)
2112  9213 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2113  9216
2114  9216 79           	ld a,c
2115  9217 95           	sub l
2116  9218 20 0B        	jr nz,1F
2117  921A
2118  921A              ; Fín de Amadeus !!!!!!!!!!!!!
2119  921A              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2120  921A
2121  921A AF           	xor a
2122  921B 32 72 89     	ld (Impacto_Amadeus),a
2123  921E 21 2C 8C     	ld hl,Ctrl_3
2124  9221 CB F6        	set 6,(hl)
2125  9223
2126  9223 18 D8        	jr Borra_Amadeus_impactado
2127  9225
2128  9225 23           1 inc hl
2129  9226 23           	inc hl
2130  9227 22 75 89     	ld (Pamm_Amadeus),hl
2131  922A 18 D1        	jr Borra_Amadeus_impactado
2132  922C
2133  922C              ; ---------------------------------------------------------------
2134  922C
2135  922C              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 922C              ; ******************************************************************************************************************************************************************************************
   2+ 922C              ;
   3+ 922C              ;   21/04/24
   4+ 922C              ;
   5+ 922C              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 922C              ;   (XOR) bit a bit.
   7+ 922C              ;
   8+ 922C              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 922C
  10+ 922C              Derivando_RND
  11+ 922C
  12+ 922C 21 F6 88         ld hl,Numeros_aleatorios
  13+ 922F
  14+ 922F ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9231 C5               push bc
  16+ 9232              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9232 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9235              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9235
  20+ 9235 A7           6 and a                                 ; Carry a "0".
  21+ 9236 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9238 30 02            jr nc,1F
  23+ 923A
  24+ 923A CB C1            set 0,c
  25+ 923C
  26+ 923C 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 923D E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 923F 5F               ld e,a
  29+ 9240
  30+ 9240 7A               ld a,d
  31+ 9241 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9243 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9245
  34+ 9245 CB 3F            srl a
  35+ 9247
  36+ 9247 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9248
  38+ 9248 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9249 28 04            jr z,4F
  40+ 924B
  41+ 924B CB FF            set 7,a
  42+ 924D 18 02            jr 5F
  43+ 924F
  44+ 924F CB BF        4 res 7,a
  45+ 9251
  46+ 9251 CB 21        5 sla c
  47+ 9253 10 E0            djnz 6B
  48+ 9255
  49+ 9255 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9256
  51+ 9256 77               ld (hl),a
  52+ 9257 23               inc hl
  53+ 9258 C1               pop bc
  54+ 9259 10 D4            djnz 3B
  55+ 925B
  56+ 925B C9               ret
  57+ 925C
  58+ 925C
  59+ 925C
# file closed: RND_Derivando.asm
2136  925C              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 925C              ;---------------------------------------------------------------------------------------------------------------
   2+ 925C              ;
   3+ 925C              ;   8/3/24
   4+ 925C              ;
   5+ 925C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 925C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 925C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 925C              ;	_ de la 1ª entidad del Nivel.
   9+ 925C              ;
  10+ 925C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 925C
  12+ 925C              ;	MODIFICA: HL,DE y A.
  13+ 925C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 925C
  15+ 925C              Inicializa_Nivel
  16+ 925C
  17+ 925C 2A 48 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 925F CD 7C 90     	call Extrae_address
  19+ 9262 7E           	ld a,(hl)
  20+ 9263 32 FF 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9266 23           	inc hl
  22+ 9267 CD 74 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 926A 22 4A 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 926D CD 7D 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9270
  26+ 9270 CD 8E 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9273 C9           	ret
  28+ 9274
  29+ 9274              ; ----------------------
  30+ 9274
  31+ 9274 11 DE 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9277 01 04 00     	ld bc,4
  33+ 927A ED B0        	ldir
  34+ 927C C9           	ret
  35+ 927D
  36+ 927D 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 927E CD 18 94         call Calcula_salto_en_BC
  38+ 9281 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9284 A7               and a
  40+ 9285 ED 4A            adc hl,bc
  41+ 9287 CD 7C 90         call Extrae_address
  42+ 928A 22 EA 8B         ld (Puntero_indice_mov),hl
  43+ 928D C9               ret
  44+ 928E
  45+ 928E 3A B9 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9291 CD 18 94     	call Calcula_salto_en_BC
  47+ 9294 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9297 A7               and a
  49+ 9298 ED 4A            adc hl,bc
  50+ 929A CD 7C 90         call Extrae_address
  51+ 929D 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92A0 C9           	ret
  53+ 92A1
  54+ 92A1              ;---------------------------------------------------------------------------------------------------------------
  55+ 92A1              ;
  56+ 92A1              ;   5/1/24
  57+ 92A1              ;
  58+ 92A1              ;	Destruye A,BC,HL,DE
  59+ 92A1
  60+ 92A1              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92A1              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92A1
  63+ 92A1              Inicia_Entidades
  64+ 92A1
  65+ 92A1              ; Preparamos los punteros de las cajas de entidades:
  66+ 92A1
  67+ 92A1 CD 58 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92A4              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92A4 CD 60 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92A7
  71+ 92A7 2A 4A 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92AA
  73+ 92AA 22 4A 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92AD
  75+ 92AD CD C6 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92B0
  77+ 92B0 2A 4A 8C     	ld hl,(Datos_de_nivel)
  78+ 92B3
  79+ 92B3              ; En este punto:
  80+ 92B3              ;
  81+ 92B3              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92B3              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92B3
  84+ 92B3 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92B4
  86+ 92B4 7E           	ld a,(hl)
  87+ 92B5 CD 32 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92B8
  89+ 92B8 CD 2A 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92BB
  91+ 92BB              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92BB
  93+ 92BB CD E8 93     	call Busca_mov_masticados_segun_tipo
  94+ 92BE
  95+ 92BE A7           	and a
  96+ 92BF 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92C1
  98+ 92C1              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92C1
 100+ 92C1              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92C1              ;	_ de este tipo de entidad.
 102+ 92C1
 103+ 92C1 CD C0 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92C4 CD CD 9E     	call Transfiere_datos_de_contadores
 105+ 92C7
 106+ 92C7 18 06        	jr 4F
 107+ 92C9
 108+ 92C9 CD 6B 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92CC
 110+ 92CC              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92CC              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92CC              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92CC              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92CC              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92CC
 116+ 92CC CD A6 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92CF              ;																; _ Mov_masticados ya generados.
 118+ 92CF
 119+ 92CF CD BF 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92D2
 121+ 92D2 DD E5        	push ix
 122+ 92D4 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92D5
 124+ 92D5 D5           	push de
 125+ 92D6 CD 9B 94     	call Genera_coordenadas
 126+ 92D9
 127+ 92D9 ED 5B 26 8C  	ld de,(Scanlines_album_SP)
 128+ 92DD CD CF 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92E0 D1           	pop de
 130+ 92E1
 131+ 92E1 CD C7 94     	call Genera_datos_de_impresion
 132+ 92E4              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92E4              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92E4              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92E4              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92E4
 137+ 92E4 CD 6A 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92E7
 139+ 92E7              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92E7
 141+ 92E7 ED 5B F9 8B  	ld de,(Puntero_store_caja)
 142+ 92EB CD 57 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92EE
 144+ 92EE CD 47 93     	call Limpiamos_bandeja_DRAW
 145+ 92F1 CD CA 90     	call Incrementa_punteros_de_cajas
 146+ 92F4
 147+ 92F4              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92F4              ; _ entidad del Nivel.
 149+ 92F4
 150+ 92F4 3A 2D 8C     	ld a,(Ctrl_4)
 151+ 92F7 E6 F0        	and $f0
 152+ 92F9 32 2D 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92FC
 154+ 92FC              ; Siguiente entidad del Nivel.
 155+ 92FC
 156+ 92FC 2A 4A 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92FF 23           	inc hl 														; _ entidad del Nivel.
 158+ 9300
 159+ 9300 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9301
 161+ 9301 10 A7        	djnz 2B
 162+ 9303
 163+ 9303 C9           	ret
 164+ 9304
 165+ 9304              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9304              ;
 167+ 9304              ;	27/5/24
 168+ 9304              ;
 169+ 9304              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9304              ;
 171+ 9304
 172+ 9304              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9304              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9304
 175+ 9304 21 EC 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9307 CD 2A 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 930A
 178+ 930A
 179+ 930A              Construye_movimientos_masticados_Amadeus
 180+ 930A
 181+ 930A 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 930D CD B2 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9310              ;															; _ el (Contador_de_mov_masticados).
 184+ 9310 CD 82 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9313              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9313
 187+ 9313              ; Generamos movimientos masticados de Amadeus.
 188+ 9313
 189+ 9313 06 79        	ld b,121												; $0079, 121d.
 190+ 9315
 191+ 9315 C5           1 push bc
 192+ 9316 CD DF 96     	call Draw
 193+ 9319 CD 97 8F     	call Guarda_movimiento_masticado
 194+ 931C
 195+ 931C CD 53 9A     	call Mov_right
 196+ 931F CD 53 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9322
 198+ 9322 C1           	pop bc
 199+ 9323 10 F0        	djnz 1B
 200+ 9325
 201+ 9325              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9325
 203+ 9325              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9325              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9325
 206+ 9325 2A C0 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9328 01 08 00     	ld bc,8
 208+ 932B A7           	and a
 209+ 932C ED 42        	sbc hl,bc
 210+ 932E 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9331
 212+ 9331 C9           	ret
 213+ 9332
 214+ 9332              ; ---------------------------------------------------------------------
 215+ 9332              ;
 216+ 9332              ;	10/02/24
 217+ 9332              ;
 218+ 9332              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9332              ;
 220+ 9332              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9332
 222+ 9332              Definicion_segun_tipo
 223+ 9332
 224+ 9332 CD 18 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9335 21 CE 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9338 CD 20 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 933B C9           	ret
 228+ 933C
 229+ 933C              ; ---------------------------------------------------------------------
 230+ 933C              ;
 231+ 933C              ;	6/7/24
 232+ 933C
 233+ 933C
 234+ 933C              Store_Restore_cajas
 235+ 933C
 236+ 933C ED 5B F9 8B  	ld de,(Puntero_store_caja)
 237+ 9340 CD 57 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9343 CD CA 90     	call Incrementa_punteros_de_cajas
 239+ 9346 C9           	ret
 240+ 9347
 241+ 9347              ; ---------------------------------------------------------------------
 242+ 9347              ;
 243+ 9347              ;	23/6/24
 244+ 9347              ;
 245+ 9347              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9347              ;
 247+ 9347              ;	MODIFY: HL
 248+ 9347
 249+ 9347              Limpiamos_bandeja_DRAW
 250+ 9347
 251+ 9347 ED 73 06 8C  	ld (Stack),sp
 252+ 934B 31 DE 8B     	ld sp,Vel_left
 253+ 934E
 254+ 934E AF           	xor a
 255+ 934F 67           	ld h,a
 256+ 9350 6F           	ld l,a
 257+ 9351
 258+ 9351 E5           	push hl
 259+ 9352 E5           	push hl
 260+ 9353 E5           	push hl
 261+ 9354 E5           	push hl
 262+ 9355 E5           	push hl
 263+ 9356 E5           	push hl
 264+ 9357 E5           	push hl
 265+ 9358 E5           	push hl
 266+ 9359 E5           	push hl
 267+ 935A E5           	push hl
 268+ 935B E5           	push hl
 269+ 935C E5           	push hl
 270+ 935D E5           	push hl
 271+ 935E E5           	push hl
 272+ 935F E5           	push hl
 273+ 9360 E5           	push hl
 274+ 9361 E5           	push hl
 275+ 9362 E5           	push hl
 276+ 9363
 277+ 9363 33           	inc sp
 278+ 9364
 279+ 9364 E5           	push hl
 280+ 9365 ED 7B 06 8C  	ld sp,(Stack)
 281+ 9369
 282+ 9369 C9           	ret
 283+ 936A
 284+ 936A              ; ---------------------------------------------------------------------
 285+ 936A              ;
 286+ 936A              ;	24/03/24
 287+ 936A
 288+ 936A 2A C2 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 936D 2B           	dec hl
 290+ 936E 22 C2 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9371 C9           	ret
 292+ 9372
 293+ 9372              ; ---------------------------------------------------------------------
 294+ 9372              ;
 295+ 9372              ;	8/5/24
 296+ 9372
 297+ 9372              Reinicia_entidad_maliciosa
 298+ 9372
 299+ 9372              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9372
 301+ 9372 CD C0 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9375 CD CD 9E     	call Transfiere_datos_de_contadores
 303+ 9378
 304+ 9378              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9378
 306+ 9378 3A B9 8B     	ld a,(Tipo)
 307+ 937B CD 32 93     	call Definicion_segun_tipo
 308+ 937E
 309+ 937E E5           	push hl
 310+ 937F DD E1        	pop ix
 311+ 9381
 312+ 9381 DD 6E 0B     	ld l,(ix+11)
 313+ 9384 DD 66 0C     	ld h,(ix+12)
 314+ 9387
 315+ 9387 22 C0 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 938A
 317+ 938A CD BF 8F     	call Cargamos_registros_con_mov_masticado
 318+ 938D
 319+ 938D              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 938D              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 938D              ; Ejemplos.
 322+ 938D
 323+ 938D              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 938D              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 938D              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 938D              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 938D              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 938D
 329+ 938D 21 BC 8B     	ld hl,Contador_de_vueltas
 330+ 9390 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9392
 332+ 9392 7E           	ld a,(hl)
 333+ 9393 CB 2F        	sra a
 334+ 9395 CB 2F        	sra a
 335+ 9397
 336+ 9397 32 C4 8B     	ld (Velocidad),a
 337+ 939A
 338+ 939A 3E 40        	ld a,$40
 339+ 939C BE           	cp (hl)
 340+ 939D C0           	ret nz
 341+ 939E
 342+ 939E              ; Límitador.
 343+ 939E
 344+ 939E              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 939E
 346+ 939E CB 2E        	sra (hl)
 347+ 93A0 21 C4 8B     	ld hl,Velocidad
 348+ 93A3 CB 2E        	sra (hl)
 349+ 93A5
 350+ 93A5 C9           	ret
 351+ 93A6
 352+ 93A6              ; ---------------------------------------------------------------------
 353+ 93A6              ;
 354+ 93A6              ;	22/01/24
 355+ 93A6
 356+ 93A6 21 2D 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93A9 CB 46        	bit 0,(hl)
 358+ 93AB 20 0D        	jr nz,1F
 359+ 93AD CB 4E        	bit 1,(hl)
 360+ 93AF 20 0C        	jr nz,2F
 361+ 93B1 CB 56        	bit 2,(hl)
 362+ 93B3 20 0B        	jr nz,3F
 363+ 93B5 CB 5E        	bit 3,(hl)
 364+ 93B7 20 0A        	jr nz,4F
 365+ 93B9 C9           	ret
 366+ 93BA
 367+ 93BA CB E6        1 set 4,(hl)
 368+ 93BC C9           	ret
 369+ 93BD CB EE        2 set 5,(hl)
 370+ 93BF C9           	ret
 371+ 93C0 CB F6        3 set 6,(hl)
 372+ 93C2 C9           	ret
 373+ 93C3 CB FE        4 set 7,(hl)
 374+ 93C5 C9           	ret
 375+ 93C6
 376+ 93C6              ; ---------------------------------------------------------------------
 377+ 93C6              ;
 378+ 93C6              ;	23/01/24
 379+ 93C6              ;
 380+ 93C6              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93C6              ;
 382+ 93C6              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93C6              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93C6              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93C6              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93C6
 387+ 93C6              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93C6
 389+ 93C6 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93C7 3D           	dec a
 391+ 93C8 20 06        	jr nz,1F
 392+ 93CA
 393+ 93CA              ; --- Tipo_1
 394+ 93CA
 395+ 93CA 21 2D 8C     	ld hl,Ctrl_4
 396+ 93CD CB C6        	set 0,(hl)
 397+ 93CF C9           	ret
 398+ 93D0
 399+ 93D0 3D           1 dec a
 400+ 93D1 20 06        	jr nz,2F
 401+ 93D3
 402+ 93D3              ; --- Tipo_2
 403+ 93D3
 404+ 93D3 21 2D 8C     	ld hl,Ctrl_4
 405+ 93D6 CB CE        	set 1,(hl)
 406+ 93D8 C9           	ret
 407+ 93D9
 408+ 93D9 3D           2 dec a
 409+ 93DA 20 06        	jr nz,3F
 410+ 93DC
 411+ 93DC              ; --- Tipo_3
 412+ 93DC
 413+ 93DC 21 2D 8C     	ld hl,Ctrl_4
 414+ 93DF CB D6        	set 2,(hl)
 415+ 93E1 C9           	ret
 416+ 93E2
 417+ 93E2              ; --- Tipo_3
 418+ 93E2
 419+ 93E2 21 2D 8C     3 ld hl,Ctrl_4
 420+ 93E5 CB D6        	set 2,(hl)
 421+ 93E7 C9           	ret
 422+ 93E8
 423+ 93E8              ; ---------------------------------------------------------------------
 424+ 93E8              ;
 425+ 93E8              ;	22/01/24
 426+ 93E8
 427+ 93E8 21 2D 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93EB CB 46        	bit 0,(hl)
 429+ 93ED 20 0E        	jr nz,1F
 430+ 93EF
 431+ 93EF CB 4E        	bit 1,(hl)
 432+ 93F1 20 10        	jr nz,2F
 433+ 93F3
 434+ 93F3 CB 56        	bit 2,(hl)
 435+ 93F5 20 12        	jr nz,3F
 436+ 93F7
 437+ 93F7 CB 5E        	bit 3,(hl)
 438+ 93F9 20 14        	jr nz,4F
 439+ 93FB 18 19        	jr 6F
 440+ 93FD
 441+ 93FD              ; Entidad_de_Tipo_1.
 442+ 93FD
 443+ 93FD CB 66        1 bit 4,(hl)
 444+ 93FF 28 15        	jr z,6F
 445+ 9401 18 10        	jr 5F
 446+ 9403
 447+ 9403              ; Entidad_de_Tipo_2.
 448+ 9403
 449+ 9403 CB 6E        2 bit 5,(hl)
 450+ 9405 28 0F        	jr z,6F
 451+ 9407 18 0A        	jr 5F
 452+ 9409
 453+ 9409              ; Entidad_de_Tipo_3.
 454+ 9409
 455+ 9409 CB 76        3 bit 6,(hl)
 456+ 940B 28 09        	jr z,6F
 457+ 940D 18 04        	jr 5F
 458+ 940F
 459+ 940F              ; Entidad_de_Tipo_4.
 460+ 940F
 461+ 940F CB 7E        4 bit 7,(hl)
 462+ 9411 28 03        	jr z,6F
 463+ 9413
 464+ 9413              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9413
 466+ 9413 AF           5 xor a
 467+ 9414 3C           	inc a
 468+ 9415 C9           	ret
 469+ 9416
 470+ 9416              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9416
 472+ 9416 AF           6 xor a
 473+ 9417 C9           	ret
 474+ 9418
 475+ 9418              ;	------------------------------------------------------------------------------------
 476+ 9418              ;
 477+ 9418              ;	12/01/24
 478+ 9418              ;
 479+ 9418              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9418              ;
 481+ 9418              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9418              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9418
 484+ 9418 CB 27        Calcula_salto_en_BC sla a
 485+ 941A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 941C 4F           	ld c,a
 487+ 941D 06 00        	ld b,0
 488+ 941F C9           	ret
 489+ 9420
 490+ 9420              ; ------------------------------------------------------------------
 491+ 9420              ;
 492+ 9420              ;	19/1/24
 493+ 9420              ;
 494+ 9420              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9420              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9420
 497+ 9420 A7           Situa_en_datos_de_definicion and a
 498+ 9421 ED 4A        	adc hl,bc
 499+ 9423 CD 7C 90     	call Extrae_address
 500+ 9426 22 04 8C         ld (Datos_de_entidad),hl
 501+ 9429 C9           	ret
 502+ 942A
 503+ 942A              ; ------------------------------------------------------------------
 504+ 942A
 505+ 942A              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 942A              ; 	inc de
 507+ 942A              ; 	inc de
 508+ 942A              ; 	ex de,hl
 509+ 942A              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 942A              ; 	ret
 511+ 942A
 512+ 942A              ; ----------------------------------------------------------------------------------------------------------
 513+ 942A              ;
 514+ 942A              ;	24/6/24
 515+ 942A              ;
 516+ 942A              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 942A              ;	_ de entidad.
 518+ 942A              ;
 519+ 942A              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 942A              ;
 521+ 942A              ;
 522+ 942A              ;	MODIFICA: HL,DE y BC
 523+ 942A
 524+ 942A
 525+ 942A              Definicion_de_entidad_a_bandeja_DRAW
 526+ 942A
 527+ 942A 11 B9 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 942D 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 942E 12           	ld (de),a
 530+ 942F 23           	inc hl
 531+ 9430              ;
 532+ 9430 11 C7 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9433 01 02 00     	ld bc,2
 534+ 9436 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9438              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9438 11 BC 8B     	ld de,Contador_de_vueltas
 537+ 943B 7E           	ld a,(hl)
 538+ 943C 12           	ld (de),a
 539+ 943D 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 943E
 541+ 943E 11 CE 8B     	ld de,Indice_Sprite_der
 542+ 9441 01 04 00     	ld bc,4
 543+ 9444 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9446
 545+ 9446 11 D6 8B     	ld de,Posicion_inicio
 546+ 9449 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 944C ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 944E
 549+ 944E 11 C0 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9451 01 02 00     	ld bc,2
 551+ 9454 ED B0        	ldir
 552+ 9456
 553+ 9456 C9           	ret
 554+ 9457
 555+ 9457              ; ----------------------------------------------------------------------------------------------------------
 556+ 9457              ;
 557+ 9457              ;	1/8/24
 558+ 9457              ;
 559+ 9457
 560+ 9457              Parametros_de_bandeja_DRAW_a_caja
 561+ 9457
 562+ 9457 21 B9 8B     	ld hl,Bandeja_DRAW
 563+ 945A 01 0C 00     	ld bc,12
 564+ 945D ED B0        	ldir
 565+ 945F C9           	ret
 566+ 9460
 567+ 9460              ;---------------------------------------------------------------------------------------------------------------
 568+ 9460              ;
 569+ 9460              ;	5/1/24
 570+ 9460              ;
 571+ 9460              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9460              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9460              ;
 574+ 9460              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9460              ;
 576+ 9460              ;	(Numero_parcial_de_entidades)="7".
 577+ 9460              ;
 578+ 9460              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9460              ;
 580+ 9460              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9460              ;
 582+ 9460              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9460              ;	MODIFICA: A y B.
 584+ 9460              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9460
 586+ 9460              Inicializa_Numero_parcial_de_entidades
 587+ 9460
 588+ 9460              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9460
 590+ 9460 3A FF 8B     	ld a,(Numero_de_entidades)
 591+ 9463 A7           	and a
 592+ 9464
 593+ 9464              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9464              ;	jr z,$
 595+ 9464              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9464
 597+ 9464 20 03        	jr nz,3F
 598+ 9466
 599+ 9466              ; ---------- ---------- ----------
 600+ 9466
 601+ 9466              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9466              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9466
 604+ 9466 CD 5C 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9469
 606+ 9469              ; ---------- ---------- ----------
 607+ 9469
 608+ 9469 3A FF 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 946C FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 946E 38 08        	jr c,1F
 611+ 9470
 612+ 9470              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9470              ; Actualizamos variables.
 614+ 9470
 615+ 9470 3E 07        	ld a,7
 616+ 9472 32 00 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9475 47           	ld b,a
 618+ 9476 18 04        	jr 2F
 619+ 9478
 620+ 9478              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9478              ; (Numero_de_entidades)="0".
 622+ 9478
 623+ 9478 32 00 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 947B 47           	ld b,a
 625+ 947C C9           2 ret
 626+ 947D
# file closed: Rutinas_de_inicio_y_niveles.asm
2137  947D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 947D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 947D              ;
   3+ 947D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 947D              ;
   5+ 947D              ; *****************************************************************************************************************************************************************************************
   6+ 947D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 947D
   8+ 947D 7C           calcula_tercio ld a,h
   9+ 947E E6 18        	and $18
  10+ 9480 CB 2F        	sra a
  11+ 9482 CB 2F        	sra a
  12+ 9484 CB 2F        	sra a
  13+ 9486 C9           	ret
  14+ 9487
# file closed: calcula_tercio.asm
2138  9487              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9487              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9487              ;
   3+ 9487              ;
   4+ 9487              ;	CLS.
   5+ 9487              ;
   6+ 9487              ;	Limpia la pantalla y define sus atributos.
   7+ 9487              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9487              ;
   9+ 9487              ;	COLORES: 0 ..... NEGRO
  10+ 9487              ;    		 1 ..... AZUL
  11+ 9487              ; 			 2 ..... ROJO
  12+ 9487              ;			 3 ..... MAGENTA
  13+ 9487              ; 			 4 ..... VERDE
  14+ 9487              ; 			 5 ..... CIAN
  15+ 9487              ;			 6 ..... AMARILLO
  16+ 9487              ; 			 7 ..... BLANCO
  17+ 9487              ;
  18+ 9487              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9487              ;
  20+ 9487              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9487
  22+ 9487
  23+ 9487 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 948A 11 01 40     	LD DE,$4001
  25+ 948D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9490 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9492 ED B0        	LDIR
  28+ 9494 01 FF 02     	LD BC,767
  29+ 9497 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9498 ED B0        	LDIR
  31+ 949A C9           	ret
  32+ 949B
# file closed: Cls.asm
2139  949B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 949B              ; ------------------------------------------------------------------------
   2+ 949B              ;
   3+ 949B              ;	30/1/24
   4+ 949B              ;
   5+ 949B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 949B              ;	Fila superior "0", Columna izquierda "0".
   7+ 949B              ;
   8+ 949B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 949B              ;
  10+ 949B              ;	Modifica: A,BC y DE.
  11+ 949B
  12+ 949B 7D           Genera_coordenadas ld a,l
  13+ 949C E6 1F        	and $1f
  14+ 949E 32 BA 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94A1
  16+ 94A1 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94A2 FE 40        	cp $40
  18+ 94A4 38 1C        	jr c,4F
  19+ 94A6
  20+ 94A6 CD 7D 94     	call calcula_tercio
  21+ 94A9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94AA
  23+ 94AA 1E 00        	ld e,0
  24+ 94AC 7D           	ld a,l
  25+ 94AD E6 E0        	and $e0
  26+ 94AF 28 01        	jr z,1F
  27+ 94B1 04           	inc b
  28+ 94B2
  29+ 94B2 04           1 inc b
  30+ 94B3 05           	dec b
  31+ 94B4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94B6              ;														; _ , salimos.
  33+ 94B6 1C           3 inc e
  34+ 94B7 D6 20        	sub 32
  35+ 94B9 20 FB        	jr nz,3B
  36+ 94BB 10 F5        	djnz 1B
  37+ 94BD
  38+ 94BD 7B           2 ld a,e
  39+ 94BE 32 BB 8B     	ld (Coordenada_y),a
  40+ 94C1 C9           	ret
  41+ 94C2
  42+ 94C2 AF           4 xor a
  43+ 94C3 32 BB 8B     	ld (Coordenada_y),a
  44+ 94C6 C9           	ret
  45+ 94C7
# file closed: Genera_coordenadas.asm
2140  94C7              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94C7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94C7              ;
   3+ 94C7              ;	11/03/24
   4+ 94C7              ;
   5+ 94C7              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94C7              ;   DE contiene Puntero_objeto.
   7+ 94C7              ;   IX contiene el Puntero de impresión.
   8+ 94C7
   9+ 94C7              Genera_datos_de_impresion
  10+ 94C7
  11+ 94C7 ED 73 06 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94CB
  13+ 94CB 31 C0 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94D0
  16+ 94D0 2A 26 8C         ld hl,(Scanlines_album_SP)
  17+ 94D3
  18+ 94D3 3E 05            ld a,5
  19+ 94D5 85               add l
  20+ 94D6 6F               ld l,a
  21+ 94D7
  22+ 94D7 F9               ld sp,hl
  23+ 94D8 22 26 8C         ld (Scanlines_album_SP),hl
  24+ 94DB
  25+ 94DB 21 00 00         ld hl,0
  26+ 94DE
  27+ 94DE DD E5            push ix
  28+ 94E0 3B               dec sp
  29+ 94E1 ED 7A            adc hl,sp
  30+ 94E3 D5               push de
  31+ 94E4
  32+ 94E4              ; Recuperamos SP.
  33+ 94E4
  34+ 94E4 ED 7B 06 8C      ld sp,(Stack)
  35+ 94E8
  36+ 94E8 E5               push hl
  37+ 94E9 F1               pop af
  38+ 94EA 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94EB
  40+ 94EB              ; Tenemos el encabezado listo.
  41+ 94EB              ; Preparamos registros para generar los scanlines.
  42+ 94EB
  43+ 94EB DD E5            push ix
  44+ 94ED E1               pop hl                                          ; 1er scanline en HL.
  45+ 94EE
  46+ 94EE ED 5B 26 8C      ld de,(Scanlines_album_SP)
  47+ 94F2
  48+ 94F2              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94F2              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94F2
  51+ 94F2 7C               ld a,h
  52+ 94F3 FE 50            cp $50
  53+ 94F5 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94F7
  55+ 94F7 20 05            jr nz,2F
  56+ 94F9
  57+ 94F9 7D               ld a,l
  58+ 94FA FE E0            cp $e0
  59+ 94FC 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94FE
  61+ 94FE 7D           2 ld a,l
  62+ 94FF FE C0            cp $c0
  63+ 9501 D2 93 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9504
  65+ 9504              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9504
  67+ 9504 CD 91 99         call NextScan
  68+ 9507 EB               ex de,hl
  69+ 9508
  70+ 9508 73               ld (hl),e
  71+ 9509 23               inc hl
  72+ 950A 72               ld (hl),d
  73+ 950B 23               inc hl
  74+ 950C
  75+ 950C EB               ex de,hl
  76+ 950D
  77+ 950D CD 91 99         call NextScan
  78+ 9510 EB               ex de,hl
  79+ 9511
  80+ 9511 73               ld (hl),e
  81+ 9512 23               inc hl
  82+ 9513 72               ld (hl),d
  83+ 9514 23               inc hl
  84+ 9515
  85+ 9515 EB               ex de,hl
  86+ 9516
  87+ 9516 CD 91 99         call NextScan
  88+ 9519 EB               ex de,hl
  89+ 951A
  90+ 951A 73               ld (hl),e
  91+ 951B 23               inc hl
  92+ 951C 72               ld (hl),d
  93+ 951D 23               inc hl
  94+ 951E
  95+ 951E EB               ex de,hl
  96+ 951F
  97+ 951F CD 91 99         call NextScan
  98+ 9522 EB               ex de,hl
  99+ 9523
 100+ 9523 73               ld (hl),e
 101+ 9524 23               inc hl
 102+ 9525 72               ld (hl),d
 103+ 9526 23               inc hl
 104+ 9527
 105+ 9527 EB               ex de,hl
 106+ 9528
 107+ 9528 CD 91 99         call NextScan
 108+ 952B EB               ex de,hl
 109+ 952C
 110+ 952C 73               ld (hl),e
 111+ 952D 23               inc hl
 112+ 952E 72               ld (hl),d
 113+ 952F 23               inc hl
 114+ 9530
 115+ 9530 EB               ex de,hl
 116+ 9531
 117+ 9531 CD 91 99         call NextScan
 118+ 9534 EB               ex de,hl
 119+ 9535
 120+ 9535 73               ld (hl),e
 121+ 9536 23               inc hl
 122+ 9537 72               ld (hl),d
 123+ 9538 23               inc hl
 124+ 9539
 125+ 9539 EB               ex de,hl
 126+ 953A
 127+ 953A CD 91 99         call NextScan
 128+ 953D EB               ex de,hl
 129+ 953E
 130+ 953E 73               ld (hl),e
 131+ 953F 23               inc hl
 132+ 9540 72               ld (hl),d
 133+ 9541 23               inc hl
 134+ 9542
 135+ 9542 EB               ex de,hl
 136+ 9543
 137+ 9543 CD 91 99         call NextScan
 138+ 9546 EB               ex de,hl
 139+ 9547
 140+ 9547 73               ld (hl),e
 141+ 9548 23               inc hl
 142+ 9549 72               ld (hl),d
 143+ 954A 23               inc hl
 144+ 954B
 145+ 954B EB               ex de,hl
 146+ 954C
 147+ 954C CD 91 99         call NextScan
 148+ 954F EB               ex de,hl
 149+ 9550
 150+ 9550 73               ld (hl),e
 151+ 9551 23               inc hl
 152+ 9552 72               ld (hl),d
 153+ 9553 23               inc hl
 154+ 9554
 155+ 9554 EB               ex de,hl
 156+ 9555
 157+ 9555 CD 91 99         call NextScan
 158+ 9558 EB               ex de,hl
 159+ 9559
 160+ 9559 73               ld (hl),e
 161+ 955A 23               inc hl
 162+ 955B 72               ld (hl),d
 163+ 955C 23               inc hl
 164+ 955D
 165+ 955D EB               ex de,hl
 166+ 955E
 167+ 955E CD 91 99         call NextScan
 168+ 9561 EB               ex de,hl
 169+ 9562
 170+ 9562 73               ld (hl),e
 171+ 9563 23               inc hl
 172+ 9564 72               ld (hl),d
 173+ 9565 23               inc hl
 174+ 9566
 175+ 9566 EB               ex de,hl
 176+ 9567
 177+ 9567 CD 91 99         call NextScan
 178+ 956A EB               ex de,hl
 179+ 956B
 180+ 956B 73               ld (hl),e
 181+ 956C 23               inc hl
 182+ 956D 72               ld (hl),d
 183+ 956E 23               inc hl
 184+ 956F
 185+ 956F EB               ex de,hl
 186+ 9570
 187+ 9570 CD 91 99         call NextScan
 188+ 9573 EB               ex de,hl
 189+ 9574
 190+ 9574 73               ld (hl),e
 191+ 9575 23               inc hl
 192+ 9576 72               ld (hl),d
 193+ 9577 23               inc hl
 194+ 9578
 195+ 9578 EB               ex de,hl
 196+ 9579
 197+ 9579 CD 91 99         call NextScan
 198+ 957C EB               ex de,hl
 199+ 957D
 200+ 957D 73               ld (hl),e
 201+ 957E 23               inc hl
 202+ 957F 72               ld (hl),d
 203+ 9580 23               inc hl
 204+ 9581
 205+ 9581 EB               ex de,hl
 206+ 9582
 207+ 9582 CD 91 99         call NextScan
 208+ 9585 EB               ex de,hl
 209+ 9586
 210+ 9586 73               ld (hl),e
 211+ 9587 23               inc hl
 212+ 9588 72               ld (hl),d
 213+ 9589 23               inc hl
 214+ 958A
 215+ 958A              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 958A
 217+ 958A 22 26 8C         ld (Scanlines_album_SP),hl
 218+ 958D
 219+ 958D              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 958D
 221+ 958D 08               ex af,af
 222+ 958E
 223+ 958E F5               push af
 224+ 958F E1               pop hl
 225+ 9590
 226+ 9590 36 10            ld (hl),16
 227+ 9592
 228+ 9592 C9               ret
 229+ 9593
 230+ 9593              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9593
 232+ 9593              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9593
 234+ 9593 3E 57            ld a,$57
 235+ 9595 94               sub h
 236+ 9596 47               ld b,a
 237+ 9597
 238+ 9597 3E DF            ld a,$df
 239+ 9599 BD               cp l
 240+ 959A 38 04            jr c,1F
 241+ 959C
 242+ 959C 3E 08            ld a,8
 243+ 959E 80               add b
 244+ 959F 47               ld b,a
 245+ 95A0
 246+ 95A0              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95A0              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95A0
 249+ 95A0 48           1 ld c,b
 250+ 95A1 0C               inc c
 251+ 95A2
 252+ 95A2 04               inc b
 253+ 95A3 05               dec b
 254+ 95A4 20 02            jr nz,3F
 255+ 95A6
 256+ 95A6 18 0B            jr 6F
 257+ 95A8
 258+ 95A8 CD 91 99     3 call NextScan
 259+ 95AB EB               ex de,hl
 260+ 95AC
 261+ 95AC 73               ld (hl),e
 262+ 95AD 23               inc hl
 263+ 95AE 72               ld (hl),d
 264+ 95AF 23               inc hl
 265+ 95B0
 266+ 95B0 EB               ex de,hl
 267+ 95B1 10 F5            djnz 3B
 268+ 95B3
 269+ 95B3 ED 53 26 8C  6 ld (Scanlines_album_SP),de
 270+ 95B7
 271+ 95B7 08           5 ex af,af
 272+ 95B8 F5               push af
 273+ 95B9 E1               pop hl
 274+ 95BA
 275+ 95BA 71               ld (hl),c
 276+ 95BB
 277+ 95BB C9               ret
 278+ 95BC
# file closed: Genera_datos_de_impresion.asm
2141  95BC              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95BC              ; -----------------------------------------------------------------------------
   2+ 95BC              ;
   3+ 95BC              ;   11/03/24
   4+ 95BC              ;
   5+ 95BC
   6+ 95BC              Pinta_Sprites
   7+ 95BC
   8+ 95BC              ;    ld hl,(Scanlines_album_SP)
   9+ 95BC              ;    call Extrae_address
  10+ 95BC
  11+ 95BC              ;    inc h
  12+ 95BC              ;    dec h
  13+ 95BC              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95BC
  15+ 95BC ED 73 06 8C      ld (Stack),sp
  16+ 95C0
  17+ 95C0 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95C1              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95C1 2C               inc l
  20+ 95C2 2C               inc l
  21+ 95C3
  22+ 95C3 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95C4
  24+ 95C4 2C               inc l
  25+ 95C5 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95C6
  27+ 95C6              ;   Seleccionamos rutina de impresión:
  28+ 95C6
  29+ 95C6 3E 10            ld a,16
  30+ 95C8 B8               cp b
  31+ 95C9 C2 C5 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95CC
  33+ 95CC              ;   Rutinas:
  34+ 95CC
  35+ 95CC              Pinta_rapido    ;   1520 t/states.
  36+ 95CC
  37+ 95CC E1               pop hl
  38+ 95CD
  39+ 95CD 1A               ld a,(de)
  40+ 95CE AE               xor (hl)
  41+ 95CF 77               ld (hl),a
  42+ 95D0 2C               inc l
  43+ 95D1 1C               inc e
  44+ 95D2 1A               ld a,(de)
  45+ 95D3 AE               xor (hl)
  46+ 95D4 77               ld (hl),a
  47+ 95D5 2C               inc l
  48+ 95D6 1C               inc e
  49+ 95D7 1A               ld a,(de)
  50+ 95D8 AE               xor (hl)
  51+ 95D9 77               ld (hl),a
  52+ 95DA 13               inc de
  53+ 95DB
  54+ 95DB E1               pop hl
  55+ 95DC
  56+ 95DC 1A               ld a,(de)
  57+ 95DD AE               xor (hl)
  58+ 95DE 77               ld (hl),a
  59+ 95DF 2C               inc l
  60+ 95E0 1C               inc e
  61+ 95E1 1A               ld a,(de)
  62+ 95E2 AE               xor (hl)
  63+ 95E3 77               ld (hl),a
  64+ 95E4 2C               inc l
  65+ 95E5 1C               inc e
  66+ 95E6 1A               ld a,(de)
  67+ 95E7 AE               xor (hl)
  68+ 95E8 77               ld (hl),a
  69+ 95E9 13               inc de
  70+ 95EA
  71+ 95EA E1               pop hl
  72+ 95EB
  73+ 95EB 1A               ld a,(de)
  74+ 95EC AE               xor (hl)
  75+ 95ED 77               ld (hl),a
  76+ 95EE 2C               inc l
  77+ 95EF 1C               inc e
  78+ 95F0 1A               ld a,(de)
  79+ 95F1 AE               xor (hl)
  80+ 95F2 77               ld (hl),a
  81+ 95F3 2C               inc l
  82+ 95F4 1C               inc e
  83+ 95F5 1A               ld a,(de)
  84+ 95F6 AE               xor (hl)
  85+ 95F7 77               ld (hl),a
  86+ 95F8 13               inc de
  87+ 95F9
  88+ 95F9 E1               pop hl
  89+ 95FA
  90+ 95FA 1A               ld a,(de)
  91+ 95FB AE               xor (hl)
  92+ 95FC 77               ld (hl),a
  93+ 95FD 2C               inc l
  94+ 95FE 1C               inc e
  95+ 95FF 1A               ld a,(de)
  96+ 9600 AE               xor (hl)
  97+ 9601 77               ld (hl),a
  98+ 9602 2C               inc l
  99+ 9603 1C               inc e
 100+ 9604 1A               ld a,(de)
 101+ 9605 AE               xor (hl)
 102+ 9606 77               ld (hl),a
 103+ 9607 13               inc de
 104+ 9608
 105+ 9608 E1               pop hl
 106+ 9609
 107+ 9609 1A               ld a,(de)
 108+ 960A AE               xor (hl)
 109+ 960B 77               ld (hl),a
 110+ 960C 2C               inc l
 111+ 960D 1C               inc e
 112+ 960E 1A               ld a,(de)
 113+ 960F AE               xor (hl)
 114+ 9610 77               ld (hl),a
 115+ 9611 2C               inc l
 116+ 9612 1C               inc e
 117+ 9613 1A               ld a,(de)
 118+ 9614 AE               xor (hl)
 119+ 9615 77               ld (hl),a
 120+ 9616 13               inc de
 121+ 9617
 122+ 9617 E1               pop hl
 123+ 9618
 124+ 9618 1A               ld a,(de)
 125+ 9619 AE               xor (hl)
 126+ 961A 77               ld (hl),a
 127+ 961B 2C               inc l
 128+ 961C 1C               inc e
 129+ 961D 1A               ld a,(de)
 130+ 961E AE               xor (hl)
 131+ 961F 77               ld (hl),a
 132+ 9620 2C               inc l
 133+ 9621 1C               inc e
 134+ 9622 1A               ld a,(de)
 135+ 9623 AE               xor (hl)
 136+ 9624 77               ld (hl),a
 137+ 9625 13               inc de
 138+ 9626
 139+ 9626 E1               pop hl
 140+ 9627
 141+ 9627 1A               ld a,(de)
 142+ 9628 AE               xor (hl)
 143+ 9629 77               ld (hl),a
 144+ 962A 2C               inc l
 145+ 962B 1C               inc e
 146+ 962C 1A               ld a,(de)
 147+ 962D AE               xor (hl)
 148+ 962E 77               ld (hl),a
 149+ 962F 2C               inc l
 150+ 9630 1C               inc e
 151+ 9631 1A               ld a,(de)
 152+ 9632 AE               xor (hl)
 153+ 9633 77               ld (hl),a
 154+ 9634 13               inc de
 155+ 9635
 156+ 9635 E1               pop hl
 157+ 9636
 158+ 9636 1A               ld a,(de)
 159+ 9637 AE               xor (hl)
 160+ 9638 77               ld (hl),a
 161+ 9639 2C               inc l
 162+ 963A 1C               inc e
 163+ 963B 1A               ld a,(de)
 164+ 963C AE               xor (hl)
 165+ 963D 77               ld (hl),a
 166+ 963E 2C               inc l
 167+ 963F 1C               inc e
 168+ 9640 1A               ld a,(de)
 169+ 9641 AE               xor (hl)
 170+ 9642 77               ld (hl),a
 171+ 9643 13               inc de
 172+ 9644
 173+ 9644 E1               pop hl
 174+ 9645
 175+ 9645 1A               ld a,(de)
 176+ 9646 AE               xor (hl)
 177+ 9647 77               ld (hl),a
 178+ 9648 2C               inc l
 179+ 9649 1C               inc e
 180+ 964A 1A               ld a,(de)
 181+ 964B AE               xor (hl)
 182+ 964C 77               ld (hl),a
 183+ 964D 2C               inc l
 184+ 964E 1C               inc e
 185+ 964F 1A               ld a,(de)
 186+ 9650 AE               xor (hl)
 187+ 9651 77               ld (hl),a
 188+ 9652 13               inc de
 189+ 9653
 190+ 9653 E1               pop hl
 191+ 9654
 192+ 9654 1A               ld a,(de)
 193+ 9655 AE               xor (hl)
 194+ 9656 77               ld (hl),a
 195+ 9657 2C               inc l
 196+ 9658 1C               inc e
 197+ 9659 1A               ld a,(de)
 198+ 965A AE               xor (hl)
 199+ 965B 77               ld (hl),a
 200+ 965C 2C               inc l
 201+ 965D 1C               inc e
 202+ 965E 1A               ld a,(de)
 203+ 965F AE               xor (hl)
 204+ 9660 77               ld (hl),a
 205+ 9661 13               inc de
 206+ 9662
 207+ 9662 E1               pop hl
 208+ 9663
 209+ 9663 1A               ld a,(de)
 210+ 9664 AE               xor (hl)
 211+ 9665 77               ld (hl),a
 212+ 9666 2C               inc l
 213+ 9667 1C               inc e
 214+ 9668 1A               ld a,(de)
 215+ 9669 AE               xor (hl)
 216+ 966A 77               ld (hl),a
 217+ 966B 2C               inc l
 218+ 966C 1C               inc e
 219+ 966D 1A               ld a,(de)
 220+ 966E AE               xor (hl)
 221+ 966F 77               ld (hl),a
 222+ 9670 13               inc de
 223+ 9671
 224+ 9671 E1               pop hl
 225+ 9672
 226+ 9672 1A               ld a,(de)
 227+ 9673 AE               xor (hl)
 228+ 9674 77               ld (hl),a
 229+ 9675 2C               inc l
 230+ 9676 1C               inc e
 231+ 9677 1A               ld a,(de)
 232+ 9678 AE               xor (hl)
 233+ 9679 77               ld (hl),a
 234+ 967A 2C               inc l
 235+ 967B 1C               inc e
 236+ 967C 1A               ld a,(de)
 237+ 967D AE               xor (hl)
 238+ 967E 77               ld (hl),a
 239+ 967F 13               inc de
 240+ 9680
 241+ 9680 E1               pop hl
 242+ 9681
 243+ 9681 1A               ld a,(de)
 244+ 9682 AE               xor (hl)
 245+ 9683 77               ld (hl),a
 246+ 9684 2C               inc l
 247+ 9685 1C               inc e
 248+ 9686 1A               ld a,(de)
 249+ 9687 AE               xor (hl)
 250+ 9688 77               ld (hl),a
 251+ 9689 2C               inc l
 252+ 968A 1C               inc e
 253+ 968B 1A               ld a,(de)
 254+ 968C AE               xor (hl)
 255+ 968D 77               ld (hl),a
 256+ 968E 13               inc de
 257+ 968F
 258+ 968F E1               pop hl
 259+ 9690
 260+ 9690 1A               ld a,(de)
 261+ 9691 AE               xor (hl)
 262+ 9692 77               ld (hl),a
 263+ 9693 2C               inc l
 264+ 9694 1C               inc e
 265+ 9695 1A               ld a,(de)
 266+ 9696 AE               xor (hl)
 267+ 9697 77               ld (hl),a
 268+ 9698 2C               inc l
 269+ 9699 1C               inc e
 270+ 969A 1A               ld a,(de)
 271+ 969B AE               xor (hl)
 272+ 969C 77               ld (hl),a
 273+ 969D 13               inc de
 274+ 969E
 275+ 969E E1               pop hl
 276+ 969F
 277+ 969F 1A               ld a,(de)
 278+ 96A0 AE               xor (hl)
 279+ 96A1 77               ld (hl),a
 280+ 96A2 2C               inc l
 281+ 96A3 1C               inc e
 282+ 96A4 1A               ld a,(de)
 283+ 96A5 AE               xor (hl)
 284+ 96A6 77               ld (hl),a
 285+ 96A7 2C               inc l
 286+ 96A8 1C               inc e
 287+ 96A9 1A               ld a,(de)
 288+ 96AA AE               xor (hl)
 289+ 96AB 77               ld (hl),a
 290+ 96AC 13               inc de
 291+ 96AD
 292+ 96AD E1               pop hl
 293+ 96AE
 294+ 96AE 1A               ld a,(de)
 295+ 96AF AE               xor (hl)
 296+ 96B0 77               ld (hl),a
 297+ 96B1 2C               inc l
 298+ 96B2 1C               inc e
 299+ 96B3 1A               ld a,(de)
 300+ 96B4 AE               xor (hl)
 301+ 96B5 77               ld (hl),a
 302+ 96B6 2C               inc l
 303+ 96B7 1C               inc e
 304+ 96B8 1A               ld a,(de)
 305+ 96B9 AE               xor (hl)
 306+ 96BA 77               ld (hl),a
 307+ 96BB 13               inc de
 308+ 96BC
 309+ 96BC ED 73 26 8C      ld (Scanlines_album_SP),sp
 310+ 96C0 ED 7B 06 8C      ld sp,(Stack)
 311+ 96C4 C9               ret
 312+ 96C5
 313+ 96C5              Pinta_lento
 314+ 96C5
 315+ 96C5 E1           1 pop hl
 316+ 96C6
 317+ 96C6 1A               ld a,(de)
 318+ 96C7 AE               xor (hl)
 319+ 96C8 77               ld (hl),a
 320+ 96C9 2C               inc l
 321+ 96CA 1C               inc e
 322+ 96CB 1A               ld a,(de)
 323+ 96CC AE               xor (hl)
 324+ 96CD 77               ld (hl),a
 325+ 96CE 2C               inc l
 326+ 96CF 1C               inc e
 327+ 96D0 1A               ld a,(de)
 328+ 96D1 AE               xor (hl)
 329+ 96D2 77               ld (hl),a
 330+ 96D3 13               inc de
 331+ 96D4
 332+ 96D4 10 EF            djnz 1B
 333+ 96D6
 334+ 96D6 ED 73 26 8C      ld (Scanlines_album_SP),sp
 335+ 96DA ED 7B 06 8C      ld sp,(Stack)
 336+ 96DE C9               ret
# file closed: Pinta_Sprites.asm
2142  96DF              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96DF              ; ******************************************************************************************************************************************************************************************
   2+ 96DF              ;
   3+ 96DF              ; 26/06/23
   4+ 96DF              ;
   5+ 96DF              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96DF
   7+ 96DF              Draw
   8+ 96DF
   9+ 96DF CD 85 99     	call Prepara_draw
  10+ 96E2 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96E3 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96E4 28 05        	jr z,2F
  13+ 96E6
  14+ 96E6 3A D8 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96E9 18 0C        	jr 1F
  16+ 96EB
  17+ 96EB 2A D6 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96EE 22 C9 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96F1 CD 7D 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96F4              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96F4
  22+ 96F4 CD 24 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96F7
  24+ 96F7 3A C6 8B     1 ld a,(Ctrl_0)
  25+ 96FA CB 6F        	bit 5,a
  26+ 96FC 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96FE
  28+ 96FE CD 13 97     	call Comprueba_limite_horizontal
  29+ 9701 CD A3 97     	call Comprueba_limite_vertical
  30+ 9704
  31+ 9704              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9704              ; -----------------------
  33+ 9704              ; -----------------------
  34+ 9704              ; -----------------------
  35+ 9704
  36+ 9704 CD F9 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9707 CD 30 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 970A
  39+ 970A 3A C6 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 970D CB AF        	res 5,a											; _a ser de utilidad.
  41+ 970F 32 C6 8B     	ld (Ctrl_0),a
  42+ 9712
  43+ 9712 C9           	ret
  44+ 9713
  45+ 9713              ; *******************************************************************************************************************************************************************************************
  46+ 9713              ;	21/01/23
  47+ 9713              ;
  48+ 9713              ; 	Comprueba_limite_horizontal.
  49+ 9713              ;
  50+ 9713              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9713              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9713              ;
  53+ 9713              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9713              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9713              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9713              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9713
  58+ 9713
  59+ 9713
  60+ 9713 3A C6 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9716 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9718 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 971A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 971C 32 C6 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 971F 18 09            jr 6F
  66+ 9721 CB 5F        1 bit 3,a
  67+ 9723 28 0A            jr z,2F
  68+ 9725 E6 F7            and $f7
  69+ 9727 32 C6 8B         ld (Ctrl_0),a
  70+ 972A CD 7D 98     6 call Inicializacion
  71+ 972D 18 5B            jr 5F
  72+ 972F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9730
  74+ 9730              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9730              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9730
  77+ 9730 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9731 2A DA 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9734 CD 7D 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9737 67           	ld h,a
  81+ 9738 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9739 CD 7D 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 973C 67           	ld h,a
  84+ 973D A7           	and a
  85+ 973E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9740 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9741 3A D8 8B     	ld a,(Cuad_objeto)
  88+ 9744 FE 02        	cp 2
  89+ 9746 38 1E        	jr c,3F
  90+ 9748 28 1C        	jr z,3F
  91+ 974A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 974B 28 23            jr z,7F
  93+ 974D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 974F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9751 E1           	pop hl
  96+ 9752
  97+ 9752              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9752              ; _para indicar con E="2" en caso necesario.
  99+ 9752
 100+ 9752 E5               push hl
 101+ 9753 C5               push bc
 102+ 9754 CD 7D 94     	call calcula_tercio
 103+ 9757 FE 01        	cp 1
 104+ 9759 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 975B CD 8B 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 975E 28 26            jr z,9F
 107+ 9760 38 24            jr c,9F
 108+ 9762 1E 00        11 ld e,0
 109+ 9764 18 22            jr 8F
 110+ 9766 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9767 28 07        	jr z, 7F
 112+ 9769 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 976B 1E 00         	ld e,0
 114+ 976D E1           	pop hl
 115+ 976E 18 04        	jr 4F
 116+ 9770 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9772 18 15            jr 10F
 118+ 9774
 119+ 9774              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9774              ; _para indicar con E="2" en caso necesario.
 121+ 9774
 122+ 9774 E5           4 push hl
 123+ 9775 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9776 CD 7D 94     	call calcula_tercio
 125+ 9779 FE 01        	cp 1
 126+ 977B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 977D CD 8B 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9780 28 04            jr z,9F
 129+ 9782 30 02            jr nc,9F
 130+ 9784 18 02        	jr 8F
 131+ 9786 1E 02        9 ld e,2
 132+ 9788 C1           8 pop bc
 133+ 9789 E1           10 pop hl
 134+ 978A C9           5 ret
 135+ 978B
 136+ 978B              ; --------------------
 137+ 978B              ;
 138+ 978B              ; 25/08/22
 139+ 978B
 140+ 978B CD 7D 94     Comprueba_centro call calcula_tercio
 141+ 978E 67               ld h,a
 142+ 978F 08           	ex af,af
 143+ 9790 FE 02        	cp 2
 144+ 9792 38 07        	jr c,1F
 145+ 9794 28 05        	jr z,1F
 146+ 9796 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9799 18 03        	jr 2F
 148+ 979B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 979E 08           2 ex af,af
 150+ 979F A7               and a
 151+ 97A0 ED 42            sbc hl,bc
 152+ 97A2 C9               ret
 153+ 97A3
 154+ 97A3              ; *********************************************************************************************************************************************************************************************
 155+ 97A3              ;
 156+ 97A3              ;   16/8/22
 157+ 97A3              ;
 158+ 97A3              ;	Comprueba_limite_vertical
 159+ 97A3              ;
 160+ 97A3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97A3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97A3              ;
 163+ 97A3
 164+ 97A3 2A C9 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97A6 7D           	ld a,l
 166+ 97A7 E6 1F        	and $1F
 167+ 97A9 57           	ld d,a
 168+ 97AA 3A DC 8B     	ld a,(Limite_vertical)
 169+ 97AD BA           	cp d 											; Límite - Posición.
 170+ 97AE 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97AF 3A D8 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97B2 CB 47        	bit 0,a
 173+ 97B4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97B6
 175+ 97B6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97B6
 177+ 97B6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97B7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97B9
 180+ 97B9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97B9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97B9
 183+ 97B9 3A BA 8B         ld a,(Coordenada_X)
 184+ 97BC 16 0F            ld d,Centro_izquierda
 185+ 97BE A7               and a
 186+ 97BF 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97C0 28 1E            jr z,3F
 188+ 97C2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97C4              ;                                                    ; _salimos sin modificar nada.
 190+ 97C4 18 0E            jr 2F
 191+ 97C6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97C7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97C9
 194+ 97C9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97C9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97C9
 197+ 97C9 3A BA 8B         ld a,(Coordenada_X)
 198+ 97CC 16 10            ld d,Centro_derecha
 199+ 97CE A7               and a
 200+ 97CF 92               sub d
 201+ 97D0 28 0E            jr z,3F
 202+ 97D2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97D4              ;                                                    ; _salimos sin modificar nada.
 204+ 97D4 CB 43        2 bit 0,e
 205+ 97D6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97D8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97D9 CD 6D 98         call Modificaccionne
 208+ 97DC C1           	pop bc
 209+ 97DD CD 7D 98         call Inicializacion
 210+ 97E0 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97E1
 212+ 97E1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97E1
 214+ 97E1 C5           4 push bc
 215+ 97E2 01 C8 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97E5 0A           	ld a,(bc)
 217+ 97E6 3D           	dec a
 218+ 97E7 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97E8 7D           	ld a,l
 220+ 97E9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97EA CB 47        	bit 0,a
 222+ 97EC 28 03        	jr z,5F
 223+ 97EE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97EF 18 2E        	jr 7F
 225+ 97F1
 226+ 97F1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97F1
 228+ 97F1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97F2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97F3 3A C6 8B     	ld a,(Ctrl_0)
 231+ 97F6 CB 4F        	bit 1,a
 232+ 97F8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97FA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97FB
 235+ 97FB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97FB
 237+ 97FB 1C               inc e
 238+ 97FC 1D               dec e
 239+ 97FD 20 07            jr nz,12F
 240+ 97FF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9800 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9801 22 C9 8B     	ld (Posicion_actual),hl
 243+ 9804 18 44        13 jr 9F
 244+ 9806 CB 43        12 bit 0,e
 245+ 9808 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 980A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 980A C1           	pop bc
 248+ 980B 18 D3        	jr 3B
 249+ 980D 80           14 add b
 250+ 980E 6F               ld l,a
 251+ 980F 22 C9 8B     	ld (Posicion_actual),hl
 252+ 9812 CD 6D 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9815 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9817 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9819 32 C6 8B         ld (Ctrl_0),a
 256+ 981C F1           	pop af
 257+ 981D 18 2B        	jr 9F
 258+ 981F
 259+ 981F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 981F
 261+ 981F F5           7 push af
 262+ 9820 3A C6 8B     	ld a,(Ctrl_0)
 263+ 9823 CB 47        	bit 0,a
 264+ 9825 20 1D        	jr nz,8F
 265+ 9827 F1           	pop af
 266+ 9828
 267+ 9828              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9828
 269+ 9828 1C           	inc e
 270+ 9829 1D               dec e
 271+ 982A 20 07            jr nz,10F
 272+ 982C 90           	sub b
 273+ 982D 6F               ld l,a
 274+ 982E 22 C9 8B     	ld (Posicion_actual),hl
 275+ 9831 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9833              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9833 CB 43        10 bit 0,e
 278+ 9835 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9837              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9837 C1           	pop bc
 281+ 9838 18 A6        	jr 3B
 282+ 983A 90           16 sub b
 283+ 983B 6F               ld l,a
 284+ 983C 22 C9 8B     	ld (Posicion_actual),hl
 285+ 983F CD 6D 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9842 18 06            jr 9F
 287+ 9844 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9846 32 C6 8B         ld (Ctrl_0),a
 289+ 9849 F1           	pop af
 290+ 984A C1           9 pop bc
 291+ 984B 1E 00        	ld e,0
 292+ 984D CD 7D 98         call Inicializacion
 293+ 9850 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9851 08           	ex af,af
 295+ 9852 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9853 18 8B            jr 3B
 297+ 9855
 298+ 9855              ; --------------------
 299+ 9855
 300+ 9855 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9857 CD A0 99     1 call PreviousScan
 302+ 985A 10 FB            djnz 1B
 303+ 985C 22 C9 8B     	ld (Posicion_actual),hl
 304+ 985F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9860 C9           	ret
 306+ 9861
 307+ 9861              ; --------------------
 308+ 9861
 309+ 9861 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9863 CD 91 99     1 call NextScan
 311+ 9866 10 FB            djnz 1B
 312+ 9868 22 C9 8B     	ld (Posicion_actual),hl
 313+ 986B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 986C C9           	ret
 315+ 986D
 316+ 986D              ; --------------------
 317+ 986D              ;
 318+ 986D              ;	22/01/23
 319+ 986D              ;
 320+ 986D              ;	E="1". Hemos cambiado de cuadrante.
 321+ 986D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 986D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 986D
 324+ 986D
 325+ 986D              Modificaccionne
 326+ 986D
 327+ 986D 3A D8 8B     	ld a,(Cuad_objeto)
 328+ 9870 FE 02        	cp 2
 329+ 9872 CC 55 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9875 DC 55 98         call c,Modifica_Pos_actual
 331+ 9878 C8           	ret z
 332+ 9879 CD 61 98         call Modifica_Pos_actual2
 333+ 987C C9               ret
 334+ 987D
 335+ 987D              ; *************************************************************************************************************************************************************************************************
 336+ 987D              ;
 337+ 987D              ;	13/8/22
 338+ 987D              ;
 339+ 987D              ;	Inicializacion
 340+ 987D              ;
 341+ 987D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 987D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 987D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 987D              ;
 345+ 987D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 987D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 987D              ;	_ desaparece/aparece.
 348+ 987D
 349+ 987D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 987D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 987D              ;
 352+ 987D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 987D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 987D              ; 		   [E] ="0"
 355+ 987D
 356+ 987D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 987D
 358+ 987D CD 7D 94     Inicializacion call calcula_tercio
 359+ 9880 28 36        	jr z,primit
 360+ 9882 E6 02        	and 2
 361+ 9884 20 07        	jr nz,segmit
 362+ 9886 7D           	ld a,l
 363+ 9887 FE 7F        	cp $7f
 364+ 9889 38 2D        	jr c,primit
 365+ 988B 28 2B        	jr z,primit
 366+ 988D CD F3 98     segmit call column
 367+ 9890 38 13        	jr c,tercuad
 368+ 9892 3E 04        cuarcuad ld a,4
 369+ 9894 32 D8 8B     	ld (Cuad_objeto),a
 370+ 9897 21 20 48     	ld hl,$4820
 371+ 989A 22 DA 8B     	ld (Limite_horizontal),hl
 372+ 989D 21 DC 8B     	ld hl,Limite_vertical
 373+ 98A0 36 0D        	ld (hl),$0d
 374+ 98A2 08           	ex af,af
 375+ 98A3 18 3C        	jr 1F
 376+ 98A5              tercuad
 377+ 98A5 3E 03        	ld a,3
 378+ 98A7 32 D8 8B     	ld (Cuad_objeto),a
 379+ 98AA 21 20 48     	ld hl,$4820
 380+ 98AD 22 DA 8B     	ld (Limite_horizontal),hl
 381+ 98B0 21 DC 8B     	ld hl,Limite_vertical
 382+ 98B3 36 12        	ld (hl),$12
 383+ 98B5 08           	ex af,af
 384+ 98B6 18 29        	jr 1F
 385+ 98B8 CD F3 98     primit call column
 386+ 98BB 38 13        	jr c, primcuad
 387+ 98BD              segcuad
 388+ 98BD 3E 02        	ld a,2
 389+ 98BF 32 D8 8B     	ld (Cuad_objeto),a
 390+ 98C2 21 C0 4F     	ld hl,$4fc0
 391+ 98C5 22 DA 8B     	ld (Limite_horizontal),hl
 392+ 98C8 21 DC 8B     	ld hl,Limite_vertical
 393+ 98CB 36 0D        	ld (hl),$0d
 394+ 98CD 08           	ex af,af
 395+ 98CE 18 11        	jr 1F
 396+ 98D0              primcuad
 397+ 98D0 3E 01        	ld a,1
 398+ 98D2 32 D8 8B     	ld (Cuad_objeto),a
 399+ 98D5 21 C0 4F     	ld hl,$4fc0
 400+ 98D8 22 DA 8B     	ld (Limite_horizontal),hl
 401+ 98DB 21 DC 8B     	ld hl,Limite_vertical
 402+ 98DE 36 12        	ld (hl),$12
 403+ 98E0 08           	ex af,af
 404+ 98E1
 405+ 98E1 C5           1 push bc
 406+ 98E2 E5           	push hl
 407+ 98E3 D5           	push de
 408+ 98E4
 409+ 98E4 2A C9 8B     	ld hl,(Posicion_actual)
 410+ 98E7 CD 9B 94     	call Genera_coordenadas
 411+ 98EA
 412+ 98EA D1           	pop de
 413+ 98EB E1           	pop hl
 414+ 98EC C1           	pop bc
 415+ 98ED
 416+ 98ED 21 C6 8B     	ld hl,Ctrl_0
 417+ 98F0 CB EE        	set 5,(hl)
 418+ 98F2 C9           	ret
 419+ 98F3
 420+ 98F3              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98F3
 422+ 98F3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98F3              ;
 424+ 98F3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98F3
 426+ 98F3 7D           column ld a,l
 427+ 98F4 E6 1F        	and $1f
 428+ 98F6 FE 10         	cp $10
 429+ 98F8 C9            	ret
 430+ 98F9
 431+ 98F9              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98F9              ;
 433+ 98F9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98F9              ;
 435+ 98F9              ; 14/12/22
 436+ 98F9              ;
 437+ 98F9              ;	Modifica: A y BC.
 438+ 98F9
 439+ 98F9 3A D8 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98FC E6 01        	and 1
 441+ 98FE 28 17        	jr z,1F
 442+ 9900
 443+ 9900              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9900
 445+ 9900 3A BA 8B     	ld a,(Coordenada_X)
 446+ 9903 47           	ld b,a
 447+ 9904 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9905 79           	ld a,c
 449+ 9906 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9907 38 08        	jr c,2F
 451+ 9909 47           	ld b,a
 452+ 990A 79           	ld a,c
 453+ 990B 90           	sub b
 454+ 990C 32 D9 8B     	ld (Columnas),a
 455+ 990F 18 1B        	jr 4F
 456+ 9911 79           2 ld a,c
 457+ 9912 32 D9 8B     	ld (Columnas),a
 458+ 9915 18 15        	jr 4F
 459+ 9917
 460+ 9917              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9917
 462+ 9917 3A BA 8B     1 ld a,(Coordenada_X)
 463+ 991A 81           	add c
 464+ 991B 3D           	dec a
 465+ 991C D6 1F        	sub $1f
 466+ 991E 38 08        	jr c,3F
 467+ 9920 47           	ld b,a
 468+ 9921 79           	ld a,c
 469+ 9922 90           	sub b
 470+ 9923 32 D9 8B     	ld (Columnas),a
 471+ 9926 18 04        	jr 4F
 472+ 9928 79           3 ld a,c
 473+ 9929 32 D9 8B     	ld (Columnas),a
 474+ 992C D9           4 exx
 475+ 992D 4F           	ld c,a
 476+ 992E D9           	exx
 477+ 992F C9            ret
 478+ 9930
 479+ 9930              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9930              ;
 481+ 9930              ;   19/7/23
 482+ 9930              ;
 483+ 9930              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9930              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9930              ;
 486+ 9930              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9930              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9930              ;
 489+ 9930              ;	DESTRUYE: HL,B Y A.
 490+ 9930
 491+ 9930 3A D8 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9933 FE 02        	cp 2
 493+ 9935 38 18        	jr c,1F
 494+ 9937 28 16        	jr z,1F
 495+ 9939 E6 01        	and 1
 496+ 993B 28 0D        	jr z,3F
 497+ 993D
 498+ 993D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 993D
 500+ 993D CD 79 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9940
 502+ 9940 7D           9 ld a,l
 503+ 9941 E6 1F        	and $1f
 504+ 9943 28 2A        	jr z,7F
 505+ 9945 2B           	dec hl
 506+ 9946 10 F8        	djnz 9B
 507+ 9948 18 25        	jr 7F
 508+ 994A
 509+ 994A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 994A
 511+ 994A 2A C9 8B     3 ld hl,(Posicion_actual)
 512+ 994D 18 20        	jr 7F
 513+ 994F
 514+ 994F 28 14        1 jr z,2F
 515+ 9951
 516+ 9951              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9951
 518+ 9951 CD 79 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9954
 520+ 9954 7D           4 ld a,l
 521+ 9955 E6 1F        	and $1f
 522+ 9957 28 03        	jr z,6F
 523+ 9959 2B           	dec hl
 524+ 995A 10 F8        	djnz 4B
 525+ 995C 06 0F        6 ld b,15
 526+ 995E CD A0 99     5 call PreviousScan
 527+ 9961 10 FB        	djnz 5B
 528+ 9963 18 0A        	jr 7F
 529+ 9965
 530+ 9965              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9965
 532+ 9965 CD 79 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9968 06 0F        	ld b,15
 534+ 996A CD A0 99     8 call PreviousScan
 535+ 996D 10 FB        	djnz 8B
 536+ 996F
 537+ 996F E5           7 push hl
 538+ 9970 DD E1        	pop ix
 539+ 9972
 540+ 9972 2A CB 8B     	ld hl,(Puntero_objeto)
 541+ 9975 E5           	push hl
 542+ 9976 FD E1        	pop iy
 543+ 9978
 544+ 9978 C9           	ret
 545+ 9979
 546+ 9979              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9979              ;
 548+ 9979              ;	2/1/23
 549+ 9979              ;
 550+ 9979              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9979              ;
 552+ 9979              ;	Tras esta rutina tenemos:
 553+ 9979              ;
 554+ 9979              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9979              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9979              ;
 557+ 9979              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9979
 559+ 9979 2A C9 8B     Operandos ld hl,(Posicion_actual)
 560+ 997C 3A D9 8B     	ld a,(Columnas)
 561+ 997F 3D           	dec a
 562+ 9980 20 01        	jr nz,1F
 563+ 9982 3C           	inc a
 564+ 9983 47           1 ld b,a
 565+ 9984 C9           	ret
 566+ 9985
 567+ 9985              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9985              ;
 569+ 9985              ;	Prepara_draw
 570+ 9985              ;
 571+ 9985              ;	Es una rutina de carga.
 572+ 9985              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9985              ;
 574+ 9985              ;	FUNCIONAMIENTO:
 575+ 9985              ;
 576+ 9985              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9985              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9985              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9985              ;
 580+ 9985              ;	DESTRUYE:
 581+ 9985              ;
 582+ 9985              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9985
 584+ 9985 21 C7 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9988 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9989 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 998A 4E           	ld c,(hl)
 588+ 998B 2A C9 8B     	ld hl,(Posicion_actual)
 589+ 998E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9990 C9           	ret
 591+ 9991
 592+ 9991              ;----------------------------------------------------------------------------------------------------------------
 593+ 9991              ;
 594+ 9991              ;	5/08/22
 595+ 9991              ;
 596+ 9991              ;   NextScan.
 597+ 9991              ;
 598+ 9991              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9991              ;
 600+ 9991              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9991              ;
 602+ 9991              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9991              ;
 604+ 9991              ;       DESTRUIDOS: AF y HL !!!
 605+ 9991              ;
 606+ 9991              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9991              ;
 608+ 9991
 609+ 9991 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9992 7C               ld a,h
 611+ 9993 E6 07            and 7
 612+ 9995 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9996
 614+ 9996 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9997 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9999 6F               ld l,a
 617+ 999A D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 999B
 619+ 999B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 999C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 999E 67               ld h,a
 622+ 999F C9               ret
 623+ 99A0
 624+ 99A0              ;----------------------------------------------------------------------------------------------------------------
 625+ 99A0              ;
 626+ 99A0              ;	5/08/22
 627+ 99A0              ;
 628+ 99A0              ;   PreviousScan.
 629+ 99A0              ;
 630+ 99A0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99A0              ;
 632+ 99A0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99A0              ;
 634+ 99A0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99A0              ;
 636+ 99A0              ;       DESTRUIDOS: AF y HL !!!
 637+ 99A0              ;
 638+ 99A0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99A0              ;
 640+ 99A0
 641+ 99A0 7C           PreviousScan ld a,h
 642+ 99A1 25               dec h               ; Dec H.
 643+ 99A2 E6 07            and 7
 644+ 99A4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99A5
 646+ 99A5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99A6 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99A8 6F               ld l,a
 649+ 99A9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99AA
 651+ 99AA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99AB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99AD 67               ld h,a
 654+ 99AE C9               ret
 655+ 99AF
 656+ 99AF
 657+ 99AF
 658+ 99AF
 659+ 99AF
 660+ 99AF
 661+ 99AF
 662+ 99AF
 663+ 99AF
 664+ 99AF
 665+ 99AF
 666+ 99AF
# file closed: Draw_XOR.asm
2143  99AF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99AF
   2+ 99AF              ; ******************************************************************************************************************************************************************************************
   3+ 99AF              ;
   4+ 99AF              ;   20/05/23
   5+ 99AF              ;
   6+ 99AF              ;	Recompone_posicion_inicio
   7+ 99AF              ;
   8+ 99AF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99AF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99AF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99AF              ;	_ a una u otra rutina.
  12+ 99AF
  13+ 99AF              Recompone_posicion_inicio
  14+ 99AF
  15+ 99AF 2A D6 8B     	ld hl,(Posicion_inicio)
  16+ 99B2 7D           	ld a,l
  17+ 99B3 E6 1F        	and $1f
  18+ 99B5 28 16        	jr z,1F
  19+ 99B7
  20+ 99B7 FE 1F        	cp $1f
  21+ 99B9 28 0D        	jr z,3F
  22+ 99BB
  23+ 99BB 21 C5 8B     	ld hl,Ctrl_2
  24+ 99BE CB C6        	set 0,(hl)
  25+ 99C0 2A CB 8B     	ld hl,(Puntero_objeto)
  26+ 99C3 22 F7 8B     	ld (Repone_puntero_objeto),hl
  27+ 99C6 18 08        	jr 2F
  28+ 99C8
  29+ 99C8 CD 76 9B     3 call Mov_left
  30+ 99CB 18 03        	jr 2F
  31+ 99CD
  32+ 99CD CD 53 9A     1 call Mov_right
  33+ 99D0 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99D3 22 CB 8B     	ld (Puntero_objeto),hl
  35+ 99D6 C9           	ret
  36+ 99D7
  37+ 99D7              ; ******************************************************************************************************************************************************************************************
  38+ 99D7              ;
  39+ 99D7              ;   27/05/23
  40+ 99D7              ;
  41+ 99D7              ;	Mov_down
  42+ 99D7              ;
  43+ 99D7              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99D7              ;
  45+ 99D7              ;
  46+ 99D7              Mov_down
  47+ 99D7
  48+ 99D7 CD 41 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99DA              ;																	; _ repone (Puntero_objeto).
  50+ 99DA 21 C6 8B     	ld hl,Ctrl_0
  51+ 99DD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99DF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99DF              ; 																	; _ en el caso de que no lo haya.
  54+ 99DF 3A E1 8B     	ld a,(Vel_down)
  55+ 99E2 47           	ld b,a
  56+ 99E3 2A C9 8B         ld hl,(Posicion_actual)
  57+ 99E6 CD 7D 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99E9 E6 02        	and 2
  59+ 99EB 28 17        	jr z,1F
  60+ 99ED
  61+ 99ED              ; Nos encontramos en el último tercio de pantalla.
  62+ 99ED              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99ED
  64+ 99ED 7C           	ld a,h
  65+ 99EE FE 57        	cp $57
  66+ 99F0 20 12        	jr nz,1F
  67+ 99F2
  68+ 99F2 7D           	ld a,l
  69+ 99F3 C6 20        	add $20
  70+ 99F5 30 0D        	jr nc,1F
  71+ 99F7
  72+ 99F7              ; ------------------------------
  73+ 99F7              ;
  74+ 99F7              ;	12/01/24
  75+ 99F7
  76+ 99F7              ;	call Reaparece_arriba
  77+ 99F7 CD 03 9D     	call Reinicio
  78+ 99FA
  79+ 99FA              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99FA
  81+ 99FA 3A 2C 8C     	ld a,(Ctrl_3)
  82+ 99FD CB CF        	set 1,a
  83+ 99FF 32 2C 8C     	ld (Ctrl_3),a
  84+ 9A02
  85+ 9A02 18 08        	jr 3F
  86+ 9A04              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A04              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A04              ; ------------------------------
  89+ 9A04
  90+ 9A04 CD 91 99     1 call NextScan
  91+ 9A07 22 C9 8B     	ld (Posicion_actual),hl
  92+ 9A0A 10 DA            djnz 2B
  93+ 9A0C CD 9B 94     3 call Genera_coordenadas
  94+ 9A0F C9           	ret
  95+ 9A10
  96+ 9A10              ; ******************************************************************************************************************************************************************************************
  97+ 9A10              ;
  98+ 9A10              ;   27/05/23
  99+ 9A10              ;
 100+ 9A10              ;	Mov_up
 101+ 9A10              ;
 102+ 9A10              ; 	Mueve el Sprite hacia arriba.
 103+ 9A10              ;
 104+ 9A10              ;
 105+ 9A10              Mov_up
 106+ 9A10
 107+ 9A10 CD 41 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A13              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A13 21 C6 8B     	ld hl,Ctrl_0
 110+ 9A16 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A18              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A18              ; 																		; _ en el caso de que no lo haya.
 113+ 9A18 3A E0 8B     	ld a,(Vel_up)
 114+ 9A1B 47           	ld b,a
 115+ 9A1C 2A C9 8B     	ld hl,(Posicion_actual)
 116+ 9A1F CD 7D 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A22 A7           	and a
 118+ 9A23 20 10        	jr nz,1F
 119+ 9A25
 120+ 9A25              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A25              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A25
 123+ 9A25 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A26 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A28 20 0B            jr nz,1F
 126+ 9A2A 7D               ld a,l
 127+ 9A2B D6 20            sub $20
 128+ 9A2D 30 06            jr nc,1F
 129+ 9A2F 25               dec h
 130+ 9A30
 131+ 9A30              ; -----------------------------
 132+ 9A30 CD E4 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A33              ;	call Reinicio
 134+ 9A33              ; -----------------------------
 135+ 9A33
 136+ 9A33 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A35 CD A0 99     1 call PreviousScan
 138+ 9A38 22 C9 8B     	ld (Posicion_actual),hl
 139+ 9A3B 10 E2            djnz 3B
 140+ 9A3D CD 9B 94     2 call Genera_coordenadas
 141+ 9A40 C9           	ret
 142+ 9A41
 143+ 9A41              ; -----------------------------
 144+ 9A41              ;
 145+ 9A41              ;	27/5/23
 146+ 9A41              ;
 147+ 9A41              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A41              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A41              ;
 150+ 9A41              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A41              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A41              ;
 153+ 9A41              ;	Modifica: A y (Puntero_objeto).
 154+ 9A41
 155+ 9A41 3A C5 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A44 CB 47        	bit 0,a
 157+ 9A46 C8           	ret z
 158+ 9A47 CB 87        	res 0,a
 159+ 9A49 32 C5 8B     	ld (Ctrl_2),a
 160+ 9A4C 2A F7 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A4F 22 CB 8B     	ld (Puntero_objeto),hl
 162+ 9A52 C9           	ret
 163+ 9A53
 164+ 9A53              ; ******************************************************************************************************************************************************************************************
 165+ 9A53              ;
 166+ 9A53              ;	19/10/22
 167+ 9A53              ;
 168+ 9A53              ;	Mov_right.
 169+ 9A53              ;
 170+ 9A53              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A53              ;
 172+ 9A53
 173+ 9A53 3A C6 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A56 CB 77        	bit 6,a
 175+ 9A58 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A5A
 177+ 9A5A CD 92 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A5D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A5E
 180+ 9A5E 21 C6 8B     	ld hl,Ctrl_0
 181+ 9A61 CB E6        	set 4,(hl)
 182+ 9A63 18 52        	jr 8F
 183+ 9A65
 184+ 9A65 21 C6 8B     10 ld hl,Ctrl_0
 185+ 9A68 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A6A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A6A              ; 																	; _ en el caso de que no lo haya.
 188+ 9A6A 3A BA 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A6D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A6F 20 46        	jr nz,8F
 191+ 9A71
 192+ 9A71 3A CD 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A74 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A75 28 40        	jr z,8F
 195+ 9A77
 196+ 9A77              ; ---------- ---------- ----------
 197+ 9A77              ;
 198+ 9A77              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A77
 200+ 9A77 3A DF 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A7A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A7C 28 11        	jr z,1F
 203+ 9A7E 38 06        	jr c,6F
 204+ 9A80 FE 04        	cp 4
 205+ 9A82 28 14        	jr z,7F
 206+ 9A84 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A86
 208+ 9A86              ; ---------- ---------- ----------
 209+ 9A86              ;
 210+ 9A86              ; Perfiles de velocidad
 211+ 9A86              ;
 212+ 9A86
 213+ 9A86 3A CD 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A89 FE FE        	cp $fe
 215+ 9A8B 20 2A        	jr nz,8F
 216+ 9A8D 18 10        	jr 3F
 217+ 9A8F 3A CD 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A92 FE FD        	cp $fd
 219+ 9A94 20 21        	jr nz,8F
 220+ 9A96 18 07        	jr 3F
 221+ 9A98 3A CD 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A9B FE FB        	cp $fb
 223+ 9A9D 20 18        	jr nz,8F
 224+ 9A9F
 225+ 9A9F              ; ---------- ---------- ----------
 226+ 9A9F
 227+ 9A9F              3
 228+ 9A9F CD D2 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AA2              ;	call Reinicio
 230+ 9AA2
 231+ 9AA2              ; ---------- ---------- ----------
 232+ 9AA2              ;
 233+ 9AA2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AA2
 235+ 9AA2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AA4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AA5 CD BE 9A     	call DESPLZ_DER
 238+ 9AA8 C1           	pop bc
 239+ 9AA9 10 F9        	djnz 5B
 240+ 9AAB 2A C9 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AAE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AAF 22 C9 8B     	ld (Posicion_actual),hl
 243+ 9AB2 CD 9B 94     	call Genera_coordenadas
 244+ 9AB5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AB7
 246+ 9AB7              ; ---------- ---------- ----------
 247+ 9AB7
 248+ 9AB7 2A C9 8B     8 ld hl,(Posicion_actual)
 249+ 9ABA CD BE 9A     	call DESPLZ_DER
 250+ 9ABD C9           2 ret
 251+ 9ABE
 252+ 9ABE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ABE              ;
 254+ 9ABE              ;	22/9/22
 255+ 9ABE              ;
 256+ 9ABE
 257+ 9ABE CD CD 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AC1 CD 19 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AC4 CD 42 9B         call Ciclo_completo
 260+ 9AC7 21 C6 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9ACA CB FE        	set 7,(hl)
 262+ 9ACC C9           	ret
 263+ 9ACD
 264+ 9ACD              ; ******************************************************************************************************************************************************************************************
 265+ 9ACD              ;	15/02/23
 266+ 9ACD              ;
 267+ 9ACD
 268+ 9ACD 3A DF 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AD0 47           	ld b,a
 270+ 9AD1 2A D2 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AD4 23           1 inc hl
 272+ 9AD5 23           	inc hl
 273+ 9AD6 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AD8 22 D2 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9ADB CD 7C 90     	call Extrae_address
 276+ 9ADE 22 CB 8B     	ld (Puntero_objeto),hl
 277+ 9AE1
 278+ 9AE1              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AE1
 280+ 9AE1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AE1              ; Cuántos movimientos hemos hecho ??
 282+ 9AE1              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AE1
 284+ 9AE1 2A CE 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AE4 EB           	ex de,hl
 286+ 9AE5 A7           	and a
 287+ 9AE6 ED 52        	sbc hl,de
 288+ 9AE8 CB 3D        	srl l
 289+ 9AEA 3E 08        6 ld a,8
 290+ 9AEC 95           	sub l
 291+ 9AED 30 1E        	jr nc,3F
 292+ 9AEF
 293+ 9AEF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AEF              ; B="0".
 295+ 9AEF
 296+ 9AEF 04           4 inc b
 297+ 9AF0 3C           	inc a
 298+ 9AF1 20 FC        	jr nz,4B
 299+ 9AF3 78           	ld a,b
 300+ 9AF4 08           	ex af,af
 301+ 9AF5 2A CE 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AF8 23           5 inc hl
 303+ 9AF9 23           	inc hl
 304+ 9AFA 10 FC        	djnz 5B
 305+ 9AFC 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AFF CD 7C 90     	call Extrae_address
 307+ 9B02 22 CB 8B     	ld (Puntero_objeto),hl
 308+ 9B05
 309+ 9B05              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B05              ; _(Posicion_actual).
 311+ 9B05
 312+ 9B05 21 C9 8B     	ld hl,Posicion_actual
 313+ 9B08 34           	inc (hl)
 314+ 9B09 08               ex af,af
 315+ 9B0A 6F           	ld l,a
 316+ 9B0B 18 DD        	jr 6B
 317+ 9B0D
 318+ 9B0D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B0D
 320+ 9B0D 47           3 ld b,a
 321+ 9B0E 2A D0 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B11 23           2 inc hl
 323+ 9B12 23           	inc hl
 324+ 9B13 10 FC        	djnz 2B
 325+ 9B15 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B18 C9           8 ret
 327+ 9B19
 328+ 9B19              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B19              ;
 330+ 9B19              ;	24/7/22
 331+ 9B19              ;
 332+ 9B19              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B19              ;
 334+ 9B19              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B19              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B19              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B19
 338+ 9B19 3A CD 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B1C A7           	and a
 340+ 9B1D 20 1F        	jr nz,1F
 341+ 9B1F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B21 32 CD 8B         ld (CTRL_DESPLZ),a
 343+ 9B24
 344+ 9B24 21 C8 8B     	ld hl,Columns
 345+ 9B27 34           	inc (hl)
 346+ 9B28 3A D8 8B     	ld a,(Cuad_objeto)
 347+ 9B2B E6 01        	and 1
 348+ 9B2D 28 0F        	jr z,1F
 349+ 9B2F 2A C9 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B32 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B33 22 C9 8B     	ld (Posicion_actual),hl
 352+ 9B36 CD 9B 94     	call Genera_coordenadas
 353+ 9B39 CD 9E 9C     	call Inc_CTRL_DESPLZ
 354+ 9B3C 18 03        	jr 2F
 355+ 9B3E CD 9E 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B41 C9           2 ret
 357+ 9B42
 358+ 9B42              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B42              ;
 360+ 9B42              ;	24/7/22
 361+ 9B42              ;
 362+ 9B42              ;	Ciclo_completo.
 363+ 9B42              ;
 364+ 9B42              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B42              ;
 366+ 9B42              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B42              ; 	Decrementamos (Columns).
 368+ 9B42              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B42              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B42
 371+ 9B42
 372+ 9B42 3A CD 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B45 FE FF        	cp $ff
 374+ 9B47 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B49 E6 F0        	and $f0
 376+ 9B4B 20 28        	jr nz,3F
 377+ 9B4D
 378+ 9B4D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B4D
 380+ 9B4D 3A CD 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B50 47           	ld b,a
 382+ 9B51 3E F8        	ld a,$f8
 383+ 9B53 80           	add b
 384+ 9B54 32 CD 8B     	ld (CTRL_DESPLZ),a
 385+ 9B57 18 1C        	jr 3F
 386+ 9B59 21 C8 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B5C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B5D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B5E 32 CD 8B     	ld (CTRL_DESPLZ),a
 390+ 9B61 3A D8 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B64 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B66 20 0A        	jr nz,2F
 393+ 9B68 2A C9 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B6B 23           	inc hl
 395+ 9B6C 22 C9 8B     	ld (Posicion_actual),hl
 396+ 9B6F CD 9B 94     	call Genera_coordenadas
 397+ 9B72
 398+ 9B72              ; Inicia el puntero de Sprite.
 399+ 9B72
 400+ 9B72 CD 91 90     2 call Inicia_puntero_objeto_der
 401+ 9B75 C9           3 ret
 402+ 9B76
 403+ 9B76              ; ******************************************************************************************************************************************************************************************
 404+ 9B76              ;
 405+ 9B76              ;	15/02/23
 406+ 9B76              ;
 407+ 9B76              ;	Mov_left.
 408+ 9B76              ;
 409+ 9B76              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B76              ;
 411+ 9B76              Mov_left
 412+ 9B76
 413+ 9B76 21 C6 8B     	ld hl,Ctrl_0
 414+ 9B79 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B7B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B7B              ; 																	; _ en el caso de que no lo haya.
 417+ 9B7B 3A C6 8B     	ld a,(Ctrl_0)
 418+ 9B7E CB 77        	bit 6,a
 419+ 9B80 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B82
 421+ 9B82 CD 98 9C     	call Stop_Amadeus_left
 422+ 9B85 C8           	ret z
 423+ 9B86 20 4A        	jr nz,8F
 424+ 9B88
 425+ 9B88 3A BA 8B     11 ld a,(Coordenada_X)
 426+ 9B8B A7           	and a
 427+ 9B8C 20 44        	jr nz,8F
 428+ 9B8E
 429+ 9B8E 3A CD 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B91 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B92 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B94
 433+ 9B94              ; ---------- ---------- ----------
 434+ 9B94
 435+ 9B94 3A DE 8B     	ld a,(Vel_left)
 436+ 9B97 FE 02        	cp 2
 437+ 9B99 28 0F        	jr z,1F
 438+ 9B9B 38 04        	jr c,6F
 439+ 9B9D FE 04        	cp 4
 440+ 9B9F 28 12        	jr z,7F
 441+ 9BA1
 442+ 9BA1              ; ---------- ---------- ----------
 443+ 9BA1
 444+ 9BA1 3A CD 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BA4 FE F8        	cp $f8
 446+ 9BA6 20 2A        	jr nz,8F
 447+ 9BA8 18 10        	jr 4F
 448+ 9BAA 3A CD 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BAD FE F9        	cp $f9
 450+ 9BAF 20 21        	jr nz,8F
 451+ 9BB1 18 07        	jr 4F
 452+ 9BB3 3A CD 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BB6 FE FB        	cp $fb
 454+ 9BB8 20 18        	jr nz,8F
 455+ 9BBA
 456+ 9BBA              ; ---------- ---------- ----------
 457+ 9BBA
 458+ 9BBA              4
 459+ 9BBA CD C0 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BBD              ;	call Reinicio
 461+ 9BBD
 462+ 9BBD              ; ---------- ---------- ----------
 463+ 9BBD
 464+ 9BBD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BBF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BC0
 467+ 9BC0              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BC0              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BC0
 470+ 9BC0 CD D9 9B     	call DESPLZ_IZQ
 471+ 9BC3 C1           	pop bc
 472+ 9BC4 10 F9        	djnz 5B
 473+ 9BC6 2A C9 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BC9 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BCA 22 C9 8B     	ld (Posicion_actual),hl
 476+ 9BCD CD 9B 94     	call Genera_coordenadas
 477+ 9BD0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BD2
 479+ 9BD2              ; ---------- ---------- ----------
 480+ 9BD2
 481+ 9BD2              ; Movemos, no hay recolocación.
 482+ 9BD2
 483+ 9BD2 2A C9 8B     8 ld hl,(Posicion_actual)
 484+ 9BD5 CD D9 9B     	call DESPLZ_IZQ
 485+ 9BD8 C9           2 ret
 486+ 9BD9
 487+ 9BD9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BD9              ;
 489+ 9BD9              ;	22/9/22
 490+ 9BD9
 491+ 9BD9              DESPLZ_IZQ
 492+ 9BD9
 493+ 9BD9 CD E8 9B     	call Desplaza_izquierda
 494+ 9BDC CD 34 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BDF CD 5C 9C     	call Ciclo_completo_2
 496+ 9BE2 21 C6 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BE5 CB BE        	res 7,(hl)
 498+ 9BE7 C9           	ret
 499+ 9BE8
 500+ 9BE8              Desplaza_izquierda
 501+ 9BE8
 502+ 9BE8 3A DE 8B     	ld a,(Vel_left)
 503+ 9BEB 47           	ld b,a
 504+ 9BEC 2A D4 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BEF 23           1 inc hl
 506+ 9BF0 23           	inc hl
 507+ 9BF1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BF3 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BF6 CD 7C 90     	call Extrae_address
 510+ 9BF9 22 CB 8B     	ld (Puntero_objeto),hl
 511+ 9BFC
 512+ 9BFC              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BFC
 514+ 9BFC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BFC              ; Cuántos movimientos hemos hecho ??
 516+ 9BFC              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BFC
 518+ 9BFC 2A D0 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BFF EB           	ex de,hl
 520+ 9C00 A7           	and a
 521+ 9C01 ED 52        	sbc hl,de
 522+ 9C03 CB 3D        	srl l
 523+ 9C05 3E 08        6 ld a,8
 524+ 9C07 95           	sub l
 525+ 9C08 30 1E        	jr nc,3F
 526+ 9C0A
 527+ 9C0A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C0A              ; B="0".
 529+ 9C0A
 530+ 9C0A 04           4 inc b
 531+ 9C0B 3C           	inc a
 532+ 9C0C 20 FC        	jr nz,4B
 533+ 9C0E 78           	ld a,b
 534+ 9C0F 08           	ex af,af
 535+ 9C10 2A D0 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C13 23           5 inc hl
 537+ 9C14 23           	inc hl
 538+ 9C15 10 FC        	djnz 5B
 539+ 9C17 22 D4 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C1A CD 7C 90     	call Extrae_address
 541+ 9C1D 22 CB 8B     	ld (Puntero_objeto),hl
 542+ 9C20
 543+ 9C20              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C20              ; _(Posicion_actual).
 545+ 9C20
 546+ 9C20 21 C9 8B     	ld hl,Posicion_actual
 547+ 9C23 35           	dec (hl)
 548+ 9C24 08           	ex af,af
 549+ 9C25 6F           	ld l,a
 550+ 9C26 18 DD        	jr 6B
 551+ 9C28
 552+ 9C28              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C28
 554+ 9C28 47           3 ld b,a
 555+ 9C29 2A CE 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C2C 23           2 inc hl
 557+ 9C2D 23           	inc hl
 558+ 9C2E 10 FC        	djnz 2B
 559+ 9C30 22 D2 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C33 C9           8 ret
 561+ 9C34
 562+ 9C34              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C34              ;
 564+ 9C34              ;	modifica_parametros_1er_DESPLZ
 565+ 9C34              ;
 566+ 9C34              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C34              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C34              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C34
 570+ 9C34 3A CD 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C37 A7           	and a
 572+ 9C38 20 1E        	jr nz,1F
 573+ 9C3A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C3B 32 CD 8B         ld (CTRL_DESPLZ),a
 575+ 9C3E 21 C8 8B     	ld hl,Columns
 576+ 9C41 34           	inc (hl)
 577+ 9C42 3A D8 8B     	ld a,(Cuad_objeto)
 578+ 9C45 E6 01        	and 1
 579+ 9C47 20 0F        	jr nz,1F
 580+ 9C49 2A C9 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C4C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C4D 22 C9 8B     	ld (Posicion_actual),hl
 583+ 9C50 CD 9B 94     	call Genera_coordenadas
 584+ 9C53 CD AF 9C     	call Dec_CTRL_DESPLZ
 585+ 9C56 18 03        	jr 2F
 586+ 9C58 CD AF 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C5B C9           2 ret
 588+ 9C5C
 589+ 9C5C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C5C
 591+ 9C5C 3A CD 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C5F FE F7        	cp $f7
 593+ 9C61 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C63 30 2C        	jr nc,3F
 595+ 9C65
 596+ 9C65              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C65
 598+ 9C65 06 00        	ld b,0
 599+ 9C67 04           4 inc b
 600+ 9C68 3C           	inc a
 601+ 9C69 FE F7        	cp $f7
 602+ 9C6B 20 FA        	jr nz,4B
 603+ 9C6D 3E FF        	ld a,$ff
 604+ 9C6F 90           	sub b
 605+ 9C70 32 CD 8B     	ld (CTRL_DESPLZ),a
 606+ 9C73 18 1C        	jr 3F
 607+ 9C75
 608+ 9C75              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C75
 610+ 9C75 21 C8 8B     1 ld hl,Columns
 611+ 9C78 35           	dec (hl)
 612+ 9C79 AF           	xor a
 613+ 9C7A 32 CD 8B     	ld (CTRL_DESPLZ),a
 614+ 9C7D 3A D8 8B     	ld a,(Cuad_objeto)
 615+ 9C80 E6 01        	and 1
 616+ 9C82 28 0A        	jr z,2F
 617+ 9C84 2A C9 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C87 2B           	dec hl
 619+ 9C88 22 C9 8B     	ld (Posicion_actual),hl
 620+ 9C8B CD 9B 94     	call Genera_coordenadas
 621+ 9C8E
 622+ 9C8E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C8E
 624+ 9C8E CD A4 90     2 call Inicia_puntero_objeto_izq
 625+ 9C91 C9           3 ret
 626+ 9C92
 627+ 9C92              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C92              ;
 629+ 9C92              ;	19/10/22
 630+ 9C92              ;
 631+ 9C92              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C92              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C92
 634+ 9C92 3A BA 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C95 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C97 C9           	ret
 637+ 9C98
 638+ 9C98              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C98              ;
 640+ 9C98              ;	19/10/22
 641+ 9C98              ;
 642+ 9C98              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C98              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C98
 645+ 9C98 3A BA 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C9B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C9D C9           	ret
 648+ 9C9E
 649+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C9E              ;
 651+ 9C9E              ;	24/7/22
 652+ 9C9E              ;
 653+ 9C9E              ;	Inc_CTRL_DESPLZ
 654+ 9C9E              ;
 655+ 9C9E              ;
 656+ 9C9E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C9E
 658+ 9C9E 21 CD 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CA1 3A DF 8B     	ld a,(Vel_right)
 660+ 9CA4 A7           	and a
 661+ 9CA5 28 06        	jr z,1F
 662+ 9CA7 47           	ld b,a
 663+ 9CA8 34           3 inc (hl)
 664+ 9CA9 10 FD        	djnz 3B
 665+ 9CAB 18 01        	jr 2F
 666+ 9CAD 34           1 inc (hl)
 667+ 9CAE C9           2 ret
 668+ 9CAF
 669+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CAF              ;
 671+ 9CAF              ;	5/2/23
 672+ 9CAF              ;
 673+ 9CAF              ;	Dec_CTRL_DESPLZ
 674+ 9CAF              ;
 675+ 9CAF              ;
 676+ 9CAF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CAF
 678+ 9CAF 21 CD 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CB2 3A DE 8B     	ld a,(Vel_left)
 680+ 9CB5 A7           	and a
 681+ 9CB6 28 06        	jr z,1F
 682+ 9CB8 47           	ld b,a
 683+ 9CB9 35           3 dec (hl)
 684+ 9CBA 10 FD        	djnz 3B
 685+ 9CBC 18 01        	jr 2F
 686+ 9CBE 35           1 dec (hl)
 687+ 9CBF C9           2 ret
 688+ 9CC0
 689+ 9CC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CC0
 691+ 9CC0 2A C9 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CC3 01 1F 00     	ld bc,31
 693+ 9CC6 A7           	and a
 694+ 9CC7 ED 4A        	adc hl,bc
 695+ 9CC9 22 C9 8B     	ld (Posicion_actual),hl
 696+ 9CCC 21 C6 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CCF CB C6        	set 0,(hl)
 698+ 9CD1 C9           	ret
 699+ 9CD2
 700+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CD2
 702+ 9CD2 2A C9 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CD5 01 1F 00     	ld bc,31
 704+ 9CD8 A7           	and a
 705+ 9CD9 ED 42        	sbc hl,bc
 706+ 9CDB 22 C9 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CDE 21 C6 8B     	ld hl,Ctrl_0
 708+ 9CE1 CB CE        	set 1,(hl)
 709+ 9CE3 C9           	ret
 710+ 9CE4
 711+ 9CE4              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CE4
 713+ 9CE4 24           Reaparece_abajo inc h
 714+ 9CE5 01 E0 17     	ld bc,$17e0
 715+ 9CE8 A7           	and a
 716+ 9CE9 ED 4A        	adc hl,bc
 717+ 9CEB 22 C9 8B     	ld (Posicion_actual),hl
 718+ 9CEE 21 C6 8B     	ld hl,Ctrl_0
 719+ 9CF1 CB D6        	set 2,(hl)
 720+ 9CF3 C9           	ret
 721+ 9CF4
 722+ 9CF4              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CF4
 724+ 9CF4 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CF7 A7           	and a
 726+ 9CF8 ED 42        	sbc hl,bc
 727+ 9CFA 22 C9 8B     	ld (Posicion_actual),hl
 728+ 9CFD 21 C6 8B     	ld hl,Ctrl_0
 729+ 9D00 CB DE        	set 3,(hl)
 730+ 9D02 C9           	ret
 731+ 9D03
 732+ 9D03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D03              ;
 734+ 9D03              ;	15/07/23
 735+ 9D03
 736+ 9D03              Reinicio
 737+ 9D03
 738+ 9D03              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D03
 740+ 9D03 AF           	xor a
 741+ 9D04 21 EE 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D07 CD 25 9D     	call Limpia_contenido_hl
 743+ 9D0A
 744+ 9D0A 21 C9 8B     	ld hl,Posicion_actual
 745+ 9D0D CD 25 9D     	call Limpia_contenido_hl
 746+ 9D10
 747+ 9D10 CD 7D 92     	call Inicializa_Puntero_indice_mov
 748+ 9D13 CD 24 9E     	call Inicia_Puntero_mov
 749+ 9D16
 750+ 9D16 21 F0 8B     	ld hl,Incrementa_puntero
 751+ 9D19 06 05        	ld b,5
 752+ 9D1B 77           1 ld (hl),a
 753+ 9D1C 23           	inc hl
 754+ 9D1D 10 FC        	djnz 1B
 755+ 9D1F
 756+ 9D1F 21 C5 8B     	ld hl,Ctrl_2
 757+ 9D22 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D24
 759+ 9D24 C9           	ret
 760+ 9D25
 761+ 9D25 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D26 23           	inc hl
 763+ 9D27 77           	ld (hl),a
 764+ 9D28 C9           	ret
 765+ 9D29
 766+ 9D29              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D29              ;
 768+ 9D29              ;	18/6/24
 769+ 9D29              ;
 770+ 9D29
 771+ 9D29              Amadeus_a_izquierda
 772+ 9D29
 773+ 9D29              ;	Actualiza contador de movimientos.
 774+ 9D29
 775+ 9D29 21 77 89     	ld hl,Comm_Amadeus
 776+ 9D2C 35           	dec (hl)
 777+ 9D2D 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D2F
 779+ 9D2F 2A 75 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D32 2B           	dec hl
 781+ 9D33 2B           	dec hl
 782+ 9D34 2B           	dec hl
 783+ 9D35 2B           	dec hl
 784+ 9D36 22 75 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D39
 786+ 9D39 21 2C 8C     	ld hl,Ctrl_3
 787+ 9D3C CB EE        	set 5,(hl)
 788+ 9D3E
 789+ 9D3E C9           	ret
 790+ 9D3F
 791+ 9D3F 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D40 C9           	ret
 793+ 9D41
 794+ 9D41
 795+ 9D41              Amadeus_a_derecha
 796+ 9D41
 797+ 9D41              ;	Actualiza contador de movimientos.
 798+ 9D41
 799+ 9D41 21 77 89     	ld hl,Comm_Amadeus
 800+ 9D44 34           	inc (hl)
 801+ 9D45 3E 7A        	ld a,$7a
 802+ 9D47 BE           	cp (hl)
 803+ 9D48 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D4A
 805+ 9D4A 2A 75 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D4D 23           	inc hl
 807+ 9D4E 23           	inc hl
 808+ 9D4F 23           	inc hl
 809+ 9D50 23           	inc hl
 810+ 9D51 22 75 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D54
 812+ 9D54 21 2C 8C     	ld hl,Ctrl_3
 813+ 9D57 CB EE        	set 5,(hl)
 814+ 9D59 C9           	ret
 815+ 9D5A
 816+ 9D5A 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D5B C9           	ret
# file closed: Direcciones.asm
2144  9D5C              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D5C              ; ----- ----- ----- ----- -----
   2+ 9D5C              ;
   3+ 9D5C              ;   28/12/23
   4+ 9D5C
   5+ 9D5C              Movimiento
   6+ 9D5C
   7+ 9D5C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D5C
   9+ 9D5C 3A C5 8B         ld a,(Ctrl_2)
  10+ 9D5F CB 57            bit 2,a
  11+ 9D61 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D63
  13+ 9D63 2A EC 8B         ld hl,(Puntero_mov)
  14+ 9D66 7E               ld a,(hl)
  15+ 9D67
  16+ 9D67              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D67
  18+ 9D67              Inicia_desplazamiento.
  19+ 9D67
  20+ 9D67              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D67
  22+ 9D67 CD 5A 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D6A
  24+ 9D6A              ; Iniciamos (Repetimos_mov).
  25+ 9D6A
  26+ 9D6A 7E               ld a,(hl)
  27+ 9D6B E6 0F            and $0f
  28+ 9D6D 32 F2 8B         ld (Repetimos_desplazamiento),a
  29+ 9D70 32 F3 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D73
  31+ 9D73              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D73
  33+ 9D73 23               inc hl
  34+ 9D74 7E               ld a,(hl)
  35+ 9D75 32 F5 8B         ld (Cola_de_desplazamiento),a
  36+ 9D78 2B               dec hl
  37+ 9D79
  38+ 9D79 21 C5 8B         ld hl,Ctrl_2
  39+ 9D7C CB D6            set 2,(hl)
  40+ 9D7E
  41+ 9D7E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D7E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D7E
  44+ 9D7E              Desplazamiento_iniciado
  45+ 9D7E
  46+ 9D7E CD 2E 9E         call Aplica_desplazamiento
  47+ 9D81
  48+ 9D81              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D81
  50+ 9D81 3A 2C 8C         ld a,(Ctrl_3)
  51+ 9D84 CB 4F            bit 1,a
  52+ 9D86 C0               ret nz
  53+ 9D87
  54+ 9D87 21 F2 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D8A 35               dec (hl)
  56+ 9D8B C0               ret nz
  57+ 9D8C
  58+ 9D8C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D8C              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D8C              ; Analiza (Cola_de_desplazamiento).
  61+ 9D8C
  62+ 9D8C 3A F5 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D8F A7               and a
  64+ 9D90 CC 83 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D93 28 30            jr z,Reinicia_el_movimiento
  66+ 9D95
  67+ 9D95 FE FF            cp $ff
  68+ 9D97 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D99
  70+ 9D99 FE FE            cp $fe
  71+ 9D9B CC 08 9E         call z,Fijamos_bucle
  72+ 9D9E 28 25            jr z,Reinicia_el_movimiento
  73+ 9DA0
  74+ 9DA0 FE FD            cp $fd
  75+ 9DA2 20 11            jr nz,1F
  76+ 9DA4
  77+ 9DA4              ; ---
  78+ 9DA4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DA4
  80+ 9DA4 3A C5 8B         ld a,(Ctrl_2)
  81+ 9DA7 CB 5F            bit 3,a
  82+ 9DA9 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DAB
  84+ 9DAB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DAB
  86+ 9DAB 21 C5 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DAE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DB0
  89+ 9DB0 CD 19 9E         call Inicia_Repetimos_movimiento
  90+ 9DB3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DB5              ; ---
  92+ 9DB5
  93+ 9DB5 FE 01        1 cp 1
  94+ 9DB7 CA F2 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DBA
  96+ 9DBA 3D               dec a
  97+ 9DBB 32 F5 8B         ld (Cola_de_desplazamiento),a
  98+ 9DBE
  99+ 9DBE 3A F3 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DC1 32 F2 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DC4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DC4 C9               ret
 103+ 9DC5
 104+ 9DC5              Reinicia_el_movimiento
 105+ 9DC5
 106+ 9DC5 3A C5 8B         ld a,(Ctrl_2)
 107+ 9DC8 CB 5F            bit 3,a
 108+ 9DCA 28 1B            jr z,2F
 109+ 9DCC
 110+ 9DCC              ; (Cola_de_desplazamiento)="254".
 111+ 9DCC
 112+ 9DCC 21 F4 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DCF 35               dec (hl)
 114+ 9DD0 20 15            jr nz,2F
 115+ 9DD2
 116+ 9DD2              ; Fin de las repeticiones del último movimiento.
 117+ 9DD2
 118+ 9DD2 21 C5 8B         ld hl,Ctrl_2
 119+ 9DD5 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DD7
 121+ 9DD7 2A EC 8B         ld hl,(Puntero_mov)
 122+ 9DDA 23               inc hl
 123+ 9DDB 23               inc hl
 124+ 9DDC 23               inc hl
 125+ 9DDD 22 EC 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DE0              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DE0 7E               ld a,(hl)
 128+ 9DE1 32 F5 8B         ld (Cola_de_desplazamiento),a
 129+ 9DE4
 130+ 9DE4 C3 8C 9D         jp Cola
 131+ 9DE7
 132+ 9DE7 CD 24 9E     2 call Inicia_Puntero_mov
 133+ 9DEA
 134+ 9DEA 21 C5 8B         ld hl,Ctrl_2
 135+ 9DED CB 96            res 2,(hl)
 136+ 9DEF
 137+ 9DEF C3 5C 9D         jp Movimiento
 138+ 9DF2
 139+ 9DF2              Siguiente_desplazamiento
 140+ 9DF2
 141+ 9DF2              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DF2              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DF2
 144+ 9DF2 21 C5 8B         ld hl,Ctrl_2
 145+ 9DF5 CB 96            res 2,(hl)
 146+ 9DF7
 147+ 9DF7 2A EC 8B         ld hl,(Puntero_mov)
 148+ 9DFA 23               inc hl
 149+ 9DFB 23               inc hl
 150+ 9DFC 22 EC 8B         ld (Puntero_mov),hl
 151+ 9DFF
 152+ 9DFF 7E               ld a,(hl)
 153+ 9E00 A7               and a
 154+ 9E01 CC 83 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E04 CA C5 9D         jp z,Reinicia_el_movimiento
 156+ 9E07
 157+ 9E07 C9               ret
 158+ 9E08
 159+ 9E08              ; Subrutinas -----------------------------------------
 160+ 9E08              ; ---------- --------- --------- ---------- ----------
 161+ 9E08              ;
 162+ 9E08              ;   24/07/23
 163+ 9E08              ;
 164+ 9E08              ;   Fijamos_bucle
 165+ 9E08              ;
 166+ 9E08              ;
 167+ 9E08
 168+ 9E08              Fijamos_bucle
 169+ 9E08
 170+ 9E08 3A F0 8B         ld a,(Incrementa_puntero)
 171+ 9E0B 3C               inc a
 172+ 9E0C 32 F1 8B         ld (Incrementa_puntero_backup),a
 173+ 9E0F
 174+ 9E0F CD 83 9E         call Incrementa_Puntero_indice_mov
 175+ 9E12 2A EA 8B         ld hl,(Puntero_indice_mov)
 176+ 9E15 22 EE 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E18 C9               ret
 178+ 9E19
 179+ 9E19              ; ---------- --------- --------- ---------- ----------
 180+ 9E19              ;
 181+ 9E19              ;   07/7/23
 182+ 9E19              ;
 183+ 9E19              ;   Inicia_Repetimos_movimiento
 184+ 9E19              ;
 185+ 9E19              ;
 186+ 9E19
 187+ 9E19              Inicia_Repetimos_movimiento
 188+ 9E19
 189+ 9E19              ; Iniciamos (Repetimos_movimiento).
 190+ 9E19
 191+ 9E19 DD 2A EC 8B      ld ix,(Puntero_mov)
 192+ 9E1D DD 7E 02         ld a,(ix+2)
 193+ 9E20 32 F4 8B         ld (Repetimos_movimiento),a
 194+ 9E23
 195+ 9E23 C9               ret
 196+ 9E24
 197+ 9E24              ; ---------- --------- --------- ---------- ----------
 198+ 9E24              ;
 199+ 9E24              ;   26/6/23
 200+ 9E24              ;
 201+ 9E24              ;   Inicia_Puntero_mov
 202+ 9E24              ;
 203+ 9E24              ;
 204+ 9E24
 205+ 9E24 2A EA 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E27 CD 7C 90         call Extrae_address
 207+ 9E2A 22 EC 8B         ld (Puntero_mov),hl
 208+ 9E2D C9               ret
 209+ 9E2E
 210+ 9E2E              ; ---------- --------- --------- ---------- ----------
 211+ 9E2E              ;
 212+ 9E2E              ;   27/06/23
 213+ 9E2E              ;
 214+ 9E2E              ;   Aplica_movimiento.
 215+ 9E2E
 216+ 9E2E              Aplica_desplazamiento
 217+ 9E2E
 218+ 9E2E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E2E
 220+ 9E2E 2A EC 8B         ld hl, (Puntero_mov)
 221+ 9E31
 222+ 9E31 7E               ld a,(hl)
 223+ 9E32 E6 F0            and $f0
 224+ 9E34 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E35
 226+ 9E35 CB 7E            bit 7,(hl)
 227+ 9E37 28 03            jr z,1F
 228+ 9E39 CD 10 9A         call Mov_up
 229+ 9E3C 2A EC 8B     1 ld hl, (Puntero_mov)
 230+ 9E3F CB 76            bit 6,(hl)
 231+ 9E41 28 03            jr z,2F
 232+ 9E43 CD D7 99         call Mov_down
 233+ 9E46
 234+ 9E46              ; Se ha aplicado reinicio ???
 235+ 9E46              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E46
 237+ 9E46              ;    ld a,(Ctrl_3)
 238+ 9E46              ;    bit 1,a
 239+ 9E46              ;    ret nz
 240+ 9E46
 241+ 9E46 2A EC 8B     2 ld hl, (Puntero_mov)
 242+ 9E49 CB 6E            bit 5,(hl)
 243+ 9E4B 28 03            jr z,3F
 244+ 9E4D CD 76 9B         call Mov_left
 245+ 9E50 2A EC 8B     3 ld hl, (Puntero_mov)
 246+ 9E53 CB 66            bit 4,(hl)
 247+ 9E55 C8               ret z
 248+ 9E56 CD 53 9A         call Mov_right
 249+ 9E59 C9               ret
 250+ 9E5A
 251+ 9E5A              ; ---------- --------- --------- ---------- ----------
 252+ 9E5A              ;
 253+ 9E5A              ;   26/06/23
 254+ 9E5A              ;
 255+ 9E5A              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E5A
 257+ 9E5A              Ajusta_velocidad_desplazamiento
 258+ 9E5A
 259+ 9E5A              ; 1er byte de la cadena de movimiento.
 260+ 9E5A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E5A
 262+ 9E5A CD 78 9E         call Extrae_nibble_alto
 263+ 9E5D
 264+ 9E5D 32 E0 8B         ld (Vel_up),a
 265+ 9E60 79               ld a,c
 266+ 9E61 E6 0F            and $0f
 267+ 9E63 32 E1 8B         ld (Vel_down),a
 268+ 9E66
 269+ 9E66              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E66              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E66
 272+ 9E66 23               inc hl
 273+ 9E67 CD 78 9E         call Extrae_nibble_alto
 274+ 9E6A
 275+ 9E6A 32 DE 8B         ld (Vel_left),a
 276+ 9E6D 79               ld a,c
 277+ 9E6E E6 0F            and $0f
 278+ 9E70 32 DF 8B         ld (Vel_right),a
 279+ 9E73
 280+ 9E73              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E73
 282+ 9E73 23               inc hl
 283+ 9E74 22 EC 8B         ld (Puntero_mov),hl
 284+ 9E77 C9               ret
 285+ 9E78
 286+ 9E78 06 04        Extrae_nibble_alto ld b,4
 287+ 9E7A 7E               ld a,(hl)
 288+ 9E7B 4F               ld c,a
 289+ 9E7C E6 F0            and $f0
 290+ 9E7E CB 3F        1 srl a
 291+ 9E80 10 FC            djnz 1B
 292+ 9E82 C9               ret
 293+ 9E83
 294+ 9E83              ; ---------- --------- --------- ---------- ----------
 295+ 9E83              ;
 296+ 9E83              ;   5/7/23
 297+ 9E83              ;
 298+ 9E83              ;   Incrementa_Puntero_indice_mov
 299+ 9E83
 300+ 9E83              Incrementa_Puntero_indice_mov
 301+ 9E83
 302+ 9E83 21 F0 8B         ld hl,Incrementa_puntero
 303+ 9E86 34               inc (hl)
 304+ 9E87
 305+ 9E87 2A EA 8B         ld hl,(Puntero_indice_mov)
 306+ 9E8A 01 02 00         ld bc,2
 307+ 9E8D A7               and a
 308+ 9E8E 09               add hl,bc
 309+ 9E8F 22 EA 8B         ld (Puntero_indice_mov),hl
 310+ 9E92
 311+ 9E92 7E               ld a,(hl)
 312+ 9E93 A7               and a
 313+ 9E94
 314+ 9E94              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E94
 316+ 9E94              ;    jr z,$
 317+ 9E94
 318+ 9E94              ;! Reinicia el Patrón de movimiento.
 319+ 9E94
 320+ 9E94 CC 99 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E97
 322+ 9E97 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E98
 324+ 9E98 C9               ret
 325+ 9E99
 326+ 9E99              ; ---------- --------- --------- ---------- ----------
 327+ 9E99              ;
 328+ 9E99              ;   15/01/24
 329+ 9E99              ;
 330+ 9E99              ;   Inicializa_Puntero_indice_mov
 331+ 9E99
 332+ 9E99              Inicializa_Puntero_indice_mov_2
 333+ 9E99
 334+ 9E99              ; Existe etiqueta de bucle principal???
 335+ 9E99
 336+ 9E99 2A EE 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E9C 24               inc h
 338+ 9E9D 25               dec h
 339+ 9E9E 28 05            jr z,2F
 340+ 9EA0
 341+ 9EA0 22 EA 8B         ld (Puntero_indice_mov),hl
 342+ 9EA3 18 14            jr 3F
 343+ 9EA5
 344+ 9EA5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EA5
 346+ 9EA5 3A F0 8B     2 ld a,(Incrementa_puntero)
 347+ 9EA8 47               ld b,a
 348+ 9EA9
 349+ 9EA9 2A EA 8B         ld hl,(Puntero_indice_mov)
 350+ 9EAC 2B           1 dec hl
 351+ 9EAD 2B               dec hl
 352+ 9EAE 10 FC            djnz 1B
 353+ 9EB0 22 EA 8B         ld (Puntero_indice_mov),hl
 354+ 9EB3
 355+ 9EB3 AF               xor a
 356+ 9EB4 32 F0 8B         ld (Incrementa_puntero),a
 357+ 9EB7 18 06            jr 4F
 358+ 9EB9
 359+ 9EB9 3A F1 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EBC 32 F0 8B         ld (Incrementa_puntero),a
 361+ 9EBF C9           4 ret
 362+ 9EC0
 363+ 9EC0              ; ----------------------------------------------------------------------
 364+ 9EC0              ;
 365+ 9EC0              ;   30/01/24
 366+ 9EC0              ;
 367+ 9EC0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EC0
 369+ 9EC0 3A B9 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EC3 CD 18 94         call Calcula_salto_en_BC
 371+ 9EC6 21 E2 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EC9 A7               and a
 373+ 9ECA ED 4A            adc hl,bc
 374+ 9ECC C9               ret
 375+ 9ECD
 376+ 9ECD              ; ----------------------------------------------------------------------
 377+ 9ECD              ;
 378+ 9ECD              ;   30/01/24
 379+ 9ECD              ;
 380+ 9ECD              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9ECD              ;
 382+ 9ECD              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9ECD
 384+ 9ECD 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9ECE 23               inc hl
 386+ 9ECF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9ED0 69               ld l,c
 388+ 9ED1 60               ld h,b
 389+ 9ED2 22 C2 8B         ld (Contador_de_mov_masticados),hl
 390+ 9ED5 C9               ret
 391+ 9ED6
# file closed: Movimiento.asm
2145  9ED6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ED6              ; --------------------------------------------------------------------------------------
   2+ 9ED6              ;
   3+ 9ED6              ;   31/08/24
   4+ 9ED6              ;
   5+ 9ED6
   6+ 9ED6              Compara_con_coordenadas_de_disparo
   7+ 9ED6
   8+ 9ED6 3A BB 8B         ld a,(Coordenada_y)
   9+ 9ED9 47               ld b,a
  10+ 9EDA 3A 36 8C         ld a,(Coordenadas_disparo_certero)
  11+ 9EDD 90               sub b
  12+ 9EDE
  13+ 9EDE              ; A = "0" ok
  14+ 9EDE              ; A = "1" ok
  15+ 9EDE
  16+ 9EDE 28 08            jr z,Comprueba_coordenada_X
  17+ 9EE0 3D               dec a
  18+ 9EE1 28 05            jr z,Comprueba_coordenada_X
  19+ 9EE3
  20+ 9EE3              ; A = "$ff" ok
  21+ 9EE3
  22+ 9EE3 FE FE            cp $fe
  23+ 9EE5 28 01            jr z,Comprueba_coordenada_X
  24+ 9EE7
  25+ 9EE7 C9               ret
  26+ 9EE8
  27+ 9EE8              Comprueba_coordenada_X
  28+ 9EE8
  29+ 9EE8 3A BA 8B         ld a,(Coordenada_X)
  30+ 9EEB 47               ld b,a
  31+ 9EEC 21 37 8C         ld hl,Coordenadas_disparo_certero+1
  32+ 9EEF 7E               ld a,(hl)
  33+ 9EF0 90               sub b
  34+ 9EF1
  35+ 9EF1              ; A = "0" ok
  36+ 9EF1              ; A = "1" ok
  37+ 9EF1
  38+ 9EF1 28 09            jr z,Activa_Impacto_en_entidad
  39+ 9EF3 3D               dec a
  40+ 9EF4 28 06            jr z,Activa_Impacto_en_entidad
  41+ 9EF6
  42+ 9EF6              ; A = "2" ok
  43+ 9EF6
  44+ 9EF6 3D               dec a
  45+ 9EF7 28 03            jr z,Activa_Impacto_en_entidad
  46+ 9EF9
  47+ 9EF9              ; A = "$ff"
  48+ 9EF9
  49+ 9EF9 FE FD            cp $fd
  50+ 9EFB C0               ret nz
  51+ 9EFC
  52+ 9EFC              Activa_Impacto_en_entidad
  53+ 9EFC
  54+ 9EFC              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
  55+ 9EFC
  56+ 9EFC 3E 02            ld a,2
  57+ 9EFE 32 BD 8B         ld (Impacto),a
  58+ 9F01
  59+ 9F01              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
  60+ 9F01
  61+ 9F01 11 C0 87         ld de,Indice_Explosion_entidades
  62+ 9F04 21 C0 8B         ld hl,Puntero_de_almacen_de_mov_masticados
  63+ 9F07
  64+ 9F07 73               ld (hl),e
  65+ 9F08 23               inc hl
  66+ 9F09 72               ld (hl),d
  67+ 9F0A
  68+ 9F0A              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
  69+ 9F0A
  70+ 9F0A 21 33 8C         ld hl,Impacto2
  71+ 9F0D CB 9E            res 3,(hl)
  72+ 9F0F
  73+ 9F0F C9               ret
  74+ 9F10
  75+ 9F10              ; --------------------------------------------------------------------------------------
  76+ 9F10              ;
  77+ 9F10              ;   26/08/24
  78+ 9F10              ;
  79+ 9F10
  80+ 9F10              Limpia_album_de_borrado_disparos
  81+ 9F10
  82+ 9F10 21 2E 8C         ld hl,Ctrl_5
  83+ 9F13 CB 46            bit 0,(hl)
  84+ 9F15 C8               ret z
  85+ 9F16 CB 86            res 0,(hl)
  86+ 9F18
  87+ 9F18 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
  88+ 9F1B 3D               dec a
  89+ 9F1C 3D               dec a
  90+ 9F1D C0               ret nz
  91+ 9F1E
  92+ 9F1E              Limpiando
  93+ 9F1E
  94+ 9F1E AF               xor a
  95+ 9F1F 2A 14 8C         ld hl,(Album_de_borrado_disparos)
  96+ 9F22 77               ld (hl),a
  97+ 9F23 5D               ld e,l
  98+ 9F24 54               ld d,h
  99+ 9F25 1C               inc e                                           ; DE = HL+1
 100+ 9F26 01 3A 00         ld bc,$003a
 101+ 9F29 ED B0            ldir
 102+ 9F2B
 103+ 9F2B C9               ret
 104+ 9F2C
 105+ 9F2C
 106+ 9F2C              ; --------------------------------------------------------------------------------------
 107+ 9F2C              ;
 108+ 9F2C              ;   26/08/24
 109+ 9F2C              ;
 110+ 9F2C
 111+ 9F2C              Calcula_bytes_pintado_disparos
 112+ 9F2C
 113+ 9F2C 2A 12 8C         ld hl,(Album_de_pintado_disparos)
 114+ 9F2F 45               ld b,l
 115+ 9F30 2A 16 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 116+ 9F33 7D               ld a,l
 117+ 9F34
 118+ 9F34 90               sub b
 119+ 9F35 32 18 8C         ld (Num_de_bytes_album_de_disparos),a
 120+ 9F38
 121+ 9F38 C9               ret
 122+ 9F39
 123+ 9F39              ; --------------------------------------------------------------------------------------
 124+ 9F39              ;
 125+ 9F39              ;   23/08/24
 126+ 9F39              ;
 127+ 9F39              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 128+ 9F39              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 129+ 9F39              ;   _disparos que el álbum del FRAME actual).
 130+ 9F39
 131+ 9F39              Limpia_album_de_pintado_disparos
 132+ 9F39
 133+ 9F39              ;   Exclusiones.
 134+ 9F39
 135+ 9F39 3A 19 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 136+ 9F3C A7               and a
 137+ 9F3D C8               ret z
 138+ 9F3E
 139+ 9F3E              ; -----
 140+ 9F3E
 141+ 9F3E A7               and a
 142+ 9F3F
 143+ 9F3F 3A 18 8C         ld a,(Num_de_bytes_album_de_disparos)
 144+ 9F42 47               ld b,a
 145+ 9F43 3A 19 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 146+ 9F46
 147+ 9F46 90               sub b
 148+ 9F47
 149+ 9F47 C8               ret z
 150+ 9F48 D8               ret c
 151+ 9F49
 152+ 9F49 2A 16 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 153+ 9F4C 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 154+ 9F4D AF               xor a                                                               ; "0".
 155+ 9F4E
 156+ 9F4E 77           1 ld (hl),a
 157+ 9F4F 2C               inc l
 158+ 9F50 10 FC            djnz 1B
 159+ 9F52
 160+ 9F52 C9               ret
 161+ 9F53
 162+ 9F53              ; --------------------------------------------------------------------------------------
 163+ 9F53              ;
 164+ 9F53              ;   27/08/24
 165+ 9F53              ;
 166+ 9F53
 167+ 9F53              Motor_Disparos
 168+ 9F53
 169+ 9F53              ;    Exclusiones:
 170+ 9F53
 171+ 9F53 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
 172+ 9F56 3D               dec a
 173+ 9F57 3D               dec a
 174+ 9F58 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 175+ 9F5A
 176+ 9F5A              ; .........................
 177+ 9F5A
 178+ 9F5A              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 179+ 9F5A
 180+ 9F5A 21 24 89         ld hl,Disparo_1A+1
 181+ 9F5D
 182+ 9F5D 34               inc (hl)
 183+ 9F5E 35               dec (hl)
 184+ 9F5F
 185+ 9F5F 28 06            jr z,1F
 186+ 9F61
 187+ 9F61              ;   Esta caja contiene un disparo.
 188+ 9F61
 189+ 9F61 CD 90 9F         call Consulta_Impacto
 190+ 9F64 CC A9 9F         call z,Mueve_disparo_Amadeus
 191+ 9F67
 192+ 9F67 21 28 89     1 ld hl,Disparo_2A+1
 193+ 9F6A
 194+ 9F6A 34               inc (hl)
 195+ 9F6B 35               dec (hl)
 196+ 9F6C 28 06            jr z,2F
 197+ 9F6E
 198+ 9F6E              ; Esta caja contiene un disparo.
 199+ 9F6E
 200+ 9F6E CD 90 9F         call Consulta_Impacto
 201+ 9F71 CC A9 9F         call z,Mueve_disparo_Amadeus
 202+ 9F74
 203+ 9F74              ; Disparos de entidades.
 204+ 9F74
 205+ 9F74 3A 1B 8C     2 ld a,(Numero_de_disparos_de_entidades)
 206+ 9F77 A7               and a
 207+ 9F78 C8               ret z
 208+ 9F79
 209+ 9F79 06 07            ld b,7                                                               ; Contador de disparos.
 210+ 9F7B 21 2B 89         ld hl,Indice_de_disparos_entidades
 211+ 9F7E
 212+ 9F7E CD 7C 90     4 call Extrae_address
 213+ 9F81 13               inc de
 214+ 9F82 13               inc de
 215+ 9F83 ED 53 1D 8C      ld (Puntero_rancio_disparos_album),de
 216+ 9F87
 217+ 9F87 23               inc hl
 218+ 9F88
 219+ 9F88 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 220+ 9F89 35               dec (hl)
 221+ 9F8A 28 00            jr z,3F
 222+ 9F8C
 223+ 9F8C EB           3 ex de,hl
 224+ 9F8D 10 EF            djnz 4B
 225+ 9F8F
 226+ 9F8F C9               ret
 227+ 9F90
 228+ 9F90              ; ----------------------
 229+ 9F90              ;
 230+ 9F90              ;
 231+ 9F90              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 232+ 9F90              ;
 233+ 9F90              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 234+ 9F90
 235+ 9F90
 236+ 9F90              Consulta_Impacto
 237+ 9F90
 238+ 9F90              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 239+ 9F90              ;   _sea lo más coherente posible.
 240+ 9F90
 241+ 9F90 E5               push hl
 242+ 9F91 2B               dec hl
 243+ 9F92 CD C4 A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 244+ 9F95 E1               pop hl
 245+ 9F96 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 246+ 9F97
 247+ 9F97 C8               ret z
 248+ 9F98
 249+ 9F98              ;   IMPACTO !!!!!
 250+ 9F98
 251+ 9F98 3A 33 8C         ld a,(Impacto2)
 252+ 9F9B CB DF            set 3,a
 253+ 9F9D 32 33 8C         ld (Impacto2),a
 254+ 9FA0
 255+ 9FA0 E5               push hl
 256+ 9FA1 CD B1 A0         call Genera_coordenadas_de_disparo_Amadeus
 257+ 9FA4 E1               pop hl
 258+ 9FA5 CD C2 9F         call Elimina_disparo
 259+ 9FA8
 260+ 9FA8 C9               ret
 261+ 9FA9
 262+ 9FA9              ; ----------------------
 263+ 9FA9              ;
 264+ 9FA9              ;
 265+ 9FA9              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 266+ 9FA9
 267+ 9FA9              Mueve_disparo_Amadeus
 268+ 9FA9
 269+ 9FA9 CD 7C 90         call Extrae_address
 270+ 9FAC
 271+ 9FAC CD A0 99         call PreviousScan
 272+ 9FAF CD A0 99         call PreviousScan
 273+ 9FB2 CD A0 99         call PreviousScan
 274+ 9FB5 CD A0 99         call PreviousScan
 275+ 9FB8
 276+ 9FB8              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 277+ 9FB8
 278+ 9FB8 7C               ld a,h
 279+ 9FB9 D6 40            sub $40
 280+ 9FBB EB               ex de,hl
 281+ 9FBC 38 04            jr c,Elimina_disparo
 282+ 9FBE
 283+ 9FBE               ; Introduce nuevo puntero_de_impresión en la caja.
 284+ 9FBE
 285+ 9FBE 73               ld (hl),e
 286+ 9FBF 23               inc hl
 287+ 9FC0 72               ld (hl),d
 288+ 9FC1
 289+ 9FC1 C9               ret
 290+ 9FC2
 291+ 9FC2              ; ----------------------
 292+ 9FC2              ;
 293+ 9FC2              ;   2/9/24
 294+ 9FC2
 295+ 9FC2              Elimina_disparo
 296+ 9FC2
 297+ 9FC2              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 298+ 9FC2              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 299+ 9FC2
 300+ 9FC2              ;   Disparo_1A defw 0									; Puntero objeto.
 301+ 9FC2              ;   	defw 0											; Puntero de impresión.
 302+ 9FC2              ;   	db 0											; Impacto.
 303+ 9FC2
 304+ 9FC2 2B               dec hl
 305+ 9FC3 2B               dec hl
 306+ 9FC4
 307+ 9FC4 AF               xor a
 308+ 9FC5 77               ld (hl),a
 309+ 9FC6 23               inc hl
 310+ 9FC7 77               ld (hl),a                                           ; Puntero_objeto borrado.
 311+ 9FC8 23               inc hl
 312+ 9FC9 77               ld (hl),a
 313+ 9FCA 23               inc hl
 314+ 9FCB 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 315+ 9FCC 23               inc hl
 316+ 9FCD 77               ld (hl),a                                           ; Impacto borrado.
 317+ 9FCE
 318+ 9FCE 21 1A 8C         ld hl,Numero_de_disparos_de_Amadeus
 319+ 9FD1 34               inc (hl)
 320+ 9FD2
 321+ 9FD2 3A 1C 8C         ld a,(Permiso_de_disparo_Amadeus)
 322+ 9FD5 F6 01            or 1
 323+ 9FD7 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a
 324+ 9FDA
 325+ 9FDA 21 2E 8C         ld hl,Ctrl_5                                        ; Indica que ha desaparecido un disparo.
 326+ 9FDD CB C6            set 0,(hl)
 327+ 9FDF
 328+ 9FDF AF               xor a
 329+ 9FE0 3C               inc a                                               ; Siempre que eliminamos un disparo tenemos: "NZ".
 330+ 9FE1
 331+ 9FE1 C9               ret
 332+ 9FE2
 333+ 9FE2              ; --------------------------------------------------------------------------------------
 334+ 9FE2              ;
 335+ 9FE2              ;   21/8/24
 336+ 9FE2              ;
 337+ 9FE2
 338+ 9FE2              Pinta_disparos
 339+ 9FE2
 340+ 9FE2 ED 73 06 8C      ld (Stack),sp
 341+ 9FE6 06 02            ld b,2
 342+ 9FE8
 343+ 9FE8 ED 7B 14 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 344+ 9FEC
 345+ 9FEC D1           2 pop de
 346+ 9FED
 347+ 9FED 14               inc d
 348+ 9FEE 15               dec d
 349+ 9FEF
 350+ 9FEF 28 1B            jr z,1F
 351+ 9FF1
 352+ 9FF1              Imprime_scanlines_de_disparo
 353+ 9FF1
 354+ 9FF1 E1               pop hl
 355+ 9FF2
 356+ 9FF2              ; Puntero objeto en DE.
 357+ 9FF2              ; Puntero_de_impresión en HL.
 358+ 9FF2
 359+ 9FF2              ; 1er scanline.
 360+ 9FF2
 361+ 9FF2 1A               ld a,(de)
 362+ 9FF3 AE               xor (hl)
 363+ 9FF4 77               ld (hl),a
 364+ 9FF5
 365+ 9FF5 13               inc de
 366+ 9FF6 2C               inc l
 367+ 9FF7
 368+ 9FF7 1A               ld a,(de)
 369+ 9FF8 AE               xor (hl)
 370+ 9FF9 77               ld (hl),a
 371+ 9FFA
 372+ 9FFA              ; 2º scanline.
 373+ 9FFA
 374+ 9FFA E1               pop hl
 375+ 9FFB 1B               dec de
 376+ 9FFC
 377+ 9FFC 1A               ld a,(de)
 378+ 9FFD AE               xor (hl)
 379+ 9FFE 77               ld (hl),a
 380+ 9FFF
 381+ 9FFF 13               inc de
 382+ A000 2C               inc l
 383+ A001
 384+ A001 1A               ld a,(de)
 385+ A002 AE               xor (hl)
 386+ A003 77               ld (hl),a
 387+ A004
 388+ A004              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 389+ A004
 390+ A004 18 E6            jr 2B
 391+ A006
 392+ A006 ED 7B 12 8C  3 ld sp,(Album_de_pintado_disparos)
 393+ A00A 18 E0            jr 2B
 394+ A00C
 395+ A00C 10 F8        1 djnz 3B
 396+ A00E ED 7B 06 8C      ld sp,(Stack)
 397+ A012 C9               ret
 398+ A013
 399+ A013              ; --------------------------------------------------------------------------------------
 400+ A013              ;
 401+ A013              ;   28/8/24
 402+ A013              ;
 403+ A013              ;   Modifica: HL y DE.
 404+ A013
 405+ A013
 406+ A013              Genera_datos_de_impresion_disparos_Amadeus
 407+ A013
 408+ A013              ;   Exclusiones:
 409+ A013
 410+ A013 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
 411+ A016 3D               dec a
 412+ A017 3D               dec a
 413+ A018 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 414+ A019
 415+ A019              ; -----
 416+ A019
 417+ A019 ED 73 06 8C      ld (Stack),sp
 418+ A01D 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 419+ A020
 420+ A020 21 2B 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 421+ A023 ED 72            sbc hl,sp                                                 ; Última caja ???
 422+ A025 28 24            jr z,Salida
 423+ A027
 424+ A027 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 425+ A028
 426+ A028 14               inc d
 427+ A029 15               dec d
 428+ A02A
 429+ A02A 20 03            jr nz,Genera_scanlines_de_disparo_Amadeus
 430+ A02C
 431+ A02C              Siguiente_disparo_Amadeus
 432+ A02C
 433+ A02C D1               pop de
 434+ A02D 18 F1            jr 1B
 435+ A02F
 436+ A02F              Genera_scanlines_de_disparo_Amadeus
 437+ A02F
 438+ A02F E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 439+ A030              ;                                                             ; Puntero_de_impresión del disparo en HL.
 440+ A030
 441+ A030 ED 73 1D 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 442+ A034
 443+ A034 ED 7B 16 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 444+ A038
 445+ A038 C1               pop bc
 446+ A039 C1               pop bc
 447+ A03A C1               pop bc
 448+ A03B
 449+ A03B ED 73 16 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 450+ A03F
 451+ A03F E5               push hl                                                   ; Sube 2º scanline al álbum.
 452+ A040 CD A0 99         call PreviousScan
 453+ A043 E5               push hl                                                   ; Sube 1er scanline al álbum.
 454+ A044 D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 455+ A045
 456+ A045 ED 7B 1D 8C      ld sp,(Puntero_rancio_disparos_album)
 457+ A049 18 D5            jr 1B
 458+ A04B
 459+ A04B
 460+ A04B              Salida
 461+ A04B
 462+ A04B ED 7B 06 8C      ld sp,(Stack)
 463+ A04F C9               ret
 464+ A050
 465+ A050              ; --------------------------------------------------------------------------------------
 466+ A050              ;
 467+ A050              ;   17/08/24
 468+ A050              ;
 469+ A050
 470+ A050              Genera_disparo_Amadeus
 471+ A050
 472+ A050              ;   Exclusiones.
 473+ A050
 474+ A050 3A 1C 8C         ld a,(Permiso_de_disparo_Amadeus)
 475+ A053 A7               and a
 476+ A054 C8               ret z                                                    ; Salimos si no hay permiso de disparo.
 477+ A055 3D               dec a
 478+ A056 32 1C 8C         ld (Permiso_de_disparo_Amadeus),a
 479+ A059
 480+ A059 3A 1A 8C         ld a,(Numero_de_disparos_de_Amadeus)
 481+ A05C A7               and a
 482+ A05D C8               ret z                                                    ; Hay 2 disparos en pantalla, no hay cajas libres.
 483+ A05E
 484+ A05E              ; ---------------------------------------------------------------------------------------------------------------
 485+ A05E
 486+ A05E              ;   Dec nº de disparos de Amadeus.
 487+ A05E
 488+ A05E 21 1A 8C         ld hl,Numero_de_disparos_de_Amadeus
 489+ A061 35               dec (hl)
 490+ A062
 491+ A062              ;   Nos situamos en la 1ª caja que encontramos vacía.
 492+ A062
 493+ A062 21 24 89         ld hl,Disparo_1A+1
 494+ A065
 495+ A065 34               inc (hl)
 496+ A066 35               dec (hl)
 497+ A067 2B               dec hl
 498+ A068
 499+ A068 28 03            jr z,7F
 500+ A06A
 501+ A06A 21 27 89         ld hl,Disparo_2A
 502+ A06D
 503+ A06D 22 31 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 504+ A070
 505+ A070              ; ---------------------------------------------------------------------------------------------------------------
 506+ A070
 507+ A070              Define_puntero_objeto_disparo
 508+ A070
 509+ A070              ;   Inicializamos contador.
 510+ A070
 511+ A070 06 00            ld b,0
 512+ A072
 513+ A072 2A 73 89         ld hl,(p.imp.amadeus)
 514+ A075 2C               inc l
 515+ A076
 516+ A076 3E 80            ld a,$80
 517+ A078 BE               cp (hl)
 518+ A079 28 0D            jr z,1F
 519+ A07B
 520+ A07B 04               inc b
 521+ A07C
 522+ A07C 3E 60            ld a,$60
 523+ A07E BE               cp (hl)
 524+ A07F 28 07            jr z,1F
 525+ A081
 526+ A081
 527+ A081 04               inc b
 528+ A082
 529+ A082 3E 18            ld a,$18
 530+ A084 BE               cp (hl)
 531+ A085 28 01            jr z,1F
 532+ A087
 533+ A087 04               inc b
 534+ A088
 535+ A088              ;   Calcula el Puntero_de_impresión del disparo.
 536+ A088
 537+ A088              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 538+ A088
 539+ A088 CD A0 99     1 call PreviousScan
 540+ A08B
 541+ A08B 78               ld a,b
 542+ A08C CB 3F            srl a
 543+ A08E 28 03            jr z,4F
 544+ A090
 545+ A090              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 546+ A090 E5               push hl
 547+ A091 18 02            jr 5F
 548+ A093 2D           4 dec l
 549+ A094 E5               push hl
 550+ A095              ; ---
 551+ A095
 552+ A095              ;   Calcula el Puntero_objeto del disparo.
 553+ A095
 554+ A095 21 70 83     5 ld hl,Indice_disparo
 555+ A098 04               inc b
 556+ A099 05               dec b
 557+ A09A 28 04            jr z,2F
 558+ A09C
 559+ A09C              ;   Nos desplazamos por el índice de disparos.
 560+ A09C
 561+ A09C 2C           3 inc l
 562+ A09D 2C               inc l
 563+ A09E 10 FC            djnz 3B
 564+ A0A0
 565+ A0A0              ; --- Guarda el Puntero_objeto del disparo en la pila.
 566+ A0A0 CD 7C 90     2 call Extrae_address
 567+ A0A3 E5               push hl
 568+ A0A4              ; ---
 569+ A0A4
 570+ A0A4              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 571+ A0A4              ; HL en el 1er .db de la caja.
 572+ A0A4
 573+ A0A4 2A 31 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 574+ A0A7
 575+ A0A7 06 02            ld b,2
 576+ A0A9
 577+ A0A9 D1           6 pop de
 578+ A0AA 73               ld (hl),e
 579+ A0AB 23               inc hl
 580+ A0AC 72               ld (hl),d
 581+ A0AD 23               inc hl
 582+ A0AE
 583+ A0AE 10 F9            djnz 6B
 584+ A0B0
 585+ A0B0 C9               ret
 586+ A0B1
 587+ A0B1              Genera_coordenadas_de_disparo_Amadeus
 588+ A0B1
 589+ A0B1              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 590+ A0B1              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 591+ A0B1              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 592+ A0B1
 593+ A0B1 CD 7C 90         call Extrae_address
 594+ A0B4 CD 9B 94         call Genera_coordenadas
 595+ A0B7
 596+ A0B7 3D               dec a
 597+ A0B8
 598+ A0B8 21 36 8C         ld hl,Coordenadas_disparo_certero
 599+ A0BB 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 600+ A0BC 23               inc hl
 601+ A0BD 3A BA 8B         ld a,(Coordenada_X)
 602+ A0C0 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 603+ A0C1
 604+ A0C1 AF               xor a
 605+ A0C2 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 606+ A0C3
 607+ A0C3 C9               ret
 608+ A0C4
 609+ A0C4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 610+ A0C4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 611+ A0C4              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 612+ A0C4
 613+ A0C4              ; ----------------------------------------------
 614+ A0C4              ;
 615+ A0C4              ;   27/08/24
 616+ A0C4              ;
 617+ A0C4              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 618+ A0C4              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 619+ A0C4
 620+ A0C4              Detecta_impacto_en_disparo_de_Amadeus
 621+ A0C4
 622+ A0C4              Extraccion_de_datos
 623+ A0C4
 624+ A0C4 13               inc de
 625+ A0C5 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 626+ A0C6
 627+ A0C6 5E               ld e,(hl)
 628+ A0C7 23               inc hl
 629+ A0C8 56               ld d,(hl)
 630+ A0C9
 631+ A0C9 23               inc hl
 632+ A0CA
 633+ A0CA 4E               ld c,(hl)
 634+ A0CB 23               inc hl
 635+ A0CC 46               ld b,(hl)
 636+ A0CD
 637+ A0CD C5               push bc
 638+ A0CE E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 639+ A0CF
 640+ A0CF              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 641+ A0CF
 642+ A0CF CD A0 99         call PreviousScan
 643+ A0D2 CD A0 99         call PreviousScan
 644+ A0D5
 645+ A0D5              Detecta_impacto_
 646+ A0D5
 647+ A0D5 1A               ld a,(de)
 648+ A0D6 A6               and (hl)
 649+ A0D7 C0               ret nz
 650+ A0D8
 651+ A0D8 13               inc de
 652+ A0D9 23               inc hl
 653+ A0DA
 654+ A0DA 1A               ld a,(de)
 655+ A0DB A6               and (hl)
 656+ A0DC C9               ret
 657+ A0DD
 658+ A0DD              ; -------------------------------------------------------------------------------------------------------------
 659+ A0DD              ;
 660+ A0DD              ;   8/8/24
 661+ A0DD              ;
 662+ A0DD              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 663+ A0DD              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 664+ A0DD              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 665+ A0DD              ;
 666+ A0DD              ;   MODIFICA: HL,DE,BC y A.
 667+ A0DD              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 668+ A0DD              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 669+ A0DD
 670+ A0DD              Colision_Entidad_Amadeus
 671+ A0DD
 672+ A0DD              ; Posible contacto de entidad con Amadeus. ?????
 673+ A0DD
 674+ A0DD              ; Exclusiones:
 675+ A0DD
 676+ A0DD 3A 52 8C         ld a,(Shield)
 677+ A0E0 A7               and a
 678+ A0E1 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 679+ A0E2
 680+ A0E2 21 2C 8C         ld hl,Ctrl_3
 681+ A0E5 CB 76            bit 6,(hl)
 682+ A0E7 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 683+ A0E8
 684+ A0E8 21 33 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 685+ A0EB CB 56            bit 2,(hl)
 686+ A0ED C0               ret nz
 687+ A0EE
 688+ A0EE 3A BB 8B     	ld a,(Coordenada_y)
 689+ A0F1 FE 14        	cp $14
 690+ A0F3 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 691+ A0F4
 692+ A0F4 3A 72 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 693+ A0F7 A7               and a
 694+ A0F8 C0               ret nz
 695+ A0F9
 696+ A0F9              Genera_coordenadas_X
 697+ A0F9
 698+ A0F9              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 699+ A0F9              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 700+ A0F9
 701+ A0F9              ;   Limpiamos almacenes.
 702+ A0F9
 703+ A0F9              ;    call Limpia_Coordenadas_X
 704+ A0F9
 705+ A0F9              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 706+ A0F9
 707+ A0F9 21 38 8C         ld hl,Coordenadas_X_Entidad
 708+ A0FC 3A BA 8B         ld a,(Coordenada_X)
 709+ A0FF CD 21 A1         call Guarda_coordenadas_X
 710+ A102
 711+ A102              ;   Almacenamos las coordenadas X de Amadeus.
 712+ A102
 713+ A102 3A 6F 89         ld a,(CX_Amadeus)
 714+ A105 CD 21 A1         call Guarda_coordenadas_X
 715+ A108 CD 35 A1         call Compara_coordenadas_X
 716+ A10B C0               ret nz
 717+ A10C
 718+ A10C 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 719+ A10E 32 BD 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 720+ A111
 721+ A111 2A F9 8B         ld hl,(Puntero_store_caja)
 722+ A114 2C               inc l
 723+ A115 2C               inc l
 724+ A116 2C               inc l
 725+ A117 2C               inc l
 726+ A118 22 34 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 727+ A11B
 728+ A11B 21 33 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 729+ A11E CB D6            set 2,(hl)
 730+ A120
 731+ A120 C9               ret
 732+ A121
 733+ A121               ; ----- ----- ----- ----- -----
 734+ A121
 735+ A121 77           Guarda_coordenadas_X ld (hl),a
 736+ A122 3C               inc a
 737+ A123 2C               inc l
 738+ A124 77               ld (hl),a
 739+ A125 3C               inc a
 740+ A126 2C               inc l
 741+ A127 77               ld (hl),a
 742+ A128 2C               inc l
 743+ A129 C9               ret
 744+ A12A
 745+ A12A AF           Limpia_Coordenadas_X xor a
 746+ A12B 06 06            ld b,6
 747+ A12D 21 3B 8C         ld hl,Coordenadas_X_Amadeus
 748+ A130 77           1 ld (hl),a
 749+ A131 23               inc hl
 750+ A132 10 FC            djnz 1B
 751+ A134 C9               ret
 752+ A135
 753+ A135              ; ----- ----- ----- ----- -----
 754+ A135
 755+ A135              Compara_coordenadas_X
 756+ A135
 757+ A135 DD 21 38 8C      ld ix,Coordenadas_X_Entidad
 758+ A139 DD 7E 00         ld a,(ix+0)
 759+ A13C CD 4A A1         call Comparando
 760+ A13F C8               ret z
 761+ A140
 762+ A140 3C               inc a
 763+ A141 CD 59 A1         call Comparando_1
 764+ A144 C8               ret z
 765+ A145
 766+ A145 3C               inc a
 767+ A146 CD 59 A1         call Comparando_1
 768+ A149 C9               ret
 769+ A14A
 770+ A14A              ; ----- ----- ----- ----- -----
 771+ A14A              ;
 772+ A14A              ;   4/12/23
 773+ A14A              ;
 774+ A14A              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 775+ A14A
 776+ A14A              Comparando
 777+ A14A
 778+ A14A DD 2C            inc ixl
 779+ A14C DD 2C            inc ixl
 780+ A14E DD 2C            inc ixl
 781+ A150
 782+ A150 DD 46 00         ld b,(ix+0)
 783+ A153 DD 4E 01         ld c,(ix+1)
 784+ A156 DD 56 02         ld d,(ix+2)
 785+ A159
 786+ A159 B8           Comparando_1 cp b
 787+ A15A C8               ret z
 788+ A15B B9               cp c
 789+ A15C C8               ret z
 790+ A15D BA               cp d
 791+ A15E C9               ret
 792+ A15F
 793+ A15F              ; -----------------------------------------------------------------------
 794+ A15F              ;
 795+ A15F              ;   04/7/24
 796+ A15F              ;
 797+ A15F
 798+ A15F              Detecta_colision_nave_entidad
 799+ A15F
 800+ A15F              ; Exclusiones:
 801+ A15F
 802+ A15F              ; Salimos de la rutina si no hay advertencia de posible colisión.
 803+ A15F
 804+ A15F 21 33 8C     	ld hl,Impacto2
 805+ A162 CB 56        	bit 2,(hl)
 806+ A164 C8           	ret z
 807+ A165
 808+ A165              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 809+ A165
 810+ A165 2A 75 89         ld hl,(Pamm_Amadeus)
 811+ A168 CD 7C 90         call Extrae_address
 812+ A16B 54               ld d,h
 813+ A16C 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 814+ A16D
 815+ A16D 2A 73 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 816+ A170 06 10            ld b,16                                        ; Contador de scanlines en B.
 817+ A172 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 818+ A175
 819+ A175 C5           1 push bc
 820+ A176 06 03            ld b,3
 821+ A178 E5               push hl
 822+ A179
 823+ A179              ; .db
 824+ A179
 825+ A179 1A           3 ld a,(de)
 826+ A17A A7               and a
 827+ A17B 20 03            jr nz,4F
 828+ A17D
 829+ A17D 2C               inc l
 830+ A17E 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 831+ A180
 832+ A180 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 833+ A182 28 04            jr z,2F
 834+ A184
 835+ A184              ; Impacto.
 836+ A184 FD 2D            dec iyl
 837+ A186 28 22            jr z,5F
 838+ A188
 839+ A188 1C           2 inc e
 840+ A189 10 EE            djnz 3B
 841+ A18B
 842+ A18B E1               pop hl
 843+ A18C
 844+ A18C              ; Hay salto de línea en el puntero de impresión ???
 845+ A18C
 846+ A18C 7C               ld a,h
 847+ A18D D6 57            sub $57
 848+ A18F 20 0A            jr nz,6F
 849+ A191
 850+ A191              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 851+ A191
 852+ A191 2A 73 89         ld hl,(p.imp.amadeus)
 853+ A194 3E 20            ld a,$20
 854+ A196 A7               and a
 855+ A197 85               add l
 856+ A198 6F               ld l,a
 857+ A199 18 01            jr 7F
 858+ A19B
 859+ A19B 24           6 inc h
 860+ A19C
 861+ A19C C1           7 pop bc
 862+ A19D 10 D6            djnz 1B
 863+ A19F
 864+ A19F              ;   Fin de la comparativa.
 865+ A19F
 866+ A19F              ;   NO HAY COLISIÓN !!!!!.
 867+ A19F              ;
 868+ A19F              ;   .db (Impacto) de Amadeus a "0".
 869+ A19F              ;   RES el bit2 de (Impacto2).
 870+ A19F              ;
 871+ A19F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 872+ A19F              ;   Lo colocamos a "0".
 873+ A19F
 874+ A19F 21 33 8C         ld hl,Impacto2
 875+ A1A2 CB 96            res 2,(hl)
 876+ A1A4 2A 34 8C         ld hl,(Entidad_sospechosa_de_colision)
 877+ A1A7 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 878+ A1A9 C9               ret
 879+ A1AA
 880+ A1AA              ;   COLISIÓN !!!!!.
 881+ A1AA              ;
 882+ A1AA              ;   .db (Impacto) de Amadeus a "1".
 883+ A1AA              ;   SET el bit3 de (Impacto2).
 884+ A1AA              ;
 885+ A1AA              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 886+ A1AA
 887+ A1AA E1           5 pop hl
 888+ A1AB C1               pop bc
 889+ A1AC
 890+ A1AC 21 72 89         ld hl,Impacto_Amadeus
 891+ A1AF 36 01            ld (hl),1
 892+ A1B1 21 33 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 893+ A1B4 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 894+ A1B6
 895+ A1B6 11 C0 87         ld de,Indice_Explosion_entidades
 896+ A1B9 2A 34 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 897+ A1BC
 898+ A1BC 23               inc hl
 899+ A1BD 23               inc hl
 900+ A1BE 23               inc hl
 901+ A1BF
 902+ A1BF 73               ld (hl),e
 903+ A1C0 23               inc hl
 904+ A1C1 72               ld (hl),d
 905+ A1C2
 906+ A1C2              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 907+ A1C2
 908+ A1C2 11 60 88         ld de,Indice_Explosion_Amadeus
 909+ A1C5 21 75 89         ld hl,Pamm_Amadeus
 910+ A1C8
 911+ A1C8 73               ld (hl),e
 912+ A1C9 23               inc hl
 913+ A1CA 72               ld (hl),d
 914+ A1CB
 915+ A1CB C9               ret
 916+ A1CC
 917+ A1CC
 918+ A1CC
# file closed: Disparo.asm
2146  A1CC
2147  A1CC              	SAVESNA "Pruebas.sna", START
2148  A1CC
2149  A1CC
2150  A1CC
2151  A1CC
# file closed: Banco_de_pruebas.asm
