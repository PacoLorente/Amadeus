# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2D 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD A1 9E     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD B5 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD C5 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 357  8C04              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 358  8C04              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 359  8C04              ;														; _ (Numero_de_malotes)="0".
 360  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 361  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 362  8C08              ;														; _ puntero (Indice_entidades).
 363  8C08
 364  8C08              ;---------------------------------------------------------------------------------------------------------------
 365  8C08              ;
 366  8C08              ;	12/08/24
 367  8C08              ;
 368  8C08              ;	Álbumes.
 369  8C08
 370  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 371  8C0A              ;														; _variable para almacenar lo posición del puntero_
 372  8C0A              ; 														; _de pila, SP.
 373  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 374  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 375  8C0C
 376  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 377  8C0C
 378  8C0C 00 00        Album_de_pintado defw 0
 379  8C0E 00 00        Album_de_borrado defw 0
 380  8C10 00 00        Album_de_pintado_Amadeus defw 0
 381  8C12 00 00        Album_de_borrado_Amadeus defw 0
 382  8C14 00 00        Album_de_pintado_disparos defw 0
 383  8C16 00 00        Album_de_borrado_disparos defw 0
 384  8C18
 385  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 386  8C1A 00 00        Nivel_scan_disparos_album_de_borrado defw 0
 387  8C1C
 388  8C1C 00           Numero_de_disparos_de_Amadeus db 0
 389  8C1D 00           Numero_de_disparos_de_entidades db 0
 390  8C1E
 391  8C1E 00 00        Puntero_rancio_disparos_album defw 0
 392  8C20
 393  8C20 00 00        Techo_Scanlines_album defw 0
 394  8C22 00 00        Techo_Scanlines_album_2 defw 0
 395  8C24 00           Switch db 0
 396  8C25 00 00        Techo defw 0
 397  8C27 00 00        Scanlines_album_SP defw 0
 398  8C29 00 89        India_SP defw Tabla_de_pintado
 399  8C2B 03 89        India_2_SP defw Tabla_de_pintado+3
 400  8C2D
 401  8C2D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 402  8C2E              ;
 403  8C2E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 404  8C2E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 405  8C2E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 406  8C2E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 407  8C2E              ;																Habilita el borrado/pintado de sprites.
 408  8C2E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 409  8C2E              ;																_ a la baja.
 410  8C2E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 411  8C2E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 412  8C2E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 413  8C2E              ; 																_ el último frame de la explosión de nuestra nave.
 414  8C2E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 415  8C2E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 416  8C2E
 417  8C2E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 418  8C2F              ;
 419  8C2F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 420  8C2F              ;
 421  8C2F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 422  8C2F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 423  8C2F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 424  8C2F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 425  8C2F              ;
 426  8C2F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 427  8C2F              ;															_ masticados ya generados.
 428  8C2F              ;
 429  8C2F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 430  8C2F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 431  8C2F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 432  8C2F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 433  8C2F
 434  8C2F 00           Ctrl_5 db 0
 435  8C30
 436  8C30              ; Gestión de Disparos.
 437  8C30
 438  8C30              ;Numero_de_disparotes db 0
 439  8C30
 440  8C30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 441  8C32 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 442  8C34
 443  8C34 00           Impacto2 db 0											; Byte de control de impactos.
 444  8C35
 445  8C35              ;
 446  8C35              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 447  8C35              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 448  8C35              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 449  8C35              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 450  8C35
 451  8C35
 452  8C35
 453  8C35
 454  8C35
 455  8C35
 456  8C35
 457  8C35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 458  8C37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 459  8C37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 460  8C37
 461  8C37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 462  8C39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 463  8C39 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 464  8C3C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 465  8C3C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C3F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 467  8C3F
 468  8C3F              ;---------------------------------------------------------------------------------------------------------------
 469  8C3F
 470  8C3F              ; Relojes y temporizaciones.
 471  8C3F
 472  8C3F 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 473  8C40 05           Clock_explosion_Amadeus db 5
 474  8C41 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 475  8C42
 476  8C42 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 477  8C44
 478  8C44 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 479  8C46 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 480  8C47              ;														; Repite la oleada de entidades.
 481  8C47 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 482  8C48
 483  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 484  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 485  8C48
 486  8C48              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 487  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 488  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 489  8C48
 490  8C48              ;---------------------------------------------------------------------------------------------------------------
 491  8C48
 492  8C48              ; Gestión de NIVELES.
 493  8C48
 494  8C48 00           Nivel db 0												; Nivel actual del juego.
 495  8C49 00 00        Puntero_indice_NIVELES defw 0
 496  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 497  8C4D              ; 														; _ que definen el NIVEL.
 498  8C4D
 499  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 500  8C4D
 501  8C4D              ; Temporizaciones Shield.
 502  8C4D
 503  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 504  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 505  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 506  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 507  8C55 00           Shield_3 db 0
 508  8C56
 509  8C56 06           Lives db 6
 510  8C57
 511  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 512  8C57              ;
 513  8C57              ;	5/1/24
 514  8C57
 515  8C57              START
 516  8C57
 517  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 518  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 519  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 520  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 521  8C60 F3           	DI
 522  8C61
 523  8C61              ; Limpiamos pantalla.
 524  8C61
 525  8C61 3E 07        	ld a,%00000111
 526  8C63              ;	call Cls
 527  8C63 CD AA 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 528  8C66
 529  8C66              ; INICIALIZACIÓN.
 530  8C66
 531  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 532  8C68 CD F7 91     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 533  8C6B CD 3E 8E     	call Extrae_numero_aleatorio_y_avanza
 534  8C6E
 535  8C6E 6F           	ld l,a
 536  8C6F 26 00        	ld h,0
 537  8C71 22 44 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 538  8C74
 539  8C74              ;	Inicializa 1er Nivel.
 540  8C74
 541  8C74 21 97 8B     	ld hl,Indice_de_niveles
 542  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 543  8C7A CD 27 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C7D
 548  8C7D              ;	Inicia los álbumes de líneas.
 549  8C7D
 550  8C7D CD F3 8F     	call Inicia_albumes_de_lineas
 551  8C80              ;
 552  8C80 CD 03 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C83 CD 10 90     	call Inicia_albumes_de_disparos
 554  8C86
 555  8C86
 556  8C86 CD 6C 92     4 call Inicia_Entidades
 557  8C89 CD CF 92     	call Inicia_Amadeus
 558  8C8C
 559  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 560  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 561  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 562  8C8C
 563  8C8C 11 70 89     	ld de,Amadeus_BOX
 564  8C8F CD 22 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 565  8C92 CD 12 93     	call Limpiamos_bandeja_DRAW
 566  8C95
 567  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 568  8C95
 569  8C95 06 3C        	ld b,60
 570  8C97 CD F4 9C     2 call Amadeus_a_izquierda
 571  8C9A 10 FB        	djnz 2B
 572  8C9C
 573  8C9C CD D1 8F     	call Genera_datos_de_impresion_Amadeus
 574  8C9F
 575  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 576  8C9F
 577  8C9F CD 23 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 578  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 579  8CA2
 580  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 581  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 582  8CA2
 583  8CA2              ;	ld a,(Ctrl_1)
 584  8CA2              ;	bit 3,a
 585  8CA2              ;	jr nz,5F											 ; Loop
 586  8CA2
 587  8CA2              ;	ld de,Amadeus_db
 588  8CA2              ;	call Store_Amadeus
 589  8CA2
 590  8CA2              ; 	INICIA DISPAROS !!!!!
 591  8CA2
 592  8CA2 CD 39 90     	call Inicia_Puntero_Disparo_Entidades
 593  8CA5 CD 40 90     	call Inicia_Puntero_Disparo_Amadeus
 594  8CA8
 595  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 596  8CA8
 597  8CA8              ;5 call Inicia_punteros_de_cajas
 598  8CA8              ;	call Restore_entidad
 599  8CA8
 600  8CA8              ;	ld a,(Ctrl_1)
 601  8CA8              ;	bit 3,a
 602  8CA8              ;	jr z,6F
 603  8CA8
 604  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 605  8CA8
 606  8CA8              ;	ld hl,Ctrl_1
 607  8CA8              ;	res 3,(hl)
 608  8CA8              ;	jr Main
 609  8CA8
 610  8CA8              ; Damos por concluida la construcción del FRAME.
 611  8CA8              ;
 612  8CA8
 613  8CA8 CD B5 90     	call Inicia_Shield
 614  8CAB
 615  8CAB
 616  8CAB 2A 27 8C     6 ld hl,(Scanlines_album_SP)
 617  8CAE 22 20 8C     	ld (Techo_Scanlines_album),hl
 618  8CB1
 619  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 620  8CB4 22 27 8C     	ld (Scanlines_album_SP),hl
 621  8CB7
 622  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 623  8CBA 22 29 8C     	ld (India_SP),hl
 624  8CBD
 625  8CBD 21 2D 8C     	ld hl,Ctrl_3
 626  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 627  8CC2 CB D6        	set 2,(hl)
 628  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 629  8CC6
 630  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 631  8CC7
 632  8CC7 76           	halt
 633  8CC8
 634  8CC8              ; ------------------------------------
 635  8CC8
 636  8CC8              Main
 637  8CC8              ;
 638  8CC8              ; 13/05/24
 639  8CC8
 640  8CC8              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 641  8CC8              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 642  8CC8              ; Este hecho lo indica el bit2 de (Impacto2).
 643  8CC8
 644  8CC8 CD 2E 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 645  8CCB
 646  8CCB CD 22 A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CCE
 648  8CCE 2A 44 8C     16 ld hl,(Clock_next_entity)
 649  8CD1 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CD5 A7           	and a
 651  8CD6 ED 42        	sbc hl,bc
 652  8CD8 20 16        	jr nz,13F
 653  8CDA
 654  8CDA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CDA              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CDA
 657  8CDA 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 658  8CDD 47           	ld b,a
 659  8CDE 3A 03 8C     	ld a,(Entidades_en_curso)
 660  8CE1 B8           	cp b
 661  8CE2 28 0C        	jr z,13F
 662  8CE4 30 0A        	jr nc,13F
 663  8CE6
 664  8CE6 3C           	inc a
 665  8CE7 32 03 8C     	ld (Entidades_en_curso),a
 666  8CEA
 667  8CEA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CEA
 669  8CEA CD 3E 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CED CD 5A 8E     	call Define_Clock_next_entity
 671  8CF0
 672  8CF0              ; -------------------------------------------------------------------------------------------------------------
 673  8CF0
 674  8CF0              ; Habilita disparos.
 675  8CF0
 676  8CF0              13
 677  8CF0
 678  8CF0              ;	ld hl,Disparo_Amadeus
 679  8CF0              ;	ld de,CLOCK_repone_disparo_Amadeus
 680  8CF0              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 681  8CF0
 682  8CF0              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 683  8CF0              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 684  8CF0              ;	call Habilita_disparos
 685  8CF0
 686  8CF0              ; COLISIONES.
 687  8CF0
 688  8CF0              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 689  8CF0
 690  8CF0              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 691  8CF0              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 692  8CF0              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 693  8CF0
 694  8CF0              ;	xor a
 695  8CF0              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 696  8CF0
 697  8CF0              ;	call Inicia_punteros_de_cajas
 698  8CF0              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 699  8CF0              ; 														; _ en DRAW.
 700  8CF0
 701  8CF0              ;	ld a,(Filas)
 702  8CF0              ;	and a
 703  8CF0              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 704  8CF0              ;	call Incrementa_punteros_de_cajas
 705  8CF0              ;	jr 12B
 706  8CF0
 707  8CF0              ; ---------------------------------------------------------------------------------------
 708  8CF0
 709  8CF0              ;10 ld a,(Numero_parcial_de_entidades)
 710  8CF0              ;    ld b,a
 711  8CF0              ;	and a
 712  8CF0              ;	jr nz,11F
 713  8CF0
 714  8CF0              ;	ld hl,Ctrl_1;
 715  8CF0              ;	bit 4,(hl)
 716  8CF0              ;	jp nz,16F
 717  8CF0
 718  8CF0              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 719  8CF0
 720  8CF0              ;	ld hl,Ctrl_1
 721  8CF0              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 722  8CF0
 723  8CF0              ;	ld a,(Contador_de_frames)
 724  8CF0              ;	inc a
 725  8CF0              ;	ld (Activa_recarga_cajas),a
 726  8CF0
 727  8CF0              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 728  8CF0
 729  8CF0 3A 03 8C     11 ld a,(Entidades_en_curso)
 730  8CF3 A7           	and a
 731  8CF4 CA 5C 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 732  8CF7 47           	ld b,a												; No hay entidades que gestionar.
 733  8CF8
 734  8CF8              ; ( Código que ejecutamos con cada entidad: ).
 735  8CF8
 736  8CF8              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 737  8CF8              ;
 738  8CF8              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 739  8CF8
 740  8CF8 21 00 89     	ld hl,Tabla_de_pintado
 741  8CFB 22 29 8C     	ld (India_SP),hl
 742  8CFE
 743  8CFE 21 2D 8C     	ld hl,Ctrl_3
 744  8D01 CB D6        	set 2,(hl)
 745  8D03 CD 03 8E     	call Change
 746  8D06
 747  8D06 C5           15 push bc 												; Nº de entidades en curso.
 748  8D07
 749  8D07 CD 82 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 750  8D0A ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 751  8D0E
 752  8D0E              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 753  8D0E
 754  8D0E              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 755  8D0E
 756  8D0E 3A BF 8B     	ld a,(Impacto)
 757  8D11 A7           	and a
 758  8D12 28 13        	jr z,8F
 759  8D14
 760  8D14              ; 5/7/24
 761  8D14              ; Nota importante:
 762  8D14              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 763  8D14              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 764  8D14              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 765  8D14
 766  8D14 3A 2D 8C     	ld a,(Ctrl_3)
 767  8D17 CB 7F        	bit 7,a
 768  8D19 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 769  8D1B              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 770  8D1B 3A 74 89     	ld a,(Impacto_Amadeus)
 771  8D1E A7           	and a
 772  8D1F C4 92 91     	call nz,Genera_explosion
 773  8D22 20 1B        	jr nz,Gestiona_siguiente_entidad
 774  8D24
 775  8D24              ; Falsa colisión !!!
 776  8D24
 777  8D24 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 778  8D27
 779  8D27              ; -------------------------------------------
 780  8D27
 781  8D27 CD 9E 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 782  8D2A CD E3 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 783  8D2D CD 8A 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 784  8D30 CD 92 94     	call Genera_datos_de_impresion
 785  8D33 CD 35 93     	call Decrementa_Contador_de_mov_masticados
 786  8D36
 787  8D36              ; -------------------------------------------
 788  8D36
 789  8D36              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 790  8D36
 791  8D36 2A C0 8B     	ld hl,(Puntero_de_impresion)
 792  8D39 CD 66 94     	call Genera_coordenadas
 793  8D3C
 794  8D3C CD A0 9F     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 795  8D3F
 796  8D3F              ;	ld hl,Ctrl_0
 797  8D3F              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 798  8D3F
 799  8D3F              Gestiona_siguiente_entidad
 800  8D3F
 801  8D3F CD 07 93      	call Store_Restore_cajas
 802  8D42 C1           	pop bc
 803  8D43 10 C1        	djnz 15B
 804  8D45
 805  8D45              ; Hemos gestionado todas las entidades.
 806  8D45
 807  8D45 CD AE 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 808  8D48 CD C5 8E     	call Ordena_tabla_de_impresion
 809  8D4B CD 23 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 810  8D4E
 811  8D4E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 812  8D4E              ; Hemos gestionado todas las unidades.
 813  8D4E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 814  8D4E
 815  8D4E              ;	ld hl,Ctrl_1
 816  8D4E              ;	res 2,(hl)
 817  8D4E
 818  8D4E CD 6F 8E     	call Borra_diferencia
 819  8D51
 820  8D51 3A 2D 8C     	ld a,(Ctrl_3)
 821  8D54 CB 5F        	bit 3,a
 822  8D56 20 04        	jr nz,Gestion_de_Amadeus
 823  8D58
 824  8D58 EB           	ex de,hl
 825  8D59 71           	ld (hl),c
 826  8D5A 2C           	inc l
 827  8D5B 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 828  8D5C
 829  8D5C
 830  8D5C              ;! GESTIONA AMADEUS !!!!!!!!!!
 831  8D5C
 832  8D5C              Gestion_de_Amadeus
 833  8D5C
 834  8D5C 21 2D 8C     	ld hl,Ctrl_3
 835  8D5F CB 76        	bit 6,(hl)
 836  8D61 28 13        	jr z,Amadeus_vivo
 837  8D63
 838  8D63              ; Amadeus ha sido destruido.
 839  8D63              ; Decrementa (Temp_new_live).
 840  8D63
 841  8D63 21 41 8C     	ld hl,Temp_new_live
 842  8D66 35           	dec (hl)
 843  8D67 20 29        	jr nz,End_frame
 844  8D69
 845  8D69              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 846  8D69
 847  8D69 21 56 8C     	ld hl,Lives
 848  8D6C 35           	dec (hl)
 849  8D6D
 850  8D6D              ;! Fin del juego
 851  8D6D
 852  8D6D F3           	di
 853  8D6E 28 FE        	jr z,$
 854  8D70 FB           	ei
 855  8D71
 856  8D71              ; Nueva nave.
 857  8D71
 858  8D71 CD A9 8D     	call Reinicia_Amadeus
 859  8D74 18 1C        	jr End_frame
 860  8D76
 861  8D76              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 862  8D76
 863  8D76              Amadeus_vivo
 864  8D76
 865  8D76 3A 74 89     	ld a,(Impacto_Amadeus)
 866  8D79 A7           	and a
 867  8D7A C4 C2 91     	call nz, Genera_explosion_Amadeus
 868  8D7D 20 13        	jr nz, End_frame
 869  8D7F
 870  8D7F CD 6F 91     	call Teclado
 871  8D82
 872  8D82 CD D2 9E     	call Genera_datos_de_impresion_disparos_Amadeus
 873  8D85
 874  8D85 21 2D 8C     	ld hl,Ctrl_3
 875  8D88 CB 6E        	bit 5,(hl)
 876  8D8A 28 06        	jr z,End_frame
 877  8D8C
 878  8D8C              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 879  8D8C
 880  8D8C CD 1E 8E     	call Change_Amadeus
 881  8D8F CD D1 8F     	call Genera_datos_de_impresion_Amadeus
 882  8D92
 883  8D92              End_frame
 884  8D92
 885  8D92 2A 0E 8C     	ld hl,(Album_de_borrado)
 886  8D95 22 27 8C     	ld (Scanlines_album_SP),hl
 887  8D98
 888  8D98 21 2D 8C     	ld hl,Ctrl_3
 889  8D9B CB C6        	set 0,(hl) 											; Indica Frame completo.
 890  8D9D CB 9E        	res 3,(hl)
 891  8D9F CB A6        	res 4,(hl)
 892  8DA1
 893  8DA1 AF           	xor a
 894  8DA2 D3 FE        	out ($fe),a
 895  8DA4
 896  8DA4 76           	halt
 897  8DA5
 898  8DA5              ; ----------------------------------------
 899  8DA5
 900  8DA5              ;	ld a,(Ctrl_1) 										; Existe Loop?
 901  8DA5              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 902  8DA5 CA C8 8C     	jp z,Main
 903  8DA8
 904  8DA8              ; RECARGA DE NUEVA OLEADA.
 905  8DA8
 906  8DA8              ;	ld a,(Contador_de_frames)
 907  8DA8              ;	ld b,a
 908  8DA8              ;	ld a,(Activa_recarga_cajas)
 909  8DA8              ;	cp b
 910  8DA8              ;	jr z,20F
 911  8DA8
 912  8DA8              ;	ld hl,Ctrl_1
 913  8DA8              ;	set 4,(hl)
 914  8DA8              ;	jp Main
 915  8DA8
 916  8DA8              ;20 ld hl,Ctrl_1
 917  8DA8              ;	res 4,(hl)
 918  8DA8
 919  8DA8              ;	ld a,(Contador_de_frames)
 920  8DA8
 921  8DA8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 922  8DA8              ;! _ IMPREDECIBLE !!!!
 923  8DA8
 924  8DA8              ;	add 10
 925  8DA8              ;	ld (Clock_next_entity),a
 926  8DA8
 927  8DA8              ;	jp 4B
 928  8DA8
 929  8DA8 C9           	ret
 930  8DA9
 931  8DA9              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 932  8DA9              ;
 933  8DA9              ;	16/11/23
 934  8DA9
 935  8DA9              ;;Gestiona_Amadeus
 936  8DA9
 937  8DA9              ;! Activa/desactiva impacto con Amadeus.
 938  8DA9
 939  8DA9              ;	ld a,(Impacto)
 940  8DA9              ;	and a
 941  8DA9              ;	jr nz,2F
 942  8DA9
 943  8DA9              ;;	call Mov_Amadeus
 944  8DA9
 945  8DA9              ;;2 ld a,(Ctrl_0)
 946  8DA9              ;;	bit 4,a
 947  8DA9              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 948  8DA9
 949  8DA9              ;;	call Guarda_foto_entidad_a_pintar
 950  8DA9              ;;	call Guarda_datos_de_borrado_Amadeus
 951  8DA9
 952  8DA9              ;;1 ld hl,Ctrl_0
 953  8DA9              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 954  8DA9
 955  8DA9              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 956  8DA9
 957  8DA9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 958  8DA9
 959  8DA9              ;	call Calcula_numero_de_disparotes
 960  8DA9
 961  8DA9              ;;	ret
 962  8DA9
 963  8DA9              ; -----------------------------
 964  8DA9              ;
 965  8DA9              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 966  8DA9              ;
 967  8DA9              ;	INPUTS: B a de estar a "0".
 968  8DA9
 969  8DA9              ;Prepara_Borra_sprites
 970  8DA9
 971  8DA9              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 972  8DA9              ;	ld a,l
 973  8DA9              ;	ret z
 974  8DA9
 975  8DA9              ;	srl a
 976  8DA9
 977  8DA9              ;2 sub 16
 978  8DA9              ;	jr z,1F
 979  8DA9              ;	inc b
 980  8DA9              ;	jr 2B
 981  8DA9
 982  8DA9              ;1 inc b
 983  8DA9
 984  8DA9              ;	exx
 985  8DA9              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 986  8DA9              ;	exx
 987  8DA9
 988  8DA9              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 989  8DA9              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 990  8DA9
 991  8DA9              ;	ret
 992  8DA9
 993  8DA9              ; --------------------------------------------------------------------------------------------------------------
 994  8DA9              ;
 995  8DA9              ;	15/12/23
 996  8DA9
 997  8DA9              ;Mov_obj
 998  8DA9
 999  8DA9              ;	ld a,(Ctrl_2)
1000  8DA9              ;	bit 1,a
1001  8DA9              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1002  8DA9
1003  8DA9              ; Explosión:
1004  8DA9
1005  8DA9              ;	ld a,(Frames_explosion)
1006  8DA9              ;	and a
1007  8DA9              ;	jr nz,4F
1008  8DA9
1009  8DA9              ;!  Una alimaña menos!!!!!!!!!1
1010  8DA9
1011  8DA9              ; Se trataba de una Entidad_guía ???
1012  8DA9
1013  8DA9              ;	ld a,(Ctrl_2)
1014  8DA9              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1015  8DA9              ;	jr z,5F
1016  8DA9
1017  8DA9              ;	ld hl,Ctrl_3
1018  8DA9              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1019  8DA9
1020  8DA9              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1021  8DA9              ;!! _generado puede ser distinto, (aletoriedad).
1022  8DA9
1023  8DA9              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1024  8DA9              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1025  8DA9              ;	dec (hl)
1026  8DA9              ;	ld hl,Entidades_en_curso
1027  8DA9              ;	dec (hl)
1028  8DA9              ;	ld hl,Numero_de_entidades
1029  8DA9              ;	dec (hl)
1030  8DA9              ;	jr 3F
1031  8DA9
1032  8DA9              ; -----
1033  8DA9
1034  8DA9              ;	`Movemos´ la explosión.
1035  8DA9
1036  8DA9              ;4 ld hl,(Puntero_DESPLZ_der)
1037  8DA9              ;	inc hl
1038  8DA9              ;	inc hl
1039  8DA9              ;	call Extrae_address
1040  8DA9              ;;	ld (Puntero_objeto),hl
1041  8DA9
1042  8DA9              ;;	ld hl,Frames_explosion
1043  8DA9              ;;	dec (hl)
1044  8DA9
1045  8DA9              ;;	ld hl,Ctrl_0
1046  8DA9              ;;	set 4,(hl);;
1047  8DA9
1048  8DA9              ;;	jr 3F
1049  8DA9
1050  8DA9              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1051  8DA9
1052  8DA9              ;2 xor a
1053  8DA9              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1054  8DA9
1055  8DA9              ; Movemos Entidades malignas.
1056  8DA9              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1057  8DA9
1058  8DA9              ;	ld a,(Ctrl_2)
1059  8DA9              ;	bit 5,a
1060  8DA9              ;	jr nz,8F
1061  8DA9
1062  8DA9              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1063  8DA9              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1064  8DA9              ;	jr 7F
1065  8DA9
1066  8DA9              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1067  8DA9
1068  8DA9              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1069  8DA9              ;	bit 4,a
1070  8DA9              ;	ret z
1071  8DA9
1072  8DA9              ; Ha habido desplazamiento de la entidad maligna.
1073  8DA9              ; Ha llegado a zona de AMADEUS ???
1074  8DA9
1075  8DA9              ;7 ld a,(Coordenada_y)
1076  8DA9              ;	cp $14
1077  8DA9              ;	jr c,1F
1078  8DA9
1079  8DA9              ; ---------
1080  8DA9
1081  8DA9              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1082  8DA9              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1083  8DA9
1084  8DA9              ;	di
1085  8DA9              ;	call Genera_coordenadas_X
1086  8DA9              ;	call Compara_coordenadas_X
1087  8DA9              ;	ei
1088  8DA9
1089  8DA9              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1090  8DA9
1091  8DA9              ; ---------
1092  8DA9
1093  8DA9              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1094  8DA9              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1095  8DA9              ;	call Limpia_Variables_de_borrado
1096  8DA9
1097  8DA9              ;3 ret
1098  8DA9
1099  8DA9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1100  8DA9              ;
1101  8DA9              ;	24/07/24
1102  8DA9
1103  8DA9              Reinicia_Amadeus
1104  8DA9
1105  8DA9              ;	Reinicia posición y estado.
1106  8DA9
1107  8DA9 21 CF 50     	ld hl,$50cf
1108  8DAC 22 75 89     	ld (p.imp.amadeus),hl
1109  8DAF 21 F0 E0     	ld hl,$e0f0
1110  8DB2 22 77 89     	ld (Pamm_Amadeus),hl
1111  8DB5 21 3D 00     	ld hl,$003d
1112  8DB8 22 79 89     	ld (Comm_Amadeus),hl
1113  8DBB
1114  8DBB              ;	limpiamos el álbum de borrado.
1115  8DBB
1116  8DBB 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1117  8DBE
1118  8DBE AF           	xor a
1119  8DBF 77           	ld (hl),a
1120  8DC0
1121  8DC0 E5           	push hl
1122  8DC1 D1           	pop de
1123  8DC2 13           	inc de
1124  8DC3
1125  8DC3 01 23 00     	ld bc,35
1126  8DC6 ED B0        	ldir
1127  8DC8
1128  8DC8 CD D1 8F     	call Genera_datos_de_impresion_Amadeus
1129  8DCB
1130  8DCB              ;	Reinicia temporizaciones.
1131  8DCB
1132  8DCB CD B5 90     	call Inicia_Shield
1133  8DCE
1134  8DCE 3E 5A        	ld a,90
1135  8DD0 32 53 8C     	ld (Shield),a
1136  8DD3
1137  8DD3 3E 64        	ld a,100
1138  8DD5 32 41 8C     	ld (Temp_new_live),a
1139  8DD8
1140  8DD8              ; 	Restauramos el FLAG: Amadeus vivo.
1141  8DD8
1142  8DD8 21 2D 8C     	ld hl,Ctrl_3
1143  8DDB CB B6        	res 6,(hl)
1144  8DDD
1145  8DDD              ;	Fuerza la impresión de la nave en el siguiente frame.
1146  8DDD
1147  8DDD 21 2D 8C      	ld hl,Ctrl_3
1148  8DE0 CB EE        	set 5,(hl)
1149  8DE2
1150  8DE2 C9           	ret
1151  8DE3
1152  8DE3              ; --------------------------------------------------------------------------------------------------------------
1153  8DE3              ;
1154  8DE3              ;	12/05/24
1155  8DE3
1156  8DE3 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1157  8DE6 CB 27        	sla a
1158  8DE8 32 C6 8B     	ld (Velocidad),a
1159  8DEB E6 10        	and $10
1160  8DED C8           	ret z
1161  8DEE
1162  8DEE              ; Restaura (Velocidad) a razón del nº de vueltas.
1163  8DEE
1164  8DEE 3A BE 8B     	ld a,(Contador_de_vueltas)
1165  8DF1 CB 2F        	sra a
1166  8DF3 CB 2F        	sra a
1167  8DF5 32 C6 8B     	ld (Velocidad),a
1168  8DF8
1169  8DF8 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1170  8DFB 23           	inc hl
1171  8DFC 23           	inc hl
1172  8DFD 23           	inc hl
1173  8DFE 23           	inc hl
1174  8DFF 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1175  8E02
1176  8E02 C9           	ret
1177  8E03
1178  8E03              ; --------------------------------------------------------------------------------------------------------------
1179  8E03              ;
1180  8E03              ;	21/08/24
1181  8E03
1182  8E03              Change
1183  8E03
1184  8E03 3A 24 8C     	ld a,(Switch)
1185  8E06 EE 01        	xor 1
1186  8E08 32 24 8C     	ld (Switch),a
1187  8E0B 2A 0C 8C     	ld hl,(Album_de_pintado)
1188  8E0E ED 5B 0E 8C  	ld de,(Album_de_borrado)
1189  8E12 EB           	ex de,hl
1190  8E13 22 0C 8C     	ld (Album_de_pintado),hl
1191  8E16 22 27 8C     	ld (Scanlines_album_SP),hl
1192  8E19 ED 53 0E 8C  	ld (Album_de_borrado),de
1193  8E1D C9           	ret
1194  8E1E
1195  8E1E              Change_Amadeus
1196  8E1E
1197  8E1E 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1198  8E21 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1199  8E25 EB           	ex de,hl
1200  8E26 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1201  8E29 ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1202  8E2D C9           	ret
1203  8E2E
1204  8E2E              Change_Disparos
1205  8E2E
1206  8E2E 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1207  8E31 ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1208  8E35 EB           	ex de,hl
1209  8E36 22 14 8C     	ld (Album_de_pintado_disparos),hl
1210  8E39 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1211  8E3D C9           	ret
1212  8E3E
1213  8E3E              ; ------------------------------------
1214  8E3E              ;
1215  8E3E              ; 1/05/24
1216  8E3E
1217  8E3E              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1218  8E3E              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1219  8E3E
1220  8E3E              ;	DESTRUYE: HL,DE,A
1221  8E3E              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1222  8E3E
1223  8E3E              ;	Variables implicadas: (RND_SP).
1224  8E3E
1225  8E3E              Extrae_numero_aleatorio_y_avanza
1226  8E3E
1227  8E3E 21 00 89     	ld hl,Tabla_de_pintado
1228  8E41 EB           	ex de,hl
1229  8E42 2A 42 8C     	ld hl,(RND_SP)
1230  8E45 EB           	ex de,hl
1231  8E46 A7           	and a
1232  8E47 ED 52        	sbc hl,de
1233  8E49
1234  8E49 2A 42 8C     	ld hl,(RND_SP)
1235  8E4C 20 06        	jr nz,1F
1236  8E4E
1237  8E4E              ; Sitúa HL al principio de la tabla de nº aleatorios.
1238  8E4E
1239  8E4E 21 F6 88     	ld hl,Numeros_aleatorios
1240  8E51 22 42 8C     	ld (RND_SP),HL
1241  8E54
1242  8E54              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1243  8E54
1244  8E54 7E           1 ld a,(hl)
1245  8E55 23           	inc hl
1246  8E56 22 42 8C     	ld (RND_SP),hl
1247  8E59 C9           	ret
1248  8E5A
1249  8E5A              ; ------------------------------------
1250  8E5A              ;
1251  8E5A              ; 1/05/24
1252  8E5A
1253  8E5A              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1254  8E5A              ; (1 a 4 segundos).
1255  8E5A              ; Actualizamos (Clock_next_entity) con A.
1256  8E5A
1257  8E5A              ;	DESTRUYE: A y B.
1258  8E5A              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1259  8E5A              ;			 Actualiza (Clock_next_entity) con A.
1260  8E5A
1261  8E5A              ;	Variables implicadas: (Clock_next_entity).
1262  8E5A
1263  8E5A              ; Notas:
1264  8E5A
1265  8E5A              ; 	$32 1 seg.
1266  8E5A              ; 	$64 2 seg.
1267  8E5A              ; 	$96 3 seg.
1268  8E5A              ; 	$c8 4 seg.
1269  8E5A              ; 	$fa 5 seg.
1270  8E5A
1271  8E5A              ; $ffff 1310,7 seg, 22 minutos.
1272  8E5A
1273  8E5A              ;	$0100  5 seg. aproximadamente.
1274  8E5A              ;	$0200 10 seg. aproximadamente.
1275  8E5A              ;	$0300 15 seg. aproximadamente.
1276  8E5A              ;	$0400 20 seg. aproximadamente.
1277  8E5A              ;	$0500 25 seg. aproximadamente.
1278  8E5A              ;	$0600 30 seg. aproximadamente.
1279  8E5A
1280  8E5A              Define_Clock_next_entity
1281  8E5A
1282  8E5A FE 34        	cp $34
1283  8E5C 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1284  8E5E
1285  8E5E              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1286  8E5E
1287  8E5E 4F           3 ld c,a
1288  8E5F 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1289  8E61 2A 78 5C     	ld hl,(FRAMES)
1290  8E64 A7           	and a
1291  8E65 ED 4A        	adc hl,bc
1292  8E67 22 44 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1293  8E6A C9           	ret
1294  8E6B
1295  8E6B 3E 34        1 ld a,$34
1296  8E6D 18 EF        	jr 3B
1297  8E6F
1298  8E6F              ; ------------------------------------
1299  8E6F              ;
1300  8E6F              ; 18/03/24
1301  8E6F
1302  8E6F              Borra_diferencia
1303  8E6F
1304  8E6F ED 4B 27 8C  	ld bc,(Scanlines_album_SP)
1305  8E73
1306  8E73 3A 24 8C     	ld a,(Switch)
1307  8E76 A7           	and a
1308  8E77 28 08        	jr z,2F
1309  8E79
1310  8E79 2A 22 8C     	ld hl,(Techo_Scanlines_album_2)
1311  8E7C 11 22 8C     	ld de,Techo_Scanlines_album_2
1312  8E7F 18 06        	jr 3F
1313  8E81
1314  8E81 2A 20 8C     2 ld hl,(Techo_Scanlines_album)
1315  8E84 11 20 8C     	ld de,Techo_Scanlines_album
1316  8E87
1317  8E87              ; Diferencia.
1318  8E87
1319  8E87 ED 42        3 sbc hl,bc
1320  8E89
1321  8E89 C8           	ret z
1322  8E8A D8           	ret c
1323  8E8B
1324  8E8B              ; Nuevo techo, (más bajo que el anterior).
1325  8E8B              ; Fijamos nuevo techo y borramos bytes sobrantes.
1326  8E8B
1327  8E8B EB           	ex de,hl
1328  8E8C
1329  8E8C 71           	ld (hl),c
1330  8E8D 2C           	inc l
1331  8E8E 70           	ld (hl),b
1332  8E8F
1333  8E8F AF           	xor a
1334  8E90 43           	ld b,e
1335  8E91
1336  8E91 2A 27 8C     	ld hl,(Scanlines_album_SP)
1337  8E94
1338  8E94 77           1 ld (hl),a
1339  8E95 23           	inc hl
1340  8E96 10 FC        	djnz 1B
1341  8E98
1342  8E98              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1343  8E98
1344  8E98 21 2D 8C     	ld hl,Ctrl_3
1345  8E9B CB DE        	set 3,(hl)
1346  8E9D
1347  8E9D C9           	ret
1348  8E9E
1349  8E9E              ; --------------------------------------------------------------------------------------------------------------
1350  8E9E              ;
1351  8E9E              ;	26/3/24
1352  8E9E
1353  8E9E              Recauda_informacion_de_entidad_en_curso
1354  8E9E
1355  8E9E              ; Almacena la Coordenada Y de la entidad en curso.
1356  8E9E
1357  8E9E              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1358  8E9E
1359  8E9E 3A BD 8B     	ld a,(Coordenada_y)
1360  8EA1 2A 29 8C     	ld hl,(India_SP)
1361  8EA4 77           	ld (hl),a
1362  8EA5 2C           	inc l
1363  8EA6
1364  8EA6              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1365  8EA6
1366  8EA6              ;	ld de,(Scanlines_album_SP)
1367  8EA6
1368  8EA6 73           	ld (hl),e
1369  8EA7 2C           	inc l
1370  8EA8 72           	ld (hl),d
1371  8EA9 2C           	inc l
1372  8EAA
1373  8EAA 22 29 8C     	ld (India_SP),hl
1374  8EAD
1375  8EAD C9           	ret
1376  8EAE
1377  8EAE              ; --------------------------------------------------------------------------------------------------------------
1378  8EAE              ;
1379  8EAE              ;	27/03/24
1380  8EAE              ;
1381  8EAE
1382  8EAE              Inicializa_India_y_limpia_Tabla_de_impresion
1383  8EAE
1384  8EAE 2A 29 8C     	ld hl,(India_SP)
1385  8EB1 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1386  8EB4
1387  8EB4 79           	ld a,c
1388  8EB5 95           	sub l
1389  8EB6 28 06        	jr z,2F
1390  8EB8 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1391  8EB9              ;														; _ y pasamos a inicializar (India_SP).
1392  8EB9 AF           	xor a
1393  8EBA
1394  8EBA 77           1 ld (hl),a
1395  8EBB 2C           	inc l
1396  8EBC 10 FC        	djnz 1B												; Limpia Tabla.
1397  8EBE
1398  8EBE 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1399  8EC1 22 29 8C     	ld (India_SP),hl
1400  8EC4
1401  8EC4 C9           	ret
1402  8EC5
1403  8EC5              ; --------------------------------------------------------------------------------------------------------------
1404  8EC5              ;
1405  8EC5              ;	31/3/24
1406  8EC5
1407  8EC5              Ordena_tabla_de_impresion
1408  8EC5
1409  8EC5              ; 5794 T/states.
1410  8EC5              ; 6278 T/states.
1411  8EC5              ; 5310 T/states.
1412  8EC5
1413  8EC5              ; Inicializamos punteros (India_SP) e (India_2_SP).
1414  8EC5              ; Inicializamos contador de comparaciones, [C].
1415  8EC5              ; Cargamos los registros A y B para efectuar comparación.
1416  8EC5
1417  8EC5 FD 2E 00     	ld iyl,0
1418  8EC8
1419  8EC8 3A 03 8C     	ld a,(Entidades_en_curso)
1420  8ECB FE 04        	cp 4 	;	4
1421  8ECD D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1422  8ECE
1423  8ECE 3D           	dec a
1424  8ECF 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1425  8ED0 51           	ld d,c 										; Copia de respaldo.
1426  8ED1
1427  8ED1 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1428  8ED2
1429  8ED2 21 03 89     	ld hl,Tabla_de_pintado+3
1430  8ED5 46           	ld b,(hl)
1431  8ED6 22 2B 8C     	ld (India_2_SP),hl
1432  8ED9
1433  8ED9 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1434  8EDA DC 02 8F     	call c, Avanza_India_2_SP
1435  8EDD CC 02 8F     	call z, Avanza_India_2_SP
1436  8EE0
1437  8EE0 FD 2D        	dec iyl
1438  8EE2 28 18        	jr z,2F
1439  8EE4
1440  8EE4
1441  8EE4              ; --------------------------------------------------------------------------------------------------------------
1442  8EE4              ;
1443  8EE4              ;	7/4/24
1444  8EE4
1445  8EE4              Trueque
1446  8EE4
1447  8EE4              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1448  8EE4              ;  			A contiene en nº de fila de (India_SP).
1449  8EE4              ;			HL contiene (India_2_SP).
1450  8EE4
1451  8EE4 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1452  8EE5 E5           	push hl										; Preservo (India_2_SP).
1453  8EE6
1454  8EE6 ED 5B 29 8C  	ld de,(India_SP)
1455  8EEA EB           	ex de,hl
1456  8EEB 70           	ld (hl),b
1457  8EEC 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1458  8EED
1459  8EED CD 2E 8F     	call Intercambia_1_byte
1460  8EF0 CD 2E 8F     	call Intercambia_1_byte
1461  8EF3
1462  8EF3
1463  8EF3              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1464  8EF3              ; Recuperamos (India_2_SP) en HL.
1465  8EF3
1466  8EF3 2A 29 8C     	ld hl,(India_SP)
1467  8EF6 7E           	ld a,(hl)
1468  8EF7
1469  8EF7 E1           	pop hl
1470  8EF8 D1           	pop de
1471  8EF9
1472  8EF9              ; --------------------------------------------------------------------------------------------------------------
1473  8EF9
1474  8EF9 CD 02 8F     	call Avanza_India_2_SP
1475  8EFC
1476  8EFC 14           2 inc d
1477  8EFD 15           	dec d
1478  8EFE C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1479  8EFF 18 D8        	jr 1B
1480  8F01
1481  8F01 C9           	ret
1482  8F02
1483  8F02              ; ----- ----- ----- ----- -----
1484  8F02
1485  8F02              Avanza_India_2_SP
1486  8F02
1487  8F02 0D           	dec c
1488  8F03 28 0A        	jr z,Avanza_punteros_indios
1489  8F05
1490  8F05 FD 2C        	inc iyl
1491  8F07
1492  8F07 2C           	inc l
1493  8F08 2C           	inc l
1494  8F09 2C           	inc l
1495  8F0A
1496  8F0A 46           	ld b,(hl)
1497  8F0B 22 2B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1498  8F0E
1499  8F0E C9           	ret
1500  8F0F
1501  8F0F              ; ----- ----- ----- ----- -----
1502  8F0F
1503  8F0F              Avanza_punteros_indios
1504  8F0F
1505  8F0F 15           	dec d
1506  8F10 28 15        	jr z,Prepara_salida
1507  8F12
1508  8F12 4A           	ld c,d
1509  8F13
1510  8F13 2A 29 8C     	ld hl,(India_SP)
1511  8F16 2C           	inc l
1512  8F17 2C           	inc l
1513  8F18 2C           	inc l
1514  8F19 7E           	ld a,(hl)
1515  8F1A 22 29 8C     	ld (India_SP),hl
1516  8F1D
1517  8F1D 2C           	inc l
1518  8F1E 2C           	inc l
1519  8F1F 2C           	inc l
1520  8F20 46           	ld b,(hl)
1521  8F21 22 2B 8C     	ld (India_2_SP),hl
1522  8F24
1523  8F24 FD 2C        	inc iyl
1524  8F26
1525  8F26 C9           	ret
1526  8F27
1527  8F27              Prepara_salida
1528  8F27
1529  8F27 21 00 89     	ld hl,Tabla_de_pintado
1530  8F2A 22 29 8C     	ld (India_SP),hl
1531  8F2D C9           	ret
1532  8F2E
1533  8F2E
1534  8F2E 2C           Intercambia_1_byte inc l
1535  8F2F 1C           	inc e
1536  8F30 46           	ld b,(hl)
1537  8F31 1A           	ld a,(de)
1538  8F32 EB           	ex de,hl
1539  8F33 70           	ld (hl),b
1540  8F34 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1541  8F35 C9           	ret
1542  8F36
1543  8F36              ; -----------------------------------------------------------------------------------
1544  8F36              ;
1545  8F36              ;	20/01/24
1546  8F36              ;
1547  8F36              ;
1548  8F36
1549  8F36              Construye_movimientos_masticados_entidad
1550  8F36
1551  8F36 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1552  8F39 E5           	push hl
1553  8F3A CD 7D 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1554  8F3D              ;															; _ el (Contador_de_mov_masticados).
1555  8F3D CD 4D 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1556  8F40              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1557  8F40 CD 7A 99     	call Recompone_posicion_inicio
1558  8F43
1559  8F43 CD AA 96     1 call Draw
1560  8F46 CD 62 8F     	call Guarda_movimiento_masticado
1561  8F49
1562  8F49 CD 27 9D     	call Movimiento
1563  8F4C
1564  8F4C 3A 2D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1565  8F4F CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1566  8F51 28 F0        	jr z,1B
1567  8F53
1568  8F53              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1569  8F53              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1570  8F53
1571  8F53 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1572  8F54 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1573  8F57
1574  8F57              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1575  8F57
1576  8F57 CD 8B 9E     	call Situa_en_contador_general_de_mov_masticados
1577  8F5A
1578  8F5A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1579  8F5A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1580  8F5A
1581  8F5A ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1582  8F5E
1583  8F5E 71           	ld (hl),c
1584  8F5F 23           	inc hl
1585  8F60 70           	ld (hl),b
1586  8F61
1587  8F61 C9           	ret
1588  8F62
1589  8F62              ; -----------------------------------------------------------------------------------
1590  8F62              ;
1591  8F62              ;	28/12/23
1592  8F62              ;
1593  8F62              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1594  8F62              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1595  8F62
1596  8F62              Guarda_movimiento_masticado
1597  8F62
1598  8F62 ED 73 08 8C  	ld (Stack),sp
1599  8F66 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1600  8F6A
1601  8F6A DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1602  8F6C FD E5            push iy 												; Pushea Puntero_objeto.
1603  8F6E
1604  8F6E ED 7B 08 8C      ld sp,(Stack)
1605  8F72
1606  8F72 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1607  8F75 23           	inc hl
1608  8F76 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1609  8F79
1610  8F79 CD 7D 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1611  8F7C              ;															; _ el (Contador_de_mov_masticados).
1612  8F7C C9               ret
1613  8F7D
1614  8F7D              ; --------------------------------------------------------------------------------------------------------------
1615  8F7D              ;
1616  8F7D              ;	12/1/24
1617  8F7D              ;
1618  8F7D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1619  8F7D
1620  8F7D              Actualiza_Puntero_de_almacen_de_mov_masticados
1621  8F7D
1622  8F7D 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1623  8F80 01 04 00     	ld bc,4
1624  8F83 A7           	and a
1625  8F84 ED 4A        	adc hl,bc
1626  8F86 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1627  8F89 C9           	ret
1628  8F8A
1629  8F8A              ; --------------------------------------------------------------------------------------------------------------
1630  8F8A              ;
1631  8F8A              ;	24/03/24
1632  8F8A              ;
1633  8F8A              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1634  8F8A              ;
1635  8F8A              ;	IX contiene el puntero de impresión.
1636  8F8A              ;	DE contiene (Puntero_objeto).
1637  8F8A
1638  8F8A
1639  8F8A              Cargamos_registros_con_mov_masticado
1640  8F8A
1641  8F8A ED 73 08 8C  	ld (Stack),sp
1642  8F8E ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1643  8F92
1644  8F92 D1           	pop de 															; DE contiene Puntero_objeto
1645  8F93 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1646  8F95
1647  8F95 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1648  8F99 ED 7B 08 8C  	ld sp,(Stack)
1649  8F9D
1650  8F9D 7B           	ld a,e
1651  8F9E 82           	add d															; Comprueba si ya no hay datos en el almacén.
1652  8F9F
1653  8F9F CC 3D 93     	call z,Reinicia_entidad_maliciosa
1654  8FA2
1655  8FA2 C9           	ret
1656  8FA3
1657  8FA3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1658  8FA3              ;
1659  8FA3              ;	22/7/24
1660  8FA3
1661  8FA3              Cargamos_registros_con_explosion
1662  8FA3
1663  8FA3
1664  8FA3 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1665  8FA6 CD 47 90     	call Extrae_address
1666  8FA9
1667  8FA9 5D           	ld e,l
1668  8FAA 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1669  8FAB
1670  8FAB DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1671  8FAF
1672  8FAF C9           	ret
1673  8FB0
1674  8FB0
1675  8FB0              Cargamos_registros_con_explosion_Amadeus
1676  8FB0
1677  8FB0 2A 77 89     	ld hl,(Pamm_Amadeus)
1678  8FB3 CD 47 90     	call Extrae_address
1679  8FB6
1680  8FB6 5D           	ld e,l
1681  8FB7 54           	ld d,h
1682  8FB8
1683  8FB8 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1684  8FBC
1685  8FBC C9           	ret
1686  8FBD
1687  8FBD              ; --------------------------------------------------------------------------------------------------------------
1688  8FBD              ;
1689  8FBD              ;	17/06/24
1690  8FBD              ;
1691  8FBD              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1692  8FBD              ;
1693  8FBD              ;	IX contiene el puntero de impresión.
1694  8FBD              ;	DE contiene (Puntero_objeto).
1695  8FBD
1696  8FBD
1697  8FBD              Cargamos_registros_con_mov_masticado_Amadeus
1698  8FBD
1699  8FBD ED 73 08 8C  	ld (Stack),sp
1700  8FC1 ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1701  8FC5 D1           	pop de 															; DE contiene Puntero_objeto
1702  8FC6 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1703  8FC8 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1704  8FCC ED 7B 08 8C  	ld sp,(Stack)
1705  8FD0 C9           	ret
1706  8FD1
1707  8FD1              ; ---------------------------------------------------------------------------------------------------------------------
1708  8FD1              ;
1709  8FD1              ;	18/6/24
1710  8FD1              ;
1711  8FD1              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1712  8FD1
1713  8FD1              Genera_datos_de_impresion_Amadeus
1714  8FD1
1715  8FD1 3A 74 89     	ld a,(Impacto_Amadeus)
1716  8FD4 A7           	and a
1717  8FD5 20 03        	jr nz,1F
1718  8FD7
1719  8FD7              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1720  8FD7              ; _apuntando a la correspondiente explosión.
1721  8FD7
1722  8FD7 CD BD 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1723  8FDA
1724  8FDA DD 7D        1 ld a,ixl
1725  8FDC E6 1F        	and $1f
1726  8FDE 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1727  8FE1
1728  8FE1 2A 27 8C     	ld hl,(Scanlines_album_SP)
1729  8FE4 E5           	push hl
1730  8FE5
1731  8FE5 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1732  8FE8 22 27 8C     	ld (Scanlines_album_SP),hl
1733  8FEB
1734  8FEB CD 92 94     	call Genera_datos_de_impresion
1735  8FEE
1736  8FEE E1           	pop hl
1737  8FEF 22 27 8C     	ld (Scanlines_album_SP),hl
1738  8FF2
1739  8FF2 C9           	ret
1740  8FF3
1741  8FF3              ; ---------------------------------------------------------------------------------------------------------------------
1742  8FF3              ;
1743  8FF3              ;	13/03/24
1744  8FF3              ;
1745  8FF3              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1746  8FF3
1747  8FF3              Inicia_albumes_de_lineas
1748  8FF3
1749  8FF3 21 00 80     	ld hl,Scanlines_album
1750  8FF6 22 0C 8C     	ld (Album_de_pintado),hl
1751  8FF9 22 27 8C     	ld (Scanlines_album_SP),hl
1752  8FFC
1753  8FFC 21 1A 81     	ld hl,Scanlines_album_2
1754  8FFF 22 0E 8C     	ld (Album_de_borrado),hl
1755  9002
1756  9002 C9           	ret
1757  9003
1758  9003              Inicia_albumes_de_lineas_Amadeus
1759  9003
1760  9003 21 34 82     	ld hl,Amadeus_scanlines_album
1761  9006 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1762  9009 21 58 82     	ld hl,Amadeus_scanlines_album_2
1763  900C 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1764  900F
1765  900F C9           	ret
1766  9010
1767  9010              Inicia_albumes_de_disparos
1768  9010
1769  9010 21 7C 82     	ld hl,Disparos_scanlines_album
1770  9013 22 14 8C     	ld (Album_de_pintado_disparos),hl
1771  9016 21 8E 82     	ld hl,Disparos_scanlines_album_2
1772  9019 22 16 8C     	ld (Album_de_borrado_disparos),hl
1773  901C
1774  901C 21 7C 82     	ld hl,Disparos_scanlines_album
1775  901F 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1776  9022
1777  9022 C9           	ret
1778  9023
1779  9023              ; ---------------------------------------------------------------------------------------------------------------------
1780  9023              ;
1781  9023              ; 8/1/23
1782  9023              ;
1783  9023              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1784  9023              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1785  9023              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1786  9023
1787  9023              ; Destruye HL y DE !!!!!
1788  9023
1789  9023              Inicia_punteros_de_cajas
1790  9023
1791  9023 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1792  9026 CD 47 90         call Extrae_address
1793  9029 22 FB 8B         ld (Puntero_store_caja),hl
1794  902C 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1795  902F 22 FF 8B     	ld (Indice_restore_caja),hl
1796  9032 CD 47 90     	call Extrae_address
1797  9035 22 FD 8B     	ld (Puntero_restore_caja),hl
1798  9038 C9               ret
1799  9039
1800  9039              ; *************************************************************************************************************************************************************
1801  9039              ;
1802  9039              ; 8/1/23
1803  9039              ;
1804  9039              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1805  9039
1806  9039 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1807  903C 22 30 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1808  903F C9           	ret
1809  9040 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1810  9043 22 32 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1811  9046 C9           	ret
1812  9047
1813  9047              ; *************************************************************************************************************************************************************
1814  9047              ;
1815  9047              ; 20/10/22
1816  9047              ;
1817  9047              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1818  9047              ;
1819  9047              ; Destruye el puntero y DE !!!!!
1820  9047
1821  9047 5E           Extrae_address ld e,(hl)
1822  9048 23           	inc hl
1823  9049 56           	ld d,(hl)
1824  904A 2B           	dec hl
1825  904B EB           	ex de,hl
1826  904C C9           	ret
1827  904D
1828  904D              ; *************************************************************************************************************************************************************
1829  904D              ;
1830  904D              ;	20/1/24
1831  904D              ;
1832  904D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1833  904D              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1834  904D              ;
1835  904D              ;   Destruye HL y BC !!!!!,
1836  904D              ;
1837  904D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1838  904D              ;					"0" ..... Izquierda.
1839  904D
1840  904D              Inicia_Puntero_objeto
1841  904D
1842  904D 3A DA 8B     	ld a,(Cuad_objeto)
1843  9050 E6 01        	and 1
1844  9052 F5           	push af
1845  9053 CC 6F 90     	call z,Inicia_puntero_objeto_izq
1846  9056 F1           	pop af
1847  9057 C8           	ret z
1848  9058 CD 5C 90     	call Inicia_puntero_objeto_der
1849  905B C9           	ret
1850  905C
1851  905C              ; Arrancamos desde la parte izquierda de la pantalla.
1852  905C              ; Iniciamos (Indice_Sprite_der).
1853  905C
1854  905C 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1855  905F 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1856  9062 CD 47 90     	call Extrae_address
1857  9065 22 CD 8B     	ld (Puntero_objeto),hl
1858  9068
1859  9068 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1860  906B 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1861  906E C9           	ret
1862  906F
1863  906F              ; Arrancamos desde la parte derecha de la pantalla.
1864  906F              ; Iniciamos (Indice_Sprite_izq).
1865  906F
1866  906F 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1867  9072 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1868  9075 CD 47 90     	call Extrae_address
1869  9078 22 CD 8B     	ld (Puntero_objeto),hl
1870  907B
1871  907B 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1872  907E 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1873  9081 C9           	ret
1874  9082
1875  9082              ; **************************************************************************************************
1876  9082              ;
1877  9082              ;	06/07/24
1878  9082              ;
1879  9082              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1880  9082
1881  9082              Restore_entidad
1882  9082
1883  9082 2A FB 8B     	ld hl,(Puntero_store_caja)
1884  9085 7E           	ld a,(hl)
1885  9086 A7           	and a
1886  9087 CC 95 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1887  908A 28 F6        	jr z,Restore_entidad
1888  908C
1889  908C 11 BB 8B     	ld de,Bandeja_DRAW
1890  908F 01 0C 00     	ld bc,12
1891  9092 ED B0        	ldir
1892  9094 C9           	ret
1893  9095
1894  9095              ; **************************************************************************************************
1895  9095              ;
1896  9095              ;	08/05/23
1897  9095              ;
1898  9095              ;	Incrementamos los dos punteros de entidades. (+1).
1899  9095
1900  9095              Incrementa_punteros_de_cajas
1901  9095
1902  9095 2A FD 8B     	ld hl,(Puntero_restore_caja)
1903  9098 22 FB 8B     	ld (Puntero_store_caja),hl
1904  909B 2A FF 8B     	ld hl,(Indice_restore_caja)
1905  909E 23           	inc hl
1906  909F 23           	inc hl
1907  90A0 22 FF 8B     	ld (Indice_restore_caja),hl
1908  90A3 CD 47 90         call Extrae_address
1909  90A6 22 FD 8B         ld (Puntero_restore_caja),hl
1910  90A9 C9               ret
1911  90AA
1912  90AA              ; -----------------------------------------------------------
1913  90AA
1914  90AA              ; Teclado.
1915  90AA
1916  90AA 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1917  90AC DB FE        	in a,($fe)
1918  90AE E6 01        	and $01
1919  90B0 28 02        	jr z,1f
1920  90B2 18 F6        	jr Pulsa_ENTER
1921  90B4 C9           1 ret
1922  90B5
1923  90B5              ; **************************************************************************************************
1924  90B5              ;
1925  90B5              ; Temporización.
1926  90B5
1927  90B5              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1928  90B5              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1929  90B5              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1930  90B5              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1931  90B5
1932  90B5              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1933  90B5              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1934  90B5              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1935  90B5
1936  90B5              ; A partir de $4f61 no hace falta DELAY.
1937  90B5
1938  90B5              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1939  90B5
1940  90B5              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1941  90B5              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1942  90B5              ;	LD A,B
1943  90B5              ;	AND A
1944  90B5              ;	JR NZ,wait
1945  90B5              ;	RET
1946  90B5
1947  90B5              ; ---------------------------------------------------------------------------------------------------------------
1948  90B5              ;
1949  90B5              ;	13/07/24
1950  90B5              ;
1951  90B5
1952  90B5              Inicia_Shield
1953  90B5
1954  90B5 21 4D 8C     	ld hl,Datos_Shield
1955  90B8 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1956  90BB
1957  90BB 7E           	ld a,(hl)
1958  90BC 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1959  90BF
1960  90BF 3E 01        	ld a,1
1961  90C1 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1962  90C4
1963  90C4 C9           	ret
1964  90C5
1965  90C5              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1966  90C5              ;
1967  90C5              ;	4/6/24
1968  90C5              ;
1969  90C5              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1970  90C5              ;
1971  90C5              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1972  90C5              ;
1973  90C5
1974  90C5              Actualiza_pantalla
1975  90C5
1976  90C5 3E 02        	ld a,2
1977  90C7 D3 FE        	out ($fe),a
1978  90C9
1979  90C9 3A 2D 8C     	ld a,(Ctrl_3)
1980  90CC CB 57        	bit 2,a
1981  90CE 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1982  90D0
1983  90D0              Borrando_entidades
1984  90D0
1985  90D0 2A 27 8C     	ld hl,(Scanlines_album_SP)
1986  90D3 CD 47 90     	call Extrae_address
1987  90D6 24           	inc h
1988  90D7 25           	dec h
1989  90D8 28 05        	jr z,Pintando_entidades
1990  90DA CD 87 95     	call Pinta_Sprites
1991  90DD 18 F1        	jr Borrando_entidades
1992  90DF
1993  90DF              Pintando_entidades
1994  90DF
1995  90DF 2A 29 8C     	ld hl,(India_SP)
1996  90E2 2C           	inc l
1997  90E3 CD 47 90     	call Extrae_address
1998  90E6 24           	inc h
1999  90E7 25           	dec h
2000  90E8 28 0E        	jr z,Ejecuta_escudo
2001  90EA 1C           	inc e
2002  90EB 1C           	inc e
2003  90EC ED 53 29 8C  	ld (India_SP),de
2004  90F0 CD 47 90     	call Extrae_address
2005  90F3 CD 87 95     	call Pinta_Sprites
2006  90F6 18 E7        	jr Pintando_entidades
2007  90F8
2008  90F8              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2009  90F8
2010  90F8              Ejecuta_escudo
2011  90F8
2012  90F8 3A 53 8C     	ld a,(Shield)
2013  90FB A7           	and a
2014  90FC 20 2F        	jr nz,Aplica_Shield
2015  90FE
2016  90FE              Borrando_Amadeus
2017  90FE
2018  90FE 21 2D 8C     	ld hl,Ctrl_3
2019  9101 CB 6E        	bit 5,(hl)
2020  9103 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2021  9105
2022  9105 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2023  9108 CD 47 90     	call Extrae_address
2024  910B 24           	inc h
2025  910C 25           	dec h
2026  910D 28 03        	jr z,Pintando_Amadeus
2027  910F CD 87 95     	call Pinta_Sprites
2028  9112
2029  9112              Pintando_Amadeus
2030  9112
2031  9112 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2032  9115 CD 47 90     	call Extrae_address
2033  9118 24           	inc h
2034  9119 25           	dec h
2035  911A 28 03        	jr z,1F
2036  911C CD 87 95     	call Pinta_Sprites
2037  911F
2038  911F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2039  911F
2040  911F 21 2D 8C     1 ld hl,Ctrl_3
2041  9122 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2042  9124 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2043  9126 CB AE        	res 5,(hl)
2044  9128
2045  9128 3E 01        	ld a,1												; Borde azul.
2046  912A D3 FE        	out ($fe),a
2047  912C
2048  912C C9           	ret
2049  912D
2050  912D
2051  912D
2052  912D              Aplica_Shield
2053  912D
2054  912D              ;	Bit 1 "1" (Shield_3) Sólo borra.
2055  912D              ;		  "0"     ""     Borra/Pinta.
2056  912D              ;	Bit 2    ""  RET.	 No borra, no pinta.
2057  912D
2058  912D 21 55 8C     	ld hl,Shield_3
2059  9130
2060  9130 CB 5E        	bit 3,(hl)
2061  9132 20 DE        	jr nz,Pintando_Amadeus
2062  9134
2063  9134 CB 56        	bit 2,(hl)
2064  9136 20 E7        	jr nz,1B
2065  9138
2066  9138 CB 4E        	bit 1,(hl)
2067  913A C4 41 91     	call nz,Borra_Amadeus_shield
2068  913D
2069  913D 28 BF        	jr z,Borrando_Amadeus
2070  913F 18 DE        	jr 1B
2071  9141
2072  9141              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2073  9141
2074  9141              Borra_Amadeus_shield
2075  9141
2076  9141 3A 2D 8C     	ld a,(Ctrl_3)
2077  9144 CB 6F        	bit 5,a
2078  9146 28 08        	jr z,1F
2079  9148
2080  9148 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2081  914B CD 47 90     	call Extrae_address
2082  914E 18 06        	jr 2F
2083  9150
2084  9150 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2085  9153 CD 47 90     	call Extrae_address
2086  9156
2087  9156 CD 87 95     2 call Pinta_Sprites
2088  9159
2089  9159 AF           	xor a
2090  915A 3C           	inc a											; Asegura NZ en la salida de la rutina.
2091  915B
2092  915B C9           	ret
2093  915C
2094  915C              Pinta_Amadeus_shield
2095  915C
2096  915C 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2097  915F CD 47 90     	call Extrae_address
2098  9162 CD 87 95     	call Pinta_Sprites
2099  9165
2100  9165 AF           	xor a
2101  9166 3C           	inc a											; Asegura NZ en la salida de la rutina.
2102  9167
2103  9167 C9           	ret
2104  9168
2105  9168              Borra_Pinta_Amadeus_shield
2106  9168
2107  9168 CD 41 91     	call Borra_Amadeus_shield
2108  916B CD 5C 91     	call Pinta_Amadeus_shield
2109  916E C9           	ret
2110  916F
2111  916F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2112  916F              ;
2113  916F              ;	19/6/24
2114  916F              ;
2115  916F
2116  916F              Teclado
2117  916F
2118  916F              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2119  916F
2120  916F 3E F7        	ld a,$f7												; "5" para disparar.
2121  9171 DB FE        	in a,($fe)
2122  9173 E6 10        	and $10
2123  9175
2124  9175 CC 0B 9F     	call z,Genera_disparo_Amadeus
2125  9178
2126  9178 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2127  917A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2128  917C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2129  917E CC F4 9C         call z,Amadeus_a_izquierda
2130  9181
2131  9181 3E F7        	ld a,$f7
2132  9183 DB FE        	in a,($fe)
2133  9185 E6 01        	and $01
2134  9187 C8           	ret z
2135  9188
2136  9188 3E F7        	ld a,$f7
2137  918A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2138  918C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2139  918E CC 0C 9D     	call z,Amadeus_a_derecha
2140  9191
2141  9191 C9           	ret
2142  9192
2143  9192              ; ------------------------------------------------------------------------------------------------------------------------
2144  9192              ;
2145  9192              ;	06/07/24
2146  9192              ;
2147  9192
2148  9192              Genera_explosion
2149  9192
2150  9192 21 3F 8C     	ld hl,Clock_explosion
2151  9195 35           	dec (hl)
2152  9196 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2153  9198
2154  9198              Borra_entidad_colisionada
2155  9198
2156  9198 CD 9E 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2157  919B CD A3 8F     	call Cargamos_registros_con_explosion
2158  919E CD 92 94     	call Genera_datos_de_impresion
2159  91A1
2160  91A1 AF           	xor a
2161  91A2 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2162  91A3
2163  91A3 C9           	ret
2164  91A4
2165  91A4              Siguiente_frame_explosion
2166  91A4
2167  91A4 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2168  91A6
2169  91A6              ; Avanza Frame de explosión.
2170  91A6
2171  91A6 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2172  91A9 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2173  91AC
2174  91AC 79           	ld a,c
2175  91AD 95           	sub l
2176  91AE 20 0B        	jr nz,1F
2177  91B0
2178  91B0              ; Fín de la entidad !!!!!!!!!!!!!
2179  91B0
2180  91B0 21 02 8C     	ld hl,Numero_parcial_de_entidades
2181  91B3 35           	dec (hl)
2182  91B4 23           	inc hl
2183  91B5 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2184  91B6
2185  91B6 CD 12 93     	call Limpiamos_bandeja_DRAW
2186  91B9 18 DD        	jr Borra_entidad_colisionada
2187  91BB
2188  91BB 23           1 inc hl
2189  91BC 23           	inc hl
2190  91BD 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2191  91C0 18 D6        	jr Borra_entidad_colisionada
2192  91C2
2193  91C2              ; ----- ----- ----- ----- -----
2194  91C2
2195  91C2              Genera_explosion_Amadeus
2196  91C2
2197  91C2 21 40 8C     	ld hl,Clock_explosion_Amadeus
2198  91C5 35           	dec (hl)
2199  91C6 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2200  91C8
2201  91C8              Borra_Amadeus_impactado
2202  91C8
2203  91C8 CD 1E 8E     	call Change_Amadeus
2204  91CB CD B0 8F     	call Cargamos_registros_con_explosion_Amadeus
2205  91CE CD D1 8F     	call Genera_datos_de_impresion_Amadeus
2206  91D1
2207  91D1 21 2D 8C     	ld hl,Ctrl_3
2208  91D4 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2209  91D6
2210  91D6 AF           	xor a
2211  91D7 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2212  91D8
2213  91D8 C9           	ret
2214  91D9
2215  91D9              Siguiente_frame_explosion_Amadeus
2216  91D9
2217  91D9 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2218  91DB
2219  91DB              ; Avanza Frame de explosión.
2220  91DB
2221  91DB 2A 77 89     	ld hl,(Pamm_Amadeus)
2222  91DE 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2223  91E1
2224  91E1 79           	ld a,c
2225  91E2 95           	sub l
2226  91E3 20 0B        	jr nz,1F
2227  91E5
2228  91E5              ; Fín de Amadeus !!!!!!!!!!!!!
2229  91E5              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2230  91E5
2231  91E5 AF           	xor a
2232  91E6 32 74 89     	ld (Impacto_Amadeus),a
2233  91E9 21 2D 8C     	ld hl,Ctrl_3
2234  91EC CB F6        	set 6,(hl)
2235  91EE
2236  91EE 18 D8        	jr Borra_Amadeus_impactado
2237  91F0
2238  91F0 23           1 inc hl
2239  91F1 23           	inc hl
2240  91F2 22 77 89     	ld (Pamm_Amadeus),hl
2241  91F5 18 D1        	jr Borra_Amadeus_impactado
2242  91F7
2243  91F7              ; ---------------------------------------------------------------
2244  91F7
2245  91F7              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 91F7              ; ******************************************************************************************************************************************************************************************
   2+ 91F7              ;
   3+ 91F7              ;   21/04/24
   4+ 91F7              ;
   5+ 91F7              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 91F7              ;   (XOR) bit a bit.
   7+ 91F7              ;
   8+ 91F7              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 91F7
  10+ 91F7              Derivando_RND
  11+ 91F7
  12+ 91F7 21 F6 88         ld hl,Numeros_aleatorios
  13+ 91FA
  14+ 91FA ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 91FC C5               push bc
  16+ 91FD              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 91FD 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9200              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9200
  20+ 9200 A7           6 and a                                 ; Carry a "0".
  21+ 9201 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9203 30 02            jr nc,1F
  23+ 9205
  24+ 9205 CB C1            set 0,c
  25+ 9207
  26+ 9207 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9208 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 920A 5F               ld e,a
  29+ 920B
  30+ 920B 7A               ld a,d
  31+ 920C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 920E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9210
  34+ 9210 CB 3F            srl a
  35+ 9212
  36+ 9212 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9213
  38+ 9213 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9214 28 04            jr z,4F
  40+ 9216
  41+ 9216 CB FF            set 7,a
  42+ 9218 18 02            jr 5F
  43+ 921A
  44+ 921A CB BF        4 res 7,a
  45+ 921C
  46+ 921C CB 21        5 sla c
  47+ 921E 10 E0            djnz 6B
  48+ 9220
  49+ 9220 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9221
  51+ 9221 77               ld (hl),a
  52+ 9222 23               inc hl
  53+ 9223 C1               pop bc
  54+ 9224 10 D4            djnz 3B
  55+ 9226
  56+ 9226 C9               ret
  57+ 9227
  58+ 9227
  59+ 9227
# file closed: RND_Derivando.asm
2246  9227              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9227              ;---------------------------------------------------------------------------------------------------------------
   2+ 9227              ;
   3+ 9227              ;   8/3/24
   4+ 9227              ;
   5+ 9227              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9227              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9227              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9227              ;	_ de la 1ª entidad del Nivel.
   9+ 9227              ;
  10+ 9227              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9227
  12+ 9227              ;	MODIFICA: HL,DE y A.
  13+ 9227              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9227
  15+ 9227              Inicializa_Nivel
  16+ 9227
  17+ 9227 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 922A CD 47 90     	call Extrae_address
  19+ 922D 7E           	ld a,(hl)
  20+ 922E 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9231 23           	inc hl
  22+ 9232 CD 3F 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9235 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9238 CD 48 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 923B
  26+ 923B CD 59 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 923E C9           	ret
  28+ 923F
  29+ 923F              ; ----------------------
  30+ 923F
  31+ 923F 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9242 01 04 00     	ld bc,4
  33+ 9245 ED B0        	ldir
  34+ 9247 C9           	ret
  35+ 9248
  36+ 9248 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9249 CD E3 93         call Calcula_salto_en_BC
  38+ 924C 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 924F A7               and a
  40+ 9250 ED 4A            adc hl,bc
  41+ 9252 CD 47 90         call Extrae_address
  42+ 9255 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9258 C9               ret
  44+ 9259
  45+ 9259 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 925C CD E3 93     	call Calcula_salto_en_BC
  47+ 925F 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9262 A7               and a
  49+ 9263 ED 4A            adc hl,bc
  50+ 9265 CD 47 90         call Extrae_address
  51+ 9268 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 926B C9           	ret
  53+ 926C
  54+ 926C              ;---------------------------------------------------------------------------------------------------------------
  55+ 926C              ;
  56+ 926C              ;   5/1/24
  57+ 926C              ;
  58+ 926C              ;	Destruye A,BC,HL,DE
  59+ 926C
  60+ 926C              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 926C              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 926C
  63+ 926C              Inicia_Entidades
  64+ 926C
  65+ 926C              ; Preparamos los punteros de las cajas de entidades:
  66+ 926C
  67+ 926C CD 23 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 926F              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 926F CD 2B 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9272
  71+ 9272 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9275
  73+ 9275 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 9278
  75+ 9278 CD 91 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 927B
  77+ 927B 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 927E
  79+ 927E              ; En este punto:
  80+ 927E              ;
  81+ 927E              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 927E              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 927E
  84+ 927E C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 927F
  86+ 927F 7E           	ld a,(hl)
  87+ 9280 CD FD 92     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9283
  89+ 9283 CD F5 93     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9286
  91+ 9286              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9286
  93+ 9286 CD B3 93     	call Busca_mov_masticados_segun_tipo
  94+ 9289
  95+ 9289 A7           	and a
  96+ 928A 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 928C
  98+ 928C              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 928C
 100+ 928C              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 928C              ;	_ de este tipo de entidad.
 102+ 928C
 103+ 928C CD 8B 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 928F CD 98 9E     	call Transfiere_datos_de_contadores
 105+ 9292
 106+ 9292 18 06        	jr 4F
 107+ 9294
 108+ 9294 CD 36 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9297
 110+ 9297              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9297              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9297              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9297              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9297              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9297
 116+ 9297 CD 71 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 929A              ;																; _ Mov_masticados ya generados.
 118+ 929A
 119+ 929A CD 8A 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 929D
 121+ 929D DD E5        	push ix
 122+ 929F E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92A0
 124+ 92A0 D5           	push de
 125+ 92A1 CD 66 94     	call Genera_coordenadas
 126+ 92A4
 127+ 92A4 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 128+ 92A8 CD 9E 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92AB D1           	pop de
 130+ 92AC
 131+ 92AC CD 92 94     	call Genera_datos_de_impresion
 132+ 92AF              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92AF              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92AF              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92AF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92AF
 137+ 92AF CD 35 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92B2
 139+ 92B2              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92B2
 141+ 92B2 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92B6 CD 22 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92B9
 144+ 92B9 CD 12 93     	call Limpiamos_bandeja_DRAW
 145+ 92BC CD 95 90     	call Incrementa_punteros_de_cajas
 146+ 92BF
 147+ 92BF              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92BF              ; _ entidad del Nivel.
 149+ 92BF
 150+ 92BF 3A 2E 8C     	ld a,(Ctrl_4)
 151+ 92C2 E6 F0        	and $f0
 152+ 92C4 32 2E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92C7
 154+ 92C7              ; Siguiente entidad del Nivel.
 155+ 92C7
 156+ 92C7 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92CA 23           	inc hl 														; _ entidad del Nivel.
 158+ 92CB
 159+ 92CB C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92CC
 161+ 92CC 10 A7        	djnz 2B
 162+ 92CE
 163+ 92CE C9           	ret
 164+ 92CF
 165+ 92CF              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92CF              ;
 167+ 92CF              ;	27/5/24
 168+ 92CF              ;
 169+ 92CF              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92CF              ;
 171+ 92CF
 172+ 92CF              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92CF              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92CF
 175+ 92CF 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92D2 CD F5 93     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92D5
 178+ 92D5
 179+ 92D5              Construye_movimientos_masticados_Amadeus
 180+ 92D5
 181+ 92D5 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92D8 CD 7D 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92DB              ;															; _ el (Contador_de_mov_masticados).
 184+ 92DB CD 4D 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92DE              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92DE
 187+ 92DE              ; Generamos movimientos masticados de Amadeus.
 188+ 92DE
 189+ 92DE 06 79        	ld b,121												; $0079, 121d.
 190+ 92E0
 191+ 92E0 C5           1 push bc
 192+ 92E1 CD AA 96     	call Draw
 193+ 92E4 CD 62 8F     	call Guarda_movimiento_masticado
 194+ 92E7
 195+ 92E7 CD 1E 9A     	call Mov_right
 196+ 92EA CD 1E 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 92ED
 198+ 92ED C1           	pop bc
 199+ 92EE 10 F0        	djnz 1B
 200+ 92F0
 201+ 92F0              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 92F0
 203+ 92F0              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 92F0              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 92F0
 206+ 92F0 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 92F3 01 08 00     	ld bc,8
 208+ 92F6 A7           	and a
 209+ 92F7 ED 42        	sbc hl,bc
 210+ 92F9 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 92FC
 212+ 92FC C9           	ret
 213+ 92FD
 214+ 92FD              ; ---------------------------------------------------------------------
 215+ 92FD              ;
 216+ 92FD              ;	10/02/24
 217+ 92FD              ;
 218+ 92FD              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 92FD              ;
 220+ 92FD              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 92FD
 222+ 92FD              Definicion_segun_tipo
 223+ 92FD
 224+ 92FD CD E3 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9300 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9303 CD EB 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9306 C9           	ret
 228+ 9307
 229+ 9307              ; ---------------------------------------------------------------------
 230+ 9307              ;
 231+ 9307              ;	6/7/24
 232+ 9307
 233+ 9307
 234+ 9307              Store_Restore_cajas
 235+ 9307
 236+ 9307 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 930B CD 22 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 930E CD 95 90     	call Incrementa_punteros_de_cajas
 239+ 9311 C9           	ret
 240+ 9312
 241+ 9312              ; ---------------------------------------------------------------------
 242+ 9312              ;
 243+ 9312              ;	23/6/24
 244+ 9312              ;
 245+ 9312              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9312              ;
 247+ 9312              ;	MODIFY: HL
 248+ 9312
 249+ 9312              Limpiamos_bandeja_DRAW
 250+ 9312
 251+ 9312 ED 73 08 8C  	ld (Stack),sp
 252+ 9316 31 E0 8B     	ld sp,Vel_left
 253+ 9319
 254+ 9319 AF           	xor a
 255+ 931A 67           	ld h,a
 256+ 931B 6F           	ld l,a
 257+ 931C
 258+ 931C E5           	push hl
 259+ 931D E5           	push hl
 260+ 931E E5           	push hl
 261+ 931F E5           	push hl
 262+ 9320 E5           	push hl
 263+ 9321 E5           	push hl
 264+ 9322 E5           	push hl
 265+ 9323 E5           	push hl
 266+ 9324 E5           	push hl
 267+ 9325 E5           	push hl
 268+ 9326 E5           	push hl
 269+ 9327 E5           	push hl
 270+ 9328 E5           	push hl
 271+ 9329 E5           	push hl
 272+ 932A E5           	push hl
 273+ 932B E5           	push hl
 274+ 932C E5           	push hl
 275+ 932D E5           	push hl
 276+ 932E
 277+ 932E 33           	inc sp
 278+ 932F
 279+ 932F E5           	push hl
 280+ 9330 ED 7B 08 8C  	ld sp,(Stack)
 281+ 9334
 282+ 9334 C9           	ret
 283+ 9335
 284+ 9335              ; ---------------------------------------------------------------------
 285+ 9335              ;
 286+ 9335              ;	24/03/24
 287+ 9335
 288+ 9335 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9338 2B           	dec hl
 290+ 9339 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 933C C9           	ret
 292+ 933D
 293+ 933D              ; ---------------------------------------------------------------------
 294+ 933D              ;
 295+ 933D              ;	8/5/24
 296+ 933D
 297+ 933D              Reinicia_entidad_maliciosa
 298+ 933D
 299+ 933D              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 933D
 301+ 933D CD 8B 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9340 CD 98 9E     	call Transfiere_datos_de_contadores
 303+ 9343
 304+ 9343              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9343
 306+ 9343 3A BB 8B     	ld a,(Tipo)
 307+ 9346 CD FD 92     	call Definicion_segun_tipo
 308+ 9349
 309+ 9349 E5           	push hl
 310+ 934A DD E1        	pop ix
 311+ 934C
 312+ 934C DD 6E 0B     	ld l,(ix+11)
 313+ 934F DD 66 0C     	ld h,(ix+12)
 314+ 9352
 315+ 9352 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9355
 317+ 9355 CD 8A 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9358
 319+ 9358              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9358              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9358              ; Ejemplos.
 322+ 9358
 323+ 9358              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9358              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9358              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9358              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9358              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9358
 329+ 9358 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 935B CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 935D
 332+ 935D 7E           	ld a,(hl)
 333+ 935E CB 2F        	sra a
 334+ 9360 CB 2F        	sra a
 335+ 9362
 336+ 9362 32 C6 8B     	ld (Velocidad),a
 337+ 9365
 338+ 9365 3E 40        	ld a,$40
 339+ 9367 BE           	cp (hl)
 340+ 9368 C0           	ret nz
 341+ 9369
 342+ 9369              ; Límitador.
 343+ 9369
 344+ 9369              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9369
 346+ 9369 CB 2E        	sra (hl)
 347+ 936B 21 C6 8B     	ld hl,Velocidad
 348+ 936E CB 2E        	sra (hl)
 349+ 9370
 350+ 9370 C9           	ret
 351+ 9371
 352+ 9371              ; ---------------------------------------------------------------------
 353+ 9371              ;
 354+ 9371              ;	22/01/24
 355+ 9371
 356+ 9371 21 2E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9374 CB 46        	bit 0,(hl)
 358+ 9376 20 0D        	jr nz,1F
 359+ 9378 CB 4E        	bit 1,(hl)
 360+ 937A 20 0C        	jr nz,2F
 361+ 937C CB 56        	bit 2,(hl)
 362+ 937E 20 0B        	jr nz,3F
 363+ 9380 CB 5E        	bit 3,(hl)
 364+ 9382 20 0A        	jr nz,4F
 365+ 9384 C9           	ret
 366+ 9385
 367+ 9385 CB E6        1 set 4,(hl)
 368+ 9387 C9           	ret
 369+ 9388 CB EE        2 set 5,(hl)
 370+ 938A C9           	ret
 371+ 938B CB F6        3 set 6,(hl)
 372+ 938D C9           	ret
 373+ 938E CB FE        4 set 7,(hl)
 374+ 9390 C9           	ret
 375+ 9391
 376+ 9391              ; ---------------------------------------------------------------------
 377+ 9391              ;
 378+ 9391              ;	23/01/24
 379+ 9391              ;
 380+ 9391              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9391              ;
 382+ 9391              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9391              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9391              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9391              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9391
 387+ 9391              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9391
 389+ 9391 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9392 3D           	dec a
 391+ 9393 20 06        	jr nz,1F
 392+ 9395
 393+ 9395              ; --- Tipo_1
 394+ 9395
 395+ 9395 21 2E 8C     	ld hl,Ctrl_4
 396+ 9398 CB C6        	set 0,(hl)
 397+ 939A C9           	ret
 398+ 939B
 399+ 939B 3D           1 dec a
 400+ 939C 20 06        	jr nz,2F
 401+ 939E
 402+ 939E              ; --- Tipo_2
 403+ 939E
 404+ 939E 21 2E 8C     	ld hl,Ctrl_4
 405+ 93A1 CB CE        	set 1,(hl)
 406+ 93A3 C9           	ret
 407+ 93A4
 408+ 93A4 3D           2 dec a
 409+ 93A5 20 06        	jr nz,3F
 410+ 93A7
 411+ 93A7              ; --- Tipo_3
 412+ 93A7
 413+ 93A7 21 2E 8C     	ld hl,Ctrl_4
 414+ 93AA CB D6        	set 2,(hl)
 415+ 93AC C9           	ret
 416+ 93AD
 417+ 93AD              ; --- Tipo_3
 418+ 93AD
 419+ 93AD 21 2E 8C     3 ld hl,Ctrl_4
 420+ 93B0 CB D6        	set 2,(hl)
 421+ 93B2 C9           	ret
 422+ 93B3
 423+ 93B3              ; ---------------------------------------------------------------------
 424+ 93B3              ;
 425+ 93B3              ;	22/01/24
 426+ 93B3
 427+ 93B3 21 2E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93B6 CB 46        	bit 0,(hl)
 429+ 93B8 20 0E        	jr nz,1F
 430+ 93BA
 431+ 93BA CB 4E        	bit 1,(hl)
 432+ 93BC 20 10        	jr nz,2F
 433+ 93BE
 434+ 93BE CB 56        	bit 2,(hl)
 435+ 93C0 20 12        	jr nz,3F
 436+ 93C2
 437+ 93C2 CB 5E        	bit 3,(hl)
 438+ 93C4 20 14        	jr nz,4F
 439+ 93C6 18 19        	jr 6F
 440+ 93C8
 441+ 93C8              ; Entidad_de_Tipo_1.
 442+ 93C8
 443+ 93C8 CB 66        1 bit 4,(hl)
 444+ 93CA 28 15        	jr z,6F
 445+ 93CC 18 10        	jr 5F
 446+ 93CE
 447+ 93CE              ; Entidad_de_Tipo_2.
 448+ 93CE
 449+ 93CE CB 6E        2 bit 5,(hl)
 450+ 93D0 28 0F        	jr z,6F
 451+ 93D2 18 0A        	jr 5F
 452+ 93D4
 453+ 93D4              ; Entidad_de_Tipo_3.
 454+ 93D4
 455+ 93D4 CB 76        3 bit 6,(hl)
 456+ 93D6 28 09        	jr z,6F
 457+ 93D8 18 04        	jr 5F
 458+ 93DA
 459+ 93DA              ; Entidad_de_Tipo_4.
 460+ 93DA
 461+ 93DA CB 7E        4 bit 7,(hl)
 462+ 93DC 28 03        	jr z,6F
 463+ 93DE
 464+ 93DE              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93DE
 466+ 93DE AF           5 xor a
 467+ 93DF 3C           	inc a
 468+ 93E0 C9           	ret
 469+ 93E1
 470+ 93E1              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93E1
 472+ 93E1 AF           6 xor a
 473+ 93E2 C9           	ret
 474+ 93E3
 475+ 93E3              ;	------------------------------------------------------------------------------------
 476+ 93E3              ;
 477+ 93E3              ;	12/01/24
 478+ 93E3              ;
 479+ 93E3              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93E3              ;
 481+ 93E3              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93E3              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93E3
 484+ 93E3 CB 27        Calcula_salto_en_BC sla a
 485+ 93E5 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93E7 4F           	ld c,a
 487+ 93E8 06 00        	ld b,0
 488+ 93EA C9           	ret
 489+ 93EB
 490+ 93EB              ; ------------------------------------------------------------------
 491+ 93EB              ;
 492+ 93EB              ;	19/1/24
 493+ 93EB              ;
 494+ 93EB              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93EB              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93EB
 497+ 93EB A7           Situa_en_datos_de_definicion and a
 498+ 93EC ED 4A        	adc hl,bc
 499+ 93EE CD 47 90     	call Extrae_address
 500+ 93F1 22 06 8C         ld (Datos_de_entidad),hl
 501+ 93F4 C9           	ret
 502+ 93F5
 503+ 93F5              ; ------------------------------------------------------------------
 504+ 93F5
 505+ 93F5              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 93F5              ; 	inc de
 507+ 93F5              ; 	inc de
 508+ 93F5              ; 	ex de,hl
 509+ 93F5              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 93F5              ; 	ret
 511+ 93F5
 512+ 93F5              ; ----------------------------------------------------------------------------------------------------------
 513+ 93F5              ;
 514+ 93F5              ;	24/6/24
 515+ 93F5              ;
 516+ 93F5              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 93F5              ;	_ de entidad.
 518+ 93F5              ;
 519+ 93F5              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 93F5              ;
 521+ 93F5              ;
 522+ 93F5              ;	MODIFICA: HL,DE y BC
 523+ 93F5
 524+ 93F5
 525+ 93F5              Definicion_de_entidad_a_bandeja_DRAW
 526+ 93F5
 527+ 93F5 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 93F8 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 93F9 12           	ld (de),a
 530+ 93FA 23           	inc hl
 531+ 93FB              ;
 532+ 93FB 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 93FE 01 02 00     	ld bc,2
 534+ 9401 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9403              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9403 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9406 7E           	ld a,(hl)
 538+ 9407 12           	ld (de),a
 539+ 9408 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9409
 541+ 9409 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 940C 01 04 00     	ld bc,4
 543+ 940F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9411
 545+ 9411 11 D8 8B     	ld de,Posicion_inicio
 546+ 9414 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9417 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9419
 549+ 9419 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 941C 01 02 00     	ld bc,2
 551+ 941F ED B0        	ldir
 552+ 9421
 553+ 9421 C9           	ret
 554+ 9422
 555+ 9422              ; ----------------------------------------------------------------------------------------------------------
 556+ 9422              ;
 557+ 9422              ;	1/8/24
 558+ 9422              ;
 559+ 9422
 560+ 9422              Parametros_de_bandeja_DRAW_a_caja
 561+ 9422
 562+ 9422 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9425 01 0C 00     	ld bc,12
 564+ 9428 ED B0        	ldir
 565+ 942A C9           	ret
 566+ 942B
 567+ 942B              ;---------------------------------------------------------------------------------------------------------------
 568+ 942B              ;
 569+ 942B              ;	5/1/24
 570+ 942B              ;
 571+ 942B              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 942B              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 942B              ;
 574+ 942B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 942B              ;
 576+ 942B              ;	(Numero_parcial_de_entidades)="7".
 577+ 942B              ;
 578+ 942B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 942B              ;
 580+ 942B              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 942B              ;
 582+ 942B              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 942B              ;	MODIFICA: A y B.
 584+ 942B              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 942B
 586+ 942B              Inicializa_Numero_parcial_de_entidades
 587+ 942B
 588+ 942B              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 942B
 590+ 942B 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 942E A7           	and a
 592+ 942F
 593+ 942F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 942F              ;	jr z,$
 595+ 942F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 942F
 597+ 942F 20 03        	jr nz,3F
 598+ 9431
 599+ 9431              ; ---------- ---------- ----------
 600+ 9431
 601+ 9431              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9431              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9431
 604+ 9431 CD 27 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9434
 606+ 9434              ; ---------- ---------- ----------
 607+ 9434
 608+ 9434 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9437 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9439 38 08        	jr c,1F
 611+ 943B
 612+ 943B              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 943B              ; Actualizamos variables.
 614+ 943B
 615+ 943B 3E 07        	ld a,7
 616+ 943D 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9440 47           	ld b,a
 618+ 9441 18 04        	jr 2F
 619+ 9443
 620+ 9443              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9443              ; (Numero_de_entidades)="0".
 622+ 9443
 623+ 9443 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9446 47           	ld b,a
 625+ 9447 C9           2 ret
 626+ 9448
# file closed: Rutinas_de_inicio_y_niveles.asm
2247  9448              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9448              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9448              ;
   3+ 9448              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9448              ;
   5+ 9448              ; *****************************************************************************************************************************************************************************************
   6+ 9448              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9448
   8+ 9448 7C           calcula_tercio ld a,h
   9+ 9449 E6 18        	and $18
  10+ 944B CB 2F        	sra a
  11+ 944D CB 2F        	sra a
  12+ 944F CB 2F        	sra a
  13+ 9451 C9           	ret
  14+ 9452
# file closed: calcula_tercio.asm
2248  9452              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9452              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9452              ;
   3+ 9452              ;
   4+ 9452              ;	CLS.
   5+ 9452              ;
   6+ 9452              ;	Limpia la pantalla y define sus atributos.
   7+ 9452              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9452              ;
   9+ 9452              ;	COLORES: 0 ..... NEGRO
  10+ 9452              ;    		 1 ..... AZUL
  11+ 9452              ; 			 2 ..... ROJO
  12+ 9452              ;			 3 ..... MAGENTA
  13+ 9452              ; 			 4 ..... VERDE
  14+ 9452              ; 			 5 ..... CIAN
  15+ 9452              ;			 6 ..... AMARILLO
  16+ 9452              ; 			 7 ..... BLANCO
  17+ 9452              ;
  18+ 9452              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9452              ;
  20+ 9452              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9452
  22+ 9452
  23+ 9452 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9455 11 01 40     	LD DE,$4001
  25+ 9458 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 945B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 945D ED B0        	LDIR
  28+ 945F 01 FF 02     	LD BC,767
  29+ 9462 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9463 ED B0        	LDIR
  31+ 9465 C9           	ret
  32+ 9466
# file closed: Cls.asm
2249  9466              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9466              ; ------------------------------------------------------------------------
   2+ 9466              ;
   3+ 9466              ;	30/1/24
   4+ 9466              ;
   5+ 9466              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9466              ;	Fila superior "0", Columna izquierda "0".
   7+ 9466              ;
   8+ 9466              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9466              ;
  10+ 9466              ;	Modifica: A,BC y DE.
  11+ 9466
  12+ 9466 7D           Genera_coordenadas ld a,l
  13+ 9467 E6 1F        	and $1f
  14+ 9469 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 946C
  16+ 946C 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 946D FE 40        	cp $40
  18+ 946F 38 1C        	jr c,4F
  19+ 9471
  20+ 9471 CD 48 94     	call calcula_tercio
  21+ 9474 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9475
  23+ 9475 1E 00        	ld e,0
  24+ 9477 7D           	ld a,l
  25+ 9478 E6 E0        	and $e0
  26+ 947A 28 01        	jr z,1F
  27+ 947C 04           	inc b
  28+ 947D
  29+ 947D 04           1 inc b
  30+ 947E 05           	dec b
  31+ 947F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9481              ;														; _ , salimos.
  33+ 9481 1C           3 inc e
  34+ 9482 D6 20        	sub 32
  35+ 9484 20 FB        	jr nz,3B
  36+ 9486 10 F5        	djnz 1B
  37+ 9488
  38+ 9488 7B           2 ld a,e
  39+ 9489 32 BD 8B     	ld (Coordenada_y),a
  40+ 948C C9           	ret
  41+ 948D
  42+ 948D AF           4 xor a
  43+ 948E 32 BD 8B     	ld (Coordenada_y),a
  44+ 9491 C9           	ret
  45+ 9492
# file closed: Genera_coordenadas.asm
2250  9492              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9492              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9492              ;
   3+ 9492              ;	11/03/24
   4+ 9492              ;
   5+ 9492              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9492              ;   DE contiene Puntero_objeto.
   7+ 9492              ;   IX contiene el Puntero de impresión.
   8+ 9492
   9+ 9492              Genera_datos_de_impresion
  10+ 9492
  11+ 9492 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9496
  13+ 9496 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9499 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 949B
  16+ 949B 2A 27 8C         ld hl,(Scanlines_album_SP)
  17+ 949E
  18+ 949E 3E 05            ld a,5
  19+ 94A0 85               add l
  20+ 94A1 6F               ld l,a
  21+ 94A2
  22+ 94A2 F9               ld sp,hl
  23+ 94A3 22 27 8C         ld (Scanlines_album_SP),hl
  24+ 94A6
  25+ 94A6 21 00 00         ld hl,0
  26+ 94A9
  27+ 94A9 DD E5            push ix
  28+ 94AB 3B               dec sp
  29+ 94AC ED 7A            adc hl,sp
  30+ 94AE D5               push de
  31+ 94AF
  32+ 94AF              ; Recuperamos SP.
  33+ 94AF
  34+ 94AF ED 7B 08 8C      ld sp,(Stack)
  35+ 94B3
  36+ 94B3 E5               push hl
  37+ 94B4 F1               pop af
  38+ 94B5 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94B6
  40+ 94B6              ; Tenemos el encabezado listo.
  41+ 94B6              ; Preparamos registros para generar los scanlines.
  42+ 94B6
  43+ 94B6 DD E5            push ix
  44+ 94B8 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94B9
  46+ 94B9 ED 5B 27 8C      ld de,(Scanlines_album_SP)
  47+ 94BD
  48+ 94BD              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94BD              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94BD
  51+ 94BD 7C               ld a,h
  52+ 94BE FE 50            cp $50
  53+ 94C0 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94C2
  55+ 94C2 20 05            jr nz,2F
  56+ 94C4
  57+ 94C4 7D               ld a,l
  58+ 94C5 FE E0            cp $e0
  59+ 94C7 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94C9
  61+ 94C9 7D           2 ld a,l
  62+ 94CA FE C0            cp $c0
  63+ 94CC D2 5E 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94CF
  65+ 94CF              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94CF
  67+ 94CF CD 5C 99         call NextScan
  68+ 94D2 EB               ex de,hl
  69+ 94D3
  70+ 94D3 73               ld (hl),e
  71+ 94D4 23               inc hl
  72+ 94D5 72               ld (hl),d
  73+ 94D6 23               inc hl
  74+ 94D7
  75+ 94D7 EB               ex de,hl
  76+ 94D8
  77+ 94D8 CD 5C 99         call NextScan
  78+ 94DB EB               ex de,hl
  79+ 94DC
  80+ 94DC 73               ld (hl),e
  81+ 94DD 23               inc hl
  82+ 94DE 72               ld (hl),d
  83+ 94DF 23               inc hl
  84+ 94E0
  85+ 94E0 EB               ex de,hl
  86+ 94E1
  87+ 94E1 CD 5C 99         call NextScan
  88+ 94E4 EB               ex de,hl
  89+ 94E5
  90+ 94E5 73               ld (hl),e
  91+ 94E6 23               inc hl
  92+ 94E7 72               ld (hl),d
  93+ 94E8 23               inc hl
  94+ 94E9
  95+ 94E9 EB               ex de,hl
  96+ 94EA
  97+ 94EA CD 5C 99         call NextScan
  98+ 94ED EB               ex de,hl
  99+ 94EE
 100+ 94EE 73               ld (hl),e
 101+ 94EF 23               inc hl
 102+ 94F0 72               ld (hl),d
 103+ 94F1 23               inc hl
 104+ 94F2
 105+ 94F2 EB               ex de,hl
 106+ 94F3
 107+ 94F3 CD 5C 99         call NextScan
 108+ 94F6 EB               ex de,hl
 109+ 94F7
 110+ 94F7 73               ld (hl),e
 111+ 94F8 23               inc hl
 112+ 94F9 72               ld (hl),d
 113+ 94FA 23               inc hl
 114+ 94FB
 115+ 94FB EB               ex de,hl
 116+ 94FC
 117+ 94FC CD 5C 99         call NextScan
 118+ 94FF EB               ex de,hl
 119+ 9500
 120+ 9500 73               ld (hl),e
 121+ 9501 23               inc hl
 122+ 9502 72               ld (hl),d
 123+ 9503 23               inc hl
 124+ 9504
 125+ 9504 EB               ex de,hl
 126+ 9505
 127+ 9505 CD 5C 99         call NextScan
 128+ 9508 EB               ex de,hl
 129+ 9509
 130+ 9509 73               ld (hl),e
 131+ 950A 23               inc hl
 132+ 950B 72               ld (hl),d
 133+ 950C 23               inc hl
 134+ 950D
 135+ 950D EB               ex de,hl
 136+ 950E
 137+ 950E CD 5C 99         call NextScan
 138+ 9511 EB               ex de,hl
 139+ 9512
 140+ 9512 73               ld (hl),e
 141+ 9513 23               inc hl
 142+ 9514 72               ld (hl),d
 143+ 9515 23               inc hl
 144+ 9516
 145+ 9516 EB               ex de,hl
 146+ 9517
 147+ 9517 CD 5C 99         call NextScan
 148+ 951A EB               ex de,hl
 149+ 951B
 150+ 951B 73               ld (hl),e
 151+ 951C 23               inc hl
 152+ 951D 72               ld (hl),d
 153+ 951E 23               inc hl
 154+ 951F
 155+ 951F EB               ex de,hl
 156+ 9520
 157+ 9520 CD 5C 99         call NextScan
 158+ 9523 EB               ex de,hl
 159+ 9524
 160+ 9524 73               ld (hl),e
 161+ 9525 23               inc hl
 162+ 9526 72               ld (hl),d
 163+ 9527 23               inc hl
 164+ 9528
 165+ 9528 EB               ex de,hl
 166+ 9529
 167+ 9529 CD 5C 99         call NextScan
 168+ 952C EB               ex de,hl
 169+ 952D
 170+ 952D 73               ld (hl),e
 171+ 952E 23               inc hl
 172+ 952F 72               ld (hl),d
 173+ 9530 23               inc hl
 174+ 9531
 175+ 9531 EB               ex de,hl
 176+ 9532
 177+ 9532 CD 5C 99         call NextScan
 178+ 9535 EB               ex de,hl
 179+ 9536
 180+ 9536 73               ld (hl),e
 181+ 9537 23               inc hl
 182+ 9538 72               ld (hl),d
 183+ 9539 23               inc hl
 184+ 953A
 185+ 953A EB               ex de,hl
 186+ 953B
 187+ 953B CD 5C 99         call NextScan
 188+ 953E EB               ex de,hl
 189+ 953F
 190+ 953F 73               ld (hl),e
 191+ 9540 23               inc hl
 192+ 9541 72               ld (hl),d
 193+ 9542 23               inc hl
 194+ 9543
 195+ 9543 EB               ex de,hl
 196+ 9544
 197+ 9544 CD 5C 99         call NextScan
 198+ 9547 EB               ex de,hl
 199+ 9548
 200+ 9548 73               ld (hl),e
 201+ 9549 23               inc hl
 202+ 954A 72               ld (hl),d
 203+ 954B 23               inc hl
 204+ 954C
 205+ 954C EB               ex de,hl
 206+ 954D
 207+ 954D CD 5C 99         call NextScan
 208+ 9550 EB               ex de,hl
 209+ 9551
 210+ 9551 73               ld (hl),e
 211+ 9552 23               inc hl
 212+ 9553 72               ld (hl),d
 213+ 9554 23               inc hl
 214+ 9555
 215+ 9555              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9555
 217+ 9555 22 27 8C         ld (Scanlines_album_SP),hl
 218+ 9558
 219+ 9558              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9558
 221+ 9558 08               ex af,af
 222+ 9559
 223+ 9559 F5               push af
 224+ 955A E1               pop hl
 225+ 955B
 226+ 955B 36 10            ld (hl),16
 227+ 955D
 228+ 955D C9               ret
 229+ 955E
 230+ 955E              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 955E
 232+ 955E              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 955E
 234+ 955E 3E 57            ld a,$57
 235+ 9560 94               sub h
 236+ 9561 47               ld b,a
 237+ 9562
 238+ 9562 3E DF            ld a,$df
 239+ 9564 BD               cp l
 240+ 9565 38 04            jr c,1F
 241+ 9567
 242+ 9567 3E 08            ld a,8
 243+ 9569 80               add b
 244+ 956A 47               ld b,a
 245+ 956B
 246+ 956B              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 956B              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 956B
 249+ 956B 48           1 ld c,b
 250+ 956C 0C               inc c
 251+ 956D
 252+ 956D 04               inc b
 253+ 956E 05               dec b
 254+ 956F 20 02            jr nz,3F
 255+ 9571
 256+ 9571 18 0B            jr 6F
 257+ 9573
 258+ 9573 CD 5C 99     3 call NextScan
 259+ 9576 EB               ex de,hl
 260+ 9577
 261+ 9577 73               ld (hl),e
 262+ 9578 23               inc hl
 263+ 9579 72               ld (hl),d
 264+ 957A 23               inc hl
 265+ 957B
 266+ 957B EB               ex de,hl
 267+ 957C 10 F5            djnz 3B
 268+ 957E
 269+ 957E ED 53 27 8C  6 ld (Scanlines_album_SP),de
 270+ 9582
 271+ 9582 08           5 ex af,af
 272+ 9583 F5               push af
 273+ 9584 E1               pop hl
 274+ 9585
 275+ 9585 71               ld (hl),c
 276+ 9586
 277+ 9586 C9               ret
 278+ 9587
# file closed: Genera_datos_de_impresion.asm
2251  9587              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9587              ; -----------------------------------------------------------------------------
   2+ 9587              ;
   3+ 9587              ;   11/03/24
   4+ 9587              ;
   5+ 9587
   6+ 9587              Pinta_Sprites
   7+ 9587
   8+ 9587              ;    ld hl,(Scanlines_album_SP)
   9+ 9587              ;    call Extrae_address
  10+ 9587
  11+ 9587              ;    inc h
  12+ 9587              ;    dec h
  13+ 9587              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9587
  15+ 9587 ED 73 08 8C      ld (Stack),sp
  16+ 958B
  17+ 958B EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 958C              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 958C 2C               inc l
  20+ 958D 2C               inc l
  21+ 958E
  22+ 958E 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 958F
  24+ 958F 2C               inc l
  25+ 9590 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9591
  27+ 9591              ;   Seleccionamos rutina de impresión:
  28+ 9591
  29+ 9591 3E 10            ld a,16
  30+ 9593 B8               cp b
  31+ 9594 C2 90 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9597
  33+ 9597              ;   Rutinas:
  34+ 9597
  35+ 9597              Pinta_rapido    ;   1520 t/states.
  36+ 9597
  37+ 9597 E1               pop hl
  38+ 9598
  39+ 9598 1A               ld a,(de)
  40+ 9599 AE               xor (hl)
  41+ 959A 77               ld (hl),a
  42+ 959B 2C               inc l
  43+ 959C 1C               inc e
  44+ 959D 1A               ld a,(de)
  45+ 959E AE               xor (hl)
  46+ 959F 77               ld (hl),a
  47+ 95A0 2C               inc l
  48+ 95A1 1C               inc e
  49+ 95A2 1A               ld a,(de)
  50+ 95A3 AE               xor (hl)
  51+ 95A4 77               ld (hl),a
  52+ 95A5 13               inc de
  53+ 95A6
  54+ 95A6 E1               pop hl
  55+ 95A7
  56+ 95A7 1A               ld a,(de)
  57+ 95A8 AE               xor (hl)
  58+ 95A9 77               ld (hl),a
  59+ 95AA 2C               inc l
  60+ 95AB 1C               inc e
  61+ 95AC 1A               ld a,(de)
  62+ 95AD AE               xor (hl)
  63+ 95AE 77               ld (hl),a
  64+ 95AF 2C               inc l
  65+ 95B0 1C               inc e
  66+ 95B1 1A               ld a,(de)
  67+ 95B2 AE               xor (hl)
  68+ 95B3 77               ld (hl),a
  69+ 95B4 13               inc de
  70+ 95B5
  71+ 95B5 E1               pop hl
  72+ 95B6
  73+ 95B6 1A               ld a,(de)
  74+ 95B7 AE               xor (hl)
  75+ 95B8 77               ld (hl),a
  76+ 95B9 2C               inc l
  77+ 95BA 1C               inc e
  78+ 95BB 1A               ld a,(de)
  79+ 95BC AE               xor (hl)
  80+ 95BD 77               ld (hl),a
  81+ 95BE 2C               inc l
  82+ 95BF 1C               inc e
  83+ 95C0 1A               ld a,(de)
  84+ 95C1 AE               xor (hl)
  85+ 95C2 77               ld (hl),a
  86+ 95C3 13               inc de
  87+ 95C4
  88+ 95C4 E1               pop hl
  89+ 95C5
  90+ 95C5 1A               ld a,(de)
  91+ 95C6 AE               xor (hl)
  92+ 95C7 77               ld (hl),a
  93+ 95C8 2C               inc l
  94+ 95C9 1C               inc e
  95+ 95CA 1A               ld a,(de)
  96+ 95CB AE               xor (hl)
  97+ 95CC 77               ld (hl),a
  98+ 95CD 2C               inc l
  99+ 95CE 1C               inc e
 100+ 95CF 1A               ld a,(de)
 101+ 95D0 AE               xor (hl)
 102+ 95D1 77               ld (hl),a
 103+ 95D2 13               inc de
 104+ 95D3
 105+ 95D3 E1               pop hl
 106+ 95D4
 107+ 95D4 1A               ld a,(de)
 108+ 95D5 AE               xor (hl)
 109+ 95D6 77               ld (hl),a
 110+ 95D7 2C               inc l
 111+ 95D8 1C               inc e
 112+ 95D9 1A               ld a,(de)
 113+ 95DA AE               xor (hl)
 114+ 95DB 77               ld (hl),a
 115+ 95DC 2C               inc l
 116+ 95DD 1C               inc e
 117+ 95DE 1A               ld a,(de)
 118+ 95DF AE               xor (hl)
 119+ 95E0 77               ld (hl),a
 120+ 95E1 13               inc de
 121+ 95E2
 122+ 95E2 E1               pop hl
 123+ 95E3
 124+ 95E3 1A               ld a,(de)
 125+ 95E4 AE               xor (hl)
 126+ 95E5 77               ld (hl),a
 127+ 95E6 2C               inc l
 128+ 95E7 1C               inc e
 129+ 95E8 1A               ld a,(de)
 130+ 95E9 AE               xor (hl)
 131+ 95EA 77               ld (hl),a
 132+ 95EB 2C               inc l
 133+ 95EC 1C               inc e
 134+ 95ED 1A               ld a,(de)
 135+ 95EE AE               xor (hl)
 136+ 95EF 77               ld (hl),a
 137+ 95F0 13               inc de
 138+ 95F1
 139+ 95F1 E1               pop hl
 140+ 95F2
 141+ 95F2 1A               ld a,(de)
 142+ 95F3 AE               xor (hl)
 143+ 95F4 77               ld (hl),a
 144+ 95F5 2C               inc l
 145+ 95F6 1C               inc e
 146+ 95F7 1A               ld a,(de)
 147+ 95F8 AE               xor (hl)
 148+ 95F9 77               ld (hl),a
 149+ 95FA 2C               inc l
 150+ 95FB 1C               inc e
 151+ 95FC 1A               ld a,(de)
 152+ 95FD AE               xor (hl)
 153+ 95FE 77               ld (hl),a
 154+ 95FF 13               inc de
 155+ 9600
 156+ 9600 E1               pop hl
 157+ 9601
 158+ 9601 1A               ld a,(de)
 159+ 9602 AE               xor (hl)
 160+ 9603 77               ld (hl),a
 161+ 9604 2C               inc l
 162+ 9605 1C               inc e
 163+ 9606 1A               ld a,(de)
 164+ 9607 AE               xor (hl)
 165+ 9608 77               ld (hl),a
 166+ 9609 2C               inc l
 167+ 960A 1C               inc e
 168+ 960B 1A               ld a,(de)
 169+ 960C AE               xor (hl)
 170+ 960D 77               ld (hl),a
 171+ 960E 13               inc de
 172+ 960F
 173+ 960F E1               pop hl
 174+ 9610
 175+ 9610 1A               ld a,(de)
 176+ 9611 AE               xor (hl)
 177+ 9612 77               ld (hl),a
 178+ 9613 2C               inc l
 179+ 9614 1C               inc e
 180+ 9615 1A               ld a,(de)
 181+ 9616 AE               xor (hl)
 182+ 9617 77               ld (hl),a
 183+ 9618 2C               inc l
 184+ 9619 1C               inc e
 185+ 961A 1A               ld a,(de)
 186+ 961B AE               xor (hl)
 187+ 961C 77               ld (hl),a
 188+ 961D 13               inc de
 189+ 961E
 190+ 961E E1               pop hl
 191+ 961F
 192+ 961F 1A               ld a,(de)
 193+ 9620 AE               xor (hl)
 194+ 9621 77               ld (hl),a
 195+ 9622 2C               inc l
 196+ 9623 1C               inc e
 197+ 9624 1A               ld a,(de)
 198+ 9625 AE               xor (hl)
 199+ 9626 77               ld (hl),a
 200+ 9627 2C               inc l
 201+ 9628 1C               inc e
 202+ 9629 1A               ld a,(de)
 203+ 962A AE               xor (hl)
 204+ 962B 77               ld (hl),a
 205+ 962C 13               inc de
 206+ 962D
 207+ 962D E1               pop hl
 208+ 962E
 209+ 962E 1A               ld a,(de)
 210+ 962F AE               xor (hl)
 211+ 9630 77               ld (hl),a
 212+ 9631 2C               inc l
 213+ 9632 1C               inc e
 214+ 9633 1A               ld a,(de)
 215+ 9634 AE               xor (hl)
 216+ 9635 77               ld (hl),a
 217+ 9636 2C               inc l
 218+ 9637 1C               inc e
 219+ 9638 1A               ld a,(de)
 220+ 9639 AE               xor (hl)
 221+ 963A 77               ld (hl),a
 222+ 963B 13               inc de
 223+ 963C
 224+ 963C E1               pop hl
 225+ 963D
 226+ 963D 1A               ld a,(de)
 227+ 963E AE               xor (hl)
 228+ 963F 77               ld (hl),a
 229+ 9640 2C               inc l
 230+ 9641 1C               inc e
 231+ 9642 1A               ld a,(de)
 232+ 9643 AE               xor (hl)
 233+ 9644 77               ld (hl),a
 234+ 9645 2C               inc l
 235+ 9646 1C               inc e
 236+ 9647 1A               ld a,(de)
 237+ 9648 AE               xor (hl)
 238+ 9649 77               ld (hl),a
 239+ 964A 13               inc de
 240+ 964B
 241+ 964B E1               pop hl
 242+ 964C
 243+ 964C 1A               ld a,(de)
 244+ 964D AE               xor (hl)
 245+ 964E 77               ld (hl),a
 246+ 964F 2C               inc l
 247+ 9650 1C               inc e
 248+ 9651 1A               ld a,(de)
 249+ 9652 AE               xor (hl)
 250+ 9653 77               ld (hl),a
 251+ 9654 2C               inc l
 252+ 9655 1C               inc e
 253+ 9656 1A               ld a,(de)
 254+ 9657 AE               xor (hl)
 255+ 9658 77               ld (hl),a
 256+ 9659 13               inc de
 257+ 965A
 258+ 965A E1               pop hl
 259+ 965B
 260+ 965B 1A               ld a,(de)
 261+ 965C AE               xor (hl)
 262+ 965D 77               ld (hl),a
 263+ 965E 2C               inc l
 264+ 965F 1C               inc e
 265+ 9660 1A               ld a,(de)
 266+ 9661 AE               xor (hl)
 267+ 9662 77               ld (hl),a
 268+ 9663 2C               inc l
 269+ 9664 1C               inc e
 270+ 9665 1A               ld a,(de)
 271+ 9666 AE               xor (hl)
 272+ 9667 77               ld (hl),a
 273+ 9668 13               inc de
 274+ 9669
 275+ 9669 E1               pop hl
 276+ 966A
 277+ 966A 1A               ld a,(de)
 278+ 966B AE               xor (hl)
 279+ 966C 77               ld (hl),a
 280+ 966D 2C               inc l
 281+ 966E 1C               inc e
 282+ 966F 1A               ld a,(de)
 283+ 9670 AE               xor (hl)
 284+ 9671 77               ld (hl),a
 285+ 9672 2C               inc l
 286+ 9673 1C               inc e
 287+ 9674 1A               ld a,(de)
 288+ 9675 AE               xor (hl)
 289+ 9676 77               ld (hl),a
 290+ 9677 13               inc de
 291+ 9678
 292+ 9678 E1               pop hl
 293+ 9679
 294+ 9679 1A               ld a,(de)
 295+ 967A AE               xor (hl)
 296+ 967B 77               ld (hl),a
 297+ 967C 2C               inc l
 298+ 967D 1C               inc e
 299+ 967E 1A               ld a,(de)
 300+ 967F AE               xor (hl)
 301+ 9680 77               ld (hl),a
 302+ 9681 2C               inc l
 303+ 9682 1C               inc e
 304+ 9683 1A               ld a,(de)
 305+ 9684 AE               xor (hl)
 306+ 9685 77               ld (hl),a
 307+ 9686 13               inc de
 308+ 9687
 309+ 9687 ED 73 27 8C      ld (Scanlines_album_SP),sp
 310+ 968B ED 7B 08 8C      ld sp,(Stack)
 311+ 968F C9               ret
 312+ 9690
 313+ 9690              Pinta_lento
 314+ 9690
 315+ 9690 E1           1 pop hl
 316+ 9691
 317+ 9691 1A               ld a,(de)
 318+ 9692 AE               xor (hl)
 319+ 9693 77               ld (hl),a
 320+ 9694 2C               inc l
 321+ 9695 1C               inc e
 322+ 9696 1A               ld a,(de)
 323+ 9697 AE               xor (hl)
 324+ 9698 77               ld (hl),a
 325+ 9699 2C               inc l
 326+ 969A 1C               inc e
 327+ 969B 1A               ld a,(de)
 328+ 969C AE               xor (hl)
 329+ 969D 77               ld (hl),a
 330+ 969E 13               inc de
 331+ 969F
 332+ 969F 10 EF            djnz 1B
 333+ 96A1
 334+ 96A1 ED 73 27 8C      ld (Scanlines_album_SP),sp
 335+ 96A5 ED 7B 08 8C      ld sp,(Stack)
 336+ 96A9 C9               ret
# file closed: Pinta_Sprites.asm
2252  96AA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96AA              ; ******************************************************************************************************************************************************************************************
   2+ 96AA              ;
   3+ 96AA              ; 26/06/23
   4+ 96AA              ;
   5+ 96AA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96AA
   7+ 96AA              Draw
   8+ 96AA
   9+ 96AA CD 50 99     	call Prepara_draw
  10+ 96AD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96AE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96AF 28 05        	jr z,2F
  13+ 96B1
  14+ 96B1 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96B4 18 0C        	jr 1F
  16+ 96B6
  17+ 96B6 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96B9 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96BC CD 48 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96BF              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96BF
  22+ 96BF CD EF 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96C2
  24+ 96C2 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96C5 CB 6F        	bit 5,a
  26+ 96C7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96C9
  28+ 96C9 CD DE 96     	call Comprueba_limite_horizontal
  29+ 96CC CD 6E 97     	call Comprueba_limite_vertical
  30+ 96CF
  31+ 96CF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96CF              ; -----------------------
  33+ 96CF              ; -----------------------
  34+ 96CF              ; -----------------------
  35+ 96CF
  36+ 96CF CD C4 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96D2 CD FB 98     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96D5
  39+ 96D5 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96D8 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96DA 32 C8 8B     	ld (Ctrl_0),a
  42+ 96DD
  43+ 96DD C9           	ret
  44+ 96DE
  45+ 96DE              ; *******************************************************************************************************************************************************************************************
  46+ 96DE              ;	21/01/23
  47+ 96DE              ;
  48+ 96DE              ; 	Comprueba_limite_horizontal.
  49+ 96DE              ;
  50+ 96DE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96DE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96DE              ;
  53+ 96DE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96DE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96DE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96DE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96DE
  58+ 96DE
  59+ 96DE
  60+ 96DE 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96E1 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96E3 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96E5 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96E7 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96EA 18 09            jr 6F
  66+ 96EC CB 5F        1 bit 3,a
  67+ 96EE 28 0A            jr z,2F
  68+ 96F0 E6 F7            and $f7
  69+ 96F2 32 C8 8B         ld (Ctrl_0),a
  70+ 96F5 CD 48 98     6 call Inicializacion
  71+ 96F8 18 5B            jr 5F
  72+ 96FA E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 96FB
  74+ 96FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 96FB              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 96FB
  77+ 96FB EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 96FC 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 96FF CD 48 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9702 67           	ld h,a
  81+ 9703 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9704 CD 48 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9707 67           	ld h,a
  84+ 9708 A7           	and a
  85+ 9709 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 970B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 970C 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 970F FE 02        	cp 2
  89+ 9711 38 1E        	jr c,3F
  90+ 9713 28 1C        	jr z,3F
  91+ 9715 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9716 28 23            jr z,7F
  93+ 9718 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 971A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 971C E1           	pop hl
  96+ 971D
  97+ 971D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 971D              ; _para indicar con E="2" en caso necesario.
  99+ 971D
 100+ 971D E5               push hl
 101+ 971E C5               push bc
 102+ 971F CD 48 94     	call calcula_tercio
 103+ 9722 FE 01        	cp 1
 104+ 9724 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9726 CD 56 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9729 28 26            jr z,9F
 107+ 972B 38 24            jr c,9F
 108+ 972D 1E 00        11 ld e,0
 109+ 972F 18 22            jr 8F
 110+ 9731 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9732 28 07        	jr z, 7F
 112+ 9734 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9736 1E 00         	ld e,0
 114+ 9738 E1           	pop hl
 115+ 9739 18 04        	jr 4F
 116+ 973B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 973D 18 15            jr 10F
 118+ 973F
 119+ 973F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 973F              ; _para indicar con E="2" en caso necesario.
 121+ 973F
 122+ 973F E5           4 push hl
 123+ 9740 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9741 CD 48 94     	call calcula_tercio
 125+ 9744 FE 01        	cp 1
 126+ 9746 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9748 CD 56 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 974B 28 04            jr z,9F
 129+ 974D 30 02            jr nc,9F
 130+ 974F 18 02        	jr 8F
 131+ 9751 1E 02        9 ld e,2
 132+ 9753 C1           8 pop bc
 133+ 9754 E1           10 pop hl
 134+ 9755 C9           5 ret
 135+ 9756
 136+ 9756              ; --------------------
 137+ 9756              ;
 138+ 9756              ; 25/08/22
 139+ 9756
 140+ 9756 CD 48 94     Comprueba_centro call calcula_tercio
 141+ 9759 67               ld h,a
 142+ 975A 08           	ex af,af
 143+ 975B FE 02        	cp 2
 144+ 975D 38 07        	jr c,1F
 145+ 975F 28 05        	jr z,1F
 146+ 9761 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9764 18 03        	jr 2F
 148+ 9766 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9769 08           2 ex af,af
 150+ 976A A7               and a
 151+ 976B ED 42            sbc hl,bc
 152+ 976D C9               ret
 153+ 976E
 154+ 976E              ; *********************************************************************************************************************************************************************************************
 155+ 976E              ;
 156+ 976E              ;   16/8/22
 157+ 976E              ;
 158+ 976E              ;	Comprueba_limite_vertical
 159+ 976E              ;
 160+ 976E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 976E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 976E              ;
 163+ 976E
 164+ 976E 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9771 7D           	ld a,l
 166+ 9772 E6 1F        	and $1F
 167+ 9774 57           	ld d,a
 168+ 9775 3A DE 8B     	ld a,(Limite_vertical)
 169+ 9778 BA           	cp d 											; Límite - Posición.
 170+ 9779 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 977A 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 977D CB 47        	bit 0,a
 173+ 977F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9781
 175+ 9781              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9781
 177+ 9781 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9782 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9784
 180+ 9784              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9784              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9784
 183+ 9784 3A BC 8B         ld a,(Coordenada_X)
 184+ 9787 16 0F            ld d,Centro_izquierda
 185+ 9789 A7               and a
 186+ 978A 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 978B 28 1E            jr z,3F
 188+ 978D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 978F              ;                                                    ; _salimos sin modificar nada.
 190+ 978F 18 0E            jr 2F
 191+ 9791 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9792 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9794
 194+ 9794              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9794              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9794
 197+ 9794 3A BC 8B         ld a,(Coordenada_X)
 198+ 9797 16 10            ld d,Centro_derecha
 199+ 9799 A7               and a
 200+ 979A 92               sub d
 201+ 979B 28 0E            jr z,3F
 202+ 979D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 979F              ;                                                    ; _salimos sin modificar nada.
 204+ 979F CB 43        2 bit 0,e
 205+ 97A1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97A3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97A4 CD 38 98         call Modificaccionne
 208+ 97A7 C1           	pop bc
 209+ 97A8 CD 48 98         call Inicializacion
 210+ 97AB C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97AC
 212+ 97AC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97AC
 214+ 97AC C5           4 push bc
 215+ 97AD 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97B0 0A           	ld a,(bc)
 217+ 97B1 3D           	dec a
 218+ 97B2 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97B3 7D           	ld a,l
 220+ 97B4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97B5 CB 47        	bit 0,a
 222+ 97B7 28 03        	jr z,5F
 223+ 97B9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97BA 18 2E        	jr 7F
 225+ 97BC
 226+ 97BC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97BC
 228+ 97BC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97BD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97BE 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97C1 CB 4F        	bit 1,a
 232+ 97C3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97C5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97C6
 235+ 97C6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97C6
 237+ 97C6 1C               inc e
 238+ 97C7 1D               dec e
 239+ 97C8 20 07            jr nz,12F
 240+ 97CA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97CB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97CC 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97CF 18 44        13 jr 9F
 244+ 97D1 CB 43        12 bit 0,e
 245+ 97D3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97D5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97D5 C1           	pop bc
 248+ 97D6 18 D3        	jr 3B
 249+ 97D8 80           14 add b
 250+ 97D9 6F               ld l,a
 251+ 97DA 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97DD CD 38 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97E0 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97E2 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97E4 32 C8 8B         ld (Ctrl_0),a
 256+ 97E7 F1           	pop af
 257+ 97E8 18 2B        	jr 9F
 258+ 97EA
 259+ 97EA              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97EA
 261+ 97EA F5           7 push af
 262+ 97EB 3A C8 8B     	ld a,(Ctrl_0)
 263+ 97EE CB 47        	bit 0,a
 264+ 97F0 20 1D        	jr nz,8F
 265+ 97F2 F1           	pop af
 266+ 97F3
 267+ 97F3              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 97F3
 269+ 97F3 1C           	inc e
 270+ 97F4 1D               dec e
 271+ 97F5 20 07            jr nz,10F
 272+ 97F7 90           	sub b
 273+ 97F8 6F               ld l,a
 274+ 97F9 22 CB 8B     	ld (Posicion_actual),hl
 275+ 97FC 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 97FE              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 97FE CB 43        10 bit 0,e
 278+ 9800 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9802              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9802 C1           	pop bc
 281+ 9803 18 A6        	jr 3B
 282+ 9805 90           16 sub b
 283+ 9806 6F               ld l,a
 284+ 9807 22 CB 8B     	ld (Posicion_actual),hl
 285+ 980A CD 38 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 980D 18 06            jr 9F
 287+ 980F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9811 32 C8 8B         ld (Ctrl_0),a
 289+ 9814 F1           	pop af
 290+ 9815 C1           9 pop bc
 291+ 9816 1E 00        	ld e,0
 292+ 9818 CD 48 98         call Inicializacion
 293+ 981B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 981C 08           	ex af,af
 295+ 981D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 981E 18 8B            jr 3B
 297+ 9820
 298+ 9820              ; --------------------
 299+ 9820
 300+ 9820 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9822 CD 6B 99     1 call PreviousScan
 302+ 9825 10 FB            djnz 1B
 303+ 9827 22 CB 8B     	ld (Posicion_actual),hl
 304+ 982A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 982B C9           	ret
 306+ 982C
 307+ 982C              ; --------------------
 308+ 982C
 309+ 982C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 982E CD 5C 99     1 call NextScan
 311+ 9831 10 FB            djnz 1B
 312+ 9833 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9836 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9837 C9           	ret
 315+ 9838
 316+ 9838              ; --------------------
 317+ 9838              ;
 318+ 9838              ;	22/01/23
 319+ 9838              ;
 320+ 9838              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9838              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9838              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9838
 324+ 9838
 325+ 9838              Modificaccionne
 326+ 9838
 327+ 9838 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 983B FE 02        	cp 2
 329+ 983D CC 20 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9840 DC 20 98         call c,Modifica_Pos_actual
 331+ 9843 C8           	ret z
 332+ 9844 CD 2C 98         call Modifica_Pos_actual2
 333+ 9847 C9               ret
 334+ 9848
 335+ 9848              ; *************************************************************************************************************************************************************************************************
 336+ 9848              ;
 337+ 9848              ;	13/8/22
 338+ 9848              ;
 339+ 9848              ;	Inicializacion
 340+ 9848              ;
 341+ 9848              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9848              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9848              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9848              ;
 345+ 9848              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9848              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9848              ;	_ desaparece/aparece.
 348+ 9848
 349+ 9848              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9848              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9848              ;
 352+ 9848              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9848              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9848              ; 		   [E] ="0"
 355+ 9848
 356+ 9848              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9848
 358+ 9848 CD 48 94     Inicializacion call calcula_tercio
 359+ 984B 28 36        	jr z,primit
 360+ 984D E6 02        	and 2
 361+ 984F 20 07        	jr nz,segmit
 362+ 9851 7D           	ld a,l
 363+ 9852 FE 7F        	cp $7f
 364+ 9854 38 2D        	jr c,primit
 365+ 9856 28 2B        	jr z,primit
 366+ 9858 CD BE 98     segmit call column
 367+ 985B 38 13        	jr c,tercuad
 368+ 985D 3E 04        cuarcuad ld a,4
 369+ 985F 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9862 21 20 48     	ld hl,$4820
 371+ 9865 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9868 21 DE 8B     	ld hl,Limite_vertical
 373+ 986B 36 0D        	ld (hl),$0d
 374+ 986D 08           	ex af,af
 375+ 986E 18 3C        	jr 1F
 376+ 9870              tercuad
 377+ 9870 3E 03        	ld a,3
 378+ 9872 32 DA 8B     	ld (Cuad_objeto),a
 379+ 9875 21 20 48     	ld hl,$4820
 380+ 9878 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 987B 21 DE 8B     	ld hl,Limite_vertical
 382+ 987E 36 12        	ld (hl),$12
 383+ 9880 08           	ex af,af
 384+ 9881 18 29        	jr 1F
 385+ 9883 CD BE 98     primit call column
 386+ 9886 38 13        	jr c, primcuad
 387+ 9888              segcuad
 388+ 9888 3E 02        	ld a,2
 389+ 988A 32 DA 8B     	ld (Cuad_objeto),a
 390+ 988D 21 C0 4F     	ld hl,$4fc0
 391+ 9890 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 9893 21 DE 8B     	ld hl,Limite_vertical
 393+ 9896 36 0D        	ld (hl),$0d
 394+ 9898 08           	ex af,af
 395+ 9899 18 11        	jr 1F
 396+ 989B              primcuad
 397+ 989B 3E 01        	ld a,1
 398+ 989D 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98A0 21 C0 4F     	ld hl,$4fc0
 400+ 98A3 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98A6 21 DE 8B     	ld hl,Limite_vertical
 402+ 98A9 36 12        	ld (hl),$12
 403+ 98AB 08           	ex af,af
 404+ 98AC
 405+ 98AC C5           1 push bc
 406+ 98AD E5           	push hl
 407+ 98AE D5           	push de
 408+ 98AF
 409+ 98AF 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98B2 CD 66 94     	call Genera_coordenadas
 411+ 98B5
 412+ 98B5 D1           	pop de
 413+ 98B6 E1           	pop hl
 414+ 98B7 C1           	pop bc
 415+ 98B8
 416+ 98B8 21 C8 8B     	ld hl,Ctrl_0
 417+ 98BB CB EE        	set 5,(hl)
 418+ 98BD C9           	ret
 419+ 98BE
 420+ 98BE              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98BE
 422+ 98BE              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98BE              ;
 424+ 98BE              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98BE
 426+ 98BE 7D           column ld a,l
 427+ 98BF E6 1F        	and $1f
 428+ 98C1 FE 10         	cp $10
 429+ 98C3 C9            	ret
 430+ 98C4
 431+ 98C4              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98C4              ;
 433+ 98C4              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98C4              ;
 435+ 98C4              ; 14/12/22
 436+ 98C4              ;
 437+ 98C4              ;	Modifica: A y BC.
 438+ 98C4
 439+ 98C4 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98C7 E6 01        	and 1
 441+ 98C9 28 17        	jr z,1F
 442+ 98CB
 443+ 98CB              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98CB
 445+ 98CB 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98CE 47           	ld b,a
 447+ 98CF 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98D0 79           	ld a,c
 449+ 98D1 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98D2 38 08        	jr c,2F
 451+ 98D4 47           	ld b,a
 452+ 98D5 79           	ld a,c
 453+ 98D6 90           	sub b
 454+ 98D7 32 DB 8B     	ld (Columnas),a
 455+ 98DA 18 1B        	jr 4F
 456+ 98DC 79           2 ld a,c
 457+ 98DD 32 DB 8B     	ld (Columnas),a
 458+ 98E0 18 15        	jr 4F
 459+ 98E2
 460+ 98E2              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98E2
 462+ 98E2 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98E5 81           	add c
 464+ 98E6 3D           	dec a
 465+ 98E7 D6 1F        	sub $1f
 466+ 98E9 38 08        	jr c,3F
 467+ 98EB 47           	ld b,a
 468+ 98EC 79           	ld a,c
 469+ 98ED 90           	sub b
 470+ 98EE 32 DB 8B     	ld (Columnas),a
 471+ 98F1 18 04        	jr 4F
 472+ 98F3 79           3 ld a,c
 473+ 98F4 32 DB 8B     	ld (Columnas),a
 474+ 98F7 D9           4 exx
 475+ 98F8 4F           	ld c,a
 476+ 98F9 D9           	exx
 477+ 98FA C9            ret
 478+ 98FB
 479+ 98FB              ; --------------------------------------------------------------------------------------------------------------------
 480+ 98FB              ;
 481+ 98FB              ;   19/7/23
 482+ 98FB              ;
 483+ 98FB              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 98FB              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 98FB              ;
 486+ 98FB              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 98FB              ;			HL e IY Contienen (Puntero_objeto).
 488+ 98FB              ;
 489+ 98FB              ;	DESTRUYE: HL,B Y A.
 490+ 98FB
 491+ 98FB 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 98FE FE 02        	cp 2
 493+ 9900 38 18        	jr c,1F
 494+ 9902 28 16        	jr z,1F
 495+ 9904 E6 01        	and 1
 496+ 9906 28 0D        	jr z,3F
 497+ 9908
 498+ 9908              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9908
 500+ 9908 CD 44 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 990B
 502+ 990B 7D           9 ld a,l
 503+ 990C E6 1F        	and $1f
 504+ 990E 28 2A        	jr z,7F
 505+ 9910 2B           	dec hl
 506+ 9911 10 F8        	djnz 9B
 507+ 9913 18 25        	jr 7F
 508+ 9915
 509+ 9915              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9915
 511+ 9915 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9918 18 20        	jr 7F
 513+ 991A
 514+ 991A 28 14        1 jr z,2F
 515+ 991C
 516+ 991C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 991C
 518+ 991C CD 44 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 991F
 520+ 991F 7D           4 ld a,l
 521+ 9920 E6 1F        	and $1f
 522+ 9922 28 03        	jr z,6F
 523+ 9924 2B           	dec hl
 524+ 9925 10 F8        	djnz 4B
 525+ 9927 06 0F        6 ld b,15
 526+ 9929 CD 6B 99     5 call PreviousScan
 527+ 992C 10 FB        	djnz 5B
 528+ 992E 18 0A        	jr 7F
 529+ 9930
 530+ 9930              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9930
 532+ 9930 CD 44 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9933 06 0F        	ld b,15
 534+ 9935 CD 6B 99     8 call PreviousScan
 535+ 9938 10 FB        	djnz 8B
 536+ 993A
 537+ 993A E5           7 push hl
 538+ 993B DD E1        	pop ix
 539+ 993D
 540+ 993D 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9940 E5           	push hl
 542+ 9941 FD E1        	pop iy
 543+ 9943
 544+ 9943 C9           	ret
 545+ 9944
 546+ 9944              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9944              ;
 548+ 9944              ;	2/1/23
 549+ 9944              ;
 550+ 9944              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9944              ;
 552+ 9944              ;	Tras esta rutina tenemos:
 553+ 9944              ;
 554+ 9944              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9944              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9944              ;
 557+ 9944              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9944
 559+ 9944 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9947 3A DB 8B     	ld a,(Columnas)
 561+ 994A 3D           	dec a
 562+ 994B 20 01        	jr nz,1F
 563+ 994D 3C           	inc a
 564+ 994E 47           1 ld b,a
 565+ 994F C9           	ret
 566+ 9950
 567+ 9950              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9950              ;
 569+ 9950              ;	Prepara_draw
 570+ 9950              ;
 571+ 9950              ;	Es una rutina de carga.
 572+ 9950              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9950              ;
 574+ 9950              ;	FUNCIONAMIENTO:
 575+ 9950              ;
 576+ 9950              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9950              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9950              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9950              ;
 580+ 9950              ;	DESTRUYE:
 581+ 9950              ;
 582+ 9950              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9950
 584+ 9950 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9953 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9954 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9955 4E           	ld c,(hl)
 588+ 9956 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9959 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 995B C9           	ret
 591+ 995C
 592+ 995C              ;----------------------------------------------------------------------------------------------------------------
 593+ 995C              ;
 594+ 995C              ;	5/08/22
 595+ 995C              ;
 596+ 995C              ;   NextScan.
 597+ 995C              ;
 598+ 995C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 995C              ;
 600+ 995C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 995C              ;
 602+ 995C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 995C              ;
 604+ 995C              ;       DESTRUIDOS: AF y HL !!!
 605+ 995C              ;
 606+ 995C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 995C              ;
 608+ 995C
 609+ 995C 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 995D 7C               ld a,h
 611+ 995E E6 07            and 7
 612+ 9960 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9961
 614+ 9961 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9962 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9964 6F               ld l,a
 617+ 9965 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9966
 619+ 9966 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9967 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9969 67               ld h,a
 622+ 996A C9               ret
 623+ 996B
 624+ 996B              ;----------------------------------------------------------------------------------------------------------------
 625+ 996B              ;
 626+ 996B              ;	5/08/22
 627+ 996B              ;
 628+ 996B              ;   PreviousScan.
 629+ 996B              ;
 630+ 996B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 996B              ;
 632+ 996B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 996B              ;
 634+ 996B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 996B              ;
 636+ 996B              ;       DESTRUIDOS: AF y HL !!!
 637+ 996B              ;
 638+ 996B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 996B              ;
 640+ 996B
 641+ 996B 7C           PreviousScan ld a,h
 642+ 996C 25               dec h               ; Dec H.
 643+ 996D E6 07            and 7
 644+ 996F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9970
 646+ 9970 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9971 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9973 6F               ld l,a
 649+ 9974 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9975
 651+ 9975 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9976 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9978 67               ld h,a
 654+ 9979 C9               ret
 655+ 997A
 656+ 997A
 657+ 997A
 658+ 997A
 659+ 997A
 660+ 997A
 661+ 997A
 662+ 997A
 663+ 997A
 664+ 997A
 665+ 997A
 666+ 997A
# file closed: Draw_XOR.asm
2253  997A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 997A
   2+ 997A              ; ******************************************************************************************************************************************************************************************
   3+ 997A              ;
   4+ 997A              ;   20/05/23
   5+ 997A              ;
   6+ 997A              ;	Recompone_posicion_inicio
   7+ 997A              ;
   8+ 997A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 997A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 997A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 997A              ;	_ a una u otra rutina.
  12+ 997A
  13+ 997A              Recompone_posicion_inicio
  14+ 997A
  15+ 997A 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 997D 7D           	ld a,l
  17+ 997E E6 1F        	and $1f
  18+ 9980 28 16        	jr z,1F
  19+ 9982
  20+ 9982 FE 1F        	cp $1f
  21+ 9984 28 0D        	jr z,3F
  22+ 9986
  23+ 9986 21 C7 8B     	ld hl,Ctrl_2
  24+ 9989 CB C6        	set 0,(hl)
  25+ 998B 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 998E 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 9991 18 08        	jr 2F
  28+ 9993
  29+ 9993 CD 41 9B     3 call Mov_left
  30+ 9996 18 03        	jr 2F
  31+ 9998
  32+ 9998 CD 1E 9A     1 call Mov_right
  33+ 999B 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 999E 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99A1 C9           	ret
  36+ 99A2
  37+ 99A2              ; ******************************************************************************************************************************************************************************************
  38+ 99A2              ;
  39+ 99A2              ;   27/05/23
  40+ 99A2              ;
  41+ 99A2              ;	Mov_down
  42+ 99A2              ;
  43+ 99A2              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99A2              ;
  45+ 99A2              ;
  46+ 99A2              Mov_down
  47+ 99A2
  48+ 99A2 CD 0C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99A5              ;																	; _ repone (Puntero_objeto).
  50+ 99A5 21 C8 8B     	ld hl,Ctrl_0
  51+ 99A8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99AA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99AA              ; 																	; _ en el caso de que no lo haya.
  54+ 99AA 3A E3 8B     	ld a,(Vel_down)
  55+ 99AD 47           	ld b,a
  56+ 99AE 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99B1 CD 48 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99B4 E6 02        	and 2
  59+ 99B6 28 17        	jr z,1F
  60+ 99B8
  61+ 99B8              ; Nos encontramos en el último tercio de pantalla.
  62+ 99B8              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99B8
  64+ 99B8 7C           	ld a,h
  65+ 99B9 FE 57        	cp $57
  66+ 99BB 20 12        	jr nz,1F
  67+ 99BD
  68+ 99BD 7D           	ld a,l
  69+ 99BE C6 20        	add $20
  70+ 99C0 30 0D        	jr nc,1F
  71+ 99C2
  72+ 99C2              ; ------------------------------
  73+ 99C2              ;
  74+ 99C2              ;	12/01/24
  75+ 99C2
  76+ 99C2              ;	call Reaparece_arriba
  77+ 99C2 CD CE 9C     	call Reinicio
  78+ 99C5
  79+ 99C5              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99C5
  81+ 99C5 3A 2D 8C     	ld a,(Ctrl_3)
  82+ 99C8 CB CF        	set 1,a
  83+ 99CA 32 2D 8C     	ld (Ctrl_3),a
  84+ 99CD
  85+ 99CD 18 08        	jr 3F
  86+ 99CF              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99CF              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99CF              ; ------------------------------
  89+ 99CF
  90+ 99CF CD 5C 99     1 call NextScan
  91+ 99D2 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99D5 10 DA            djnz 2B
  93+ 99D7 CD 66 94     3 call Genera_coordenadas
  94+ 99DA C9           	ret
  95+ 99DB
  96+ 99DB              ; ******************************************************************************************************************************************************************************************
  97+ 99DB              ;
  98+ 99DB              ;   27/05/23
  99+ 99DB              ;
 100+ 99DB              ;	Mov_up
 101+ 99DB              ;
 102+ 99DB              ; 	Mueve el Sprite hacia arriba.
 103+ 99DB              ;
 104+ 99DB              ;
 105+ 99DB              Mov_up
 106+ 99DB
 107+ 99DB CD 0C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99DE              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99DE 21 C8 8B     	ld hl,Ctrl_0
 110+ 99E1 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99E3              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99E3              ; 																		; _ en el caso de que no lo haya.
 113+ 99E3 3A E2 8B     	ld a,(Vel_up)
 114+ 99E6 47           	ld b,a
 115+ 99E7 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 99EA CD 48 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 99ED A7           	and a
 118+ 99EE 20 10        	jr nz,1F
 119+ 99F0
 120+ 99F0              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 99F0              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 99F0
 123+ 99F0 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 99F1 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 99F3 20 0B            jr nz,1F
 126+ 99F5 7D               ld a,l
 127+ 99F6 D6 20            sub $20
 128+ 99F8 30 06            jr nc,1F
 129+ 99FA 25               dec h
 130+ 99FB
 131+ 99FB              ; -----------------------------
 132+ 99FB CD AF 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 99FE              ;	call Reinicio
 134+ 99FE              ; -----------------------------
 135+ 99FE
 136+ 99FE 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A00 CD 6B 99     1 call PreviousScan
 138+ 9A03 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A06 10 E2            djnz 3B
 140+ 9A08 CD 66 94     2 call Genera_coordenadas
 141+ 9A0B C9           	ret
 142+ 9A0C
 143+ 9A0C              ; -----------------------------
 144+ 9A0C              ;
 145+ 9A0C              ;	27/5/23
 146+ 9A0C              ;
 147+ 9A0C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A0C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A0C              ;
 150+ 9A0C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A0C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A0C              ;
 153+ 9A0C              ;	Modifica: A y (Puntero_objeto).
 154+ 9A0C
 155+ 9A0C 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A0F CB 47        	bit 0,a
 157+ 9A11 C8           	ret z
 158+ 9A12 CB 87        	res 0,a
 159+ 9A14 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A17 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A1A 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A1D C9           	ret
 163+ 9A1E
 164+ 9A1E              ; ******************************************************************************************************************************************************************************************
 165+ 9A1E              ;
 166+ 9A1E              ;	19/10/22
 167+ 9A1E              ;
 168+ 9A1E              ;	Mov_right.
 169+ 9A1E              ;
 170+ 9A1E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A1E              ;
 172+ 9A1E
 173+ 9A1E 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A21 CB 77        	bit 6,a
 175+ 9A23 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A25
 177+ 9A25 CD 5D 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A28 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A29
 180+ 9A29 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A2C CB E6        	set 4,(hl)
 182+ 9A2E 18 52        	jr 8F
 183+ 9A30
 184+ 9A30 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A33 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A35              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A35              ; 																	; _ en el caso de que no lo haya.
 188+ 9A35 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A38 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A3A 20 46        	jr nz,8F
 191+ 9A3C
 192+ 9A3C 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A3F A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A40 28 40        	jr z,8F
 195+ 9A42
 196+ 9A42              ; ---------- ---------- ----------
 197+ 9A42              ;
 198+ 9A42              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A42
 200+ 9A42 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A45 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A47 28 11        	jr z,1F
 203+ 9A49 38 06        	jr c,6F
 204+ 9A4B FE 04        	cp 4
 205+ 9A4D 28 14        	jr z,7F
 206+ 9A4F 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A51
 208+ 9A51              ; ---------- ---------- ----------
 209+ 9A51              ;
 210+ 9A51              ; Perfiles de velocidad
 211+ 9A51              ;
 212+ 9A51
 213+ 9A51 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A54 FE FE        	cp $fe
 215+ 9A56 20 2A        	jr nz,8F
 216+ 9A58 18 10        	jr 3F
 217+ 9A5A 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A5D FE FD        	cp $fd
 219+ 9A5F 20 21        	jr nz,8F
 220+ 9A61 18 07        	jr 3F
 221+ 9A63 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A66 FE FB        	cp $fb
 223+ 9A68 20 18        	jr nz,8F
 224+ 9A6A
 225+ 9A6A              ; ---------- ---------- ----------
 226+ 9A6A
 227+ 9A6A              3
 228+ 9A6A CD 9D 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A6D              ;	call Reinicio
 230+ 9A6D
 231+ 9A6D              ; ---------- ---------- ----------
 232+ 9A6D              ;
 233+ 9A6D              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A6D
 235+ 9A6D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A6F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A70 CD 89 9A     	call DESPLZ_DER
 238+ 9A73 C1           	pop bc
 239+ 9A74 10 F9        	djnz 5B
 240+ 9A76 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A79 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A7A 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A7D CD 66 94     	call Genera_coordenadas
 244+ 9A80 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A82
 246+ 9A82              ; ---------- ---------- ----------
 247+ 9A82
 248+ 9A82 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A85 CD 89 9A     	call DESPLZ_DER
 250+ 9A88 C9           2 ret
 251+ 9A89
 252+ 9A89              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A89              ;
 254+ 9A89              ;	22/9/22
 255+ 9A89              ;
 256+ 9A89
 257+ 9A89 CD 98 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A8C CD E4 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9A8F CD 0D 9B         call Ciclo_completo
 260+ 9A92 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9A95 CB FE        	set 7,(hl)
 262+ 9A97 C9           	ret
 263+ 9A98
 264+ 9A98              ; ******************************************************************************************************************************************************************************************
 265+ 9A98              ;	15/02/23
 266+ 9A98              ;
 267+ 9A98
 268+ 9A98 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9A9B 47           	ld b,a
 270+ 9A9C 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9A9F 23           1 inc hl
 272+ 9AA0 23           	inc hl
 273+ 9AA1 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AA3 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AA6 CD 47 90     	call Extrae_address
 276+ 9AA9 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AAC
 278+ 9AAC              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AAC
 280+ 9AAC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AAC              ; Cuántos movimientos hemos hecho ??
 282+ 9AAC              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AAC
 284+ 9AAC 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AAF EB           	ex de,hl
 286+ 9AB0 A7           	and a
 287+ 9AB1 ED 52        	sbc hl,de
 288+ 9AB3 CB 3D        	srl l
 289+ 9AB5 3E 08        6 ld a,8
 290+ 9AB7 95           	sub l
 291+ 9AB8 30 1E        	jr nc,3F
 292+ 9ABA
 293+ 9ABA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ABA              ; B="0".
 295+ 9ABA
 296+ 9ABA 04           4 inc b
 297+ 9ABB 3C           	inc a
 298+ 9ABC 20 FC        	jr nz,4B
 299+ 9ABE 78           	ld a,b
 300+ 9ABF 08           	ex af,af
 301+ 9AC0 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AC3 23           5 inc hl
 303+ 9AC4 23           	inc hl
 304+ 9AC5 10 FC        	djnz 5B
 305+ 9AC7 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9ACA CD 47 90     	call Extrae_address
 307+ 9ACD 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AD0
 309+ 9AD0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AD0              ; _(Posicion_actual).
 311+ 9AD0
 312+ 9AD0 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AD3 34           	inc (hl)
 314+ 9AD4 08               ex af,af
 315+ 9AD5 6F           	ld l,a
 316+ 9AD6 18 DD        	jr 6B
 317+ 9AD8
 318+ 9AD8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AD8
 320+ 9AD8 47           3 ld b,a
 321+ 9AD9 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9ADC 23           2 inc hl
 323+ 9ADD 23           	inc hl
 324+ 9ADE 10 FC        	djnz 2B
 325+ 9AE0 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AE3 C9           8 ret
 327+ 9AE4
 328+ 9AE4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AE4              ;
 330+ 9AE4              ;	24/7/22
 331+ 9AE4              ;
 332+ 9AE4              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AE4              ;
 334+ 9AE4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AE4              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AE4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AE4
 338+ 9AE4 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AE7 A7           	and a
 340+ 9AE8 20 1F        	jr nz,1F
 341+ 9AEA D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AEC 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9AEF
 344+ 9AEF 21 CA 8B     	ld hl,Columns
 345+ 9AF2 34           	inc (hl)
 346+ 9AF3 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9AF6 E6 01        	and 1
 348+ 9AF8 28 0F        	jr z,1F
 349+ 9AFA 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9AFD 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9AFE 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B01 CD 66 94     	call Genera_coordenadas
 353+ 9B04 CD 69 9C     	call Inc_CTRL_DESPLZ
 354+ 9B07 18 03        	jr 2F
 355+ 9B09 CD 69 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B0C C9           2 ret
 357+ 9B0D
 358+ 9B0D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B0D              ;
 360+ 9B0D              ;	24/7/22
 361+ 9B0D              ;
 362+ 9B0D              ;	Ciclo_completo.
 363+ 9B0D              ;
 364+ 9B0D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B0D              ;
 366+ 9B0D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B0D              ; 	Decrementamos (Columns).
 368+ 9B0D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B0D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B0D
 371+ 9B0D
 372+ 9B0D 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B10 FE FF        	cp $ff
 374+ 9B12 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B14 E6 F0        	and $f0
 376+ 9B16 20 28        	jr nz,3F
 377+ 9B18
 378+ 9B18              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B18
 380+ 9B18 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B1B 47           	ld b,a
 382+ 9B1C 3E F8        	ld a,$f8
 383+ 9B1E 80           	add b
 384+ 9B1F 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B22 18 1C        	jr 3F
 386+ 9B24 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B27 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B28 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B29 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B2C 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B2F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B31 20 0A        	jr nz,2F
 393+ 9B33 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B36 23           	inc hl
 395+ 9B37 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B3A CD 66 94     	call Genera_coordenadas
 397+ 9B3D
 398+ 9B3D              ; Inicia el puntero de Sprite.
 399+ 9B3D
 400+ 9B3D CD 5C 90     2 call Inicia_puntero_objeto_der
 401+ 9B40 C9           3 ret
 402+ 9B41
 403+ 9B41              ; ******************************************************************************************************************************************************************************************
 404+ 9B41              ;
 405+ 9B41              ;	15/02/23
 406+ 9B41              ;
 407+ 9B41              ;	Mov_left.
 408+ 9B41              ;
 409+ 9B41              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B41              ;
 411+ 9B41              Mov_left
 412+ 9B41
 413+ 9B41 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B44 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B46              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B46              ; 																	; _ en el caso de que no lo haya.
 417+ 9B46 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B49 CB 77        	bit 6,a
 419+ 9B4B 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B4D
 421+ 9B4D CD 63 9C     	call Stop_Amadeus_left
 422+ 9B50 C8           	ret z
 423+ 9B51 20 4A        	jr nz,8F
 424+ 9B53
 425+ 9B53 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B56 A7           	and a
 427+ 9B57 20 44        	jr nz,8F
 428+ 9B59
 429+ 9B59 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B5C A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B5D 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B5F
 433+ 9B5F              ; ---------- ---------- ----------
 434+ 9B5F
 435+ 9B5F 3A E0 8B     	ld a,(Vel_left)
 436+ 9B62 FE 02        	cp 2
 437+ 9B64 28 0F        	jr z,1F
 438+ 9B66 38 04        	jr c,6F
 439+ 9B68 FE 04        	cp 4
 440+ 9B6A 28 12        	jr z,7F
 441+ 9B6C
 442+ 9B6C              ; ---------- ---------- ----------
 443+ 9B6C
 444+ 9B6C 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B6F FE F8        	cp $f8
 446+ 9B71 20 2A        	jr nz,8F
 447+ 9B73 18 10        	jr 4F
 448+ 9B75 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B78 FE F9        	cp $f9
 450+ 9B7A 20 21        	jr nz,8F
 451+ 9B7C 18 07        	jr 4F
 452+ 9B7E 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B81 FE FB        	cp $fb
 454+ 9B83 20 18        	jr nz,8F
 455+ 9B85
 456+ 9B85              ; ---------- ---------- ----------
 457+ 9B85
 458+ 9B85              4
 459+ 9B85 CD 8B 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B88              ;	call Reinicio
 461+ 9B88
 462+ 9B88              ; ---------- ---------- ----------
 463+ 9B88
 464+ 9B88 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B8A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B8B
 467+ 9B8B              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B8B              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B8B
 470+ 9B8B CD A4 9B     	call DESPLZ_IZQ
 471+ 9B8E C1           	pop bc
 472+ 9B8F 10 F9        	djnz 5B
 473+ 9B91 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9B94 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9B95 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9B98 CD 66 94     	call Genera_coordenadas
 477+ 9B9B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9B9D
 479+ 9B9D              ; ---------- ---------- ----------
 480+ 9B9D
 481+ 9B9D              ; Movemos, no hay recolocación.
 482+ 9B9D
 483+ 9B9D 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BA0 CD A4 9B     	call DESPLZ_IZQ
 485+ 9BA3 C9           2 ret
 486+ 9BA4
 487+ 9BA4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BA4              ;
 489+ 9BA4              ;	22/9/22
 490+ 9BA4
 491+ 9BA4              DESPLZ_IZQ
 492+ 9BA4
 493+ 9BA4 CD B3 9B     	call Desplaza_izquierda
 494+ 9BA7 CD FF 9B         call modifica_parametros_1er_DESPLZ
 495+ 9BAA CD 27 9C     	call Ciclo_completo_2
 496+ 9BAD 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BB0 CB BE        	res 7,(hl)
 498+ 9BB2 C9           	ret
 499+ 9BB3
 500+ 9BB3              Desplaza_izquierda
 501+ 9BB3
 502+ 9BB3 3A E0 8B     	ld a,(Vel_left)
 503+ 9BB6 47           	ld b,a
 504+ 9BB7 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BBA 23           1 inc hl
 506+ 9BBB 23           	inc hl
 507+ 9BBC 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BBE 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BC1 CD 47 90     	call Extrae_address
 510+ 9BC4 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BC7
 512+ 9BC7              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BC7
 514+ 9BC7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BC7              ; Cuántos movimientos hemos hecho ??
 516+ 9BC7              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BC7
 518+ 9BC7 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BCA EB           	ex de,hl
 520+ 9BCB A7           	and a
 521+ 9BCC ED 52        	sbc hl,de
 522+ 9BCE CB 3D        	srl l
 523+ 9BD0 3E 08        6 ld a,8
 524+ 9BD2 95           	sub l
 525+ 9BD3 30 1E        	jr nc,3F
 526+ 9BD5
 527+ 9BD5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BD5              ; B="0".
 529+ 9BD5
 530+ 9BD5 04           4 inc b
 531+ 9BD6 3C           	inc a
 532+ 9BD7 20 FC        	jr nz,4B
 533+ 9BD9 78           	ld a,b
 534+ 9BDA 08           	ex af,af
 535+ 9BDB 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BDE 23           5 inc hl
 537+ 9BDF 23           	inc hl
 538+ 9BE0 10 FC        	djnz 5B
 539+ 9BE2 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BE5 CD 47 90     	call Extrae_address
 541+ 9BE8 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9BEB
 543+ 9BEB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BEB              ; _(Posicion_actual).
 545+ 9BEB
 546+ 9BEB 21 CB 8B     	ld hl,Posicion_actual
 547+ 9BEE 35           	dec (hl)
 548+ 9BEF 08           	ex af,af
 549+ 9BF0 6F           	ld l,a
 550+ 9BF1 18 DD        	jr 6B
 551+ 9BF3
 552+ 9BF3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9BF3
 554+ 9BF3 47           3 ld b,a
 555+ 9BF4 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9BF7 23           2 inc hl
 557+ 9BF8 23           	inc hl
 558+ 9BF9 10 FC        	djnz 2B
 559+ 9BFB 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9BFE C9           8 ret
 561+ 9BFF
 562+ 9BFF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9BFF              ;
 564+ 9BFF              ;	modifica_parametros_1er_DESPLZ
 565+ 9BFF              ;
 566+ 9BFF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9BFF              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9BFF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9BFF
 570+ 9BFF 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C02 A7           	and a
 572+ 9C03 20 1E        	jr nz,1F
 573+ 9C05 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C06 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C09 21 CA 8B     	ld hl,Columns
 576+ 9C0C 34           	inc (hl)
 577+ 9C0D 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C10 E6 01        	and 1
 579+ 9C12 20 0F        	jr nz,1F
 580+ 9C14 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C17 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C18 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C1B CD 66 94     	call Genera_coordenadas
 584+ 9C1E CD 7A 9C     	call Dec_CTRL_DESPLZ
 585+ 9C21 18 03        	jr 2F
 586+ 9C23 CD 7A 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C26 C9           2 ret
 588+ 9C27
 589+ 9C27              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C27
 591+ 9C27 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C2A FE F7        	cp $f7
 593+ 9C2C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C2E 30 2C        	jr nc,3F
 595+ 9C30
 596+ 9C30              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C30
 598+ 9C30 06 00        	ld b,0
 599+ 9C32 04           4 inc b
 600+ 9C33 3C           	inc a
 601+ 9C34 FE F7        	cp $f7
 602+ 9C36 20 FA        	jr nz,4B
 603+ 9C38 3E FF        	ld a,$ff
 604+ 9C3A 90           	sub b
 605+ 9C3B 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C3E 18 1C        	jr 3F
 607+ 9C40
 608+ 9C40              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C40
 610+ 9C40 21 CA 8B     1 ld hl,Columns
 611+ 9C43 35           	dec (hl)
 612+ 9C44 AF           	xor a
 613+ 9C45 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C48 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C4B E6 01        	and 1
 616+ 9C4D 28 0A        	jr z,2F
 617+ 9C4F 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C52 2B           	dec hl
 619+ 9C53 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C56 CD 66 94     	call Genera_coordenadas
 621+ 9C59
 622+ 9C59              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C59
 624+ 9C59 CD 6F 90     2 call Inicia_puntero_objeto_izq
 625+ 9C5C C9           3 ret
 626+ 9C5D
 627+ 9C5D              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C5D              ;
 629+ 9C5D              ;	19/10/22
 630+ 9C5D              ;
 631+ 9C5D              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C5D              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C5D
 634+ 9C5D 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C60 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C62 C9           	ret
 637+ 9C63
 638+ 9C63              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C63              ;
 640+ 9C63              ;	19/10/22
 641+ 9C63              ;
 642+ 9C63              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C63              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C63
 645+ 9C63 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C66 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C68 C9           	ret
 648+ 9C69
 649+ 9C69              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C69              ;
 651+ 9C69              ;	24/7/22
 652+ 9C69              ;
 653+ 9C69              ;	Inc_CTRL_DESPLZ
 654+ 9C69              ;
 655+ 9C69              ;
 656+ 9C69              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C69
 658+ 9C69 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C6C 3A E1 8B     	ld a,(Vel_right)
 660+ 9C6F A7           	and a
 661+ 9C70 28 06        	jr z,1F
 662+ 9C72 47           	ld b,a
 663+ 9C73 34           3 inc (hl)
 664+ 9C74 10 FD        	djnz 3B
 665+ 9C76 18 01        	jr 2F
 666+ 9C78 34           1 inc (hl)
 667+ 9C79 C9           2 ret
 668+ 9C7A
 669+ 9C7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C7A              ;
 671+ 9C7A              ;	5/2/23
 672+ 9C7A              ;
 673+ 9C7A              ;	Dec_CTRL_DESPLZ
 674+ 9C7A              ;
 675+ 9C7A              ;
 676+ 9C7A              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C7A
 678+ 9C7A 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C7D 3A E0 8B     	ld a,(Vel_left)
 680+ 9C80 A7           	and a
 681+ 9C81 28 06        	jr z,1F
 682+ 9C83 47           	ld b,a
 683+ 9C84 35           3 dec (hl)
 684+ 9C85 10 FD        	djnz 3B
 685+ 9C87 18 01        	jr 2F
 686+ 9C89 35           1 dec (hl)
 687+ 9C8A C9           2 ret
 688+ 9C8B
 689+ 9C8B              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C8B
 691+ 9C8B 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9C8E 01 1F 00     	ld bc,31
 693+ 9C91 A7           	and a
 694+ 9C92 ED 4A        	adc hl,bc
 695+ 9C94 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9C97 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9C9A CB C6        	set 0,(hl)
 698+ 9C9C C9           	ret
 699+ 9C9D
 700+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9C9D
 702+ 9C9D 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CA0 01 1F 00     	ld bc,31
 704+ 9CA3 A7           	and a
 705+ 9CA4 ED 42        	sbc hl,bc
 706+ 9CA6 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CA9 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CAC CB CE        	set 1,(hl)
 709+ 9CAE C9           	ret
 710+ 9CAF
 711+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CAF
 713+ 9CAF 24           Reaparece_abajo inc h
 714+ 9CB0 01 E0 17     	ld bc,$17e0
 715+ 9CB3 A7           	and a
 716+ 9CB4 ED 4A        	adc hl,bc
 717+ 9CB6 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CB9 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CBC CB D6        	set 2,(hl)
 720+ 9CBE C9           	ret
 721+ 9CBF
 722+ 9CBF              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CBF
 724+ 9CBF 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CC2 A7           	and a
 726+ 9CC3 ED 42        	sbc hl,bc
 727+ 9CC5 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CC8 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CCB CB DE        	set 3,(hl)
 730+ 9CCD C9           	ret
 731+ 9CCE
 732+ 9CCE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CCE              ;
 734+ 9CCE              ;	15/07/23
 735+ 9CCE
 736+ 9CCE              Reinicio
 737+ 9CCE
 738+ 9CCE              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CCE
 740+ 9CCE AF           	xor a
 741+ 9CCF 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CD2 CD F0 9C     	call Limpia_contenido_hl
 743+ 9CD5
 744+ 9CD5 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CD8 CD F0 9C     	call Limpia_contenido_hl
 746+ 9CDB
 747+ 9CDB CD 48 92     	call Inicializa_Puntero_indice_mov
 748+ 9CDE CD EF 9D     	call Inicia_Puntero_mov
 749+ 9CE1
 750+ 9CE1 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CE4 06 05        	ld b,5
 752+ 9CE6 77           1 ld (hl),a
 753+ 9CE7 23           	inc hl
 754+ 9CE8 10 FC        	djnz 1B
 755+ 9CEA
 756+ 9CEA 21 C7 8B     	ld hl,Ctrl_2
 757+ 9CED CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9CEF
 759+ 9CEF C9           	ret
 760+ 9CF0
 761+ 9CF0 77           Limpia_contenido_hl	ld (hl),a
 762+ 9CF1 23           	inc hl
 763+ 9CF2 77           	ld (hl),a
 764+ 9CF3 C9           	ret
 765+ 9CF4
 766+ 9CF4              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9CF4              ;
 768+ 9CF4              ;	18/6/24
 769+ 9CF4              ;
 770+ 9CF4
 771+ 9CF4              Amadeus_a_izquierda
 772+ 9CF4
 773+ 9CF4              ;	Actualiza contador de movimientos.
 774+ 9CF4
 775+ 9CF4 21 79 89     	ld hl,Comm_Amadeus
 776+ 9CF7 35           	dec (hl)
 777+ 9CF8 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9CFA
 779+ 9CFA 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9CFD 2B           	dec hl
 781+ 9CFE 2B           	dec hl
 782+ 9CFF 2B           	dec hl
 783+ 9D00 2B           	dec hl
 784+ 9D01 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D04
 786+ 9D04 21 2D 8C     	ld hl,Ctrl_3
 787+ 9D07 CB EE        	set 5,(hl)
 788+ 9D09
 789+ 9D09 C9           	ret
 790+ 9D0A
 791+ 9D0A 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D0B C9           	ret
 793+ 9D0C
 794+ 9D0C
 795+ 9D0C              Amadeus_a_derecha
 796+ 9D0C
 797+ 9D0C              ;	Actualiza contador de movimientos.
 798+ 9D0C
 799+ 9D0C 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D0F 34           	inc (hl)
 801+ 9D10 3E 7A        	ld a,$7a
 802+ 9D12 BE           	cp (hl)
 803+ 9D13 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D15
 805+ 9D15 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D18 23           	inc hl
 807+ 9D19 23           	inc hl
 808+ 9D1A 23           	inc hl
 809+ 9D1B 23           	inc hl
 810+ 9D1C 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D1F
 812+ 9D1F 21 2D 8C     	ld hl,Ctrl_3
 813+ 9D22 CB EE        	set 5,(hl)
 814+ 9D24 C9           	ret
 815+ 9D25
 816+ 9D25 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D26 C9           	ret
# file closed: Direcciones.asm
2254  9D27              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D27              ; ----- ----- ----- ----- -----
   2+ 9D27              ;
   3+ 9D27              ;   28/12/23
   4+ 9D27
   5+ 9D27              Movimiento
   6+ 9D27
   7+ 9D27              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D27
   9+ 9D27 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D2A CB 57            bit 2,a
  11+ 9D2C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D2E
  13+ 9D2E 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D31 7E               ld a,(hl)
  15+ 9D32
  16+ 9D32              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D32
  18+ 9D32              Inicia_desplazamiento.
  19+ 9D32
  20+ 9D32              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D32
  22+ 9D32 CD 25 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D35
  24+ 9D35              ; Iniciamos (Repetimos_mov).
  25+ 9D35
  26+ 9D35 7E               ld a,(hl)
  27+ 9D36 E6 0F            and $0f
  28+ 9D38 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D3B 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D3E
  31+ 9D3E              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D3E
  33+ 9D3E 23               inc hl
  34+ 9D3F 7E               ld a,(hl)
  35+ 9D40 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D43 2B               dec hl
  37+ 9D44
  38+ 9D44 21 C7 8B         ld hl,Ctrl_2
  39+ 9D47 CB D6            set 2,(hl)
  40+ 9D49
  41+ 9D49              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D49              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D49
  44+ 9D49              Desplazamiento_iniciado
  45+ 9D49
  46+ 9D49 CD F9 9D         call Aplica_desplazamiento
  47+ 9D4C
  48+ 9D4C              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D4C
  50+ 9D4C 3A 2D 8C         ld a,(Ctrl_3)
  51+ 9D4F CB 4F            bit 1,a
  52+ 9D51 C0               ret nz
  53+ 9D52
  54+ 9D52 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D55 35               dec (hl)
  56+ 9D56 C0               ret nz
  57+ 9D57
  58+ 9D57              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D57              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D57              ; Analiza (Cola_de_desplazamiento).
  61+ 9D57
  62+ 9D57 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D5A A7               and a
  64+ 9D5B CC 4E 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D5E 28 30            jr z,Reinicia_el_movimiento
  66+ 9D60
  67+ 9D60 FE FF            cp $ff
  68+ 9D62 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D64
  70+ 9D64 FE FE            cp $fe
  71+ 9D66 CC D3 9D         call z,Fijamos_bucle
  72+ 9D69 28 25            jr z,Reinicia_el_movimiento
  73+ 9D6B
  74+ 9D6B FE FD            cp $fd
  75+ 9D6D 20 11            jr nz,1F
  76+ 9D6F
  77+ 9D6F              ; ---
  78+ 9D6F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D6F
  80+ 9D6F 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D72 CB 5F            bit 3,a
  82+ 9D74 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D76
  84+ 9D76              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D76
  86+ 9D76 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D79 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D7B
  89+ 9D7B CD E4 9D         call Inicia_Repetimos_movimiento
  90+ 9D7E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D80              ; ---
  92+ 9D80
  93+ 9D80 FE 01        1 cp 1
  94+ 9D82 CA BD 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D85
  96+ 9D85 3D               dec a
  97+ 9D86 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9D89
  99+ 9D89 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D8C 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9D8F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9D8F C9               ret
 103+ 9D90
 104+ 9D90              Reinicia_el_movimiento
 105+ 9D90
 106+ 9D90 3A C7 8B         ld a,(Ctrl_2)
 107+ 9D93 CB 5F            bit 3,a
 108+ 9D95 28 1B            jr z,2F
 109+ 9D97
 110+ 9D97              ; (Cola_de_desplazamiento)="254".
 111+ 9D97
 112+ 9D97 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9D9A 35               dec (hl)
 114+ 9D9B 20 15            jr nz,2F
 115+ 9D9D
 116+ 9D9D              ; Fin de las repeticiones del último movimiento.
 117+ 9D9D
 118+ 9D9D 21 C7 8B         ld hl,Ctrl_2
 119+ 9DA0 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DA2
 121+ 9DA2 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DA5 23               inc hl
 123+ 9DA6 23               inc hl
 124+ 9DA7 23               inc hl
 125+ 9DA8 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DAB              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DAB 7E               ld a,(hl)
 128+ 9DAC 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DAF
 130+ 9DAF C3 57 9D         jp Cola
 131+ 9DB2
 132+ 9DB2 CD EF 9D     2 call Inicia_Puntero_mov
 133+ 9DB5
 134+ 9DB5 21 C7 8B         ld hl,Ctrl_2
 135+ 9DB8 CB 96            res 2,(hl)
 136+ 9DBA
 137+ 9DBA C3 27 9D         jp Movimiento
 138+ 9DBD
 139+ 9DBD              Siguiente_desplazamiento
 140+ 9DBD
 141+ 9DBD              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DBD              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DBD
 144+ 9DBD 21 C7 8B         ld hl,Ctrl_2
 145+ 9DC0 CB 96            res 2,(hl)
 146+ 9DC2
 147+ 9DC2 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DC5 23               inc hl
 149+ 9DC6 23               inc hl
 150+ 9DC7 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DCA
 152+ 9DCA 7E               ld a,(hl)
 153+ 9DCB A7               and a
 154+ 9DCC CC 4E 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DCF CA 90 9D         jp z,Reinicia_el_movimiento
 156+ 9DD2
 157+ 9DD2 C9               ret
 158+ 9DD3
 159+ 9DD3              ; Subrutinas -----------------------------------------
 160+ 9DD3              ; ---------- --------- --------- ---------- ----------
 161+ 9DD3              ;
 162+ 9DD3              ;   24/07/23
 163+ 9DD3              ;
 164+ 9DD3              ;   Fijamos_bucle
 165+ 9DD3              ;
 166+ 9DD3              ;
 167+ 9DD3
 168+ 9DD3              Fijamos_bucle
 169+ 9DD3
 170+ 9DD3 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DD6 3C               inc a
 172+ 9DD7 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DDA
 174+ 9DDA CD 4E 9E         call Incrementa_Puntero_indice_mov
 175+ 9DDD 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DE0 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DE3 C9               ret
 178+ 9DE4
 179+ 9DE4              ; ---------- --------- --------- ---------- ----------
 180+ 9DE4              ;
 181+ 9DE4              ;   07/7/23
 182+ 9DE4              ;
 183+ 9DE4              ;   Inicia_Repetimos_movimiento
 184+ 9DE4              ;
 185+ 9DE4              ;
 186+ 9DE4
 187+ 9DE4              Inicia_Repetimos_movimiento
 188+ 9DE4
 189+ 9DE4              ; Iniciamos (Repetimos_movimiento).
 190+ 9DE4
 191+ 9DE4 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9DE8 DD 7E 02         ld a,(ix+2)
 193+ 9DEB 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9DEE
 195+ 9DEE C9               ret
 196+ 9DEF
 197+ 9DEF              ; ---------- --------- --------- ---------- ----------
 198+ 9DEF              ;
 199+ 9DEF              ;   26/6/23
 200+ 9DEF              ;
 201+ 9DEF              ;   Inicia_Puntero_mov
 202+ 9DEF              ;
 203+ 9DEF              ;
 204+ 9DEF
 205+ 9DEF 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9DF2 CD 47 90         call Extrae_address
 207+ 9DF5 22 EE 8B         ld (Puntero_mov),hl
 208+ 9DF8 C9               ret
 209+ 9DF9
 210+ 9DF9              ; ---------- --------- --------- ---------- ----------
 211+ 9DF9              ;
 212+ 9DF9              ;   27/06/23
 213+ 9DF9              ;
 214+ 9DF9              ;   Aplica_movimiento.
 215+ 9DF9
 216+ 9DF9              Aplica_desplazamiento
 217+ 9DF9
 218+ 9DF9              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9DF9
 220+ 9DF9 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9DFC
 222+ 9DFC 7E               ld a,(hl)
 223+ 9DFD E6 F0            and $f0
 224+ 9DFF C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E00
 226+ 9E00 CB 7E            bit 7,(hl)
 227+ 9E02 28 03            jr z,1F
 228+ 9E04 CD DB 99         call Mov_up
 229+ 9E07 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E0A CB 76            bit 6,(hl)
 231+ 9E0C 28 03            jr z,2F
 232+ 9E0E CD A2 99         call Mov_down
 233+ 9E11
 234+ 9E11              ; Se ha aplicado reinicio ???
 235+ 9E11              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E11
 237+ 9E11              ;    ld a,(Ctrl_3)
 238+ 9E11              ;    bit 1,a
 239+ 9E11              ;    ret nz
 240+ 9E11
 241+ 9E11 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E14 CB 6E            bit 5,(hl)
 243+ 9E16 28 03            jr z,3F
 244+ 9E18 CD 41 9B         call Mov_left
 245+ 9E1B 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E1E CB 66            bit 4,(hl)
 247+ 9E20 C8               ret z
 248+ 9E21 CD 1E 9A         call Mov_right
 249+ 9E24 C9               ret
 250+ 9E25
 251+ 9E25              ; ---------- --------- --------- ---------- ----------
 252+ 9E25              ;
 253+ 9E25              ;   26/06/23
 254+ 9E25              ;
 255+ 9E25              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E25
 257+ 9E25              Ajusta_velocidad_desplazamiento
 258+ 9E25
 259+ 9E25              ; 1er byte de la cadena de movimiento.
 260+ 9E25              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E25
 262+ 9E25 CD 43 9E         call Extrae_nibble_alto
 263+ 9E28
 264+ 9E28 32 E2 8B         ld (Vel_up),a
 265+ 9E2B 79               ld a,c
 266+ 9E2C E6 0F            and $0f
 267+ 9E2E 32 E3 8B         ld (Vel_down),a
 268+ 9E31
 269+ 9E31              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E31              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E31
 272+ 9E31 23               inc hl
 273+ 9E32 CD 43 9E         call Extrae_nibble_alto
 274+ 9E35
 275+ 9E35 32 E0 8B         ld (Vel_left),a
 276+ 9E38 79               ld a,c
 277+ 9E39 E6 0F            and $0f
 278+ 9E3B 32 E1 8B         ld (Vel_right),a
 279+ 9E3E
 280+ 9E3E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E3E
 282+ 9E3E 23               inc hl
 283+ 9E3F 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E42 C9               ret
 285+ 9E43
 286+ 9E43 06 04        Extrae_nibble_alto ld b,4
 287+ 9E45 7E               ld a,(hl)
 288+ 9E46 4F               ld c,a
 289+ 9E47 E6 F0            and $f0
 290+ 9E49 CB 3F        1 srl a
 291+ 9E4B 10 FC            djnz 1B
 292+ 9E4D C9               ret
 293+ 9E4E
 294+ 9E4E              ; ---------- --------- --------- ---------- ----------
 295+ 9E4E              ;
 296+ 9E4E              ;   5/7/23
 297+ 9E4E              ;
 298+ 9E4E              ;   Incrementa_Puntero_indice_mov
 299+ 9E4E
 300+ 9E4E              Incrementa_Puntero_indice_mov
 301+ 9E4E
 302+ 9E4E 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E51 34               inc (hl)
 304+ 9E52
 305+ 9E52 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E55 01 02 00         ld bc,2
 307+ 9E58 A7               and a
 308+ 9E59 09               add hl,bc
 309+ 9E5A 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E5D
 311+ 9E5D 7E               ld a,(hl)
 312+ 9E5E A7               and a
 313+ 9E5F
 314+ 9E5F              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E5F
 316+ 9E5F              ;    jr z,$
 317+ 9E5F
 318+ 9E5F              ;! Reinicia el Patrón de movimiento.
 319+ 9E5F
 320+ 9E5F CC 64 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E62
 322+ 9E62 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E63
 324+ 9E63 C9               ret
 325+ 9E64
 326+ 9E64              ; ---------- --------- --------- ---------- ----------
 327+ 9E64              ;
 328+ 9E64              ;   15/01/24
 329+ 9E64              ;
 330+ 9E64              ;   Inicializa_Puntero_indice_mov
 331+ 9E64
 332+ 9E64              Inicializa_Puntero_indice_mov_2
 333+ 9E64
 334+ 9E64              ; Existe etiqueta de bucle principal???
 335+ 9E64
 336+ 9E64 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E67 24               inc h
 338+ 9E68 25               dec h
 339+ 9E69 28 05            jr z,2F
 340+ 9E6B
 341+ 9E6B 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E6E 18 14            jr 3F
 343+ 9E70
 344+ 9E70              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E70
 346+ 9E70 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E73 47               ld b,a
 348+ 9E74
 349+ 9E74 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E77 2B           1 dec hl
 351+ 9E78 2B               dec hl
 352+ 9E79 10 FC            djnz 1B
 353+ 9E7B 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E7E
 355+ 9E7E AF               xor a
 356+ 9E7F 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E82 18 06            jr 4F
 358+ 9E84
 359+ 9E84 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E87 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9E8A C9           4 ret
 362+ 9E8B
 363+ 9E8B              ; ----------------------------------------------------------------------
 364+ 9E8B              ;
 365+ 9E8B              ;   30/01/24
 366+ 9E8B              ;
 367+ 9E8B              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E8B
 369+ 9E8B 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9E8E CD E3 93         call Calcula_salto_en_BC
 371+ 9E91 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9E94 A7               and a
 373+ 9E95 ED 4A            adc hl,bc
 374+ 9E97 C9               ret
 375+ 9E98
 376+ 9E98              ; ----------------------------------------------------------------------
 377+ 9E98              ;
 378+ 9E98              ;   30/01/24
 379+ 9E98              ;
 380+ 9E98              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9E98              ;
 382+ 9E98              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9E98
 384+ 9E98 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9E99 23               inc hl
 386+ 9E9A 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9E9B 69               ld l,c
 388+ 9E9C 60               ld h,b
 389+ 9E9D 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EA0 C9               ret
 391+ 9EA1
# file closed: Movimiento.asm
2255  9EA1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EA1              ; --------------------------------------------------------------------------------------
   2+ 9EA1              ;
   3+ 9EA1              ;   21/8/24
   4+ 9EA1              ;
   5+ 9EA1
   6+ 9EA1              Pinta_disparos
   7+ 9EA1
   8+ 9EA1 ED 73 08 8C      ld (Stack),sp
   9+ 9EA5 06 02            ld b,2
  10+ 9EA7
  11+ 9EA7 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
  12+ 9EAB
  13+ 9EAB D1           2 pop de
  14+ 9EAC
  15+ 9EAC 14               inc d
  16+ 9EAD 15               dec d
  17+ 9EAE
  18+ 9EAE 28 1B            jr z,1F
  19+ 9EB0
  20+ 9EB0              Imprime_scanlines_de_disparo
  21+ 9EB0
  22+ 9EB0 E1               pop hl
  23+ 9EB1
  24+ 9EB1              ; Puntero objeto en DE.
  25+ 9EB1              ; Puntero_de_impresión en HL.
  26+ 9EB1
  27+ 9EB1              ; 1er scanline.
  28+ 9EB1
  29+ 9EB1 1A               ld a,(de)
  30+ 9EB2 AE               xor (hl)
  31+ 9EB3 77               ld (hl),a
  32+ 9EB4
  33+ 9EB4 13               inc de
  34+ 9EB5 2C               inc l
  35+ 9EB6
  36+ 9EB6 1A               ld a,(de)
  37+ 9EB7 AE               xor (hl)
  38+ 9EB8 77               ld (hl),a
  39+ 9EB9
  40+ 9EB9              ; 2º scanline.
  41+ 9EB9
  42+ 9EB9 E1               pop hl
  43+ 9EBA 1B               dec de
  44+ 9EBB
  45+ 9EBB 1A               ld a,(de)
  46+ 9EBC AE               xor (hl)
  47+ 9EBD 77               ld (hl),a
  48+ 9EBE
  49+ 9EBE 13               inc de
  50+ 9EBF 2C               inc l
  51+ 9EC0
  52+ 9EC0 1A               ld a,(de)
  53+ 9EC1 AE               xor (hl)
  54+ 9EC2 77               ld (hl),a
  55+ 9EC3
  56+ 9EC3              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
  57+ 9EC3
  58+ 9EC3 18 E6            jr 2B
  59+ 9EC5
  60+ 9EC5 ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
  61+ 9EC9 18 E0            jr 2B
  62+ 9ECB
  63+ 9ECB 10 F8        1 djnz 3B
  64+ 9ECD ED 7B 08 8C      ld sp,(Stack)
  65+ 9ED1 C9               ret
  66+ 9ED2
  67+ 9ED2              ; --------------------------------------------------------------------------------------
  68+ 9ED2              ;
  69+ 9ED2              ;   21/8/24
  70+ 9ED2              ;
  71+ 9ED2              ;   Modifica: HL y DE.
  72+ 9ED2
  73+ 9ED2
  74+ 9ED2              Genera_datos_de_impresion_disparos_Amadeus
  75+ 9ED2
  76+ 9ED2 ED 73 08 8C      ld (Stack),sp
  77+ 9ED6 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
  78+ 9ED9
  79+ 9ED9 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
  80+ 9EDC ED 72            sbc hl,sp                                                 ; Última caja ???
  81+ 9EDE 28 26            jr z,Salida
  82+ 9EE0
  83+ 9EE0 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
  84+ 9EE1
  85+ 9EE1 14               inc d
  86+ 9EE2 15               dec d
  87+ 9EE3
  88+ 9EE3 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
  89+ 9EE5
  90+ 9EE5              Siguiente_disparo_Amadeus
  91+ 9EE5
  92+ 9EE5 D1               pop de
  93+ 9EE6 33               inc sp
  94+ 9EE7 18 F0            jr 1B
  95+ 9EE9
  96+ 9EE9              Genera_scanlines_de_disparo_Amadeus
  97+ 9EE9
  98+ 9EE9 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
  99+ 9EEA              ;                                                             ; Puntero_de_impresión del disparo en HL.
 100+ 9EEA 33               inc sp
 101+ 9EEB ED 73 1E 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 102+ 9EEF
 103+ 9EEF ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 104+ 9EF3
 105+ 9EF3 C1               pop bc
 106+ 9EF4 C1               pop bc
 107+ 9EF5 C1               pop bc
 108+ 9EF6
 109+ 9EF6 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 110+ 9EFA
 111+ 9EFA E5               push hl                                                   ; Sube 2º scanline al álbum.
 112+ 9EFB CD 6B 99         call PreviousScan
 113+ 9EFE E5               push hl                                                   ; Sube 1er scanline al álbum.
 114+ 9EFF D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 115+ 9F00
 116+ 9F00 ED 7B 1E 8C      ld sp,(Puntero_rancio_disparos_album)
 117+ 9F04 18 D3            jr 1B
 118+ 9F06
 119+ 9F06 ED 7B 08 8C  Salida ld sp,(Stack)
 120+ 9F0A C9               ret
 121+ 9F0B
 122+ 9F0B              ; --------------------------------------------------------------------------------------
 123+ 9F0B              ;
 124+ 9F0B              ;   17/08/24
 125+ 9F0B              ;
 126+ 9F0B
 127+ 9F0B              Genera_disparo_Amadeus
 128+ 9F0B
 129+ 9F0B              ;   Exclusiones.
 130+ 9F0B
 131+ 9F0B 3A 47 8C         ld a,(Disparo_Amadeus)
 132+ 9F0E A7               and a
 133+ 9F0F C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 134+ 9F10
 135+ 9F10              ;! Provisionalmente sólo 1 disparo !!!!!!
 136+ 9F10 3D               dec a
 137+ 9F11 32 47 8C         ld (Disparo_Amadeus),a
 138+ 9F14              ; ----- ----- ----- -----
 139+ 9F14
 140+ 9F14              Define_puntero_objeto_disparo
 141+ 9F14
 142+ 9F14              ;   Inicializamos contador.
 143+ 9F14
 144+ 9F14 06 00            ld b,0
 145+ 9F16 2A 75 89         ld hl,(p.imp.amadeus)
 146+ 9F19 2C               inc l
 147+ 9F1A
 148+ 9F1A 3E 80            ld a,$80
 149+ 9F1C BE               cp (hl)
 150+ 9F1D 28 0D            jr z,1F
 151+ 9F1F
 152+ 9F1F 04               inc b
 153+ 9F20 3E 60            ld a,$60
 154+ 9F22 BE               cp (hl)
 155+ 9F23 28 07            jr z,1F
 156+ 9F25
 157+ 9F25 04               inc b
 158+ 9F26 3E 18            ld a,$18
 159+ 9F28 BE               cp (hl)
 160+ 9F29 28 01            jr z,1F
 161+ 9F2B
 162+ 9F2B 04               inc b
 163+ 9F2C
 164+ 9F2C              ;   Calcula el Puntero_de_impresión del disparo.
 165+ 9F2C
 166+ 9F2C              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 167+ 9F2C
 168+ 9F2C CD 6B 99     1 call PreviousScan
 169+ 9F2F
 170+ 9F2F 78               ld a,b
 171+ 9F30 CB 3F            srl a
 172+ 9F32 28 03            jr z,4F
 173+ 9F34
 174+ 9F34              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 175+ 9F34 E5               push hl
 176+ 9F35 18 02            jr 5F
 177+ 9F37 2D           4 dec l
 178+ 9F38 E5               push hl
 179+ 9F39              ; ---
 180+ 9F39
 181+ 9F39              ;   Calcula el Puntero_objeto del disparo.
 182+ 9F39
 183+ 9F39 21 70 83     5 ld hl,Indice_disparo
 184+ 9F3C 04               inc b
 185+ 9F3D 05               dec b
 186+ 9F3E 28 04            jr z,2F
 187+ 9F40
 188+ 9F40              ;   Nos desplazamos por el índice de disparos.
 189+ 9F40
 190+ 9F40 2C           3 inc l
 191+ 9F41 2C               inc l
 192+ 9F42 10 FC            djnz 3B
 193+ 9F44
 194+ 9F44              ; --- Guarda el Puntero_objeto del disparo en la pila.
 195+ 9F44 CD 47 90     2 call Extrae_address
 196+ 9F47 E5               push hl
 197+ 9F48              ; ---
 198+ 9F48
 199+ 9F48              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 200+ 9F48              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 201+ 9F48
 202+ 9F48 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 203+ 9F4B CD 47 90         call Extrae_address
 204+ 9F4E
 205+ 9F4E 06 02            ld b,2
 206+ 9F50
 207+ 9F50 D1           6 pop de
 208+ 9F51 73               ld (hl),e
 209+ 9F52 23               inc hl
 210+ 9F53 72               ld (hl),d
 211+ 9F54 23               inc hl
 212+ 9F55
 213+ 9F55 10 F9            djnz 6B
 214+ 9F57
 215+ 9F57              Detecta_impacto_en_disparo_de_Amadeus
 216+ 9F57
 217+ 9F57 CD 88 9F         call Detecta_impacto_en_disparo_de_Amadeus01
 218+ 9F5A
 219+ 9F5A 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 220+ 9F5D 23               inc hl
 221+ 9F5E 23               inc hl
 222+ 9F5F CD 47 90         call Extrae_address
 223+ 9F62 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 224+ 9F63 28 02            jr z,7F
 225+ 9F65 3E 01            ld a,1
 226+ 9F67 77           7 ld (hl),a
 227+ 9F68 C8               ret z
 228+ 9F69
 229+ 9F69              Genera_coordenadas_de_disparo_Amadeus
 230+ 9F69
 231+ 9F69              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 232+ 9F69              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 233+ 9F69
 234+ 9F69 2A 32 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 235+ 9F6C CD 47 90         call Extrae_address
 236+ 9F6F 23               inc hl
 237+ 9F70 23               inc hl
 238+ 9F71
 239+ 9F71 CD 47 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 240+ 9F74 CD 66 94         call Genera_coordenadas
 241+ 9F77
 242+ 9F77 3D               dec a
 243+ 9F78
 244+ 9F78 21 37 8C         ld hl,Coordenadas_disparo_certero
 245+ 9F7B 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 246+ 9F7C 23               inc hl
 247+ 9F7D 3A BC 8B         ld a,(Coordenada_X)
 248+ 9F80 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 249+ 9F81
 250+ 9F81 21 34 8C         ld hl,Impacto2
 251+ 9F84 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 252+ 9F86
 253+ 9F86 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 254+ 9F87 C9               ret
 255+ 9F88
 256+ 9F88              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 257+ 9F88              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 258+ 9F88              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 259+ 9F88
 260+ 9F88              ; ----------------------------------------------
 261+ 9F88              ;
 262+ 9F88              ;   12/08/24
 263+ 9F88              ;
 264+ 9F88
 265+ 9F88
 266+ 9F88              Detecta_impacto_en_disparo_de_Amadeus01
 267+ 9F88
 268+ 9F88              Extraccion_de_datos
 269+ 9F88
 270+ 9F88 21 1F 89         ld hl,Indice_de_disparos_Amadeus
 271+ 9F8B CD 47 90         call Extrae_address
 272+ 9F8E
 273+ 9F8E 5E               ld e,(hl)
 274+ 9F8F 23               inc hl
 275+ 9F90 56               ld d,(hl)
 276+ 9F91 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 277+ 9F92
 278+ 9F92 4E               ld c,(hl)
 279+ 9F93 23               inc hl
 280+ 9F94 46               ld b,(hl)
 281+ 9F95 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 282+ 9F96
 283+ 9F96 C5               push bc
 284+ 9F97 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 285+ 9F98
 286+ 9F98              Detecta_impacto_
 287+ 9F98
 288+ 9F98 1A               ld a,(de)
 289+ 9F99 A6               and (hl)
 290+ 9F9A C0               ret nz
 291+ 9F9B
 292+ 9F9B 13               inc de
 293+ 9F9C 23               inc hl
 294+ 9F9D
 295+ 9F9D 1A               ld a,(de)
 296+ 9F9E A6               and (hl)
 297+ 9F9F C9               ret
 298+ 9FA0
 299+ 9FA0              ; -------------------------------------------------------------------------------------------------------------
 300+ 9FA0              ;
 301+ 9FA0              ;   8/8/24
 302+ 9FA0              ;
 303+ 9FA0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 304+ 9FA0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 305+ 9FA0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 306+ 9FA0              ;
 307+ 9FA0              ;   MODIFICA: HL,DE,BC y A.
 308+ 9FA0              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 309+ 9FA0              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 310+ 9FA0
 311+ 9FA0              Colision_Entidad_Amadeus
 312+ 9FA0
 313+ 9FA0              ; Posible contacto de entidad con Amadeus. ?????
 314+ 9FA0
 315+ 9FA0              ; Exclusiones:
 316+ 9FA0
 317+ 9FA0 3A 53 8C         ld a,(Shield)
 318+ 9FA3 A7               and a
 319+ 9FA4 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 320+ 9FA5
 321+ 9FA5 21 2D 8C         ld hl,Ctrl_3
 322+ 9FA8 CB 76            bit 6,(hl)
 323+ 9FAA C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 324+ 9FAB
 325+ 9FAB 21 34 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 326+ 9FAE CB 56            bit 2,(hl)
 327+ 9FB0 C0               ret nz
 328+ 9FB1
 329+ 9FB1 3A BD 8B     	ld a,(Coordenada_y)
 330+ 9FB4 FE 14        	cp $14
 331+ 9FB6 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 332+ 9FB7
 333+ 9FB7 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 334+ 9FBA A7               and a
 335+ 9FBB C0               ret nz
 336+ 9FBC
 337+ 9FBC              Genera_coordenadas_X
 338+ 9FBC
 339+ 9FBC              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 340+ 9FBC              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 341+ 9FBC
 342+ 9FBC              ;   Limpiamos almacenes.
 343+ 9FBC
 344+ 9FBC              ;    call Limpia_Coordenadas_X
 345+ 9FBC
 346+ 9FBC              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 347+ 9FBC
 348+ 9FBC 21 39 8C         ld hl,Coordenadas_X_Entidad
 349+ 9FBF 3A BC 8B         ld a,(Coordenada_X)
 350+ 9FC2 CD E4 9F         call Guarda_coordenadas_X
 351+ 9FC5
 352+ 9FC5              ;   Almacenamos las coordenadas X de Amadeus.
 353+ 9FC5
 354+ 9FC5 3A 71 89         ld a,(CX_Amadeus)
 355+ 9FC8 CD E4 9F         call Guarda_coordenadas_X
 356+ 9FCB CD F8 9F         call Compara_coordenadas_X
 357+ 9FCE C0               ret nz
 358+ 9FCF
 359+ 9FCF 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 360+ 9FD1 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 361+ 9FD4
 362+ 9FD4 2A FB 8B         ld hl,(Puntero_store_caja)
 363+ 9FD7 2C               inc l
 364+ 9FD8 2C               inc l
 365+ 9FD9 2C               inc l
 366+ 9FDA 2C               inc l
 367+ 9FDB 22 35 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 368+ 9FDE
 369+ 9FDE 21 34 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 370+ 9FE1 CB D6            set 2,(hl)
 371+ 9FE3
 372+ 9FE3 C9               ret
 373+ 9FE4
 374+ 9FE4               ; ----- ----- ----- ----- -----
 375+ 9FE4
 376+ 9FE4 77           Guarda_coordenadas_X ld (hl),a
 377+ 9FE5 3C               inc a
 378+ 9FE6 2C               inc l
 379+ 9FE7 77               ld (hl),a
 380+ 9FE8 3C               inc a
 381+ 9FE9 2C               inc l
 382+ 9FEA 77               ld (hl),a
 383+ 9FEB 2C               inc l
 384+ 9FEC C9               ret
 385+ 9FED
 386+ 9FED AF           Limpia_Coordenadas_X xor a
 387+ 9FEE 06 06            ld b,6
 388+ 9FF0 21 3C 8C         ld hl,Coordenadas_X_Amadeus
 389+ 9FF3 77           1 ld (hl),a
 390+ 9FF4 23               inc hl
 391+ 9FF5 10 FC            djnz 1B
 392+ 9FF7 C9               ret
 393+ 9FF8
 394+ 9FF8              ; ----- ----- ----- ----- -----
 395+ 9FF8
 396+ 9FF8              Compara_coordenadas_X
 397+ 9FF8
 398+ 9FF8 DD 21 39 8C      ld ix,Coordenadas_X_Entidad
 399+ 9FFC DD 7E 00         ld a,(ix+0)
 400+ 9FFF CD 0D A0         call Comparando
 401+ A002 C8               ret z
 402+ A003
 403+ A003 3C               inc a
 404+ A004 CD 1C A0         call Comparando_1
 405+ A007 C8               ret z
 406+ A008
 407+ A008 3C               inc a
 408+ A009 CD 1C A0         call Comparando_1
 409+ A00C C9               ret
 410+ A00D
 411+ A00D              ; ----- ----- ----- ----- -----
 412+ A00D              ;
 413+ A00D              ;   4/12/23
 414+ A00D              ;
 415+ A00D              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 416+ A00D
 417+ A00D              Comparando
 418+ A00D
 419+ A00D DD 2C            inc ixl
 420+ A00F DD 2C            inc ixl
 421+ A011 DD 2C            inc ixl
 422+ A013
 423+ A013 DD 46 00         ld b,(ix+0)
 424+ A016 DD 4E 01         ld c,(ix+1)
 425+ A019 DD 56 02         ld d,(ix+2)
 426+ A01C
 427+ A01C B8           Comparando_1 cp b
 428+ A01D C8               ret z
 429+ A01E B9               cp c
 430+ A01F C8               ret z
 431+ A020 BA               cp d
 432+ A021 C9               ret
 433+ A022
 434+ A022              ; -----------------------------------------------------------------------
 435+ A022              ;
 436+ A022              ;   04/7/24
 437+ A022              ;
 438+ A022
 439+ A022              Detecta_colision_nave_entidad
 440+ A022
 441+ A022              ; Exclusiones:
 442+ A022
 443+ A022              ; Salimos de la rutina si no hay advertencia de posible colisión.
 444+ A022
 445+ A022 21 34 8C     	ld hl,Impacto2
 446+ A025 CB 56        	bit 2,(hl)
 447+ A027 C8           	ret z
 448+ A028
 449+ A028              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 450+ A028
 451+ A028 2A 77 89         ld hl,(Pamm_Amadeus)
 452+ A02B CD 47 90         call Extrae_address
 453+ A02E 54               ld d,h
 454+ A02F 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 455+ A030
 456+ A030 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 457+ A033 06 10            ld b,16                                        ; Contador de scanlines en B.
 458+ A035 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 459+ A038
 460+ A038 C5           1 push bc
 461+ A039 06 03            ld b,3
 462+ A03B E5               push hl
 463+ A03C
 464+ A03C              ; .db
 465+ A03C
 466+ A03C 1A           3 ld a,(de)
 467+ A03D A7               and a
 468+ A03E 20 03            jr nz,4F
 469+ A040
 470+ A040 2C               inc l
 471+ A041 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 472+ A043
 473+ A043 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 474+ A045 28 04            jr z,2F
 475+ A047
 476+ A047              ; Impacto.
 477+ A047 FD 2D            dec iyl
 478+ A049 28 22            jr z,5F
 479+ A04B
 480+ A04B 1C           2 inc e
 481+ A04C 10 EE            djnz 3B
 482+ A04E
 483+ A04E E1               pop hl
 484+ A04F
 485+ A04F              ; Hay salto de línea en el puntero de impresión ???
 486+ A04F
 487+ A04F 7C               ld a,h
 488+ A050 D6 57            sub $57
 489+ A052 20 0A            jr nz,6F
 490+ A054
 491+ A054              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 492+ A054
 493+ A054 2A 75 89         ld hl,(p.imp.amadeus)
 494+ A057 3E 20            ld a,$20
 495+ A059 A7               and a
 496+ A05A 85               add l
 497+ A05B 6F               ld l,a
 498+ A05C 18 01            jr 7F
 499+ A05E
 500+ A05E 24           6 inc h
 501+ A05F
 502+ A05F C1           7 pop bc
 503+ A060 10 D6            djnz 1B
 504+ A062
 505+ A062              ;   Fin de la comparativa.
 506+ A062
 507+ A062              ;   NO HAY COLISIÓN !!!!!.
 508+ A062              ;
 509+ A062              ;   .db (Impacto) de Amadeus a "0".
 510+ A062              ;   RES el bit2 de (Impacto2).
 511+ A062              ;
 512+ A062              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 513+ A062              ;   Lo colocamos a "0".
 514+ A062
 515+ A062 21 34 8C         ld hl,Impacto2
 516+ A065 CB 96            res 2,(hl)
 517+ A067 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)
 518+ A06A 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 519+ A06C C9               ret
 520+ A06D
 521+ A06D              ;   COLISIÓN !!!!!.
 522+ A06D              ;
 523+ A06D              ;   .db (Impacto) de Amadeus a "1".
 524+ A06D              ;   SET el bit3 de (Impacto2).
 525+ A06D              ;
 526+ A06D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 527+ A06D
 528+ A06D E1           5 pop hl
 529+ A06E C1               pop bc
 530+ A06F
 531+ A06F 21 74 89         ld hl,Impacto_Amadeus
 532+ A072 36 01            ld (hl),1
 533+ A074 21 34 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 534+ A077 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 535+ A079
 536+ A079 11 C0 87         ld de,Indice_Explosion_entidades
 537+ A07C 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 538+ A07F
 539+ A07F 23               inc hl
 540+ A080 23               inc hl
 541+ A081 23               inc hl
 542+ A082
 543+ A082 73               ld (hl),e
 544+ A083 23               inc hl
 545+ A084 72               ld (hl),d
 546+ A085
 547+ A085              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 548+ A085
 549+ A085 11 60 88         ld de,Indice_Explosion_Amadeus
 550+ A088 21 77 89         ld hl,Pamm_Amadeus
 551+ A08B
 552+ A08B 73               ld (hl),e
 553+ A08C 23               inc hl
 554+ A08D 72               ld (hl),d
 555+ A08E
 556+ A08E C9               ret
 557+ A08F
 558+ A08F
 559+ A08F
# file closed: Disparo.asm
2256  A08F
2257  A08F              	SAVESNA "Pruebas.sna", START
2258  A08F
2259  A08F
2260  A08F
2261  A08F
# file closed: Banco_de_pruebas.asm
