# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1C 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 2B 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD D8 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 3C 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E 3A 54 89     	ld a,(Contador_de_frames_2)
  58  AA21 FE 01        	cp 1
  59  AA23 20 09        	jr nz,1F
  60  AA25 3A 53 89     	ld a,(Contador_de_frames)
  61  AA28 FE 50        	cp $50	; $56 Último frame que no falla.
  62  AA2A 28 FE        	jr z,$
  63  AA2C 30 FE        	jr nc,$
  64  AA2E
  65  AA2E              ;! Debuggg
  66  AA2E
  67  AA2E FD E1        1 pop iy
  68  AA30 DD E1        	pop ix
  69  AA32 F1           	pop af
  70  AA33 C1           	pop bc
  71  AA34 D1           	pop de
  72  AA35 E1           	pop hl
  73  AA36 D9           	exx
  74  AA37 C1           	pop bc
  75  AA38 D1           	pop de
  76  AA39 E1           	pop hl
  77  AA3A 08           	ex af,af'
  78  AA3B F1           	pop af
  79  AA3C 08           	ex af,af'
  80  AA3D D9           	exx
  81  AA3E
  82  AA3E ED 7B 1C 89  	ld sp,(Stack_3)
  83  AA42
  84  AA42 FB           	ei
  85  AA43 ED 4D        	reti
  86  AA45
  87  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA45
  89  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 22 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 28 89        	defw End_Snapshot_1
 267+ 8500 2C 89        	defw End_Snapshot_2
 268+ 8502 30 89        	defw End_Snapshot_3
 269+ 8504 24 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 2A 89        	defw End_Snapshot_disparos_1
 271+ 8508 2E 89        	defw End_Snapshot_disparos_2
 272+ 850A 32 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 38 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 38 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CF 87        	defw Nivel_2
   7+ 87BE DC 87        	defw Nivel_3
   8+ 87C0 EC 87        	defw Nivel_4
   9+ 87C2 FE 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 06           Nivel_1 db 6	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87CD 01 01
  19+ 87CF 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D4 01 02
  21+ 87D6 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87DA 01 02
  22+ 87DC 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87E1 01
  24+ 87E2 03 01 01 01  	db 3,1,1,1,1
  24+ 87E6 01
  25+ 87E7 03 01 01 01  	db 3,1,1,1,1
  25+ 87EB 01
  26+ 87EC 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87F1 01
  28+ 87F2 04 01 01 01  	db 4,1,1,1,1
  28+ 87F6 01
  29+ 87F7 04 01 01 01  	db 4,1,1,1,1
  29+ 87FB 01
  30+ 87FC 02 03        	db 2,3
  31+ 87FE 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8803 01
  33+ 8804 05 01 01 01  	db 5,1,1,1,1
  33+ 8808 01
  34+ 8809 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880D 01
  35+ 880E 05 01 01 01  	db 5,1,1,1,1
  35+ 8812 01
  36+ 8813
  37+ 8813              ;---------------------------------------------------------------------------------------------------------------
  38+ 8813              ;
  39+ 8813              ;   3/9/23
  40+ 8813              ;
  41+ 8813              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8813              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8813              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8813              ;	_en la caja DRAW correspondiente.
  45+ 8813              ;
  46+ 8813              ;	MODIFICA: HL,DE y A.
  47+ 8813              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8813
  49+ 8813              Inicializa_Punteros_de_nivel
  50+ 8813
  51+ 8813 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8816 22 5F 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8819 CD 7D 8C     	call Extrae_address
  54+ 881C 7E           	ld a,(hl)
  55+ 881D 32 10 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8820 23           	inc hl
  57+ 8821 22 61 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8824 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8825
  60+ 8825              ;---------------------------------------------------------------------------------------------------------------
  61+ 8825              ;
  62+ 8825              ;   13/5/23
  63+ 8825              ;
  64+ 8825              ;	Destruye A,BC,HL,DE
  65+ 8825
  66+ 8825              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8825              ;	_del juego.
  68+ 8825
  69+ 8825              Prepara_cajas
  70+ 8825
  71+ 8825              ; Preparamos los punteros de las cajas.
  72+ 8825
  73+ 8825 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8828 CD 7D 8C     	call Extrae_address
  75+ 882B CD 68 88     	call Avanza_caja
  76+ 882E
  77+ 882E CD AC 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8831
  79+ 8831 2A 61 89     	ld hl,(Datos_de_nivel)
  80+ 8834
  81+ 8834              ; HL está en los datos del nivel correspondiente.
  82+ 8834              ; B actuará como contador de cajas.
  83+ 8834
  84+ 8834 C5           1 push bc
  85+ 8835
  86+ 8835 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8836 CD 59 88     	call PreparaBC
  88+ 8839
  89+ 8839 21 96 87     	ld hl,Indice_de_entidades
  90+ 883C CD 61 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883F 22 16 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8842
  93+ 8842 CD 72 88     	call Datos_de_entidad_a_caja
  94+ 8845
  95+ 8845 2A 0E 89     	ld hl,(Indice_restore_caja)
  96+ 8848 CD 7D 8C     	call Extrae_address
  97+ 884B CD 68 88     	call Avanza_caja
  98+ 884E
  99+ 884E 2A 61 89     	ld hl,(Datos_de_nivel)
 100+ 8851 23           	inc hl
 101+ 8852 22 61 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8855
 103+ 8855 C1           	pop bc
 104+ 8856 10 DC        	djnz 1B
 105+ 8858 C9           	ret
 106+ 8859
 107+ 8859 CB 27        PreparaBC sla a
 108+ 885B D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885D 4F           	ld c,a
 110+ 885E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8860 C9           	ret
 112+ 8861
 113+ 8861 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8862 ED 4A        	adc hl,bc
 115+ 8864 CD 7D 8C     	call Extrae_address
 116+ 8867 C9           	ret
 117+ 8868
 118+ 8868 22 0A 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 886B 13           	inc de
 120+ 886C 13           	inc de
 121+ 886D EB           	ex de,hl
 122+ 886E 22 0E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8871 C9           	ret
 124+ 8872
 125+ 8872              Datos_de_entidad_a_caja
 126+ 8872
 127+ 8872              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8872
 129+ 8872
 130+ 8872 ED 5B 0A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8876
 132+ 8876 01 02 00     	ld bc,2
 133+ 8879 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 887B
 135+ 887B 01 07 00     	ld bc,7
 136+ 887E CD A6 88     	call Situa_DE
 137+ 8881
 138+ 8881 01 05 00     	ld bc,5
 139+ 8884 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8886
 141+ 8886 01 04 00     	ld bc,4
 142+ 8889 CD A6 88     	call Situa_DE
 143+ 888C
 144+ 888C 01 07 00     	ld bc,7
 145+ 888F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8891
 147+ 8891 01 12 00     	ld bc,18
 148+ 8894 CD A6 88     	call Situa_DE
 149+ 8897
 150+ 8897 01 02 00     	ld bc,2
 151+ 889A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 889C
 153+ 889C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 889C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 889C
 156+ 889C 01 0F 00     	ld bc,15									; *****
 157+ 889F CD A6 88     	call Situa_DE
 158+ 88A2
 159+ 88A2 3E 03        	ld a,3
 160+ 88A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A5
 162+ 88A5 C9           	ret
 163+ 88A6
 164+ 88A6 EB           Situa_DE ex de,hl
 165+ 88A7 A7           	and a
 166+ 88A8 ED 4A        	adc hl,bc
 167+ 88AA EB           	ex de,hl
 168+ 88AB C9           	ret
 169+ 88AC
 170+ 88AC              ;---------------------------------------------------------------------------------------------------------------
 171+ 88AC              ;
 172+ 88AC              ;	21/5/23
 173+ 88AC              ;
 174+ 88AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88AC              ;
 177+ 88AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88AC              ;
 181+ 88AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88AC              ;	MODIFICA: A y B.
 183+ 88AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88AC
 185+ 88AC              Admin_num_entidades
 186+ 88AC
 187+ 88AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88AC
 189+ 88AC 3A 10 89     	ld a,(Numero_de_entidades)
 190+ 88AF A7           	and a
 191+ 88B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88B0              ;	jr z,$
 193+ 88B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88B0
 195+ 88B0 20 03        	jr nz,3F
 196+ 88B2
 197+ 88B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88B2
 199+ 88B2 CD 13 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B5
 201+ 88B5 3A 10 89     3 ld a,(Numero_de_entidades)
 202+ 88B8 FE 0A        	cp 10
 203+ 88BA 38 08        	jr c,1F
 204+ 88BC
 205+ 88BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88BC              ; Actualizamos variables.
 207+ 88BC
 208+ 88BC 3E 0A        	ld a,10
 209+ 88BE 32 11 89     	ld (Numero_parcial_de_entidades),a
 210+ 88C1 47           	ld b,a
 211+ 88C2 18 04        	jr 2F
 212+ 88C4
 213+ 88C4              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C4              ; (Numero_de_entidades)="0".
 215+ 88C4
 216+ 88C4 32 11 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C7 47           	ld b,a
 218+ 88C8 C9           2 ret
# file closed: Niveles.asm
  92  88C9
  93  88C9              ; ******************************************************************************************************************************************************************************************
  94  88C9              ; Constantes.
  95  88C9              ; ******************************************************************************************************************************************************************************************
  96  88C9              ;
  97  88C9              ; 4/9/23
  98  88C9              ;
  99  88C9              ; Constantes generales.
 100  88C9              ;
 101  88C9
 102  88C9              Sprite_vacio equ $f000
 103  88C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C9
 108  88C9              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C9              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C9              ;
 114  88C9              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C9              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C9              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C9              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C9              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C9              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C9
 121  88C9              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C9              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C9
 124  88C9
 125  88C9
 126  88C9              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C9
 128  88C9              ; ******************************************************************************************************************************************************************************************
 129  88C9              ; Variables.
 130  88C9              ; ******************************************************************************************************************************************************************************************
 131  88C9              ;
 132  88C9              ; 28/07/23
 133  88C9              ;
 134  88C9              ; Variables de DRAW. (Motor principal).
 135  88C9              ;
 136  88C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C9
 138  88C9 00           Filas db 0												; Filas. [DRAW]
 139  88CA 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88D1
 145  88D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88D1
 147  88D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88D2 00           Attr db 0												; Atributos de la entidad:
 151  88D3
 152  88D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D3              ;
 154  88D3              ;	COLORES: 0 ..... NEGRO
 155  88D3              ;    		 1 ..... AZUL
 156  88D3              ; 			 2 ..... ROJO
 157  88D3              ;			 3 ..... MAGENTA
 158  88D3              ; 			 4 ..... VERDE
 159  88D3              ; 			 5 ..... CIAN
 160  88D3              ;			 6 ..... AMARILLO
 161  88D3              ; 			 7 ..... BLANCO
 162  88D3
 163  88D3 00 00        Indice_Sprite_der defw 0
 164  88D5 00 00        Indice_Sprite_izq defw 0
 165  88D7 00 00        Puntero_DESPLZ_der defw 0
 166  88D9 00 00        Puntero_DESPLZ_izq defw 0
 167  88DB
 168  88DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DE
 171  88DE              ; Variables de objeto. (Características).
 172  88DE
 173  88DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88E2
 178  88E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E3 00 00 00...  Variables_de_borrado ds 6
 182  88E9
 183  88E9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88EB 00 00        	defw 0
 185  88ED 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EF 00 00 00 00  	db 0,0,0,0
 187  88F3
 188  88F3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F3
 190  88F3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F4              ;
 196  88F4              ; 														DESCRIPCIÖN:
 197  88F4              ;
 198  88F4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F4              ;
 212  88F4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F4
 216  88F4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F4
 218  88F4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F8 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88FA              ;
 222  88FA              ;
 223  88FA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88FB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88FB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88FB 00           Incrementa_puntero_backup db 0
 227  88FC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  8900              ;
 233  8900              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  8900              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  8900              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  8900              ;
 237  8900              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  8900              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  8900              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  8900              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  8900              ;
 242  8900              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  8900              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  8900              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  8900
 246  8900
 247  8900              ; Variables de funcionamiento. [DRAW].
 248  8900
 249  8900 00           Columnas db 0
 250  8901 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8903              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8903 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8904
 254  8904              ; variables de control general.
 255  8904
 256  8904 00           Ctrl_2 db 0
 257  8905              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8905              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8905              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8905              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8905              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8905              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8905              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8905              ;
 265  8905              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8905              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8905              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8905              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8905              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8905
 271  8905 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8906
 273  8906              ;! 61 Bytes por entidad.
 274  8906
 275  8906              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8906              ;					         		---------;      ;---------
 277  8906
 278  8906
 279  8906              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8906
 281  8906 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8907
 283  8907              ;														DESCRIPCIÓN:
 284  8907              ;
 285  8907              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8907              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8907              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8907              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8907              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8907              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8907
 292  8907              ;														BIT 3, Recarga de nueva oleada.
 293  8907              ;														BIT 4, Recarga de nueva oleada.
 294  8907              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8907              ;														BIT 6, **** Frame completo.
 296  8907              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8907
 298  8907 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8909              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8909              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8909              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8909
 303  8909 00           Ctrl_3 db 0												; Byte de control de propósito general.
 304  890A
 305  890A              ;														DESCRIPCIÓN:
 306  890A              ;
 307  890A              ;														BIT 0,
 308  890A
 309  890A              ; Gestión de ENTIDADES y CAJAS.
 310  890A
 311  890A 00 00        Puntero_store_caja defw 0
 312  890C 00 00        Puntero_restore_caja defw 0
 313  890E 00 00        Indice_restore_caja defw 0
 314  8910 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  8911 00           Numero_parcial_de_entidades db 0
 316  8912 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8913 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8914              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8914              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8914              ;														; _ (Numero_de_malotes)="0".
 321  8914 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8916 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8918              ;														; _ puntero (Indice_entidades).
 324  8918
 325  8918
 326  8918              ;---------------------------------------------------------------------------------------------------------------
 327  8918              ;
 328  8918              ;	2/9/23
 329  8918              ;
 330  8918              ;	Álbumes.
 331  8918
 332  8918 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  891A              ;														; _variable para almacenar lo posición del puntero_
 334  891A              ; 														; _de pila, SP.
 335  891A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  891C              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  891C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891E 00 00        Stack_snapshot defw 0
 339  8920 00 00        Stack_snapshot_disparos defw 0
 340  8922
 341  8922 00 00        End_Snapshot defw 0
 342  8924              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8924 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8926              ;														; _el snapshot de los registros del siguiente disparo.
 345  8926              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8926 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8928 00 00        End_Snapshot_1 defw 0
 348  892A 00 00        End_Snapshot_disparos_1 defw 0
 349  892C 00 00        End_Snapshot_2 defw 0
 350  892E 00 00        End_Snapshot_disparos_2 defw 0
 351  8930 00 00        End_Snapshot_3 defw 0
 352  8932 00 00        End_Snapshot_disparos_3 defw 0
 353  8934
 354  8934 00 00        Puntero_indice_album_de_fotos defw 0
 355  8936 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8938
 357  8938 00 00        Puntero_indice_End_Snapshot defw 0
 358  893A 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  893C 00 00        Puntero_de_End_Snapshot defw 0
 360  893E 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  8940
 362  8940              ;---------------------------------------------------------------------------------------------------------------
 363  8940
 364  8940              ; Gestión de Disparos.
 365  8940
 366  8940 00           Numero_de_disparotes db 0
 367  8941 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 368  8943 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 369  8945 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 370  8946              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 371  8946              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 372  8946 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 373  8948              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 374  8948              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 375  8948              ;														; _produzca colisión.
 376  8948 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 377  894A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 378  894A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 379  894D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 380  894D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 381  8950              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 382  8950 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 383  8952 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 384  8953
 385  8953              ;---------------------------------------------------------------------------------------------------------------
 386  8953
 387  8953              ; Relojes y temporizaciones.
 388  8953
 389  8953 00           Contador_de_frames db 0
 390  8954 00           Contador_de_frames_2 db 0
 391  8955
 392  8955 04           Clock_explosion db 4
 393  8956 1E           Clock_Entidades_en_curso db 30
 394  8957 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 395  8958              ;														; Repite la oleada de entidades.
 396  8958 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 397  8959 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 398  895A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 399  895B
 400  895B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 401  895C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 402  895D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 403  895E
 404  895E              ;---------------------------------------------------------------------------------------------------------------
 405  895E
 406  895E              ; Gestión de NIVELES.
 407  895E
 408  895E 00           Nivel db 0												; Nivel actual del juego.
 409  895F 00 00        Puntero_indice_NIVELES defw 0
 410  8961 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 411  8963              ; 														; _ que definen el NIVEL.
 412  8963              ; Y todo comienza aquí .....
 413  8963              ;
 414  8963              ; Rutina principal *************************************************************************************************************************************************************************
 415  8963              ;
 416  8963              ;	14/11/22
 417  8963
 418  8963              START
 419  8963
 420  8963 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 421  8966 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 422  8968 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 423  896A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 424  896C F3           	DI
 425  896D
 426  896D 3E 07        	ld a,%00000111
 427  896F CD 65 99     	call Cls
 428  8972
 429  8972 CD 56 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 430  8975
 431  8975              ; INICIALIZACIÓN.
 432  8975
 433  8975 CD 13 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 434  8978
 435  8978 CD 25 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 436  897B
 437  897B CD 81 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 438  897E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 439  897E CD 97 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 440  8981              ;													     ; _ malotes antes de guardar ninguna foto.
 441  8981              ; ----------
 442  8981
 443  8981 CD 06 8D     	call Restore_entidad
 444  8984
 445  8984 21 11 89     	ld hl,Numero_parcial_de_entidades
 446  8987 46           	ld b,(hl)
 447  8988 04           	inc b
 448  8989 05           	dec b
 449  898A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 450  898C
 451  898C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 452  898C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 453  898C              ;	Pintamos el resto de entidades:
 454  898C
 455  898C              ;	INICIA ENTIDADES !!!!!
 456  898C
 457  898C C5           1 push bc  												; Guardo el contador de entidades.
 458  898D CD 52 8B     	call Inicia_entidad
 459  8990 C1           	pop bc
 460  8991 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 461  8993
 462  8993              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 463  8993              ; (Esto se dá cuando se inicia una nueva oleada).
 464  8993
 465  8993 3A 06 89     	ld a,(Ctrl_1)
 466  8996 CB 5F        	bit 3,a
 467  8998 20 00        	jr nz,5F											; Loop
 468  899A
 469  899A              ; 	INICIA AMADEUS !!!!!
 470  899A
 471  899A              3
 472  899A
 473  899A              ;	call Restore_Amadeus
 474  899A              ;	call Inicia_Puntero_objeto
 475  899A              ;	call Draw
 476  899A              ;	call Guarda_foto_registros
 477  899A              ;	call Guarda_datos_de_borrado_Amadeus
 478  899A
 479  899A              ;	ld de,Amadeus_db
 480  899A              ;	call Store_Amadeus
 481  899A
 482  899A              ; 	INICIA DISPAROS !!!!!
 483  899A
 484  899A              ;	call Inicia_Puntero_Disparo_Entidades
 485  899A              ;	call Inicia_Puntero_Disparo_Amadeus
 486  899A
 487  899A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 488  899A
 489  899A CD 81 8B     5 call Inicia_punteros_de_cajas
 490  899D CD 06 8D     	call Restore_entidad
 491  89A0
 492  89A0 3A 06 89     	ld a,(Ctrl_1)
 493  89A3 CB 5F        	bit 3,a
 494  89A5 28 07        	jr z,6F
 495  89A7
 496  89A7              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 497  89A7
 498  89A7 21 06 89     	ld hl,Ctrl_1
 499  89AA CB 9E        	res 3,(hl)
 500  89AC 18 03        	jr Main
 501  89AE
 502  89AE
 503  89AE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 504  89AE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 505  89AE              ; _ para situarnos en el siguiente album.
 506  89AE
 507  89AE CD C8 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 508  89B1
 509  89B1
 510  89B1              ; ------------------------------------
 511  89B1
 512  89B1              Main
 513  89B1              ;
 514  89B1              ;	3/8/23
 515  89B1
 516  89B1 FB            	ei
 517  89B2
 518  89B2 3A 56 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 519  89B5 47           	ld b,a
 520  89B6 3A 53 89     	ld a,(Contador_de_frames)
 521  89B9 B8           	cp b
 522  89BA 20 18        	jr nz,13F
 523  89BC
 524  89BC 3A 11 89     	ld a,(Numero_parcial_de_entidades)
 525  89BF 47           	ld b,a
 526  89C0 3A 12 89     	ld a,(Entidades_en_curso)
 527  89C3 B8           	cp b
 528  89C4 28 0E        	jr z,13F
 529  89C6 30 0C        	jr nc,13F
 530  89C8
 531  89C8 3C           	inc a
 532  89C9 32 12 89     	ld (Entidades_en_curso),a
 533  89CC
 534  89CC 3A 56 89     	ld a,(Clock_Entidades_en_curso)
 535  89CF
 536  89CF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 537  89CF              ;! _ IMPREDECIBLE !!!!
 538  89CF
 539  89CF C6 64        	add 100
 540  89D1 32 56 89     	ld (Clock_Entidades_en_curso),a
 541  89D4
 542  89D4              ; Habilita disparos.
 543  89D4
 544  89D4 21 58 89     13 ld hl,Disparo_Amadeus
 545  89D7 11 5A 89     	ld de,CLOCK_repone_disparo_Amadeus
 546  89DA CD 29 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 547  89DD
 548  89DD 21 5B 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 549  89E0 11 5D 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 550  89E3 CD 29 9D     	call Habilita_disparos
 551  89E6
 552  89E6              ; COLISIONES.
 553  89E6
 554  89E6 CD 3A 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 555  89E9
 556  89E9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 557  89E9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 558  89E9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 559  89E9
 560  89E9 AF           	xor a
 561  89EA 32 45 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 562  89ED
 563  89ED CD 81 8B     	call Inicia_punteros_de_cajas
 564  89F0 CD 06 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 565  89F3              ; 														; _ en DRAW.
 566  89F3 3A C9 88     	ld a,(Filas)
 567  89F6 A7           	and a
 568  89F7 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 569  89F9 CD 18 8D     	call Incrementa_punteros_de_cajas
 570  89FC 18 F2        	jr 12B
 571  89FE
 572  89FE              ; ---------------------------------------------------------------------------------------
 573  89FE
 574  89FE 3A 11 89     10 ld a,(Numero_parcial_de_entidades)
 575  8A01 47               ld b,a
 576  8A02 A7           	and a
 577  8A03 20 14        	jr nz,11F
 578  8A05
 579  8A05 21 06 89     	ld hl,Ctrl_1
 580  8A08 CB 66        	bit 4,(hl)
 581  8A0A C2 97 8A     	jp nz,16F
 582  8A0D
 583  8A0D 21 06 89     	ld hl,Ctrl_1
 584  8A10 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 585  8A12
 586  8A12 3A 53 89     	ld a,(Contador_de_frames)
 587  8A15 3C           	inc a
 588  8A16 32 57 89     	ld (Activa_recarga_cajas),a
 589  8A19
 590  8A19              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 591  8A19
 592  8A19 3A 12 89     11 ld a,(Entidades_en_curso)
 593  8A1C A7           	and a
 594  8A1D CA 97 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 595  8A20 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 596  8A21
 597  8A21              ; Código que ejecutamos con cada entidad:
 598  8A21              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 599  8A21
 600  8A21 C5           15 push bc 												; Nº de entidades en curso.
 601  8A22
 602  8A22              ; Impacto ???
 603  8A22
 604  8A22 3A E2 88     	ld a,(Impacto)
 605  8A25 A7           	and a
 606  8A26 28 32        	jr z,8F
 607  8A28
 608  8A28              ; Hay Impacto en esta entidad.
 609  8A28
 610  8A28 21 55 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 611  8A2B 35           	dec (hl)
 612  8A2C 20 63        	jr nz,17F
 613  8A2E
 614  8A2E              ;! Velocidad de la animación de la explosión.
 615  8A2E
 616  8A2E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 617  8A30              ;														; _,(velocidad de la explosión).
 618  8A30
 619  8A30              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 620  8A30 18 FE        	jr $
 621  8A32
 622  8A32 CD C7 8D     	call Repone_datos_de_borrado
 623  8A35 CD 1F 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 624  8A38
 625  8A38
 626  8A38              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 627  8A38
 628  8A38 3A 04 89     	ld a,(Ctrl_2)
 629  8A3B CB 4F        	bit 1,a
 630  8A3D 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 631  8A3F
 632  8A3F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 633  8A3F
 634  8A3F 3A D1 88     	ld a,(CTRL_DESPLZ)
 635  8A42 A7           	and a
 636  8A43 20 08        	jr nz,18F
 637  8A45
 638  8A45 21 84 84     	ld hl,Indice_Explosion_2x2-2
 639  8A48 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 640  8A4B 18 06        	jr 19F
 641  8A4D
 642  8A4D 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 643  8A50 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 644  8A53
 645  8A53 21 04 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 646  8A56 CB CE        	set 1,(hl)
 647  8A58 18 22        	jr 7F
 648  8A5A
 649  8A5A              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 650  8A5A              ; _con las coordenadas de la entidad almacenada en DRAW.
 651  8A5A
 652  8A5A 3A 06 89     8 ld a,(Ctrl_1)
 653  8A5D CB 57        	bit 2,a
 654  8A5F 28 1B        	jr z,7F
 655  8A61
 656  8A61 2A 48 89     	ld hl,(Coordenadas_disparo_certero)
 657  8A64 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 658  8A65              ;														; E contiene la coordenada_X del disparo.
 659  8A65 2A CF 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 660  8A68              ;														; H FILA, (Coordenada_y de la entidad).
 661  8A68 A7           	and a
 662  8A69 ED 52        	sbc hl,de
 663  8A6B
 664  8A6B CD 71 92     	call Determina_resultado_comparativa
 665  8A6E
 666  8A6E 78           	ld a,b
 667  8A6F A7           	and a
 668  8A70 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 669  8A72
 670  8A72              ; ----- ----- -----
 671  8A72
 672  8A72 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 673  8A74 32 E2 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 674  8A77
 675  8A77 21 06 89     	ld hl,Ctrl_1
 676  8A7A CB 96        	res 2,(hl)
 677  8A7C
 678  8A7C CD EE 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 679  8A7F
 680  8A7F 3A F3 88     	ld a,(Ctrl_0)
 681  8A82 CB 67        	bit 4,a
 682  8A84 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 683  8A86
 684  8A86              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 685  8A86              ; [[[
 686  8A86 CD A1 8D     	call Detecta_disparo_entidad
 687  8A89              ; ]]]
 688  8A89
 689  8A89 CD 62 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 690  8A8C              ;	call Guarda_datos_de_borrado
 691  8A8C
 692  8A8C 21 F3 88     	ld hl,Ctrl_0
 693  8A8F CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 694  8A91
 695  8A91 CD CB 8C     17 call Store_Restore_cajas
 696  8A94
 697  8A94 C1           	pop bc
 698  8A95 10 8A        	djnz 15B
 699  8A97
 700  8A97              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 701  8A97              ; Hemos gestionado todas las unidades.
 702  8A97              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 703  8A97
 704  8A97              ;	ld hl,Ctrl_1
 705  8A97              ;	res 2,(hl)
 706  8A97
 707  8A97 CD C8 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 708  8A9A              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 709  8A9A              ;														; _ interrupción.
 710  8A9A              ; ----------------------------------------
 711  8A9A
 712  8A9A 3A 06 89     	ld a,(Ctrl_1) 										; Existe Loop?
 713  8A9D CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 714  8A9F CA B1 89     	jp z,Main
 715  8AA2
 716  8AA2 3A 53 89     	ld a,(Contador_de_frames)
 717  8AA5 47           	ld b,a
 718  8AA6 3A 57 89     	ld a,(Activa_recarga_cajas)
 719  8AA9 B8           	cp b
 720  8AAA 28 08        	jr z,20F
 721  8AAC
 722  8AAC 21 06 89     	ld hl,Ctrl_1
 723  8AAF CB E6        	set 4,(hl)
 724  8AB1 C3 B1 89     	jp Main
 725  8AB4
 726  8AB4 21 06 89     20 ld hl,Ctrl_1
 727  8AB7 CB A6        	res 4,(hl)
 728  8AB9
 729  8AB9 3A 53 89     	ld a,(Contador_de_frames)
 730  8ABC
 731  8ABC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 732  8ABC              ;! _ IMPREDECIBLE !!!!
 733  8ABC
 734  8ABC C6 0A        	add 10
 735  8ABE 32 56 89     	ld (Clock_Entidades_en_curso),a
 736  8AC1
 737  8AC1 C3 78 89     	jp 4B
 738  8AC4
 739  8AC4 C9           	ret
 740  8AC5
 741  8AC5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 742  8AC5
 743  8AC5              Gestiona_Amadeus
 744  8AC5
 745  8AC5 3E 04            ld a,4
 746  8AC7 D3 FE        	out ($fe),a											; Azul.
 747  8AC9
 748  8AC9 CD 2D 8D     	call Restore_Amadeus
 749  8ACC
 750  8ACC              ;! Activa/desactiva impacto con Amadeus.
 751  8ACC
 752  8ACC 3A E2 88     	ld a,(Impacto)
 753  8ACF A7           	and a
 754  8AD0 20 FE        	jr nz,$
 755  8AD2
 756  8AD2 CD 3F 8B     	call Mov_Amadeus
 757  8AD5
 758  8AD5 3A F3 88     	ld a,(Ctrl_0)
 759  8AD8 CB 67        	bit 4,a
 760  8ADA 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 761  8ADC
 762  8ADC CD 62 8B     	call Guarda_foto_entidad_a_pintar
 763  8ADF CD A7 8D     	call Guarda_datos_de_borrado_Amadeus
 764  8AE2
 765  8AE2 21 F3 88     14 ld hl,Ctrl_0
 766  8AE5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 767  8AE7
 768  8AE7 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 769  8AEA CD 3F 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 770  8AED
 771  8AED              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 772  8AED
 773  8AED              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 774  8AED
 775  8AED              ;	call Calcula_numero_de_disparotes
 776  8AED
 777  8AED C9           	ret
 778  8AEE
 779  8AEE              ; --------------------------------------------------------------------------------------------------------------
 780  8AEE              ;
 781  8AEE              ;	27/05/23
 782  8AEE
 783  8AEE              Mov_obj
 784  8AEE
 785  8AEE 3A 04 89     	ld a,(Ctrl_2)
 786  8AF1 CB 4F        	bit 1,a
 787  8AF3 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 788  8AF5
 789  8AF5              ; Explosión:
 790  8AF5
 791  8AF5 3A 05 89     	ld a,(Frames_explosion)
 792  8AF8 A7           	and a
 793  8AF9 20 11        	jr nz,4F
 794  8AFB
 795  8AFB              ; Una alimaña menos!!!!!!!!!1
 796  8AFB
 797  8AFB CD 48 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 798  8AFE 21 11 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 799  8B01 35           	dec (hl)
 800  8B02 21 12 89     	ld hl,Entidades_en_curso
 801  8B05 35           	dec (hl)
 802  8B06 21 10 89     	ld hl,Numero_de_entidades
 803  8B09 35           	dec (hl)
 804  8B0A 18 32        	jr 3F
 805  8B0C
 806  8B0C              ; -----
 807  8B0C
 808  8B0C              ;	`Movemos´ la explosión.
 809  8B0C
 810  8B0C 2A D7 88     4 ld hl,(Puntero_DESPLZ_der)
 811  8B0F 23           	inc hl
 812  8B10 23           	inc hl
 813  8B11 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 814  8B14 CD 7D 8C     	call Extrae_address
 815  8B17 22 CD 88     	ld (Puntero_objeto),hl
 816  8B1A
 817  8B1A 21 05 89     	ld hl,Frames_explosion
 818  8B1D 35           	dec (hl)
 819  8B1E
 820  8B1E              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 821  8B1E 18 1E        	jr 3F
 822  8B20
 823  8B20 AF           2 xor a
 824  8B21 32 F3 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 825  8B24
 826  8B24              ; Movemos Entidades malignas.
 827  8B24
 828  8B24 CD D4 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 829  8B27
 830  8B27 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 831  8B2A CB 67        	bit 4,a
 832  8B2C C8           	ret z
 833  8B2D
 834  8B2D              ; Ha habido desplazamiento de la entidad maligna.
 835  8B2D              ; Ha llegado a zona de AMADEUS ???
 836  8B2D
 837  8B2D 3A D0 88     	ld a,(Coordenada_y)
 838  8B30 FE 14        	cp $14
 839  8B32 D4 FF 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 840  8B35              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 841  8B35              ; ---------
 842  8B35
 843  8B35 CD 69 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 844  8B38 CD C7 8D     	call Repone_datos_de_borrado
 845  8B3B CD 1F 8C     	call Limpia_Variables_de_borrado
 846  8B3E
 847  8B3E C9           3 ret													; _de la misma.
 848  8B3F
 849  8B3F              ; --------------------------------------------------------------------------------------------------------------
 850  8B3F              ;
 851  8B3F              ;	29/1/23
 852  8B3F
 853  8B3F              Mov_Amadeus
 854  8B3F
 855  8B3F CD 6A 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 856  8B42
 857  8B42 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 858  8B45 CB 67        	bit 4,a
 859  8B47 C8           	ret z
 860  8B48
 861  8B48              ; ---------
 862  8B48
 863  8B48 CD 69 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 864  8B4B CD B7 8D     	call Repone_datos_de_borrado_Amadeus
 865  8B4E CD 1F 8C     	call Limpia_Variables_de_borrado
 866  8B51
 867  8B51 C9           	ret
 868  8B52
 869  8B52              ; -----------------------------------------------------------------------------------
 870  8B52
 871  8B52 CD 83 8C     Inicia_entidad	call Inicia_Puntero_objeto
 872  8B55 CD 79 99     	call Recompone_posicion_inicio
 873  8B58 CD 58 93     	call Draw
 874  8B5B CD A0 7F     	call Guarda_foto_registros
 875  8B5E              ;	call Guarda_datos_de_borrado
 876  8B5E CD CB 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 877  8B61 C9           	ret
 878  8B62
 879  8B62              ; --------------------------------------------------------------------------------------------------------------
 880  8B62              ;
 881  8B62              ;	31/08/23
 882  8B62              ;
 883  8B62              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 884  8B62              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 885  8B62
 886  8B62              Guarda_foto_entidad_a_pintar
 887  8B62
 888  8B62              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 889  8B62
 890  8B62 CD 58 93     	call Draw
 891  8B65 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 892  8B68 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 893  8B69
 894  8B69              ; --------------------------------------------------------------------------------------------------------------
 895  8B69              ;
 896  8B69              ;	19/9/23
 897  8B69
 898  8B69 21 C9 88     Prepara_var_pintado ld hl,Filas
 899  8B6C 11 E9 88     	ld de,Variables_de_pintado
 900  8B6F 01 08 00     	ld bc,8
 901  8B72 ED B0        	ldir
 902  8B74 C9           	ret
 903  8B75
 904  8B75              ; --------------------------------------------------------------------------------------------------------------
 905  8B75
 906  8B75 21 E9 88     Repone_pintar ld hl,Variables_de_pintado
 907  8B78 11 C9 88     	ld de,Filas
 908  8B7B 01 08 00     	ld bc,8
 909  8B7E ED B0        	ldir
 910  8B80 C9           	ret
 911  8B81
 912  8B81              ; *************************************************************************************************************************************************************
 913  8B81              ;
 914  8B81              ; 8/1/23
 915  8B81              ;
 916  8B81              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 917  8B81              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 918  8B81              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 919  8B81
 920  8B81              ; Destruye HL y DE !!!!!
 921  8B81
 922  8B81              Inicia_punteros_de_cajas
 923  8B81
 924  8B81 21 8C 85     	ld hl,Indice_de_cajas
 925  8B84 CD 7D 8C         call Extrae_address
 926  8B87 22 0A 89         ld (Puntero_store_caja),hl
 927  8B8A 21 8E 85     	ld hl,Indice_de_cajas+2
 928  8B8D 22 0E 89     	ld (Indice_restore_caja),hl
 929  8B90 CD 7D 8C     	call Extrae_address
 930  8B93 22 0C 89     	ld (Puntero_restore_caja),hl
 931  8B96 C9               ret
 932  8B97
 933  8B97              ; ---------------------------------------------------------------
 934  8B97              ;
 935  8B97              ;	9/8/23
 936  8B97              ;
 937  8B97              ;	Inicialización y gestión de álbumes de fotos y cajas.
 938  8B97
 939  8B97              Inicia_punteros_de_albumes_y_malotes
 940  8B97
 941  8B97 21 EC 84     	ld hl,Indice_album_de_fotos
 942  8B9A 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
 943  8B9D CD 7D 8C     	call Extrae_address
 944  8BA0 22 1E 89     	ld (Stack_snapshot),hl
 945  8BA3
 946  8BA3 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 947  8BA6 22 36 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 948  8BA9 CD 7D 8C     	call Extrae_address
 949  8BAC 22 20 89     	ld (Stack_snapshot_disparos),hl
 950  8BAF
 951  8BAF 21 FC 84     	ld hl,Indice_End_Snapshot
 952  8BB2 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
 953  8BB5 CD 7D 8C     	call Extrae_address
 954  8BB8 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
 955  8BBB
 956  8BBB 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 957  8BBE 22 3A 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 958  8BC1 CD 7D 8C     	call Extrae_address
 959  8BC4 22 3E 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 960  8BC7
 961  8BC7 C9           	ret
 962  8BC8
 963  8BC8              ;	23/9/23
 964  8BC8
 965  8BC8              Avanza_puntero_de_album_de_fotos_y_malotes
 966  8BC8
 967  8BC8              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 968  8BC8
 969  8BC8              ; Estamos en el último álbum del índice???.
 970  8BC8
 971  8BC8 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
 972  8BCB 01 F2 84     	ld bc,Indice_album_de_fotos+6
 973  8BCE A7           	and a
 974  8BCF ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 975  8BD1 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 976  8BD3
 977  8BD3 21 06 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 978  8BD6 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 979  8BD8 76           	halt
 980  8BD9 C9           	ret
 981  8BDA
 982  8BDA 2A 34 89     1 ld hl,(Puntero_indice_album_de_fotos)
 983  8BDD 23           	inc hl
 984  8BDE 23           	inc hl
 985  8BDF 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
 986  8BE2 CD 7D 8C     	call Extrae_address
 987  8BE5 22 1E 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 988  8BE8
 989  8BE8 2A 38 89     	ld hl,(Puntero_indice_End_Snapshot)
 990  8BEB 23           	inc hl
 991  8BEC 23           	inc hl
 992  8BED 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
 993  8BF0 CD 7D 8C     	call Extrae_address
 994  8BF3 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
 995  8BF6
 996  8BF6 C9           	ret
 997  8BF7
 998  8BF7              ; *************************************************************************************************************************************************************
 999  8BF7              ;
1000  8BF7              ; 8/1/23
1001  8BF7              ;
1002  8BF7              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1003  8BF7
1004  8BF7 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1005  8BFA 22 41 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1006  8BFD C9           	ret
1007  8BFE 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1008  8C01 22 43 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1009  8C04 C9           	ret
1010  8C05
1011  8C05              ; -------------------------------------------------------------------------------------------------------------
1012  8C05              ;
1013  8C05              ; 21/9/23
1014  8C05              ;
1015  8C05
1016  8C05              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1017  8C05
1018  8C05              Limpia_album_Amadeus
1019  8C05
1020  8C05 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1021  8C08 7E           	ld a,(hl)
1022  8C09 A7           	and a
1023  8C0A C8           	ret z
1024  8C0B
1025  8C0B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1026  8C0E 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1027  8C11 01 0B 00     	ld bc,11
1028  8C14 AF           	xor a
1029  8C15 77           	ld (hl),a
1030  8C16 ED B0        	ldir
1031  8C18
1032  8C18 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1033  8C1B 22 26 89     	ld (End_Snapshot_Amadeus),hl
1034  8C1E
1035  8C1E C9           	ret
1036  8C1F
1037  8C1F 21 E3 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1038  8C22 11 E4 88     	ld de,Variables_de_borrado+1
1039  8C25 01 05 00     	ld bc,5
1040  8C28 AF           	xor a
1041  8C29 77           	ld (hl),a
1042  8C2A ED B0        	ldir
1043  8C2C C9           	ret
1044  8C2D
1045  8C2D              ; -------------------------------------------------------------------------------------------------------------
1046  8C2D              ;
1047  8C2D              ; 8/9/23
1048  8C2D              ;
1049  8C2D
1050  8C2D              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1051  8C2D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1052  8C2D
1053  8C2D              Calcula_numero_de_malotes
1054  8C2D
1055  8C2D 21 00 70     	ld hl,Album_de_fotos
1056  8C30 EB           	ex de,hl
1057  8C31 2A 22 89     	ld hl,(End_Snapshot)
1058  8C34
1059  8C34 7C           	ld a,h
1060  8C35 A7           	and a
1061  8C36 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1062  8C38
1063  8C38 06 00        4 ld b,0
1064  8C3A 7D           	ld a,l
1065  8C3B 93           	sub e
1066  8C3C 28 07        	jr z,1F
1067  8C3E
1068  8C3E              ; Nº de malotes no es "0".
1069  8C3E
1070  8C3E D6 06        2 sub 6
1071  8C40 04           	inc b
1072  8C41 A7           	and a
1073  8C42 20 FA        	jr nz,2B
1074  8C44 78           	ld a,b
1075  8C45
1076  8C45 32 13 89     1 ld (Numero_de_malotes),a
1077  8C48 C9           	ret
1078  8C49
1079  8C49              ; -------------------------------------------------------------------------------------------------------------
1080  8C49              ;
1081  8C49              ; 8/9/23
1082  8C49              ;
1083  8C49
1084  8C49              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1085  8C49              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1086  8C49
1087  8C49              Calcula_malotes_Amadeus
1088  8C49
1089  8C49 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1090  8C4C EB           	ex de,hl
1091  8C4D 2A 26 89     	ld hl,(End_Snapshot_Amadeus)
1092  8C50
1093  8C50 7C           	ld a,h
1094  8C51 A7           	and a
1095  8C52 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1096  8C54
1097  8C54 06 00        	ld b,0
1098  8C56 7D           	ld a,l
1099  8C57 93           	sub e
1100  8C58 28 07        	jr z,1F
1101  8C5A
1102  8C5A              ; Nº de malotes no es "0".
1103  8C5A
1104  8C5A D6 06        2 sub 6
1105  8C5C 04           	inc b
1106  8C5D A7           	and a
1107  8C5E 20 FA        	jr nz,2B
1108  8C60 78           	ld a,b
1109  8C61
1110  8C61 32 13 89     1 ld (Numero_de_malotes),a
1111  8C64 C9           	ret
1112  8C65
1113  8C65              ; -------------------------------------------------------------------------------------------------------------
1114  8C65              ;
1115  8C65              ; 28/2/23
1116  8C65              ;
1117  8C65
1118  8C65              Calcula_numero_de_disparotes
1119  8C65
1120  8C65 21 50 71     	ld hl,Album_de_fotos_disparos
1121  8C68 EB           	ex de,hl
1122  8C69 2A 3E 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1123  8C6C
1124  8C6C 06 00        	ld b,0
1125  8C6E 7D           	ld a,l
1126  8C6F 93           	sub e
1127  8C70 28 07        	jr z,1F
1128  8C72
1129  8C72              ; Nº de malotes no es "0".
1130  8C72
1131  8C72 D6 06        2 sub 6
1132  8C74 04           	inc b
1133  8C75 A7           	and a
1134  8C76 20 FA        	jr nz,2B
1135  8C78 78           	ld a,b
1136  8C79
1137  8C79 32 40 89     1 ld (Numero_de_disparotes),a
1138  8C7C C9           	ret
1139  8C7D
1140  8C7D              ; *************************************************************************************************************************************************************
1141  8C7D              ;
1142  8C7D              ; 20/10/22
1143  8C7D              ;
1144  8C7D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1145  8C7D              ;
1146  8C7D              ; Destruye el puntero y DE !!!!!
1147  8C7D
1148  8C7D 5E           Extrae_address ld e,(hl)
1149  8C7E 23           	inc hl
1150  8C7F 56           	ld d,(hl)
1151  8C80 2B           	dec hl
1152  8C81 EB           	ex de,hl
1153  8C82 C9           	ret
1154  8C83
1155  8C83              ; *************************************************************************************************************************************************************
1156  8C83              ;
1157  8C83              ;	7/2/23
1158  8C83              ;
1159  8C83              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1160  8C83              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1161  8C83              ;
1162  8C83              ;   Destruye HL y BC !!!!!,
1163  8C83              ;
1164  8C83              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1165  8C83              ;					"0" ..... Izquierda.
1166  8C83
1167  8C83              Inicia_Puntero_objeto
1168  8C83
1169  8C83 3A DD 88     	ld a,(Cuad_objeto)
1170  8C86 E6 01        	and 1
1171  8C88 F5           	push af
1172  8C89 CC A7 8C     	call z,Inicia_puntero_objeto_izq
1173  8C8C F1           	pop af
1174  8C8D 28 2B        	jr z,1F
1175  8C8F CD 94 8C     	call Inicia_puntero_objeto_der
1176  8C92 18 26        	jr 1F
1177  8C94
1178  8C94              ; Arrancamos desde la parte izquierda de la pantalla.
1179  8C94              ; Iniciamos (Indice_Sprite_der).
1180  8C94
1181  8C94 2A D3 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1182  8C97 22 D7 88     	ld (Puntero_DESPLZ_der),hl
1183  8C9A CD 7D 8C     	call Extrae_address
1184  8C9D 22 CD 88     	ld (Puntero_objeto),hl
1185  8CA0
1186  8CA0 2A D5 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1187  8CA3 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
1188  8CA6 C9           	ret
1189  8CA7
1190  8CA7              ; Arrancamos desde la parte derecha de la pantalla.
1191  8CA7              ; Iniciamos (Indice_Sprite_izq).
1192  8CA7
1193  8CA7 2A D5 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1194  8CAA 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
1195  8CAD CD 7D 8C     	call Extrae_address
1196  8CB0 22 CD 88     	ld (Puntero_objeto),hl
1197  8CB3
1198  8CB3 2A D3 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1199  8CB6 22 D7 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1200  8CB9 C9           	ret
1201  8CBA
1202  8CBA              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1203  8CBA
1204  8CBA 21 40 83     1 ld hl,Amadeus
1205  8CBD ED 4B CD 88  	ld bc,(Puntero_objeto)
1206  8CC1 B7 ED 42     	sub hl,bc
1207  8CC4 C0           	ret nz
1208  8CC5 21 F3 88     	ld hl,Ctrl_0
1209  8CC8 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1210  8CCA C9           	ret 												; _de nuestra nave en los extremos.
1211  8CCB
1212  8CCB              ; *************************************************************************************************************************************************************
1213  8CCB              ;
1214  8CCB              ;	14/5/23
1215  8CCB              ;
1216  8CCB              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1217  8CCB              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1218  8CCB
1219  8CCB              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1220  8CCB              ;	_de la 2ª y 3ª entidad respectivamente.
1221  8CCB
1222  8CCB              Store_Restore_cajas
1223  8CCB
1224  8CCB E5           	push hl
1225  8CCC D5           	push de
1226  8CCD C5            	push bc
1227  8CCE
1228  8CCE              ;	STORE !!!!!
1229  8CCE              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1230  8CCE
1231  8CCE 21 C9 88     	ld hl,Filas
1232  8CD1 ED 5B 0A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1233  8CD5 01 3D 00     	ld bc,61
1234  8CD8 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1235  8CDA
1236  8CDA              ; 	Entidad_sospechosa. 20/4/23
1237  8CDA
1238  8CDA 3A E2 88     	ld a,(Impacto)
1239  8CDD A7           	and a
1240  8CDE 28 0C        	jr z,1F
1241  8CE0
1242  8CE0 2A 0A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1243  8CE3 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1244  8CE6 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1245  8CE7 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1246  8CE9 22 46 89     	ld (Entidad_sospechosa_de_colision),hl
1247  8CEC
1248  8CEC              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1249  8CEC
1250  8CEC 2A 0C 89     1 ld hl,(Puntero_restore_caja)
1251  8CEF 7E           	ld a,(hl)
1252  8CF0 A7           	and a
1253  8CF1 F5           	push af
1254  8CF2 28 08        	jr z,2F
1255  8CF4
1256  8CF4 11 C9 88     	ld de,Filas
1257  8CF7 01 3D 00     	ld bc,61
1258  8CFA ED B0        	ldir
1259  8CFC
1260  8CFC CD 18 8D     2 call Incrementa_punteros_de_cajas
1261  8CFF
1262  8CFF F1           	pop af
1263  8D00 28 EA        	jr z,1B
1264  8D02
1265  8D02 C1           	pop bc
1266  8D03 D1           	pop de
1267  8D04 E1           	pop hl
1268  8D05
1269  8D05 C9           	ret
1270  8D06
1271  8D06              ; **************************************************************************************************
1272  8D06              ;
1273  8D06              ;	12/05/23
1274  8D06              ;
1275  8D06              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1276  8D06
1277  8D06 E5           Restore_entidad push hl
1278  8D07 D5           	push de
1279  8D08 C5            	push bc
1280  8D09
1281  8D09 2A 0A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1282  8D0C 11 C9 88     	ld de,Filas
1283  8D0F 01 3D 00     	ld bc,61
1284  8D12 ED B0        	ldir
1285  8D14
1286  8D14 C1           	pop bc
1287  8D15 D1           	pop de
1288  8D16 E1           	pop hl
1289  8D17 C9           	ret
1290  8D18
1291  8D18              ; **************************************************************************************************
1292  8D18              ;
1293  8D18              ;	08/05/23
1294  8D18              ;
1295  8D18              ;	Incrementamos los dos punteros de entidades. (+1).
1296  8D18
1297  8D18              Incrementa_punteros_de_cajas
1298  8D18
1299  8D18 2A 0C 89     	ld hl,(Puntero_restore_caja)
1300  8D1B 22 0A 89     	ld (Puntero_store_caja),hl
1301  8D1E 2A 0E 89     	ld hl,(Indice_restore_caja)
1302  8D21 23           	inc hl
1303  8D22 23           	inc hl
1304  8D23 22 0E 89     	ld (Indice_restore_caja),hl
1305  8D26 CD 7D 8C         call Extrae_address
1306  8D29 22 0C 89         ld (Puntero_restore_caja),hl
1307  8D2C C9               ret
1308  8D2D
1309  8D2D              ; **************************************************************************************************
1310  8D2D              ;
1311  8D2D              ;	25/01/23
1312  8D2D              ;
1313  8D2D              ;	Restore_Amadeus
1314  8D2D              ;
1315  8D2D              ;	Cargamos en DRAW los parámetros de Amadeus.
1316  8D2D              ;
1317  8D2D
1318  8D2D E5           Restore_Amadeus	push hl
1319  8D2E D5           	push de
1320  8D2F C5            	push bc
1321  8D30 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1322  8D33 11 C9 88     	ld de,Filas
1323  8D36 01 3D 00     	ld bc,61
1324  8D39 ED B0        	ldir
1325  8D3B C1           	pop bc
1326  8D3C D1           	pop de
1327  8D3D E1           	pop hl
1328  8D3E C9           	ret
1329  8D3F
1330  8D3F              ; *************************************************************************************************************************************************************
1331  8D3F              ;
1332  8D3F              ;	29/04/23
1333  8D3F              ;
1334  8D3F              ;	Store_Amadeus
1335  8D3F              ;
1336  8D3F              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1337  8D3F              ;
1338  8D3F              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1339  8D3F              ;
1340  8D3F              ;	DESTRUYE: HL y BC y DE.
1341  8D3F
1342  8D3F 21 C9 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1343  8D42 01 3D 00     	ld bc,61
1344  8D45 ED B0        	ldir
1345  8D47 C9           	ret
1346  8D48
1347  8D48              ; -----------------------------------------------------------
1348  8D48              ;
1349  8D48              ;	27/04/23
1350  8D48              ;
1351  8D48              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1352  8D48              ;
1353  8D48              ;	Destruye: HL,BC,DE,A
1354  8D48
1355  8D48 21 C9 88     Borra_datos_entidad ld hl,Filas
1356  8D4B 01 3C 00     	ld bc,60
1357  8D4E AF           	xor a
1358  8D4F 77           	ld (hl),a
1359  8D50 11 CA 88     	ld de,Filas+1
1360  8D53 ED B0        	ldir
1361  8D55 C9           	ret
1362  8D56
1363  8D56              ; -----------------------------------------------------------
1364  8D56
1365  8D56              ; Teclado.
1366  8D56
1367  8D56 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1368  8D58 DB FE        	in a,($fe)
1369  8D5A E6 01        	and $01
1370  8D5C 28 02        	jr z,1f
1371  8D5E 18 F6        	jr Pulsa_ENTER
1372  8D60 C9           1 ret
1373  8D61
1374  8D61              ; **************************************************************************************************
1375  8D61              ;
1376  8D61              ; Temporización.
1377  8D61
1378  8D61              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1379  8D61              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1380  8D61              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1381  8D61              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1382  8D61
1383  8D61              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1384  8D61              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1385  8D61              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1386  8D61
1387  8D61              ; A partir de $4f61 no hace falta DELAY.
1388  8D61
1389  8D61              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1390  8D61
1391  8D61 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1392  8D64 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1393  8D65 78           	LD A,B
1394  8D66 A7           	AND A
1395  8D67 20 FB        	JR NZ,wait
1396  8D69 C9           	RET
1397  8D6A
1398  8D6A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1399  8D6A              ;
1400  8D6A              ;	5/3/23
1401  8D6A              ;
1402  8D6A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1403  8D6A
1404  8D6A              Movimiento_Amadeus
1405  8D6A
1406  8D6A              ; Disparo.
1407  8D6A
1408  8D6A 3A 58 89     	ld a,(Disparo_Amadeus)
1409  8D6D A7           	and a
1410  8D6E 20 02        	jr nz,1F
1411  8D70 18 15        	jr 2F
1412  8D72
1413  8D72 3E F7        1 ld a,$f7													; "5" para disparar.
1414  8D74 DB FE        	in a,($fe)
1415  8D76 E6 10        	and $10
1416  8D78
1417  8D78 F5           	push af
1418  8D79 CC 62 8E     	call z,Genera_disparo
1419  8D7C F1           	pop af
1420  8D7D 20 08        	jr nz,2F
1421  8D7F
1422  8D7F 3A 58 89     	ld a,(Disparo_Amadeus)
1423  8D82 EE 01        	xor 1
1424  8D84 32 58 89     	ld (Disparo_Amadeus),a
1425  8D87
1426  8D87 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1427  8D89 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1428  8D8B E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1429  8D8D CC 33 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1430  8D90
1431  8D90 3E F7        	ld a,$f7
1432  8D92 DB FE        	in a,($fe)
1433  8D94 E6 01        	and $01
1434  8D96 C8           	ret z
1435  8D97
1436  8D97 3E F7        	ld a,$f7
1437  8D99 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1438  8D9B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1439  8D9D CC 15 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1440  8DA0 C9           	ret
1441  8DA1
1442  8DA1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1443  8DA1              ;
1444  8DA1              ;	Rutina provisional para que los malotes cagen balas.
1445  8DA1
1446  8DA1              Detecta_disparo_entidad
1447  8DA1
1448  8DA1 3A 5B 89     	ld a,(Disparo_entidad)
1449  8DA4 A7           	and a
1450  8DA5 C8           	ret z
1451  8DA6
1452  8DA6              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1453  8DA6
1454  8DA6              ;	ld a,$7f				; Detecta SPACE.
1455  8DA6              ;	in a,($fe)
1456  8DA6              ;	and 1
1457  8DA6              ;	ret nz
1458  8DA6
1459  8DA6              ;	call Genera_disparo
1460  8DA6 C9           	ret
1461  8DA7
1462  8DA7              ; ----------------------------------------------------------------------
1463  8DA7              ;
1464  8DA7              ;	8/9/23
1465  8DA7
1466  8DA7 2A 26 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1467  8DAA 2B            	dec hl
1468  8DAB 7E           	ld a,(hl)
1469  8DAC A7           	and a
1470  8DAD C8           	ret z										; Salimos si es álbum está vacío.
1471  8DAE
1472  8DAE 11 E8 88     	ld de,Variables_de_borrado+5
1473  8DB1 01 06 00     	ld bc,6
1474  8DB4 ED B8        	lddr
1475  8DB6 C9           	ret
1476  8DB7
1477  8DB7              ; ----------------------------------------------------------------------
1478  8DB7              ;
1479  8DB7              ;	9/9/23
1480  8DB7
1481  8DB7              Repone_datos_de_borrado_Amadeus
1482  8DB7
1483  8DB7 21 E3 88     	ld hl,Variables_de_borrado
1484  8DBA 11 A0 72     	ld de,Album_de_fotos_Amadeus
1485  8DBD 01 06 00     	ld bc,6
1486  8DC0 ED B0        	ldir
1487  8DC2
1488  8DC2 EB           	ex de,hl
1489  8DC3 22 26 89     	ld (End_Snapshot_Amadeus),hl
1490  8DC6
1491  8DC6 C9           	ret
1492  8DC7
1493  8DC7              ; ----------------------------------------------------------------------
1494  8DC7              ;
1495  8DC7              ;	18/9/23
1496  8DC7              ;
1497  8DC7
1498  8DC7              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1499  8DC7              ;	_ Album_de_fotos correspondiente.
1500  8DC7
1501  8DC7              ;	DI.
1502  8DC7
1503  8DC7              Repone_datos_de_borrado
1504  8DC7
1505  8DC7 ED 5B 1E 89  	ld de,(Stack_snapshot)
1506  8DCB 21 E3 88     	ld hl,Variables_de_borrado
1507  8DCE 01 06 00     	ld bc,6
1508  8DD1 ED B0        	ldir
1509  8DD3
1510  8DD3 EB           	ex de,hl
1511  8DD4 22 1E 89     	ld (Stack_snapshot),hl
1512  8DD7
1513  8DD7 C9           	ret
1514  8DD8
1515  8DD8              ; ----------------------------------------------------------------------
1516  8DD8              ;
1517  8DD8              ;	11/8/23
1518  8DD8
1519  8DD8              Gestiona_entidades
1520  8DD8
1521  8DD8              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1522  8DD8              ; _ , no gestionamos los álbumes de fotos.
1523  8DD8
1524  8DD8 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
1525  8DDB 01 EC 84     	ld bc,Indice_album_de_fotos
1526  8DDE A7           	and a
1527  8DDF ED 42        	sbc hl,bc
1528  8DE1
1529  8DE1              ;	jr z,$
1530  8DE1 C8           	ret z
1531  8DE2
1532  8DE2              ;	call Extrae_foto_disparos
1533  8DE2              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1534  8DE2
1535  8DE2 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1536  8DE5
1537  8DE5              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1538  8DE5
1539  8DE5 3A 06 89     	ld a,(Ctrl_1)
1540  8DE8 CB 6F        	bit 5,a
1541  8DEA 20 22        	jr nz,1F
1542  8DEC
1543  8DEC              ; No hemos terminado de guardar el último FRAME.
1544  8DEC
1545  8DEC 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
1546  8DEF 2B           	dec hl
1547  8DF0 2B           	dec hl
1548  8DF1 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
1549  8DF4
1550  8DF4 2A 38 89     	ld hl,(Puntero_indice_End_Snapshot)
1551  8DF7 2B           	dec hl
1552  8DF8 2B           	dec hl
1553  8DF9 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
1554  8DFC CD 7D 8C     	call Extrae_address
1555  8DFF 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
1556  8E02
1557  8E02 CD 7D 8C     	call Extrae_address
1558  8E05
1559  8E05              ; Esta vacío este album???
1560  8E05
1561  8E05 24           	inc h
1562  8E06 25           	dec h
1563  8E07 28 05        	jr z,1F
1564  8E09
1565  8E09              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1566  8E09
1567  8E09 22 1E 89     	ld (Stack_snapshot),hl
1568  8E0C 18 09        	jr 2F
1569  8E0E
1570  8E0E              ; FRAME completo.
1571  8E0E
1572  8E0E 2A 34 89     1 ld hl,(Puntero_indice_album_de_fotos)
1573  8E11 CD 7D 8C     	call Extrae_address
1574  8E14 22 1E 89     	ld (Stack_snapshot),hl
1575  8E17
1576  8E17              ;	En este punto:
1577  8E17
1578  8E17              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1579  8E17              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1580  8E17
1581  8E17 21 06 89     2 ld hl,Ctrl_1
1582  8E1A CB AE        	res 5,(hl)
1583  8E1C
1584  8E1C C9           	ret
1585  8E1D
1586  8E1D              ; -----------------------------------------------------------------------------------
1587  8E1D
1588  8E1D              Pinta_Amadeus
1589  8E1D
1590  8E1D 3E 06        	ld a,6
1591  8E1F D3 FE            out ($fe),a										; Amarillo
1592  8E21
1593  8E21 CD 49 8C        	call Calcula_malotes_Amadeus
1594  8E24 CD E8 96     	call Extrae_foto_Amadeus
1595  8E27 CD 05 8C     	call Limpia_album_Amadeus
1596  8E2A
1597  8E2A C9           	ret
1598  8E2B
1599  8E2B              Pinta_entidades
1600  8E2B
1601  8E2B 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
1602  8E2E 01 EC 84     	ld bc,Indice_album_de_fotos
1603  8E31 A7           	and a
1604  8E32 ED 42        	sbc hl,bc
1605  8E34
1606  8E34              ;	jr z,$
1607  8E34 C8           	ret z
1608  8E35
1609  8E35              ; Pintamos siempre que esté completo Album_de_fotos.
1610  8E35
1611  8E35 CD 2D 8C     	call Calcula_numero_de_malotes
1612  8E38 CD 66 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1613  8E3B
1614  8E3B C9           	ret
1615  8E3C
1616  8E3C              ; -----------------------------------------------------------------------------------
1617  8E3C
1618  8E3C              Actualiza_relojes
1619  8E3C
1620  8E3C 21 53 89     	ld hl,Contador_de_frames
1621  8E3F 7E           	ld a,(hl)
1622  8E40 FE FF        	cp $ff
1623  8E42 20 04        	jr nz,1F
1624  8E44 34           	inc (hl)
1625  8E45 21 54 89     	ld hl,Contador_de_frames_2
1626  8E48 34           1 inc (hl)											; 0 - 255
1627  8E49 C9           	ret
1628  8E4A
1629  8E4A              ; ---------------------------------------------------------------
1630  8E4A              ;
1631  8E4A              ;	27/9/23
1632  8E4A
1633  8E4A              Guarda_parametros_DRAW
1634  8E4A
1635  8E4A 21 C9 88     	ld hl,Filas
1636  8E4D 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1637  8E50 01 3D 00     	ld bc,61
1638  8E53 ED B0        	ldir
1639  8E55 C9           	ret
1640  8E56
1641  8E56              Recupera_parametros_DRAW
1642  8E56
1643  8E56 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1644  8E59 11 C9 88     	ld de,Filas
1645  8E5C 01 3D 00     	ld bc,61
1646  8E5F ED B0        	ldir
1647  8E61 C9           	ret
1648  8E62
1649  8E62              ; ---------------------------------------------------------------
1650  8E62
1651  8E62
1652  8E62              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E62              ; ******************************************************************************************************************************************************************************************
   2+ 8E62              ;
   3+ 8E62              ;   21/07/23
   4+ 8E62              ;
   5+ 8E62              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E62              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E62              ;
   8+ 8E62              ;
   9+ 8E62              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E62              ;
  11+ 8E62              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E62              ;               _ hacen las entidades hacia abajo.
  13+ 8E62              ;
  14+ 8E62              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E62              ;
  16+ 8E62              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E62              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E62              ;
  19+ 8E62              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E62              ;           _ la bala.
  21+ 8E62              ;
  22+ 8E62              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E62              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E62              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E62              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E62              ;           _ en el momento de generarse la bala)).
  27+ 8E62
  28+ 8E62              Genera_disparo
  29+ 8E62
  30+ 8E62              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E62              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E62              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E62              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E62              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E62              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E62              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E62
  38+ 8E62              ; Exclusiones:
  39+ 8E62
  40+ 8E62 3A E1 88         ld a,(Vel_down)
  41+ 8E65 47               ld b,a
  42+ 8E66 3A 52 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E69 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E6A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E6B 3A 00 89         ld a,(Columnas)
  46+ 8E6E 47               ld b,a
  47+ 8E6F 3A CA 88         ld a,(Columns)
  48+ 8E72 B8               cp b
  49+ 8E73 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E74
  51+ 8E74              ; ----- ----- -----
  52+ 8E74
  53+ 8E74 3A F3 88         ld a,(Ctrl_0)
  54+ 8E77 CB 77            bit 6,a
  55+ 8E79 20 06            jr nz,14F
  56+ 8E7B
  57+ 8E7B 3A D0 88         ld a,(Coordenada_y)
  58+ 8E7E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E80 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E81
  61+ 8E81 21 00 80     14 ld hl,Indice_disparo
  62+ 8E84 3A D1 88         ld a,(CTRL_DESPLZ)
  63+ 8E87 4F               ld c,a
  64+ 8E88 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E8A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E8A              ;                                            ""        ""       "f9", B="1"
  67+ 8E8A              ;                                            ""        ""       "fb", B="2"
  68+ 8E8A              ;                                            ""        ""       "fb", B="3"
  69+ 8E8A A7               and a
  70+ 8E8B 28 10            jr z,1F
  71+ 8E8D E6 01            and 1
  72+ 8E8F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E90
  74+ 8E90 79               ld a,c
  75+ 8E91 16 F9            ld d,$f9
  76+ 8E93 23           2 inc hl
  77+ 8E94 23               inc hl
  78+ 8E95 04               inc b
  79+ 8E96 BA               cp d
  80+ 8E97 28 04            jr z,1F
  81+ 8E99 14               inc d
  82+ 8E9A 14               inc d
  83+ 8E9B 18 F6            jr 2B
  84+ 8E9D
  85+ 8E9D CD 7D 8C     1 call Extrae_address
  86+ 8EA0 E5               push hl
  87+ 8EA1 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EA3 DD 21 2E 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EA7
  90+ 8EA7              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EA7              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EA7
  93+ 8EA7 3A F3 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EAA CB 77            bit 6,a
  95+ 8EAC 20 04            jr nz,19F
  96+ 8EAE
  97+ 8EAE AF               xor a
  98+ 8EAF 32 5B 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EB2
 100+ 8EB2 3A DD 88     19 ld a,(Cuad_objeto)
 101+ 8EB5 FE 02            cp 2
 102+ 8EB7 38 66            jr c,3F
 103+ 8EB9 28 64            jr z,3F
 104+ 8EBB
 105+ 8EBB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EBB
 107+ 8EBB E6 01            and 1
 108+ 8EBD 28 30            jr z,4F
 109+ 8EBF
 110+ 8EBF              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EBF              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EBF              ;
 113+ 8EBF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EBF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EBF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EBF
 117+ 8EBF 2A CB 88     	ld hl,(Posicion_actual)
 118+ 8EC2
 119+ 8EC2              ;   Amadeus o entidad ???.
 120+ 8EC2
 121+ 8EC2 3A F3 88         ld a,(Ctrl_0)
 122+ 8EC5 CB 77            bit 6,a
 123+ 8EC7 28 0A            jr z,8F
 124+ 8EC9
 125+ 8EC9              ; 	Dispara Amadeus.
 126+ 8EC9
 127+ 8EC9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ECB CD 57 96         call PreviousScan
 129+ 8ECE CD 57 96         call PreviousScan
 130+ 8ED1
 131+ 8ED1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8ED1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8ED1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8ED1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8ED1
 136+ 8ED1 18 11            jr 10F
 137+ 8ED3
 138+ 8ED3              ; 	Dispara Entidad.
 139+ 8ED3
 140+ 8ED3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8ED6              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8ED6
 143+ 8ED6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8ED6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8ED6
 146+ 8ED6 C5               push bc
 147+ 8ED7 06 10            ld b,16
 148+ 8ED9 CD 48 96     9 call NextScan
 149+ 8EDC 10 FB            djnz 9B
 150+ 8EDE C1               pop bc
 151+ 8EDF CD 49 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EE2 18 06            jr 17F
 153+ 8EE4
 154+ 8EE4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EE4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EE4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EE4
 159+ 8EE4 CD 49 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EE7 CD BE 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EEA              ;                                                      ; _al generar el disparo.
 162+ 8EEA
 163+ 8EEA              ; 	LLegados a este punto tendremos:
 164+ 8EEA              ;
 165+ 8EEA              ;       Puntero_objeto_disparo en IY.
 166+ 8EEA              ;       Rutinas_de_impresion en IX.
 167+ 8EEA              ;       Puntero_de_impresion en HL.
 168+ 8EEA              ;       Impacto/Dirección en BC.
 169+ 8EEA
 170+ 8EEA CD 51 8F     17 call Almacena_disparo
 171+ 8EED 18 52            jr 6F                                             ; RET.
 172+ 8EEF
 173+ 8EEF              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EEF              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EEF              ;
 176+ 8EEF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EEF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EEF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EEF
 180+ 8EEF 2A CB 88     4 ld hl,(Posicion_actual)
 181+ 8EF2
 182+ 8EF2              ;   Amadeus o entidad ???.
 183+ 8EF2
 184+ 8EF2 3A F3 88         ld a,(Ctrl_0)
 185+ 8EF5 CB 77            bit 6,a
 186+ 8EF7 28 0A            jr z,11F
 187+ 8EF9
 188+ 8EF9              ; 	Dispara Amadeus.
 189+ 8EF9
 190+ 8EF9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EFB CD 57 96         call PreviousScan
 192+ 8EFE CD 57 96         call PreviousScan
 193+ 8F01
 194+ 8F01              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F01              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F01              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F01              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F01
 199+ 8F01 18 11            jr 13F
 200+ 8F03
 201+ 8F03              ; 	Dispara Entidad.
 202+ 8F03
 203+ 8F03 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F06              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F06
 206+ 8F06              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F06              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F06
 209+ 8F06 C5               push bc
 210+ 8F07 06 10            ld b,16
 211+ 8F09 CD 48 96     12 call NextScan
 212+ 8F0C 10 FB            djnz 12B
 213+ 8F0E C1               pop bc
 214+ 8F0F
 215+ 8F0F CD 42 8F         call Ajusta_disparo_parte_derecha
 216+ 8F12 18 06            jr 18F
 217+ 8F14
 218+ 8F14              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F14              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F14              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F14              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F14
 223+ 8F14 CD 42 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F17 CD BE 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F1A              ;                                                       ; _al generar el disparo.
 226+ 8F1A
 227+ 8F1A              ; LLegados a este punto tendremos:
 228+ 8F1A              ;
 229+ 8F1A              ;       Puntero_objeto_disparo en IY.
 230+ 8F1A              ;       Rutinas_de_impresion en IX.
 231+ 8F1A              ;       Puntero_de_impresion en HL.
 232+ 8F1A              ;       Impacto/Dirección en BC.
 233+ 8F1A
 234+ 8F1A CD 51 8F     18 call Almacena_disparo
 235+ 8F1D 18 22            jr 6F                                               ; RET.
 236+ 8F1F
 237+ 8F1F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F1F
 239+ 8F1F 28 11        3 jr z,5F
 240+ 8F21
 241+ 8F21              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F21              ;
 243+ 8F21              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F21              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F21              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F21              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F21
 248+ 8F21              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F21              ;	   ""        ""       "f9", B="1"
 250+ 8F21              ;	   ""        ""       "fb", B="2"
 251+ 8F21              ; 	   ""        ""       "fb", B="3"
 252+ 8F21
 253+ 8F21 2A CB 88     	ld hl,(Posicion_actual)
 254+ 8F24 CD 48 96     	call NextScan
 255+ 8F27
 256+ 8F27              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F27              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F27              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F27              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F27
 261+ 8F27 CD 49 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F2A
 263+ 8F2A              ; 	No se produce impacto. B="$80"
 264+ 8F2A              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F2A
 266+ 8F2A 01 80 80         ld bc,$8080
 267+ 8F2D
 268+ 8F2D              ; 	LLegados a este punto tendremos:
 269+ 8F2D              ;
 270+ 8F2D              ;       Puntero_objeto_disparo en IY.
 271+ 8F2D              ;       Rutinas_de_impresion en IX.
 272+ 8F2D              ;       Puntero_de_impresion en HL.
 273+ 8F2D              ;       Impacto/Dirección en BC.
 274+ 8F2D
 275+ 8F2D CD 51 8F         call Almacena_disparo
 276+ 8F30 18 0F            jr 6F                                           ; RET.
 277+ 8F32
 278+ 8F32              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F32              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F32              ;
 281+ 8F32              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F32              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F32              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F32              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F32
 286+ 8F32 2A CB 88     5 ld hl,(Posicion_actual)
 287+ 8F35 CD 48 96     	call NextScan
 288+ 8F38
 289+ 8F38              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F38              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F38              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F38              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F38
 294+ 8F38 CD 42 8F         call Ajusta_disparo_parte_derecha
 295+ 8F3B
 296+ 8F3B              ; 	No se produce impacto. B="$80"
 297+ 8F3B              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F3B
 299+ 8F3B 01 80 80     15 ld bc,$8080
 300+ 8F3E
 301+ 8F3E              ; 	LLegados a este punto tendremos:
 302+ 8F3E              ;
 303+ 8F3E              ;       Puntero_objeto_disparo en IY.
 304+ 8F3E              ;       Rutinas_de_impresion en IX.
 305+ 8F3E              ;       Puntero_de_impresion en HL.
 306+ 8F3E              ;       Impacto/Dirección en BC.
 307+ 8F3E
 308+ 8F3E CD 51 8F         call Almacena_disparo
 309+ 8F41
 310+ 8F41 C9           6 ret
 311+ 8F42
 312+ 8F42              ; ----------------------------------------------------------------
 313+ 8F42              ;
 314+ 8F42              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F42              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F42              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F42
 318+ 8F42 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F43 FE 02            cp 2
 320+ 8F45 38 01            jr c,1F
 321+ 8F47 23               inc hl
 322+ 8F48 C9           1 ret
 323+ 8F49
 324+ 8F49 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F4A FE 01        	cp 1
 326+ 8F4C 20 01        	jr nz,1F
 327+ 8F4E 2B           	dec hl
 328+ 8F4F 2B           1 dec hl
 329+ 8F50 C9               ret
 330+ 8F51
 331+ 8F51              ; ----------------------------------------------------------------
 332+ 8F51              ;
 333+ 8F51              ;   25/02/23
 334+ 8F51              ;
 335+ 8F51              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F51              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F51              ;
 338+ 8F51              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F51              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F51
 341+ 8F51              Almacena_disparo
 342+ 8F51
 343+ 8F51 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F52 F1               pop af
 345+ 8F53 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F54
 347+ 8F54 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F55 E6 01            and 1
 349+ 8F57 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F59              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F59              ; 	Dispara AMADEUS.
 352+ 8F59
 353+ 8F59              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F59              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F59              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F59              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F59
 358+ 8F59 C5               push bc
 359+ 8F5A 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F5D 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F60 A7               and a
 362+ 8F61 ED 42            sbc hl,bc
 363+ 8F63 CC FE 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F66 C1               pop bc
 365+ 8F67 28 54            jr z,4F
 366+ 8F69
 367+ 8F69 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F6C 23               inc hl
 369+ 8F6D 23               inc hl
 370+ 8F6E 22 43 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F71              ;                                                   ; _ Disparo_(+1).
 372+ 8F71 18 18            jr 2F
 373+ 8F73
 374+ 8F73              ; Dispara una entidad.
 375+ 8F73
 376+ 8F73 C5           1 push bc
 377+ 8F74 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F77 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F7A A7               and a
 380+ 8F7B ED 42            sbc hl,bc
 381+ 8F7D CC F7 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F80 C1               pop bc
 383+ 8F81 28 3A            jr z,4F
 384+ 8F83
 385+ 8F83 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F86 23               inc hl
 387+ 8F87 23               inc hl
 388+ 8F88 22 41 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F8B              ;                                                   ; _ Disparo_(+1).
 390+ 8F8B CD 7D 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F8E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F8E              ;
 393+ 8F8E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F8E              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F8E              ;                                                     Puntero_de_impresion en HL.
 396+ 8F8E              ;                                                     Impacto/Dirección en BC.
 397+ 8F8E
 398+ 8F8E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F8F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F90 23               inc hl                                          ; _ al siguiente.
 401+ 8F91 A7               and a
 402+ 8F92 20 C0            jr nz,3B
 403+ 8F94
 404+ 8F94 08               ex af,af
 405+ 8F95 ED 73 18 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F99 F9               ld sp,hl
 407+ 8F9A
 408+ 8F9A DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F9C F5               push af                                         ; Puntero de impresión.
 410+ 8F9D FD E5            push iy                                         ; Puntero objeto.
 411+ 8F9F C5               push bc                                         ; Control.
 412+ 8FA0
 413+ 8FA0 ED 7B 18 89      ld sp,(Stack)
 414+ 8FA4
 415+ 8FA4              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FA4
 417+ 8FA4 21 06 89     	ld hl,Ctrl_1
 418+ 8FA7 CB C6        	set 0,(hl)
 419+ 8FA9
 420+ 8FA9 DD E5        	push ix
 421+ 8FAB E1               pop hl
 422+ 8FAC F5               push af
 423+ 8FAD DD E1            pop ix
 424+ 8FAF
 425+ 8FAF CD A0 7F     	call Guarda_foto_registros
 426+ 8FB2
 427+ 8FB2 21 06 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FB5 CB 86        	res 0,(hl)
 429+ 8FB7
 430+ 8FB7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FB7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FB7
 433+ 8FB7 CD FE 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FBA CD F7 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FBD
 436+ 8FBD C9           4 ret
 437+ 8FBE
 438+ 8FBE              ; ----------------------------------------------------------------
 439+ 8FBE              ;
 440+ 8FBE              ;   4/3/23
 441+ 8FBE              ;
 442+ 8FBE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FBE              ;   _ al generarse el disparo.
 444+ 8FBE              ;
 445+ 8FBE              ;       "$80" ..... No se produce colisión.
 446+ 8FBE              ;       "$81" ..... Se produce colisión.
 447+ 8FBE              ;
 448+ 8FBE              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FBE              ;         _ que forman el disparo.
 450+ 8FBE
 451+ 8FBE
 452+ 8FBE              Comprueba_Colision
 453+ 8FBE
 454+ 8FBE              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FBE
 456+ 8FBE FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FC0 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FC1
 459+ 8FC1 CD F7 8F         call Modifica_H_Velocidad_disparo
 460+ 8FC4
 461+ 8FC4 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FC5 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FC7 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FC9
 465+ 8FC9 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FCB CD E7 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FCE
 468+ 8FCE 7B               ld a,e
 469+ 8FCF E6 01            and 1
 470+ 8FD1 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FD3              ;                                                  ; _ para activar IMPACTO.
 472+ 8FD3 E1               pop hl
 473+ 8FD4 E5               push hl
 474+ 8FD5 CD 48 96         call NextScan
 475+ 8FD8
 476+ 8FD8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FD9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FDB 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FDD              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FDD 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FDF CD E7 8F         call Bucle_2
 482+ 8FE2
 483+ 8FE2 43           1 ld b,e
 484+ 8FE3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FE4 FD E1            pop iy
 486+ 8FE6 C9               ret
 487+ 8FE7
 488+ 8FE7              ; ---------- ----------
 489+ 8FE7
 490+ 8FE7 06 02        Bucle_2 ld b,2
 491+ 8FE9 FD 7E 00     2 ld a,(iy)
 492+ 8FEC A6               and (hl)
 493+ 8FED 28 02            jr z,1F
 494+ 8FEF 1E 81            ld e,$81
 495+ 8FF1 23           1 inc hl
 496+ 8FF2 FD 23            inc iy
 497+ 8FF4 10 F3            djnz 2B
 498+ 8FF6 C9               ret
 499+ 8FF7
 500+ 8FF7              ; ---------- ----------
 501+ 8FF7              ;
 502+ 8FF7              ;   21/7/23
 503+ 8FF7
 504+ 8FF7              Modifica_H_Velocidad_disparo
 505+ 8FF7
 506+ 8FF7 3A 52 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FFA FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FFC D0               ret nc                                         ; _ incrementamos H.
 509+ 8FFD 24               inc h
 510+ 8FFE
 511+ 8FFE C9               ret
 512+ 8FFF
 513+ 8FFF              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FFF              ;
 515+ 8FFF              ;   11/04/23
 516+ 8FFF              ;
 517+ 8FFF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FFF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FFF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FFF              ;
 521+ 8FFF              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FFF
 523+ 8FFF              Compara_coordenadas_X
 524+ 8FFF
 525+ 8FFF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FFF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FFF
 528+ 8FFF              ; Preparamos registros:
 529+ 8FFF
 530+ 8FFF 21 CF 88         ld hl,Filas+6
 531+ 9002 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9003 23               inc hl
 533+ 9004 23               inc hl
 534+ 9005 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9006 43               ld b,e
 536+ 9007
 537+ 9007 21 DD 88         ld hl,Filas+20
 538+ 900A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 900B 21 4D 89         ld hl,Coordenadas_X_Entidad
 540+ 900E CD 2A 92         call Guarda_coordenadas_X
 541+ 9011
 542+ 9011              ; Preparamos registros:
 543+ 9011
 544+ 9011 21 A4 85         ld hl,Amadeus_db+6
 545+ 9014 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9015 23               inc hl
 547+ 9016 23               inc hl
 548+ 9017 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9018 7B               ld a,e
 550+ 9019 08               ex af,af'
 551+ 901A 21 B2 85         ld hl,Amadeus_db+20
 552+ 901D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 901E 21 4A 89         ld hl,Coordenadas_X_Amadeus
 554+ 9021 CD 2A 92         call Guarda_coordenadas_X
 555+ 9024
 556+ 9024              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9024              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9024
 559+ 9024 04               inc b
 560+ 9025 05               dec b
 561+ 9026 28 04            jr z,1F
 562+ 9028 06 03            ld b,3
 563+ 902A 18 02            jr 2F
 564+ 902C 06 02        1 ld b,2
 565+ 902E 08           2 ex af,af'
 566+ 902F 3C               inc a
 567+ 9030 3D               dec a
 568+ 9031 28 04            jr z,5F
 569+ 9033 0E 03            ld c,3
 570+ 9035 18 02            jr 6F
 571+ 9037 0E 02        5 ld c,2
 572+ 9039 79           6 ld a,c
 573+ 903A 08               ex af,af'
 574+ 903B 11 4D 89         ld de,Coordenadas_X_Entidad
 575+ 903E 1A           4 ld a,(de)
 576+ 903F 21 4A 89         ld hl,Coordenadas_X_Amadeus
 577+ 9042 BE           3 cp (hl)
 578+ 9043 28 0E            jr z,7F
 579+ 9045 23               inc hl
 580+ 9046 0D               dec c
 581+ 9047 20 F9            jr nz,3B
 582+ 9049 13               inc de
 583+ 904A 08               ex af,af'
 584+ 904B 4F               ld c,a
 585+ 904C 08               ex af,af'
 586+ 904D 10 EF            djnz 4B
 587+ 904F
 588+ 904F              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 904F
 590+ 904F CD 66 92     8 call Limpia_Coordenadas_X
 591+ 9052 C9               ret
 592+ 9053
 593+ 9053 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9055 32 E2 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9058 21 45 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 905B CB D6            set 2,(hl)
 597+ 905D 18 F0            jr 8B
 598+ 905F
 599+ 905F              ; -----------------------------------------------------------------------
 600+ 905F              ;
 601+ 905F              ;   17/04/23
 602+ 905F              ;
 603+ 905F
 604+ 905F              Detecta_colision_nave_entidad
 605+ 905F
 606+ 905F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 905F
 608+ 905F 2A CB 88         ld hl,(Posicion_actual)
 609+ 9062 CD A3 95         call Calcula_puntero_de_impresion
 610+ 9065
 611+ 9065              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9065              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9065
 614+ 9065 DD E5            push ix
 615+ 9067 E1               pop hl
 616+ 9068 E5               push hl
 617+ 9069
 618+ 9069              ; ----- ----- -----
 619+ 9069 1E 00            ld e,0                                         ; Indica impacto.
 620+ 906B 06 0A            ld b,10
 621+ 906D CD 9D 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9070 7B               ld a,e
 623+ 9071 FE 05            cp 5
 624+ 9073 38 0E            jr c,3F
 625+ 9075
 626+ 9075              ; LLegados a este punto:
 627+ 9075              ;
 628+ 9075              ;   HAY COLISIÓN !!!!!.
 629+ 9075              ;
 630+ 9075              ;   .db (Impacto) de Amadeus a "1".
 631+ 9075              ;   SET el bit3 de (Impacto2).
 632+ 9075              ;
 633+ 9075              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9075
 635+ 9075 21 B7 85         ld hl,Amadeus_db+25
 636+ 9078 36 01            ld (hl),1
 637+ 907A 21 45 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 907D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 907F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9081 18 18            jr 1F
 641+ 9083
 642+ 9083              ; -----
 643+ 9083
 644+ 9083 E1           3 pop hl
 645+ 9084 CD 48 96         call NextScan
 646+ 9087 E5               push hl
 647+ 9088 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9089 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 908B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 908D 30 0C            jr nc,1F
 651+ 908F              ;                                                  ; _ 2º scanline si esto es así.
 652+ 908F 10 DC            djnz 2B
 653+ 9091
 654+ 9091              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9091
 656+ 9091              ; LLegados a este punto:
 657+ 9091              ;
 658+ 9091              ;   NO HAY COLISIÓN !!!!!.
 659+ 9091              ;
 660+ 9091              ;   .db (Impacto) de Amadeus a "0".
 661+ 9091              ;   RES el bit2 de (Impacto2).
 662+ 9091              ;
 663+ 9091              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9091              ;   Lo colocamos a "0".
 665+ 9091
 666+ 9091 21 45 89         ld hl,Impacto2
 667+ 9094 CB 96            res 2,(hl)
 668+ 9096 2A 46 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9099 36 00            ld (hl),0
 670+ 909B
 671+ 909B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 909C C9               ret
 673+ 909D
 674+ 909D               ; ---------- ----------
 675+ 909D
 676+ 909D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 909E 3A CA 88         ld a,(Columns)
 678+ 90A1 47               ld b,a
 679+ 90A2 FD 7E 00     2 ld a,(iy)
 680+ 90A5 BE               cp (hl)
 681+ 90A6 28 01            jr z,1F
 682+ 90A8
 683+ 90A8 1C               inc e
 684+ 90A9
 685+ 90A9 23           1 inc hl
 686+ 90AA FD 23            inc iy
 687+ 90AC 10 F4            djnz 2B
 688+ 90AE C1               pop bc
 689+ 90AF C9               ret
 690+ 90B0
 691+ 90B0              ; -------------------------------------------------------------------------------------------------------------
 692+ 90B0              ;
 693+ 90B0              ;   13/03/23
 694+ 90B0              ;
 695+ 90B0              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90B0              ;
 697+ 90B0              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90B0
 699+ 90B0 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90B3 7E               ld a,(hl)
 701+ 90B4 A7               and a
 702+ 90B5 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90B6
 704+ 90B6 44               ld b,h
 705+ 90B7 4D               ld c,l
 706+ 90B8 2A 20 89         ld hl,(Stack_snapshot_disparos)
 707+ 90BB E5               push hl
 708+ 90BC A7               and a
 709+ 90BD ED 42            sbc hl,bc
 710+ 90BF E5               push hl
 711+ 90C0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90C1
 713+ 90C1 E1               pop hl
 714+ 90C2 54               ld d,h
 715+ 90C3 5D               ld e,l
 716+ 90C4 1B               dec de
 717+ 90C5 ED B8            lddr                                                ; Limpiamos.
 718+ 90C7
 719+ 90C7 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90CA 22 20 89         ld (Stack_snapshot_disparos),hl
 721+ 90CD
 722+ 90CD C9               ret
 723+ 90CE
 724+ 90CE              ; -------------------------------------------------------------------------------------------------------------
 725+ 90CE              ;
 726+ 90CE              ;   18/07/23
 727+ 90CE              ;
 728+ 90CE
 729+ 90CE              Motor_de_disparos
 730+ 90CE
 731+ 90CE              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90CE
 733+ 90CE 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90D1 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90D4
 736+ 90D4 CD 7D 8C     2 call Extrae_address
 737+ 90D7 7E               ld a,(hl)
 738+ 90D8 A7               and a
 739+ 90D9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90DB
 741+ 90DB              ; ----- ----- ----- ----- ----- -----
 742+ 90DB
 743+ 90DB C5               push bc
 744+ 90DC CD A0 91         call foto_disparo_a_borrar
 745+ 90DF
 746+ 90DF              ; Existe colisión con este disparo???
 747+ 90DF
 748+ 90DF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90E0 7E               ld a,(hl)
 750+ 90E1 2B               dec hl
 751+ 90E2 E6 01            and 1
 752+ 90E4 28 1D            jr z,9F
 753+ 90E6
 754+ 90E6              ;   En este punto:
 755+ 90E6              ;
 756+ 90E6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90E6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90E6              ;   _con la entidad).
 759+ 90E6              ;
 760+ 90E6              ;   Disparo_2A defw 0                                ; Control.
 761+ 90E6              ;    defw 0                                          ; Puntero objeto.
 762+ 90E6              ;    defw 0                                          ; Puntero de impresión.
 763+ 90E6              ;    defw 0                                          ; Rutina de impresión.
 764+ 90E6
 765+ 90E6 E5               push hl
 766+ 90E7
 767+ 90E7 06 04            ld b,4
 768+ 90E9 23           19 inc hl
 769+ 90EA 10 FD            djnz 19B
 770+ 90EC
 771+ 90EC CD 7D 8C         call Extrae_address
 772+ 90EF CD 11 9D         call Genera_coordenadas_disparo
 773+ 90F2
 774+ 90F2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90F2
 776+ 90F2 21 48 89         ld hl,Coordenadas_disparo_certero
 777+ 90F5 72               ld (hl),d
 778+ 90F6 23               inc hl
 779+ 90F7 73               ld (hl),e
 780+ 90F8
 781+ 90F8              ; Elimino el disparo de la base de datos.
 782+ 90F8
 783+ 90F8 E1               pop hl
 784+ 90F9 CD 1F 92         call Elimina_disparo_de_base_de_datos
 785+ 90FC 21 45 89         ld hl,Impacto2
 786+ 90FF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9101
 788+ 9101 18 06            jr 11F
 789+ 9103
 790+ 9103 CD C9 91     9 call Mueve_disparo
 791+ 9106 CD A0 91         call foto_disparo_a_borrar
 792+ 9109
 793+ 9109 C1           11 pop bc
 794+ 910A 18 04            jr 7F
 795+ 910C
 796+ 910C              ; ----- ----- ----- ----- ----- -----
 797+ 910C
 798+ 910C ED 42        1 sbc hl,bc
 799+ 910E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9110
 801+ 9110 2A 43 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9113 23               inc hl
 803+ 9114 23               inc hl
 804+ 9115 22 43 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9118 18 BA            jr 2B
 806+ 911A
 807+ 911A CD FE 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 911D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 911D
 810+ 911D              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 911D
 812+ 911D 01 8A 85         ld bc,Disparo_11
 813+ 9120 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9123
 815+ 9123 CD 7D 8C     5 call Extrae_address
 816+ 9126 7E               ld a,(hl)
 817+ 9127 A7               and a
 818+ 9128 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 912A
 820+ 912A              ; ----- ----- ----- ----- ----- -----
 821+ 912A
 822+ 912A C5               push bc
 823+ 912B CD A0 91         call foto_disparo_a_borrar
 824+ 912E
 825+ 912E              ; Existe colisión con este disparo???
 826+ 912E
 827+ 912E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 912F 7E               ld a,(hl)
 829+ 9130 2B               dec hl
 830+ 9131 E6 01            and 1
 831+ 9133 28 4D            jr z,10F
 832+ 9135
 833+ 9135              ;! La colisión se produce con Amadeus???
 834+ 9135              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9135
 836+ 9135 E5               push hl
 837+ 9136
 838+ 9136 06 04            ld b,4
 839+ 9138 23           16 inc hl
 840+ 9139 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 913B
 842+ 913B CD 7D 8C         call Extrae_address
 843+ 913E CD 11 9D         call Genera_coordenadas_disparo
 844+ 9141
 845+ 9141 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9142 FE 16            cp $16
 847+ 9144 38 2A            jr c,15F
 848+ 9146
 849+ 9146
 850+ 9146              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9146
 852+ 9146 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9147
 854+ 9147              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9147
 856+ 9147
 857+ 9147 2A 50 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 914A
 859+ 914A              ; Coordenada X de Amadeus en D.
 860+ 914A
 861+ 914A 7D               ld a,l
 862+ 914B E6 1F            and $1F
 863+ 914D 57               ld d,a
 864+ 914E
 865+ 914E 21 A6 85         ld hl,Amadeus_db+8
 866+ 9151 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9152
 868+ 9152 21 4A 89         ld hl,Coordenadas_X_Amadeus
 869+ 9155 CD 2A 92         call Guarda_coordenadas_X
 870+ 9158
 871+ 9158 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9159
 873+ 9159              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9159
 875+ 9159 06 02            ld b,2
 876+ 915B C5           20 push bc
 877+ 915C
 878+ 915C 06 03            ld b,3
 879+ 915E 21 4A 89         ld hl,Coordenadas_X_Amadeus
 880+ 9161 7E           18 ld a,(hl)
 881+ 9162 BA               cp d
 882+ 9163 20 04            jr nz,17F
 883+ 9165
 884+ 9165              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9165
 886+ 9165 C1               pop bc
 887+ 9166 E1               pop hl
 888+ 9167 18 0D            jr 14F
 889+ 9169
 890+ 9169 23           17 inc hl
 891+ 916A 10 F5            djnz 18B
 892+ 916C
 893+ 916C 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 916D
 895+ 916D C1               pop bc
 896+ 916E 10 EB            djnz 20B
 897+ 9170
 898+ 9170
 899+ 9170              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9170              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9170
 902+ 9170 E1           15 pop hl
 903+ 9171 23               inc hl
 904+ 9172 35               dec (hl)
 905+ 9173 2B               dec hl
 906+ 9174 18 0C            jr 10F
 907+ 9176
 908+ 9176              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9176              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9176
 911+ 9176 E5           14 push hl
 912+ 9177 CD 1F 92         call Elimina_disparo_de_base_de_datos
 913+ 917A 21 45 89         ld hl,Impacto2
 914+ 917D CB CE            set 1,(hl)
 915+ 917F E1               pop hl
 916+ 9180 18 06            jr 12F
 917+ 9182
 918+ 9182              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9182
 920+ 9182 CD C9 91     10 call Mueve_disparo
 921+ 9185 CD A0 91         call foto_disparo_a_borrar
 922+ 9188 C1           12 pop bc
 923+ 9189
 924+ 9189 18 04            jr 8F
 925+ 918B
 926+ 918B              ; ----- ----- ----- ----- ----- -----
 927+ 918B
 928+ 918B ED 42        4 sbc hl,bc
 929+ 918D 28 0A            jr z,6F
 930+ 918F
 931+ 918F 2A 41 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9192 23               inc hl
 933+ 9193 23               inc hl
 934+ 9194 22 41 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9197 18 8A            jr 5B
 936+ 9199
 937+ 9199 CD F7 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 919C CD 66 92         call Limpia_Coordenadas_X
 939+ 919F C9               ret
 940+ 91A0
 941+ 91A0              ; ------------------------------------------------------------------
 942+ 91A0
 943+ 91A0              foto_disparo_a_borrar
 944+ 91A0
 945+ 91A0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91A1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91A2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91A3
 949+ 91A3 E5               push hl
 950+ 91A4 23               inc hl
 951+ 91A5 23               inc hl
 952+ 91A6 ED 73 18 89      ld (Stack),sp
 953+ 91AA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91AB FD E1            pop iy
 955+ 91AD DD E1            pop ix
 956+ 91AF E1               pop hl
 957+ 91B0 ED 7B 18 89      ld sp,(Stack)
 958+ 91B4 3A 06 89         ld a,(Ctrl_1)
 959+ 91B7 CB C7            set 0,a
 960+ 91B9 32 06 89         ld (Ctrl_1),a
 961+ 91BC CD A0 7F         call Guarda_foto_registros
 962+ 91BF 3A 06 89         ld a,(Ctrl_1)
 963+ 91C2 CB 87            res 0,a
 964+ 91C4 32 06 89         ld (Ctrl_1),a
 965+ 91C7 E1               pop hl
 966+ 91C8 C9               ret
 967+ 91C9
 968+ 91C9              ;---------------------------------------------------
 969+ 91C9              ;
 970+ 91C9              ;   18/07/23
 971+ 91C9              ;
 972+ 91C9
 973+ 91C9              Mueve_disparo
 974+ 91C9
 975+ 91C9              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91C9              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91C9              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91C9
 979+ 91C9 E5               push hl
 980+ 91CA
 981+ 91CA 7E               ld a,(hl)
 982+ 91CB
 983+ 91CB 06 04            ld b,4
 984+ 91CD 23           1 inc hl
 985+ 91CE 10 FD            djnz 1B
 986+ 91D0
 987+ 91D0              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91D0
 989+ 91D0 CD 7D 8C         call Extrae_address
 990+ 91D3
 991+ 91D3 E6 01            and 1
 992+ 91D5 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91D7
 994+ 91D7              ; Disparo hacia arriba, (Amadeus).
 995+ 91D7
 996+ 91D7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91D7              ; _ de la dificultad.
 998+ 91D7
 999+ 91D7 CD 57 96         call PreviousScan
1000+ 91DA CD 57 96         call PreviousScan
1001+ 91DD CD 57 96         call PreviousScan
1002+ 91E0 CD 57 96         call PreviousScan
1003+ 91E3
1004+ 91E3              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91E3
1006+ 91E3 7C               ld a,h
1007+ 91E4 FE 40            cp $40
1008+ 91E6 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91E8
1010+ 91E8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91E8
1012+ 91E8 EB               ex de,hl
1013+ 91E9 06 04            ld b,4
1014+ 91EB 2B           6 dec hl
1015+ 91EC 10 FD            djnz 6B
1016+ 91EE
1017+ 91EE CD 1F 92         call Elimina_disparo_de_base_de_datos
1018+ 91F1 E1               pop hl
1019+ 91F2 18 10            jr 7F
1020+ 91F4
1021+ 91F4              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91F4              ; HL contiene el puntero de impresión del disparo.
1023+ 91F4              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91F4
1025+ 91F4 D5           3 push de
1026+ 91F5 C5               push bc
1027+ 91F6
1028+ 91F6 CD BE 8F         call Comprueba_Colision
1029+ 91F9
1030+ 91F9              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91F9
1032+ 91F9 78               ld a,b
1033+ 91FA
1034+ 91FA C1               pop bc
1035+ 91FB D1               pop de
1036+ 91FC
1037+ 91FC EB               ex de,hl
1038+ 91FD
1039+ 91FD 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91FE 23               inc hl                                      ; _ movimiento.
1041+ 91FF 72               ld (hl),d
1042+ 9200
1043+ 9200 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9201
1045+ 9201 23               inc hl                                      ; _ en curso.
1046+ 9202 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9203 2B               dec hl
1048+ 9204
1049+ 9204 C9           7 ret
1050+ 9205
1051+ 9205              ; Disparo hacia abajo, (Entidad).
1052+ 9205
1053+ 9205 3A 52 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9208 47               ld b,a
1055+ 9209
1056+ 9209 CD 48 96     4 call NextScan
1057+ 920C 10 FB            djnz 4B
1058+ 920E
1059+ 920E              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 920E
1061+ 920E 7C               ld a,h
1062+ 920F FE 58            cp $58
1063+ 9211 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9213
1065+ 9213 EB               ex de,hl
1066+ 9214 06 04            ld b,4
1067+ 9216 2B           5 dec hl
1068+ 9217 10 FD            djnz 5B
1069+ 9219
1070+ 9219 CD 1F 92         call Elimina_disparo_de_base_de_datos
1071+ 921C E1               pop hl
1072+ 921D 18 E5            jr 7B
1073+ 921F
1074+ 921F              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 921F
1076+ 921F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9222 AF               xor a
1078+ 9223 77               ld (hl),a
1079+ 9224 54               ld d,h
1080+ 9225 5D               ld e,l
1081+ 9226 13               inc de
1082+ 9227 ED B0            ldir
1083+ 9229 C9               ret
1084+ 922A
1085+ 922A              ; -----------------------------------------------------------------
1086+ 922A              ;
1087+ 922A              ;   19/7/23
1088+ 922A              ;
1089+ 922A              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 922A              ;
1091+ 922A              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 922A              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 922A              ;
1094+ 922A              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 922A              ;
1096+ 922A              ;   INPUTS:
1097+ 922A              ;
1098+ 922A              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 922A              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 922A
1101+ 922A              ;   MODIFICA: A, HL, BC y DE.
1102+ 922A
1103+ 922A              Guarda_coordenadas_X
1104+ 922A
1105+ 922A 7B               ld a,e
1106+ 922B A7               and a
1107+ 922C 20 04            jr nz,1F
1108+ 922E
1109+ 922E 06 02            ld b,2
1110+ 9230 18 02            jr 2F
1111+ 9232
1112+ 9232 06 03        1 ld b,3
1113+ 9234 72           2 ld (hl),d
1114+ 9235 23               inc hl
1115+ 9236 14               inc d
1116+ 9237 10 FB            djnz 2B
1117+ 9239
1118+ 9239 C9               ret
1119+ 923A
1120+ 923A              ; -----------------------------------------------------------------
1121+ 923A              ;
1122+ 923A              ;   12/04/23
1123+ 923A              ;
1124+ 923A
1125+ 923A 3A 45 89     Selector_de_impactos ld a,(Impacto2)
1126+ 923D A7               and a
1127+ 923E C8               ret z
1128+ 923F
1129+ 923F FE 04            cp 4
1130+ 9241 20 09            jr nz,1F
1131+ 9243
1132+ 9243
1133+ 9243              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9243
1135+ 9243 CD 5F 90         call Detecta_colision_nave_entidad
1136+ 9246
1137+ 9246 21 45 89         ld hl,Impacto2
1138+ 9249 CB 5E            bit 3,(hl)
1139+ 924B C0               ret nz                                               ; Existe colisión, RET.
1140+ 924C
1141+ 924C              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 924C              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 924C
1144+ 924C 21 45 89     1 ld hl,Impacto2
1145+ 924F CB 4E            bit 1,(hl)
1146+ 9251 28 07            jr z,2F
1147+ 9253
1148+ 9253 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9256 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9258 18 0B            jr 3F
1151+ 925A
1152+ 925A 21 45 89     2 ld hl,Impacto2
1153+ 925D CB 46            bit 0,(hl)
1154+ 925F C8               ret z
1155+ 9260
1156+ 9260              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9260
1158+ 9260 21 06 89         ld hl,Ctrl_1
1159+ 9263 CB D6            set 2,(hl)
1160+ 9265
1161+ 9265 C9           3 ret
1162+ 9266
1163+ 9266              ; -----------------------------------------------------------------
1164+ 9266              ;
1165+ 9266              ;   19/7/23
1166+ 9266              ;
1167+ 9266              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9266
1169+ 9266 AF           Limpia_Coordenadas_X xor a
1170+ 9267 06 06            ld b,6
1171+ 9269 21 4A 89         ld hl,Coordenadas_X_Amadeus
1172+ 926C 77           1 ld (hl),a
1173+ 926D 23               inc hl
1174+ 926E 10 FC            djnz 1B
1175+ 9270 C9               ret
1176+ 9271
1177+ 9271              ; -----------------------------------------------------------------
1178+ 9271              ;
1179+ 9271              ;   25/04/23
1180+ 9271              ;
1181+ 9271
1182+ 9271              Determina_resultado_comparativa
1183+ 9271
1184+ 9271              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9271              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9271              ;
1187+ 9271              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9271              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9271              ;
1190+ 9271              ;   SBC HL,DE
1191+ 9271
1192+ 9271              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9271              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9271
1195+ 9271              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9271              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9271
1198+ 9271
1199+ 9271 3A DD 88         ld a,(Cuad_objeto)
1200+ 9274 FE 02            cp 2
1201+ 9276 28 26            jr z,2F
1202+ 9278 38 24            jr c,2F
1203+ 927A
1204+ 927A              ; Cuadrantes 3º y 4º
1205+ 927A
1206+ 927A E6 01            and 1
1207+ 927C 28 10            jr z,4F
1208+ 927E
1209+ 927E              ; Cuadrante 3º
1210+ 927E
1211+ 927E 7C               ld a,h
1212+ 927F 06 00            ld b,0
1213+ 9281
1214+ 9281 CD 0C 93         call Compara_cositas_H3
1215+ 9284
1216+ 9284 04               inc b
1217+ 9285 05               dec b
1218+ 9286 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9287
1220+ 9287 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9288 06 00            ld b,0
1222+ 928A
1223+ 928A CD 1E 93         call Compara_cositas_L3
1224+ 928D C9               ret
1225+ 928E
1226+ 928E              ; Cuadrante 4º
1227+ 928E
1228+ 928E 7C           4 ld a,h
1229+ 928F 06 00            ld b,0
1230+ 9291
1231+ 9291 CD 30 93         call Compara_cositas_H4
1232+ 9294
1233+ 9294 04               inc b
1234+ 9295 05               dec b
1235+ 9296 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9297
1237+ 9297 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9298 06 00            ld b,0
1239+ 929A
1240+ 929A CD 46 93         call Compara_cositas_L4
1241+ 929D C9               ret
1242+ 929E
1243+ 929E              ; Cuadrantes 1º y 2º.
1244+ 929E
1245+ 929E 28 10        2 jr z,3F
1246+ 92A0
1247+ 92A0              ; 1er Cuadrante
1248+ 92A0
1249+ 92A0 7C               ld a,h
1250+ 92A1 06 00            ld b,0
1251+ 92A3
1252+ 92A3 CD E4 92         call Compara_cositas_H1
1253+ 92A6
1254+ 92A6 04               inc b
1255+ 92A7 05               dec b
1256+ 92A8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92A9
1258+ 92A9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92AA 06 00            ld b,0
1260+ 92AC
1261+ 92AC CD FA 92         call Compara_cositas_L1
1262+ 92AF C9               ret
1263+ 92B0
1264+ 92B0
1265+ 92B0              ; 2º Cuadrante
1266+ 92B0
1267+ 92B0 7C           3 ld a,h
1268+ 92B1 06 00            ld b,0
1269+ 92B3
1270+ 92B3 CD C0 92         call Compara_cositas_H2
1271+ 92B6
1272+ 92B6 04               inc b
1273+ 92B7 05               dec b
1274+ 92B8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92B9
1276+ 92B9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92BA 06 00            ld b,0
1278+ 92BC
1279+ 92BC CD D2 92         call Compara_cositas_L2
1280+ 92BF C9               ret
1281+ 92C0
1282+ 92C0 A7           Compara_cositas_H2 and a
1283+ 92C1 28 0D            jr z,1F
1284+ 92C3              ;    cp $fd
1285+ 92C3              ;    jr z,1F
1286+ 92C3              ;    cp $fe
1287+ 92C3              ;    jr z,1F
1288+ 92C3 FE FF            cp $ff
1289+ 92C5 28 09            jr z,1F
1290+ 92C7 FE 01            cp $01
1291+ 92C9 28 05            jr z,1F
1292+ 92CB FE 02            cp $02
1293+ 92CD 28 01            jr z,1F
1294+ 92CF C0               ret nz
1295+ 92D0 04           1 inc b
1296+ 92D1 C9               ret
1297+ 92D2
1298+ 92D2 A7           Compara_cositas_L2 and a
1299+ 92D3 28 0D            jr z,1F
1300+ 92D5              ;    cp $fd
1301+ 92D5              ;    jr z,1F
1302+ 92D5 FE FE            cp $fe
1303+ 92D7 28 09            jr z,1F
1304+ 92D9 FE FF            cp $ff
1305+ 92DB 28 05            jr z,1F
1306+ 92DD FE 01            cp $01
1307+ 92DF 28 01            jr z,1F
1308+ 92E1              ;    cp $02
1309+ 92E1              ;    jr z,1F
1310+ 92E1 C0               ret nz
1311+ 92E2 04           1 inc b
1312+ 92E3 C9               ret
1313+ 92E4
1314+ 92E4 A7           Compara_cositas_H1 and a
1315+ 92E5 28 11            jr z,1F
1316+ 92E7              ;    cp $fd
1317+ 92E7              ;    jr z,1F
1318+ 92E7              ;    cp $fe
1319+ 92E7              ;    jr z,1F
1320+ 92E7 FE FF            cp $ff
1321+ 92E9 28 0D            jr z,1F
1322+ 92EB FE 01            cp $01
1323+ 92ED 28 09            jr z,1F
1324+ 92EF FE 02            cp $02
1325+ 92F1 28 05            jr z,1F
1326+ 92F3 FE 03            cp $03
1327+ 92F5 28 01            jr z,1F
1328+ 92F7 C0               ret nz
1329+ 92F8 04           1 inc b
1330+ 92F9 C9               ret
1331+ 92FA
1332+ 92FA A7           Compara_cositas_L1 and a
1333+ 92FB 28 0D            jr z,1F
1334+ 92FD              ;    cp $fd
1335+ 92FD              ;    jr z,1F
1336+ 92FD              ;    cp $fe
1337+ 92FD              ;    jr z,1F
1338+ 92FD              ;    cp $ff
1339+ 92FD              ;    jr z,1F
1340+ 92FD FE 01            cp $01
1341+ 92FF 28 09            jr z,1F
1342+ 9301 FE 02            cp $02
1343+ 9303 28 05            jr z,1F
1344+ 9305 FE 03            cp $03
1345+ 9307 28 01            jr z,1F
1346+ 9309 C0               ret nz
1347+ 930A 04           1 inc b
1348+ 930B C9               ret
1349+ 930C
1350+ 930C A7           Compara_cositas_H3 and a
1351+ 930D 28 0D            jr z,1F
1352+ 930F              ;    cp $fd
1353+ 930F              ;    jr z,1F
1354+ 930F FE FE            cp $fe
1355+ 9311 28 09            jr z,1F
1356+ 9313 FE FF            cp $ff
1357+ 9315 28 05            jr z,1F
1358+ 9317 FE 01            cp $01
1359+ 9319 28 01            jr z,1F
1360+ 931B              ;    cp $02
1361+ 931B              ;    jr z,1F
1362+ 931B              ;    cp $03
1363+ 931B              ;    jr z,1F
1364+ 931B C0               ret nz
1365+ 931C 04           1 inc b
1366+ 931D C9               ret
1367+ 931E
1368+ 931E A7           Compara_cositas_L3 and a
1369+ 931F 28 0D            jr z,1F
1370+ 9321              ;    cp $fd
1371+ 9321              ;    jr z,1F
1372+ 9321              ;    cp $fe
1373+ 9321              ;    jr z,1F
1374+ 9321              ;    cp $ff
1375+ 9321              ;    jr z,1F
1376+ 9321 FE 01            cp $01
1377+ 9323 28 09            jr z,1F
1378+ 9325 FE 02            cp $02
1379+ 9327 28 05            jr z,1F
1380+ 9329 FE 03            cp $03
1381+ 932B 28 01            jr z,1F
1382+ 932D C0               ret nz
1383+ 932E 04           1 inc b
1384+ 932F C9               ret
1385+ 9330
1386+ 9330 A7           Compara_cositas_H4 and a
1387+ 9331 28 11            jr z,1F
1388+ 9333 FE FD            cp $fd
1389+ 9335 28 0D            jr z,1F
1390+ 9337 FE FE            cp $fe
1391+ 9339 28 09            jr z,1F
1392+ 933B FE FF            cp $ff
1393+ 933D 28 05            jr z,1F
1394+ 933F FE 01            cp $01
1395+ 9341 28 01            jr z,1F
1396+ 9343              ;    cp $02
1397+ 9343              ;    jr z,1F
1398+ 9343              ;    cp $03
1399+ 9343              ;    jr z,1F
1400+ 9343 C0               ret nz
1401+ 9344 04           1 inc b
1402+ 9345 C9               ret
1403+ 9346
1404+ 9346 A7           Compara_cositas_L4 and a
1405+ 9347 28 0D            jr z,1F
1406+ 9349              ;    cp $fd
1407+ 9349              ;    jr z,1F
1408+ 9349 FE FE            cp $fe
1409+ 934B 28 09            jr z,1F
1410+ 934D FE FF            cp $ff
1411+ 934F 28 05            jr z,1F
1412+ 9351 FE 01            cp $01
1413+ 9353 28 01            jr z,1F
1414+ 9355              ;    cp $02
1415+ 9355              ;    jr z,1F
1416+ 9355              ;    cp $03
1417+ 9355              ;    jr z,1F
1418+ 9355 C0               ret nz
1419+ 9356 04           1 inc b
1420+ 9357 C9               ret
# file closed: Disparo.asm
1653  9358              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9358              ; ******************************************************************************************************************************************************************************************
   2+ 9358              ;
   3+ 9358              ; 26/06/23
   4+ 9358              ;
   5+ 9358              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9358
   7+ 9358 CD 3C 96     Draw call Prepara_draw
   8+ 935B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 935C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 935D 28 05        	jr z,2F
  11+ 935F
  12+ 935F 3A DD 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9362 18 0C        	jr 1F
  14+ 9364
  15+ 9364 2A DB 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9367 22 CB 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 936A CD F9 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 936D              ;													; _la esquina superior izquierda de la pantalla.
  19+ 936D CD 9C 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9370
  21+ 9370 3A F3 88     1 ld a,(Ctrl_0)
  22+ 9373 CB 6F        	bit 5,a
  23+ 9375 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9377
  25+ 9377 CD 8F 93     	call Comprueba_limite_horizontal
  26+ 937A CD 1F 94     	call Comprueba_limite_vertical
  27+ 937D
  28+ 937D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 937D              ; -----------------------
  30+ 937D              ; -----------------------
  31+ 937D              ; -----------------------
  32+ 937D
  33+ 937D CD 6C 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9380 CD A3 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9383 CD 02 96     	call Define_rutina_de_impresion
  36+ 9386
  37+ 9386 3A F3 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9389 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 938B 32 F3 88     	ld (Ctrl_0),a
  40+ 938E
  41+ 938E C9           	ret
  42+ 938F
  43+ 938F              ; *******************************************************************************************************************************************************************************************
  44+ 938F              ;	21/01/23
  45+ 938F              ;
  46+ 938F              ; 	Comprueba_limite_horizontal.
  47+ 938F              ;
  48+ 938F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 938F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 938F              ;
  51+ 938F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 938F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 938F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 938F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 938F
  56+ 938F
  57+ 938F
  58+ 938F 3A F3 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9392 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9394 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9396 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9398 32 F3 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 939B 18 09            jr 6F
  64+ 939D CB 5F        1 bit 3,a
  65+ 939F 28 0A            jr z,2F
  66+ 93A1 E6 F7            and $f7
  67+ 93A3 32 F3 88         ld (Ctrl_0),a
  68+ 93A6 CD F9 94     6 call Inicializacion
  69+ 93A9 18 5B            jr 5F
  70+ 93AB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93AC
  72+ 93AC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93AC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93AC
  75+ 93AC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93AD 2A 01 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93B0 CD 5B 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93B3 67           	ld h,a
  79+ 93B4 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93B5 CD 5B 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93B8 67           	ld h,a
  82+ 93B9 A7           	and a
  83+ 93BA ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93BC 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93BD 3A DD 88     	ld a,(Cuad_objeto)
  86+ 93C0 FE 02        	cp 2
  87+ 93C2 38 1E        	jr c,3F
  88+ 93C4 28 1C        	jr z,3F
  89+ 93C6 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93C7 28 23            jr z,7F
  91+ 93C9 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93CB 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93CD E1           	pop hl
  94+ 93CE
  95+ 93CE              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93CE              ; _para indicar con E="2" en caso necesario.
  97+ 93CE
  98+ 93CE E5               push hl
  99+ 93CF C5               push bc
 100+ 93D0 CD 5B 99     	call calcula_tercio
 101+ 93D3 FE 01        	cp 1
 102+ 93D5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93D7 CD 07 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93DA 28 26            jr z,9F
 105+ 93DC 38 24            jr c,9F
 106+ 93DE 1E 00        11 ld e,0
 107+ 93E0 18 22            jr 8F
 108+ 93E2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93E3 28 07        	jr z, 7F
 110+ 93E5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93E7 1E 00         	ld e,0
 112+ 93E9 E1           	pop hl
 113+ 93EA 18 04        	jr 4F
 114+ 93EC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93EE 18 15            jr 10F
 116+ 93F0
 117+ 93F0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93F0              ; _para indicar con E="2" en caso necesario.
 119+ 93F0
 120+ 93F0 E5           4 push hl
 121+ 93F1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93F2 CD 5B 99     	call calcula_tercio
 123+ 93F5 FE 01        	cp 1
 124+ 93F7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93F9 CD 07 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93FC 28 04            jr z,9F
 127+ 93FE 30 02            jr nc,9F
 128+ 9400 18 02        	jr 8F
 129+ 9402 1E 02        9 ld e,2
 130+ 9404 C1           8 pop bc
 131+ 9405 E1           10 pop hl
 132+ 9406 C9           5 ret
 133+ 9407
 134+ 9407              ; --------------------
 135+ 9407              ;
 136+ 9407              ; 25/08/22
 137+ 9407
 138+ 9407 CD 5B 99     Comprueba_centro call calcula_tercio
 139+ 940A 67               ld h,a
 140+ 940B 08           	ex af,af
 141+ 940C FE 02        	cp 2
 142+ 940E 38 07        	jr c,1F
 143+ 9410 28 05        	jr z,1F
 144+ 9412 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9415 18 03        	jr 2F
 146+ 9417 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 941A 08           2 ex af,af
 148+ 941B A7               and a
 149+ 941C ED 42            sbc hl,bc
 150+ 941E C9               ret
 151+ 941F
 152+ 941F              ; *********************************************************************************************************************************************************************************************
 153+ 941F              ;
 154+ 941F              ;   16/8/22
 155+ 941F              ;
 156+ 941F              ;	Comprueba_limite_vertical
 157+ 941F              ;
 158+ 941F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 941F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 941F              ;
 161+ 941F
 162+ 941F 2A CB 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9422 7D           	ld a,l
 164+ 9423 E6 1F        	and $1F
 165+ 9425 57           	ld d,a
 166+ 9426 3A 03 89     	ld a,(Limite_vertical)
 167+ 9429 BA           	cp d 											; Límite - Posición.
 168+ 942A 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 942B 3A DD 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 942E CB 47        	bit 0,a
 171+ 9430 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9432
 173+ 9432              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9432
 175+ 9432 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9433 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9435
 178+ 9435              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9435              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9435
 181+ 9435 3A CF 88         ld a,(Coordenada_X)
 182+ 9438 16 0F            ld d,Centro_izquierda
 183+ 943A A7               and a
 184+ 943B 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 943C 28 1E            jr z,3F
 186+ 943E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9440              ;                                                    ; _salimos sin modificar nada.
 188+ 9440 18 0E            jr 2F
 189+ 9442 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9443 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9445
 192+ 9445              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9445              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9445
 195+ 9445 3A CF 88         ld a,(Coordenada_X)
 196+ 9448 16 10            ld d,Centro_derecha
 197+ 944A A7               and a
 198+ 944B 92               sub d
 199+ 944C 28 0E            jr z,3F
 200+ 944E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9450              ;                                                    ; _salimos sin modificar nada.
 202+ 9450 CB 43        2 bit 0,e
 203+ 9452 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9454 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9455 CD E9 94         call Modificaccionne
 206+ 9458 C1           	pop bc
 207+ 9459 CD F9 94         call Inicializacion
 208+ 945C C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 945D
 210+ 945D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 945D
 212+ 945D C5           4 push bc
 213+ 945E 01 CA 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9461 0A           	ld a,(bc)
 215+ 9462 3D           	dec a
 216+ 9463 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9464 7D           	ld a,l
 218+ 9465 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9466 CB 47        	bit 0,a
 220+ 9468 28 03        	jr z,5F
 221+ 946A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 946B 18 2E        	jr 7F
 223+ 946D
 224+ 946D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 946D
 226+ 946D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 946E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 946F 3A F3 88     	ld a,(Ctrl_0)
 229+ 9472 CB 4F        	bit 1,a
 230+ 9474 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9476 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9477
 233+ 9477              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9477
 235+ 9477 1C               inc e
 236+ 9478 1D               dec e
 237+ 9479 20 07            jr nz,12F
 238+ 947B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 947C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 947D 22 CB 88     	ld (Posicion_actual),hl
 241+ 9480 18 44        13 jr 9F
 242+ 9482 CB 43        12 bit 0,e
 243+ 9484 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9486              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9486 C1           	pop bc
 246+ 9487 18 D3        	jr 3B
 247+ 9489 80           14 add b
 248+ 948A 6F               ld l,a
 249+ 948B 22 CB 88     	ld (Posicion_actual),hl
 250+ 948E CD E9 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9491 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9493 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9495 32 F3 88         ld (Ctrl_0),a
 254+ 9498 F1           	pop af
 255+ 9499 18 2B        	jr 9F
 256+ 949B
 257+ 949B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 949B
 259+ 949B F5           7 push af
 260+ 949C 3A F3 88     	ld a,(Ctrl_0)
 261+ 949F CB 47        	bit 0,a
 262+ 94A1 20 1D        	jr nz,8F
 263+ 94A3 F1           	pop af
 264+ 94A4
 265+ 94A4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94A4
 267+ 94A4 1C           	inc e
 268+ 94A5 1D               dec e
 269+ 94A6 20 07            jr nz,10F
 270+ 94A8 90           	sub b
 271+ 94A9 6F               ld l,a
 272+ 94AA 22 CB 88     	ld (Posicion_actual),hl
 273+ 94AD 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94AF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94AF CB 43        10 bit 0,e
 276+ 94B1 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94B3              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94B3 C1           	pop bc
 279+ 94B4 18 A6        	jr 3B
 280+ 94B6 90           16 sub b
 281+ 94B7 6F               ld l,a
 282+ 94B8 22 CB 88     	ld (Posicion_actual),hl
 283+ 94BB CD E9 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94BE 18 06            jr 9F
 285+ 94C0 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94C2 32 F3 88         ld (Ctrl_0),a
 287+ 94C5 F1           	pop af
 288+ 94C6 C1           9 pop bc
 289+ 94C7 1E 00        	ld e,0
 290+ 94C9 CD F9 94         call Inicializacion
 291+ 94CC F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94CD 08           	ex af,af
 293+ 94CE F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94CF 18 8B            jr 3B
 295+ 94D1
 296+ 94D1              ; --------------------
 297+ 94D1
 298+ 94D1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94D3 CD 57 96     1 call PreviousScan
 300+ 94D6 10 FB            djnz 1B
 301+ 94D8 22 CB 88     	ld (Posicion_actual),hl
 302+ 94DB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94DC C9           	ret
 304+ 94DD
 305+ 94DD              ; --------------------
 306+ 94DD
 307+ 94DD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94DF CD 48 96     1 call NextScan
 309+ 94E2 10 FB            djnz 1B
 310+ 94E4 22 CB 88     	ld (Posicion_actual),hl
 311+ 94E7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94E8 C9           	ret
 313+ 94E9
 314+ 94E9              ; --------------------
 315+ 94E9              ;
 316+ 94E9              ;	22/01/23
 317+ 94E9              ;
 318+ 94E9              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94E9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94E9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94E9
 322+ 94E9
 323+ 94E9              Modificaccionne
 324+ 94E9
 325+ 94E9 3A DD 88     	ld a,(Cuad_objeto)
 326+ 94EC FE 02        	cp 2
 327+ 94EE CC D1 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94F1 DC D1 94         call c,Modifica_Pos_actual
 329+ 94F4 C8           	ret z
 330+ 94F5 CD DD 94         call Modifica_Pos_actual2
 331+ 94F8 C9               ret
 332+ 94F9
 333+ 94F9              ; *************************************************************************************************************************************************************************************************
 334+ 94F9              ;
 335+ 94F9              ;	13/8/22
 336+ 94F9              ;
 337+ 94F9              ;	Inicializacion
 338+ 94F9              ;
 339+ 94F9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94F9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94F9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94F9              ;
 343+ 94F9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94F9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94F9              ;	_ desaparece/aparece.
 346+ 94F9
 347+ 94F9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94F9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94F9              ;
 350+ 94F9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94F9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94F9              ; 		   [E] ="0"
 353+ 94F9
 354+ 94F9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94F9
 356+ 94F9 CD 5B 99     Inicializacion call calcula_tercio
 357+ 94FC 28 36        	jr z,primit
 358+ 94FE E6 02        	and 2
 359+ 9500 20 07        	jr nz,segmit
 360+ 9502 7D           	ld a,l
 361+ 9503 FE 7F        	cp $7f
 362+ 9505 38 2D        	jr c,primit
 363+ 9507 28 2B        	jr z,primit
 364+ 9509 CD 66 95     segmit call column
 365+ 950C 38 13        	jr c,tercuad
 366+ 950E 3E 04        cuarcuad ld a,4
 367+ 9510 32 DD 88     	ld (Cuad_objeto),a
 368+ 9513 21 20 48     	ld hl,$4820
 369+ 9516 22 01 89     	ld (Limite_horizontal),hl
 370+ 9519 21 03 89     	ld hl,Limite_vertical
 371+ 951C 36 0D        	ld (hl),$0d
 372+ 951E 08           	ex af,af
 373+ 951F 18 3C        	jr 1F
 374+ 9521              tercuad
 375+ 9521 3E 03        	ld a,3
 376+ 9523 32 DD 88     	ld (Cuad_objeto),a
 377+ 9526 21 20 48     	ld hl,$4820
 378+ 9529 22 01 89     	ld (Limite_horizontal),hl
 379+ 952C 21 03 89     	ld hl,Limite_vertical
 380+ 952F 36 12        	ld (hl),$12
 381+ 9531 08           	ex af,af
 382+ 9532 18 29        	jr 1F
 383+ 9534 CD 66 95     primit call column
 384+ 9537 38 13        	jr c, primcuad
 385+ 9539              segcuad
 386+ 9539 3E 02        	ld a,2
 387+ 953B 32 DD 88     	ld (Cuad_objeto),a
 388+ 953E 21 C0 4F     	ld hl,$4fc0
 389+ 9541 22 01 89     	ld (Limite_horizontal),hl
 390+ 9544 21 03 89     	ld hl,Limite_vertical
 391+ 9547 36 0D        	ld (hl),$0d
 392+ 9549 08           	ex af,af
 393+ 954A 18 11        	jr 1F
 394+ 954C              primcuad
 395+ 954C 3E 01        	ld a,1
 396+ 954E 32 DD 88     	ld (Cuad_objeto),a
 397+ 9551 21 C0 4F     	ld hl,$4fc0
 398+ 9554 22 01 89     	ld (Limite_horizontal),hl
 399+ 9557 21 03 89     	ld hl,Limite_vertical
 400+ 955A 36 12        	ld (hl),$12
 401+ 955C 08           	ex af,af
 402+ 955D CD E6 9C     1 call Genera_coordenadas
 403+ 9560 21 F3 88     	ld hl,Ctrl_0
 404+ 9563 CB EE        	set 5,(hl)
 405+ 9565 C9           	ret
 406+ 9566
 407+ 9566              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9566
 409+ 9566              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9566              ;
 411+ 9566              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9566
 413+ 9566 7D           column ld a,l
 414+ 9567 E6 1F        	and $1f
 415+ 9569 FE 10         	cp $10
 416+ 956B C9            	ret
 417+ 956C
 418+ 956C              ; --------------------------------------------------------------------------------------------------------------------
 419+ 956C              ;
 420+ 956C              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 956C              ;
 422+ 956C              ; 14/12/22
 423+ 956C              ;
 424+ 956C              ;	Modifica: A y BC.
 425+ 956C
 426+ 956C 3A DD 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 956F E6 01        	and 1
 428+ 9571 28 17        	jr z,1F
 429+ 9573
 430+ 9573              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9573
 432+ 9573 3A CF 88     	ld a,(Coordenada_X)
 433+ 9576 47           	ld b,a
 434+ 9577 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9578 79           	ld a,c
 436+ 9579 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 957A 38 08        	jr c,2F
 438+ 957C 47           	ld b,a
 439+ 957D 79           	ld a,c
 440+ 957E 90           	sub b
 441+ 957F 32 00 89     	ld (Columnas),a
 442+ 9582 18 1B        	jr 4F
 443+ 9584 79           2 ld a,c
 444+ 9585 32 00 89     	ld (Columnas),a
 445+ 9588 18 15        	jr 4F
 446+ 958A
 447+ 958A              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 958A
 449+ 958A 3A CF 88     1 ld a,(Coordenada_X)
 450+ 958D 81           	add c
 451+ 958E 3D           	dec a
 452+ 958F D6 1F        	sub $1f
 453+ 9591 38 08        	jr c,3F
 454+ 9593 47           	ld b,a
 455+ 9594 79           	ld a,c
 456+ 9595 90           	sub b
 457+ 9596 32 00 89     	ld (Columnas),a
 458+ 9599 18 04        	jr 4F
 459+ 959B 79           3 ld a,c
 460+ 959C 32 00 89     	ld (Columnas),a
 461+ 959F D9           4 exx
 462+ 95A0 4F           	ld c,a
 463+ 95A1 D9           	exx
 464+ 95A2 C9            ret
 465+ 95A3
 466+ 95A3              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95A3              ;
 468+ 95A3              ;   19/7/23
 469+ 95A3              ;
 470+ 95A3              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95A3              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95A3              ;
 473+ 95A3              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95A3              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95A3              ;
 476+ 95A3              ;	DESTRUYE: HL,B Y A.
 477+ 95A3
 478+ 95A3 3A DD 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95A6 FE 02        	cp 2
 480+ 95A8 38 18        	jr c,1F
 481+ 95AA 28 16        	jr z,1F
 482+ 95AC E6 01        	and 1
 483+ 95AE 28 0D        	jr z,3F
 484+ 95B0
 485+ 95B0              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95B0
 487+ 95B0 CD F6 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95B3
 489+ 95B3 7D           9 ld a,l
 490+ 95B4 E6 1F        	and $1f
 491+ 95B6 28 2A        	jr z,7F
 492+ 95B8 2B           	dec hl
 493+ 95B9 10 F8        	djnz 9B
 494+ 95BB 18 25        	jr 7F
 495+ 95BD
 496+ 95BD              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95BD
 498+ 95BD 2A CB 88     3 ld hl,(Posicion_actual)
 499+ 95C0 18 20        	jr 7F
 500+ 95C2
 501+ 95C2 28 14        1 jr z,2F
 502+ 95C4
 503+ 95C4              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95C4
 505+ 95C4 CD F6 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95C7
 507+ 95C7 7D           4 ld a,l
 508+ 95C8 E6 1F        	and $1f
 509+ 95CA 28 03        	jr z,6F
 510+ 95CC 2B           	dec hl
 511+ 95CD 10 F8        	djnz 4B
 512+ 95CF 06 0F        6 ld b,15
 513+ 95D1 CD 57 96     5 call PreviousScan
 514+ 95D4 10 FB        	djnz 5B
 515+ 95D6 18 0A        	jr 7F
 516+ 95D8
 517+ 95D8              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95D8
 519+ 95D8 CD F6 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95DB 06 0F        	ld b,15
 521+ 95DD CD 57 96     8 call PreviousScan
 522+ 95E0 10 FB        	djnz 8B
 523+ 95E2
 524+ 95E2 E5           7 push hl
 525+ 95E3 DD E1        	pop ix
 526+ 95E5
 527+ 95E5 2A CD 88     	ld hl,(Puntero_objeto)
 528+ 95E8 E5           	push hl
 529+ 95E9 FD E1        	pop iy
 530+ 95EB
 531+ 95EB              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95EB
 533+ 95EB 3A F3 88     	ld a,(Ctrl_0)
 534+ 95EE CB 77        	bit 6,a
 535+ 95F0 C8           	ret z
 536+ 95F1
 537+ 95F1              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95F1              ; _ entidad / Amadeus´.
 539+ 95F1
 540+ 95F1 DD 22 50 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95F5
 542+ 95F5 C9           	ret
 543+ 95F6
 544+ 95F6              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95F6              ;
 546+ 95F6              ;	2/1/23
 547+ 95F6              ;
 548+ 95F6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95F6              ;
 550+ 95F6              ;	Tras esta rutina tenemos:
 551+ 95F6              ;
 552+ 95F6              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95F6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95F6              ;
 555+ 95F6              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95F6
 557+ 95F6 2A CB 88     Operandos ld hl,(Posicion_actual)
 558+ 95F9 3A 00 89     	ld a,(Columnas)
 559+ 95FC 3D           	dec a
 560+ 95FD 20 01        	jr nz,1F
 561+ 95FF 3C           	inc a
 562+ 9600 47           1 ld b,a
 563+ 9601 C9           	ret
 564+ 9602
 565+ 9602              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9602              ;
 567+ 9602              ;	3/1/23
 568+ 9602              ;
 569+ 9602              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9602              ;
 571+ 9602              ;	Destruye: A,B,HL y DE.
 572+ 9602
 573+ 9602              Define_rutina_de_impresion
 574+ 9602
 575+ 9602 3A CA 88     	ld a,(Columns)
 576+ 9605 47           	ld b,a
 577+ 9606 3A 00 89     	ld a,(Columnas)
 578+ 9609 B8           	cp b
 579+ 960A 20 0D        	jr nz,2f
 580+ 960C
 581+ 960C              ;	La entidad se imprime entera.
 582+ 960C
 583+ 960C 21 2B 97     	ld hl, Indice_entidades_completas
 584+ 960F E6 01        	and 1
 585+ 9611 28 02        	jr z,1F
 586+ 9613
 587+ 9613 23           	inc hl
 588+ 9614 23           	inc hl
 589+ 9615
 590+ 9615 CD 7D 8C     1 call Extrae_address
 591+ 9618 C9           	ret		;	ret
 592+ 9619
 593+ 9619              ;	La entidad no se imprime entera en pantalla.
 594+ 9619
 595+ 9619 3A DD 88     2 ld a,(Cuad_objeto)
 596+ 961C E6 01        	and 1
 597+ 961E 28 17        	jr z,3F
 598+ 9620
 599+ 9620              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9620
 601+ 9620 21 2F 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9623 3A CA 88     4 ld a,(Columns)
 603+ 9626 E6 01        	and 1
 604+ 9628 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 962A
 606+ 962A 23           	inc hl
 607+ 962B 23           	inc hl
 608+ 962C
 609+ 962C 3A 00 89     	ld a,(Columnas)
 610+ 962F E6 01        	and 1
 611+ 9631 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9633
 613+ 9633 23           	inc hl
 614+ 9634 23           	inc hl
 615+ 9635
 616+ 9635 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9637
 618+ 9637 21 35 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 963A 18 E7        	jr 4B
 620+ 963C
 621+ 963C              ; --------------------------------------------------------------------------------------------------------------------
 622+ 963C              ;
 623+ 963C              ;	Prepara_draw
 624+ 963C              ;
 625+ 963C              ;	Es una rutina de carga.
 626+ 963C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 963C              ;
 628+ 963C              ;	FUNCIONAMIENTO:
 629+ 963C              ;
 630+ 963C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 963C              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 963C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 963C              ;
 634+ 963C              ;	DESTRUYE:
 635+ 963C              ;
 636+ 963C              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 963C
 638+ 963C 21 C9 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 963F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9640 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9641 4E           	ld c,(hl)
 642+ 9642 2A CB 88     	ld hl,(Posicion_actual)
 643+ 9645 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9647 C9           	ret
 645+ 9648
 646+ 9648              ;----------------------------------------------------------------------------------------------------------------
 647+ 9648              ;
 648+ 9648              ;	5/08/22
 649+ 9648              ;
 650+ 9648              ;   NextScan.
 651+ 9648              ;
 652+ 9648              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9648              ;
 654+ 9648              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9648              ;
 656+ 9648              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9648              ;
 658+ 9648              ;       DESTRUIDOS: AF y HL !!!
 659+ 9648              ;
 660+ 9648              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9648              ;
 662+ 9648
 663+ 9648 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9649 7C               ld a,h
 665+ 964A E6 07            and 7
 666+ 964C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 964D
 668+ 964D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 964E C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9650 6F               ld l,a
 671+ 9651 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9652
 673+ 9652 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9653 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9655 67               ld h,a
 676+ 9656 C9               ret
 677+ 9657
 678+ 9657              ;----------------------------------------------------------------------------------------------------------------
 679+ 9657              ;
 680+ 9657              ;	5/08/22
 681+ 9657              ;
 682+ 9657              ;   PreviousScan.
 683+ 9657              ;
 684+ 9657              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9657              ;
 686+ 9657              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9657              ;
 688+ 9657              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9657              ;
 690+ 9657              ;       DESTRUIDOS: AF y HL !!!
 691+ 9657              ;
 692+ 9657              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9657              ;
 694+ 9657
 695+ 9657 7C           PreviousScan ld a,h
 696+ 9658 25               dec h               ; Dec H.
 697+ 9659 E6 07            and 7
 698+ 965B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 965C
 700+ 965C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 965D D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 965F 6F               ld l,a
 703+ 9660 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9661
 705+ 9661 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9662 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9664 67               ld h,a
 708+ 9665 C9               ret
 709+ 9666
 710+ 9666              ; -----------------------------------------------------------------------------------
 711+ 9666              ;
 712+ 9666              ;	31/7/23
 713+ 9666              ;
 714+ 9666              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9666              ;	Extrae fotos de Album_de_fotos.
 716+ 9666
 717+ 9666              Extrae_foto_entidades
 718+ 9666
 719+ 9666 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9669 7E           	ld a,(hl)
 721+ 966A A7           	and a
 722+ 966B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 966C
 724+ 966C 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 966F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9670 C8           	ret z
 727+ 9671
 728+ 9671              ; -----------------------------------
 729+ 9671
 730+ 9671 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9675 31 00 70     	ld sp,Album_de_fotos
 732+ 9678
 733+ 9678 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 967A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 967B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 967C
 737+ 967C ED 73 1A 89  	ld (Stack_2),sp
 738+ 9680 ED 7B 18 89  	ld sp,(Stack)
 739+ 9684
 740+ 9684              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9684
 742+ 9684 3E CD        	ld a,$cd
 743+ 9686 32 8E 96     	ld (Imprime),a
 744+ 9689 EB           	ex de,hl
 745+ 968A 22 8F 96     	ld (Imprime+1),hl
 746+ 968D EB           	ex de,hl
 747+ 968E
 748+ 968E              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 968E
 750+ 968E 00 00 00     Imprime db 0,0,0
 751+ 9691
 752+ 9691 ED 73 18 89  	ld (Stack),sp
 753+ 9695
 754+ 9695 3A 13 89     	ld a,(Numero_de_malotes)
 755+ 9698 3D           	dec a
 756+ 9699 28 09        	jr z,1F
 757+ 969B 32 13 89      	ld (Numero_de_malotes),a
 758+ 969E
 759+ 969E ED 7B 1A 89  	ld sp,(Stack_2)
 760+ 96A2 18 D4        	jr 2B
 761+ 96A4
 762+ 96A4 AF           1 xor a
 763+ 96A5 32 1A 89     	ld (Stack_2),a
 764+ 96A8
 765+ 96A8 C9           	ret
 766+ 96A9
 767+ 96A9              ; -----------------------------------------------------------------------------------
 768+ 96A9              ;
 769+ 96A9              ;	28/2/23
 770+ 96A9              ;
 771+ 96A9              ;	Pinta los disparos generados.
 772+ 96A9
 773+ 96A9              Extrae_foto_disparos
 774+ 96A9
 775+ 96A9 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96AC 7E               ld a,(hl)
 777+ 96AD A7               and a
 778+ 96AE C8               ret z
 779+ 96AF
 780+ 96AF 3A 40 89     	ld a,(Numero_de_disparotes)
 781+ 96B2 A7           	and a
 782+ 96B3 C8           	ret z
 783+ 96B4 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96B8 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96BB
 786+ 96BB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96BD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96BE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96BF
 790+ 96BF ED 73 1A 89  	ld (Stack_2),sp
 791+ 96C3 ED 7B 18 89  	ld sp,(Stack)
 792+ 96C7
 793+ 96C7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96C7
 795+ 96C7 3E CD        	ld a,$cd
 796+ 96C9 32 D1 96     	ld (Imprime2),a
 797+ 96CC EB           	ex de,hl
 798+ 96CD 22 D2 96     	ld (Imprime2+1),hl
 799+ 96D0 EB           	ex de,hl
 800+ 96D1
 801+ 96D1              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96D1
 803+ 96D1 00 00 00     Imprime2 db 0,0,0
 804+ 96D4
 805+ 96D4 3A 40 89     	ld a,(Numero_de_disparotes)
 806+ 96D7 3D           	dec a
 807+ 96D8 28 09        	jr z,1F
 808+ 96DA 32 40 89      	ld (Numero_de_disparotes),a
 809+ 96DD
 810+ 96DD ED 7B 1A 89  	ld sp,(Stack_2)
 811+ 96E1 18 D8        	jr 2B
 812+ 96E3
 813+ 96E3 AF           1 xor a
 814+ 96E4 32 1A 89     	ld (Stack_2),a
 815+ 96E7 C9           	ret
 816+ 96E8
 817+ 96E8              ; -----------------------------------------------------------------------------------
 818+ 96E8              ;
 819+ 96E8              ;	4/9/23
 820+ 96E8              ;
 821+ 96E8              ;	Rutina principal de pintado de Amadeus.
 822+ 96E8              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 96E8
 824+ 96E8 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 96EB 7E           	ld a,(hl)
 826+ 96EC A7           	and a
 827+ 96ED C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 96EE
 829+ 96EE 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 96F1 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 96F2 C8           	ret z
 832+ 96F3
 833+ 96F3              ; -----------------------------------
 834+ 96F3
 835+ 96F3 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 96F7 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 96FA
 838+ 96FA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 96FC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 96FD D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 96FE
 842+ 96FE ED 73 1A 89  	ld (Stack_2),sp
 843+ 9702 ED 7B 18 89  	ld sp,(Stack)
 844+ 9706
 845+ 9706              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9706
 847+ 9706 3E CD        	ld a,$cd
 848+ 9708 32 10 97     	ld (Imprime_Amadeus),a
 849+ 970B EB           	ex de,hl
 850+ 970C 22 11 97     	ld (Imprime_Amadeus+1),hl
 851+ 970F EB           	ex de,hl
 852+ 9710
 853+ 9710              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9710
 855+ 9710 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9713
 857+ 9713 ED 73 18 89  	ld (Stack),sp
 858+ 9717
 859+ 9717 3A 13 89     	ld a,(Numero_de_malotes)
 860+ 971A 3D           	dec a
 861+ 971B 28 09        	jr z,1F
 862+ 971D 32 13 89      	ld (Numero_de_malotes),a
 863+ 9720
 864+ 9720 ED 7B 1A 89  	ld sp,(Stack_2)
 865+ 9724 18 D4        	jr 2B
 866+ 9726
 867+ 9726 AF           1 xor a
 868+ 9727 32 1A 89     	ld (Stack_2),a
 869+ 972A
 870+ 972A C9           	ret
# file closed: Draw_XOR.asm
1654  972B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 972B              ;   índices de Rutinas de impresión.
   2+ 972B
   3+ 972B 3B 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 972D 68 97            defw Pinta_Amadeus_3x2
   5+ 972F
   6+ 972F BE 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9731 5E 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9733 12 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9735
  10+ 9735 E8 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9737 EC 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9739 A0 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 973B
  14+ 973B
  15+ 973B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 973B              ;
  17+ 973B              ;   12/12/22
  18+ 973B              ;
  19+ 973B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 973B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 973B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 973B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 973B              ;
  24+ 973B              ;   Modifica: DE y HL.
  25+ 973B
  26+ 973B ED 73 18 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 973F FD F9        	ld sp,iy
  28+ 9741 06 10            ld b,16
  29+ 9743 D1           1 pop de
  30+ 9744 7B               ld a,e
  31+ 9745 AE               xor (hl)
  32+ 9746 77           	ld (hl),a
  33+ 9747 23           	inc hl
  34+ 9748 7A               ld a,d
  35+ 9749 AE               xor (hl)
  36+ 974A 77           	ld (hl),a
  37+ 974B 2B           	dec hl
  38+ 974C 24           	inc h
  39+ 974D 7C               ld a,h
  40+ 974E E6 07            and 7
  41+ 9750 20 0A            jr nz,2F
  42+ 9752 7D               ld a,l
  43+ 9753 C6 20            add a,$20
  44+ 9755 6F               ld l,a
  45+ 9756 38 04            jr c,2F
  46+ 9758 7C               ld a,h
  47+ 9759 D6 08            sub 8
  48+ 975B 67               ld h,a
  49+ 975C 7C           2 ld a,h
  50+ 975D FE 58            cp $58
  51+ 975F 28 02            jr z,3F
  52+ 9761 10 E0            djnz 1B
  53+ 9763 ED 7B 18 89  3 ld sp,(Stack)
  54+ 9767 C9           	ret
  55+ 9768
  56+ 9768 ED 73 18 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 976C FD F9        	ld sp,iy
  58+ 976E 06 08            ld b,8
  59+ 9770 D1           1 pop de
  60+ 9771 7B               ld a,e
  61+ 9772 AE               xor (hl)
  62+ 9773 77           	ld (hl),a
  63+ 9774 23           	inc hl
  64+ 9775 7A               ld a,d
  65+ 9776 AE               xor (hl)
  66+ 9777 77           	ld (hl),a
  67+ 9778 23           	inc hl
  68+ 9779 D1           	pop de
  69+ 977A 7B               ld a,e
  70+ 977B AE               xor (hl)
  71+ 977C 77           	ld (hl),a
  72+ 977D 2B           	dec hl
  73+ 977E 2B           	dec hl
  74+ 977F 24           	inc h
  75+ 9780 7C               ld a,h
  76+ 9781 E6 07            and 7
  77+ 9783 20 0A            jr nz,2F
  78+ 9785 7D               ld a,l
  79+ 9786 C6 20            add a,$20
  80+ 9788 6F               ld l,a
  81+ 9789 38 04            jr c,2F
  82+ 978B 7C               ld a,h
  83+ 978C D6 08            sub 8
  84+ 978E 67               ld h,a
  85+ 978F 7C           2 ld a,h
  86+ 9790 FE 58            cp $58
  87+ 9792 28 25            jr z,4F
  88+ 9794 7A               ld a,d
  89+ 9795 AE               xor (hl)
  90+ 9796 77               ld (hl),a
  91+ 9797 D1           	pop de
  92+ 9798 23           	inc hl
  93+ 9799 7B               ld a,e
  94+ 979A AE               xor (hl)
  95+ 979B 77           	ld (hl),a
  96+ 979C 23           	inc hl
  97+ 979D 7A               ld a,d
  98+ 979E AE               xor (hl)
  99+ 979F 77           	ld (hl),a
 100+ 97A0 2B           	dec hl
 101+ 97A1 2B           	dec hl
 102+ 97A2 24           	inc h
 103+ 97A3 7C               ld a,h
 104+ 97A4 E6 07            and 7
 105+ 97A6 20 0A            jr nz,3F
 106+ 97A8 7D               ld a,l
 107+ 97A9 C6 20            add a,$20
 108+ 97AB 6F               ld l,a
 109+ 97AC 38 04            jr c,3F
 110+ 97AE 7C               ld a,h
 111+ 97AF D6 08            sub 8
 112+ 97B1 67               ld h,a
 113+ 97B2 7C           3 ld a,h
 114+ 97B3 FE 58            cp $58
 115+ 97B5 28 02            jr z,4F
 116+ 97B7 10 B7            djnz 1B
 117+ 97B9 ED 7B 18 89  4 ld sp,(Stack)
 118+ 97BD C9           	ret
 119+ 97BE
 120+ 97BE              ; ---------------------------------------------------
 121+ 97BE
 122+ 97BE ED 73 18 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97C2 FD F9        	ld sp,iy
 124+ 97C4
 125+ 97C4              ; >>>
 126+ 97C4
 127+ 97C4 06 10            ld b,16
 128+ 97C6 D1           1 pop de
 129+ 97C7 7A           	ld a,d
 130+ 97C8 AE           	xor (hl)
 131+ 97C9 77           	ld (hl),a
 132+ 97CA 24           	inc h
 133+ 97CB 7C               ld a,h
 134+ 97CC E6 07            and 7
 135+ 97CE 20 0C            jr nz,2F
 136+ 97D0 7D               ld a,l
 137+ 97D1 C6 20            add a,$20
 138+ 97D3 6F               ld l,a
 139+ 97D4 38 06            jr c,2F
 140+ 97D6 7C               ld a,h
 141+ 97D7 D6 08            sub 8
 142+ 97D9 67               ld h,a
 143+ 97DA 18 00            jr 2F
 144+ 97DC 7C           2 ld a,h
 145+ 97DD FE 58            cp $58
 146+ 97DF 28 02            jr z,3F
 147+ 97E1 10 E3            djnz 1B
 148+ 97E3 ED 7B 18 89  3 ld sp,(Stack)
 149+ 97E7 C9           	ret
 150+ 97E8
 151+ 97E8 ED 73 18 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97EC FD F9        	ld sp,iy
 153+ 97EE
 154+ 97EE              ; >>>
 155+ 97EE
 156+ 97EE 06 10            ld b,16
 157+ 97F0 D1           1 pop de
 158+ 97F1 7B           	ld a,e
 159+ 97F2 AE           	xor (hl)
 160+ 97F3 77           	ld (hl),a
 161+ 97F4 24           	inc h
 162+ 97F5 7C               ld a,h
 163+ 97F6 E6 07            and 7
 164+ 97F8 20 0C            jr nz,2F
 165+ 97FA 7D               ld a,l
 166+ 97FB C6 20            add a,$20
 167+ 97FD 6F               ld l,a
 168+ 97FE 38 06            jr c,2F
 169+ 9800 7C               ld a,h
 170+ 9801 D6 08            sub 8
 171+ 9803 67               ld h,a
 172+ 9804 18 00            jr 2F
 173+ 9806 7C           2 ld a,h
 174+ 9807 FE 58            cp $58
 175+ 9809 28 02            jr z,3F
 176+ 980B 10 E3            djnz 1B
 177+ 980D ED 7B 18 89  3 ld sp,(Stack)
 178+ 9811 C9           	ret
 179+ 9812
 180+ 9812              ; ---------------------------------------------------
 181+ 9812
 182+ 9812 ED 73 18 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9816 FD F9        	ld sp,iy
 184+ 9818 06 08            ld b,8
 185+ 981A D1           1 pop de
 186+ 981B 7A           	ld a,d
 187+ 981C AE           	xor (hl)
 188+ 981D 77           	ld (hl),a
 189+ 981E 23           	inc hl
 190+ 981F D1           	pop de
 191+ 9820 7B           	ld a,e
 192+ 9821 AE           	xor (hl)
 193+ 9822 77           	ld (hl),a
 194+ 9823 2B           	dec hl
 195+ 9824 24            	inc h
 196+ 9825 7C               ld a,h
 197+ 9826 E6 07            and 7
 198+ 9828 20 0A            jr nz,2F
 199+ 982A 7D               ld a,l
 200+ 982B C6 20            add a,$20
 201+ 982D 6F               ld l,a
 202+ 982E 38 04            jr c,2F
 203+ 9830 7C               ld a,h
 204+ 9831 D6 08            sub 8
 205+ 9833 67               ld h,a
 206+ 9834 7C           2 ld a,h
 207+ 9835 FE 58            cp $58
 208+ 9837 28 20            jr z,4F
 209+ 9839 D1               pop de
 210+ 983A 7B           	ld a,e
 211+ 983B AE           	xor (hl)
 212+ 983C 77           	ld (hl),a
 213+ 983D 23           	inc hl
 214+ 983E 7A           	ld a,d
 215+ 983F AE           	xor (hl)
 216+ 9840 77           	ld (hl),a
 217+ 9841 2B           	dec hl
 218+ 9842 24           	inc h
 219+ 9843 7C               ld a,h
 220+ 9844 E6 07            and 7
 221+ 9846 20 0A            jr nz,3F
 222+ 9848 7D               ld a,l
 223+ 9849 C6 20            add a,$20
 224+ 984B 6F               ld l,a
 225+ 984C 38 04            jr c,3F
 226+ 984E 7C               ld a,h
 227+ 984F D6 08            sub 8
 228+ 9851 67               ld h,a
 229+ 9852 7C           3 ld a,h
 230+ 9853 FE 58            cp $58
 231+ 9855 28 02            jr z,4F
 232+ 9857 10 C1            djnz 1B
 233+ 9859 ED 7B 18 89  4 ld sp,(Stack)
 234+ 985D C9           	ret
 235+ 985E
 236+ 985E ED 73 18 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9862 FD F9        	ld sp,iy
 238+ 9864 06 08            ld b,8
 239+ 9866 D1           1 pop de
 240+ 9867 D1           	pop de
 241+ 9868 7B           	ld a,e
 242+ 9869 AE           	xor (hl)
 243+ 986A 77           	ld (hl),a
 244+ 986B 24            	inc h
 245+ 986C 7C               ld a,h
 246+ 986D E6 07            and 7
 247+ 986F 20 0A            jr nz,2F
 248+ 9871 7D               ld a,l
 249+ 9872 C6 20            add a,$20
 250+ 9874 6F               ld l,a
 251+ 9875 38 04            jr c,2F
 252+ 9877 7C               ld a,h
 253+ 9878 D6 08            sub 8
 254+ 987A 67               ld h,a
 255+ 987B 7C           2 ld a,h
 256+ 987C FE 58            cp $58
 257+ 987E 28 1B            jr z,4F
 258+ 9880 D1               pop de
 259+ 9881 7A           	ld a,d
 260+ 9882 AE           	xor (hl)
 261+ 9883 77           	ld (hl),a
 262+ 9884 24           	inc h
 263+ 9885 7C               ld a,h
 264+ 9886 E6 07            and 7
 265+ 9888 20 0A            jr nz,3F
 266+ 988A 7D               ld a,l
 267+ 988B C6 20            add a,$20
 268+ 988D 6F               ld l,a
 269+ 988E 38 04            jr c,3F
 270+ 9890 7C               ld a,h
 271+ 9891 D6 08            sub 8
 272+ 9893 67               ld h,a
 273+ 9894 7C           3 ld a,h
 274+ 9895 FE 58            cp $58
 275+ 9897 28 02            jr z,4F
 276+ 9899 10 CB            djnz 1B
 277+ 989B ED 7B 18 89  4 ld sp,(Stack)
 278+ 989F C9           	ret
 279+ 98A0
 280+ 98A0 ED 73 18 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98A4 FD F9        	ld sp,iy
 282+ 98A6 06 08            ld b,8
 283+ 98A8 D1           1 pop de
 284+ 98A9 7B           	ld a,e
 285+ 98AA AE           	xor (hl)
 286+ 98AB 77           	ld (hl),a
 287+ 98AC 23           	inc hl
 288+ 98AD 7A           	ld a,d
 289+ 98AE AE           	xor (hl)
 290+ 98AF 77           	ld (hl),a
 291+ 98B0 2B           	dec hl
 292+ 98B1 24             	inc h
 293+ 98B2 7C               ld a,h
 294+ 98B3 E6 07            and 7
 295+ 98B5 20 0A            jr nz,2F
 296+ 98B7 7D               ld a,l
 297+ 98B8 C6 20            add a,$20
 298+ 98BA 6F               ld l,a
 299+ 98BB 38 04            jr c,2F
 300+ 98BD 7C               ld a,h
 301+ 98BE D6 08            sub 8
 302+ 98C0 67               ld h,a
 303+ 98C1 7C           2 ld a,h
 304+ 98C2 FE 58            cp $58
 305+ 98C4 28 21            jr z,4F
 306+ 98C6 D1               pop de
 307+ 98C7 7A           	ld a,d
 308+ 98C8 AE           	xor (hl)
 309+ 98C9 77           	ld (hl),a
 310+ 98CA 23           	inc hl
 311+ 98CB D1               pop de
 312+ 98CC 7B           	ld a,e
 313+ 98CD AE           	xor (hl)
 314+ 98CE 77           	ld (hl),a
 315+ 98CF 2B           	dec hl
 316+ 98D0 24           	inc h
 317+ 98D1 7C               ld a,h
 318+ 98D2 E6 07            and 7
 319+ 98D4 20 0A            jr nz,3F
 320+ 98D6 7D               ld a,l
 321+ 98D7 C6 20            add a,$20
 322+ 98D9 6F               ld l,a
 323+ 98DA 38 04            jr c,3F
 324+ 98DC 7C               ld a,h
 325+ 98DD D6 08            sub 8
 326+ 98DF 67               ld h,a
 327+ 98E0 7C           3 ld a,h
 328+ 98E1 FE 58            cp $58
 329+ 98E3 28 02            jr z,4F
 330+ 98E5 10 C1            djnz 1B
 331+ 98E7 ED 7B 18 89  4 ld sp,(Stack)
 332+ 98EB C9           	ret
 333+ 98EC
 334+ 98EC ED 73 18 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98F0 FD F9        	ld sp,iy
 336+ 98F2 06 08            ld b,8
 337+ 98F4 D1           1 pop de
 338+ 98F5 7B           	ld a,e
 339+ 98F6 AE           	xor (hl)
 340+ 98F7 77           	ld (hl),a
 341+ 98F8 24            	inc h
 342+ 98F9 7C               ld a,h
 343+ 98FA E6 07            and 7
 344+ 98FC 20 0A            jr nz,2F
 345+ 98FE 7D               ld a,l
 346+ 98FF C6 20            add a,$20
 347+ 9901 6F               ld l,a
 348+ 9902 38 04            jr c,2F
 349+ 9904 7C               ld a,h
 350+ 9905 D6 08            sub 8
 351+ 9907 67               ld h,a
 352+ 9908 7C           2 ld a,h
 353+ 9909 FE 58            cp $58
 354+ 990B 28 1C            jr z,4F
 355+ 990D D1               pop de
 356+ 990E 7A           	ld a,d
 357+ 990F AE           	xor (hl)
 358+ 9910 77           	ld (hl),a
 359+ 9911 24           	inc h
 360+ 9912 7C               ld a,h
 361+ 9913 E6 07            and 7
 362+ 9915 20 0A            jr nz,3F
 363+ 9917 7D               ld a,l
 364+ 9918 C6 20            add a,$20
 365+ 991A 6F               ld l,a
 366+ 991B 38 04            jr c,3F
 367+ 991D 7C               ld a,h
 368+ 991E D6 08            sub 8
 369+ 9920 67               ld h,a
 370+ 9921 7C           3 ld a,h
 371+ 9922 FE 58            cp $58
 372+ 9924 28 03            jr z,4F
 373+ 9926 D1               pop de
 374+ 9927 10 CB            djnz 1B
 375+ 9929 ED 7B 18 89  4 ld sp,(Stack)
 376+ 992D C9           	ret
 377+ 992E
 378+ 992E              ; ---------------------------------------------------
 379+ 992E              ;
 380+ 992E              ;   27/02/23
 381+ 992E              ;
 382+ 992E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 992E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 992E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 992E
 386+ 992E ED 73 18 89  Pinta_Disparo ld (Stack),sp
 387+ 9932 FD F9            ld sp,iy
 388+ 9934 06 03            ld b,3
 389+ 9936 D1           1 pop de
 390+ 9937 7B               ld a,e
 391+ 9938 AE               xor (hl)
 392+ 9939 77               ld (hl),a
 393+ 993A 23               inc hl
 394+ 993B 7A               ld a,d
 395+ 993C AE               xor (hl)
 396+ 993D 77               ld (hl),a
 397+ 993E 2B               dec hl
 398+ 993F
 399+ 993F 24               inc h
 400+ 9940 7C               ld a,h
 401+ 9941 E6 07            and 7
 402+ 9943 20 0A            jr nz,2F
 403+ 9945 7D               ld a,l
 404+ 9946 C6 20            add a,$20
 405+ 9948 6F               ld l,a
 406+ 9949 38 04            jr c,2F
 407+ 994B 7C               ld a,h
 408+ 994C D6 08            sub 8
 409+ 994E 67               ld h,a
 410+ 994F 7C           2 ld a,h
 411+ 9950 FE 58            cp $58
 412+ 9952 28 02            jr z,3F
 413+ 9954
 414+ 9954 10 E0            djnz 1B
 415+ 9956 ED 7B 18 89  3 ld sp,(Stack)
 416+ 995A C9               ret
 417+ 995B
# file closed: Rutinas_de_impresion_sprites.asm
1655  995B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 995B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 995B              ;
   3+ 995B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 995B              ;
   5+ 995B              ; *****************************************************************************************************************************************************************************************
   6+ 995B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 995B
   8+ 995B 7C           calcula_tercio ld a,h
   9+ 995C E6 18        	and $18
  10+ 995E CB 2F        	sra a
  11+ 9960 CB 2F        	sra a
  12+ 9962 CB 2F        	sra a
  13+ 9964 C9           	ret
  14+ 9965
# file closed: calcula_tercio.asm
1656  9965              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9965              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9965              ;
   3+ 9965              ;
   4+ 9965              ;	CLS.
   5+ 9965              ;
   6+ 9965              ;	Limpia la pantalla y define sus atributos.
   7+ 9965              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9965              ;
   9+ 9965              ;	COLORES: 0 ..... NEGRO
  10+ 9965              ;    		 1 ..... AZUL
  11+ 9965              ; 			 2 ..... ROJO
  12+ 9965              ;			 3 ..... MAGENTA
  13+ 9965              ; 			 4 ..... VERDE
  14+ 9965              ; 			 5 ..... CIAN
  15+ 9965              ;			 6 ..... AMARILLO
  16+ 9965              ; 			 7 ..... BLANCO
  17+ 9965              ;
  18+ 9965              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9965              ;
  20+ 9965              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9965
  22+ 9965
  23+ 9965 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9968 11 01 40     	LD DE,$4001
  25+ 996B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 996E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9970 ED B0        	LDIR
  28+ 9972 01 FF 02     	LD BC,767
  29+ 9975 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9976 ED B0        	LDIR
  31+ 9978 C9           	ret
  32+ 9979
# file closed: Cls.asm
1657  9979              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9979              ; ******************************************************************************************************************************************************************************************
   2+ 9979              ;
   3+ 9979              ;   20/05/23
   4+ 9979              ;
   5+ 9979              ;	Recompone_posicion_inicio
   6+ 9979              ;
   7+ 9979              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9979              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9979              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9979              ;	_ a una u otra rutina.
  11+ 9979
  12+ 9979              Recompone_posicion_inicio
  13+ 9979
  14+ 9979 2A DB 88     	ld hl,(Posicion_inicio)
  15+ 997C 7D           	ld a,l
  16+ 997D E6 1F        	and $1f
  17+ 997F 28 16        	jr z,1F
  18+ 9981
  19+ 9981 FE 1F        	cp $1f
  20+ 9983 28 0D        	jr z,3F
  21+ 9985
  22+ 9985 21 04 89     	ld hl,Ctrl_2
  23+ 9988 CB C6        	set 0,(hl)
  24+ 998A 2A CD 88     	ld hl,(Puntero_objeto)
  25+ 998D 22 07 89     	ld (Repone_puntero_objeto),hl
  26+ 9990 18 08        	jr 2F
  27+ 9992
  28+ 9992 CD 33 9B     3 call Mov_left
  29+ 9995 18 03        	jr 2F
  30+ 9997
  31+ 9997 CD 15 9A     1 call Mov_right
  32+ 999A 21 00 F0     2 ld hl,Sprite_vacio
  33+ 999D 22 CD 88     	ld (Puntero_objeto),hl
  34+ 99A0 C9           	ret
  35+ 99A1
  36+ 99A1              ; ******************************************************************************************************************************************************************************************
  37+ 99A1              ;
  38+ 99A1              ;   27/05/23
  39+ 99A1              ;
  40+ 99A1              ;	Mov_down
  41+ 99A1              ;
  42+ 99A1              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99A1              ;
  44+ 99A1              ;
  45+ 99A1              Mov_down
  46+ 99A1
  47+ 99A1 CD 03 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99A4              ;																	; _ repone (Puntero_objeto).
  49+ 99A4 21 F3 88     	ld hl,Ctrl_0
  50+ 99A7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99A9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99A9              ; 																	; _ en el caso de que no lo haya.
  53+ 99A9 3A E1 88     	ld a,(Vel_down)
  54+ 99AC 47           	ld b,a
  55+ 99AD 2A CB 88         ld hl,(Posicion_actual)
  56+ 99B0 CD 5B 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99B3 E6 02        	and 2
  58+ 99B5 28 0F        	jr z,1F
  59+ 99B7
  60+ 99B7              ; Nos encontramos en el último tercio de pantalla.
  61+ 99B7              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99B7
  63+ 99B7 7C           	ld a,h
  64+ 99B8 FE 57        	cp $57
  65+ 99BA 20 0A        	jr nz,1F
  66+ 99BC
  67+ 99BC 7D           	ld a,l
  68+ 99BD C6 20        	add $20
  69+ 99BF 30 05        	jr nc,1F
  70+ 99C1
  71+ 99C1              ; ------------------------------
  72+ 99C1              ;	call Reaparece_arriba
  73+ 99C1 CD C0 9C     	call Reinicio
  74+ 99C4              ; ------------------------------
  75+ 99C4
  76+ 99C4 18 08        	jr 3F
  77+ 99C6 CD 48 96     1 call NextScan
  78+ 99C9 22 CB 88     	ld (Posicion_actual),hl
  79+ 99CC 10 E2            djnz 2B
  80+ 99CE CD E6 9C     3 call Genera_coordenadas
  81+ 99D1 C9           	ret
  82+ 99D2
  83+ 99D2              ; ******************************************************************************************************************************************************************************************
  84+ 99D2              ;
  85+ 99D2              ;   27/05/23
  86+ 99D2              ;
  87+ 99D2              ;	Mov_up
  88+ 99D2              ;
  89+ 99D2              ; 	Mueve el Sprite hacia arriba.
  90+ 99D2              ;
  91+ 99D2              ;
  92+ 99D2              Mov_up
  93+ 99D2
  94+ 99D2 CD 03 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99D5              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99D5 21 F3 88     	ld hl,Ctrl_0
  97+ 99D8 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99DA              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99DA              ; 																		; _ en el caso de que no lo haya.
 100+ 99DA 3A E0 88     	ld a,(Vel_up)
 101+ 99DD 47           	ld b,a
 102+ 99DE 2A CB 88     	ld hl,(Posicion_actual)
 103+ 99E1 CD 5B 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99E4 A7           	and a
 105+ 99E5 20 10        	jr nz,1F
 106+ 99E7
 107+ 99E7              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99E7              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99E7
 110+ 99E7 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99E8 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99EA 20 0B            jr nz,1F
 113+ 99EC 7D               ld a,l
 114+ 99ED D6 20            sub $20
 115+ 99EF 30 06            jr nc,1F
 116+ 99F1 25               dec h
 117+ 99F2
 118+ 99F2              ; -----------------------------
 119+ 99F2 CD A1 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99F5              ;	call Reinicio
 121+ 99F5              ; -----------------------------
 122+ 99F5
 123+ 99F5 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99F7 CD 57 96     1 call PreviousScan
 125+ 99FA 22 CB 88     	ld (Posicion_actual),hl
 126+ 99FD 10 E2            djnz 3B
 127+ 99FF CD E6 9C     2 call Genera_coordenadas
 128+ 9A02 C9           	ret
 129+ 9A03
 130+ 9A03              ; -----------------------------
 131+ 9A03              ;
 132+ 9A03              ;	27/5/23
 133+ 9A03              ;
 134+ 9A03              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A03              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A03              ;
 137+ 9A03              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A03              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A03              ;
 140+ 9A03              ;	Modifica: A y (Puntero_objeto).
 141+ 9A03
 142+ 9A03 3A 04 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A06 CB 47        	bit 0,a
 144+ 9A08 C8           	ret z
 145+ 9A09 CB 87        	res 0,a
 146+ 9A0B 32 04 89     	ld (Ctrl_2),a
 147+ 9A0E 2A 07 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A11 22 CD 88     	ld (Puntero_objeto),hl
 149+ 9A14 C9           	ret
 150+ 9A15
 151+ 9A15              ; ******************************************************************************************************************************************************************************************
 152+ 9A15              ;
 153+ 9A15              ;	19/10/22
 154+ 9A15              ;
 155+ 9A15              ;	Mov_right.
 156+ 9A15              ;
 157+ 9A15              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A15              ;
 159+ 9A15
 160+ 9A15 21 F3 88     Mov_right ld hl,Ctrl_0
 161+ 9A18 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A1A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A1A              ; 																	; _ en el caso de que no lo haya.
 164+ 9A1A 3A F3 88     	ld a,(Ctrl_0)
 165+ 9A1D CB 77        	bit 6,a
 166+ 9A1F 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A21
 168+ 9A21 CD 4F 9C     	call Stop_Amadeus_right
 169+ 9A24 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A25 18 4D        	jr 8F
 171+ 9A27
 172+ 9A27 3A CF 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A2A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A2C 20 46        	jr nz,8F
 175+ 9A2E
 176+ 9A2E 3A D1 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A31 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A32 28 40        	jr z,8F
 179+ 9A34
 180+ 9A34              ; ---------- ---------- ----------
 181+ 9A34              ;
 182+ 9A34              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A34
 184+ 9A34 3A DF 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A37 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A39 28 11        	jr z,1F
 187+ 9A3B 38 06        	jr c,6F
 188+ 9A3D FE 04        	cp 4
 189+ 9A3F 28 14        	jr z,7F
 190+ 9A41 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A43
 192+ 9A43              ; ---------- ---------- ----------
 193+ 9A43              ;
 194+ 9A43              ; Perfiles de velocidad
 195+ 9A43              ;
 196+ 9A43
 197+ 9A43 3A D1 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A46 FE FE        	cp $fe
 199+ 9A48 20 2A        	jr nz,8F
 200+ 9A4A 18 10        	jr 3F
 201+ 9A4C 3A D1 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A4F FE FD        	cp $fd
 203+ 9A51 20 21        	jr nz,8F
 204+ 9A53 18 07        	jr 3F
 205+ 9A55 3A D1 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A58 FE FB        	cp $fb
 207+ 9A5A 20 18        	jr nz,8F
 208+ 9A5C
 209+ 9A5C              ; ---------- ---------- ----------
 210+ 9A5C
 211+ 9A5C              3
 212+ 9A5C CD 8F 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A5F              ;	call Reinicio
 214+ 9A5F
 215+ 9A5F              ; ---------- ---------- ----------
 216+ 9A5F              ;
 217+ 9A5F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A5F
 219+ 9A5F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A61 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A62 CD 7B 9A     	call DESPLZ_DER
 222+ 9A65 C1           	pop bc
 223+ 9A66 10 F9        	djnz 5B
 224+ 9A68 2A CB 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A6B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A6C 22 CB 88     	ld (Posicion_actual),hl
 227+ 9A6F CD E6 9C     	call Genera_coordenadas
 228+ 9A72 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A74
 230+ 9A74              ; ---------- ---------- ----------
 231+ 9A74
 232+ 9A74 2A CB 88     8 ld hl,(Posicion_actual)
 233+ 9A77 CD 7B 9A     	call DESPLZ_DER
 234+ 9A7A C9           2 ret
 235+ 9A7B
 236+ 9A7B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A7B              ;
 238+ 9A7B              ;	22/9/22
 239+ 9A7B              ;
 240+ 9A7B
 241+ 9A7B CD 8A 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A7E CD D6 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A81 CD FF 9A         call Ciclo_completo
 244+ 9A84 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A87 CB FE        	set 7,(hl)
 246+ 9A89 C9           	ret
 247+ 9A8A
 248+ 9A8A              ; ******************************************************************************************************************************************************************************************
 249+ 9A8A              ;	15/02/23
 250+ 9A8A              ;
 251+ 9A8A
 252+ 9A8A 3A DF 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A8D 47           	ld b,a
 254+ 9A8E 2A D7 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A91 23           1 inc hl
 256+ 9A92 23           	inc hl
 257+ 9A93 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A95 22 D7 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A98 CD 7D 8C     	call Extrae_address
 260+ 9A9B 22 CD 88     	ld (Puntero_objeto),hl
 261+ 9A9E
 262+ 9A9E              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A9E
 264+ 9A9E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A9E              ; Cuántos movimientos hemos hecho ??
 266+ 9A9E              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A9E
 268+ 9A9E 2A D3 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AA1 EB           	ex de,hl
 270+ 9AA2 A7           	and a
 271+ 9AA3 ED 52        	sbc hl,de
 272+ 9AA5 CB 3D        	srl l
 273+ 9AA7 3E 08        6 ld a,8
 274+ 9AA9 95           	sub l
 275+ 9AAA 30 1E        	jr nc,3F
 276+ 9AAC
 277+ 9AAC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AAC              ; B="0".
 279+ 9AAC
 280+ 9AAC 04           4 inc b
 281+ 9AAD 3C           	inc a
 282+ 9AAE 20 FC        	jr nz,4B
 283+ 9AB0 78           	ld a,b
 284+ 9AB1 08           	ex af,af
 285+ 9AB2 2A D3 88     	ld hl,(Indice_Sprite_der)
 286+ 9AB5 23           5 inc hl
 287+ 9AB6 23           	inc hl
 288+ 9AB7 10 FC        	djnz 5B
 289+ 9AB9 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9ABC CD 7D 8C     	call Extrae_address
 291+ 9ABF 22 CD 88     	ld (Puntero_objeto),hl
 292+ 9AC2
 293+ 9AC2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AC2              ; _(Posicion_actual).
 295+ 9AC2
 296+ 9AC2 21 CB 88     	ld hl,Posicion_actual
 297+ 9AC5 34           	inc (hl)
 298+ 9AC6 08               ex af,af
 299+ 9AC7 6F           	ld l,a
 300+ 9AC8 18 DD        	jr 6B
 301+ 9ACA
 302+ 9ACA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9ACA
 304+ 9ACA 47           3 ld b,a
 305+ 9ACB 2A D5 88     	ld hl,(Indice_Sprite_izq)
 306+ 9ACE 23           2 inc hl
 307+ 9ACF 23           	inc hl
 308+ 9AD0 10 FC        	djnz 2B
 309+ 9AD2 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AD5 C9           8 ret
 311+ 9AD6
 312+ 9AD6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AD6              ;
 314+ 9AD6              ;	24/7/22
 315+ 9AD6              ;
 316+ 9AD6              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AD6              ;
 318+ 9AD6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AD6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AD6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AD6
 322+ 9AD6 3A D1 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AD9 A7           	and a
 324+ 9ADA 20 1F        	jr nz,1F
 325+ 9ADC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9ADE 32 D1 88         ld (CTRL_DESPLZ),a
 327+ 9AE1
 328+ 9AE1 21 CA 88     	ld hl,Columns
 329+ 9AE4 34           	inc (hl)
 330+ 9AE5 3A DD 88     	ld a,(Cuad_objeto)
 331+ 9AE8 E6 01        	and 1
 332+ 9AEA 28 0F        	jr z,1F
 333+ 9AEC 2A CB 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AEF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AF0 22 CB 88     	ld (Posicion_actual),hl
 336+ 9AF3 CD E6 9C     	call Genera_coordenadas
 337+ 9AF6 CD 5B 9C     	call Inc_CTRL_DESPLZ
 338+ 9AF9 18 03        	jr 2F
 339+ 9AFB CD 5B 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AFE C9           2 ret
 341+ 9AFF
 342+ 9AFF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AFF              ;
 344+ 9AFF              ;	24/7/22
 345+ 9AFF              ;
 346+ 9AFF              ;	Ciclo_completo.
 347+ 9AFF              ;
 348+ 9AFF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AFF              ;
 350+ 9AFF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AFF              ; 	Decrementamos (Columns).
 352+ 9AFF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AFF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AFF
 355+ 9AFF
 356+ 9AFF 3A D1 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B02 FE FF        	cp $ff
 358+ 9B04 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B06 E6 F0        	and $f0
 360+ 9B08 20 28        	jr nz,3F
 361+ 9B0A
 362+ 9B0A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B0A
 364+ 9B0A 3A D1 88     	ld a,(CTRL_DESPLZ)
 365+ 9B0D 47           	ld b,a
 366+ 9B0E 3E F8        	ld a,$f8
 367+ 9B10 80           	add b
 368+ 9B11 32 D1 88     	ld (CTRL_DESPLZ),a
 369+ 9B14 18 1C        	jr 3F
 370+ 9B16 21 CA 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B19 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B1A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B1B 32 D1 88     	ld (CTRL_DESPLZ),a
 374+ 9B1E 3A DD 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B21 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B23 20 0A        	jr nz,2F
 377+ 9B25 2A CB 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B28 23           	inc hl
 379+ 9B29 22 CB 88     	ld (Posicion_actual),hl
 380+ 9B2C CD E6 9C     	call Genera_coordenadas
 381+ 9B2F
 382+ 9B2F              ; Inicia el puntero de Sprite.
 383+ 9B2F
 384+ 9B2F CD 94 8C     2 call Inicia_puntero_objeto_der
 385+ 9B32 C9           3 ret
 386+ 9B33
 387+ 9B33              ; ******************************************************************************************************************************************************************************************
 388+ 9B33              ;
 389+ 9B33              ;	15/02/23
 390+ 9B33              ;
 391+ 9B33              ;	Mov_left.
 392+ 9B33              ;
 393+ 9B33              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B33              ;
 395+ 9B33              Mov_left
 396+ 9B33
 397+ 9B33 21 F3 88     	ld hl,Ctrl_0
 398+ 9B36 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B38              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B38              ; 																	; _ en el caso de que no lo haya.
 401+ 9B38 3A F3 88     	ld a,(Ctrl_0)
 402+ 9B3B CB 77        	bit 6,a
 403+ 9B3D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B3F
 405+ 9B3F CD 55 9C     	call Stop_Amadeus_left
 406+ 9B42 C8           	ret z
 407+ 9B43 20 4A        	jr nz,8F
 408+ 9B45
 409+ 9B45 3A CF 88     11 ld a,(Coordenada_X)
 410+ 9B48 A7           	and a
 411+ 9B49 20 44        	jr nz,8F
 412+ 9B4B
 413+ 9B4B 3A D1 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B4E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B4F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B51
 417+ 9B51              ; ---------- ---------- ----------
 418+ 9B51
 419+ 9B51 3A DE 88     	ld a,(Vel_left)
 420+ 9B54 FE 02        	cp 2
 421+ 9B56 28 0F        	jr z,1F
 422+ 9B58 38 04        	jr c,6F
 423+ 9B5A FE 04        	cp 4
 424+ 9B5C 28 12        	jr z,7F
 425+ 9B5E
 426+ 9B5E              ; ---------- ---------- ----------
 427+ 9B5E
 428+ 9B5E 3A D1 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B61 FE F8        	cp $f8
 430+ 9B63 20 2A        	jr nz,8F
 431+ 9B65 18 10        	jr 4F
 432+ 9B67 3A D1 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B6A FE F9        	cp $f9
 434+ 9B6C 20 21        	jr nz,8F
 435+ 9B6E 18 07        	jr 4F
 436+ 9B70 3A D1 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B73 FE FB        	cp $fb
 438+ 9B75 20 18        	jr nz,8F
 439+ 9B77
 440+ 9B77              ; ---------- ---------- ----------
 441+ 9B77
 442+ 9B77              4
 443+ 9B77 CD 7D 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B7A              ;	call Reinicio
 445+ 9B7A
 446+ 9B7A              ; ---------- ---------- ----------
 447+ 9B7A
 448+ 9B7A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B7C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B7D
 451+ 9B7D              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B7D              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B7D
 454+ 9B7D CD 96 9B     	call DESPLZ_IZQ
 455+ 9B80 C1           	pop bc
 456+ 9B81 10 F9        	djnz 5B
 457+ 9B83 2A CB 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B86 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B87 22 CB 88     	ld (Posicion_actual),hl
 460+ 9B8A CD E6 9C     	call Genera_coordenadas
 461+ 9B8D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B8F
 463+ 9B8F              ; ---------- ---------- ----------
 464+ 9B8F
 465+ 9B8F              ; Movemos, no hay recolocación.
 466+ 9B8F
 467+ 9B8F 2A CB 88     8 ld hl,(Posicion_actual)
 468+ 9B92 CD 96 9B     	call DESPLZ_IZQ
 469+ 9B95 C9           2 ret
 470+ 9B96
 471+ 9B96              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B96              ;
 473+ 9B96              ;	22/9/22
 474+ 9B96
 475+ 9B96              DESPLZ_IZQ
 476+ 9B96
 477+ 9B96 CD A5 9B     	call Desplaza_izquierda
 478+ 9B99 CD F1 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B9C CD 19 9C     	call Ciclo_completo_2
 480+ 9B9F 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BA2 CB BE        	res 7,(hl)
 482+ 9BA4 C9           	ret
 483+ 9BA5
 484+ 9BA5              Desplaza_izquierda
 485+ 9BA5
 486+ 9BA5 3A DE 88     	ld a,(Vel_left)
 487+ 9BA8 47           	ld b,a
 488+ 9BA9 2A D9 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BAC 23           1 inc hl
 490+ 9BAD 23           	inc hl
 491+ 9BAE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BB0 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BB3 CD 7D 8C     	call Extrae_address
 494+ 9BB6 22 CD 88     	ld (Puntero_objeto),hl
 495+ 9BB9
 496+ 9BB9              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BB9
 498+ 9BB9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BB9              ; Cuántos movimientos hemos hecho ??
 500+ 9BB9              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BB9
 502+ 9BB9 2A D5 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BBC EB           	ex de,hl
 504+ 9BBD A7           	and a
 505+ 9BBE ED 52        	sbc hl,de
 506+ 9BC0 CB 3D        	srl l
 507+ 9BC2 3E 08        6 ld a,8
 508+ 9BC4 95           	sub l
 509+ 9BC5 30 1E        	jr nc,3F
 510+ 9BC7
 511+ 9BC7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BC7              ; B="0".
 513+ 9BC7
 514+ 9BC7 04           4 inc b
 515+ 9BC8 3C           	inc a
 516+ 9BC9 20 FC        	jr nz,4B
 517+ 9BCB 78           	ld a,b
 518+ 9BCC 08           	ex af,af
 519+ 9BCD 2A D5 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BD0 23           5 inc hl
 521+ 9BD1 23           	inc hl
 522+ 9BD2 10 FC        	djnz 5B
 523+ 9BD4 22 D9 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BD7 CD 7D 8C     	call Extrae_address
 525+ 9BDA 22 CD 88     	ld (Puntero_objeto),hl
 526+ 9BDD
 527+ 9BDD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BDD              ; _(Posicion_actual).
 529+ 9BDD
 530+ 9BDD 21 CB 88     	ld hl,Posicion_actual
 531+ 9BE0 35           	dec (hl)
 532+ 9BE1 08           	ex af,af
 533+ 9BE2 6F           	ld l,a
 534+ 9BE3 18 DD        	jr 6B
 535+ 9BE5
 536+ 9BE5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BE5
 538+ 9BE5 47           3 ld b,a
 539+ 9BE6 2A D3 88     	ld hl,(Indice_Sprite_der)
 540+ 9BE9 23           2 inc hl
 541+ 9BEA 23           	inc hl
 542+ 9BEB 10 FC        	djnz 2B
 543+ 9BED 22 D7 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BF0 C9           8 ret
 545+ 9BF1
 546+ 9BF1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BF1              ;
 548+ 9BF1              ;	modifica_parametros_1er_DESPLZ
 549+ 9BF1              ;
 550+ 9BF1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BF1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BF1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BF1
 554+ 9BF1 3A D1 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BF4 A7           	and a
 556+ 9BF5 20 1E        	jr nz,1F
 557+ 9BF7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BF8 32 D1 88         ld (CTRL_DESPLZ),a
 559+ 9BFB 21 CA 88     	ld hl,Columns
 560+ 9BFE 34           	inc (hl)
 561+ 9BFF 3A DD 88     	ld a,(Cuad_objeto)
 562+ 9C02 E6 01        	and 1
 563+ 9C04 20 0F        	jr nz,1F
 564+ 9C06 2A CB 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C09 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C0A 22 CB 88     	ld (Posicion_actual),hl
 567+ 9C0D CD E6 9C     	call Genera_coordenadas
 568+ 9C10 CD 6C 9C     	call Dec_CTRL_DESPLZ
 569+ 9C13 18 03        	jr 2F
 570+ 9C15 CD 6C 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C18 C9           2 ret
 572+ 9C19
 573+ 9C19              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C19
 575+ 9C19 3A D1 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C1C FE F7        	cp $f7
 577+ 9C1E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C20 30 2C        	jr nc,3F
 579+ 9C22
 580+ 9C22              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C22
 582+ 9C22 06 00        	ld b,0
 583+ 9C24 04           4 inc b
 584+ 9C25 3C           	inc a
 585+ 9C26 FE F7        	cp $f7
 586+ 9C28 20 FA        	jr nz,4B
 587+ 9C2A 3E FF        	ld a,$ff
 588+ 9C2C 90           	sub b
 589+ 9C2D 32 D1 88     	ld (CTRL_DESPLZ),a
 590+ 9C30 18 1C        	jr 3F
 591+ 9C32
 592+ 9C32              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C32
 594+ 9C32 21 CA 88     1 ld hl,Columns
 595+ 9C35 35           	dec (hl)
 596+ 9C36 AF           	xor a
 597+ 9C37 32 D1 88     	ld (CTRL_DESPLZ),a
 598+ 9C3A 3A DD 88     	ld a,(Cuad_objeto)
 599+ 9C3D E6 01        	and 1
 600+ 9C3F 28 0A        	jr z,2F
 601+ 9C41 2A CB 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C44 2B           	dec hl
 603+ 9C45 22 CB 88     	ld (Posicion_actual),hl
 604+ 9C48 CD E6 9C     	call Genera_coordenadas
 605+ 9C4B
 606+ 9C4B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C4B
 608+ 9C4B CD A7 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C4E C9           3 ret
 610+ 9C4F
 611+ 9C4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C4F              ;
 613+ 9C4F              ;	19/10/22
 614+ 9C4F              ;
 615+ 9C4F              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C4F              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C4F
 618+ 9C4F 3A CF 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C52 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C54 C9           	ret
 621+ 9C55
 622+ 9C55              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C55              ;
 624+ 9C55              ;	19/10/22
 625+ 9C55              ;
 626+ 9C55              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C55              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C55
 629+ 9C55 3A CF 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C58 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C5A C9           	ret
 632+ 9C5B
 633+ 9C5B              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C5B              ;
 635+ 9C5B              ;	24/7/22
 636+ 9C5B              ;
 637+ 9C5B              ;	Inc_CTRL_DESPLZ
 638+ 9C5B              ;
 639+ 9C5B              ;
 640+ 9C5B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C5B
 642+ 9C5B 21 D1 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C5E 3A DF 88     	ld a,(Vel_right)
 644+ 9C61 A7           	and a
 645+ 9C62 28 06        	jr z,1F
 646+ 9C64 47           	ld b,a
 647+ 9C65 34           3 inc (hl)
 648+ 9C66 10 FD        	djnz 3B
 649+ 9C68 18 01        	jr 2F
 650+ 9C6A 34           1 inc (hl)
 651+ 9C6B C9           2 ret
 652+ 9C6C
 653+ 9C6C              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C6C              ;
 655+ 9C6C              ;	5/2/23
 656+ 9C6C              ;
 657+ 9C6C              ;	Dec_CTRL_DESPLZ
 658+ 9C6C              ;
 659+ 9C6C              ;
 660+ 9C6C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C6C
 662+ 9C6C 21 D1 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C6F 3A DE 88     	ld a,(Vel_left)
 664+ 9C72 A7           	and a
 665+ 9C73 28 06        	jr z,1F
 666+ 9C75 47           	ld b,a
 667+ 9C76 35           3 dec (hl)
 668+ 9C77 10 FD        	djnz 3B
 669+ 9C79 18 01        	jr 2F
 670+ 9C7B 35           1 dec (hl)
 671+ 9C7C C9           2 ret
 672+ 9C7D
 673+ 9C7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C7D
 675+ 9C7D 2A CB 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C80 01 1F 00     	ld bc,31
 677+ 9C83 A7           	and a
 678+ 9C84 ED 4A        	adc hl,bc
 679+ 9C86 22 CB 88     	ld (Posicion_actual),hl
 680+ 9C89 21 F3 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C8C CB C6        	set 0,(hl)
 682+ 9C8E C9           	ret
 683+ 9C8F
 684+ 9C8F              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C8F
 686+ 9C8F 2A CB 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C92 01 1F 00     	ld bc,31
 688+ 9C95 A7           	and a
 689+ 9C96 ED 42        	sbc hl,bc
 690+ 9C98 22 CB 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C9B 21 F3 88     	ld hl,Ctrl_0
 692+ 9C9E CB CE        	set 1,(hl)
 693+ 9CA0 C9           	ret
 694+ 9CA1
 695+ 9CA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CA1
 697+ 9CA1 24           Reaparece_abajo inc h
 698+ 9CA2 01 E0 17     	ld bc,$17e0
 699+ 9CA5 A7           	and a
 700+ 9CA6 ED 4A        	adc hl,bc
 701+ 9CA8 22 CB 88     	ld (Posicion_actual),hl
 702+ 9CAB 21 F3 88     	ld hl,Ctrl_0
 703+ 9CAE CB D6        	set 2,(hl)
 704+ 9CB0 C9           	ret
 705+ 9CB1
 706+ 9CB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CB1
 708+ 9CB1 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CB4 A7           	and a
 710+ 9CB5 ED 42        	sbc hl,bc
 711+ 9CB7 22 CB 88     	ld (Posicion_actual),hl
 712+ 9CBA 21 F3 88     	ld hl,Ctrl_0
 713+ 9CBD CB DE        	set 3,(hl)
 714+ 9CBF C9           	ret
 715+ 9CC0
 716+ 9CC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CC0              ;
 718+ 9CC0              ;	15/07/23
 719+ 9CC0
 720+ 9CC0              Reinicio
 721+ 9CC0
 722+ 9CC0              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CC0
 724+ 9CC0 AF           	xor a
 725+ 9CC1 21 F8 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CC4 CD E2 9C     	call Limpia_contenido_hl
 727+ 9CC7
 728+ 9CC7 21 CB 88     	ld hl,Posicion_actual
 729+ 9CCA CD E2 9C     	call Limpia_contenido_hl
 730+ 9CCD
 731+ 9CCD CD 12 A0     	call Inicializa_Puntero_indice_mov
 732+ 9CD0 CD 9C 9F     	call Inicia_Puntero_mov
 733+ 9CD3
 734+ 9CD3 21 FA 88     	ld hl,Incrementa_puntero
 735+ 9CD6 06 05        	ld b,5
 736+ 9CD8 77           1 ld (hl),a
 737+ 9CD9 23           	inc hl
 738+ 9CDA 10 FC        	djnz 1B
 739+ 9CDC
 740+ 9CDC 21 04 89     	ld hl,Ctrl_2
 741+ 9CDF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CE1
 743+ 9CE1 C9           	ret
 744+ 9CE2
 745+ 9CE2 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CE3 23           	inc hl
 747+ 9CE4 77           	ld (hl),a
 748+ 9CE5 C9           	ret
 749+ 9CE6
 750+ 9CE6
# file closed: Direcciones.asm
1658  9CE6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CE6              ; ------------------------------------------------------------------------
   2+ 9CE6              ;
   3+ 9CE6              ;	02/04/23
   4+ 9CE6              ;
   5+ 9CE6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CE6              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CE6              ;
   8+ 9CE6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CE6              ;
  10+ 9CE6              ;	Modifica: A,BC y DE.
  11+ 9CE6
  12+ 9CE6 C5           Genera_coordenadas push bc
  13+ 9CE7 E5           	push hl
  14+ 9CE8 D5           	push de
  15+ 9CE9
  16+ 9CE9 2A CB 88     	ld hl,(Posicion_actual)
  17+ 9CEC
  18+ 9CEC 7D           	ld a,l
  19+ 9CED E6 1F        	and $1f
  20+ 9CEF 32 CF 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CF2
  22+ 9CF2 CD 5B 99     	call calcula_tercio
  23+ 9CF5 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CF6
  25+ 9CF6 1E 00        	ld e,0
  26+ 9CF8 7D           	ld a,l
  27+ 9CF9 E6 E0        	and $e0
  28+ 9CFB 28 01        	jr z,1F
  29+ 9CFD 04           	inc b
  30+ 9CFE
  31+ 9CFE 04           1 inc b
  32+ 9CFF 05           	dec b
  33+ 9D00 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D02              ;														; _ , salimos.
  35+ 9D02 1C           3 inc e
  36+ 9D03 D6 20        	sub 32
  37+ 9D05 20 FB        	jr nz,3B
  38+ 9D07 10 F5        	djnz 1B
  39+ 9D09
  40+ 9D09 7B           2 ld a,e
  41+ 9D0A 32 D0 88     	ld (Coordenada_y),a
  42+ 9D0D
  43+ 9D0D D1           	pop de
  44+ 9D0E E1           	pop hl
  45+ 9D0F C1           	pop bc
  46+ 9D10
  47+ 9D10 C9           	ret
  48+ 9D11
  49+ 9D11              ; ------------------------------------------------------------------------
  50+ 9D11              ;	28/05/23
  51+ 9D11              ;
  52+ 9D11              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D11              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D11              ;
  55+ 9D11              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D11              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D11              ;
  58+ 9D11              ;		DE="$120d"
  59+ 9D11              ;
  60+ 9D11              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D11              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D11              ;
  63+ 9D11              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D11
  65+ 9D11              ;	Modifica: A,BC y DE.
  66+ 9D11
  67+ 9D11
  68+ 9D11              Genera_coordenadas_disparo
  69+ 9D11
  70+ 9D11              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D11
  72+ 9D11 7D           	ld a,l
  73+ 9D12 E6 1F        	and $1f
  74+ 9D14 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D15 CD 5B 99     	call calcula_tercio
  76+ 9D18 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D19 1E 00        	ld e,0
  78+ 9D1B 7D           	ld a,l
  79+ 9D1C E6 E0        	and $e0
  80+ 9D1E 28 01        	jr z,1F
  81+ 9D20 04           	inc b
  82+ 9D21 1C           1 inc e
  83+ 9D22 D6 20        	sub 32
  84+ 9D24 20 FB        	jr nz,1B
  85+ 9D26 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D28 C9           	ret
  87+ 9D29
# file closed: Genera_coordenadas.asm
1659  9D29              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D29              ; Relojes y temporizaciones.
   2+ 9D29
   3+ 9D29              ; ------------------------------------------------------
   4+ 9D29              ;
   5+ 9D29              ;	16/7/23
   6+ 9D29              ;
   7+ 9D29              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D29              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D29              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D29              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D29              ;
  12+ 9D29              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D29              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D29
  15+ 9D29              ; Disparo_entidad db 1
  16+ 9D29              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D29              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D29
  19+ 9D29              Habilita_disparos
  20+ 9D29
  21+ 9D29 7E           	ld a,(hl)
  22+ 9D2A A7           	and a
  23+ 9D2B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D2C
  25+ 9D2C EB           	ex de,hl
  26+ 9D2D
  27+ 9D2D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D2E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D2F
  30+ 9D2F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D2F
  32+ 9D2F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D30 7E           	ld a,(hl)
  34+ 9D31 23           	inc hl
  35+ 9D32 77           	ld (hl),a
  36+ 9D33
  37+ 9D33 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D34 3E 01        	ld a,1
  39+ 9D36 77           	ld (hl),a
  40+ 9D37 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1660  9D38              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D38
   2+ 9D38
   3+ 9D38              ;   07/07/23
   4+ 9D38              ;
   5+ 9D38              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D38              ;
   7+ 9D38              ;   Codificación:
   8+ 9D38              ;
   9+ 9D38              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D38              ;
  11+ 9D38              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D38              ;
  13+ 9D38              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D38              ;
  15+ 9D38              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D38              ;
  17+ 9D38              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D38              ;                               ..... %01000010 Vel_up 4
  19+ 9D38              ;                                               Vel_down 2
  20+ 9D38              ;                               ..... $42
  21+ 9D38              ;
  22+ 9D38              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D38              ;
  24+ 9D38              ;                               ..... %01000010 Vel_left 4
  25+ 9D38              ;                                               Vel_right 2
  26+ 9D38              ;                               ..... $42
  27+ 9D38              ;
  28+ 9D38              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D38              ;
  30+ 9D38              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D38              ;
  32+ 9D38              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D38              ;
  34+ 9D38              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D38              ;                                     $53
  36+ 9D38              ;
  37+ 9D38              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D38              ;
  39+ 9D38              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D38              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D38              ;
  42+ 9D38              ;                       Arriba ..... $81
  43+ 9D38              ;                       Arriba - izquierda ..... $a1
  44+ 9D38              ;                       Arriba - derecha ..... $91
  45+ 9D38              ;
  46+ 9D38              ;                       Abajo ..... $41
  47+ 9D38              ;                       Abajo - izquierda ..... $61
  48+ 9D38              ;                       Abajo - derecha ..... $51
  49+ 9D38              ;
  50+ 9D38              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D38              ;
  52+ 9D38              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D38              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D38              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D38              ;
  56+ 9D38              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D38              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D38              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D38              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D38              ;
  61+ 9D38              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D38              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D38              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D38              ;
  65+ 9D38              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D38              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D38              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D38              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D38
  70+ 9D38              ; ----- ----- ----- ----- -----
  71+ 9D38
  72+ 9D38 64 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D3A 6C 9D            defw F_1
  74+ 9D3C 76 9D            defw F_2
  75+ 9D3E 80 9D            defw Codo_abajo_derecha
  76+ 9D40 B4 9D            defw Derecha_y_subiendo
  77+ 9D42 BE 9D            defw Derecha_y_subiendo_1
  78+ 9D44 C8 9D            defw F_3
  79+ 9D46 D2 9D            defw F_4
  80+ 9D48 DC 9D            defw Derecha_y_bajando
  81+ 9D4A E6 9D            defw Derecha_y_bajando_1
  82+ 9D4C F0 9D            defw Derecha_y_bajando_2
  83+ 9D4E FA 9D            defw Codo_derecha_abajo
  84+ 9D50 2A 9E            defw Codo_abajo_izq.
  85+ 9D52 5E 9E            defw Izquierda_y_subiendo
  86+ 9D54 68 9E            defw Izquierda_y_subiendo_1
  87+ 9D56 72 9E            defw F_5
  88+ 9D58 7C 9E            defw F_6
  89+ 9D5A 86 9E            defw Izquierda_y_bajando
  90+ 9D5C 90 9E            defw Izquierda_y_bajando_1
  91+ 9D5E 9A 9E            defw Izquierda_y_bajando_2
  92+ 9D60 A4 9E            defw Codo_izquierda_abajo
  93+ 9D62 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D64
  95+ 9D64 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D68 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D6C
  98+ 9D6C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D70 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D74 08 00
 100+ 9D76 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D7A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D7E 0F FE
 102+ 9D80
 103+ 9D80 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D84 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D88 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D8C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D90 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D94 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D98 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D9C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DA0 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DA4 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DA8 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DAC 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DB0 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DB4
 117+ 9DB4 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DB8 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DBC 06 00
 119+ 9DBE
 120+ 9DBE 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DC2 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DC6 02 00
 122+ 9DC8
 123+ 9DC8 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DCC 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DD0 04 00
 125+ 9DD2 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DD6 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DDA 08 00
 127+ 9DDC
 128+ 9DDC 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DE0 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DE4 02 00
 130+ 9DE6
 131+ 9DE6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DEA 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DEE 06 00
 133+ 9DF0
 134+ 9DF0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DF4 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DF8 06 00
 136+ 9DFA
 137+ 9DFA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DFA
 139+ 9DFA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DFE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E02 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E06 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E0A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E0E 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E12 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E16 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E1A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E1E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E22 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E26 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E2A
 152+ 9E2A 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E2E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E32 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E36 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E3A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E3E 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E42 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E46 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E4A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E4E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E52 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E56 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E5A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E5E
 166+ 9E5E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E62 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E66 06 00
 168+ 9E68
 169+ 9E68 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E6C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E70 02 00
 171+ 9E72
 172+ 9E72 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E76 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E7A 04 00
 174+ 9E7C 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E80 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E84 08 00
 176+ 9E86
 177+ 9E86 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E8A 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E8E 02 00
 179+ 9E90
 180+ 9E90 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E94 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E98 06 00
 182+ 9E9A
 183+ 9E9A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E9E 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EA2 06 00
 185+ 9EA4
 186+ 9EA4 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EA8 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EAC 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EB0 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EB4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EB8 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EBC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EC0 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EC4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EC8 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9ECC 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9ED0 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9ED4
 199+ 9ED4              ; ----- ----- ----- ----- -----
 200+ 9ED4              ;
 201+ 9ED4              ;   27/06/23
 202+ 9ED4
 203+ 9ED4              Movimiento
 204+ 9ED4
 205+ 9ED4              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9ED4
 207+ 9ED4              ;    ld hl,(Posicion_actual)
 208+ 9ED4
 209+ 9ED4 3A 04 89         ld a,(Ctrl_2)
 210+ 9ED7 CB 57            bit 2,a
 211+ 9ED9 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EDB
 213+ 9EDB 2A F6 88         ld hl,(Puntero_mov)
 214+ 9EDE 7E               ld a,(hl)
 215+ 9EDF
 216+ 9EDF              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EDF
 218+ 9EDF              Inicia_desplazamiento.
 219+ 9EDF
 220+ 9EDF              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EDF
 222+ 9EDF CD D3 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EE2
 224+ 9EE2              ; Iniciamos (Repetimos_mov).
 225+ 9EE2
 226+ 9EE2 7E               ld a,(hl)
 227+ 9EE3 E6 0F            and $0f
 228+ 9EE5 32 FC 88         ld (Repetimos_desplazamiento),a
 229+ 9EE8 32 FD 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EEB
 231+ 9EEB              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EEB
 233+ 9EEB 23               inc hl
 234+ 9EEC 7E               ld a,(hl)
 235+ 9EED 32 FF 88         ld (Cola_de_desplazamiento),a
 236+ 9EF0 2B               dec hl
 237+ 9EF1
 238+ 9EF1 21 04 89         ld hl,Ctrl_2
 239+ 9EF4 CB D6            set 2,(hl)
 240+ 9EF6
 241+ 9EF6              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EF6              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EF6
 244+ 9EF6              Desplazamiento_iniciado
 245+ 9EF6
 246+ 9EF6 CD A7 9F         call Aplica_desplazamiento
 247+ 9EF9
 248+ 9EF9 3A 04 89         ld a,(Ctrl_2)
 249+ 9EFC CB 67            bit 4,a
 250+ 9EFE C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EFF
 252+ 9EFF 21 FC 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F02 35               dec (hl)
 254+ 9F03 C0               ret nz
 255+ 9F04
 256+ 9F04              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F04              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F04              ; Analiza (Cola_de_desplazamiento).
 259+ 9F04
 260+ 9F04 3A FF 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F07 A7               and a
 262+ 9F08 CC FC 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F0B 28 30            jr z,Reinicia_el_movimiento
 264+ 9F0D
 265+ 9F0D FE FF            cp $ff
 266+ 9F0F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F11
 268+ 9F11 FE FE            cp $fe
 269+ 9F13 CC 80 9F         call z,Fijamos_bucle
 270+ 9F16 28 25            jr z,Reinicia_el_movimiento
 271+ 9F18
 272+ 9F18 FE FD            cp $fd
 273+ 9F1A 20 11            jr nz,1F
 274+ 9F1C
 275+ 9F1C              ; ---
 276+ 9F1C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F1C
 278+ 9F1C 3A 04 89         ld a,(Ctrl_2)
 279+ 9F1F CB 5F            bit 3,a
 280+ 9F21 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F23
 282+ 9F23              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F23
 284+ 9F23 21 04 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F26 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F28
 287+ 9F28 CD 91 9F         call Inicia_Repetimos_movimiento
 288+ 9F2B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F2D              ; ---
 290+ 9F2D
 291+ 9F2D FE 01        1 cp 1
 292+ 9F2F CA 6A 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F32
 294+ 9F32 3D               dec a
 295+ 9F33 32 FF 88         ld (Cola_de_desplazamiento),a
 296+ 9F36
 297+ 9F36 3A FD 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F39 32 FC 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F3C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F3C C9               ret
 301+ 9F3D
 302+ 9F3D              Reinicia_el_movimiento
 303+ 9F3D
 304+ 9F3D 3A 04 89         ld a,(Ctrl_2)
 305+ 9F40 CB 5F            bit 3,a
 306+ 9F42 28 1B            jr z,2F
 307+ 9F44
 308+ 9F44              ; (Cola_de_desplazamiento)="254".
 309+ 9F44
 310+ 9F44 21 FE 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F47 35               dec (hl)
 312+ 9F48 20 15            jr nz,2F
 313+ 9F4A
 314+ 9F4A              ; Fin de las repeticiones del último movimiento.
 315+ 9F4A
 316+ 9F4A 21 04 89         ld hl,Ctrl_2
 317+ 9F4D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F4F
 319+ 9F4F 2A F6 88         ld hl,(Puntero_mov)
 320+ 9F52 23               inc hl
 321+ 9F53 23               inc hl
 322+ 9F54 23               inc hl
 323+ 9F55 22 F6 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F58              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F58 7E               ld a,(hl)
 326+ 9F59 32 FF 88         ld (Cola_de_desplazamiento),a
 327+ 9F5C
 328+ 9F5C C3 04 9F         jp Cola
 329+ 9F5F
 330+ 9F5F CD 9C 9F     2 call Inicia_Puntero_mov
 331+ 9F62
 332+ 9F62 21 04 89         ld hl,Ctrl_2
 333+ 9F65 CB 96            res 2,(hl)
 334+ 9F67
 335+ 9F67 C3 D4 9E         jp Movimiento
 336+ 9F6A
 337+ 9F6A              Siguiente_desplazamiento
 338+ 9F6A
 339+ 9F6A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F6A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F6A
 342+ 9F6A 21 04 89         ld hl,Ctrl_2
 343+ 9F6D CB 96            res 2,(hl)
 344+ 9F6F
 345+ 9F6F 2A F6 88         ld hl,(Puntero_mov)
 346+ 9F72 23               inc hl
 347+ 9F73 23               inc hl
 348+ 9F74 22 F6 88         ld (Puntero_mov),hl
 349+ 9F77
 350+ 9F77 7E               ld a,(hl)
 351+ 9F78 A7               and a
 352+ 9F79 CC FC 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F7C CA 3D 9F         jp z,Reinicia_el_movimiento
 354+ 9F7F
 355+ 9F7F C9               ret
 356+ 9F80              ; Subrutinas -----------------------------------------
 357+ 9F80              ; ---------- --------- --------- ---------- ----------
 358+ 9F80              ;
 359+ 9F80              ;   24/07/23
 360+ 9F80              ;
 361+ 9F80              ;   Fijamos_bucle
 362+ 9F80              ;
 363+ 9F80              ;
 364+ 9F80
 365+ 9F80              Fijamos_bucle
 366+ 9F80
 367+ 9F80 3A FA 88         ld a,(Incrementa_puntero)
 368+ 9F83 3C               inc a
 369+ 9F84 32 FB 88         ld (Incrementa_puntero_backup),a
 370+ 9F87
 371+ 9F87 CD FC 9F         call Incrementa_Puntero_indice_mov
 372+ 9F8A 2A F4 88         ld hl,(Puntero_indice_mov)
 373+ 9F8D 22 F8 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F90 C9               ret
 375+ 9F91
 376+ 9F91              ; ---------- --------- --------- ---------- ----------
 377+ 9F91              ;
 378+ 9F91              ;   07/7/23
 379+ 9F91              ;
 380+ 9F91              ;   Inicia_Repetimos_movimiento
 381+ 9F91              ;
 382+ 9F91              ;
 383+ 9F91
 384+ 9F91              Inicia_Repetimos_movimiento
 385+ 9F91
 386+ 9F91              ; Iniciamos (Repetimos_movimiento).
 387+ 9F91
 388+ 9F91 DD 2A F6 88      ld ix,(Puntero_mov)
 389+ 9F95 DD 7E 02         ld a,(ix+2)
 390+ 9F98 32 FE 88         ld (Repetimos_movimiento),a
 391+ 9F9B
 392+ 9F9B C9               ret
 393+ 9F9C
 394+ 9F9C              ; ---------- --------- --------- ---------- ----------
 395+ 9F9C              ;
 396+ 9F9C              ;   26/6/23
 397+ 9F9C              ;
 398+ 9F9C              ;   Inicia_Puntero_mov
 399+ 9F9C              ;
 400+ 9F9C              ;
 401+ 9F9C
 402+ 9F9C 2A F4 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F9F 5E               ld e,(hl)
 404+ 9FA0 23               inc hl
 405+ 9FA1 56               ld d,(hl)
 406+ 9FA2 EB               ex de,hl
 407+ 9FA3 22 F6 88         ld (Puntero_mov),hl
 408+ 9FA6 C9               ret
 409+ 9FA7
 410+ 9FA7              ; ---------- --------- --------- ---------- ----------
 411+ 9FA7              ;
 412+ 9FA7              ;   27/06/23
 413+ 9FA7              ;
 414+ 9FA7              ;   Aplica_movimiento.
 415+ 9FA7
 416+ 9FA7              Aplica_desplazamiento
 417+ 9FA7
 418+ 9FA7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9FA7
 420+ 9FA7 2A F6 88         ld hl, (Puntero_mov)
 421+ 9FAA
 422+ 9FAA 7E               ld a,(hl)
 423+ 9FAB E6 F0            and $f0
 424+ 9FAD C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9FAE
 426+ 9FAE CB 7E            bit 7,(hl)
 427+ 9FB0 28 03            jr z,1F
 428+ 9FB2 CD D2 99         call Mov_up
 429+ 9FB5 2A F6 88     1 ld hl, (Puntero_mov)
 430+ 9FB8 CB 76            bit 6,(hl)
 431+ 9FBA 28 03            jr z,2F
 432+ 9FBC CD A1 99         call Mov_down
 433+ 9FBF 2A F6 88     2 ld hl, (Puntero_mov)
 434+ 9FC2 CB 6E            bit 5,(hl)
 435+ 9FC4 28 03            jr z,3F
 436+ 9FC6 CD 33 9B         call Mov_left
 437+ 9FC9 2A F6 88     3 ld hl, (Puntero_mov)
 438+ 9FCC CB 66            bit 4,(hl)
 439+ 9FCE C8               ret z
 440+ 9FCF CD 15 9A         call Mov_right
 441+ 9FD2 C9               ret
 442+ 9FD3
 443+ 9FD3              ; ---------- --------- --------- ---------- ----------
 444+ 9FD3              ;
 445+ 9FD3              ;   26/06/23
 446+ 9FD3              ;
 447+ 9FD3              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FD3
 449+ 9FD3              Ajusta_velocidad_desplazamiento
 450+ 9FD3
 451+ 9FD3              ; 1er byte de la cadena de movimiento.
 452+ 9FD3              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FD3
 454+ 9FD3 CD F1 9F         call Extrae_nibble_alto
 455+ 9FD6
 456+ 9FD6 32 E0 88         ld (Vel_up),a
 457+ 9FD9 79               ld a,c
 458+ 9FDA E6 0F            and $0f
 459+ 9FDC 32 E1 88         ld (Vel_down),a
 460+ 9FDF
 461+ 9FDF              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FDF              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FDF
 464+ 9FDF 23               inc hl
 465+ 9FE0 CD F1 9F         call Extrae_nibble_alto
 466+ 9FE3
 467+ 9FE3 32 DE 88         ld (Vel_left),a
 468+ 9FE6 79               ld a,c
 469+ 9FE7 E6 0F            and $0f
 470+ 9FE9 32 DF 88         ld (Vel_right),a
 471+ 9FEC
 472+ 9FEC              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FEC
 474+ 9FEC 23               inc hl
 475+ 9FED 22 F6 88         ld (Puntero_mov),hl
 476+ 9FF0 C9               ret
 477+ 9FF1
 478+ 9FF1 06 04        Extrae_nibble_alto ld b,4
 479+ 9FF3 7E               ld a,(hl)
 480+ 9FF4 4F               ld c,a
 481+ 9FF5 E6 F0            and $f0
 482+ 9FF7 CB 3F        1 srl a
 483+ 9FF9 10 FC            djnz 1B
 484+ 9FFB C9               ret
 485+ 9FFC
 486+ 9FFC              ; ---------- --------- --------- ---------- ----------
 487+ 9FFC              ;
 488+ 9FFC              ;   5/7/23
 489+ 9FFC              ;
 490+ 9FFC              ;   Incrementa_Puntero_indice_mov
 491+ 9FFC
 492+ 9FFC              Incrementa_Puntero_indice_mov
 493+ 9FFC
 494+ 9FFC 21 FA 88         ld hl,Incrementa_puntero
 495+ 9FFF 34               inc (hl)
 496+ A000
 497+ A000 2A F4 88         ld hl,(Puntero_indice_mov)
 498+ A003 01 02 00         ld bc,2
 499+ A006 A7               and a
 500+ A007 09               add hl,bc
 501+ A008 22 F4 88         ld (Puntero_indice_mov),hl
 502+ A00B
 503+ A00B 7E               ld a,(hl)
 504+ A00C A7               and a
 505+ A00D
 506+ A00D              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ A00D
 508+ A00D              ;    jr z,$
 509+ A00D
 510+ A00D              ;! Reinicia el Patrón de movimiento.
 511+ A00D
 512+ A00D CC 12 A0         call z,Inicializa_Puntero_indice_mov
 513+ A010
 514+ A010 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ A011
 516+ A011 C9               ret
 517+ A012
 518+ A012
 519+ A012              ; ---------- --------- --------- ---------- ----------
 520+ A012              ;
 521+ A012              ;   24/07/23
 522+ A012              ;
 523+ A012              ;   Inicializa_Puntero_indice_mov
 524+ A012
 525+ A012              Inicializa_Puntero_indice_mov
 526+ A012
 527+ A012              ; Existe etiqueta de bucle principal???
 528+ A012
 529+ A012 2A F8 88         ld hl,(Puntero_indice_mov_bucle)
 530+ A015 24               inc h
 531+ A016 25               dec h
 532+ A017 28 05            jr z,2F
 533+ A019
 534+ A019 22 F4 88         ld (Puntero_indice_mov),hl
 535+ A01C 18 14            jr 3F
 536+ A01E
 537+ A01E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A01E
 539+ A01E 3A FA 88     2 ld a,(Incrementa_puntero)
 540+ A021 47               ld b,a
 541+ A022
 542+ A022 2A F4 88         ld hl,(Puntero_indice_mov)
 543+ A025 2B           1 dec hl
 544+ A026 2B               dec hl
 545+ A027 10 FC            djnz 1B
 546+ A029 22 F4 88         ld (Puntero_indice_mov),hl
 547+ A02C
 548+ A02C AF               xor a
 549+ A02D 32 FA 88         ld (Incrementa_puntero),a
 550+ A030 18 06            jr 4F
 551+ A032
 552+ A032 3A FB 88     3 ld a,(Incrementa_puntero_backup)
 553+ A035 32 FA 88         ld (Incrementa_puntero),a
 554+ A038 C9           4 ret
 555+ A039
 556+ A039
 557+ A039
# file closed: Patrones_de_mov.asm
1661  A039              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A039              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A039              ;
   3+ A039              ;	4/9/23
   4+ A039              ;
   5+ A039              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A039
   7+ A039              ;	ADC HL,SP	LD (addr),SP
   8+ A039              ;	ADD HL,SP	LD SP,(addr)
   9+ A039              ;	ADD IX,SP	LD SP,nn
  10+ A039              ; 	ADD IY,SP	LD SP,HL
  11+ A039              ;				LD SP,IX
  12+ A039              ;	DEC SP		LD SP,IY
  13+ A039
  14+ A039              ;	EX (SP),HL
  15+ A039              ;	EX (SP),IX
  16+ A039              ;	EX (SP),IY
  17+ A039
  18+ A039              ;	INC SP
  19+ A039
  20+ A039                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 18 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E9 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 06 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 20 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F3 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 26 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 06 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 20 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F3 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 26 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 18 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1E 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 18 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 3C 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   3/08/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 127+ 72EC              ;   Vaciamos Album_de_fotos.
 128+ 72EC
 129+ 72EC              ;   Album_de_fotos. Contiene datos ???
 130+ 72EC
 131+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 132+ 72EF 7E               ld a,(hl)
 133+ 72F0 A7               and a
 134+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 135+ 72F3
 136+ 72F3 2A 22 89         ld hl,(End_Snapshot)
 137+ 72F6 01 00 70         ld bc,Album_de_fotos
 138+ 72F9 11 01 70         ld de,Album_de_fotos+1
 139+ 72FC AF               xor a
 140+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 141+ 72FE
 142+ 72FE CD 8E 73         call Limpia_album
 143+ 7301
 144+ 7301 21 00 00         ld hl,0
 145+ 7304 22 22 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 146+ 7307
 147+ 7307              ; ----- ----- ----- -----
 148+ 7307
 149+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 150+ 7307
 151+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 152+ 730A 7E               ld a,(hl)
 153+ 730B A7               and a
 154+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 155+ 730E              ;                               ; _ información del album2 al album1.
 156+ 730E
 157+ 730E              ; ----- ----- ----- -----
 158+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 159+ 730E
 160+ 730E 2A 28 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 161+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 162+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 163+ 7317
 164+ 7317 CD 8E 73         call Limpia_album
 165+ 731A
 166+ 731A              ;   Calculamos (End_Snapshot)
 167+ 731A
 168+ 731A A7               and a
 169+ 731B ED 4A            adc hl,bc
 170+ 731D 22 22 89         ld (End_Snapshot),hl
 171+ 7320
 172+ 7320              ;   Limpiamos Album_de_fotos_1.
 173+ 7320
 174+ 7320 2A 28 89         ld hl,(End_Snapshot_1)
 175+ 7323 01 54 70         ld bc,Album_de_fotos_1
 176+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 177+ 7329 AF               xor a
 178+ 732A 02               ld (bc),a
 179+ 732B
 180+ 732B CD 8E 73         call Limpia_album
 181+ 732E
 182+ 732E 21 00 00         ld hl,0
 183+ 7331 22 28 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 184+ 7334
 185+ 7334              ; ----- ----- ----- -----
 186+ 7334
 187+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 188+ 7334
 189+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 190+ 7337 7E               ld a,(hl)
 191+ 7338 A7               and a
 192+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 193+ 733B              ;                               ; _ información del album3 al album2.
 194+ 733B              ; ----- ----- ----- -----
 195+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 196+ 733B
 197+ 733B 2A 2C 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 198+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 199+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 200+ 7344
 201+ 7344 CD 8E 73         call Limpia_album
 202+ 7347
 203+ 7347              ;   Calculamos (End_Snapshot_1):
 204+ 7347
 205+ 7347 A7               and a
 206+ 7348 ED 4A            adc hl,bc
 207+ 734A 22 28 89         ld (End_Snapshot_1),hl
 208+ 734D
 209+ 734D              ;   Limpiamos Album_de_fotos_2.
 210+ 734D
 211+ 734D 2A 2C 89         ld hl,(End_Snapshot_2)
 212+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 213+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 214+ 7356 AF               xor a
 215+ 7357 02               ld (bc),a
 216+ 7358
 217+ 7358 CD 8E 73         call Limpia_album
 218+ 735B
 219+ 735B 21 00 00         ld hl,0
 220+ 735E 22 2C 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 221+ 7361
 222+ 7361              ; ----- ----- ----- -----
 223+ 7361
 224+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 225+ 7361
 226+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 227+ 7364 7E               ld a,(hl)
 228+ 7365 A7               and a
 229+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 230+ 7367
 231+ 7367              ; ----- ----- ----- -----
 232+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 233+ 7367
 234+ 7367 2A 30 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 235+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 236+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 237+ 7370
 238+ 7370 CD 8E 73         call Limpia_album
 239+ 7373
 240+ 7373              ;   Calculamos (End_Snapshot_2):
 241+ 7373
 242+ 7373 A7               and a
 243+ 7374 ED 4A            adc hl,bc
 244+ 7376 22 2C 89         ld (End_Snapshot_2),hl
 245+ 7379
 246+ 7379              ;   Limpiamos Album_de_fotos_3.
 247+ 7379
 248+ 7379 2A 30 89         ld hl,(End_Snapshot_3)
 249+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 250+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 251+ 7382 AF               xor a
 252+ 7383 02               ld (bc),a
 253+ 7384
 254+ 7384 CD 8E 73         call Limpia_album
 255+ 7387
 256+ 7387 21 00 00         ld hl,0
 257+ 738A 22 30 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 258+ 738D C9               ret
 259+ 738E
 260+ 738E              ; ----------------------------------------------------
 261+ 738E              ;
 262+ 738E              ;   10/8/23
 263+ 738E              ;
 264+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 265+ 738E              ;
 266+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 267+ 738E              ;           BC ..... Dirección de inicio del álbum.
 268+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 269+ 738E
 270+ 738E              ;    ld hl,(End_Snapshot)
 271+ 738E              ;    ld bc,Album_de_fotos
 272+ 738E              ;    ld de,Album_de_fotos+1
 273+ 738E
 274+ 738E              ;   MODIFICA: A,HL,BC y DE.
 275+ 738E
 276+ 738E              Limpia_album
 277+ 738E D5               push de                     ; Guardo DESTINO.
 278+ 738F C5               push bc                     ; Guardo ORIGEN.
 279+ 7390 ED 42            sbc hl,bc
 280+ 7392 4D               ld c,l
 281+ 7393 44               ld b,h
 282+ 7394 E1               pop hl
 283+ 7395 C5               push bc
 284+ 7396 ED B0            ldir
 285+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 286+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 287+ 739A C9               ret                         ; _ a otro).
 288+ 739B              ;
 289+ 739B
 290+ 739B              ; -----------------------------------------------
 291+ 739B
 292+ 739B
 293+ 739B
 294+ 739B
 295+ 739B
# file closed: Guarda_foto_registros.asm
1662  739B
1663  739B              	SAVESNA "Pruebas.sna", START
1664  739B
1665  739B
1666  739B
1667  739B
# file closed: Banco_de_pruebas.asm
